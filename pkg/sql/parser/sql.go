// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:979
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTEE = lexbase.GRANTEE
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCLUDE_ALL_SECONDARY_TENANTS = lexbase.INCLUDE_ALL_SECONDARY_TENANTS
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const INVISIBLE = lexbase.INVISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTEE",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCLUDE_ALL_SECONDARY_TENANTS",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"INVISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15905

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1926,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 64,
	286, 587,
	-2, 0,
	-1, 76,
	8, 1060,
	29, 1060,
	654, 1060,
	655, 1060,
	-2, 0,
	-1, 77,
	8, 1060,
	29, 1060,
	654, 1060,
	655, 1060,
	-2, 0,
	-1, 80,
	1, 1773,
	140, 1773,
	273, 1773,
	361, 1773,
	424, 1773,
	434, 1773,
	635, 1773,
	667, 1773,
	-2, 0,
	-1, 81,
	1, 1773,
	667, 1773,
	-2, 0,
	-1, 87,
	266, 296,
	568, 296,
	-2, 0,
	-1, 101,
	205, 487,
	252, 1646,
	268, 1646,
	286, 487,
	426, 487,
	438, 1389,
	482, 487,
	499, 1389,
	552, 1389,
	581, 487,
	610, 1389,
	-2, 0,
	-1, 108,
	142, 1926,
	261, 1926,
	593, 1926,
	594, 1926,
	-2, 0,
	-1, 126,
	162, 1897,
	183, 1897,
	196, 1897,
	264, 1897,
	300, 1897,
	374, 1897,
	385, 1897,
	587, 1897,
	-2, 1868,
	-1, 170,
	170, 1199,
	284, 1199,
	429, 1160,
	504, 1160,
	551, 1160,
	571, 1199,
	573, 1160,
	-2, 0,
	-1, 175,
	4, 1928,
	21, 1928,
	22, 1928,
	23, 1928,
	24, 1928,
	25, 1928,
	26, 1928,
	27, 1928,
	28, 1928,
	30, 1928,
	31, 1928,
	37, 1928,
	41, 1928,
	43, 1928,
	44, 1928,
	45, 1928,
	47, 1928,
	48, 1928,
	49, 1928,
	50, 1928,
	51, 1928,
	52, 1928,
	53, 1928,
	54, 1928,
	55, 1928,
	57, 1928,
	58, 1928,
	59, 1928,
	60, 1928,
	62, 1928,
	63, 1928,
	64, 1928,
	65, 1928,
	66, 1928,
	67, 1928,
	68, 1928,
	69, 1928,
	73, 1928,
	74, 1928,
	75, 1928,
	76, 1928,
	78, 1928,
	79, 1928,
	80, 1928,
	84, 1928,
	85, 1928,
	86, 1928,
	87, 1928,
	88, 1928,
	89, 1928,
	90, 1928,
	91, 1928,
	94, 1928,
	95, 1928,
	96, 1928,
	97, 1928,
	98, 1928,
	99, 1928,
	101, 1928,
	103, 1928,
	104, 1928,
	105, 1928,
	106, 1928,
	107, 1928,
	108, 1928,
	109, 1928,
	111, 1928,
	112, 1928,
	113, 1928,
	115, 1928,
	116, 1928,
	117, 1928,
	125, 1928,
	126, 1928,
	127, 1928,
	128, 1928,
	129, 1928,
	131, 1928,
	132, 1928,
	133, 1928,
	134, 1928,
	136, 1928,
	137, 1928,
	138, 1928,
	139, 1928,
	141, 1928,
	142, 1928,
	143, 1928,
	144, 1928,
	146, 1928,
	147, 1928,
	148, 1928,
	151, 1928,
	152, 1928,
	153, 1928,
	155, 1928,
	156, 1928,
	157, 1928,
	159, 1928,
	160, 1928,
	161, 1928,
	163, 1928,
	164, 1928,
	165, 1928,
	166, 1928,
	167, 1928,
	168, 1928,
	169, 1928,
	170, 1928,
	171, 1928,
	172, 1928,
	173, 1928,
	174, 1928,
	175, 1928,
	176, 1928,
	177, 1928,
	178, 1928,
	179, 1928,
	180, 1928,
	182, 1928,
	188, 1928,
	189, 1928,
	190, 1928,
	191, 1928,
	195, 1928,
	197, 1928,
	198, 1928,
	199, 1928,
	201, 1928,
	202, 1928,
	205, 1928,
	206, 1928,
	207, 1928,
	208, 1928,
	209, 1928,
	210, 1928,
	211, 1928,
	212, 1928,
	213, 1928,
	214, 1928,
	215, 1928,
	216, 1928,
	217, 1928,
	218, 1928,
	220, 1928,
	221, 1928,
	222, 1928,
	224, 1928,
	225, 1928,
	227, 1928,
	228, 1928,
	229, 1928,
	230, 1928,
	231, 1928,
	232, 1928,
	233, 1928,
	234, 1928,
	235, 1928,
	236, 1928,
	237, 1928,
	239, 1928,
	240, 1928,
	241, 1928,
	243, 1928,
	244, 1928,
	245, 1928,
	246, 1928,
	247, 1928,
	248, 1928,
	252, 1928,
	253, 1928,
	254, 1928,
	255, 1928,
	258, 1928,
	259, 1928,
	260, 1928,
	261, 1928,
	262, 1928,
	263, 1928,
	265, 1928,
	267, 1928,
	268, 1928,
	269, 1928,
	271, 1928,
	273, 1928,
	274, 1928,
	275, 1928,
	277, 1928,
	281, 1928,
	282, 1928,
	283, 1928,
	284, 1928,
	285, 1928,
	286, 1928,
	287, 1928,
	289, 1928,
	290, 1928,
	291, 1928,
	293, 1928,
	294, 1928,
	295, 1928,
	297, 1928,
	298, 1928,
	301, 1928,
	302, 1928,
	303, 1928,
	304, 1928,
	305, 1928,
	306, 1928,
	307, 1928,
	310, 1928,
	311, 1928,
	312, 1928,
	313, 1928,
	315, 1928,
	316, 1928,
	317, 1928,
	318, 1928,
	319, 1928,
	320, 1928,
	321, 1928,
	322, 1928,
	323, 1928,
	324, 1928,
	325, 1928,
	326, 1928,
	327, 1928,
	328, 1928,
	329, 1928,
	330, 1928,
	331, 1928,
	332, 1928,
	333, 1928,
	334, 1928,
	335, 1928,
	336, 1928,
	337, 1928,
	339, 1928,
	341, 1928,
	342, 1928,
	343, 1928,
	344, 1928,
	345, 1928,
	346, 1928,
	347, 1928,
	348, 1928,
	349, 1928,
	350, 1928,
	351, 1928,
	352, 1928,
	353, 1928,
	354, 1928,
	355, 1928,
	356, 1928,
	357, 1928,
	359, 1928,
	360, 1928,
	362, 1928,
	364, 1928,
	365, 1928,
	366, 1928,
	367, 1928,
	369, 1928,
	370, 1928,
	371, 1928,
	372, 1928,
	373, 1928,
	376, 1928,
	378, 1928,
	380, 1928,
	381, 1928,
	382, 1928,
	383, 1928,
	386, 1928,
	387, 1928,
	388, 1928,
	390, 1928,
	392, 1928,
	393, 1928,
	394, 1928,
	395, 1928,
	396, 1928,
	397, 1928,
	398, 1928,
	399, 1928,
	400, 1928,
	401, 1928,
	402, 1928,
	403, 1928,
	404, 1928,
	405, 1928,
	407, 1928,
	408, 1928,
	409, 1928,
	410, 1928,
	411, 1928,
	412, 1928,
	413, 1928,
	414, 1928,
	415, 1928,
	416, 1928,
	417, 1928,
	418, 1928,
	419, 1928,
	420, 1928,
	421, 1928,
	423, 1928,
	424, 1928,
	425, 1928,
	427, 1928,
	428, 1928,
	429, 1928,
	430, 1928,
	431, 1928,
	432, 1928,
	433, 1928,
	434, 1928,
	435, 1928,
	436, 1928,
	437, 1928,
	438, 1928,
	439, 1928,
	440, 1928,
	442, 1928,
	444, 1928,
	445, 1928,
	446, 1928,
	452, 1928,
	453, 1928,
	454, 1928,
	456, 1928,
	457, 1928,
	458, 1928,
	459, 1928,
	460, 1928,
	461, 1928,
	462, 1928,
	463, 1928,
	464, 1928,
	465, 1928,
	466, 1928,
	468, 1928,
	469, 1928,
	470, 1928,
	471, 1928,
	472, 1928,
	474, 1928,
	475, 1928,
	476, 1928,
	477, 1928,
	478, 1928,
	479, 1928,
	480, 1928,
	482, 1928,
	483, 1928,
	484, 1928,
	485, 1928,
	486, 1928,
	487, 1928,
	488, 1928,
	489, 1928,
	490, 1928,
	491, 1928,
	492, 1928,
	493, 1928,
	494, 1928,
	495, 1928,
	496, 1928,
	497, 1928,
	499, 1928,
	500, 1928,
	501, 1928,
	502, 1928,
	503, 1928,
	504, 1928,
	506, 1928,
	507, 1928,
	508, 1928,
	509, 1928,
	510, 1928,
	511, 1928,
	512, 1928,
	514, 1928,
	515, 1928,
	516, 1928,
	517, 1928,
	518, 1928,
	519, 1928,
	520, 1928,
	521, 1928,
	523, 1928,
	525, 1928,
	526, 1928,
	527, 1928,
	528, 1928,
	529, 1928,
	530, 1928,
	531, 1928,
	532, 1928,
	533, 1928,
	534, 1928,
	535, 1928,
	536, 1928,
	537, 1928,
	538, 1928,
	539, 1928,
	540, 1928,
	541, 1928,
	542, 1928,
	543, 1928,
	544, 1928,
	545, 1928,
	547, 1928,
	548, 1928,
	550, 1928,
	551, 1928,
	553, 1928,
	554, 1928,
	555, 1928,
	556, 1928,
	557, 1928,
	558, 1928,
	560, 1928,
	561, 1928,
	563, 1928,
	564, 1928,
	565, 1928,
	566, 1928,
	567, 1928,
	569, 1928,
	571, 1928,
	572, 1928,
	573, 1928,
	574, 1928,
	575, 1928,
	576, 1928,
	577, 1928,
	578, 1928,
	580, 1928,
	581, 1928,
	582, 1928,
	583, 1928,
	584, 1928,
	585, 1928,
	586, 1928,
	589, 1928,
	590, 1928,
	591, 1928,
	592, 1928,
	593, 1928,
	594, 1928,
	595, 1928,
	596, 1928,
	597, 1928,
	599, 1928,
	602, 1928,
	603, 1928,
	604, 1928,
	605, 1928,
	606, 1928,
	607, 1928,
	609, 1928,
	610, 1928,
	611, 1928,
	612, 1928,
	613, 1928,
	614, 1928,
	615, 1928,
	616, 1928,
	617, 1928,
	618, 1928,
	619, 1928,
	620, 1928,
	621, 1928,
	626, 1928,
	627, 1928,
	628, 1928,
	629, 1928,
	630, 1928,
	631, 1928,
	-2, 0,
	-1, 177,
	1, 1773,
	667, 1773,
	670, 1773,
	-2, 0,
	-1, 178,
	1, 1773,
	568, 1773,
	667, 1773,
	670, 1773,
	-2, 0,
	-1, 214,
	162, 1896,
	183, 1896,
	196, 1896,
	264, 1896,
	300, 1896,
	374, 1896,
	385, 1896,
	587, 1896,
	-2, 1871,
	-1, 275,
	4, 1935,
	5, 1935,
	6, 1935,
	7, 1935,
	8, 1935,
	9, 1935,
	10, 1935,
	21, 1935,
	22, 1935,
	23, 1935,
	24, 1935,
	25, 1935,
	26, 1935,
	27, 1935,
	28, 1935,
	30, 1935,
	31, 1935,
	37, 1935,
	38, 1935,
	41, 1935,
	43, 1935,
	44, 1935,
	45, 1935,
	46, 1935,
	47, 1935,
	48, 1935,
	49, 1935,
	50, 1935,
	51, 1935,
	52, 1935,
	53, 1935,
	54, 1935,
	55, 1935,
	57, 1935,
	58, 1935,
	59, 1935,
	60, 1935,
	62, 1935,
	63, 1935,
	64, 1935,
	65, 1935,
	66, 1935,
	67, 1935,
	68, 1935,
	69, 1935,
	70, 1935,
	71, 1935,
	72, 1935,
	73, 1935,
	74, 1935,
	75, 1935,
	76, 1935,
	78, 1935,
	79, 1935,
	80, 1935,
	82, 1935,
	84, 1935,
	85, 1935,
	86, 1935,
	87, 1935,
	88, 1935,
	89, 1935,
	90, 1935,
	91, 1935,
	94, 1935,
	95, 1935,
	96, 1935,
	97, 1935,
	98, 1935,
	99, 1935,
	101, 1935,
	103, 1935,
	104, 1935,
	105, 1935,
	106, 1935,
	107, 1935,
	108, 1935,
	109, 1935,
	111, 1935,
	112, 1935,
	113, 1935,
	114, 1935,
	115, 1935,
	116, 1935,
	117, 1935,
	118, 1935,
	119, 1935,
	120, 1935,
	121, 1935,
	122, 1935,
	123, 1935,
	124, 1935,
	125, 1935,
	126, 1935,
	127, 1935,
	128, 1935,
	129, 1935,
	130, 1935,
	131, 1935,
	132, 1935,
	133, 1935,
	134, 1935,
	135, 1935,
	136, 1935,
	137, 1935,
	138, 1935,
	139, 1935,
	141, 1935,
	142, 1935,
	143, 1935,
	144, 1935,
	146, 1935,
	147, 1935,
	148, 1935,
	151, 1935,
	152, 1935,
	153, 1935,
	155, 1935,
	156, 1935,
	157, 1935,
	159, 1935,
	160, 1935,
	161, 1935,
	163, 1935,
	164, 1935,
	165, 1935,
	166, 1935,
	167, 1935,
	168, 1935,
	169, 1935,
	170, 1935,
	171, 1935,
	172, 1935,
	173, 1935,
	174, 1935,
	175, 1935,
	176, 1935,
	177, 1935,
	178, 1935,
	179, 1935,
	180, 1935,
	181, 1935,
	182, 1935,
	188, 1935,
	189, 1935,
	190, 1935,
	191, 1935,
	195, 1935,
	197, 1935,
	198, 1935,
	199, 1935,
	201, 1935,
	202, 1935,
	204, 1935,
	205, 1935,
	206, 1935,
	207, 1935,
	208, 1935,
	209, 1935,
	210, 1935,
	211, 1935,
	212, 1935,
	213, 1935,
	214, 1935,
	215, 1935,
	216, 1935,
	217, 1935,
	218, 1935,
	220, 1935,
	221, 1935,
	222, 1935,
	224, 1935,
	225, 1935,
	227, 1935,
	228, 1935,
	229, 1935,
	230, 1935,
	231, 1935,
	232, 1935,
	233, 1935,
	234, 1935,
	235, 1935,
	236, 1935,
	237, 1935,
	238, 1935,
	239, 1935,
	240, 1935,
	241, 1935,
	243, 1935,
	244, 1935,
	245, 1935,
	246, 1935,
	247, 1935,
	248, 1935,
	252, 1935,
	253, 1935,
	254, 1935,
	255, 1935,
	257, 1935,
	258, 1935,
	259, 1935,
	260, 1935,
	261, 1935,
	262, 1935,
	263, 1935,
	265, 1935,
	267, 1935,
	268, 1935,
	269, 1935,
	270, 1935,
	271, 1935,
	272, 1935,
	273, 1935,
	274, 1935,
	275, 1935,
	276, 1935,
	277, 1935,
	281, 1935,
	282, 1935,
	283, 1935,
	284, 1935,
	285, 1935,
	286, 1935,
	287, 1935,
	289, 1935,
	290, 1935,
	291, 1935,
	293, 1935,
	294, 1935,
	295, 1935,
	296, 1935,
	297, 1935,
	298, 1935,
	299, 1935,
	301, 1935,
	302, 1935,
	303, 1935,
	304, 1935,
	305, 1935,
	306, 1935,
	307, 1935,
	308, 1935,
	309, 1935,
	310, 1935,
	311, 1935,
	312, 1935,
	313, 1935,
	315, 1935,
	316, 1935,
	317, 1935,
	318, 1935,
	319, 1935,
	320, 1935,
	321, 1935,
	322, 1935,
	323, 1935,
	324, 1935,
	325, 1935,
	326, 1935,
	327, 1935,
	328, 1935,
	329, 1935,
	330, 1935,
	331, 1935,
	332, 1935,
	333, 1935,
	334, 1935,
	335, 1935,
	336, 1935,
	337, 1935,
	339, 1935,
	340, 1935,
	341, 1935,
	342, 1935,
	343, 1935,
	344, 1935,
	345, 1935,
	346, 1935,
	347, 1935,
	348, 1935,
	349, 1935,
	350, 1935,
	351, 1935,
	352, 1935,
	353, 1935,
	354, 1935,
	355, 1935,
	356, 1935,
	357, 1935,
	358, 1935,
	359, 1935,
	360, 1935,
	361, 1935,
	362, 1935,
	363, 1935,
	364, 1935,
	365, 1935,
	366, 1935,
	367, 1935,
	368, 1935,
	369, 1935,
	370, 1935,
	371, 1935,
	372, 1935,
	373, 1935,
	376, 1935,
	378, 1935,
	381, 1935,
	382, 1935,
	383, 1935,
	386, 1935,
	387, 1935,
	388, 1935,
	389, 1935,
	390, 1935,
	391, 1935,
	392, 1935,
	393, 1935,
	394, 1935,
	395, 1935,
	396, 1935,
	397, 1935,
	398, 1935,
	399, 1935,
	400, 1935,
	401, 1935,
	402, 1935,
	403, 1935,
	404, 1935,
	405, 1935,
	407, 1935,
	408, 1935,
	409, 1935,
	410, 1935,
	411, 1935,
	412, 1935,
	413, 1935,
	414, 1935,
	415, 1935,
	416, 1935,
	417, 1935,
	418, 1935,
	419, 1935,
	420, 1935,
	421, 1935,
	423, 1935,
	424, 1935,
	425, 1935,
	427, 1935,
	428, 1935,
	429, 1935,
	430, 1935,
	431, 1935,
	432, 1935,
	433, 1935,
	434, 1935,
	435, 1935,
	436, 1935,
	437, 1935,
	438, 1935,
	439, 1935,
	440, 1935,
	442, 1935,
	444, 1935,
	445, 1935,
	446, 1935,
	452, 1935,
	453, 1935,
	454, 1935,
	456, 1935,
	457, 1935,
	458, 1935,
	459, 1935,
	460, 1935,
	461, 1935,
	462, 1935,
	463, 1935,
	464, 1935,
	465, 1935,
	466, 1935,
	468, 1935,
	469, 1935,
	470, 1935,
	471, 1935,
	472, 1935,
	473, 1935,
	474, 1935,
	475, 1935,
	476, 1935,
	477, 1935,
	478, 1935,
	479, 1935,
	480, 1935,
	482, 1935,
	483, 1935,
	484, 1935,
	485, 1935,
	486, 1935,
	487, 1935,
	488, 1935,
	489, 1935,
	490, 1935,
	491, 1935,
	492, 1935,
	493, 1935,
	494, 1935,
	495, 1935,
	496, 1935,
	497, 1935,
	499, 1935,
	500, 1935,
	501, 1935,
	502, 1935,
	503, 1935,
	504, 1935,
	505, 1935,
	506, 1935,
	507, 1935,
	508, 1935,
	509, 1935,
	510, 1935,
	511, 1935,
	512, 1935,
	513, 1935,
	514, 1935,
	515, 1935,
	516, 1935,
	517, 1935,
	518, 1935,
	519, 1935,
	520, 1935,
	521, 1935,
	523, 1935,
	525, 1935,
	526, 1935,
	527, 1935,
	528, 1935,
	529, 1935,
	530, 1935,
	531, 1935,
	532, 1935,
	533, 1935,
	534, 1935,
	535, 1935,
	536, 1935,
	537, 1935,
	538, 1935,
	539, 1935,
	540, 1935,
	541, 1935,
	542, 1935,
	543, 1935,
	544, 1935,
	545, 1935,
	547, 1935,
	548, 1935,
	549, 1935,
	550, 1935,
	551, 1935,
	553, 1935,
	554, 1935,
	555, 1935,
	556, 1935,
	557, 1935,
	558, 1935,
	560, 1935,
	561, 1935,
	563, 1935,
	564, 1935,
	565, 1935,
	566, 1935,
	567, 1935,
	569, 1935,
	571, 1935,
	572, 1935,
	573, 1935,
	574, 1935,
	575, 1935,
	576, 1935,
	577, 1935,
	578, 1935,
	579, 1935,
	580, 1935,
	581, 1935,
	582, 1935,
	583, 1935,
	584, 1935,
	585, 1935,
	586, 1935,
	588, 1935,
	589, 1935,
	590, 1935,
	591, 1935,
	592, 1935,
	593, 1935,
	594, 1935,
	595, 1935,
	596, 1935,
	597, 1935,
	598, 1935,
	599, 1935,
	602, 1935,
	603, 1935,
	604, 1935,
	605, 1935,
	606, 1935,
	607, 1935,
	609, 1935,
	610, 1935,
	611, 1935,
	612, 1935,
	613, 1935,
	614, 1935,
	615, 1935,
	616, 1935,
	617, 1935,
	618, 1935,
	619, 1935,
	620, 1935,
	621, 1935,
	626, 1935,
	627, 1935,
	628, 1935,
	629, 1935,
	630, 1935,
	631, 1935,
	632, 1935,
	647, 1935,
	654, 1935,
	655, 1935,
	656, 1935,
	664, 1935,
	668, 1935,
	-2, 0,
	-1, 858,
	4, 1644,
	21, 1644,
	22, 1644,
	23, 1644,
	24, 1644,
	25, 1644,
	26, 1644,
	27, 1644,
	28, 1644,
	30, 1644,
	31, 1644,
	37, 1644,
	41, 1644,
	43, 1644,
	44, 1644,
	45, 1644,
	47, 1644,
	48, 1644,
	49, 1644,
	50, 1644,
	51, 1644,
	52, 1644,
	53, 1644,
	54, 1644,
	55, 1644,
	57, 1644,
	58, 1644,
	59, 1644,
	60, 1644,
	62, 1644,
	63, 1644,
	64, 1644,
	65, 1644,
	66, 1644,
	67, 1644,
	68, 1644,
	69, 1644,
	73, 1644,
	74, 1644,
	75, 1644,
	76, 1644,
	78, 1644,
	79, 1644,
	80, 1644,
	84, 1644,
	85, 1644,
	86, 1644,
	87, 1644,
	88, 1644,
	89, 1644,
	90, 1644,
	91, 1644,
	94, 1644,
	95, 1644,
	96, 1644,
	97, 1644,
	98, 1644,
	99, 1644,
	101, 1644,
	103, 1644,
	104, 1644,
	105, 1644,
	106, 1644,
	107, 1644,
	108, 1644,
	109, 1644,
	111, 1644,
	112, 1644,
	113, 1644,
	115, 1644,
	116, 1644,
	117, 1644,
	125, 1644,
	126, 1644,
	127, 1644,
	128, 1644,
	129, 1644,
	131, 1644,
	132, 1644,
	133, 1644,
	134, 1644,
	136, 1644,
	137, 1644,
	138, 1644,
	139, 1644,
	141, 1644,
	142, 1644,
	143, 1644,
	144, 1644,
	146, 1644,
	147, 1644,
	148, 1644,
	151, 1644,
	152, 1644,
	153, 1644,
	155, 1644,
	156, 1644,
	157, 1644,
	159, 1644,
	160, 1644,
	161, 1644,
	163, 1644,
	164, 1644,
	165, 1644,
	166, 1644,
	167, 1644,
	168, 1644,
	169, 1644,
	170, 1644,
	171, 1644,
	172, 1644,
	173, 1644,
	174, 1644,
	175, 1644,
	176, 1644,
	177, 1644,
	178, 1644,
	179, 1644,
	180, 1644,
	182, 1644,
	188, 1644,
	189, 1644,
	190, 1644,
	191, 1644,
	195, 1644,
	197, 1644,
	198, 1644,
	199, 1644,
	201, 1644,
	202, 1644,
	205, 1644,
	206, 1644,
	207, 1644,
	208, 1644,
	209, 1644,
	210, 1644,
	211, 1644,
	212, 1644,
	213, 1644,
	214, 1644,
	215, 1644,
	216, 1644,
	217, 1644,
	218, 1644,
	220, 1644,
	221, 1644,
	222, 1644,
	224, 1644,
	225, 1644,
	227, 1644,
	228, 1644,
	229, 1644,
	230, 1644,
	231, 1644,
	232, 1644,
	233, 1644,
	234, 1644,
	235, 1644,
	236, 1644,
	237, 1644,
	239, 1644,
	240, 1644,
	241, 1644,
	243, 1644,
	244, 1644,
	245, 1644,
	246, 1644,
	247, 1644,
	248, 1644,
	252, 1644,
	253, 1644,
	254, 1644,
	255, 1644,
	258, 1644,
	259, 1644,
	260, 1644,
	261, 1644,
	262, 1644,
	263, 1644,
	265, 1644,
	267, 1644,
	268, 1644,
	269, 1644,
	271, 1644,
	273, 1644,
	274, 1644,
	275, 1644,
	277, 1644,
	281, 1644,
	282, 1644,
	283, 1644,
	284, 1644,
	285, 1644,
	286, 1644,
	287, 1644,
	289, 1644,
	290, 1644,
	291, 1644,
	293, 1644,
	294, 1644,
	295, 1644,
	297, 1644,
	298, 1644,
	301, 1644,
	302, 1644,
	303, 1644,
	304, 1644,
	305, 1644,
	306, 1644,
	307, 1644,
	310, 1644,
	311, 1644,
	312, 1644,
	313, 1644,
	315, 1644,
	316, 1644,
	317, 1644,
	318, 1644,
	319, 1644,
	320, 1644,
	321, 1644,
	322, 1644,
	323, 1644,
	324, 1644,
	325, 1644,
	326, 1644,
	327, 1644,
	328, 1644,
	329, 1644,
	330, 1644,
	331, 1644,
	332, 1644,
	333, 1644,
	334, 1644,
	335, 1644,
	336, 1644,
	337, 1644,
	339, 1644,
	341, 1644,
	342, 1644,
	343, 1644,
	344, 1644,
	345, 1644,
	346, 1644,
	347, 1644,
	348, 1644,
	349, 1644,
	350, 1644,
	351, 1644,
	352, 1644,
	353, 1644,
	354, 1644,
	355, 1644,
	356, 1644,
	357, 1644,
	359, 1644,
	360, 1644,
	362, 1644,
	364, 1644,
	365, 1644,
	366, 1644,
	367, 1644,
	369, 1644,
	370, 1644,
	371, 1644,
	372, 1644,
	373, 1644,
	376, 1644,
	378, 1644,
	381, 1644,
	382, 1644,
	383, 1644,
	386, 1644,
	387, 1644,
	388, 1644,
	390, 1644,
	392, 1644,
	393, 1644,
	394, 1644,
	395, 1644,
	396, 1644,
	397, 1644,
	398, 1644,
	399, 1644,
	400, 1644,
	401, 1644,
	402, 1644,
	403, 1644,
	404, 1644,
	405, 1644,
	407, 1644,
	408, 1644,
	409, 1644,
	410, 1644,
	411, 1644,
	412, 1644,
	413, 1644,
	414, 1644,
	415, 1644,
	416, 1644,
	417, 1644,
	418, 1644,
	419, 1644,
	420, 1644,
	421, 1644,
	423, 1644,
	424, 1644,
	425, 1644,
	427, 1644,
	428, 1644,
	429, 1644,
	430, 1644,
	431, 1644,
	432, 1644,
	433, 1644,
	434, 1644,
	435, 1644,
	436, 1644,
	437, 1644,
	438, 1644,
	439, 1644,
	440, 1644,
	442, 1644,
	444, 1644,
	445, 1644,
	446, 1644,
	452, 1644,
	453, 1644,
	454, 1644,
	456, 1644,
	457, 1644,
	458, 1644,
	459, 1644,
	460, 1644,
	461, 1644,
	462, 1644,
	463, 1644,
	464, 1644,
	465, 1644,
	466, 1644,
	468, 1644,
	469, 1644,
	470, 1644,
	471, 1644,
	472, 1644,
	474, 1644,
	475, 1644,
	476, 1644,
	477, 1644,
	478, 1644,
	479, 1644,
	480, 1644,
	482, 1644,
	483, 1644,
	484, 1644,
	485, 1644,
	486, 1644,
	487, 1644,
	488, 1644,
	489, 1644,
	490, 1644,
	491, 1644,
	492, 1644,
	493, 1644,
	494, 1644,
	495, 1644,
	496, 1644,
	497, 1644,
	499, 1644,
	500, 1644,
	501, 1644,
	502, 1644,
	503, 1644,
	504, 1644,
	506, 1644,
	507, 1644,
	508, 1644,
	509, 1644,
	510, 1644,
	511, 1644,
	512, 1644,
	514, 1644,
	515, 1644,
	516, 1644,
	517, 1644,
	518, 1644,
	519, 1644,
	520, 1644,
	521, 1644,
	523, 1644,
	525, 1644,
	526, 1644,
	527, 1644,
	528, 1644,
	529, 1644,
	530, 1644,
	531, 1644,
	532, 1644,
	533, 1644,
	534, 1644,
	535, 1644,
	536, 1644,
	537, 1644,
	538, 1644,
	539, 1644,
	540, 1644,
	541, 1644,
	542, 1644,
	543, 1644,
	544, 1644,
	545, 1644,
	547, 1644,
	548, 1644,
	550, 1644,
	551, 1644,
	553, 1644,
	554, 1644,
	555, 1644,
	556, 1644,
	557, 1644,
	558, 1644,
	560, 1644,
	561, 1644,
	563, 1644,
	564, 1644,
	565, 1644,
	566, 1644,
	567, 1644,
	569, 1644,
	571, 1644,
	572, 1644,
	573, 1644,
	574, 1644,
	575, 1644,
	576, 1644,
	577, 1644,
	578, 1644,
	580, 1644,
	581, 1644,
	582, 1644,
	583, 1644,
	584, 1644,
	585, 1644,
	586, 1644,
	589, 1644,
	590, 1644,
	591, 1644,
	592, 1644,
	593, 1644,
	594, 1644,
	595, 1644,
	596, 1644,
	597, 1644,
	599, 1644,
	602, 1644,
	603, 1644,
	604, 1644,
	605, 1644,
	606, 1644,
	607, 1644,
	609, 1644,
	610, 1644,
	611, 1644,
	612, 1644,
	613, 1644,
	614, 1644,
	615, 1644,
	616, 1644,
	617, 1644,
	618, 1644,
	619, 1644,
	620, 1644,
	621, 1644,
	626, 1644,
	627, 1644,
	628, 1644,
	629, 1644,
	630, 1644,
	631, 1644,
	-2, 0,
	-1, 877,
	203, 2753,
	568, 2753,
	646, 2753,
	666, 2753,
	-2, 0,
	-1, 878,
	203, 2738,
	568, 2738,
	646, 2738,
	666, 2738,
	-2, 0,
	-1, 880,
	203, 3039,
	568, 3039,
	646, 3039,
	666, 3039,
	-2, 0,
	-1, 883,
	203, 2881,
	568, 2881,
	646, 2881,
	666, 2881,
	-2, 0,
	-1, 884,
	203, 3086,
	568, 3086,
	646, 3086,
	666, 3086,
	-2, 0,
	-1, 892,
	203, 2909,
	568, 2909,
	646, 2909,
	666, 2909,
	-2, 922,
	-1, 908,
	8, 1059,
	29, 1059,
	654, 1059,
	655, 1059,
	-2, 1064,
	-1, 912,
	1, 2811,
	667, 2811,
	670, 2811,
	-2, 1064,
	-1, 913,
	1, 2868,
	667, 2868,
	670, 2868,
	-2, 1064,
	-1, 916,
	1, 2914,
	667, 2914,
	670, 2914,
	-2, 1057,
	-1, 917,
	1, 2971,
	667, 2971,
	670, 2971,
	-2, 1058,
	-1, 918,
	1, 2816,
	667, 2816,
	670, 2816,
	-2, 1061,
	-1, 919,
	1, 2724,
	667, 2724,
	670, 2724,
	-2, 1062,
	-1, 962,
	666, 2681,
	669, 2681,
	-2, 1305,
	-1, 963,
	666, 2683,
	669, 2683,
	-2, 1306,
	-1, 964,
	666, 2682,
	669, 2682,
	-2, 1307,
	-1, 965,
	669, 2605,
	-2, 1308,
	-1, 991,
	196, 332,
	-2, 0,
	-1, 1013,
	46, 2654,
	-2, 0,
	-1, 1014,
	610, 1622,
	-2, 1390,
	-1, 1031,
	4, 2083,
	21, 2083,
	22, 2083,
	23, 2083,
	24, 2083,
	25, 2083,
	26, 2083,
	27, 2083,
	28, 2083,
	30, 2083,
	31, 2083,
	37, 2083,
	41, 2083,
	43, 2083,
	44, 2083,
	45, 2083,
	47, 2083,
	48, 2083,
	49, 2083,
	50, 2083,
	51, 2083,
	52, 2083,
	53, 2083,
	54, 2083,
	55, 2083,
	57, 2083,
	58, 2083,
	59, 2083,
	60, 2083,
	62, 2083,
	63, 2083,
	64, 2083,
	65, 2083,
	66, 2083,
	67, 2083,
	68, 2083,
	69, 2083,
	73, 2083,
	74, 2083,
	75, 2083,
	76, 2083,
	78, 2083,
	79, 2083,
	80, 2083,
	84, 2083,
	85, 2083,
	86, 2083,
	87, 2083,
	88, 2083,
	89, 2083,
	90, 2083,
	91, 2083,
	94, 2083,
	95, 2083,
	96, 2083,
	97, 2083,
	98, 2083,
	99, 2083,
	101, 2083,
	103, 2083,
	104, 2083,
	105, 2083,
	106, 2083,
	107, 2083,
	108, 2083,
	109, 2083,
	111, 2083,
	112, 2083,
	113, 2083,
	115, 2083,
	116, 2083,
	117, 2083,
	125, 2083,
	126, 2083,
	127, 2083,
	128, 2083,
	129, 2083,
	131, 2083,
	132, 2083,
	133, 2083,
	134, 2083,
	136, 2083,
	137, 2083,
	138, 2083,
	139, 2083,
	141, 2083,
	142, 2083,
	143, 2083,
	144, 2083,
	146, 2083,
	147, 2083,
	148, 2083,
	151, 2083,
	152, 2083,
	153, 2083,
	155, 2083,
	156, 2083,
	157, 2083,
	159, 2083,
	160, 2083,
	161, 2083,
	163, 2083,
	164, 2083,
	165, 2083,
	166, 2083,
	167, 2083,
	168, 2083,
	169, 2083,
	170, 2083,
	171, 2083,
	172, 2083,
	173, 2083,
	174, 2083,
	175, 2083,
	176, 2083,
	177, 2083,
	178, 2083,
	179, 2083,
	180, 2083,
	182, 2083,
	188, 2083,
	189, 2083,
	190, 2083,
	191, 2083,
	195, 2083,
	197, 2083,
	198, 2083,
	199, 2083,
	201, 2083,
	202, 2083,
	205, 2083,
	206, 2083,
	207, 2083,
	208, 2083,
	209, 2083,
	210, 2083,
	211, 2083,
	212, 2083,
	213, 2083,
	214, 2083,
	215, 2083,
	216, 2083,
	217, 2083,
	218, 2083,
	220, 2083,
	221, 2083,
	222, 2083,
	224, 2083,
	225, 2083,
	227, 2083,
	228, 2083,
	229, 2083,
	230, 2083,
	231, 2083,
	232, 2083,
	233, 2083,
	234, 2083,
	235, 2083,
	236, 2083,
	237, 2083,
	239, 2083,
	240, 2083,
	241, 2083,
	243, 2083,
	244, 2083,
	245, 2083,
	246, 2083,
	247, 2083,
	248, 2083,
	252, 2083,
	253, 2083,
	254, 2083,
	255, 2083,
	258, 2083,
	259, 2083,
	260, 2083,
	261, 2083,
	262, 2083,
	263, 2083,
	265, 2083,
	267, 2083,
	268, 2083,
	269, 2083,
	271, 2083,
	273, 2083,
	274, 2083,
	275, 2083,
	277, 2083,
	281, 2083,
	282, 2083,
	283, 2083,
	284, 2083,
	285, 2083,
	286, 2083,
	287, 2083,
	289, 2083,
	290, 2083,
	291, 2083,
	293, 2083,
	294, 2083,
	295, 2083,
	297, 2083,
	298, 2083,
	301, 2083,
	302, 2083,
	303, 2083,
	304, 2083,
	305, 2083,
	306, 2083,
	307, 2083,
	310, 2083,
	311, 2083,
	312, 2083,
	313, 2083,
	315, 2083,
	316, 2083,
	317, 2083,
	318, 2083,
	319, 2083,
	320, 2083,
	321, 2083,
	322, 2083,
	323, 2083,
	324, 2083,
	325, 2083,
	326, 2083,
	327, 2083,
	328, 2083,
	329, 2083,
	330, 2083,
	331, 2083,
	332, 2083,
	333, 2083,
	334, 2083,
	335, 2083,
	336, 2083,
	337, 2083,
	339, 2083,
	341, 2083,
	342, 2083,
	343, 2083,
	344, 2083,
	345, 2083,
	346, 2083,
	347, 2083,
	348, 2083,
	349, 2083,
	350, 2083,
	351, 2083,
	352, 2083,
	353, 2083,
	354, 2083,
	355, 2083,
	356, 2083,
	357, 2083,
	359, 2083,
	360, 2083,
	362, 2083,
	364, 2083,
	365, 2083,
	366, 2083,
	367, 2083,
	369, 2083,
	370, 2083,
	371, 2083,
	372, 2083,
	373, 2083,
	376, 2083,
	378, 2083,
	381, 2083,
	382, 2083,
	383, 2083,
	386, 2083,
	387, 2083,
	388, 2083,
	390, 2083,
	392, 2083,
	393, 2083,
	394, 2083,
	395, 2083,
	396, 2083,
	397, 2083,
	398, 2083,
	399, 2083,
	400, 2083,
	401, 2083,
	402, 2083,
	403, 2083,
	404, 2083,
	405, 2083,
	407, 2083,
	408, 2083,
	409, 2083,
	410, 2083,
	411, 2083,
	412, 2083,
	413, 2083,
	414, 2083,
	415, 2083,
	416, 2083,
	417, 2083,
	418, 2083,
	419, 2083,
	420, 2083,
	421, 2083,
	423, 2083,
	424, 2083,
	425, 2083,
	427, 2083,
	428, 2083,
	429, 2083,
	430, 2083,
	431, 2083,
	432, 2083,
	433, 2083,
	434, 2083,
	435, 2083,
	436, 2083,
	437, 2083,
	438, 2083,
	439, 2083,
	440, 2083,
	442, 2083,
	444, 2083,
	445, 2083,
	446, 2083,
	452, 2083,
	453, 2083,
	454, 2083,
	456, 2083,
	457, 2083,
	458, 2083,
	459, 2083,
	460, 2083,
	461, 2083,
	462, 2083,
	463, 2083,
	464, 2083,
	465, 2083,
	466, 2083,
	468, 2083,
	469, 2083,
	470, 2083,
	471, 2083,
	472, 2083,
	474, 2083,
	475, 2083,
	476, 2083,
	477, 2083,
	478, 2083,
	479, 2083,
	480, 2083,
	482, 2083,
	483, 2083,
	484, 2083,
	485, 2083,
	486, 2083,
	487, 2083,
	488, 2083,
	489, 2083,
	490, 2083,
	491, 2083,
	492, 2083,
	493, 2083,
	494, 2083,
	495, 2083,
	496, 2083,
	497, 2083,
	499, 2083,
	500, 2083,
	501, 2083,
	502, 2083,
	503, 2083,
	504, 2083,
	506, 2083,
	507, 2083,
	508, 2083,
	509, 2083,
	510, 2083,
	511, 2083,
	512, 2083,
	514, 2083,
	515, 2083,
	516, 2083,
	517, 2083,
	518, 2083,
	519, 2083,
	520, 2083,
	521, 2083,
	523, 2083,
	525, 2083,
	526, 2083,
	527, 2083,
	528, 2083,
	529, 2083,
	530, 2083,
	531, 2083,
	532, 2083,
	533, 2083,
	534, 2083,
	535, 2083,
	536, 2083,
	537, 2083,
	538, 2083,
	539, 2083,
	540, 2083,
	541, 2083,
	542, 2083,
	543, 2083,
	544, 2083,
	545, 2083,
	547, 2083,
	548, 2083,
	550, 2083,
	551, 2083,
	553, 2083,
	554, 2083,
	555, 2083,
	556, 2083,
	557, 2083,
	558, 2083,
	560, 2083,
	561, 2083,
	563, 2083,
	564, 2083,
	565, 2083,
	566, 2083,
	567, 2083,
	569, 2083,
	571, 2083,
	572, 2083,
	573, 2083,
	574, 2083,
	575, 2083,
	576, 2083,
	577, 2083,
	578, 2083,
	580, 2083,
	581, 2083,
	582, 2083,
	583, 2083,
	584, 2083,
	585, 2083,
	586, 2083,
	589, 2083,
	590, 2083,
	591, 2083,
	592, 2083,
	593, 2083,
	594, 2083,
	595, 2083,
	596, 2083,
	597, 2083,
	599, 2083,
	602, 2083,
	603, 2083,
	604, 2083,
	605, 2083,
	606, 2083,
	607, 2083,
	609, 2083,
	610, 2083,
	611, 2083,
	612, 2083,
	613, 2083,
	614, 2083,
	615, 2083,
	616, 2083,
	617, 2083,
	618, 2083,
	619, 2083,
	620, 2083,
	621, 2083,
	626, 2083,
	627, 2083,
	628, 2083,
	629, 2083,
	630, 2083,
	631, 2083,
	-2, 0,
	-1, 1042,
	286, 587,
	-2, 0,
	-1, 1122,
	203, 1105,
	-2, 0,
	-1, 1123,
	429, 1161,
	504, 1161,
	551, 1161,
	573, 1161,
	-2, 0,
	-1, 1124,
	429, 1160,
	504, 1160,
	551, 1160,
	573, 1160,
	-2, 1077,
	-1, 1128,
	1, 1217,
	663, 1217,
	665, 1217,
	667, 1217,
	670, 1217,
	-2, 0,
	-1, 1130,
	1, 1134,
	663, 1134,
	665, 1134,
	667, 1134,
	670, 1134,
	-2, 0,
	-1, 1131,
	1, 1138,
	663, 1138,
	665, 1138,
	667, 1138,
	670, 1138,
	-2, 0,
	-1, 1132,
	1, 1294,
	196, 1294,
	663, 1294,
	665, 1294,
	667, 1294,
	670, 1294,
	-2, 0,
	-1, 1141,
	1, 1166,
	663, 1166,
	665, 1166,
	667, 1166,
	670, 1166,
	-2, 0,
	-1, 1148,
	1, 1217,
	663, 1217,
	665, 1217,
	667, 1217,
	670, 1217,
	-2, 0,
	-1, 1149,
	1, 1210,
	663, 1210,
	665, 1210,
	667, 1210,
	670, 1210,
	-2, 0,
	-1, 1150,
	1, 1219,
	663, 1219,
	665, 1219,
	667, 1219,
	670, 1219,
	-2, 0,
	-1, 1151,
	1, 1222,
	663, 1222,
	665, 1222,
	667, 1222,
	670, 1222,
	-2, 0,
	-1, 1159,
	1, 1257,
	663, 1257,
	665, 1257,
	667, 1257,
	670, 1257,
	-2, 0,
	-1, 1160,
	1, 1259,
	663, 1259,
	665, 1259,
	667, 1259,
	670, 1259,
	-2, 0,
	-1, 1165,
	1, 1287,
	663, 1287,
	665, 1287,
	667, 1287,
	670, 1287,
	-2, 0,
	-1, 1219,
	183, 1939,
	196, 1939,
	300, 1939,
	374, 1939,
	-2, 1875,
	-1, 1236,
	183, 1938,
	196, 1938,
	300, 1938,
	374, 1938,
	-2, 1872,
	-1, 1265,
	666, 2680,
	-2, 930,
	-1, 1294,
	5, 2672,
	664, 2670,
	-2, 2661,
	-1, 1302,
	5, 2693,
	664, 2690,
	-2, 2681,
	-1, 1303,
	5, 2694,
	664, 2691,
	-2, 2682,
	-1, 1311,
	666, 2678,
	-2, 2660,
	-1, 1312,
	664, 3204,
	-2, 2679,
	-1, 1335,
	5, 2695,
	38, 2695,
	135, 2695,
	646, 2695,
	662, 2695,
	665, 2695,
	666, 2695,
	669, 2695,
	-2, 3203,
	-1, 1336,
	5, 2158,
	-2, 3173,
	-1, 1337,
	5, 2159,
	-2, 3174,
	-1, 1338,
	5, 2160,
	-2, 3189,
	-1, 1339,
	5, 2161,
	-2, 3151,
	-1, 1340,
	5, 2162,
	-2, 3186,
	-1, 1341,
	5, 2170,
	-2, 3164,
	-1, 1342,
	5, 2157,
	-2, 3160,
	-1, 1343,
	5, 2157,
	-2, 3159,
	-1, 1344,
	5, 2157,
	-2, 3179,
	-1, 1345,
	5, 2168,
	-2, 3153,
	-1, 1346,
	5, 2173,
	-2, 3152,
	-1, 1347,
	5, 2175,
	-2, 3199,
	-1, 1350,
	5, 2197,
	-2, 3192,
	-1, 1351,
	5, 2189,
	-2, 3193,
	-1, 1352,
	5, 2197,
	-2, 3194,
	-1, 1353,
	5, 2193,
	-2, 3195,
	-1, 1354,
	5, 2143,
	-2, 3165,
	-1, 1355,
	5, 2144,
	-2, 3166,
	-1, 1356,
	5, 2145,
	-2, 3154,
	-1, 1384,
	5, 2180,
	-2, 3200,
	-1, 1385,
	5, 2181,
	-2, 3190,
	-1, 1386,
	5, 2182,
	611, 2182,
	-2, 3155,
	-1, 1387,
	5, 2183,
	611, 2183,
	-2, 3156,
	-1, 1425,
	664, 2690,
	-2, 2681,
	-1, 1426,
	664, 2691,
	-2, 2682,
	-1, 1534,
	203, 3086,
	568, 3086,
	646, 3086,
	666, 3086,
	-2, 0,
	-1, 1539,
	1, 906,
	667, 906,
	670, 906,
	-2, 1781,
	-1, 1586,
	1, 1776,
	667, 1776,
	670, 1776,
	-2, 1781,
	-1, 1688,
	394, 2655,
	456, 2655,
	506, 2655,
	656, 2655,
	-2, 2643,
	-1, 1696,
	203, 170,
	293, 170,
	359, 170,
	621, 170,
	-2, 3081,
	-1, 1697,
	203, 171,
	293, 171,
	359, 171,
	621, 171,
	-2, 2801,
	-1, 1698,
	203, 172,
	293, 172,
	359, 172,
	621, 172,
	-2, 2994,
	-1, 1704,
	668, 2655,
	-2, 2657,
	-1, 1707,
	25, 3018,
	242, 3018,
	-2, 0,
	-1, 1728,
	1, 1619,
	461, 1573,
	506, 1573,
	638, 1573,
	643, 1573,
	663, 1619,
	665, 1619,
	667, 1619,
	670, 1619,
	-2, 1924,
	-1, 1734,
	219, 1720,
	242, 1720,
	472, 1720,
	-2, 0,
	-1, 1802,
	46, 2653,
	-2, 1352,
	-1, 1809,
	1, 1619,
	663, 1619,
	665, 1619,
	667, 1619,
	670, 1619,
	-2, 1924,
	-1, 1812,
	438, 1389,
	610, 1389,
	-2, 486,
	-1, 1818,
	4, 1644,
	21, 1644,
	22, 1644,
	23, 1644,
	24, 1644,
	25, 1644,
	26, 1644,
	27, 1644,
	28, 1644,
	30, 1644,
	31, 1644,
	37, 1644,
	41, 1644,
	43, 1644,
	44, 1644,
	45, 1644,
	47, 1644,
	48, 1644,
	49, 1644,
	50, 1644,
	51, 1644,
	52, 1644,
	53, 1644,
	54, 1644,
	55, 1644,
	57, 1644,
	58, 1644,
	59, 1644,
	60, 1644,
	62, 1644,
	63, 1644,
	64, 1644,
	65, 1644,
	66, 1644,
	67, 1644,
	68, 1644,
	69, 1644,
	73, 1644,
	74, 1644,
	75, 1644,
	76, 1644,
	78, 1644,
	79, 1644,
	80, 1644,
	84, 1644,
	85, 1644,
	86, 1644,
	87, 1644,
	88, 1644,
	89, 1644,
	90, 1644,
	91, 1644,
	94, 1644,
	95, 1644,
	96, 1644,
	97, 1644,
	98, 1644,
	99, 1644,
	101, 1644,
	103, 1644,
	104, 1644,
	105, 1644,
	106, 1644,
	107, 1644,
	108, 1644,
	109, 1644,
	111, 1644,
	112, 1644,
	113, 1644,
	115, 1644,
	116, 1644,
	117, 1644,
	125, 1644,
	126, 1644,
	127, 1644,
	128, 1644,
	129, 1644,
	131, 1644,
	132, 1644,
	133, 1644,
	134, 1644,
	136, 1644,
	137, 1644,
	138, 1644,
	139, 1644,
	141, 1644,
	142, 1644,
	143, 1644,
	144, 1644,
	146, 1644,
	147, 1644,
	148, 1644,
	151, 1644,
	152, 1644,
	153, 1644,
	155, 1644,
	156, 1644,
	157, 1644,
	159, 1644,
	160, 1644,
	161, 1644,
	163, 1644,
	164, 1644,
	165, 1644,
	166, 1644,
	167, 1644,
	168, 1644,
	169, 1644,
	170, 1644,
	171, 1644,
	172, 1644,
	173, 1644,
	174, 1644,
	175, 1644,
	176, 1644,
	177, 1644,
	178, 1644,
	179, 1644,
	180, 1644,
	188, 1644,
	189, 1644,
	190, 1644,
	191, 1644,
	195, 1644,
	197, 1644,
	198, 1644,
	199, 1644,
	201, 1644,
	202, 1644,
	205, 1644,
	206, 1644,
	207, 1644,
	208, 1644,
	209, 1644,
	210, 1644,
	211, 1644,
	212, 1644,
	213, 1644,
	214, 1644,
	215, 1644,
	216, 1644,
	217, 1644,
	218, 1644,
	220, 1644,
	221, 1644,
	222, 1644,
	224, 1644,
	225, 1644,
	227, 1644,
	228, 1644,
	229, 1644,
	230, 1644,
	231, 1644,
	232, 1644,
	233, 1644,
	234, 1644,
	235, 1644,
	236, 1644,
	237, 1644,
	239, 1644,
	240, 1644,
	241, 1644,
	243, 1644,
	244, 1644,
	245, 1644,
	246, 1644,
	247, 1644,
	248, 1644,
	253, 1644,
	254, 1644,
	255, 1644,
	258, 1644,
	259, 1644,
	260, 1644,
	261, 1644,
	262, 1644,
	263, 1644,
	265, 1644,
	267, 1644,
	268, 1644,
	269, 1644,
	271, 1644,
	273, 1644,
	274, 1644,
	275, 1644,
	277, 1644,
	281, 1644,
	282, 1644,
	283, 1644,
	284, 1644,
	285, 1644,
	286, 1644,
	287, 1644,
	289, 1644,
	290, 1644,
	291, 1644,
	293, 1644,
	294, 1644,
	295, 1644,
	297, 1644,
	298, 1644,
	301, 1644,
	302, 1644,
	303, 1644,
	304, 1644,
	305, 1644,
	306, 1644,
	307, 1644,
	310, 1644,
	311, 1644,
	312, 1644,
	313, 1644,
	315, 1644,
	316, 1644,
	317, 1644,
	318, 1644,
	319, 1644,
	320, 1644,
	321, 1644,
	322, 1644,
	323, 1644,
	324, 1644,
	325, 1644,
	326, 1644,
	327, 1644,
	328, 1644,
	329, 1644,
	330, 1644,
	331, 1644,
	332, 1644,
	333, 1644,
	334, 1644,
	335, 1644,
	336, 1644,
	337, 1644,
	339, 1644,
	341, 1644,
	342, 1644,
	343, 1644,
	344, 1644,
	345, 1644,
	346, 1644,
	347, 1644,
	348, 1644,
	349, 1644,
	350, 1644,
	351, 1644,
	352, 1644,
	353, 1644,
	354, 1644,
	355, 1644,
	356, 1644,
	357, 1644,
	359, 1644,
	360, 1644,
	364, 1644,
	365, 1644,
	366, 1644,
	367, 1644,
	369, 1644,
	370, 1644,
	371, 1644,
	372, 1644,
	373, 1644,
	376, 1644,
	378, 1644,
	379, 1644,
	381, 1644,
	382, 1644,
	383, 1644,
	386, 1644,
	387, 1644,
	388, 1644,
	390, 1644,
	392, 1644,
	393, 1644,
	394, 1644,
	395, 1644,
	396, 1644,
	397, 1644,
	398, 1644,
	399, 1644,
	400, 1644,
	401, 1644,
	402, 1644,
	403, 1644,
	404, 1644,
	405, 1644,
	407, 1644,
	408, 1644,
	409, 1644,
	410, 1644,
	411, 1644,
	412, 1644,
	413, 1644,
	414, 1644,
	415, 1644,
	416, 1644,
	417, 1644,
	418, 1644,
	419, 1644,
	420, 1644,
	421, 1644,
	423, 1644,
	424, 1644,
	425, 1644,
	427, 1644,
	428, 1644,
	429, 1644,
	430, 1644,
	431, 1644,
	432, 1644,
	433, 1644,
	434, 1644,
	435, 1644,
	436, 1644,
	437, 1644,
	438, 1644,
	439, 1644,
	440, 1644,
	442, 1644,
	444, 1644,
	445, 1644,
	446, 1644,
	452, 1644,
	453, 1644,
	454, 1644,
	456, 1644,
	457, 1644,
	458, 1644,
	459, 1644,
	460, 1644,
	461, 1644,
	462, 1644,
	463, 1644,
	464, 1644,
	465, 1644,
	466, 1644,
	468, 1644,
	469, 1644,
	470, 1644,
	471, 1644,
	472, 1644,
	474, 1644,
	475, 1644,
	476, 1644,
	477, 1644,
	478, 1644,
	479, 1644,
	480, 1644,
	482, 1644,
	483, 1644,
	484, 1644,
	485, 1644,
	486, 1644,
	487, 1644,
	488, 1644,
	489, 1644,
	490, 1644,
	491, 1644,
	492, 1644,
	493, 1644,
	494, 1644,
	495, 1644,
	496, 1644,
	497, 1644,
	499, 1644,
	500, 1644,
	501, 1644,
	502, 1644,
	503, 1644,
	504, 1644,
	506, 1644,
	507, 1644,
	508, 1644,
	509, 1644,
	510, 1644,
	511, 1644,
	512, 1644,
	514, 1644,
	515, 1644,
	516, 1644,
	517, 1644,
	518, 1644,
	519, 1644,
	520, 1644,
	521, 1644,
	523, 1644,
	525, 1644,
	526, 1644,
	527, 1644,
	528, 1644,
	529, 1644,
	530, 1644,
	531, 1644,
	532, 1644,
	533, 1644,
	534, 1644,
	535, 1644,
	536, 1644,
	537, 1644,
	538, 1644,
	539, 1644,
	540, 1644,
	541, 1644,
	542, 1644,
	543, 1644,
	544, 1644,
	545, 1644,
	547, 1644,
	548, 1644,
	550, 1644,
	551, 1644,
	553, 1644,
	554, 1644,
	555, 1644,
	556, 1644,
	557, 1644,
	558, 1644,
	560, 1644,
	561, 1644,
	563, 1644,
	564, 1644,
	565, 1644,
	566, 1644,
	567, 1644,
	569, 1644,
	571, 1644,
	572, 1644,
	573, 1644,
	574, 1644,
	575, 1644,
	576, 1644,
	577, 1644,
	578, 1644,
	580, 1644,
	581, 1644,
	582, 1644,
	583, 1644,
	584, 1644,
	585, 1644,
	586, 1644,
	589, 1644,
	590, 1644,
	591, 1644,
	592, 1644,
	593, 1644,
	594, 1644,
	595, 1644,
	596, 1644,
	597, 1644,
	599, 1644,
	602, 1644,
	603, 1644,
	604, 1644,
	605, 1644,
	606, 1644,
	607, 1644,
	609, 1644,
	610, 1644,
	611, 1644,
	612, 1644,
	613, 1644,
	614, 1644,
	615, 1644,
	616, 1644,
	617, 1644,
	618, 1644,
	619, 1644,
	620, 1644,
	621, 1644,
	626, 1644,
	627, 1644,
	628, 1644,
	629, 1644,
	630, 1644,
	631, 1644,
	-2, 0,
	-1, 1841,
	1, 732,
	663, 732,
	665, 732,
	667, 732,
	670, 732,
	-2, 1895,
	-1, 1844,
	4, 3198,
	11, 3198,
	12, 3198,
	14, 3198,
	15, 3198,
	16, 3198,
	17, 3198,
	18, 3198,
	19, 3198,
	21, 3198,
	22, 3198,
	23, 3198,
	24, 3198,
	25, 3198,
	26, 3198,
	27, 3198,
	28, 3198,
	30, 3198,
	31, 3198,
	34, 3198,
	35, 3198,
	37, 3198,
	39, 3198,
	41, 3198,
	43, 3198,
	44, 3198,
	45, 3198,
	47, 3198,
	48, 3198,
	49, 3198,
	50, 3198,
	51, 3198,
	52, 3198,
	53, 3198,
	54, 3198,
	55, 3198,
	57, 3198,
	58, 3198,
	59, 3198,
	60, 3198,
	62, 3198,
	63, 3198,
	64, 3198,
	65, 3198,
	66, 3198,
	67, 3198,
	68, 3198,
	69, 3198,
	72, 3198,
	73, 3198,
	74, 3198,
	75, 3198,
	76, 3198,
	78, 3198,
	79, 3198,
	80, 3198,
	81, 3198,
	84, 3198,
	85, 3198,
	86, 3198,
	87, 3198,
	88, 3198,
	89, 3198,
	90, 3198,
	91, 3198,
	92, 3198,
	94, 3198,
	95, 3198,
	96, 3198,
	97, 3198,
	98, 3198,
	99, 3198,
	101, 3198,
	102, 3198,
	103, 3198,
	104, 3198,
	105, 3198,
	106, 3198,
	107, 3198,
	108, 3198,
	109, 3198,
	111, 3198,
	112, 3198,
	113, 3198,
	114, 3198,
	115, 3198,
	116, 3198,
	117, 3198,
	125, 3198,
	126, 3198,
	127, 3198,
	128, 3198,
	129, 3198,
	131, 3198,
	132, 3198,
	133, 3198,
	134, 3198,
	136, 3198,
	137, 3198,
	138, 3198,
	139, 3198,
	141, 3198,
	142, 3198,
	143, 3198,
	144, 3198,
	146, 3198,
	147, 3198,
	148, 3198,
	151, 3198,
	152, 3198,
	153, 3198,
	155, 3198,
	156, 3198,
	157, 3198,
	159, 3198,
	160, 3198,
	161, 3198,
	163, 3198,
	164, 3198,
	165, 3198,
	166, 3198,
	167, 3198,
	168, 3198,
	169, 3198,
	170, 3198,
	171, 3198,
	172, 3198,
	173, 3198,
	174, 3198,
	175, 3198,
	176, 3198,
	177, 3198,
	178, 3198,
	179, 3198,
	180, 3198,
	184, 3198,
	185, 3198,
	186, 3198,
	187, 3198,
	188, 3198,
	189, 3198,
	190, 3198,
	191, 3198,
	194, 3198,
	195, 3198,
	197, 3198,
	198, 3198,
	199, 3198,
	201, 3198,
	202, 3198,
	204, 3198,
	205, 3198,
	206, 3198,
	207, 3198,
	208, 3198,
	209, 3198,
	210, 3198,
	211, 3198,
	212, 3198,
	213, 3198,
	214, 3198,
	215, 3198,
	216, 3198,
	217, 3198,
	218, 3198,
	220, 3198,
	221, 3198,
	222, 3198,
	224, 3198,
	225, 3198,
	227, 3198,
	228, 3198,
	229, 3198,
	230, 3198,
	231, 3198,
	232, 3198,
	233, 3198,
	234, 3198,
	235, 3198,
	236, 3198,
	237, 3198,
	238, 3198,
	239, 3198,
	240, 3198,
	241, 3198,
	242, 3198,
	243, 3198,
	244, 3198,
	245, 3198,
	246, 3198,
	247, 3198,
	248, 3198,
	250, 3198,
	251, 3198,
	253, 3198,
	254, 3198,
	255, 3198,
	257, 3198,
	258, 3198,
	259, 3198,
	260, 3198,
	261, 3198,
	262, 3198,
	263, 3198,
	265, 3198,
	267, 3198,
	268, 3198,
	269, 3198,
	270, 3198,
	271, 3198,
	272, 3198,
	273, 3198,
	274, 3198,
	275, 3198,
	276, 3198,
	277, 3198,
	279, 3198,
	280, 3198,
	281, 3198,
	282, 3198,
	283, 3198,
	284, 3198,
	285, 3198,
	286, 3198,
	287, 3198,
	289, 3198,
	290, 3198,
	291, 3198,
	293, 3198,
	294, 3198,
	295, 3198,
	296, 3198,
	297, 3198,
	298, 3198,
	299, 3198,
	301, 3198,
	302, 3198,
	303, 3198,
	304, 3198,
	305, 3198,
	306, 3198,
	307, 3198,
	310, 3198,
	311, 3198,
	312, 3198,
	313, 3198,
	314, 3198,
	315, 3198,
	316, 3198,
	317, 3198,
	318, 3198,
	319, 3198,
	320, 3198,
	321, 3198,
	322, 3198,
	323, 3198,
	324, 3198,
	325, 3198,
	326, 3198,
	327, 3198,
	328, 3198,
	329, 3198,
	330, 3198,
	331, 3198,
	332, 3198,
	333, 3198,
	334, 3198,
	335, 3198,
	336, 3198,
	337, 3198,
	339, 3198,
	340, 3198,
	341, 3198,
	342, 3198,
	343, 3198,
	344, 3198,
	345, 3198,
	346, 3198,
	347, 3198,
	348, 3198,
	349, 3198,
	350, 3198,
	351, 3198,
	352, 3198,
	353, 3198,
	354, 3198,
	355, 3198,
	356, 3198,
	357, 3198,
	359, 3198,
	360, 3198,
	363, 3198,
	364, 3198,
	365, 3198,
	366, 3198,
	367, 3198,
	369, 3198,
	370, 3198,
	371, 3198,
	372, 3198,
	373, 3198,
	376, 3198,
	378, 3198,
	381, 3198,
	382, 3198,
	383, 3198,
	384, 3198,
	386, 3198,
	387, 3198,
	388, 3198,
	390, 3198,
	392, 3198,
	393, 3198,
	394, 3198,
	395, 3198,
	396, 3198,
	397, 3198,
	398, 3198,
	399, 3198,
	400, 3198,
	401, 3198,
	402, 3198,
	403, 3198,
	404, 3198,
	405, 3198,
	407, 3198,
	408, 3198,
	409, 3198,
	410, 3198,
	411, 3198,
	412, 3198,
	413, 3198,
	414, 3198,
	415, 3198,
	416, 3198,
	417, 3198,
	418, 3198,
	419, 3198,
	420, 3198,
	421, 3198,
	423, 3198,
	424, 3198,
	425, 3198,
	427, 3198,
	428, 3198,
	429, 3198,
	430, 3198,
	431, 3198,
	432, 3198,
	433, 3198,
	434, 3198,
	435, 3198,
	436, 3198,
	437, 3198,
	438, 3198,
	439, 3198,
	440, 3198,
	442, 3198,
	444, 3198,
	445, 3198,
	446, 3198,
	452, 3198,
	453, 3198,
	454, 3198,
	455, 3198,
	456, 3198,
	457, 3198,
	458, 3198,
	459, 3198,
	460, 3198,
	461, 3198,
	462, 3198,
	463, 3198,
	464, 3198,
	465, 3198,
	466, 3198,
	468, 3198,
	469, 3198,
	470, 3198,
	471, 3198,
	472, 3198,
	473, 3198,
	474, 3198,
	475, 3198,
	476, 3198,
	477, 3198,
	478, 3198,
	479, 3198,
	480, 3198,
	481, 3198,
	482, 3198,
	483, 3198,
	484, 3198,
	485, 3198,
	486, 3198,
	487, 3198,
	488, 3198,
	489, 3198,
	490, 3198,
	491, 3198,
	492, 3198,
	493, 3198,
	494, 3198,
	495, 3198,
	496, 3198,
	497, 3198,
	499, 3198,
	500, 3198,
	501, 3198,
	502, 3198,
	503, 3198,
	504, 3198,
	506, 3198,
	507, 3198,
	508, 3198,
	509, 3198,
	510, 3198,
	511, 3198,
	512, 3198,
	513, 3198,
	514, 3198,
	515, 3198,
	516, 3198,
	517, 3198,
	518, 3198,
	519, 3198,
	520, 3198,
	521, 3198,
	523, 3198,
	525, 3198,
	526, 3198,
	527, 3198,
	528, 3198,
	529, 3198,
	530, 3198,
	531, 3198,
	532, 3198,
	533, 3198,
	534, 3198,
	535, 3198,
	536, 3198,
	537, 3198,
	538, 3198,
	539, 3198,
	540, 3198,
	541, 3198,
	542, 3198,
	543, 3198,
	544, 3198,
	545, 3198,
	547, 3198,
	548, 3198,
	549, 3198,
	550, 3198,
	551, 3198,
	553, 3198,
	554, 3198,
	555, 3198,
	556, 3198,
	557, 3198,
	558, 3198,
	560, 3198,
	561, 3198,
	563, 3198,
	564, 3198,
	565, 3198,
	566, 3198,
	567, 3198,
	569, 3198,
	571, 3198,
	572, 3198,
	573, 3198,
	574, 3198,
	575, 3198,
	576, 3198,
	577, 3198,
	578, 3198,
	580, 3198,
	581, 3198,
	582, 3198,
	583, 3198,
	584, 3198,
	585, 3198,
	586, 3198,
	589, 3198,
	590, 3198,
	591, 3198,
	592, 3198,
	593, 3198,
	594, 3198,
	595, 3198,
	596, 3198,
	597, 3198,
	599, 3198,
	602, 3198,
	603, 3198,
	604, 3198,
	605, 3198,
	606, 3198,
	607, 3198,
	609, 3198,
	610, 3198,
	611, 3198,
	612, 3198,
	613, 3198,
	614, 3198,
	615, 3198,
	616, 3198,
	617, 3198,
	618, 3198,
	619, 3198,
	620, 3198,
	621, 3198,
	626, 3198,
	627, 3198,
	628, 3198,
	629, 3198,
	630, 3198,
	631, 3198,
	632, 3198,
	634, 3198,
	644, 3198,
	645, 3198,
	646, 3198,
	647, 3198,
	648, 3198,
	649, 3198,
	651, 3198,
	652, 3198,
	653, 3198,
	654, 3198,
	655, 3198,
	656, 3198,
	657, 3198,
	658, 3198,
	659, 3198,
	662, 3198,
	665, 3198,
	666, 3198,
	668, 3198,
	669, 3198,
	-2, 0,
	-1, 1849,
	203, 3039,
	568, 3039,
	646, 3039,
	666, 3039,
	-2, 0,
	-1, 1897,
	203, 1106,
	-2, 3029,
	-1, 1898,
	203, 1107,
	-2, 2809,
	-1, 1899,
	203, 1108,
	-2, 2980,
	-1, 1900,
	203, 1109,
	-2, 3109,
	-1, 1906,
	429, 1161,
	504, 1161,
	551, 1161,
	573, 1161,
	-2, 0,
	-1, 1917,
	1, 1720,
	242, 1720,
	663, 1720,
	665, 1720,
	667, 1720,
	670, 1720,
	-2, 0,
	-1, 1935,
	1, 1156,
	663, 1156,
	665, 1156,
	667, 1156,
	670, 1156,
	-2, 0,
	-1, 1936,
	1, 1200,
	663, 1200,
	665, 1200,
	667, 1200,
	670, 1200,
	-2, 0,
	-1, 1937,
	1, 1212,
	663, 1212,
	665, 1212,
	667, 1212,
	670, 1212,
	-2, 0,
	-1, 1940,
	1, 1165,
	663, 1165,
	665, 1165,
	667, 1165,
	670, 1165,
	-2, 0,
	-1, 1942,
	1, 1171,
	663, 1171,
	665, 1171,
	667, 1171,
	670, 1171,
	-2, 0,
	-1, 1945,
	1, 1167,
	663, 1167,
	665, 1167,
	667, 1167,
	670, 1167,
	-2, 0,
	-1, 1950,
	1, 1181,
	663, 1181,
	665, 1181,
	667, 1181,
	670, 1181,
	-2, 0,
	-1, 1987,
	1, 3018,
	663, 3018,
	665, 3018,
	666, 3018,
	667, 3018,
	670, 3018,
	-2, 0,
	-1, 1992,
	1, 1268,
	663, 1268,
	665, 1268,
	667, 1268,
	670, 1268,
	-2, 0,
	-1, 2012,
	183, 1938,
	196, 1938,
	300, 1938,
	374, 1938,
	-2, 1876,
	-1, 2114,
	162, 1897,
	183, 1897,
	196, 1897,
	264, 1897,
	300, 1897,
	374, 1897,
	385, 1897,
	587, 1897,
	-2, 2362,
	-1, 2175,
	665, 2537,
	-2, 0,
	-1, 2212,
	162, 1897,
	183, 1897,
	196, 1897,
	264, 1897,
	300, 1897,
	374, 1897,
	385, 1897,
	587, 1897,
	-2, 2038,
	-1, 2251,
	666, 2681,
	669, 2681,
	-2, 1295,
	-1, 2252,
	666, 2683,
	669, 2683,
	-2, 1296,
	-1, 2253,
	666, 2682,
	669, 2682,
	-2, 1297,
	-1, 2254,
	669, 2605,
	-2, 1298,
	-1, 2278,
	664, 2185,
	-2, 2173,
	-1, 2310,
	203, 3036,
	666, 3036,
	669, 3036,
	-2, 0,
	-1, 2361,
	1, 908,
	667, 908,
	670, 908,
	-2, 1781,
	-1, 2565,
	242, 326,
	-2, 2689,
	-1, 2566,
	242, 327,
	-2, 393,
	-1, 2685,
	1, 1158,
	663, 1158,
	665, 1158,
	667, 1158,
	670, 1158,
	-2, 0,
	-1, 2686,
	1, 1202,
	663, 1202,
	665, 1202,
	667, 1202,
	670, 1202,
	-2, 0,
	-1, 2687,
	1, 1214,
	663, 1214,
	665, 1214,
	667, 1214,
	670, 1214,
	-2, 0,
	-1, 2688,
	1, 1270,
	663, 1270,
	665, 1270,
	667, 1270,
	670, 1270,
	-2, 0,
	-1, 2730,
	1, 1183,
	663, 1183,
	665, 1183,
	667, 1183,
	670, 1183,
	-2, 0,
	-1, 2754,
	1, 1249,
	663, 1249,
	665, 1249,
	667, 1249,
	670, 1249,
	-2, 0,
	-1, 2804,
	479, 1965,
	480, 1965,
	-2, 2218,
	-1, 2837,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2238,
	-1, 2838,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2239,
	-1, 2839,
	102, 0,
	279, 0,
	280, 0,
	648, 0,
	649, 0,
	-2, 2240,
	-1, 2840,
	102, 0,
	279, 0,
	280, 0,
	648, 0,
	649, 0,
	-2, 2241,
	-1, 2841,
	102, 0,
	279, 0,
	280, 0,
	648, 0,
	649, 0,
	-2, 2242,
	-1, 2842,
	102, 0,
	279, 0,
	280, 0,
	648, 0,
	649, 0,
	-2, 2243,
	-1, 2843,
	102, 0,
	279, 0,
	280, 0,
	648, 0,
	649, 0,
	-2, 2244,
	-1, 2844,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2245,
	-1, 2856,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2257,
	-1, 2857,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2258,
	-1, 2858,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2259,
	-1, 2862,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2266,
	-1, 2868,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2270,
	-1, 2870,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2278,
	-1, 2871,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2279,
	-1, 2872,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2280,
	-1, 2873,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2281,
	-1, 3047,
	5, 2693,
	203, 2548,
	664, 2690,
	-2, 2681,
	-1, 3048,
	203, 2549,
	-2, 3125,
	-1, 3049,
	203, 2550,
	-2, 2907,
	-1, 3050,
	203, 2551,
	-2, 2772,
	-1, 3051,
	203, 2552,
	-2, 2838,
	-1, 3052,
	203, 2553,
	-2, 2892,
	-1, 3053,
	203, 2554,
	-2, 3032,
	-1, 3054,
	203, 2555,
	-2, 2345,
	-1, 3152,
	1, 2039,
	2, 2039,
	114, 2039,
	162, 2039,
	183, 2039,
	196, 2039,
	204, 2039,
	223, 2039,
	226, 2039,
	257, 2039,
	264, 2039,
	276, 2039,
	296, 2039,
	300, 2039,
	340, 2039,
	374, 2039,
	379, 2039,
	385, 2039,
	467, 2039,
	473, 2039,
	587, 2039,
	600, 2039,
	623, 2039,
	624, 2039,
	625, 2039,
	635, 2039,
	663, 2039,
	665, 2039,
	667, 2039,
	669, 2039,
	670, 2039,
	-2, 2038,
	-1, 3168,
	664, 2662,
	-2, 2676,
	-1, 3170,
	1, 410,
	623, 410,
	670, 410,
	-2, 1924,
	-1, 3208,
	664, 2184,
	-2, 2174,
	-1, 3239,
	38, 2693,
	135, 2693,
	646, 2693,
	662, 2693,
	665, 2693,
	666, 2693,
	669, 2693,
	-2, 2690,
	-1, 3240,
	38, 2694,
	135, 2694,
	646, 2694,
	662, 2694,
	665, 2694,
	666, 2694,
	669, 2694,
	-2, 2691,
	-1, 3470,
	1, 1619,
	461, 1573,
	506, 1573,
	638, 1573,
	643, 1573,
	663, 1619,
	665, 1619,
	667, 1619,
	670, 1619,
	-2, 1924,
	-1, 3633,
	1, 1253,
	663, 1253,
	665, 1253,
	667, 1253,
	670, 1253,
	-2, 0,
	-1, 3661,
	380, 1968,
	-2, 3187,
	-1, 3662,
	380, 1969,
	-2, 3015,
	-1, 3666,
	479, 2616,
	480, 2616,
	-2, 2343,
	-1, 3667,
	479, 2620,
	480, 2620,
	-2, 2344,
	-1, 3668,
	479, 2617,
	480, 2617,
	-2, 2343,
	-1, 3669,
	479, 2621,
	480, 2621,
	-2, 2344,
	-1, 3683,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2268,
	-1, 3684,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2272,
	-1, 3690,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2274,
	-1, 3939,
	1, 903,
	663, 903,
	665, 903,
	667, 903,
	670, 903,
	-2, 1781,
	-1, 4166,
	46, 2653,
	-2, 1353,
	-1, 4171,
	1, 1619,
	663, 1619,
	665, 1619,
	667, 1619,
	670, 1619,
	-2, 1924,
	-1, 4288,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2276,
	-1, 4295,
	270, 0,
	272, 0,
	363, 0,
	-2, 2295,
	-1, 4363,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2324,
	-1, 4364,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2325,
	-1, 4365,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2326,
	-1, 4369,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2330,
	-1, 4370,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2331,
	-1, 4371,
	14, 0,
	15, 0,
	16, 0,
	644, 0,
	645, 0,
	646, 0,
	-2, 2332,
	-1, 4423,
	664, 2663,
	-2, 2677,
	-1, 4669,
	666, 3305,
	-2, 1850,
	-1, 4730,
	270, 0,
	272, 0,
	363, 0,
	-2, 2296,
	-1, 4733,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2299,
	-1, 4734,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2301,
	-1, 4864,
	666, 2678,
	-2, 1654,
	-1, 5042,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2300,
	-1, 5043,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 2302,
	-1, 5054,
	270, 0,
	-2, 2335,
	-1, 5259,
	270, 0,
	-2, 2336,
	-1, 5492,
	54, 0,
	238, 0,
	299, 0,
	513, 0,
	632, 0,
	647, 0,
	-2, 3150,
}

const sqlPrivate = 57344

const sqlLast = 163580

var sqlAct = [...]int16{
	317, 5657, 5423, 5711, 1515, 5690, 4153, 5622, 3545, 3390,
	3823, 3428, 5681, 5563, 5547, 5313, 1040, 6, 5119, 5305,
	5505, 5478, 5491, 1245, 203, 5356, 1041, 10, 5422, 5636,
	5540, 4, 5374, 4152, 5461, 2562, 5413, 5506, 5437, 5507,
	5227, 5204, 5434, 2421, 5453, 4713, 4641, 5191, 1418, 5177,
	5572, 1571, 5503, 5263, 4328, 4998, 5490, 4987, 4993, 4956,
	4920, 1710, 4280, 5063, 3966, 1429, 5029, 1294, 2814, 5124,
	4189, 3896, 3514, 4661, 4653, 5210, 2655, 2392, 3969, 4088,
	4860, 5341, 4563, 3079, 3675, 4861, 3232, 814, 964, 2218,
	2606, 4841, 1506, 3299, 2319, 2885, 2657, 2265, 5003, 1408,
	4183, 3565, 4137, 1867, 2632, 4624, 2021, 4609, 1237, 2343,
	3972, 4038, 4607, 2430, 889, 4122, 1499, 964, 4413, 4216,
	3958, 2824, 5059, 4218, 2815, 4142, 3953, 1305, 4141, 3529,
	3502, 3534, 203, 4144, 1592, 3872, 4115, 4114, 3531, 3955,
	4134, 4426, 3298, 3406, 3954, 3829, 3838, 3429, 3846, 826,
	3804, 2653, 3182, 4712, 3546, 1044, 1865, 3560, 4769, 1293,
	3598, 3477, 3827, 2551, 1507, 2619, 3419, 2187, 3993, 5548,
	2532, 4135, 927, 3153, 1739, 1685, 2549, 3863, 2247, 2442,
	2480, 311, 2184, 4390, 3803, 1740, 2821, 5264, 1914, 2161,
	1744, 3879, 2122, 2898, 3659, 2603, 2092, 3145, 2963, 3147,
	1035, 1804, 1510, 959, 1409, 2530, 3439, 2550, 885, 2526,
	2511, 310, 2965, 3559, 2507, 1554, 2503, 1298, 1569, 1303,
	3515, 2409, 2413, 2341, 1586, 3230, 1482, 3231, 3188, 3125,
	2188, 3076, 2954, 2882, 2391, 2803, 2786, 3183, 2388, 1485,
	1573, 2207, 1492, 1712, 2784, 3539, 1800, 862, 1842, 1807,
	2535, 2204, 2602, 3323, 3324, 5375, 801, 5691, 2381, 3144,
	824, 3284, 966, 1117, 5458, 4145, 1541, 1496, 1488, 970,
	1459, 1462, 2156, 965, 2957, 1447, 1412, 3134, 1426, 3091,
	1391, 2197, 1266, 2935, 3043, 905, 2106, 3009, 214, 2022,
	215, 966, 2023, 870, 2785, 2787, 1248, 1950, 970, 973,
	2700, 2559, 965, 1935, 881, 1833, 1014, 129, 1840, 845,
	2540, 5564, 1695, 5623, 125, 819, 1769, 1279, 51, 50,
	1414, 1389, 48, 39, 37, 35, 3713, 2003, 973, 2028,
	1585, 1750, 1139, 4404, 954, 815, 4405, 828, 1566, 3707,
	5727, 2321, 2321, 5714, 3124, 1424, 3825, 4095, 5698, 1015,
	2321, 5700, 3124, 1764, 2321, 3897, 5501, 2321, 3774, 3775,
	898, 901, 2321, 5697, 5500, 5656, 5654, 3124, 115, 5123,
	5123, 5594, 5549, 5531, 5529, 2571, 5550, 3124, 3124, 5526,
	5523, 2038, 2039, 5527, 5524, 5488, 5487, 5486, 5091, 2571,
	2571, 3570, 4198, 5476, 5474, 5088, 5465, 5123, 5123, 2353,
	5123, 5087, 5464, 5432, 5396, 2069, 5123, 5123, 3199, 5086,
	5389, 5388, 5379, 2041, 3124, 3124, 2571, 5355, 5352, 5083,
	5334, 2571, 5123, 1406, 4946, 5261, 5241, 5206, 5142, 3199,
	4686, 4482, 2571, 5141, 5130, 5082, 5129, 2571, 2571, 3789,
	5123, 4980, 2094, 1550, 2911, 2912, 2913, 2930, 2931, 2932,
	5122, 2040, 5081, 5070, 5123, 5044, 5013, 2571, 3599, 3199,
	3570, 4805, 2060, 4981, 4915, 2933, 3889, 4095, 3124, 1392,
	1392, 1241, 2607, 4199, 2038, 2039, 1230, 2654, 1550, 4888,
	4784, 4732, 1301, 3124, 4785, 3199, 4677, 4671, 1241, 4621,
	4211, 4211, 1220, 4622, 1219, 4513, 4481, 4419, 2069, 4514,
	4482, 4420, 2094, 4417, 4397, 2353, 2041, 4418, 3124, 4312,
	4308, 4210, 4394, 2571, 3124, 4211, 3507, 3919, 3224, 3822,
	2350, 3920, 2923, 3124, 3774, 3775, 1801, 3792, 3793, 3794,
	3916, 1242, 2919, 3820, 3815, 2094, 2350, 3821, 3124, 3814,
	3194, 3780, 1236, 3124, 2040, 3910, 3765, 4728, 3763, 1444,
	3766, 3093, 3764, 2350, 2063, 2064, 2065, 2066, 3755, 3753,
	4095, 2571, 3756, 3124, 2046, 2038, 2039, 2350, 2071, 2072,
	2073, 2082, 2083, 2084, 3724, 3722, 3569, 2353, 3124, 3556,
	3570, 3723, 3555, 2642, 2353, 1763, 2642, 3263, 2075, 2069,
	3198, 3124, 1393, 1454, 3199, 3180, 3172, 2041, 3123, 3124,
	2571, 3674, 3124, 2960, 3124, 3789, 2641, 1395, 2088, 1396,
	2642, 5397, 5265, 5256, 2924, 2925, 2926, 2927, 5244, 2353,
	2068, 2070, 3570, 4394, 2918, 3092, 2094, 4991, 4946, 3774,
	3775, 2350, 4889, 4686, 4623, 2040, 4616, 3397, 3283, 2367,
	275, 2570, 3274, 2435, 2347, 3507, 2060, 4084, 2320, 3416,
	1445, 3189, 2182, 2334, 1445, 1737, 2057, 2046, 4531, 4283,
	4249, 3790, 3774, 3775, 2205, 3792, 3793, 3794, 2519, 4200,
	1916, 3164, 3163, 3162, 3161, 3160, 1397, 275, 1394, 1229,
	1228, 1227, 1226, 1225, 2061, 4727, 1224, 1223, 1877, 4201,
	3291, 1222, 1218, 1217, 277, 1941, 1216, 1215, 1214, 1213,
	1212, 1211, 1210, 1209, 2961, 1208, 1207, 3780, 1206, 2928,
	2929, 3625, 4789, 2068, 2070, 1205, 3774, 3775, 1204, 1203,
	1202, 1201, 1200, 1199, 1198, 1197, 1196, 1183, 1115, 1114,
	1113, 277, 1112, 1111, 1110, 1109, 2322, 2322, 2063, 2064,
	2065, 2066, 2091, 3789, 2921, 2322, 1108, 276, 2046, 2322,
	2038, 2039, 2322, 3291, 1107, 3124, 1106, 2322, 1105, 1104,
	1421, 1103, 1102, 1101, 1100, 2091, 1099, 269, 1098, 1097,
	2992, 1096, 3712, 1095, 2069, 1094, 270, 2061, 1093, 1092,
	1091, 1090, 2041, 3796, 276, 1089, 1088, 1087, 1512, 1086,
	1085, 1084, 2079, 2962, 1083, 2959, 2089, 1082, 1081, 1080,
	1079, 1078, 1077, 1066, 2068, 2070, 216, 1065, 1064, 1743,
	1059, 2094, 3780, 1058, 1051, 1050, 1049, 1034, 1033, 1032,
	2040, 990, 2350, 989, 2085, 2067, 2086, 3790, 3791, 988,
	2350, 2060, 987, 2055, 2056, 986, 977, 976, 975, 974,
	936, 2057, 935, 216, 896, 3780, 1300, 895, 894, 275,
	876, 2062, 4744, 2077, 2350, 305, 304, 303, 2091, 1743,
	302, 2350, 301, 1517, 1303, 5005, 300, 2350, 2061, 299,
	298, 297, 296, 4519, 295, 2350, 294, 1858, 293, 292,
	291, 1758, 1752, 3818, 290, 2353, 289, 288, 287, 1752,
	286, 1303, 1303, 1303, 285, 284, 283, 282, 281, 3780,
	4726, 280, 279, 277, 1446, 5516, 278, 3092, 2091, 4452,
	4409, 2922, 4254, 4212, 3875, 3735, 3718, 2087, 1456, 2093,
	3709, 3796, 3627, 2063, 2064, 2065, 2066, 3602, 3819, 3507,
	3487, 3524, 3790, 2046, 3203, 3169, 3289, 3151, 2076, 4198,
	1595, 2353, 3250, 2208, 2062, 1303, 2164, 2990, 1715, 2091,
	2350, 1303, 1303, 2163, 2347, 1517, 276, 2320, 2776, 1728,
	2976, 1545, 2779, 2974, 2394, 3790, 2352, 2964, 1558, 1559,
	1560, 2231, 2133, 2004, 2035, 108, 269, 2124, 1746, 2093,
	1303, 1562, 1303, 2167, 1303, 270, 1428, 5515, 5512, 2068,
	2070, 5489, 1715, 5473, 3791, 5360, 1445, 5268, 3785, 3783,
	3784, 3776, 3777, 3778, 3779, 3781, 3782, 1545, 1277, 2067,
	5253, 2350, 2093, 2091, 5114, 216, 1517, 3092, 2055, 2056,
	1809, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	2722, 5058, 5247, 5245, 1751, 2062, 5011, 4990, 1715, 1705,
	4814, 3774, 3775, 1252, 4767, 1715, 2091, 3288, 4634, 4766,
	4760, 4759, 4758, 2061, 1303, 1700, 1303, 3542, 1741, 1445,
	1692, 1715, 203, 203, 4751, 4750, 4748, 2080, 4743, 4740,
	1303, 1752, 1303, 4739, 2908, 2909, 2910, 2934, 2920, 2914,
	4620, 2916, 2917, 2915, 2902, 2903, 2904, 2905, 2906, 2907,
	4615, 4456, 1537, 4455, 5007, 2124, 1491, 1495, 1503, 3791,
	2091, 1881, 2958, 2093, 4454, 4422, 3774, 3775, 4384, 1539,
	3288, 1814, 1817, 1757, 2051, 2049, 2050, 2042, 2043, 2044,
	2045, 2047, 2048, 1715, 1420, 4383, 2164, 4382, 1405, 1576,
	1577, 1836, 3791, 2163, 2091, 4304, 3212, 2622, 1820, 3774,
	3775, 4299, 3870, 1588, 1303, 1682, 1687, 1303, 3811, 970,
	3802, 3773, 3770, 2126, 2131, 3769, 1726, 3786, 3787, 3788,
	2125, 3767, 2123, 2162, 3785, 3783, 3784, 3776, 3777, 3778,
	3779, 3781, 3782, 1862, 3762, 1523, 3761, 3760, 2578, 973,
	3238, 3757, 3754, 3734, 275, 1531, 2078, 3717, 3710, 3708,
	3557, 275, 1565, 3152, 2067, 2947, 1738, 2035, 2052, 2053,
	2059, 2081, 2058, 2054, 3526, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 1690, 4529, 1802, 2576, 2034, 4754,
	2062, 5720, 5644, 4753, 3780, 5643, 5562, 5560, 1752, 1882,
	1244, 3816, 3774, 3775, 1722, 1430, 4330, 5424, 277, 1845,
	1847, 4635, 5339, 5325, 5321, 277, 5320, 1568, 5319, 5299,
	5298, 1578, 1579, 5296, 1303, 1303, 1303, 1303, 1303, 1303,
	1303, 1303, 5267, 5266, 1545, 5239, 2888, 5225, 5222, 3785,
	3783, 3784, 3776, 3777, 3778, 3779, 3781, 3782, 5221, 5202,
	2894, 1843, 3902, 5201, 5138, 5109, 1422, 1303, 2093, 3780,
	5056, 276, 5039, 1303, 5038, 3786, 3787, 3788, 276, 275,
	4976, 4972, 3785, 3783, 3784, 3776, 3777, 3778, 3779, 3781,
	3782, 269, 4969, 170, 4947, 1943, 4765, 4687, 269, 4517,
	270, 4516, 3780, 4497, 4496, 4494, 3288, 270, 2013, 3774,
	3775, 3864, 3792, 3793, 3794, 2185, 4635, 1959, 4400, 4387,
	4294, 2111, 4213, 4175, 3790, 4165, 2038, 2039, 4064, 4004,
	216, 3971, 1242, 277, 3904, 3739, 3738, 216, 3733, 3776,
	3777, 3778, 3779, 3781, 3782, 3699, 3501, 3499, 3316, 1572,
	2170, 2169, 2168, 275, 2113, 2165, 2157, 275, 2041, 5006,
	2155, 3210, 1887, 3209, 3166, 3159, 1857, 2058, 2054, 2009,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 1303,
	1303, 1303, 1876, 5084, 3122, 1303, 276, 2972, 2110, 3790,
	3789, 2325, 1426, 2230, 1426, 3780, 2040, 2186, 2179, 2178,
	275, 2177, 2176, 2175, 2174, 2091, 269, 277, 2173, 1595,
	2172, 277, 5270, 2991, 2171, 270, 3525, 2152, 2151, 203,
	2150, 1303, 3790, 2149, 2253, 1517, 2148, 2147, 2146, 2145,
	2144, 2143, 2283, 2253, 2142, 1517, 2141, 1907, 1517, 1715,
	2140, 2139, 2036, 2138, 2137, 216, 2126, 2112, 2109, 2104,
	1530, 1451, 1834, 1944, 277, 1440, 5269, 4979, 4810, 1424,
	276, 1424, 4736, 4451, 276, 4416, 4403, 3721, 2194, 3157,
	2091, 3201, 4812, 1839, 4450, 2014, 2038, 2039, 2125, 3900,
	269, 2107, 2239, 4204, 269, 2005, 4891, 1557, 2226, 270,
	1555, 3791, 3780, 270, 3391, 2241, 3867, 4617, 2010, 5635,
	3774, 3775, 5329, 2091, 2246, 1517, 275, 276, 2041, 2046,
	275, 1303, 2018, 2017, 1220, 5322, 1219, 1572, 2387, 216,
	5010, 4932, 2166, 216, 1572, 2240, 2012, 269, 2235, 4931,
	4930, 1572, 4929, 4928, 1572, 1303, 270, 4927, 4890, 2215,
	3797, 4791, 4695, 1595, 4694, 4693, 2040, 2191, 2192, 2031,
	2032, 1572, 1570, 4692, 4691, 4690, 3791, 2332, 4689, 2277,
	277, 4688, 4483, 2337, 277, 1556, 3541, 2339, 3796, 4407,
	1392, 2424, 4406, 4215, 2344, 2493, 4214, 275, 2346, 4097,
	3342, 1242, 2349, 4096, 5508, 2385, 4093, 5590, 5588, 3791,
	2989, 1545, 5211, 1550, 2359, 2164, 2158, 2159, 2256, 5504,
	4638, 2234, 2163, 2975, 2208, 970, 2973, 2256, 4554, 2254,
	1550, 2306, 3790, 276, 970, 2236, 1551, 276, 2254, 4281,
	3437, 1906, 3759, 2358, 2007, 3758, 4054, 3681, 2038, 2039,
	3327, 277, 2238, 269, 1553, 973, 2216, 269, 4512, 5292,
	3973, 2206, 270, 2373, 973, 1194, 270, 5248, 5246, 275,
	5291, 275, 2069, 4155, 1915, 4154, 5113, 2147, 1550, 4477,
	2041, 4478, 3783, 3784, 3776, 3777, 3778, 3779, 3781, 3782,
	2213, 2135, 216, 2607, 5205, 5292, 216, 2379, 2378, 5537,
	4988, 1572, 2387, 2516, 276, 3566, 4628, 4123, 4936, 2094,
	1960, 1916, 2183, 2091, 2335, 2960, 2147, 2552, 2040, 2553,
	5060, 1195, 4614, 277, 269, 277, 275, 4560, 1242, 4551,
	2091, 2674, 2210, 270, 2225, 2224, 1715, 1715, 2223, 2221,
	2220, 2219, 2038, 2039, 4522, 4244, 3937, 1595, 3784, 3776,
	3777, 3778, 3779, 3781, 3782, 2744, 2651, 2586, 3825, 2361,
	4332, 2262, 2623, 216, 2955, 2512, 3727, 5133, 5703, 1547,
	5105, 3404, 2492, 1715, 2041, 1838, 276, 2491, 276, 3325,
	277, 3208, 3776, 3777, 3778, 3779, 3781, 3782, 4007, 5513,
	1404, 2180, 2160, 3393, 2357, 2499, 269, 2528, 269, 3791,
	4172, 2615, 1715, 2517, 1813, 270, 2488, 270, 2497, 1733,
	1526, 1487, 2040, 2132, 2508, 3413, 2961, 5528, 5525, 4907,
	4903, 4194, 2362, 5314, 3410, 3408, 4488, 1891, 2382, 4994,
	5431, 2046, 3976, 276, 4507, 216, 3538, 216, 5682, 2563,
	2568, 1870, 4106, 2037, 5591, 2502, 5136, 1715, 5592, 1715,
	1839, 1715, 2399, 269, 2400, 5132, 5111, 1552, 4275, 2502,
	4068, 2502, 270, 1247, 2407, 2408, 3941, 5514, 1179, 1715,
	1715, 2380, 2536, 5627, 5165, 1557, 4875, 3778, 3779, 3781,
	3782, 4573, 4877, 1715, 4872, 5569, 5169, 2068, 2070, 1783,
	1735, 1192, 216, 1776, 1421, 1715, 1421, 1957, 1715, 1715,
	1715, 1715, 1715, 2429, 3264, 2962, 2441, 2959, 2401, 2402,
	1028, 1958, 2374, 5713, 1190, 2405, 2406, 3287, 1188, 970,
	1548, 5330, 5158, 934, 2253, 2046, 931, 1836, 3943, 2634,
	1549, 2634, 2736, 2734, 3285, 5144, 2635, 3901, 2557, 2555,
	2556, 4939, 2646, 3005, 1246, 4938, 4571, 1303, 2485, 973,
	2500, 2061, 4570, 1556, 4562, 2463, 4537, 4572, 2384, 4536,
	1551, 4534, 3786, 3787, 3788, 3601, 2569, 3004, 3479, 3785,
	3783, 3784, 3776, 3777, 3778, 3779, 3781, 3782, 4533, 4521,
	3287, 4480, 2611, 4479, 2629, 4112, 2616, 2675, 1303, 2042,
	2043, 2044, 2045, 2047, 2048, 2755, 4111, 3285, 2672, 2383,
	2537, 4056, 2666, 3888, 2484, 3732, 2481, 2498, 3731, 2649,
	3730, 1956, 3729, 2506, 3685, 1574, 1575, 5134, 2681, 3435,
	5106, 1889, 2514, 2513, 3434, 1303, 2659, 1303, 4618, 1029,
	2542, 3415, 2091, 2542, 1303, 2637, 2545, 1303, 2826, 2283,
	2283, 1595, 4052, 1303, 1303, 1303, 1303, 1303, 1303, 1303,
	1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303,
	1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303,
	1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 2964,
	1303, 3973, 1303, 1303, 1303, 1303, 2626, 2590, 2639, 2583,
	1843, 2541, 1843, 1547, 2541, 5684, 5683, 5242, 2256, 3403,
	2553, 3395, 2706, 2778, 5628, 970, 3384, 2501, 1303, 2254,
	4871, 2181, 1303, 1303, 2607, 3202, 5570, 3383, 2062, 2618,
	1303, 2501, 1240, 2501, 1303, 3371, 1303, 1303, 4873, 2796,
	2783, 1550, 1838, 2631, 1595, 973, 2665, 3360, 3358, 3353,
	1303, 1303, 1303, 1303, 2048, 3352, 1303, 1303, 1303, 1303,
	1303, 1303, 1303, 1303, 1531, 2643, 3600, 2644, 2747, 868,
	4892, 1242, 868, 1242, 2794, 3332, 2277, 2277, 3782, 3331,
	1778, 3348, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303,
	1303, 1552, 1303, 2389, 2390, 3292, 2093, 1303, 3346, 3181,
	1574, 1575, 1736, 1908, 2869, 2936, 2937, 1574, 1575, 1426,
	1574, 1575, 2263, 1540, 2011, 1026, 1595, 1025, 1557, 2936,
	2952, 2685, 1939, 3535, 2958, 1426, 2768, 1574, 1575, 2696,
	1826, 4089, 1825, 1185, 1239, 2707, 2693, 1787, 2792, 4053,
	5037, 1303, 1595, 2261, 2955, 1824, 3000, 1823, 4246, 1473,
	4006, 4822, 2605, 2312, 1548, 3271, 2315, 1888, 3218, 1170,
	2730, 3187, 4833, 2820, 1549, 3046, 3046, 3060, 1420, 2936,
	1420, 3329, 3080, 3082, 1517, 2808, 1424, 2807, 2765, 1779,
	3090, 2819, 1884, 2006, 1234, 2794, 2774, 3301, 2670, 2884,
	5630, 3196, 1424, 4086, 5168, 2002, 1556, 2686, 203, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 1916, 1955, 5591,
	2435, 2495, 4085, 813, 1795, 2780, 2754, 2900, 2782, 2781,
	2751, 2795, 2788, 2355, 3167, 1517, 3573, 1220, 2951, 2811,
	1220, 1220, 2812, 2813, 3171, 4832, 3240, 2884, 3372, 3382,
	808, 1972, 1976, 1916, 1938, 3620, 3315, 2742, 3412, 2792,
	2767, 1551, 3637, 1978, 3131, 1241, 1939, 2389, 2390, 3139,
	2694, 3657, 5510, 2538, 1517, 1517, 2687, 2728, 3258, 1529,
	2215, 1031, 1030, 4491, 3940, 3672, 5307, 4874, 2690, 5190,
	3002, 2752, 2016, 1171, 3411, 3003, 2433, 5660, 3006, 3374,
	3007, 3008, 1392, 3409, 3407, 2880, 5631, 2044, 2045, 2047,
	2048, 5629, 2896, 3420, 2793, 1595, 3314, 3696, 1885, 3220,
	3304, 2753, 4518, 4856, 2546, 2636, 4259, 4258, 1904, 2949,
	867, 2684, 4869, 867, 3184, 925, 3156, 2878, 3622, 3364,
	1422, 1936, 1422, 4164, 1242, 1890, 3373, 3130, 2790, 3694,
	3245, 3376, 4599, 5692, 1242, 4321, 3249, 970, 1242, 970,
	3253, 4849, 2539, 1545, 2283, 1808, 3138, 2964, 3143, 3191,
	3260, 3149, 3150, 2277, 5282, 1550, 4091, 3055, 3042, 3071,
	3214, 932, 3252, 3086, 3084, 3286, 3640, 973, 1938, 973,
	5281, 3120, 3121, 3215, 1547, 4937, 2791, 3375, 2414, 3136,
	3137, 3132, 3204, 2415, 932, 3237, 3190, 2166, 1187, 4024,
	1937, 2213, 970, 932, 4600, 4504, 932, 3229, 2543, 4850,
	5309, 2735, 2733, 1075, 4090, 2793, 1806, 2892, 5633, 4535,
	4532, 4461, 3946, 3671, 2890, 4460, 3256, 4459, 4445, 4444,
	1595, 4443, 973, 3261, 4250, 2775, 4118, 2385, 2385, 1242,
	5036, 3193, 1715, 4110, 869, 1176, 1175, 869, 86, 923,
	3293, 5639, 3217, 2544, 4598, 3185, 5511, 1238, 4015, 4050,
	3414, 4025, 3359, 3255, 3351, 1517, 3211, 87, 2482, 3470,
	3243, 3328, 1552, 2487, 3381, 2158, 2159, 2443, 2764, 3330,
	3278, 2277, 1952, 2874, 3262, 92, 1303, 1303, 1491, 1303,
	1495, 3290, 5614, 3248, 1172, 3691, 3254, 2791, 4821, 3222,
	4318, 3474, 3225, 2447, 3226, 3216, 5603, 2875, 3186, 3664,
	3665, 4023, 5613, 1973, 2876, 3179, 2416, 3247, 2881, 2964,
	4016, 1517, 5662, 3639, 5577, 3513, 3692, 5393, 101, 3510,
	3697, 3334, 3303, 4502, 2420, 1548, 4718, 2456, 3405, 2435,
	3349, 3319, 2266, 3265, 5182, 1549, 2575, 2574, 4867, 2489,
	2766, 4717, 4087, 1715, 4252, 3333, 3636, 4119, 1170, 2438,
	2692, 4952, 1786, 3475, 2444, 1715, 4870, 1715, 2434, 3350,
	4014, 1042, 5509, 1715, 1472, 203, 3340, 3341, 3343, 3344,
	3345, 3347, 2435, 1234, 1715, 1715, 124, 3306, 3309, 4319,
	3296, 1421, 108, 121, 1348, 3522, 2483, 3279, 3280, 2457,
	2431, 3281, 3282, 4191, 2866, 3379, 5541, 1421, 3267, 3630,
	3385, 3421, 1517, 3473, 1517, 2196, 4192, 2417, 2422, 809,
	1812, 2439, 4116, 3389, 3277, 3482, 4046, 2321, 2548, 1173,
	3484, 3269, 5480, 3355, 5481, 4845, 5632, 1303, 2000, 2427,
	3432, 3436, 4846, 4048, 3368, 3369, 3471, 3472, 3960, 2455,
	2200, 5408, 3377, 4851, 3378, 3485, 2520, 5097, 2433, 109,
	1174, 2527, 970, 3394, 1974, 3576, 3577, 3387, 3567, 1715,
	3401, 2437, 4047, 4045, 2432, 3270, 3638, 3584, 3585, 3586,
	3587, 3588, 1171, 1186, 2448, 1067, 4044, 924, 3583, 3549,
	2547, 3517, 973, 3687, 4041, 3425, 4848, 3268, 3302, 3426,
	3427, 3561, 3505, 2203, 4191, 2200, 2428, 5308, 2418, 3392,
	1303, 810, 1068, 3558, 3596, 4852, 1303, 1303, 3480, 1178,
	3595, 3571, 3133, 3568, 5315, 2877, 4868, 5637, 3578, 3574,
	3579, 1303, 1886, 4091, 5391, 2879, 3611, 3693, 3613, 1177,
	3615, 2883, 2201, 1808, 2729, 926, 1550, 3695, 3551, 922,
	3564, 3563, 3553, 1970, 3988, 3942, 2449, 2450, 2203, 3506,
	3994, 866, 2425, 2964, 2196, 3170, 811, 1917, 812, 1734,
	2226, 1971, 1975, 2543, 1303, 1303, 1528, 2198, 3521, 3605,
	1303, 1977, 5392, 2445, 2521, 3642, 2689, 3644, 2864, 2015,
	3593, 3544, 2867, 1303, 1303, 3645, 1843, 2201, 3647, 1303,
	1303, 3554, 3552, 1449, 5576, 1303, 3533, 3610, 4966, 3612,
	2153, 3614, 2496, 3616, 3617, 3987, 5183, 3996, 2544, 3948,
	113, 4856, 1434, 1296, 2423, 1903, 1905, 4799, 3898, 2683,
	5181, 2446, 2494, 1076, 4800, 4101, 3626, 2479, 5179, 1436,
	2517, 2199, 5601, 3287, 1176, 1175, 5638, 2512, 2494, 2863,
	1303, 1303, 1303, 3609, 2200, 3480, 1303, 5555, 4714, 4849,
	3307, 2425, 4847, 4842, 5049, 2496, 1303, 1431, 5556, 3949,
	5442, 4049, 5031, 3688, 4909, 4117, 3961, 5658, 834, 212,
	3840, 116, 4840, 1303, 120, 2517, 4503, 3995, 5640, 2946,
	2103, 5178, 4844, 1172, 3652, 1052, 4580, 4798, 3737, 2490,
	2452, 3135, 3925, 5663, 2493, 3148, 4578, 2203, 3663, 1241,
	4857, 4858, 2891, 4334, 5646, 1437, 275, 4850, 3062, 2202,
	4978, 5180, 1057, 4702, 1043, 4942, 2198, 978, 4809, 3654,
	170, 4585, 4719, 4446, 3715, 3716, 3653, 1455, 1453, 3719,
	2434, 4277, 2510, 3655, 1438, 3658, 2201, 1922, 2808, 2486,
	2807, 5357, 5448, 3388, 985, 1420, 3711, 1069, 1070, 4580,
	1495, 5373, 3195, 3673, 4843, 3680, 2419, 2451, 5224, 4578,
	277, 1420, 2509, 4941, 2202, 1303, 1303, 1303, 1303, 4940,
	2804, 4659, 4179, 4034, 1303, 1303, 1303, 2495, 5173, 1303,
	2199, 1435, 4032, 3914, 4583, 3362, 3178, 4582, 175, 2601,
	2193, 5350, 1452, 1303, 1426, 1595, 1443, 800, 4633, 2026,
	3686, 2504, 4373, 3223, 2741, 218, 4763, 4715, 2810, 2436,
	2375, 5542, 2322, 276, 5030, 2524, 4104, 5575, 1173, 5131,
	2025, 4105, 4581, 1303, 3880, 1303, 5077, 4540, 4033, 3363,
	5668, 3832, 3833, 269, 1426, 3967, 2432, 3720, 4967, 5233,
	2372, 5289, 270, 3259, 4660, 2453, 213, 4583, 5342, 1174,
	4582, 217, 1595, 2865, 4566, 4541, 4489, 4487, 4180, 4170,
	3963, 1424, 3813, 5343, 3523, 3516, 5358, 1426, 2505, 3503,
	1595, 2492, 216, 2630, 2624, 2617, 2491, 2522, 2609, 2025,
	2585, 2582, 1517, 2800, 3424, 4581, 3726, 5218, 4317, 1288,
	126, 3839, 2020, 4473, 2514, 2513, 1780, 1464, 5344, 875,
	2283, 1424, 3126, 1242, 1595, 4388, 3834, 1422, 1178, 5414,
	4278, 3291, 5376, 2202, 1517, 3873, 2025, 2743, 3063, 2822,
	2823, 2368, 4608, 1422, 2370, 1517, 5554, 2523, 1177, 3917,
	3844, 3240, 2283, 4845, 1424, 4662, 3367, 2024, 3336, 4999,
	4846, 3500, 4720, 3129, 1474, 5197, 5195, 5108, 3979, 3869,
	3975, 4851, 3974, 3678, 46, 3656, 2671, 1053, 1054, 2663,
	1071, 1072, 4402, 1303, 3837, 3836, 5032, 2652, 4439, 5346,
	3177, 2371, 3308, 1946, 1945, 1303, 3874, 2580, 1940, 3842,
	4035, 3365, 3176, 3175, 3174, 1832, 2424, 3128, 3173, 979,
	980, 4613, 3127, 1517, 4848, 5345, 2024, 3962, 126, 2283,
	1830, 1239, 1074, 2398, 1799, 3808, 3809, 3810, 1818, 3915,
	4579, 2026, 4901, 4852, 4374, 5347, 1303, 3922, 3924, 1432,
	4539, 3918, 2424, 3826, 1819, 4375, 5120, 2277, 5302, 4764,
	3857, 2103, 1517, 2024, 3878, 4957, 4012, 2801, 3927, 4721,
	3938, 1545, 3929, 3930, 3312, 4629, 3856, 3933, 4495, 3934,
	2628, 3935, 3944, 1517, 4126, 3862, 3866, 4027, 2277, 2277,
	3931, 1517, 3841, 5667, 2435, 4031, 3882, 3883, 3884, 3885,
	2026, 970, 1517, 4579, 1801, 5199, 4037, 2533, 914, 5598,
	4484, 1433, 5095, 3894, 5359, 5420, 3978, 5093, 5092, 3983,
	3237, 3599, 3985, 1221, 3861, 3478, 1303, 1303, 3843, 3865,
	2516, 973, 4055, 3855, 1595, 5217, 1243, 2239, 2516, 3858,
	3859, 4474, 4036, 3366, 1923, 4247, 1517, 915, 3893, 4241,
	4079, 3964, 3905, 3906, 3913, 3907, 2277, 3950, 3951, 3912,
	3337, 3338, 3911, 3892, 3891, 3890, 1517, 3572, 3483, 4009,
	4099, 3481, 5121, 2656, 982, 981, 2552, 1894, 5303, 3977,
	4069, 4011, 3981, 5103, 4545, 5198, 3991, 3923, 3921, 5116,
	4847, 5115, 4827, 4826, 5428, 5411, 4770, 1410, 4391, 2971,
	1055, 1056, 4026, 3928, 1924, 3932, 4447, 1997, 5450, 4103,
	4030, 1517, 1715, 5421, 1715, 5080, 4042, 3881, 1595, 3939,
	3603, 5602, 3604, 5600, 5530, 964, 1715, 1715, 4013, 5332,
	3240, 4051, 5323, 4102, 1999, 5104, 3947, 5090, 4857, 4858,
	4550, 3774, 3775, 874, 3792, 3793, 3794, 4094, 983, 984,
	1996, 1517, 2397, 2760, 1994, 4171, 1966, 5055, 4818, 4028,
	1964, 1962, 1934, 3848, 4298, 4078, 1932, 1930, 1928, 1426,
	1926, 3997, 1232, 4005, 1170, 4185, 5304, 4065, 4187, 1831,
	4762, 4071, 4612, 4073, 4466, 4098, 4077, 4018, 4485, 1715,
	4083, 4019, 3805, 4293, 1829, 4020, 1073, 4021, 4242, 1234,
	4022, 1715, 4239, 1715, 4057, 3909, 1421, 3768, 3698, 203,
	203, 3504, 3402, 4169, 3396, 4121, 4107, 4124, 3326, 3213,
	2773, 2769, 3789, 5348, 2531, 2673, 2662, 4160, 2647, 5349,
	1919, 1517, 1913, 2314, 1911, 2233, 1424, 2229, 4060, 1828,
	2001, 1869, 3142, 5185, 4825, 4196, 1421, 2732, 2698, 1233,
	4067, 4178, 4066, 2561, 3335, 3806, 4080, 2277, 4092, 4272,
	4271, 4262, 2020, 3624, 3623, 3581, 2789, 1595, 3849, 1951,
	1595, 2970, 2701, 2581, 4140, 4100, 3379, 4108, 4207, 1421,
	2313, 2311, 2136, 4186, 1883, 1388, 5502, 4163, 4910, 3237,
	4553, 4552, 4538, 4181, 4914, 4887, 5410, 5573, 1171, 966,
	4997, 4245, 4919, 4237, 4248, 1303, 970, 4905, 4109, 4070,
	965, 4113, 1303, 1303, 3561, 930, 1303, 1303, 1303, 2245,
	1303, 3847, 3854, 3561, 3780, 3334, 4902, 4838, 4128, 1303,
	2283, 4188, 4447, 4161, 4837, 1998, 973, 4658, 1303, 4648,
	4569, 4543, 4510, 1303, 4167, 4166, 4508, 2762, 4486, 1595,
	4235, 1995, 4174, 4168, 2761, 1993, 4240, 1965, 1303, 4238,
	3853, 1963, 1961, 1933, 4156, 3536, 1595, 1931, 1929, 1927,
	3528, 1925, 3520, 4195, 3512, 3497, 2283, 2283, 1303, 1303,
	4270, 1303, 1303, 1303, 4267, 4193, 4205, 4206, 3495, 3476,
	3251, 3246, 2579, 4273, 4202, 4184, 4274, 933, 2577, 1303,
	3796, 2554, 4992, 1303, 4269, 2283, 2283, 1303, 1303, 1303,
	1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303,
	1303, 1303, 1303, 1303, 1303, 1303, 1303, 4296, 1303, 4279,
	4255, 1918, 4256, 1912, 4257, 1910, 1303, 1303, 2283, 2518,
	1827, 2731, 2697, 1303, 3790, 2454, 4346, 2560, 4347, 2440,
	2426, 4263, 2354, 4306, 4307, 2351, 1303, 2277, 2348, 2345,
	1176, 1175, 2340, 4386, 2338, 2333, 2327, 1426, 1426, 2323,
	203, 1303, 4314, 3660, 1401, 5568, 4081, 5485, 3850, 3851,
	3852, 2527, 3676, 4276, 3361, 2029, 1242, 5592, 2376, 2364,
	2365, 5301, 3648, 1189, 1191, 3649, 3646, 3469, 2772, 5467,
	5367, 1402, 5012, 2277, 2277, 4926, 1595, 4824, 3562, 1172,
	3945, 2393, 961, 1785, 5235, 3313, 3633, 5228, 4424, 1517,
	1517, 3287, 3287, 3192, 2758, 2091, 4385, 1772, 1458, 4670,
	2435, 4301, 2277, 2277, 1424, 1424, 4303, 2627, 3285, 3310,
	1517, 1517, 1991, 1992, 2688, 2253, 4313, 1517, 2770, 2726,
	1497, 3240, 2283, 1498, 2283, 4329, 3063, 3063, 2721, 4320,
	4322, 4323, 4336, 5466, 2695, 2277, 4878, 2038, 2039, 4921,
	1420, 3433, 1233, 1909, 1303, 5255, 4324, 4344, 1567, 5118,
	903, 4345, 2038, 2039, 4377, 2414, 4349, 3677, 3317, 4440,
	2415, 4351, 4771, 4749, 3992, 3318, 3339, 2771, 2033, 4343,
	3887, 1524, 1303, 1457, 4082, 2030, 5586, 1564, 306, 4393,
	1420, 3791, 4398, 4399, 2041, 5538, 4584, 4565, 3494, 4378,
	2363, 1403, 4645, 3318, 2610, 1535, 3410, 3408, 1498, 1061,
	3417, 5606, 3908, 5419, 3400, 1303, 1303, 2040, 4469, 3398,
	4470, 1498, 4564, 1420, 1173, 3322, 4395, 4396, 3399, 3320,
	1969, 1421, 2040, 4471, 5398, 906, 906, 4472, 920, 3321,
	5365, 5361, 797, 5300, 5219, 5216, 5096, 5026, 4656, 4408,
	4411, 4647, 4632, 1231, 4173, 1174, 3543, 4421, 2277, 2277,
	3509, 2277, 3496, 3087, 126, 2360, 4546, 1303, 1303, 4410,
	2264, 5634, 5117, 4490, 4104, 1303, 3386, 1732, 1731, 4105,
	1725, 1235, 3895, 3156, 2533, 5666, 4509, 4104, 4511, 5363,
	3237, 5545, 4105, 2416, 3774, 3775, 1715, 1715, 4523, 2256,
	5605, 5384, 4468, 4462, 1715, 1743, 970, 1715, 1715, 1743,
	2254, 2420, 1422, 4933, 1178, 2038, 2039, 1715, 3063, 3063,
	3063, 3063, 1517, 4104, 2404, 3273, 4596, 4453, 4105, 1522,
	4741, 4527, 4528, 4530, 1177, 4415, 973, 4586, 2403, 3272,
	1742, 2966, 2529, 1893, 1743, 4449, 2280, 4591, 1743, 1892,
	3628, 2283, 1422, 3001, 3786, 3787, 3788, 2404, 4561, 2403,
	4655, 3785, 3783, 3784, 3776, 3777, 3778, 3779, 3781, 3782,
	5220, 4515, 4548, 4549, 4567, 1303, 5159, 4555, 4568, 4520,
	126, 4923, 126, 1968, 126, 1422, 1967, 4644, 4918, 4917,
	4801, 4797, 4796, 4737, 2417, 2422, 1715, 4711, 4448, 4325,
	4576, 4075, 1303, 4072, 4663, 4577, 3631, 4587, 2130, 2129,
	1426, 1303, 3334, 3651, 4601, 4602, 2777, 5651, 4672, 1715,
	4625, 5615, 5471, 5402, 1715, 1715, 1715, 5401, 5400, 5331,
	5275, 5271, 5193, 5148, 5085, 5079, 5078, 1243, 126, 126,
	5076, 4595, 5075, 4974, 4639, 1749, 4951, 1756, 4876, 1762,
	1715, 4611, 1715, 4588, 126, 4811, 126, 4664, 1715, 4640,
	1595, 4574, 4795, 4794, 4682, 4676, 4619, 4506, 4498, 4264,
	126, 4667, 126, 3421, 4177, 4176, 3984, 1424, 2277, 4120,
	3926, 3632, 3621, 4606, 3592, 2418, 4610, 4627, 4597, 3591,
	3590, 4605, 3589, 4604, 1595, 3527, 3498, 1303, 1303, 4631,
	4594, 3311, 3242, 1303, 1303, 2283, 4666, 3206, 1303, 1303,
	4679, 1303, 3205, 2895, 2763, 2727, 1303, 2720, 2719, 1856,
	4683, 1861, 2718, 2717, 2716, 2625, 2596, 1303, 2595, 1421,
	1421, 2594, 2593, 2592, 4000, 1875, 2591, 1880, 2330, 2425,
	2329, 126, 4643, 1303, 2328, 2326, 2244, 4696, 4650, 2243,
	4652, 3549, 4699, 4698, 4646, 1990, 1989, 1920, 4649, 1794,
	4665, 4704, 1793, 4673, 3561, 1792, 1791, 1790, 1789, 4668,
	1788, 1784, 4674, 1782, 1781, 2271, 4680, 4722, 1719, 4681,
	1718, 4706, 1584, 1583, 1582, 1581, 1580, 1527, 1481, 1480,
	3899, 1479, 1478, 1477, 4735, 1420, 3998, 1476, 1475, 4251,
	4697, 2423, 4731, 1469, 1468, 1426, 1942, 1467, 4700, 1466,
	1465, 1383, 2366, 1426, 4768, 1193, 1184, 1595, 1595, 5306,
	1595, 203, 4707, 4708, 4855, 2283, 4854, 4853, 2759, 2604,
	107, 1426, 2277, 1777, 4716, 1261, 3354, 4723, 100, 2525,
	4505, 1715, 1715, 5539, 5647, 1221, 3999, 5675, 2587, 2458,
	5452, 5451, 5336, 3227, 2324, 4133, 4132, 5544, 2462, 4710,
	5189, 995, 5025, 1595, 1145, 5449, 1767, 1010, 2108, 5430,
	3986, 3438, 1424, 1921, 5213, 2702, 3868, 1517, 3158, 3873,
	1424, 5390, 4745, 3736, 5262, 5048, 2114, 2969, 2134, 3970,
	2120, 3817, 102, 1287, 1303, 1333, 4965, 4964, 1424, 4839,
	4492, 4143, 4961, 4960, 2268, 1426, 2270, 1426, 1251, 1598,
	4761, 3095, 3097, 5479, 2377, 2386, 3207, 3045, 4787, 1310,
	1307, 2272, 2274, 4803, 4804, 1309, 1308, 2273, 1311, 2154,
	1306, 2267, 1517, 4654, 4162, 3547, 4886, 4203, 1837, 1835,
	1147, 3154, 1595, 2419, 1517, 2889, 2953, 1517, 4895, 3725,
	4772, 4898, 2277, 4862, 2127, 4862, 4775, 1422, 4777, 1267,
	4779, 4781, 1593, 4778, 4773, 4774, 4788, 1289, 2950, 1450,
	1303, 4831, 1424, 1595, 1424, 1278, 3845, 4790, 3824, 4190,
	3088, 313, 313, 313, 4412, 803, 804, 4865, 820, 803,
	820, 832, 2799, 1020, 873, 3771, 2956, 1439, 893, 4880,
	3068, 4776, 3061, 900, 900, 900, 900, 4834, 313, 3057,
	3936, 2209, 3537, 2212, 2008, 126, 313, 5062, 4806, 4807,
	4808, 2105, 4836, 1715, 1715, 3548, 4819, 3240, 1303, 1303,
	4934, 1561, 4828, 4829, 4815, 4816, 4817, 4830, 1048, 4820,
	1271, 4802, 2887, 2118, 3703, 313, 2809, 4197, 3871, 3200,
	4885, 5460, 4333, 3629, 2600, 1400, 1517, 1399, 1448, 1398,
	4982, 4879, 5436, 4894, 4881, 4904, 4897, 5433, 4906, 1595,
	2515, 4968, 4908, 4138, 1715, 4925, 4139, 2369, 3266, 2899,
	2222, 4157, 5000, 1283, 3606, 3607, 1703, 4441, 4442, 2748,
	4265, 3830, 1421, 1420, 1420, 4630, 1796, 5125, 4866, 1715,
	1715, 1715, 1715, 1715, 1303, 1715, 1715, 1295, 4457, 4458,
	4896, 2090, 3465, 3464, 5295, 4467, 4916, 4882, 4883, 4949,
	1546, 1544, 4922, 4899, 4924, 1595, 4986, 4950, 4989, 4983,
	1543, 1542, 4945, 2280, 2280, 5001, 4948, 1303, 1303, 1303,
	3063, 3063, 5624, 4935, 3423, 3418, 2534, 4501, 4500, 4499,
	274, 2567, 4944, 4943, 2277, 1595, 3670, 2027, 2019, 271,
	1303, 273, 4963, 1303, 1303, 272, 4959, 4953, 4970, 3990,
	4425, 3877, 4975, 1303, 1895, 4958, 2283, 4977, 4971, 5536,
	4525, 1303, 1303, 5004, 4125, 27, 3237, 907, 908, 909,
	3276, 5009, 2396, 1563, 4476, 26, 25, 24, 803, 803,
	1595, 23, 1715, 5017, 5033, 5034, 313, 5002, 5022, 5024,
	130, 28, 4995, 49, 30, 29, 5, 5015, 5040, 22,
	5014, 174, 172, 149, 4985, 169, 168, 140, 167, 1517,
	3063, 3063, 3063, 3063, 3063, 3063, 3063, 3063, 3063, 3063,
	3063, 3063, 3063, 3063, 3063, 3063, 3063, 3063, 3063, 3063,
	166, 3063, 165, 1595, 164, 1422, 1422, 5045, 163, 5035,
	171, 1303, 5027, 162, 161, 156, 160, 159, 158, 157,
	155, 153, 154, 5057, 1303, 148, 152, 151, 150, 147,
	5071, 146, 5072, 1303, 5051, 145, 144, 1421, 2283, 143,
	2266, 142, 141, 139, 173, 1421, 138, 137, 1303, 219,
	5102, 1303, 136, 2277, 135, 134, 5068, 5069, 133, 132,
	131, 886, 887, 1421, 5073, 68, 67, 127, 128, 21,
	47, 16, 1303, 72, 73, 1303, 20, 5099, 15, 5100,
	42, 105, 1595, 119, 118, 117, 2822, 4337, 1715, 1303,
	43, 1715, 1715, 1303, 5128, 114, 41, 19, 18, 1517,
	17, 112, 111, 5175, 110, 40, 38, 13, 11, 44,
	2217, 14, 2271, 2271, 7, 2822, 4352, 211, 5107, 2424,
	208, 207, 210, 5098, 5101, 206, 209, 104, 5147, 205,
	1426, 106, 204, 103, 5139, 5140, 36, 1421, 12, 1421,
	199, 5209, 4637, 95, 202, 201, 5164, 200, 4381, 198,
	197, 5184, 196, 193, 96, 93, 195, 99, 1595, 98,
	5192, 1715, 194, 94, 5145, 2277, 97, 5149, 34, 5229,
	2280, 5208, 8, 5196, 5150, 5160, 71, 5162, 4862, 5163,
	9, 5028, 5153, 4243, 122, 123, 5154, 45, 91, 90,
	89, 88, 33, 70, 5170, 5171, 1243, 1424, 1243, 1303,
	1303, 2232, 32, 5161, 268, 266, 1420, 267, 265, 264,
	5200, 5215, 189, 244, 5186, 5212, 1303, 2283, 5174, 243,
	5187, 242, 5230, 241, 5194, 240, 5188, 239, 238, 237,
	236, 231, 235, 233, 5232, 232, 234, 230, 260, 5207,
	2634, 259, 1517, 1517, 1517, 5214, 258, 1517, 1517, 1517,
	257, 1517, 1517, 256, 5151, 255, 254, 253, 5152, 247,
	246, 252, 5238, 5231, 5240, 5176, 5237, 251, 5236, 250,
	1303, 249, 1303, 248, 1303, 5290, 5004, 245, 263, 4140,
	84, 229, 5251, 5252, 1426, 228, 227, 225, 2280, 5243,
	221, 224, 226, 223, 222, 126, 220, 1303, 262, 1426,
	261, 5226, 192, 85, 187, 188, 83, 5250, 186, 185,
	5288, 184, 183, 182, 5260, 181, 180, 5254, 82, 191,
	190, 31, 2, 5203, 1, 0, 0, 0, 0, 0,
	0, 0, 4862, 0, 0, 2395, 0, 0, 0, 0,
	0, 0, 0, 0, 2277, 0, 0, 4862, 0, 0,
	2283, 1424, 5287, 5286, 0, 0, 0, 5234, 5317, 0,
	2723, 0, 1426, 1426, 5340, 0, 1424, 5283, 1422, 5310,
	5311, 0, 0, 0, 0, 0, 0, 0, 1221, 5318,
	0, 1221, 1221, 1426, 5364, 5338, 1426, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 2271,
	1715, 1420, 5326, 0, 0, 0, 0, 0, 0, 1420,
	4862, 4862, 0, 0, 0, 4823, 1303, 1303, 5328, 5327,
	0, 0, 0, 0, 0, 0, 1303, 1420, 5335, 1424,
	1424, 4862, 0, 5333, 4862, 0, 5337, 0, 0, 2886,
	0, 5351, 5353, 5354, 0, 5362, 5212, 0, 0, 0,
	1424, 5377, 0, 1424, 0, 0, 5369, 0, 0, 1243,
	0, 0, 0, 5370, 0, 5378, 5372, 5381, 0, 2114,
	0, 5385, 0, 2114, 5380, 0, 0, 2277, 0, 0,
	5427, 3970, 1303, 1303, 1441, 5395, 1303, 0, 0, 5399,
	1715, 1517, 5383, 1517, 0, 820, 5382, 0, 0, 5394,
	0, 1420, 0, 1420, 5403, 5404, 5405, 0, 0, 820,
	0, 5409, 0, 0, 0, 313, 0, 2271, 0, 2572,
	0, 0, 1471, 0, 5459, 5435, 5438, 0, 5463, 0,
	0, 5417, 5418, 313, 5425, 313, 313, 1724, 1502, 313,
	1511, 0, 5426, 0, 0, 0, 5482, 0, 1410, 5444,
	5484, 1525, 1303, 1303, 1303, 0, 0, 0, 0, 893,
	5440, 0, 893, 1422, 2212, 5439, 0, 0, 0, 5443,
	0, 1422, 0, 0, 0, 0, 0, 0, 0, 0,
	5468, 0, 2414, 0, 0, 900, 5472, 2415, 0, 1422,
	5475, 0, 1303, 5445, 5483, 0, 0, 5386, 0, 5387,
	0, 5517, 0, 0, 0, 0, 5406, 5407, 5522, 5496,
	5497, 5498, 1421, 5499, 126, 0, 1715, 313, 0, 313,
	313, 313, 1502, 0, 313, 313, 0, 0, 0, 0,
	0, 2424, 1511, 0, 0, 2266, 0, 0, 0, 0,
	5552, 5519, 5462, 5551, 0, 0, 313, 0, 1745, 5565,
	5559, 0, 0, 1303, 5553, 5520, 5561, 5543, 5535, 0,
	0, 1517, 1517, 1422, 1765, 1422, 0, 0, 0, 0,
	5585, 5558, 5192, 1774, 0, 5574, 5557, 5546, 5533, 0,
	0, 0, 0, 0, 5567, 0, 0, 0, 5593, 5596,
	1798, 0, 1511, 0, 5566, 0, 0, 313, 313, 5532,
	1502, 0, 5534, 1303, 0, 5589, 5587, 5580, 5581, 5584,
	2416, 0, 0, 0, 0, 0, 5608, 5595, 0, 0,
	5612, 1426, 893, 1426, 313, 313, 5599, 5597, 2420, 0,
	5435, 0, 5611, 5438, 5604, 0, 1863, 5571, 0, 5618,
	5610, 0, 0, 0, 5617, 5609, 0, 1871, 0, 0,
	5620, 5616, 1048, 0, 0, 4786, 0, 0, 0, 0,
	5626, 0, 0, 1517, 0, 0, 1421, 5089, 0, 4862,
	0, 4862, 0, 0, 0, 5518, 5642, 5648, 0, 0,
	0, 1421, 5641, 5650, 0, 0, 0, 5655, 1424, 0,
	1424, 0, 0, 0, 0, 1303, 1303, 0, 5661, 0,
	5649, 5619, 5652, 5621, 1303, 1303, 0, 5653, 5659, 0,
	0, 2417, 2422, 2825, 0, 4428, 5680, 5664, 5673, 5679,
	5686, 5669, 0, 0, 6, 0, 5688, 5685, 5693, 5695,
	5687, 203, 5696, 5694, 10, 0, 5689, 313, 5678, 5677,
	0, 0, 0, 0, 1421, 1421, 5699, 0, 0, 1708,
	0, 5702, 5701, 5462, 1517, 0, 0, 5704, 5708, 0,
	5712, 5706, 5709, 313, 0, 1421, 5710, 5705, 1421, 0,
	0, 5719, 2116, 4429, 5718, 5715, 2121, 5716, 5707, 0,
	0, 1303, 0, 0, 5721, 5723, 0, 5670, 5671, 5722,
	5712, 5729, 5725, 1770, 5717, 5726, 0, 0, 5728, 0,
	5672, 4430, 2418, 0, 4427, 0, 2967, 0, 0, 0,
	0, 0, 0, 4438, 0, 0, 5625, 0, 0, 4436,
	0, 0, 86, 0, 126, 0, 0, 126, 0, 126,
	0, 0, 3549, 0, 5454, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 2412, 0, 0, 0, 4437, 2425, 0, 0, 92,
	4433, 2465, 1866, 3549, 5724, 0, 3063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1420, 0, 0, 0,
	0, 0, 126, 0, 0, 126, 4434, 0, 0, 3488,
	0, 126, 3491, 0, 3493, 0, 0, 0, 0, 0,
	0, 0, 101, 2475, 3168, 0, 0, 0, 0, 0,
	0, 0, 0, 2410, 0, 0, 0, 2465, 2423, 0,
	0, 0, 0, 0, 1896, 0, 0, 0, 0, 0,
	5272, 5273, 5274, 0, 0, 5276, 5277, 5278, 0, 5279,
	5280, 0, 0, 0, 2280, 1042, 0, 3540, 0, 0,
	3540, 3700, 3701, 0, 3063, 0, 0, 0, 56, 2475,
	124, 0, 0, 2411, 0, 0, 108, 121, 0, 803,
	0, 126, 2471, 0, 0, 2280, 2280, 3774, 3775, 0,
	3792, 3793, 3794, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 313, 0, 0, 0, 313, 0, 0, 0,
	4297, 0, 0, 0, 0, 0, 2266, 0, 0, 1745,
	1502, 1511, 313, 0, 313, 2242, 0, 0, 0, 0,
	0, 0, 313, 0, 820, 0, 4431, 0, 2471, 0,
	1420, 313, 0, 109, 4432, 2468, 3618, 0, 1422, 0,
	0, 0, 0, 2280, 0, 1420, 0, 0, 0, 0,
	0, 0, 0, 2331, 0, 0, 0, 0, 3789, 0,
	2419, 0, 0, 0, 0, 0, 313, 3275, 0, 0,
	0, 0, 0, 0, 2465, 313, 0, 0, 2038, 2039,
	0, 5455, 0, 0, 0, 0, 0, 0, 0, 4435,
	2473, 2468, 0, 0, 0, 3774, 3775, 0, 3792, 3793,
	3794, 0, 2069, 1421, 0, 1421, 0, 893, 1420, 1420,
	2041, 0, 0, 0, 0, 0, 2475, 2886, 5137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1420,
	0, 0, 1420, 3798, 3799, 3800, 3801, 0, 2114, 2094,
	0, 0, 0, 0, 0, 900, 2473, 900, 2040, 0,
	0, 0, 0, 0, 0, 0, 2474, 900, 900, 3063,
	3780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2271, 0, 0, 3789, 0, 0, 5446,
	0, 5447, 0, 0, 0, 2471, 0, 0, 0, 0,
	0, 2478, 1422, 0, 113, 0, 2464, 0, 0, 0,
	0, 0, 0, 0, 2271, 2271, 0, 1422, 0, 86,
	0, 0, 2474, 0, 0, 3063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 3796, 0, 0, 0,
	3063, 0, 0, 0, 2280, 2461, 92, 2478, 2468, 0,
	0, 0, 0, 212, 0, 116, 0, 0, 120, 0,
	2317, 2046, 0, 0, 2466, 0, 0, 0, 0, 0,
	1422, 1422, 2271, 0, 0, 2476, 0, 0, 3780, 0,
	3790, 0, 0, 0, 0, 0, 0, 0, 0, 101,
	275, 1422, 2472, 0, 1422, 2038, 2039, 2266, 1043, 0,
	0, 3357, 0, 2473, 170, 0, 0, 2459, 0, 0,
	0, 0, 313, 0, 0, 0, 313, 2068, 2070, 2069,
	2466, 0, 0, 2469, 0, 0, 0, 2041, 0, 0,
	2467, 2476, 1042, 0, 0, 0, 0, 0, 2477, 0,
	0, 0, 0, 1410, 277, 56, 0, 124, 2472, 5582,
	5583, 0, 0, 108, 121, 313, 2094, 2460, 0, 0,
	0, 2091, 0, 0, 0, 2040, 0, 0, 0, 2474,
	5456, 0, 175, 0, 313, 0, 0, 0, 0, 2469,
	0, 2061, 0, 1410, 0, 313, 2467, 0, 0, 218,
	0, 0, 313, 0, 2477, 0, 0, 276, 3790, 0,
	0, 0, 0, 0, 2478, 0, 0, 0, 313, 0,
	313, 0, 0, 0, 803, 2470, 313, 269, 0, 5457,
	109, 0, 0, 0, 0, 0, 270, 0, 893, 0,
	213, 0, 1048, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 2280, 0, 0, 3791, 0, 0,
	0, 5645, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 2091, 0, 1502, 313, 0, 1420, 0, 1420,
	0, 2470, 3356, 2271, 0, 0, 0, 2466, 2046, 2091,
	0, 0, 893, 0, 0, 0, 0, 0, 2476, 313,
	2280, 2280, 0, 0, 0, 3774, 3775, 2699, 3792, 3793,
	3794, 0, 313, 0, 313, 2472, 313, 0, 313, 0,
	313, 0, 313, 0, 3357, 0, 0, 0, 0, 2280,
	2280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 2070, 2469, 2737, 0, 0,
	2738, 0, 2739, 2467, 2740, 0, 0, 0, 2062, 0,
	0, 2477, 2280, 0, 0, 0, 0, 0, 0, 313,
	313, 313, 313, 313, 0, 3791, 0, 0, 0, 0,
	126, 126, 0, 126, 1770, 0, 3789, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 0, 2893,
	873, 0, 0, 0, 893, 0, 0, 0, 2061, 0,
	0, 0, 0, 2608, 0, 2116, 0, 0, 0, 0,
	3786, 3787, 3788, 0, 0, 0, 2093, 3785, 3783, 3784,
	3776, 3777, 3778, 3779, 3781, 3782, 0, 0, 2470, 1422,
	0, 1422, 0, 0, 0, 4001, 4002, 0, 4003, 0,
	212, 0, 116, 0, 0, 120, 0, 0, 126, 126,
	0, 126, 2645, 0, 0, 0, 0, 0, 0, 0,
	1724, 0, 0, 0, 0, 2280, 2280, 1724, 2280, 0,
	2658, 2660, 0, 2271, 0, 0, 0, 275, 3780, 2091,
	0, 0, 0, 0, 2664, 1043, 0, 0, 0, 2901,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 2676,
	2677, 2678, 2679, 2680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4061, 4062, 0, 4063, 0, 0, 2271,
	2271, 2042, 2043, 2044, 2045, 2047, 2048, 0, 3786, 3787,
	3788, 277, 0, 0, 0, 3785, 3783, 3784, 3776, 3777,
	3778, 3779, 3781, 3782, 0, 0, 0, 0, 2271, 2271,
	0, 0, 0, 0, 3796, 4289, 4290, 0, 0, 175,
	0, 803, 0, 0, 3089, 2062, 0, 3831, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 313, 0, 0,
	0, 2271, 0, 0, 276, 0, 803, 0, 1410, 0,
	0, 1243, 0, 313, 0, 803, 0, 0, 3790, 0,
	0, 0, 0, 0, 269, 126, 126, 313, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 213, 0, 0,
	0, 0, 217, 0, 3860, 0, 0, 313, 1511, 0,
	0, 0, 0, 2093, 313, 0, 313, 1745, 0, 313,
	0, 0, 3876, 1848, 0, 4353, 4354, 4355, 4356, 4357,
	4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367,
	4368, 4369, 4370, 4371, 4372, 0, 4376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3903, 0, 0, 2091,
	0, 0, 0, 0, 0, 2280, 313, 1511, 0, 313,
	820, 0, 820, 0, 2271, 2271, 0, 2271, 0, 313,
	0, 0, 313, 0, 0, 0, 3241, 0, 0, 0,
	4228, 0, 313, 313, 0, 0, 0, 313, 0, 313,
	0, 0, 0, 0, 1502, 4226, 313, 313, 0, 1511,
	1511, 3257, 0, 0, 0, 4219, 313, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 3791, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 2069, 0, 0, 0, 0,
	900, 900, 0, 2041, 900, 900, 0, 0, 0, 0,
	0, 0, 0, 3300, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 313,
	0, 2040, 0, 4230, 0, 0, 4231, 0, 0, 0,
	0, 0, 2060, 313, 0, 0, 0, 0, 0, 2280,
	0, 0, 2057, 0, 0, 4221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3370, 0, 0, 0,
	4228, 4220, 0, 0, 0, 893, 126, 0, 0, 0,
	893, 0, 0, 0, 0, 4226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4219, 1410, 1410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2271, 0, 0, 3430, 1745, 0,
	4229, 0, 0, 0, 2063, 2064, 2065, 2066, 3786, 3787,
	3788, 0, 2038, 2039, 2046, 3785, 3783, 3784, 3776, 3777,
	3778, 3779, 3781, 3782, 0, 0, 0, 0, 0, 313,
	3486, 0, 0, 0, 0, 0, 2069, 0, 0, 2280,
	3876, 4217, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 4230, 0, 0, 4231, 0, 2079, 0,
	1745, 0, 2089, 313, 0, 0, 3430, 0, 0, 0,
	2068, 2070, 0, 2094, 313, 4221, 0, 0, 3456, 0,
	0, 0, 2040, 0, 0, 3532, 937, 0, 0, 0,
	2085, 4220, 2086, 2060, 0, 3300, 0, 803, 0, 2055,
	2056, 0, 0, 2057, 0, 0, 1048, 3300, 0, 0,
	0, 0, 949, 3446, 3444, 0, 0, 0, 0, 2077,
	0, 3448, 3450, 3440, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 947, 2061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2271, 4233,
	4229, 313, 1502, 313, 0, 0, 0, 950, 0, 0,
	0, 0, 4292, 3608, 313, 1724, 3466, 0, 1502, 0,
	1502, 0, 1502, 0, 4227, 4222, 4223, 4224, 4225, 0,
	0, 0, 0, 2087, 0, 2063, 2064, 2065, 2066, 4266,
	0, 0, 1593, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 943, 3422, 0, 2091, 4232, 0, 0, 958,
	0, 0, 0, 313, 313, 313, 313, 1502, 0, 0,
	1502, 0, 0, 313, 0, 948, 0, 0, 313, 0,
	0, 2280, 0, 0, 0, 0, 0, 0, 1724, 1724,
	0, 2068, 2070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4234, 2271, 313,
	0, 4310, 0, 0, 0, 2067, 0, 313, 0, 0,
	2055, 2056, 0, 0, 0, 0, 0, 0, 4326, 942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4233,
	0, 2062, 0, 126, 0, 0, 0, 868, 1258, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 3442, 0, 0, 4227, 4222, 4223, 4224, 4225, 1410,
	0, 0, 3458, 2080, 0, 0, 945, 0, 0, 0,
	0, 0, 0, 0, 3575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3582, 3457, 3447, 3445, 3449,
	3451, 3441, 3443, 3459, 3461, 0, 4232, 0, 4651, 2093,
	0, 0, 126, 0, 3453, 3455, 3463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2280, 0, 0, 0, 0, 1036, 2091, 0, 0, 0,
	957, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 3467, 0, 0, 0, 0, 0, 4234, 0, 0,
	0, 0, 0, 86, 0, 1039, 1038, 0, 4423, 0,
	1724, 1724, 1724, 1724, 0, 0, 0, 4701, 0, 0,
	3634, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2067, 0, 0, 0,
	92, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	2271, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 2062, 939, 0, 3749, 0, 0, 0, 3750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2280, 101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 944, 126, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 3460, 0, 0,
	0, 0, 0, 0, 0, 0, 1042, 0, 0, 0,
	2093, 0, 313, 0, 0, 0, 0, 0, 867, 56,
	0, 124, 0, 0, 0, 0, 0, 108, 121, 0,
	0, 0, 0, 0, 953, 0, 0, 0, 0, 0,
	0, 0, 0, 941, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 803, 0, 0,
	0, 0, 803, 0, 0, 803, 0, 0, 803, 803,
	0, 0, 3468, 0, 803, 0, 0, 803, 0, 2271,
	0, 0, 3452, 3454, 0, 313, 3462, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 938, 313, 0, 0,
	0, 0, 951, 0, 0, 0, 0, 0, 313, 2058,
	2054, 1745, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047,
	2048, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	820, 2280, 869, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 313,
	313, 5054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 955, 956, 0, 952, 0, 0, 0,
	0, 2271, 0, 0, 0, 0, 0, 0, 0, 2038,
	2039, 0, 0, 3300, 3300, 313, 0, 3956, 3959, 0,
	0, 0, 0, 4912, 3300, 0, 2242, 0, 0, 86,
	0, 0, 126, 2069, 0, 3300, 2242, 0, 3300, 2242,
	0, 2041, 2242, 0, 0, 3956, 0, 126, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 313, 3959,
	0, 313, 0, 0, 0, 113, 92, 0, 0, 5110,
	2094, 126, 0, 0, 0, 0, 0, 0, 0, 2040,
	3959, 0, 313, 0, 2280, 0, 0, 4029, 3959, 0,
	2060, 0, 0, 0, 0, 0, 0, 4973, 0, 0,
	2057, 4040, 0, 4040, 0, 0, 0, 0, 0, 101,
	0, 0, 4984, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 116, 0, 0, 120,
	0, 0, 0, 0, 0, 0, 5008, 3300, 0, 3300,
	0, 4076, 3300, 3959, 0, 0, 3300, 0, 0, 0,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 4287,
	0, 275, 0, 3959, 0, 0, 893, 124, 0, 1043,
	0, 0, 0, 108, 121, 170, 0, 0, 0, 0,
	2271, 0, 2063, 2064, 2065, 2066, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 0, 0, 0, 1502, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 126, 4131, 0, 0, 4136,
	3300, 0, 4783, 313, 0, 0, 0, 0, 0, 0,
	109, 1511, 0, 175, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	218, 0, 3532, 0, 0, 1502, 0, 313, 276, 0,
	3300, 0, 803, 0, 5259, 4813, 0, 2055, 2056, 3300,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	5094, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 213, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 2061, 2271, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 1724, 0, 0, 0, 1037, 0, 0,
	5294, 4253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4260, 5316, 4261, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 1502, 313, 0, 313,
	0, 0, 0, 0, 0, 1502, 0, 0, 1502, 0,
	3197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 313, 0, 0,
	2886, 0, 1724, 1724, 1724, 1724, 1724, 1724, 1724, 1724,
	1724, 1724, 1724, 1724, 1724, 1724, 1724, 1724, 1724, 1724,
	1724, 1724, 0, 1724, 0, 0, 0, 86, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4129, 4130, 0,
	0, 0, 0, 2067, 0, 0, 87, 0, 0, 0,
	212, 0, 116, 0, 0, 120, 4331, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 1043, 0, 0, 315, 0,
	4209, 170, 0, 0, 0, 0, 0, 101, 0, 0,
	0, 0, 4236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 993, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	4389, 277, 0, 0, 0, 0, 126, 996, 0, 0,
	1042, 0, 997, 0, 0, 313, 313, 5046, 0, 0,
	0, 0, 0, 56, 0, 124, 0, 0, 0, 175,
	0, 108, 121, 0, 0, 0, 0, 0, 0, 0,
	803, 0, 0, 4414, 803, 0, 218, 0, 0, 0,
	0, 0, 803, 0, 276, 998, 0, 1012, 0, 0,
	0, 0, 5046, 0, 0, 0, 126, 0, 0, 126,
	0, 5324, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 999, 0, 0, 213, 0, 1000,
	0, 0, 217, 313, 0, 0, 2058, 2054, 109, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0,
	0, 0, 1021, 216, 0, 2825, 0, 0, 0, 1001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5366, 0, 0, 5368, 1019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	994, 992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1265, 0, 0,
	0, 0, 0, 0, 1002, 893, 0, 2195, 0, 0,
	0, 0, 0, 0, 2825, 0, 0, 0, 0, 0,
	0, 1023, 0, 0, 0, 0, 0, 868, 0, 0,
	0, 126, 0, 0, 0, 126, 0, 0, 0, 0,
	4542, 0, 0, 4544, 2038, 2039, 4547, 2071, 2072, 2073,
	2082, 2083, 2084, 0, 4040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 2069, 0,
	313, 0, 0, 0, 0, 0, 2041, 0, 0, 113,
	0, 0, 0, 0, 0, 0, 0, 2088, 0, 0,
	0, 0, 0, 0, 3430, 0, 5469, 0, 0, 2074,
	5470, 0, 0, 0, 0, 2094, 0, 0, 0, 3959,
	1022, 313, 0, 0, 2040, 820, 820, 1511, 0, 0,
	1017, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2057, 0, 0, 212, 0,
	116, 0, 0, 120, 0, 313, 3532, 0, 0, 3532,
	2242, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 4642, 0, 3430, 0, 0, 313, 0, 0,
	0, 313, 0, 313, 0, 275, 0, 0, 313, 0,
	0, 0, 0, 1043, 0, 0, 0, 0, 1016, 170,
	0, 0, 0, 0, 0, 0, 0, 3300, 313, 1003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1048,
	3300, 0, 0, 0, 0, 0, 0, 2063, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 1250, 2046, 0, 277,
	0, 0, 1004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 3959,
	0, 0, 0, 3257, 0, 0, 0, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 0, 218, 2089, 0, 0, 867, 0,
	0, 0, 276, 2068, 2070, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 1013, 0, 0, 0, 0, 0,
	0, 0, 269, 2085, 0, 2086, 1005, 4575, 0, 0,
	0, 270, 2055, 2056, 0, 213, 0, 126, 4589, 4590,
	217, 0, 0, 0, 0, 0, 0, 0, 4592, 4746,
	0, 0, 2077, 0, 0, 1011, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 2061, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 1007, 1026,
	0, 1025, 0, 0, 0, 1008, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1009, 0, 0, 0, 0, 1018, 0, 0, 0,
	0, 0, 1027, 313, 0, 1024, 2087, 0, 0, 1745,
	0, 313, 869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	4678, 0, 0, 0, 0, 2658, 4684, 4685, 0, 0,
	0, 0, 1511, 1511, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 1511,
	1511, 0, 313, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3300, 3300,
	0, 3956, 0, 0, 4040, 3300, 0, 0, 2067, 0,
	0, 0, 0, 4864, 0, 4864, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3300, 0, 2242,
	0, 0, 0, 3956, 2062, 1745, 1745, 313, 3959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3959, 0, 313, 3959, 0, 313, 4900, 0, 0,
	0, 0, 4040, 2074, 0, 4040, 2080, 0, 0, 4040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3300, 2074,
	3300, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2093, 0, 3430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 2074, 0, 0, 0, 0, 0, 2074, 0,
	0, 0, 3038, 3039, 3040, 3041, 3034, 3035, 3036, 3037,
	0, 3300, 3300, 0, 0, 0, 0, 3532, 3532, 0,
	0, 0, 0, 0, 3956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 4792, 4793, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 2078, 0, 0, 1724, 1265,
	1265, 1265, 0, 0, 0, 0, 0, 2052, 2053, 2059,
	2081, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043, 2044,
	2045, 2047, 2048, 0, 0, 0, 0, 0, 2944, 0,
	0, 0, 2945, 2074, 3014, 3015, 3016, 3017, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1679, 0,
	0, 0, 2074, 0, 0, 0, 0, 2074, 3026, 3027,
	3028, 3029, 3022, 3023, 3024, 3025, 3030, 3031, 3032, 3033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3010, 3011, 3012, 3013, 3018, 3019, 3020, 3021,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2658, 0, 3300, 2242, 0, 2242,
	0, 0, 4642, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5126, 0, 5126, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 893, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1250, 1250,
	1250, 4040, 1745, 0, 0, 0, 1745, 0, 1502, 0,
	5016, 0, 5018, 5019, 5020, 0, 0, 5023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3959, 0, 313, 0,
	0, 0, 0, 0, 2074, 2074, 2074, 2074, 2074, 2074,
	2074, 2074, 1694, 0, 0, 0, 0, 0, 1720, 0,
	0, 1724, 0, 0, 2074, 4642, 0, 0, 4864, 0,
	0, 1745, 0, 0, 0, 3300, 0, 2074, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 1753,
	0, 1759, 0, 5223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 5074, 0, 0, 0, 1724, 0, 0,
	0, 0, 0, 3067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 313, 0, 2074, 0,
	0, 0, 1724, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4331,
	0, 1854, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4040, 5285, 2038, 2039, 0, 0,
	0, 0, 4642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2069, 0, 4864, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 4864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5166,
	0, 1947, 0, 0, 1953, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 313, 0, 2040, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 820, 0, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4864, 4864, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4864, 0, 313, 4864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 4286, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2063,
	2064, 2065, 2066, 0, 0, 0, 0, 0, 0, 2046,
	1511, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2115, 5415, 0, 0, 0, 0,
	2128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5126, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1265, 0, 2068, 2070, 0, 3300, 0,
	0, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2055, 2056, 0, 2082, 2083, 2084,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 4331, 0, 0, 2061,
	0, 0, 0, 0, 2088, 0, 2189, 2189, 2189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 1745, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 1416, 0,
	0, 2658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 308, 799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1299, 0, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	2067, 0, 0, 0, 2046, 0, 0, 0, 0, 3300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4864,
	0, 4864, 1250, 0, 1745, 0, 2062, 0, 0, 0,
	0, 0, 0, 2074, 0, 0, 312, 312, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	2068, 2070, 0, 312, 0, 2074, 0, 0, 0, 0,
	0, 971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3300, 2055,
	2056, 0, 0, 0, 2093, 0, 0, 0, 0, 0,
	971, 0, 0, 0, 0, 3430, 0, 2074, 0, 2077,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 3300,
	0, 0, 0, 0, 2061, 2074, 0, 0, 0, 0,
	0, 0, 0, 3430, 0, 0, 2074, 2074, 2074, 2074,
	2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074,
	2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074,
	2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074,
	2074, 2074, 0, 0, 0, 0, 0, 2074, 0, 2074,
	2074, 2074, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 3067, 3067, 2058, 2054, 0, 2051, 2049, 2050, 2042,
	2043, 2044, 2045, 2047, 2048, 2091, 2074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 0,
	0, 1423, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1265, 0, 0, 0, 1679,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 0,
	2074, 2062, 0, 2074, 0, 0, 2074, 0, 0, 0,
	0, 0, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 3795, 1679, 3067, 3067, 3067, 3067, 0, 0, 2074,
	0, 2074, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2756, 0, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	1679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2798, 0, 2802, 0, 0, 0, 0, 0,
	0, 2816, 0, 0, 1250, 0, 0, 0, 0, 0,
	2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836,
	2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856,
	2857, 2858, 2859, 2860, 2861, 2862, 0, 2868, 0, 2870,
	2871, 2872, 2873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2897, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2115, 0, 0,
	0, 2948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2978, 2981, 2984,
	2987, 0, 0, 2993, 2994, 2995, 2996, 2997, 2998, 2999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1679, 0, 0, 0, 0, 0, 0,
	0, 3059, 0, 3070, 3072, 3077, 0, 0, 853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 837,
	0, 0, 309, 0, 838, 0, 0, 0, 0, 0,
	2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 2069, 0, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 839, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 841, 929, 0, 0, 0, 0, 0, 1679, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 842, 2074, 2074,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 2039, 0, 0, 0,
	312, 0, 843, 835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 2069,
	312, 312, 0, 0, 312, 0, 844, 2041, 0, 0,
	0, 836, 0, 2063, 2064, 2065, 2066, 1590, 0, 0,
	0, 0, 0, 2046, 1702, 0, 0, 0, 0, 868,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 858, 0,
	0, 0, 0, 0, 0, 0, 2057, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 2068,
	2070, 0, 312, 0, 312, 312, 312, 0, 2074, 312,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 2085,
	0, 2086, 0, 0, 0, 0, 0, 0, 2055, 2056,
	0, 971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 855, 0, 1852, 1853, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 0, 0, 0, 2063, 2064,
	2065, 2066, 2074, 2074, 0, 3067, 3067, 0, 2046, 2074,
	0, 0, 312, 312, 0, 0, 0, 0, 0, 3795,
	3795, 0, 0, 2074, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 0, 0, 0, 0, 0, 312,
	312, 0, 2087, 0, 0, 0, 0, 2074, 0, 865,
	0, 846, 0, 3489, 3490, 0, 3492, 0, 0, 2074,
	0, 0, 0, 2076, 2068, 2070, 0, 0, 0, 1265,
	0, 0, 0, 0, 2091, 0, 0, 0, 0, 0,
	0, 0, 866, 0, 847, 0, 0, 1979, 0, 0,
	0, 0, 0, 2055, 2056, 3067, 3067, 3067, 3067, 3067,
	3067, 3067, 3067, 3067, 3067, 3067, 3067, 3067, 3067, 3067,
	3067, 3067, 3067, 3067, 3067, 0, 3067, 3795, 3795, 3795,
	3795, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	867, 0, 0, 0, 2067, 0, 0, 0, 848, 0,
	0, 0, 0, 863, 864, 0, 861, 0, 0, 0,
	0, 0, 312, 0, 2074, 856, 0, 0, 849, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3619, 0, 850, 0, 857, 2091,
	0, 0, 0, 0, 0, 0, 0, 851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2093, 0,
	0, 0, 0, 852, 0, 0, 0, 0, 860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 854, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2095, 2096, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 1250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0,
	0, 3683, 3684, 1679, 0, 0, 2227, 3690, 4752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2237, 2093, 1702, 0, 3704, 3705, 0, 0,
	0, 0, 2948, 0, 0, 0, 0, 2074, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1679, 0, 0, 0, 0, 2211, 0, 1423, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 3714, 1679, 0,
	0, 0, 0, 0, 0, 1702, 0, 312, 2211, 312,
	0, 0, 0, 3728, 0, 0, 0, 971, 0, 0,
	0, 0, 0, 0, 0, 0, 971, 0, 0, 0,
	3740, 0, 1679, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1265, 0, 0, 0, 0, 0, 0, 0, 1463,
	0, 0, 0, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1486, 0, 1486,
	1486, 0, 0, 929, 0, 0, 0, 0, 0, 0,
	0, 3077, 3077, 3077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3835, 2074, 2074, 0, 0, 2074, 3795, 3795,
	2074, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 1688, 1463, 0, 0, 1704, 929,
	0, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1679, 0, 0, 0, 0, 2074, 2074, 2074,
	2074, 2074, 0, 0, 0, 0, 0, 2074, 0, 2074,
	0, 0, 3795, 3795, 3795, 3795, 3795, 3795, 3795, 3795,
	3795, 3795, 3795, 3795, 3795, 3795, 3795, 3795, 3795, 3795,
	3795, 3795, 0, 0, 0, 3795, 0, 0, 2074, 2074,
	0, 929, 929, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 2598, 0, 0, 312, 0, 0,
	0, 971, 0, 0, 0, 0, 1679, 0, 0, 1427,
	1250, 0, 2621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1250, 0, 0, 0, 0, 0, 2633, 0,
	2633, 0, 0, 0, 0, 0, 2640, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 3989, 2074, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 2074, 0, 0, 2668, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 312, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 2691,
	0, 0, 0, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2708, 0, 2710, 0, 2712, 0,
	2714, 0, 2715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4058, 4059, 2074, 2074, 0, 0, 0,
	312, 0, 0, 0, 0, 1679, 0, 0, 1679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 2745,
	2746, 0, 0, 0, 0, 0, 0, 971, 0, 312,
	0, 312, 0, 312, 0, 312, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 0, 312, 312, 312, 312, 312, 0,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 2074, 0, 0, 0, 2074, 2074,
	0, 0, 2074, 2074, 0, 0, 0, 2074, 0, 0,
	0, 2074, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 0,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2816, 0, 0, 0, 0, 3165, 0, 4284,
	4285, 0, 0, 4288, 0, 0, 0, 4291, 0, 3067,
	1486, 0, 0, 0, 0, 0, 4295, 0, 0, 1704,
	0, 0, 0, 0, 0, 4302, 0, 0, 0, 0,
	3835, 0, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4315, 0, 0, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 4338, 4339, 0, 4340, 4341,
	4342, 0, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 4348, 0, 0, 971,
	4350, 971, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 4379, 4380, 0, 2621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 4392, 971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 312, 4401, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 312, 0,
	0, 0, 312, 0, 312, 0, 0, 0, 0, 0,
	2074, 312, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 2074, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 2074, 3795, 3067, 0, 0, 0, 0, 0,
	2074, 0, 0, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1427, 0, 0, 0, 0, 0, 0, 0, 1427,
	0, 0, 2038, 2039, 0, 0, 0, 0, 0, 0,
	312, 4475, 0, 0, 0, 0, 0, 0, 0, 3795,
	3067, 0, 0, 0, 312, 0, 2069, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 2074, 1702, 312, 4493,
	0, 0, 0, 1427, 2074, 3067, 0, 0, 0, 2589,
	0, 0, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2094, 2074, 0, 2074, 0, 0, 0,
	0, 0, 2040, 4524, 0, 0, 2074, 0, 0, 2614,
	0, 2074, 0, 2060, 0, 0, 0, 0, 1679, 1427,
	0, 0, 0, 2057, 0, 0, 1427, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1427, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1679, 3508, 4556, 4557, 0, 0, 0, 0,
	0, 0, 0, 0, 2621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3689, 0, 971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3795, 0,
	0, 0, 0, 0, 1427, 2063, 2064, 2065, 2066, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 312, 3580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 2074, 3795, 0, 0, 2074, 0, 0, 0,
	0, 3594, 0, 3597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3795, 0, 0, 0, 0,
	0, 0, 2189, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 2070, 0, 0, 1679, 1679, 0, 1679, 0,
	0, 0, 0, 0, 312, 2614, 2749, 2750, 0, 2189,
	0, 0, 0, 0, 0, 0, 0, 0, 4675, 0,
	2055, 2056, 0, 0, 0, 0, 312, 0, 312, 0,
	0, 0, 0, 3641, 1702, 3643, 1702, 0, 0, 312,
	0, 1679, 0, 3650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 312,
	312, 312, 0, 0, 4724, 4725, 0, 0, 312, 0,
	4729, 4730, 0, 312, 0, 4733, 4734, 0, 0, 0,
	1679, 0, 0, 4738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4742, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	4747, 1679, 312, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1427, 0, 1427, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 0, 0,
	1427, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 2284, 0, 0, 0, 0, 0, 0,
	1427, 0, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1463, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1250, 0, 1679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	929, 0, 0, 1679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1463, 0, 0, 1463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1486, 3244, 0, 0,
	0, 1486, 0, 1486, 1427, 0, 0, 0, 0, 0,
	929, 929, 0, 0, 0, 0, 0, 4913, 1679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1423, 0, 0,
	0, 1679, 0, 0, 0, 4954, 4955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3886, 0, 0,
	0, 0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083,
	2084, 0, 0, 0, 0, 0, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 2075, 2069, 1688, 0, 1265,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	2211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1679, 5021, 312, 2094, 0, 0, 0, 0, 0, 1702,
	1702, 0, 2040, 971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 1427, 1427, 0,
	0, 1704, 0, 2057, 5041, 5042, 5043, 0, 1427, 0,
	0, 0, 0, 0, 0, 3952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2816, 0, 0,
	5052, 5053, 0, 0, 1427, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 312, 312, 1679, 0, 5061, 5064,
	0, 0, 0, 0, 0, 0, 0, 4008, 4010, 0,
	0, 2621, 0, 1427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 2063, 2064, 2065, 2066, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1427, 0,
	1427, 0, 1427, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 312, 0, 0, 312, 0, 0, 0,
	1427, 1427, 0, 2211, 0, 0, 0, 0, 0, 2079,
	0, 5127, 0, 2089, 1427, 0, 0, 312, 0, 0,
	5135, 2068, 2070, 0, 0, 0, 1427, 0, 0, 1427,
	1427, 1427, 1427, 1427, 0, 5143, 0, 0, 1250, 0,
	0, 2085, 0, 2086, 0, 0, 0, 1704, 0, 0,
	2055, 2056, 0, 0, 0, 2038, 2039, 0, 929, 5155,
	0, 0, 5157, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 853, 0, 0, 0, 5167, 0, 0, 2069,
	5172, 0, 0, 0, 0, 2061, 0, 2041, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 0, 838, 0,
	0, 0, 0, 4158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 1704, 0,
	1704, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 2060, 0, 0, 0,
	312, 839, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 840, 0, 0, 2076, 0, 0, 971, 0,
	0, 0, 0, 1486, 0, 0, 2091, 0, 312, 0,
	2284, 2284, 1427, 0, 0, 841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 859, 0,
	0, 0, 1423, 0, 0, 3682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 842, 0, 0, 0, 0, 2067, 0, 2063, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 4268, 2046, 1702,
	0, 1265, 0, 0, 0, 0, 843, 835, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 5293, 0, 0,
	0, 5297, 0, 0, 0, 1427, 0, 0, 0, 0,
	844, 0, 0, 0, 0, 836, 0, 4282, 0, 0,
	0, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 868, 2068, 2070, 0, 0, 0, 0,
	0, 0, 312, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 0, 858, 2055, 2056, 0, 0, 0, 0, 0,
	1427, 0, 0, 0, 0, 0, 0, 1427, 0, 0,
	0, 0, 312, 0, 0, 0, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 1427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 2816, 0, 0, 0, 0, 0,
	0, 0, 0, 5064, 0, 2052, 2053, 2059, 2081, 2058,
	2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 2091,
	4300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 846, 0, 1312, 0, 0,
	1250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 866, 0, 847, 2067,
	1423, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 314, 314, 0, 0, 2062, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5495,
	5495, 5495, 0, 0, 867, 0, 0, 314, 0, 0,
	0, 0, 848, 0, 0, 314, 0, 863, 864, 0,
	861, 0, 0, 0, 0, 0, 0, 0, 0, 856,
	0, 0, 849, 0, 0, 2284, 0, 0, 971, 5521,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 1486,
	0, 0, 0, 1704, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	850, 0, 857, 0, 0, 0, 0, 0, 0, 0,
	0, 851, 0, 0, 0, 0, 0, 0, 0, 0,
	5495, 0, 0, 0, 0, 0, 0, 852, 0, 0,
	0, 1427, 860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1427, 0, 0, 0, 0, 869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	854, 0, 1704, 0, 0, 0, 0, 0, 0, 0,
	5607, 0, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 0, 0, 2614, 0, 0, 0,
	0, 2621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2621, 0, 2621, 1427, 0, 312, 0, 4657, 0,
	0, 0, 5495, 5665, 0, 0, 1427, 0, 1427, 0,
	0, 0, 0, 0, 1427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1427, 1427, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 312, 0, 312, 0,
	0, 0, 0, 312, 0, 4703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	1427, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3096, 0,
	312, 0, 0, 0, 0, 2038, 2039, 0, 2071, 2072,
	2073, 2082, 2083, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 2069,
	0, 0, 0, 3094, 0, 0, 0, 2041, 3098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3099, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 1704, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 3100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3101, 0, 0, 0, 0, 0, 0, 3102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1423, 0,
	0, 0, 0, 0, 0, 0, 1423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3103, 0, 0, 2211, 0, 0, 0, 2063, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4884, 0, 0,
	0, 0, 0, 0, 3104, 0, 0, 312, 0, 0,
	0, 0, 0, 2621, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 0, 3105, 0, 2089, 0, 0, 3106,
	0, 0, 0, 0, 2068, 2070, 0, 0, 2211, 0,
	2211, 0, 0, 3107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3108, 2085, 0, 2086, 0, 0, 0,
	0, 0, 312, 2055, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 3109,
	179, 312, 0, 2077, 0, 0, 0, 0, 0, 86,
	0, 53, 52, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 0, 1427, 1427, 0, 87, 0,
	0, 0, 80, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 2621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 4996, 0,
	0, 0, 0, 0, 55, 1427, 177, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1427, 0, 0, 54, 0, 2076, 101,
	0, 0, 0, 0, 0, 0, 0, 0, 1427, 2091,
	3110, 1427, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 318, 0, 0, 57, 75, 0,
	0, 0, 314, 312, 314, 314, 0, 58, 314, 0,
	0, 2284, 64, 0, 3111, 1427, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 56, 0, 124, 0, 0,
	0, 0, 0, 108, 121, 0, 0, 0, 0, 2067,
	0, 0, 76, 2284, 0, 0, 0, 0, 0, 0,
	0, 0, 3112, 3113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 0,
	0, 3114, 963, 0, 0, 0, 314, 1599, 314, 314,
	314, 3119, 0, 314, 314, 1599, 0, 2080, 0, 0,
	109, 0, 0, 0, 929, 0, 0, 0, 0, 0,
	2284, 963, 3115, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3116, 0, 0,
	0, 5112, 0, 2093, 0, 0, 0, 0, 0, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3117,
	0, 0, 0, 0, 0, 0, 314, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 1599, 0, 0, 0, 0,
	0, 0, 1599, 314, 314, 0, 312, 0, 0, 0,
	0, 2614, 0, 0, 3118, 0, 0, 0, 1599, 0,
	0, 0, 0, 0, 0, 1427, 2078, 0, 2621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2052, 2053,
	2059, 2081, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2633,
	0, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1427, 0, 1427, 63, 0, 0, 1427,
	0, 66, 0, 0, 0, 0, 314, 1427, 1427, 0,
	0, 78, 0, 2211, 0, 5249, 1702, 0, 0, 65,
	212, 0, 116, 0, 312, 120, 0, 0, 0, 0,
	0, 61, 314, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 62, 0, 0, 0, 0, 0, 0,
	1427, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 0, 0, 0,
	1427, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 312, 1427, 0, 1427, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 1427, 79,
	0, 1427, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 2211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2211, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 929, 213, 0, 0,
	0, 0, 217, 5371, 0, 0, 0, 0, 0, 312,
	0, 2284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 3, 0, 0, 0,
	1427, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 2211, 2211, 1427, 0, 0,
	0, 0, 0, 0, 0, 2069, 0, 2284, 2284, 0,
	0, 0, 0, 2041, 0, 314, 2211, 0, 312, 2211,
	2614, 0, 0, 0, 2088, 0, 1599, 0, 0, 0,
	0, 314, 314, 314, 0, 0, 2284, 2284, 0, 0,
	0, 314, 2094, 0, 5429, 0, 0, 0, 0, 0,
	314, 2040, 0, 0, 0, 929, 1599, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 2284,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 1427, 1427,
	0, 0, 5477, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1427, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	1599, 0, 0, 0, 2046, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2284, 0, 2284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	2068, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 1599, 1599, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 0, 0, 1427, 1427, 0,
	0, 0, 0, 0, 2211, 1427, 2211, 0, 1427, 1427,
	0, 0, 0, 0, 0, 2091, 0, 0, 1427, 0,
	1599, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 1716, 314, 0, 0, 0, 0, 0, 1599,
	0, 0, 2284, 0, 314, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 314, 0, 314,
	0, 0, 0, 0, 0, 314, 1716, 0, 0, 0,
	0, 0, 0, 0, 1599, 0, 1599, 1427, 1599, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1427, 0, 0, 0, 0, 1599, 1599, 0, 0,
	1427, 0, 0, 0, 0, 1427, 1427, 1427, 0, 0,
	1599, 0, 1716, 2080, 314, 0, 0, 0, 0, 1716,
	0, 0, 1599, 0, 0, 1599, 1599, 1599, 1599, 1599,
	0, 1427, 0, 1427, 0, 1716, 0, 0, 314, 1427,
	0, 1427, 0, 0, 0, 0, 0, 0, 0, 2093,
	1704, 314, 0, 314, 0, 314, 0, 314, 0, 314,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1427, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 314,
	314, 314, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 929, 0,
	0, 0, 0, 0, 0, 0, 1427, 0, 0, 0,
	0, 0, 0, 0, 1427, 0, 0, 0, 1427, 1427,
	0, 1427, 0, 0, 0, 0, 2284, 0, 0, 0,
	0, 0, 1427, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1427, 1427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1427, 0, 1427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1427, 0, 314, 0, 0, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 314, 0, 314, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1596, 1427, 1427, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2252, 0,
	0, 0, 0, 0, 0, 0, 0, 2252, 0, 0,
	0, 0, 0, 1716, 0, 314, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	1427, 314, 0, 1599, 0, 1427, 0, 0, 0, 0,
	0, 314, 314, 0, 0, 0, 314, 0, 314, 0,
	0, 0, 0, 0, 0, 314, 314, 0, 0, 0,
	1427, 1427, 1427, 1427, 1427, 314, 1427, 1427, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 2039, 0,
	2071, 2072, 2073, 2082, 2083, 2084, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2075, 2069, 1599, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 1427, 1596, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 2284, 2094, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 1427, 314, 1427, 0, 0, 0, 0, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 1599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2284,
	2063, 2064, 2065, 2066, 0, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 1716, 0, 1427, 0, 0, 0, 0, 0, 1427,
	0, 1596, 1427, 1427, 2079, 0, 0, 0, 2089, 0,
	0, 0, 314, 0, 0, 0, 2068, 2070, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 0, 2086, 0,
	0, 1427, 0, 0, 0, 2055, 2056, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	1597, 0, 1599, 0, 1599, 2077, 0, 0, 1717, 1427,
	1599, 0, 1427, 0, 0, 0, 0, 0, 314, 0,
	2061, 1599, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 1716, 314, 1716, 0, 1716, 0, 0, 0, 0,
	0, 0, 1717, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 1716, 0, 0, 0, 2284, 2087,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	2076, 0, 1716, 1716, 1716, 1716, 1716, 0, 1717, 0,
	0, 2091, 0, 0, 0, 1717, 1599, 0, 0, 0,
	0, 0, 314, 314, 314, 314, 0, 0, 2252, 0,
	0, 1717, 314, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 1427, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1427, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 2067, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1427, 1427, 0, 0, 0, 0, 2080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1427, 1596, 0, 1427, 0, 0,
	0, 1427, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1427, 0, 0, 0, 2093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2078, 0,
	0, 1427, 0, 0, 0, 0, 0, 0, 0, 0,
	2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049, 2050,
	2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083,
	2084, 0, 0, 0, 0, 0, 0, 1427, 0, 0,
	0, 0, 0, 0, 0, 2075, 2069, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 0, 2088, 0, 0, 0, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2094, 0, 0, 0, 1599, 0, 1717,
	0, 0, 2040, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1427, 0, 1427, 0, 0, 0, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	0, 0, 0, 0, 314, 0, 0, 0, 314, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 2063, 2064, 2065, 2066, 0,
	0, 0, 0, 0, 314, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 314, 0, 2079,
	314, 0, 0, 2089, 0, 0, 0, 314, 0, 0,
	0, 2068, 2070, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2085, 0, 2086, 1596, 0, 0, 0, 0, 0,
	2055, 2056, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1599, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 1717, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 2076, 0, 0, 0, 1599,
	0, 1599, 0, 1717, 0, 1599, 2091, 1716, 0, 0,
	0, 0, 314, 1599, 1599, 0, 0, 1599, 0, 1716,
	0, 1716, 314, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 1717, 0, 0, 0, 0, 0, 1716, 1716,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 1717, 0, 1717,
	0, 1717, 0, 0, 0, 0, 0, 0, 1599, 0,
	1599, 0, 2062, 0, 0, 0, 0, 0, 0, 1717,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 2080, 1717, 0, 0, 1717, 1717,
	1717, 1717, 1717, 0, 0, 0, 0, 0, 0, 2038,
	2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0, 0,
	0, 0, 0, 0, 1599, 0, 314, 1599, 314, 0,
	2093, 0, 2075, 2069, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 0, 2052, 2053, 2059, 2081, 2058,
	2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047,
	2048, 1597, 0, 0, 0, 0, 0, 0, 0, 0,
	3751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 2064, 2065, 2066, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 2079, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2077, 0, 0,
	0, 0, 314, 0, 0, 0, 1597, 0, 1599, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 0, 53, 52, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 1596, 0, 0, 0,
	0, 92, 0, 2091, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 1596, 0, 0, 0, 0, 55,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 101, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 314,
	0, 0, 57, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 58, 1599, 1599, 0, 0, 64, 0, 2062,
	0, 1599, 5676, 0, 1599, 1599, 0, 0, 0, 0,
	56, 0, 124, 0, 1599, 1597, 0, 0, 108, 121,
	314, 0, 0, 0, 0, 0, 0, 76, 0, 0,
	0, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 314, 0, 0, 2093, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	314, 0, 314, 0, 0, 109, 0, 314, 0, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 1599, 1599, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1597, 0, 0, 0, 0, 0, 0, 1599, 0, 1599,
	2078, 0, 1717, 0, 314, 1599, 0, 1599, 1596, 0,
	0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 77, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3748, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 1716, 0,
	0, 0, 1596, 0, 0, 0, 113, 0, 0, 963,
	1716, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 0, 1717, 0, 0,
	0, 63, 0, 1717, 0, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 1717, 1717, 78, 0, 0, 0,
	0, 0, 0, 0, 65, 212, 0, 116, 0, 0,
	120, 0, 5542, 1716, 1599, 1599, 61, 1599, 0, 0,
	178, 0, 0, 0, 0, 1716, 0, 1716, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1599,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 176, 0, 0, 0, 0, 0, 1717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 1596, 0, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 1599,
	0, 218, 314, 0, 0, 314, 0, 0, 0, 276,
	0, 0, 0, 2038, 2039, 0, 2071, 2072, 2073, 2082,
	2083, 2084, 0, 0, 0, 0, 0, 0, 0, 269,
	1599, 0, 0, 1596, 0, 0, 2075, 2069, 270, 0,
	314, 0, 213, 0, 0, 2041, 0, 217, 0, 0,
	1596, 0, 0, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	1599, 1599, 0, 2040, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 314, 0, 0,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 1599, 1599, 1599,
	1599, 0, 1599, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 2063, 2064, 2065, 2066,
	1596, 0, 0, 0, 0, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2079, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 2068, 2070, 0, 0, 0, 1599, 0, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 2086, 1597, 0, 0, 0, 0,
	0, 2055, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 2076, 0, 0, 1599,
	0, 0, 0, 0, 0, 1599, 0, 2091, 1599, 1599,
	1716, 1716, 0, 0, 0, 0, 0, 314, 1716, 0,
	0, 1716, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 1599, 0, 0, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 314, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 1716, 1716,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 1716, 0, 1716, 0, 0, 0,
	0, 0, 1716, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 2078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2052, 2053, 2059, 2081,
	2058, 2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045,
	2047, 2048, 1717, 0, 1717, 0, 0, 0, 1597, 0,
	0, 3747, 0, 0, 0, 0, 1717, 1717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 2038, 2039, 1599, 2071, 2072,
	2073, 2082, 2083, 2084, 0, 0, 0, 1599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 2069,
	0, 1596, 1596, 0, 1596, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 1717,
	0, 0, 0, 0, 0, 1716, 1716, 0, 0, 0,
	0, 1717, 0, 1717, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	1597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 1596, 0, 0, 0,
	2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2063, 2064,
	2065, 2066, 0, 2075, 2069, 0, 0, 1596, 2046, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 1597, 0, 0, 0,
	2040, 0, 2079, 1599, 0, 0, 2089, 1716, 1716, 0,
	0, 2060, 0, 0, 2068, 2070, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 2086, 0, 0, 0,
	0, 0, 0, 2055, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 1596, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 1716, 1716, 1716, 1716, 1716, 0, 1716,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 2064, 2065, 2066, 0, 0, 1596,
	0, 2038, 2039, 2046, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 2075, 2069, 1597, 0, 0, 1596,
	0, 0, 0, 2041, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 2088, 0, 0, 2079, 0, 2091,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 2068,
	2070, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 1596, 0, 1716, 0, 0, 2085,
	0, 2086, 2060, 0, 0, 0, 0, 0, 2055, 2056,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2077, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 0, 0, 1596, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2080, 0, 0,
	0, 0, 2087, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 2091, 0, 1596, 0, 0, 0,
	0, 0, 1716, 0, 0, 1716, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	0, 0, 2089, 0, 0, 0, 1717, 1717, 0, 0,
	2068, 2070, 0, 0, 1717, 0, 0, 1717, 1717, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 0, 0,
	2085, 0, 2086, 0, 2067, 0, 0, 0, 0, 2055,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 1716, 2078, 0, 0, 2077,
	2062, 0, 0, 0, 0, 0, 0, 0, 2052, 2053,
	2059, 2081, 2058, 2054, 2061, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 3746, 0, 2038, 2039, 0, 2071, 2072,
	2073, 2082, 2083, 2084, 0, 0, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 2069,
	0, 0, 0, 2087, 0, 0, 0, 2041, 2093, 1717,
	0, 0, 0, 0, 1717, 1717, 1717, 0, 2088, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 2094, 0, 0, 0,
	1717, 0, 1717, 0, 0, 2040, 0, 0, 1717, 0,
	1597, 0, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 2945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2063, 2064,
	2065, 2066, 0, 2080, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 0, 0, 0, 2089, 1597, 1597, 0,
	1597, 0, 0, 0, 2068, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1717, 1717, 0, 2085, 0, 2086, 0, 0, 0,
	0, 0, 0, 2055, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2077, 1716, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 0, 0, 0, 5416, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 1597, 0, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 2091,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 1717, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 1717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2080, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 1717,
	1717, 1717, 1717, 1717, 2046, 1717, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 1597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	0, 0, 2089, 0, 0, 1597, 0, 0, 0, 0,
	2068, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2085, 0, 2086, 0, 0, 0, 0, 0, 0, 2055,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1597, 0, 1717, 0, 0, 0, 2078, 0, 0, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 2052, 2053,
	2059, 2081, 2058, 2054, 2061, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 0, 0, 0, 0, 0, 5412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 1717, 0,
	0, 1717, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 1717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 0, 0, 0, 5312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 1600, 330, 331, 1601, 1602, 1603, 0,
	1604, 743, 1605, 1606, 1607, 332, 1608, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 1609, 748, 345, 346, 347,
	348, 349, 350, 351, 1610, 1611, 0, 352, 749, 750,
	751, 1612, 353, 354, 752, 1613, 1680, 1614, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 1615, 364, 365,
	366, 363, 367, 368, 1616, 369, 1717, 370, 371, 372,
	373, 374, 375, 376, 1617, 377, 378, 379, 1367, 380,
	381, 382, 1618, 1619, 1621, 1620, 1622, 1623, 1624, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 1625,
	393, 395, 389, 391, 1626, 394, 392, 396, 397, 1627,
	398, 399, 400, 1628, 1629, 401, 402, 403, 1630, 404,
	405, 406, 1631, 407, 408, 409, 1632, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 1633, 319, 1634, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	1635, 429, 430, 431, 1636, 432, 433, 1637, 1368, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 1638, 446, 447, 761, 1639, 762, 448,
	1640, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 1370, 456, 457, 458, 1641, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	1642, 1369, 766, 468, 552, 469, 767, 768, 1643, 769,
	1644, 470, 471, 474, 1371, 770, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 1645, 485, 487, 486, 1646, 489, 771, 488,
	1374, 490, 491, 1375, 1647, 492, 493, 494, 495, 496,
	497, 500, 1648, 1649, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1650, 321, 1378, 546, 547,
	548, 549, 1651, 772, 550, 773, 553, 554, 1652, 0,
	555, 0, 556, 1653, 1654, 558, 559, 560, 1655, 1656,
	561, 562, 774, 1379, 563, 1380, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	1657, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 1658, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 1659, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 1660, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 1661, 652, 653, 651, 654, 655, 656, 1662,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 1663, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	1664, 689, 690, 0, 684, 675, 1665, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 1666, 699, 786, 787,
	788, 789, 1667, 711, 1668, 700, 702, 703, 704, 705,
	790, 706, 791, 1669, 707, 708, 709, 710, 701, 712,
	713, 1670, 1671, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1672, 723, 1673, 0, 724, 725, 726, 792,
	793, 794, 1674, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1675, 1676, 1677, 1678,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1594,
	0, 0, 0, 0, 0, 0, 3140, 0, 0, 0,
	0, 0, 0, 0, 0, 3141, 322, 323, 325, 324,
	326, 327, 328, 329, 1600, 330, 331, 1601, 1602, 1603,
	0, 1604, 743, 1605, 1606, 1607, 332, 1608, 333, 334,
	335, 1366, 336, 337, 338, 339, 340, 341, 342, 744,
	745, 0, 343, 746, 344, 747, 1609, 748, 345, 346,
	347, 348, 349, 350, 351, 1610, 1611, 0, 352, 749,
	750, 751, 1612, 353, 354, 752, 1613, 1680, 1614, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 1615, 364,
	365, 366, 363, 367, 368, 1616, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 1617, 377, 378, 379, 1367,
	380, 381, 382, 1618, 1619, 1621, 1620, 1622, 1623, 1624,
	383, 384, 385, 386, 387, 0, 388, 390, 753, 754,
	1625, 393, 395, 389, 391, 1626, 394, 392, 396, 397,
	1627, 398, 399, 400, 1628, 1629, 401, 402, 403, 1630,
	404, 405, 406, 1631, 407, 408, 409, 1632, 410, 411,
	755, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 756, 757, 424, 1633, 319, 1634, 0,
	0, 0, 0, 425, 426, 427, 758, 0, 0, 0,
	428, 1635, 429, 430, 431, 1636, 432, 433, 1637, 1368,
	434, 435, 436, 759, 760, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 1638, 446, 447, 761, 1639, 762,
	448, 1640, 449, 450, 451, 452, 453, 454, 455, 763,
	764, 765, 551, 1370, 456, 457, 458, 1641, 459, 460,
	461, 462, 463, 464, 0, 0, 0, 320, 465, 466,
	467, 1642, 1369, 766, 468, 552, 469, 767, 768, 1643,
	769, 1644, 470, 471, 474, 1371, 770, 1372, 473, 475,
	476, 1373, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 1645, 485, 487, 486, 1646, 489, 771,
	488, 1374, 490, 491, 1375, 1647, 492, 493, 494, 495,
	496, 497, 500, 1648, 1649, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1376, 527, 528, 529, 530,
	531, 538, 540, 541, 536, 537, 539, 542, 543, 545,
	533, 534, 535, 1377, 544, 532, 1650, 321, 1378, 546,
	547, 548, 549, 1651, 772, 550, 773, 553, 554, 1652,
	0, 555, 0, 556, 1653, 1654, 558, 559, 560, 1655,
	1656, 561, 562, 774, 1379, 563, 1380, 775, 564, 565,
	557, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 1657, 576, 577, 776, 578, 579, 580, 777, 581,
	582, 583, 778, 584, 779, 585, 586, 1658, 587, 588,
	589, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	780, 598, 599, 601, 600, 602, 1659, 603, 0, 604,
	605, 606, 0, 0, 0, 0, 0, 607, 608, 610,
	0, 611, 612, 613, 614, 609, 615, 616, 617, 618,
	619, 620, 1660, 622, 623, 621, 624, 625, 1381, 626,
	627, 628, 629, 630, 781, 631, 0, 632, 633, 641,
	642, 643, 634, 635, 637, 644, 636, 645, 646, 647,
	648, 650, 649, 1661, 652, 653, 651, 654, 655, 656,
	1662, 657, 782, 658, 638, 639, 659, 660, 1382, 661,
	662, 663, 664, 665, 666, 667, 783, 0, 668, 1663,
	669, 670, 671, 672, 673, 674, 676, 640, 677, 682,
	683, 784, 678, 679, 680, 681, 785, 685, 686, 687,
	688, 1664, 689, 690, 0, 684, 675, 1665, 691, 692,
	693, 694, 695, 696, 0, 697, 698, 1666, 699, 786,
	787, 788, 789, 1667, 711, 1668, 700, 702, 703, 704,
	705, 790, 706, 791, 1669, 707, 708, 709, 710, 701,
	712, 713, 1670, 1671, 714, 715, 716, 718, 720, 721,
	717, 719, 722, 1672, 723, 1673, 0, 724, 725, 726,
	792, 793, 794, 1674, 728, 729, 727, 730, 731, 734,
	732, 733, 795, 735, 472, 736, 737, 1675, 1676, 1677,
	1678, 738, 739, 796, 740, 741, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1594, 0, 0,
	0, 4309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4311, 322, 323, 325, 324, 326, 327,
	328, 329, 1600, 330, 331, 1601, 1602, 1603, 0, 1604,
	743, 1605, 1606, 1607, 332, 1608, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 745, 0,
	343, 746, 344, 747, 1609, 748, 345, 346, 347, 348,
	349, 350, 351, 1610, 1611, 0, 352, 749, 750, 751,
	1612, 353, 354, 752, 1613, 1680, 1614, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 1615, 364, 365, 366,
	363, 367, 368, 1616, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 1617, 377, 378, 379, 1367, 380, 381,
	382, 1618, 1619, 1621, 1620, 1622, 1623, 1624, 383, 384,
	385, 386, 387, 0, 388, 390, 753, 754, 1625, 393,
	395, 389, 391, 1626, 394, 392, 396, 397, 1627, 398,
	399, 400, 1628, 1629, 401, 402, 403, 1630, 404, 405,
	406, 1631, 407, 408, 409, 1632, 410, 411, 755, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 756, 757, 424, 1633, 319, 1634, 0, 0, 0,
	0, 425, 426, 427, 758, 0, 0, 0, 428, 1635,
	429, 430, 431, 1636, 432, 433, 1637, 1368, 434, 435,
	436, 759, 760, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 1638, 446, 447, 761, 1639, 762, 448, 1640,
	449, 450, 451, 452, 453, 454, 455, 763, 764, 765,
	551, 1370, 456, 457, 458, 1641, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 1642,
	1369, 766, 468, 552, 469, 767, 768, 1643, 769, 1644,
	470, 471, 474, 1371, 770, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 1645, 485, 487, 486, 1646, 489, 771, 488, 1374,
	490, 491, 1375, 1647, 492, 493, 494, 495, 496, 497,
	500, 1648, 1649, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 1650, 321, 1378, 546, 547, 548,
	549, 1651, 772, 550, 773, 553, 554, 1652, 0, 555,
	0, 556, 1653, 1654, 558, 559, 560, 1655, 1656, 561,
	562, 774, 1379, 563, 1380, 775, 564, 565, 557, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 1657,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	778, 584, 779, 585, 586, 1658, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 780, 598,
	599, 601, 600, 602, 1659, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	1660, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 781, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 1661, 652, 653, 651, 654, 655, 656, 1662, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 783, 0, 668, 1663, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 784,
	678, 679, 680, 681, 785, 685, 686, 687, 688, 1664,
	689, 690, 0, 684, 675, 1665, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 1666, 699, 786, 787, 788,
	789, 1667, 711, 1668, 700, 702, 703, 704, 705, 790,
	706, 791, 1669, 707, 708, 709, 710, 701, 712, 713,
	1670, 1671, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1672, 723, 1673, 0, 724, 725, 726, 792, 793,
	794, 1674, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 1675, 1676, 1677, 1678, 738,
	739, 796, 740, 741, 742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4782, 322, 323, 325, 324,
	326, 327, 328, 329, 1600, 330, 331, 1601, 1602, 1603,
	0, 1604, 743, 1605, 1606, 1607, 332, 1608, 333, 334,
	335, 1366, 336, 337, 338, 339, 340, 341, 342, 744,
	745, 0, 343, 746, 344, 747, 1609, 748, 345, 346,
	347, 348, 349, 350, 351, 1610, 1611, 0, 352, 749,
	750, 751, 1612, 353, 354, 752, 1613, 1680, 1614, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 1615, 364,
	365, 366, 363, 367, 368, 1616, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 1617, 377, 378, 379, 1367,
	380, 381, 382, 1618, 1619, 1621, 1620, 1622, 1623, 1624,
	383, 384, 385, 386, 387, 0, 388, 390, 753, 754,
	1625, 393, 395, 389, 391, 1626, 394, 392, 396, 397,
	1627, 398, 399, 400, 1628, 1629, 401, 402, 403, 1630,
	404, 405, 406, 1631, 407, 408, 409, 1632, 410, 411,
	755, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 756, 757, 424, 1633, 319, 1634, 0,
	0, 0, 0, 425, 426, 427, 758, 0, 0, 0,
	428, 1635, 429, 430, 431, 1636, 432, 433, 1637, 1368,
	434, 435, 436, 759, 760, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 1638, 446, 447, 761, 1639, 762,
	448, 1640, 449, 450, 451, 452, 453, 454, 455, 763,
	764, 765, 551, 1370, 456, 457, 458, 1641, 459, 460,
	461, 462, 463, 464, 0, 0, 0, 320, 465, 466,
	467, 1642, 1369, 766, 468, 552, 469, 767, 768, 1643,
	769, 1644, 470, 471, 474, 1371, 770, 1372, 473, 475,
	476, 1373, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 1645, 485, 487, 486, 1646, 489, 771,
	488, 1374, 490, 491, 1375, 1647, 492, 493, 494, 495,
	496, 497, 500, 1648, 1649, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1376, 527, 528, 529, 530,
	531, 538, 540, 541, 536, 537, 539, 542, 543, 545,
	533, 534, 535, 1377, 544, 532, 1650, 321, 1378, 546,
	547, 548, 549, 1651, 772, 550, 773, 553, 554, 1652,
	0, 555, 0, 556, 1653, 1654, 558, 559, 560, 1655,
	1656, 561, 562, 774, 1379, 563, 1380, 775, 564, 565,
	557, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 1657, 576, 577, 776, 578, 579, 580, 777, 581,
	582, 583, 778, 584, 779, 585, 586, 1658, 587, 588,
	589, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	780, 598, 599, 601, 600, 602, 1659, 603, 0, 604,
	605, 606, 0, 0, 0, 0, 0, 607, 608, 610,
	0, 611, 612, 613, 614, 609, 615, 616, 617, 618,
	619, 620, 1660, 622, 623, 621, 624, 625, 1381, 626,
	627, 628, 629, 630, 781, 631, 0, 632, 633, 641,
	642, 643, 634, 635, 637, 644, 636, 645, 646, 647,
	648, 650, 649, 1661, 652, 653, 651, 654, 655, 656,
	1662, 657, 782, 658, 638, 639, 659, 660, 1382, 661,
	662, 663, 664, 665, 666, 667, 783, 0, 668, 1663,
	669, 670, 671, 672, 673, 674, 676, 640, 677, 682,
	683, 784, 678, 679, 680, 681, 785, 685, 686, 687,
	688, 1664, 689, 690, 0, 684, 675, 1665, 691, 692,
	693, 694, 695, 696, 0, 697, 698, 1666, 699, 786,
	787, 788, 789, 1667, 711, 1668, 700, 702, 703, 704,
	705, 790, 706, 791, 1669, 707, 708, 709, 710, 701,
	712, 713, 1670, 1671, 714, 715, 716, 718, 720, 721,
	717, 719, 722, 1672, 723, 1673, 0, 724, 725, 726,
	792, 793, 794, 1674, 728, 729, 727, 730, 731, 734,
	732, 733, 795, 735, 472, 736, 737, 1675, 1676, 1677,
	1678, 738, 739, 796, 740, 741, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4780, 322, 323,
	325, 324, 326, 327, 328, 329, 1600, 330, 331, 1601,
	1602, 1603, 0, 1604, 743, 1605, 1606, 1607, 332, 1608,
	333, 334, 335, 1366, 336, 337, 338, 339, 340, 341,
	342, 744, 745, 0, 343, 746, 344, 747, 1609, 748,
	345, 346, 347, 348, 349, 350, 351, 1610, 1611, 0,
	352, 749, 750, 751, 1612, 353, 354, 752, 1613, 1680,
	1614, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	1615, 364, 365, 366, 363, 367, 368, 1616, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 1617, 377, 378,
	379, 1367, 380, 381, 382, 1618, 1619, 1621, 1620, 1622,
	1623, 1624, 383, 384, 385, 386, 387, 0, 388, 390,
	753, 754, 1625, 393, 395, 389, 391, 1626, 394, 392,
	396, 397, 1627, 398, 399, 400, 1628, 1629, 401, 402,
	403, 1630, 404, 405, 406, 1631, 407, 408, 409, 1632,
	410, 411, 755, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 756, 757, 424, 1633, 319,
	1634, 0, 0, 0, 0, 425, 426, 427, 758, 0,
	0, 0, 428, 1635, 429, 430, 431, 1636, 432, 433,
	1637, 1368, 434, 435, 436, 759, 760, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 1638, 446, 447, 761,
	1639, 762, 448, 1640, 449, 450, 451, 452, 453, 454,
	455, 763, 764, 765, 551, 1370, 456, 457, 458, 1641,
	459, 460, 461, 462, 463, 464, 0, 0, 0, 320,
	465, 466, 467, 1642, 1369, 766, 468, 552, 469, 767,
	768, 1643, 769, 1644, 470, 471, 474, 1371, 770, 1372,
	473, 475, 476, 1373, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 1645, 485, 487, 486, 1646,
	489, 771, 488, 1374, 490, 491, 1375, 1647, 492, 493,
	494, 495, 496, 497, 500, 1648, 1649, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1376, 527, 528,
	529, 530, 531, 538, 540, 541, 536, 537, 539, 542,
	543, 545, 533, 534, 535, 1377, 544, 532, 1650, 321,
	1378, 546, 547, 548, 549, 1651, 772, 550, 773, 553,
	554, 1652, 0, 555, 0, 556, 1653, 1654, 558, 559,
	560, 1655, 1656, 561, 562, 774, 1379, 563, 1380, 775,
	564, 565, 557, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 1657, 576, 577, 776, 578, 579, 580,
	777, 581, 582, 583, 778, 584, 779, 585, 586, 1658,
	587, 588, 589, 0, 590, 591, 592, 593, 594, 595,
	596, 597, 780, 598, 599, 601, 600, 602, 1659, 603,
	0, 604, 605, 606, 0, 0, 0, 0, 0, 607,
	608, 610, 0, 611, 612, 613, 614, 609, 615, 616,
	617, 618, 619, 620, 1660, 622, 623, 621, 624, 625,
	1381, 626, 627, 628, 629, 630, 781, 631, 0, 632,
	633, 641, 642, 643, 634, 635, 637, 644, 636, 645,
	646, 647, 648, 650, 649, 1661, 652, 653, 651, 654,
	655, 656, 1662, 657, 782, 658, 638, 639, 659, 660,
	1382, 661, 662, 663, 664, 665, 666, 667, 783, 0,
	668, 1663, 669, 670, 671, 672, 673, 674, 676, 640,
	677, 682, 683, 784, 678, 679, 680, 681, 785, 685,
	686, 687, 688, 1664, 689, 690, 0, 684, 675, 1665,
	691, 692, 693, 694, 695, 696, 0, 697, 698, 1666,
	699, 786, 787, 788, 789, 1667, 711, 1668, 700, 702,
	703, 704, 705, 790, 706, 791, 1669, 707, 708, 709,
	710, 701, 712, 713, 1670, 1671, 714, 715, 716, 718,
	720, 721, 717, 719, 722, 1672, 723, 1673, 0, 724,
	725, 726, 792, 793, 794, 1674, 728, 729, 727, 730,
	731, 734, 732, 733, 795, 735, 472, 736, 737, 1675,
	1676, 1677, 1678, 738, 739, 796, 740, 741, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5047, 322, 323, 325, 324, 326, 327,
	328, 329, 1600, 330, 331, 1601, 1602, 1603, 0, 1604,
	743, 1605, 1606, 1607, 332, 1608, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 745, 0,
	343, 746, 344, 747, 1609, 748, 345, 346, 347, 348,
	349, 350, 351, 1610, 1611, 0, 352, 749, 750, 751,
	1612, 353, 354, 752, 1613, 1680, 1614, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 1615, 364, 365, 366,
	363, 367, 368, 1616, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 1617, 377, 378, 379, 1367, 380, 381,
	382, 1618, 1619, 1621, 1620, 1622, 1623, 1624, 383, 384,
	385, 386, 387, 0, 388, 390, 753, 754, 1625, 393,
	395, 389, 391, 1626, 394, 392, 396, 397, 1627, 398,
	399, 400, 1628, 1629, 401, 402, 403, 1630, 404, 405,
	406, 1631, 407, 408, 409, 1632, 410, 411, 755, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 756, 757, 424, 1633, 319, 1634, 0, 0, 0,
	0, 425, 426, 427, 758, 0, 0, 0, 428, 1635,
	429, 430, 431, 1636, 432, 433, 1637, 1368, 434, 435,
	436, 759, 760, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 1638, 446, 447, 761, 1639, 762, 448, 1640,
	449, 450, 451, 452, 453, 454, 455, 763, 764, 765,
	551, 1370, 456, 457, 458, 1641, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 1642,
	1369, 766, 468, 552, 469, 767, 768, 1643, 769, 1644,
	470, 471, 474, 1371, 770, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 1645, 485, 487, 486, 1646, 489, 771, 488, 1374,
	490, 491, 1375, 1647, 492, 493, 494, 495, 496, 497,
	500, 1648, 1649, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 1650, 321, 1378, 546, 547, 548,
	549, 1651, 772, 550, 773, 553, 554, 1652, 0, 555,
	0, 556, 1653, 1654, 558, 559, 560, 1655, 1656, 561,
	562, 774, 1379, 563, 1380, 775, 564, 565, 557, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 1657,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	778, 584, 779, 585, 586, 1658, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 780, 598,
	599, 601, 600, 602, 1659, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	1660, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 781, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 1661, 652, 653, 651, 654, 655, 656, 1662, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 783, 0, 668, 1663, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 784,
	678, 679, 680, 681, 785, 685, 686, 687, 688, 1664,
	689, 690, 0, 684, 675, 1665, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 1666, 699, 786, 787, 788,
	789, 1667, 711, 1668, 700, 702, 703, 704, 705, 790,
	706, 791, 1669, 707, 708, 709, 710, 701, 712, 713,
	1670, 1671, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1672, 723, 1673, 0, 724, 725, 726, 792, 793,
	794, 1674, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 1675, 1676, 1677, 1678, 738,
	739, 796, 740, 741, 742, 0, 0, 0, 0, 0,
	0, 0, 0, 1594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4893,
	322, 323, 325, 324, 326, 327, 328, 329, 1600, 330,
	331, 1601, 1602, 1603, 0, 1604, 743, 1605, 1606, 1607,
	332, 1608, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 745, 0, 343, 746, 344, 747,
	1609, 748, 345, 346, 347, 348, 349, 350, 351, 1610,
	1611, 0, 352, 749, 750, 751, 1612, 353, 354, 752,
	1613, 1680, 1614, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 1615, 364, 365, 366, 363, 367, 368, 1616,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 1617,
	377, 378, 379, 1367, 380, 381, 382, 1618, 1619, 1621,
	1620, 1622, 1623, 1624, 383, 384, 385, 386, 387, 0,
	388, 390, 753, 754, 1625, 393, 395, 389, 391, 1626,
	394, 392, 396, 397, 1627, 398, 399, 400, 1628, 1629,
	401, 402, 403, 1630, 404, 405, 406, 1631, 407, 408,
	409, 1632, 410, 411, 755, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 756, 757, 424,
	1633, 319, 1634, 0, 0, 0, 0, 425, 426, 427,
	758, 0, 0, 0, 428, 1635, 429, 430, 431, 1636,
	432, 433, 1637, 1368, 434, 435, 436, 759, 760, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 1638, 446,
	447, 761, 1639, 762, 448, 1640, 449, 450, 451, 452,
	453, 454, 455, 763, 764, 765, 551, 1370, 456, 457,
	458, 1641, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 1642, 1369, 766, 468, 552,
	469, 767, 768, 1643, 769, 1644, 470, 471, 474, 1371,
	770, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 1645, 485, 487,
	486, 1646, 489, 771, 488, 1374, 490, 491, 1375, 1647,
	492, 493, 494, 495, 496, 497, 500, 1648, 1649, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1650, 321, 1378, 546, 547, 548, 549, 1651, 772, 550,
	773, 553, 554, 1652, 0, 555, 0, 556, 1653, 1654,
	558, 559, 560, 1655, 1656, 561, 562, 774, 1379, 563,
	1380, 775, 564, 565, 557, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 1657, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 778, 584, 779, 585,
	586, 1658, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 780, 598, 599, 601, 600, 602,
	1659, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 1660, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 781, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 1661, 652, 653,
	651, 654, 655, 656, 1662, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	783, 0, 668, 1663, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 784, 678, 679, 680, 681,
	785, 685, 686, 687, 688, 1664, 689, 690, 0, 684,
	675, 1665, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 1666, 699, 786, 787, 788, 789, 1667, 711, 1668,
	700, 702, 703, 704, 705, 790, 706, 791, 1669, 707,
	708, 709, 710, 701, 712, 713, 1670, 1671, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1672, 723, 1673,
	0, 724, 725, 726, 792, 793, 794, 1674, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 1675, 1676, 1677, 1678, 738, 739, 796, 740, 741,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4705, 322, 323, 325, 324,
	326, 327, 328, 329, 1600, 330, 331, 1601, 1602, 1603,
	0, 1604, 743, 1605, 1606, 1607, 332, 1608, 333, 334,
	335, 1366, 336, 337, 338, 339, 340, 341, 342, 744,
	745, 0, 343, 746, 344, 747, 1609, 748, 345, 346,
	347, 348, 349, 350, 351, 1610, 1611, 0, 352, 749,
	750, 751, 1612, 353, 354, 752, 1613, 1680, 1614, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 1615, 364,
	365, 366, 363, 367, 368, 1616, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 1617, 377, 378, 379, 1367,
	380, 381, 382, 1618, 1619, 1621, 1620, 1622, 1623, 1624,
	383, 384, 385, 386, 387, 0, 388, 390, 753, 754,
	1625, 393, 395, 389, 391, 1626, 394, 392, 396, 397,
	1627, 398, 399, 400, 1628, 1629, 401, 402, 403, 1630,
	404, 405, 406, 1631, 407, 408, 409, 1632, 410, 411,
	755, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 756, 757, 424, 1633, 319, 1634, 0,
	0, 0, 0, 425, 426, 427, 758, 0, 0, 0,
	428, 1635, 429, 430, 431, 1636, 432, 433, 1637, 1368,
	434, 435, 436, 759, 760, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 1638, 446, 447, 761, 1639, 762,
	448, 1640, 449, 450, 451, 452, 453, 454, 455, 763,
	764, 765, 551, 1370, 456, 457, 458, 1641, 459, 460,
	461, 462, 463, 464, 0, 0, 0, 320, 465, 466,
	467, 1642, 1369, 766, 468, 552, 469, 767, 768, 1643,
	769, 1644, 470, 471, 474, 1371, 770, 1372, 473, 475,
	476, 1373, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 1645, 485, 487, 486, 1646, 489, 771,
	488, 1374, 490, 491, 1375, 1647, 492, 493, 494, 495,
	496, 497, 500, 1648, 1649, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1376, 527, 528, 529, 530,
	531, 538, 540, 541, 536, 537, 539, 542, 543, 545,
	533, 534, 535, 1377, 544, 532, 1650, 321, 1378, 546,
	547, 548, 549, 1651, 772, 550, 773, 553, 554, 1652,
	0, 555, 0, 556, 1653, 1654, 558, 559, 560, 1655,
	1656, 561, 562, 774, 1379, 563, 1380, 775, 564, 565,
	557, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 1657, 576, 577, 776, 578, 579, 580, 777, 581,
	582, 583, 778, 584, 779, 585, 586, 1658, 587, 588,
	589, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	780, 598, 599, 601, 600, 602, 1659, 603, 0, 604,
	605, 606, 0, 0, 0, 0, 0, 607, 608, 610,
	0, 611, 612, 613, 614, 609, 615, 616, 617, 618,
	619, 620, 1660, 622, 623, 621, 624, 625, 1381, 626,
	627, 628, 629, 630, 781, 631, 0, 632, 633, 641,
	642, 643, 634, 635, 637, 644, 636, 645, 646, 647,
	648, 650, 649, 1661, 652, 653, 651, 654, 655, 656,
	1662, 657, 782, 658, 638, 639, 659, 660, 1382, 661,
	662, 663, 664, 665, 666, 667, 783, 0, 668, 1663,
	669, 670, 671, 672, 673, 674, 676, 640, 677, 682,
	683, 784, 678, 679, 680, 681, 785, 685, 686, 687,
	688, 1664, 689, 690, 0, 684, 675, 1665, 691, 692,
	693, 694, 695, 696, 0, 697, 698, 1666, 699, 786,
	787, 788, 789, 1667, 711, 1668, 700, 702, 703, 704,
	705, 790, 706, 791, 1669, 707, 708, 709, 710, 701,
	712, 713, 1670, 1671, 714, 715, 716, 718, 720, 721,
	717, 719, 722, 1672, 723, 1673, 0, 724, 725, 726,
	792, 793, 794, 1674, 728, 729, 727, 730, 731, 734,
	732, 733, 795, 735, 472, 736, 737, 1675, 1676, 1677,
	1678, 738, 739, 796, 740, 741, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 1594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4327, 322, 323, 325, 324, 326, 327, 328, 329,
	1600, 330, 331, 1601, 1602, 1603, 0, 1604, 743, 1605,
	1606, 1607, 332, 1608, 333, 334, 335, 1366, 336, 337,
	338, 339, 340, 341, 342, 744, 745, 0, 343, 746,
	344, 747, 1609, 748, 345, 346, 347, 348, 349, 350,
	351, 1610, 1611, 0, 352, 749, 750, 751, 1612, 353,
	354, 752, 1613, 1680, 1614, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 1615, 364, 365, 366, 363, 367,
	368, 1616, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 1617, 377, 378, 379, 1367, 380, 381, 382, 1618,
	1619, 1621, 1620, 1622, 1623, 1624, 383, 384, 385, 386,
	387, 0, 388, 390, 753, 754, 1625, 393, 395, 389,
	391, 1626, 394, 392, 396, 397, 1627, 398, 399, 400,
	1628, 1629, 401, 402, 403, 1630, 404, 405, 406, 1631,
	407, 408, 409, 1632, 410, 411, 755, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 756,
	757, 424, 1633, 319, 1634, 0, 0, 0, 0, 425,
	426, 427, 758, 0, 0, 0, 428, 1635, 429, 430,
	431, 1636, 432, 433, 1637, 1368, 434, 435, 436, 759,
	760, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	1638, 446, 447, 761, 1639, 762, 448, 1640, 449, 450,
	451, 452, 453, 454, 455, 763, 764, 765, 551, 1370,
	456, 457, 458, 1641, 459, 460, 461, 462, 463, 464,
	0, 0, 0, 320, 465, 466, 467, 1642, 1369, 766,
	468, 552, 469, 767, 768, 1643, 769, 1644, 470, 471,
	474, 1371, 770, 1372, 473, 475, 476, 1373, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 1645,
	485, 487, 486, 1646, 489, 771, 488, 1374, 490, 491,
	1375, 1647, 492, 493, 494, 495, 496, 497, 500, 1648,
	1649, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1376, 527, 528, 529, 530, 531, 538, 540, 541,
	536, 537, 539, 542, 543, 545, 533, 534, 535, 1377,
	544, 532, 1650, 321, 1378, 546, 547, 548, 549, 1651,
	772, 550, 773, 553, 554, 1652, 0, 555, 0, 556,
	1653, 1654, 558, 559, 560, 1655, 1656, 561, 562, 774,
	1379, 563, 1380, 775, 564, 565, 557, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 1657, 576, 577,
	776, 578, 579, 580, 777, 581, 582, 583, 778, 584,
	779, 585, 586, 1658, 587, 588, 589, 0, 590, 591,
	592, 593, 594, 595, 596, 597, 780, 598, 599, 601,
	600, 602, 1659, 603, 0, 604, 605, 606, 0, 0,
	0, 0, 0, 607, 608, 610, 0, 611, 612, 613,
	614, 609, 615, 616, 617, 618, 619, 620, 1660, 622,
	623, 621, 624, 625, 1381, 626, 627, 628, 629, 630,
	781, 631, 0, 632, 633, 641, 642, 643, 634, 635,
	637, 644, 636, 645, 646, 647, 648, 650, 649, 1661,
	652, 653, 651, 654, 655, 656, 1662, 657, 782, 658,
	638, 639, 659, 660, 1382, 661, 662, 663, 664, 665,
	666, 667, 783, 0, 668, 1663, 669, 670, 671, 672,
	673, 674, 676, 640, 677, 682, 683, 784, 678, 679,
	680, 681, 785, 685, 686, 687, 688, 1664, 689, 690,
	0, 684, 675, 1665, 691, 692, 693, 694, 695, 696,
	0, 697, 698, 1666, 699, 786, 787, 788, 789, 1667,
	711, 1668, 700, 702, 703, 704, 705, 790, 706, 791,
	1669, 707, 708, 709, 710, 701, 712, 713, 1670, 1671,
	714, 715, 716, 718, 720, 721, 717, 719, 722, 1672,
	723, 1673, 0, 724, 725, 726, 792, 793, 794, 1674,
	728, 729, 727, 730, 731, 734, 732, 733, 795, 735,
	472, 736, 737, 1675, 1676, 1677, 1678, 738, 739, 796,
	740, 741, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4127, 322, 323,
	325, 324, 326, 327, 328, 329, 1600, 330, 331, 1601,
	1602, 1603, 0, 1604, 743, 1605, 1606, 1607, 332, 1608,
	333, 334, 335, 1366, 336, 337, 338, 339, 340, 341,
	342, 744, 745, 0, 343, 746, 344, 747, 1609, 748,
	345, 346, 347, 348, 349, 350, 351, 1610, 1611, 0,
	352, 749, 750, 751, 1612, 353, 354, 752, 1613, 1680,
	1614, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	1615, 364, 365, 366, 363, 367, 368, 1616, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 1617, 377, 378,
	379, 1367, 380, 381, 382, 1618, 1619, 1621, 1620, 1622,
	1623, 1624, 383, 384, 385, 386, 387, 0, 388, 390,
	753, 754, 1625, 393, 395, 389, 391, 1626, 394, 392,
	396, 397, 1627, 398, 399, 400, 1628, 1629, 401, 402,
	403, 1630, 404, 405, 406, 1631, 407, 408, 409, 1632,
	410, 411, 755, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 756, 757, 424, 1633, 319,
	1634, 0, 0, 0, 0, 425, 426, 427, 758, 0,
	0, 0, 428, 1635, 429, 430, 431, 1636, 432, 433,
	1637, 1368, 434, 435, 436, 759, 760, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 1638, 446, 447, 761,
	1639, 762, 448, 1640, 449, 450, 451, 452, 453, 454,
	455, 763, 764, 765, 551, 1370, 456, 457, 458, 1641,
	459, 460, 461, 462, 463, 464, 0, 0, 0, 320,
	465, 466, 467, 1642, 1369, 766, 468, 552, 469, 767,
	768, 1643, 769, 1644, 470, 471, 474, 1371, 770, 1372,
	473, 475, 476, 1373, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 1645, 485, 487, 486, 1646,
	489, 771, 488, 1374, 490, 491, 1375, 1647, 492, 493,
	494, 495, 496, 497, 500, 1648, 1649, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1376, 527, 528,
	529, 530, 531, 538, 540, 541, 536, 537, 539, 542,
	543, 545, 533, 534, 535, 1377, 544, 532, 1650, 321,
	1378, 546, 547, 548, 549, 1651, 772, 550, 773, 553,
	554, 1652, 0, 555, 0, 556, 1653, 1654, 558, 559,
	560, 1655, 1656, 561, 562, 774, 1379, 563, 1380, 775,
	564, 565, 557, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 1657, 576, 577, 776, 578, 579, 580,
	777, 581, 582, 583, 778, 584, 779, 585, 586, 1658,
	587, 588, 589, 0, 590, 591, 592, 593, 594, 595,
	596, 597, 780, 598, 599, 601, 600, 602, 1659, 603,
	0, 604, 605, 606, 0, 0, 0, 0, 0, 607,
	608, 610, 0, 611, 612, 613, 614, 609, 615, 616,
	617, 618, 619, 620, 1660, 622, 623, 621, 624, 625,
	1381, 626, 627, 628, 629, 630, 781, 631, 0, 632,
	633, 641, 642, 643, 634, 635, 637, 644, 636, 645,
	646, 647, 648, 650, 649, 1661, 652, 653, 651, 654,
	655, 656, 1662, 657, 782, 658, 638, 639, 659, 660,
	1382, 661, 662, 663, 664, 665, 666, 667, 783, 0,
	668, 1663, 669, 670, 671, 672, 673, 674, 676, 640,
	677, 682, 683, 784, 678, 679, 680, 681, 785, 685,
	686, 687, 688, 1664, 689, 690, 0, 684, 675, 1665,
	691, 692, 693, 694, 695, 696, 0, 697, 698, 1666,
	699, 786, 787, 788, 789, 1667, 711, 1668, 700, 702,
	703, 704, 705, 790, 706, 791, 1669, 707, 708, 709,
	710, 701, 712, 713, 1670, 1671, 714, 715, 716, 718,
	720, 721, 717, 719, 722, 1672, 723, 1673, 0, 724,
	725, 726, 792, 793, 794, 1674, 728, 729, 727, 730,
	731, 734, 732, 733, 795, 735, 472, 736, 737, 1675,
	1676, 1677, 1678, 738, 739, 796, 740, 741, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2968, 322, 323, 325, 324, 326, 327,
	328, 329, 1600, 330, 331, 1601, 1602, 1603, 0, 1604,
	743, 1605, 1606, 1607, 332, 1608, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 745, 0,
	343, 746, 344, 747, 1609, 748, 345, 346, 347, 348,
	349, 350, 351, 1610, 1611, 0, 352, 749, 750, 751,
	1612, 353, 354, 752, 1613, 1680, 1614, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 1615, 364, 365, 366,
	363, 367, 368, 1616, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 1617, 377, 378, 379, 1367, 380, 381,
	382, 1618, 1619, 1621, 1620, 1622, 1623, 1624, 383, 384,
	385, 386, 387, 0, 388, 390, 753, 754, 1625, 393,
	395, 389, 391, 1626, 394, 392, 396, 397, 1627, 398,
	399, 400, 1628, 1629, 401, 402, 403, 1630, 404, 405,
	406, 1631, 407, 408, 409, 1632, 410, 411, 755, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 756, 757, 424, 1633, 319, 1634, 0, 0, 0,
	0, 425, 426, 427, 758, 0, 0, 0, 428, 1635,
	429, 430, 431, 1636, 432, 433, 1637, 1368, 434, 435,
	436, 759, 760, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 1638, 446, 447, 761, 1639, 762, 448, 1640,
	449, 450, 451, 452, 453, 454, 455, 763, 764, 765,
	551, 1370, 456, 457, 458, 1641, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 1642,
	1369, 766, 468, 552, 469, 767, 768, 1643, 769, 1644,
	470, 471, 474, 1371, 770, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 1645, 485, 487, 486, 1646, 489, 771, 488, 1374,
	490, 491, 1375, 1647, 492, 493, 494, 495, 496, 497,
	500, 1648, 1649, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 1650, 321, 1378, 546, 547, 548,
	549, 1651, 772, 550, 773, 553, 554, 1652, 0, 555,
	0, 556, 1653, 1654, 558, 559, 560, 1655, 1656, 561,
	562, 774, 1379, 563, 1380, 775, 564, 565, 557, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 1657,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	778, 584, 779, 585, 586, 1658, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 780, 598,
	599, 601, 600, 602, 1659, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	1660, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 781, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 1661, 652, 653, 651, 654, 655, 656, 1662, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 783, 0, 668, 1663, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 784,
	678, 679, 680, 681, 785, 685, 686, 687, 688, 1664,
	689, 690, 0, 684, 675, 1665, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 1666, 699, 786, 787, 788,
	789, 1667, 711, 1668, 700, 702, 703, 704, 705, 790,
	706, 791, 1669, 707, 708, 709, 710, 701, 712, 713,
	1670, 1671, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1672, 723, 1673, 0, 724, 725, 726, 792, 793,
	794, 1674, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 1675, 1676, 1677, 1678, 738,
	739, 796, 740, 741, 742, 0, 0, 0, 0, 0,
	0, 1591, 0, 1594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2573,
	322, 323, 325, 324, 326, 327, 328, 329, 1600, 330,
	331, 1601, 1602, 1603, 0, 1604, 743, 1605, 1606, 1607,
	332, 1608, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 745, 0, 343, 746, 344, 747,
	1609, 748, 345, 346, 347, 348, 349, 350, 351, 1610,
	1611, 0, 352, 749, 750, 751, 1612, 353, 354, 752,
	1613, 1680, 1614, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 1615, 364, 365, 366, 363, 367, 368, 1616,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 1617,
	377, 378, 379, 1367, 380, 381, 382, 1618, 1619, 1621,
	1620, 1622, 1623, 1624, 383, 384, 385, 386, 387, 0,
	388, 390, 753, 754, 1625, 393, 395, 389, 391, 1626,
	394, 392, 396, 397, 1627, 398, 399, 400, 1628, 1629,
	401, 402, 403, 1630, 404, 405, 406, 1631, 407, 408,
	409, 1632, 410, 411, 755, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 756, 757, 424,
	1633, 319, 1634, 0, 0, 0, 0, 425, 426, 427,
	758, 0, 0, 0, 428, 1635, 429, 430, 431, 1636,
	432, 433, 1637, 1368, 434, 435, 436, 759, 760, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 1638, 446,
	447, 761, 1639, 762, 448, 1640, 449, 450, 451, 452,
	453, 454, 455, 763, 764, 765, 551, 1370, 456, 457,
	458, 1641, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 1642, 1369, 766, 468, 552,
	469, 767, 768, 1643, 769, 1644, 470, 471, 474, 1371,
	770, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 1645, 485, 487,
	486, 1646, 489, 771, 488, 1374, 490, 491, 1375, 1647,
	492, 493, 494, 495, 496, 497, 500, 1648, 1649, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1650, 321, 1378, 546, 547, 548, 549, 1651, 772, 550,
	773, 553, 554, 1652, 0, 555, 0, 556, 1653, 1654,
	558, 559, 560, 1655, 1656, 561, 562, 774, 1379, 563,
	1380, 775, 564, 565, 557, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 1657, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 778, 584, 779, 585,
	586, 1658, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 780, 598, 599, 601, 600, 602,
	1659, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 1660, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 781, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 1661, 652, 653,
	651, 654, 655, 656, 1662, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	783, 0, 668, 1663, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 784, 678, 679, 680, 681,
	785, 685, 686, 687, 688, 1664, 689, 690, 0, 684,
	675, 1665, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 1666, 699, 786, 787, 788, 789, 1667, 711, 1668,
	700, 702, 703, 704, 705, 790, 706, 791, 1669, 707,
	708, 709, 710, 701, 712, 713, 1670, 1671, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1672, 723, 1673,
	0, 724, 725, 726, 792, 793, 794, 1674, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 1675, 1676, 1677, 1678, 738, 739, 796, 740, 741,
	742, 1594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 1600, 330, 331, 1601,
	1602, 1603, 0, 1604, 743, 1605, 1606, 1607, 332, 1608,
	333, 334, 335, 1366, 336, 337, 338, 339, 340, 341,
	342, 744, 745, 0, 343, 746, 344, 747, 1609, 748,
	345, 346, 347, 348, 349, 350, 351, 1610, 1611, 0,
	352, 749, 750, 751, 1612, 353, 354, 752, 1613, 1680,
	1614, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	1615, 364, 365, 366, 363, 367, 368, 1616, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 1617, 377, 378,
	379, 1367, 380, 381, 382, 1618, 1619, 1621, 1620, 1622,
	1623, 1624, 383, 384, 385, 386, 387, 0, 388, 390,
	753, 754, 1625, 393, 395, 389, 391, 1626, 394, 392,
	396, 397, 1627, 398, 399, 400, 1628, 1629, 401, 402,
	403, 1630, 404, 405, 406, 1631, 407, 408, 409, 1632,
	410, 411, 755, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 756, 757, 424, 1633, 319,
	1634, 0, 0, 0, 0, 425, 426, 427, 758, 0,
	0, 0, 428, 1635, 429, 430, 431, 1636, 432, 433,
	1637, 1368, 434, 435, 436, 759, 760, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 1638, 446, 447, 761,
	1639, 762, 448, 1640, 449, 450, 451, 452, 453, 454,
	455, 763, 764, 765, 551, 1370, 456, 457, 458, 1641,
	459, 460, 461, 462, 463, 464, 0, 0, 0, 320,
	465, 466, 467, 1642, 1369, 766, 468, 552, 469, 767,
	768, 1643, 769, 1644, 470, 471, 474, 1371, 770, 1372,
	473, 475, 476, 1373, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 1645, 485, 487, 486, 1646,
	489, 771, 488, 1374, 490, 491, 1375, 1647, 492, 493,
	494, 495, 496, 497, 500, 1648, 1649, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1376, 527, 528,
	529, 530, 531, 538, 540, 541, 536, 537, 539, 542,
	543, 545, 533, 534, 535, 1377, 544, 532, 1650, 321,
	1378, 546, 547, 548, 549, 1651, 772, 550, 773, 553,
	554, 1652, 0, 555, 0, 556, 1653, 1654, 558, 559,
	560, 1655, 1656, 561, 562, 774, 1379, 563, 1380, 775,
	564, 565, 557, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 1657, 576, 577, 776, 578, 579, 580,
	777, 581, 582, 583, 778, 584, 779, 585, 586, 1658,
	587, 588, 589, 0, 590, 591, 592, 593, 594, 595,
	596, 597, 780, 598, 599, 601, 600, 602, 1659, 603,
	0, 604, 605, 606, 0, 0, 0, 0, 0, 607,
	608, 610, 0, 611, 612, 613, 614, 609, 615, 616,
	617, 618, 619, 620, 1660, 622, 623, 621, 624, 625,
	1381, 626, 627, 628, 629, 630, 781, 631, 0, 632,
	633, 641, 642, 643, 634, 635, 637, 644, 636, 645,
	646, 647, 648, 650, 649, 1661, 652, 653, 651, 654,
	655, 656, 1662, 657, 782, 658, 638, 639, 659, 660,
	1382, 661, 662, 663, 664, 665, 666, 667, 783, 0,
	668, 1663, 669, 670, 671, 672, 673, 674, 676, 640,
	677, 682, 683, 784, 678, 679, 680, 681, 785, 685,
	686, 687, 688, 1664, 689, 690, 0, 684, 675, 1665,
	691, 692, 693, 694, 695, 696, 0, 697, 698, 1666,
	699, 786, 787, 788, 789, 1667, 711, 1668, 700, 702,
	703, 704, 705, 790, 706, 791, 1669, 707, 708, 709,
	710, 701, 712, 713, 1670, 1671, 714, 715, 716, 718,
	720, 721, 717, 719, 722, 1672, 723, 1673, 0, 724,
	725, 726, 792, 793, 794, 1674, 728, 729, 727, 730,
	731, 734, 732, 733, 795, 735, 472, 736, 737, 1675,
	1676, 1677, 1678, 738, 739, 796, 740, 741, 742, 2943,
	0, 1302, 1274, 1275, 1276, 1272, 1273, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 2940, 330, 331, 0,
	0, 0, 0, 0, 1326, 1290, 0, 0, 332, 0,
	333, 334, 335, 1366, 336, 337, 338, 339, 340, 341,
	342, 744, 1339, 0, 343, 1346, 344, 1345, 0, 1356,
	345, 346, 347, 348, 349, 350, 351, 1292, 1325, 1257,
	352, 1386, 1387, 751, 0, 353, 354, 1332, 0, 1313,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1367, 380, 381, 382, 1316, 1314, 1315, 1322, 1318,
	1317, 1321, 383, 384, 385, 386, 387, 1349, 388, 390,
	1343, 1342, 1262, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 2941, 0, 401, 1334,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1268, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1357, 1358, 424, 1281, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1341, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1368, 434, 435, 436, 1354, 1355, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 447, 1364,
	0, 1291, 448, 0, 449, 450, 451, 452, 453, 454,
	455, 1327, 1328, 1331, 551, 1370, 456, 457, 458, 0,
	459, 460, 461, 462, 463, 464, 0, 0, 0, 320,
	465, 466, 467, 0, 1369, 766, 468, 552, 469, 1336,
	1337, 0, 1297, 0, 470, 471, 474, 1371, 1329, 1372,
	473, 475, 476, 1373, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1365, 488, 1374, 490, 491, 1375, 0, 492, 493,
	494, 495, 496, 497, 500, 1320, 1319, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1376, 527, 528,
	529, 530, 531, 538, 540, 541, 536, 537, 539, 542,
	543, 545, 533, 534, 535, 1377, 544, 532, 1259, 321,
	1378, 546, 547, 548, 549, 1282, 1330, 550, 1344, 553,
	554, 0, 0, 555, 0, 556, 0, 0, 558, 559,
	560, 0, 0, 561, 562, 774, 1379, 563, 1380, 1359,
	564, 565, 1269, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 0, 576, 577, 776, 578, 579, 580,
	777, 581, 582, 583, 1360, 584, 779, 585, 586, 0,
	587, 588, 589, 0, 590, 591, 592, 593, 594, 595,
	596, 597, 1340, 598, 599, 601, 600, 602, 0, 603,
	0, 604, 605, 606, 0, 0, 0, 0, 0, 607,
	608, 610, 0, 611, 612, 613, 614, 609, 615, 616,
	617, 618, 619, 620, 0, 622, 623, 621, 624, 625,
	1381, 626, 627, 628, 629, 630, 1270, 631, 0, 632,
	633, 641, 642, 643, 634, 635, 637, 644, 636, 645,
	646, 647, 648, 650, 649, 0, 652, 653, 651, 654,
	655, 656, 1323, 657, 782, 658, 638, 639, 659, 660,
	1382, 661, 662, 663, 664, 665, 666, 667, 1338, 0,
	668, 0, 669, 670, 671, 672, 673, 674, 676, 640,
	677, 682, 683, 1385, 678, 679, 680, 681, 1361, 685,
	686, 687, 688, 0, 689, 690, 1256, 684, 675, 0,
	691, 692, 693, 694, 695, 696, 0, 697, 698, 0,
	699, 1350, 1351, 1352, 1353, 0, 711, 0, 700, 702,
	703, 704, 705, 1362, 706, 1363, 1280, 707, 708, 709,
	710, 701, 712, 713, 0, 1263, 714, 715, 716, 718,
	720, 721, 717, 719, 722, 1324, 723, 0, 0, 724,
	725, 726, 792, 1347, 1384, 2939, 728, 729, 727, 730,
	731, 734, 732, 733, 795, 735, 472, 736, 737, 0,
	0, 0, 0, 738, 739, 796, 740, 741, 742, 1260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	0, 1253, 1254, 2942, 0, 0, 0, 0, 0, 0,
	0, 1286, 2938, 0, 1244, 1284, 1302, 1274, 1275, 1276,
	1272, 1273, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 1326,
	1290, 0, 0, 332, 0, 333, 334, 335, 1366, 336,
	337, 338, 339, 340, 341, 342, 744, 1339, 0, 343,
	1346, 344, 1345, 0, 1356, 345, 346, 347, 348, 349,
	350, 351, 1292, 1325, 1257, 352, 1386, 1387, 751, 0,
	353, 354, 1332, 0, 1313, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1367, 380, 381, 382,
	1316, 1314, 1315, 1322, 1318, 1317, 1321, 383, 384, 385,
	386, 387, 1349, 388, 390, 1343, 1342, 1262, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1334, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1268, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1357, 1358, 424, 1281, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1341, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1368, 434, 435, 436,
	1354, 1355, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 1364, 0, 1291, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 1327, 1328, 1331, 551,
	1370, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 1369,
	766, 468, 552, 469, 1336, 1337, 0, 1297, 0, 470,
	471, 474, 1371, 1329, 1372, 473, 475, 476, 1373, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 1365, 488, 1374, 490,
	491, 1375, 0, 492, 493, 494, 495, 496, 497, 500,
	1320, 1319, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 1376, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	1377, 544, 532, 1259, 321, 1378, 546, 547, 548, 549,
	1282, 1330, 550, 1344, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 1379, 563, 1380, 1359, 564, 565, 1269, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 1360,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 1340, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 1381, 626, 627, 628, 629,
	630, 1270, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	275, 652, 653, 651, 654, 655, 656, 1323, 657, 782,
	658, 638, 639, 659, 660, 1382, 661, 662, 663, 664,
	665, 666, 667, 1338, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 1385, 678,
	679, 680, 681, 1361, 685, 686, 687, 688, 0, 689,
	690, 1256, 684, 675, 277, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 1350, 1351, 1352, 1353,
	0, 711, 0, 700, 702, 703, 704, 705, 1362, 706,
	1363, 1280, 707, 708, 709, 710, 701, 712, 713, 0,
	1263, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	1324, 723, 0, 0, 724, 725, 726, 1844, 1347, 1384,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 0, 0, 0, 269, 738, 739,
	796, 740, 741, 742, 1260, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 1253, 1254, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 2119, 2117, 0, 0,
	1284, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 275, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 277, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 1844,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 269,
	738, 739, 796, 740, 741, 742, 1260, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	1302, 1274, 1275, 1276, 1272, 1273, 1285, 0, 2119, 3702,
	0, 0, 1284, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 1326, 1290, 0, 0, 332, 0, 333,
	334, 335, 1366, 336, 337, 338, 339, 340, 341, 342,
	744, 1339, 0, 343, 1346, 344, 1345, 0, 1356, 345,
	346, 347, 348, 349, 350, 351, 1292, 1325, 1257, 352,
	1386, 1387, 751, 0, 353, 354, 1332, 0, 1313, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1367, 380, 381, 382, 1316, 1314, 1315, 1322, 1318, 1317,
	1321, 383, 384, 385, 386, 387, 1349, 388, 390, 1343,
	1342, 1262, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1334, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1268, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1357, 1358, 424, 1281, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1341, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1368, 434, 435, 436, 1354, 1355, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 1364, 0,
	1291, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	1327, 1328, 1331, 551, 1370, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 320, 465,
	466, 467, 0, 1369, 766, 468, 552, 469, 1336, 1337,
	0, 1297, 0, 470, 471, 474, 1371, 1329, 1372, 473,
	475, 476, 1373, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	1365, 488, 1374, 490, 491, 1375, 0, 492, 493, 494,
	495, 496, 497, 500, 1320, 1319, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 1376, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 1377, 544, 532, 1259, 321, 1378,
	546, 547, 548, 549, 1282, 1330, 550, 1344, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 1379, 563, 1380, 1359, 564,
	565, 1269, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 1360, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 1340, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 1381,
	626, 627, 628, 629, 630, 1270, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 275, 652, 653, 651, 654, 655,
	656, 1323, 657, 782, 658, 638, 639, 659, 660, 1382,
	661, 662, 663, 664, 665, 666, 667, 1338, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 1385, 678, 679, 680, 681, 1361, 685, 686,
	687, 688, 0, 689, 690, 1256, 684, 675, 277, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	1350, 1351, 1352, 1353, 0, 711, 0, 700, 702, 703,
	704, 705, 1362, 706, 1363, 1280, 707, 708, 709, 710,
	701, 712, 713, 0, 1263, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 1324, 723, 0, 0, 724, 725,
	726, 1844, 1347, 1384, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 0, 0,
	0, 269, 738, 739, 796, 740, 741, 742, 1260, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1255, 0, 0, 0, 0, 0, 0,
	1253, 1254, 1302, 1274, 1275, 1276, 1272, 1273, 1285, 0,
	2119, 2117, 0, 0, 1284, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 1326, 1290, 0, 0, 332,
	0, 333, 334, 335, 1366, 336, 337, 338, 339, 340,
	341, 342, 744, 1339, 0, 343, 1346, 344, 1345, 3073,
	1356, 345, 346, 347, 348, 349, 350, 351, 1292, 1325,
	1257, 352, 1386, 1387, 751, 0, 353, 354, 1332, 0,
	1313, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1367, 380, 381, 382, 1316, 1314, 1315, 1322,
	1318, 1317, 1321, 383, 384, 385, 386, 387, 1349, 388,
	390, 1343, 1342, 1262, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1334, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1268, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1357, 1358, 424, 1281,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1341,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 3078, 1368, 434, 435, 436, 1354, 1355, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	1364, 0, 1291, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 1327, 1328, 1331, 551, 1370, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	320, 465, 466, 467, 0, 1369, 766, 468, 552, 469,
	1336, 1337, 0, 1297, 0, 470, 471, 474, 1371, 1329,
	1372, 473, 475, 476, 1373, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	3074, 489, 1365, 488, 1374, 490, 491, 1375, 0, 492,
	493, 494, 495, 496, 497, 500, 1320, 1319, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1376, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 1377, 544, 532, 1259,
	321, 1378, 546, 547, 548, 549, 1282, 1330, 550, 1344,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 1379, 563, 1380,
	1359, 564, 565, 1269, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 1360, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 1340, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 1381, 626, 627, 628, 629, 630, 1270, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 1323, 657, 782, 658, 638, 639, 659,
	660, 1382, 661, 662, 663, 664, 665, 666, 667, 1338,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 1385, 678, 679, 680, 681, 1361,
	685, 686, 687, 688, 0, 689, 690, 1256, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 1350, 1351, 1352, 1353, 0, 711, 3075, 700,
	702, 703, 704, 705, 1362, 706, 1363, 1280, 707, 708,
	709, 710, 701, 712, 713, 0, 1263, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 1324, 723, 0, 0,
	724, 725, 726, 792, 1347, 1384, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	0, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	1260, 0, 0, 0, 0, 2988, 0, 1302, 1274, 1275,
	1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0, 0,
	0, 0, 1253, 1254, 322, 323, 325, 324, 326, 327,
	328, 329, 1286, 330, 331, 0, 1284, 0, 0, 0,
	1326, 1290, 0, 0, 332, 0, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 1339, 0,
	343, 1346, 344, 1345, 0, 1356, 345, 346, 347, 348,
	349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387, 751,
	0, 353, 354, 1332, 0, 1313, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1367, 380, 381,
	382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383, 384,
	385, 386, 387, 1349, 388, 390, 1343, 1342, 1262, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1334, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1268, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1357, 1358, 424, 1281, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1341, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1368, 434, 435,
	436, 1354, 1355, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 1364, 0, 1291, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 1327, 1328, 1331,
	551, 1370, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 0,
	1369, 766, 468, 552, 469, 1336, 1337, 0, 1297, 0,
	470, 471, 474, 1371, 1329, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1365, 488, 1374,
	490, 491, 1375, 0, 492, 493, 494, 495, 496, 497,
	500, 1320, 1319, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 1259, 321, 1378, 546, 547, 548,
	549, 1282, 1330, 550, 1344, 553, 554, 0, 0, 555,
	0, 556, 0, 0, 558, 559, 560, 0, 0, 561,
	562, 774, 1379, 563, 1380, 1359, 564, 565, 1269, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	1360, 584, 779, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 1340, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 1270, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 1323, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 1338, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 1385,
	678, 679, 680, 681, 1361, 685, 686, 687, 688, 0,
	689, 690, 1256, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 1350, 1351, 1352,
	1353, 0, 711, 0, 700, 702, 703, 704, 705, 1362,
	706, 1363, 1280, 707, 708, 709, 710, 701, 712, 713,
	0, 1263, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1324, 723, 0, 0, 724, 725, 726, 792, 1347,
	1384, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 0, 0, 0, 0, 738,
	739, 796, 740, 741, 742, 1260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 0, 0, 0, 0, 0, 1253, 1254, 0,
	0, 0, 0, 0, 0, 0, 0, 1286, 2986, 0,
	2985, 1284, 1302, 1274, 1275, 1276, 1272, 1273, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 1326, 1290, 0, 0, 332,
	0, 333, 334, 335, 1366, 336, 337, 338, 339, 340,
	341, 342, 744, 1339, 0, 343, 1346, 344, 1345, 0,
	1356, 345, 346, 347, 348, 349, 350, 351, 1292, 1325,
	1257, 352, 1386, 1387, 751, 0, 353, 354, 1332, 0,
	1313, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1367, 380, 381, 382, 1316, 1314, 1315, 1322,
	1318, 1317, 1321, 383, 384, 385, 386, 387, 1349, 388,
	390, 1343, 1342, 1262, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1334, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1268, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1357, 1358, 424, 1281,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1341,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1368, 434, 435, 436, 1354, 1355, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	1364, 0, 1291, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 1327, 1328, 1331, 551, 1370, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	320, 465, 466, 467, 0, 1369, 766, 468, 552, 469,
	1336, 1337, 0, 1297, 0, 470, 471, 474, 1371, 1329,
	1372, 473, 475, 476, 1373, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 1365, 488, 1374, 490, 491, 1375, 0, 492,
	493, 494, 495, 496, 497, 500, 1320, 1319, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1376, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 1377, 544, 532, 1259,
	321, 1378, 546, 547, 548, 549, 1282, 1330, 550, 1344,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 1379, 563, 1380,
	1359, 564, 565, 1269, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 1360, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 1340, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 1381, 626, 627, 628, 629, 630, 1270, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 1323, 657, 782, 658, 638, 639, 659,
	660, 1382, 661, 662, 663, 664, 665, 666, 667, 1338,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 1385, 678, 679, 680, 681, 1361,
	685, 686, 687, 688, 0, 689, 690, 1256, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 1350, 1351, 1352, 1353, 0, 711, 0, 700,
	702, 703, 704, 705, 1362, 706, 1363, 1280, 707, 708,
	709, 710, 701, 712, 713, 0, 1263, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 1324, 723, 0, 0,
	724, 725, 726, 792, 1347, 1384, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	0, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	1260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1255, 0, 0, 0, 0,
	0, 0, 1253, 1254, 0, 0, 0, 0, 0, 0,
	0, 0, 1286, 2983, 0, 2982, 1284, 1302, 1274, 1275,
	1276, 1272, 1273, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	1326, 1290, 0, 0, 332, 0, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 1339, 0,
	343, 1346, 344, 1345, 0, 1356, 345, 346, 347, 348,
	349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387, 751,
	0, 353, 354, 1332, 0, 1313, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1367, 380, 381,
	382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383, 384,
	385, 386, 387, 1349, 388, 390, 1343, 1342, 1262, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1334, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1268, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1357, 1358, 424, 1281, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1341, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1368, 434, 435,
	436, 1354, 1355, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 1364, 0, 1291, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 1327, 1328, 1331,
	551, 1370, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 0,
	1369, 766, 468, 552, 469, 1336, 1337, 0, 1297, 0,
	470, 471, 474, 1371, 1329, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1365, 488, 1374,
	490, 491, 1375, 0, 492, 493, 494, 495, 496, 497,
	500, 1320, 1319, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 1259, 321, 1378, 546, 547, 548,
	549, 1282, 1330, 550, 1344, 553, 554, 0, 0, 555,
	0, 556, 0, 0, 558, 559, 560, 0, 0, 561,
	562, 774, 1379, 563, 1380, 1359, 564, 565, 1269, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	1360, 584, 779, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 1340, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 1270, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 1323, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 1338, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 1385,
	678, 679, 680, 681, 1361, 685, 686, 687, 688, 0,
	689, 690, 1256, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 1350, 1351, 1352,
	1353, 0, 711, 0, 700, 702, 703, 704, 705, 1362,
	706, 1363, 1280, 707, 708, 709, 710, 701, 712, 713,
	0, 1263, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1324, 723, 0, 0, 724, 725, 726, 792, 1347,
	1384, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 0, 0, 0, 0, 738,
	739, 796, 740, 741, 742, 1260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 0, 0, 0, 0, 0, 1253, 1254, 0,
	0, 0, 0, 0, 0, 0, 0, 1286, 2980, 0,
	2979, 1284, 1302, 1274, 1275, 1276, 1272, 1273, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 1326, 1290, 0, 0, 332,
	0, 333, 334, 335, 1366, 336, 337, 338, 339, 340,
	341, 342, 744, 1339, 0, 343, 1346, 344, 1345, 0,
	1356, 345, 346, 347, 348, 349, 350, 351, 1292, 1325,
	1257, 352, 1386, 1387, 751, 0, 353, 354, 1332, 0,
	1313, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1367, 380, 381, 382, 1316, 1314, 1315, 1322,
	1318, 1317, 1321, 383, 384, 385, 386, 387, 1349, 388,
	390, 1343, 1342, 1262, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1334, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1268, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1357, 1358, 424, 1281,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1341,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1368, 434, 435, 436, 1354, 1355, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	1364, 0, 1291, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 1327, 1328, 1331, 551, 1370, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	320, 465, 466, 467, 0, 1369, 766, 468, 552, 469,
	1336, 1337, 0, 1297, 0, 470, 471, 474, 1371, 1329,
	1372, 473, 475, 476, 1373, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 1365, 488, 1374, 490, 491, 1375, 0, 492,
	493, 494, 495, 496, 497, 500, 1320, 1319, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1376, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 1377, 544, 532, 1259,
	321, 1378, 546, 547, 548, 549, 1282, 1330, 550, 1344,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 1379, 563, 1380,
	1359, 564, 565, 1269, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 1360, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 1340, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 1381, 626, 627, 628, 629, 630, 1270, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 1323, 657, 782, 658, 638, 639, 659,
	660, 1382, 661, 662, 663, 664, 665, 666, 667, 1338,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 1385, 678, 679, 680, 681, 1361,
	685, 686, 687, 688, 0, 689, 690, 1256, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 1350, 1351, 1352, 1353, 0, 711, 0, 700,
	702, 703, 704, 705, 1362, 706, 1363, 1280, 707, 708,
	709, 710, 701, 712, 713, 0, 1263, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 1324, 723, 0, 0,
	724, 725, 726, 792, 1347, 1384, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	0, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	1260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1255, 0, 0, 0, 0,
	0, 0, 1253, 1254, 0, 0, 0, 0, 0, 0,
	0, 0, 1286, 2977, 0, 1949, 1284, 1302, 1274, 1275,
	1276, 1272, 1273, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	1326, 1290, 0, 0, 332, 0, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 1339, 0,
	343, 1346, 344, 1345, 0, 1356, 345, 346, 347, 348,
	349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387, 751,
	0, 353, 354, 1332, 0, 1313, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1367, 380, 381,
	382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383, 384,
	385, 386, 387, 1349, 388, 390, 1343, 1342, 1262, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1334, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1268, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1357, 1358, 424, 1281, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1341, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1368, 434, 435,
	436, 1354, 1355, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 1364, 0, 1291, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 1327, 1328, 1331,
	551, 1370, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 0,
	1369, 766, 468, 552, 469, 1336, 1337, 0, 1297, 0,
	470, 471, 474, 1371, 1329, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1365, 488, 1374,
	490, 491, 1375, 0, 492, 493, 494, 495, 496, 497,
	500, 1320, 1319, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 1259, 321, 1378, 546, 547, 548,
	549, 1282, 1330, 550, 1344, 553, 554, 0, 0, 555,
	0, 556, 0, 0, 558, 559, 560, 0, 0, 561,
	562, 774, 1379, 563, 1380, 1359, 564, 565, 1269, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	1360, 584, 779, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 1340, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 1270, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 1323, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 1338, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 1385,
	678, 679, 680, 681, 1361, 685, 686, 687, 688, 0,
	689, 690, 1256, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 1350, 1351, 1352,
	1353, 0, 711, 0, 700, 702, 703, 704, 705, 1362,
	706, 1363, 1280, 707, 708, 709, 710, 701, 712, 713,
	0, 1263, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1324, 723, 0, 0, 724, 725, 726, 792, 1347,
	1384, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 1948, 0, 0, 0, 738,
	739, 796, 740, 741, 742, 1260, 0, 0, 0, 0,
	1249, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285, 0,
	1255, 0, 0, 0, 0, 0, 0, 1253, 1254, 322,
	323, 325, 324, 326, 327, 328, 329, 1286, 330, 331,
	0, 1284, 0, 0, 0, 1326, 1290, 0, 0, 332,
	0, 333, 334, 335, 1366, 336, 337, 338, 339, 340,
	341, 342, 744, 1339, 0, 343, 1346, 344, 1345, 0,
	1356, 345, 346, 347, 348, 349, 350, 351, 1292, 1325,
	1257, 352, 1386, 1387, 751, 0, 353, 354, 1332, 0,
	1313, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1367, 380, 381, 382, 1316, 1314, 1315, 1322,
	1318, 1317, 1321, 383, 384, 385, 386, 387, 1349, 388,
	390, 1343, 1342, 1262, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1334, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1268, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1357, 1358, 424, 1281,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1341,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1368, 434, 435, 436, 1354, 1355, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	1364, 0, 1291, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 1327, 1328, 1331, 551, 1370, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	320, 465, 466, 467, 0, 1369, 766, 468, 552, 469,
	1336, 1337, 0, 1297, 0, 470, 471, 474, 1371, 1329,
	1372, 473, 475, 476, 1373, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 1365, 488, 1374, 490, 491, 1375, 0, 492,
	493, 494, 495, 496, 497, 500, 1320, 1319, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1376, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 1377, 544, 532, 1259,
	321, 1378, 546, 547, 548, 549, 1282, 1330, 550, 1344,
	553, 554, 0, 0, 555, 0, 556, 1264, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 1379, 563, 1380,
	1359, 564, 565, 1269, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 1360, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 1340, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 1381, 626, 627, 628, 629, 630, 1270, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 1323, 657, 782, 658, 638, 639, 659,
	660, 1382, 661, 662, 663, 664, 665, 666, 667, 1338,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 1385, 678, 679, 680, 681, 1361,
	685, 686, 687, 688, 0, 689, 690, 1256, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 1350, 1351, 1352, 1353, 0, 711, 0, 700,
	702, 703, 704, 705, 1362, 706, 1363, 1280, 707, 708,
	709, 710, 701, 712, 713, 0, 1263, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 1324, 723, 0, 0,
	724, 725, 726, 792, 1347, 1384, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	0, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	1260, 0, 0, 0, 0, 0, 0, 1302, 1274, 1275,
	1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0, 0,
	0, 0, 1253, 1254, 322, 323, 325, 324, 326, 327,
	328, 329, 1286, 330, 331, 0, 1284, 0, 0, 0,
	1326, 1290, 0, 0, 332, 0, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 1339, 0,
	343, 1346, 344, 1345, 0, 1356, 345, 346, 347, 348,
	349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387, 751,
	0, 353, 354, 1332, 0, 1313, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	5441, 375, 376, 0, 377, 378, 379, 1367, 380, 381,
	382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383, 384,
	385, 386, 387, 1349, 388, 390, 1343, 1342, 1262, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1334, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1268, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1357, 1358, 424, 1281, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1341, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1368, 434, 435,
	436, 1354, 1355, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 1364, 0, 1291, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 1327, 1328, 1331,
	551, 1370, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 0,
	1369, 766, 468, 552, 469, 1336, 1337, 0, 1297, 0,
	470, 471, 474, 1371, 1329, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1365, 488, 1374,
	490, 491, 1375, 0, 492, 493, 494, 495, 496, 497,
	500, 1320, 1319, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 1259, 321, 1378, 546, 547, 548,
	549, 1282, 1330, 550, 1344, 553, 554, 0, 0, 555,
	0, 556, 1264, 0, 558, 559, 560, 0, 0, 561,
	562, 774, 1379, 563, 1380, 1359, 564, 565, 1269, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	1360, 584, 779, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 1340, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 1270, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 1323, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 1338, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 1385,
	678, 679, 680, 681, 1361, 685, 686, 687, 688, 0,
	689, 690, 1256, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 1350, 1351, 1352,
	1353, 0, 711, 0, 700, 702, 703, 704, 705, 1362,
	706, 1363, 1280, 707, 708, 709, 710, 701, 712, 713,
	0, 1263, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1324, 723, 0, 0, 724, 725, 726, 792, 1347,
	1384, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 0, 0, 0, 0, 738,
	739, 796, 740, 741, 742, 1260, 0, 0, 0, 0,
	0, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285, 0,
	1255, 0, 0, 0, 0, 0, 0, 1253, 1254, 322,
	323, 325, 324, 326, 327, 328, 329, 1286, 330, 331,
	0, 1284, 0, 0, 0, 1326, 1290, 0, 0, 332,
	0, 333, 334, 335, 1366, 336, 337, 338, 339, 340,
	341, 342, 744, 1339, 0, 343, 1346, 344, 1345, 0,
	1356, 345, 346, 347, 348, 349, 350, 351, 1292, 1325,
	1257, 352, 1386, 1387, 751, 0, 353, 354, 1332, 0,
	1313, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1367, 380, 381, 382, 1316, 1314, 1315, 1322,
	1318, 1317, 1321, 383, 384, 385, 386, 387, 1349, 388,
	390, 1343, 1342, 1262, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1334, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1268, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1357, 1358, 424, 1281,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1341,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1368, 434, 435, 436, 1354, 1355, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	1364, 0, 1291, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 1327, 1328, 1331, 551, 1370, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	2818, 465, 466, 467, 0, 1369, 766, 468, 552, 469,
	1336, 1337, 0, 1297, 0, 470, 471, 474, 1371, 1329,
	1372, 473, 475, 476, 1373, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 1365, 488, 1374, 490, 491, 1375, 0, 492,
	493, 494, 495, 496, 497, 500, 1320, 1319, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1376, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 1377, 544, 532, 1259,
	321, 1378, 546, 547, 548, 549, 1282, 1330, 550, 1344,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 1379, 563, 1380,
	1359, 564, 565, 1269, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 1360, 584, 779, 585, 586,
	2817, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 1340, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 1381, 626, 627, 628, 629, 630, 1270, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 1323, 657, 782, 658, 638, 639, 659,
	660, 1382, 661, 662, 663, 664, 665, 666, 667, 1338,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 1385, 678, 679, 680, 681, 1361,
	685, 686, 687, 688, 0, 689, 690, 1256, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 1350, 1351, 1352, 1353, 0, 711, 0, 700,
	702, 703, 704, 705, 1362, 706, 1363, 1280, 707, 708,
	709, 710, 701, 712, 713, 0, 1263, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 1324, 723, 0, 0,
	724, 725, 726, 792, 1347, 1384, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	0, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	1260, 0, 0, 0, 0, 0, 0, 1302, 1274, 1275,
	1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0, 0,
	0, 0, 1253, 1254, 322, 323, 325, 324, 326, 327,
	328, 329, 1286, 330, 331, 0, 1284, 0, 0, 0,
	1326, 1290, 0, 0, 332, 0, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 1339, 0,
	343, 1346, 344, 1345, 0, 1356, 345, 346, 347, 348,
	349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387, 751,
	0, 353, 354, 1332, 0, 1313, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	5146, 375, 376, 0, 377, 378, 379, 1367, 380, 381,
	382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383, 384,
	385, 386, 387, 1349, 388, 390, 1343, 1342, 1262, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1334, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1268, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1357, 1358, 424, 1281, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1341, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1368, 434, 435,
	436, 1354, 1355, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 1364, 0, 1291, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 1327, 1328, 1331,
	551, 1370, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 0,
	1369, 766, 468, 552, 469, 1336, 1337, 0, 1297, 0,
	470, 471, 474, 1371, 1329, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1365, 488, 1374,
	490, 491, 1375, 0, 492, 493, 494, 495, 496, 497,
	500, 1320, 1319, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 1259, 321, 1378, 546, 547, 548,
	549, 1282, 1330, 550, 1344, 553, 554, 0, 0, 555,
	0, 556, 1264, 0, 558, 559, 560, 0, 0, 561,
	562, 774, 1379, 563, 1380, 1359, 564, 565, 1269, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	1360, 584, 779, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 1340, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 1270, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 1323, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 1338, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 1385,
	678, 679, 680, 681, 1361, 685, 686, 687, 688, 0,
	689, 690, 1256, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 1350, 1351, 1352,
	1353, 0, 711, 0, 700, 702, 703, 704, 705, 1362,
	706, 1363, 1280, 707, 708, 709, 710, 701, 712, 713,
	0, 1263, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1324, 723, 0, 0, 724, 725, 726, 792, 1347,
	1384, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 0, 0, 0, 0, 738,
	739, 796, 740, 741, 742, 1260, 0, 0, 0, 0,
	0, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285, 0,
	1255, 0, 0, 0, 0, 0, 0, 1253, 1254, 322,
	323, 325, 324, 326, 327, 328, 329, 1286, 330, 331,
	0, 1284, 0, 0, 0, 1326, 1290, 0, 0, 332,
	0, 333, 334, 335, 1366, 336, 337, 338, 339, 340,
	341, 342, 744, 1339, 0, 343, 1346, 344, 1345, 0,
	1356, 345, 346, 347, 348, 349, 350, 351, 1292, 1325,
	1257, 352, 1386, 1387, 751, 0, 353, 354, 1332, 0,
	1313, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1367, 380, 381, 382, 1316, 1314, 1315, 1322,
	1318, 1317, 1321, 383, 384, 385, 386, 387, 1349, 388,
	390, 1343, 1342, 1262, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1334, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 1268, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1357, 1358, 424, 1281,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1341,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1368, 434, 435, 436, 1354, 1355, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	1364, 0, 1291, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 1327, 1328, 1331, 551, 1370, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	320, 465, 466, 467, 0, 1369, 766, 468, 552, 469,
	1336, 1337, 0, 1297, 0, 470, 471, 474, 1371, 1329,
	1372, 473, 475, 476, 1373, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 1365, 488, 1374, 490, 491, 1375, 0, 492,
	493, 494, 495, 496, 497, 500, 1320, 1319, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1376, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 1377, 544, 532, 1259,
	321, 1378, 546, 547, 548, 549, 1282, 1330, 550, 1344,
	553, 554, 0, 0, 555, 0, 556, 1264, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 1379, 563, 1380,
	1359, 564, 565, 1269, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 1360, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 1340, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 1381, 626, 627, 628, 629, 630, 1270, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 1323, 657, 782, 658, 638, 639, 659,
	660, 1382, 661, 662, 663, 664, 665, 666, 667, 1338,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 1385, 678, 679, 680, 681, 1361,
	685, 686, 687, 688, 0, 689, 690, 1256, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 1350, 1351, 1352, 1353, 0, 711, 0, 700,
	702, 703, 704, 705, 1362, 706, 1363, 1280, 707, 708,
	709, 710, 701, 712, 713, 0, 1263, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 1324, 723, 0, 0,
	724, 725, 726, 792, 1347, 1384, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	0, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	1260, 0, 0, 0, 0, 0, 0, 1302, 1274, 1275,
	1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0, 0,
	0, 0, 1253, 1254, 322, 323, 325, 324, 326, 327,
	328, 329, 1286, 330, 331, 0, 1284, 0, 0, 0,
	1326, 1290, 0, 0, 332, 0, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 1339, 0,
	343, 1346, 344, 1345, 0, 1356, 345, 346, 347, 348,
	349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387, 751,
	0, 353, 354, 1332, 0, 1313, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1367, 380, 381,
	382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383, 384,
	385, 386, 387, 1349, 388, 390, 1343, 1342, 1262, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1334, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1268, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1357, 1358, 424, 1281, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1341, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1368, 434, 435,
	436, 1354, 1355, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 1364, 0, 1291, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 1327, 1328, 1331,
	551, 1370, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 0,
	1369, 766, 468, 552, 469, 1336, 1337, 0, 1297, 0,
	470, 471, 474, 1371, 1329, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1365, 488, 1374,
	490, 491, 1375, 0, 492, 493, 494, 495, 496, 497,
	500, 1320, 1319, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 1259, 4669, 1378, 546, 547, 548,
	549, 1282, 1330, 550, 1344, 553, 554, 0, 0, 555,
	0, 556, 0, 0, 558, 559, 560, 0, 0, 561,
	562, 774, 1379, 563, 1380, 1359, 564, 565, 1269, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	1360, 584, 779, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 1340, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 1270, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 1323, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 1338, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 1385,
	678, 679, 680, 681, 1361, 685, 686, 687, 688, 0,
	689, 690, 1256, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 1350, 1351, 1352,
	1353, 0, 711, 0, 700, 702, 703, 704, 705, 1362,
	706, 1363, 1280, 707, 708, 709, 710, 701, 712, 713,
	0, 1263, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1324, 723, 0, 0, 724, 725, 726, 792, 1347,
	1384, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 0, 0, 0, 0, 738,
	739, 796, 740, 741, 742, 1260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 0, 0, 0, 0, 0, 1253, 1254, 2190,
	1302, 1274, 1275, 1276, 1272, 1273, 1285, 1286, 0, 0,
	0, 1284, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 1326, 1290, 0, 0, 332, 0, 333,
	334, 335, 1366, 336, 337, 338, 339, 340, 341, 342,
	744, 1339, 0, 343, 1346, 344, 1345, 0, 1356, 345,
	346, 347, 348, 349, 350, 351, 1292, 1325, 1257, 352,
	1386, 1387, 751, 0, 353, 354, 1332, 0, 1313, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1367, 380, 381, 382, 1316, 1314, 1315, 1322, 1318, 1317,
	1321, 383, 384, 385, 386, 387, 1349, 388, 390, 1343,
	1342, 1262, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1334, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 1268, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 1357, 1358, 424, 1281, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 1341, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1368, 434, 435, 436, 1354, 1355, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 1364, 0,
	1291, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	1327, 1328, 1331, 551, 1370, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 320, 465,
	466, 467, 0, 1369, 766, 468, 552, 469, 1336, 1337,
	0, 1297, 0, 470, 471, 474, 1371, 1329, 1372, 473,
	475, 476, 1373, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	1365, 488, 1374, 490, 491, 1375, 0, 492, 493, 494,
	495, 496, 497, 500, 1320, 1319, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 1376, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 1377, 544, 532, 1259, 321, 1378,
	546, 547, 548, 549, 1282, 1330, 550, 1344, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 1379, 563, 1380, 1359, 564,
	565, 1269, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 1360, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 1340, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 1381,
	626, 627, 628, 629, 630, 1270, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 1323, 657, 782, 658, 638, 639, 659, 660, 1382,
	661, 662, 663, 664, 665, 666, 667, 1338, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 1385, 678, 679, 680, 681, 1361, 685, 686,
	687, 688, 0, 689, 690, 1256, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	1350, 1351, 1352, 1353, 0, 711, 0, 700, 702, 703,
	704, 705, 1362, 706, 1363, 1280, 707, 708, 709, 710,
	701, 712, 713, 0, 1263, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 1324, 723, 0, 0, 724, 725,
	726, 792, 1347, 1384, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 0, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 1260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1255, 0, 0, 0, 0, 0, 0,
	1253, 1254, 2190, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	1286, 0, 0, 0, 1284, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 4305, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 0, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 3078, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 0, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 0, 0, 0, 0, 0,
	0, 0, 0, 1286, 2117, 0, 3083, 1284, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 3081, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 3069, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 3058, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 3056, 0, 3047, 3054,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 3050, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 3051, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 3052, 510, 3049, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 3053,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 3048, 742, 1260, 0, 0, 0,
	0, 3044, 0, 3047, 3054, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	3050, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 3051, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	3052, 510, 3049, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 3053, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 3048,
	742, 1260, 0, 0, 0, 0, 0, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	0, 0, 0, 0, 0, 0, 2125, 0, 1286, 0,
	0, 0, 1284, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 2797, 330,
	331, 0, 0, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 2757, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 2725, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 1954, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 1879, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 1874, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 1860, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 1855, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 1761, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1760, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 1755, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1754, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 1748, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 1721, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 1693, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 1697, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 1698, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 1696,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 1521, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 0, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 0, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 5494, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 5493,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 0, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 5492, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 5494, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 5493, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 0, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	5066, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 5067, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 5065, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 0, 0, 1302, 1274, 1275, 1276, 3668, 3669, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 0, 0, 1302, 1274,
	1275, 1276, 3666, 3667, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 1253, 1254, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1260, 0, 0, 0,
	0, 0, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 1255, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 1257, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 1262, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	1259, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 1269, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 1256, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 1263, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1260, 0, 0, 0, 0, 0, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 1255, 0, 0, 0,
	0, 0, 0, 2805, 2806, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 0, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 1371, 1329, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 0, 321, 1378, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 3066, 0, 0, 0, 0, 0, 0, 3064, 3065,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 1292,
	1325, 0, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1268, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	0, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 557, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 3661, 3662,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 0, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 0, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 0, 0, 0, 0, 0, 0, 0, 1302, 1274,
	1275, 1276, 1272, 1273, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 2389, 2390, 322, 323, 325, 324, 326,
	327, 328, 329, 1286, 330, 331, 0, 1284, 0, 0,
	0, 1326, 1290, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 0, 1339,
	0, 343, 1346, 344, 1345, 0, 1356, 345, 346, 347,
	348, 349, 350, 351, 1292, 1325, 1257, 352, 1386, 1387,
	751, 0, 353, 354, 1332, 0, 1313, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 5494, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383,
	384, 385, 386, 387, 1349, 388, 390, 1343, 1342, 1262,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 1268,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 1357, 1358, 424, 1281, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 1341, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 1354, 1355, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 1364, 0, 1291, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1327, 1328,
	1331, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 1336, 1337, 0, 1297,
	0, 470, 471, 474, 0, 1329, 0, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 1365, 488,
	1374, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 1320, 1319, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 1259, 321, 0, 546, 547,
	548, 549, 1282, 1330, 550, 1344, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 1359, 564, 565, 1269,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 1360, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 1340,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 1270, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 1323,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 1338, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	1385, 678, 679, 680, 681, 1361, 685, 686, 687, 688,
	0, 689, 690, 1256, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 1350, 1351,
	1352, 1353, 0, 711, 0, 700, 702, 703, 704, 705,
	1362, 706, 1363, 1280, 707, 708, 709, 710, 701, 5493,
	713, 0, 1263, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 1324, 723, 0, 0, 724, 725, 726, 792,
	1347, 1384, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 3085, 0, 1302, 1274, 1275, 1276, 1272, 1273, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 1253, 1254,
	322, 323, 325, 324, 326, 327, 328, 329, 1286, 330,
	331, 0, 1284, 0, 0, 0, 1326, 1290, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 1339, 0, 343, 1346, 344, 1345,
	0, 1356, 345, 346, 347, 348, 349, 350, 351, 0,
	1325, 0, 352, 1386, 1387, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 1349,
	388, 390, 1343, 1342, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 755, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	1281, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1341, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 1354, 1355, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 1291, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 1336, 1337, 0, 1297, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	0, 321, 1378, 546, 547, 548, 549, 1282, 1330, 550,
	1344, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 557, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 1340, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 1270, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	1338, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 1385, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 0, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 1350, 1351, 1352, 1353, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 1280, 707,
	708, 709, 710, 701, 712, 713, 0, 0, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 1347, 1384, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 0, 0, 1723, 0, 1302, 1274, 1275, 1276, 1272,
	1273, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 1286, 0, 0, 0, 1284, 1326, 1290,
	0, 0, 332, 0, 333, 334, 335, 1366, 336, 337,
	338, 339, 340, 341, 342, 744, 1339, 0, 343, 1346,
	344, 1345, 0, 1356, 345, 346, 347, 348, 349, 350,
	351, 0, 1325, 0, 352, 1386, 1387, 751, 0, 353,
	354, 1332, 0, 1313, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1367, 380, 381, 382, 1316,
	1314, 1315, 1322, 1318, 1317, 1321, 383, 384, 385, 386,
	387, 1349, 388, 390, 1343, 1342, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1334, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 755, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1357,
	1358, 424, 1281, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1341, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1368, 434, 435, 436, 1354,
	1355, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 447, 1364, 0, 1291, 448, 0, 449, 450,
	451, 452, 453, 454, 455, 1327, 1328, 1331, 551, 1370,
	456, 457, 458, 0, 459, 460, 461, 462, 463, 464,
	0, 0, 0, 320, 465, 466, 467, 0, 1369, 766,
	468, 552, 469, 1336, 1337, 0, 1297, 0, 470, 471,
	474, 1371, 1329, 1372, 473, 475, 476, 1373, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1365, 488, 1374, 490, 491,
	1375, 0, 492, 493, 494, 495, 496, 497, 500, 1320,
	1319, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1376, 527, 528, 529, 530, 531, 538, 540, 541,
	536, 537, 539, 542, 543, 545, 533, 534, 535, 1377,
	544, 532, 0, 321, 1378, 546, 547, 548, 549, 1282,
	1330, 550, 1344, 553, 554, 0, 0, 555, 0, 556,
	0, 0, 558, 559, 560, 0, 0, 561, 562, 774,
	1379, 563, 1380, 1359, 564, 565, 557, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 0, 576, 577,
	776, 578, 579, 580, 777, 581, 582, 583, 1360, 584,
	779, 585, 586, 0, 587, 588, 589, 0, 590, 591,
	592, 593, 594, 595, 596, 597, 1340, 598, 599, 601,
	600, 602, 0, 603, 0, 604, 605, 606, 0, 0,
	0, 0, 0, 607, 608, 610, 0, 611, 612, 613,
	614, 609, 615, 616, 617, 618, 619, 620, 0, 622,
	623, 621, 624, 625, 1381, 626, 627, 628, 629, 630,
	1270, 631, 0, 632, 633, 641, 642, 643, 634, 635,
	637, 644, 636, 645, 646, 647, 648, 650, 649, 0,
	652, 653, 651, 654, 655, 656, 1323, 657, 782, 658,
	638, 639, 659, 660, 1382, 661, 662, 663, 664, 665,
	666, 667, 1338, 0, 668, 0, 669, 670, 671, 672,
	673, 674, 676, 640, 677, 682, 683, 1385, 678, 679,
	680, 681, 1361, 685, 686, 687, 688, 0, 689, 690,
	0, 684, 675, 0, 691, 692, 693, 694, 695, 696,
	0, 697, 698, 0, 699, 1350, 1351, 1352, 1353, 0,
	711, 0, 700, 702, 703, 704, 705, 1362, 706, 1363,
	1280, 707, 708, 709, 710, 701, 712, 713, 0, 0,
	714, 715, 716, 718, 720, 721, 717, 719, 722, 1324,
	723, 0, 0, 724, 725, 726, 792, 1347, 1384, 0,
	728, 729, 727, 730, 731, 734, 732, 733, 795, 735,
	472, 736, 737, 0, 0, 0, 0, 738, 739, 796,
	740, 741, 742, 1244, 0, 1425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 1286, 0, 0, 1326, 1284,
	0, 0, 332, 0, 333, 334, 335, 1366, 336, 337,
	338, 339, 340, 341, 342, 744, 745, 0, 343, 746,
	344, 747, 0, 748, 345, 346, 347, 348, 349, 350,
	351, 0, 1325, 0, 352, 749, 750, 751, 0, 353,
	354, 1332, 0, 1313, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1367, 380, 381, 382, 1316,
	1314, 1315, 1322, 1318, 1317, 1321, 383, 384, 385, 386,
	387, 0, 388, 390, 753, 754, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 755, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1357,
	1358, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 758, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1368, 434, 435, 436, 759,
	760, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 447, 1364, 0, 762, 448, 0, 449, 450,
	451, 452, 453, 454, 455, 1327, 1328, 1331, 551, 1370,
	456, 457, 458, 0, 459, 460, 461, 462, 463, 464,
	0, 0, 0, 320, 465, 466, 467, 0, 1369, 766,
	468, 552, 469, 767, 768, 0, 769, 0, 470, 471,
	474, 1371, 1329, 1372, 473, 475, 476, 1373, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 1411,
	485, 487, 486, 0, 489, 1365, 488, 1374, 490, 491,
	1375, 0, 492, 493, 494, 495, 496, 497, 500, 1320,
	1319, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1376, 527, 528, 529, 530, 531, 538, 540, 541,
	536, 537, 539, 542, 543, 545, 533, 534, 535, 1377,
	544, 532, 0, 321, 1378, 546, 547, 548, 549, 0,
	1330, 550, 773, 553, 554, 0, 0, 555, 0, 556,
	0, 1417, 558, 559, 560, 0, 0, 561, 562, 774,
	1379, 563, 1380, 1359, 564, 565, 557, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 0, 576, 577,
	776, 578, 579, 580, 777, 581, 582, 583, 1360, 584,
	779, 585, 586, 0, 587, 588, 589, 0, 590, 591,
	592, 593, 594, 595, 596, 597, 780, 598, 599, 601,
	600, 602, 0, 603, 0, 604, 605, 606, 0, 0,
	0, 0, 0, 607, 608, 610, 0, 611, 612, 613,
	614, 609, 615, 616, 617, 618, 619, 620, 0, 622,
	623, 621, 624, 625, 1381, 626, 627, 628, 629, 630,
	781, 1419, 0, 632, 633, 641, 642, 643, 634, 635,
	637, 644, 636, 645, 646, 647, 648, 650, 649, 275,
	652, 653, 651, 654, 655, 656, 1323, 657, 782, 658,
	638, 639, 659, 660, 1382, 661, 662, 663, 664, 665,
	666, 667, 783, 0, 668, 0, 669, 670, 671, 672,
	673, 674, 676, 640, 677, 682, 683, 784, 678, 679,
	680, 681, 1361, 685, 686, 687, 688, 0, 689, 690,
	0, 684, 675, 277, 691, 692, 693, 694, 695, 696,
	0, 697, 698, 0, 699, 786, 787, 788, 789, 0,
	711, 0, 700, 702, 703, 704, 705, 1362, 706, 1363,
	0, 707, 708, 709, 710, 701, 712, 713, 0, 0,
	714, 715, 716, 718, 720, 721, 717, 719, 722, 1324,
	723, 0, 0, 724, 725, 726, 1844, 793, 794, 0,
	728, 729, 727, 730, 731, 734, 732, 733, 795, 735,
	472, 736, 737, 0, 0, 0, 269, 738, 739, 796,
	740, 741, 742, 1425, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 1415, 0, 2214, 1326, 0, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 745, 0, 343, 746, 344, 747,
	0, 748, 345, 346, 347, 348, 349, 350, 351, 0,
	1325, 0, 352, 749, 750, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 0,
	388, 390, 753, 754, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 755, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	758, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 759, 760, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 762, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 767, 768, 0, 769, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 1411, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	0, 321, 1378, 546, 547, 548, 549, 0, 1330, 550,
	773, 553, 554, 0, 0, 555, 0, 556, 0, 1417,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 557, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 780, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 781, 1419,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 275, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	783, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 784, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 0, 684,
	675, 277, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 786, 787, 788, 789, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 0, 707,
	708, 709, 710, 701, 712, 713, 0, 0, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 1844, 793, 794, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 269, 738, 739, 796, 740, 741,
	742, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3828, 0, 1425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 2214, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	1326, 0, 0, 0, 332, 0, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 745, 0,
	343, 746, 344, 747, 0, 748, 345, 346, 347, 348,
	349, 350, 351, 0, 1325, 0, 352, 749, 750, 751,
	0, 353, 354, 1332, 0, 1313, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1367, 380, 381,
	382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383, 384,
	385, 386, 387, 0, 388, 390, 753, 754, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 755, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1357, 1358, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 758, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1368, 434, 435,
	436, 759, 760, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 1364, 0, 762, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 1327, 1328, 1331,
	551, 1370, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 0,
	1369, 766, 468, 552, 469, 767, 768, 0, 769, 0,
	470, 471, 474, 1371, 1329, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 1411, 485, 487, 486, 0, 489, 1365, 488, 1374,
	490, 491, 1375, 0, 492, 493, 494, 495, 496, 497,
	500, 1320, 1319, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 0, 321, 1378, 546, 547, 548,
	549, 0, 1330, 550, 773, 553, 554, 0, 0, 555,
	0, 556, 0, 1417, 558, 559, 560, 0, 0, 561,
	562, 774, 1379, 563, 1380, 1359, 564, 565, 557, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	1360, 584, 779, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 780, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 781, 1419, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 1323, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 783, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 784,
	678, 679, 680, 681, 1361, 685, 686, 687, 688, 0,
	689, 690, 0, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 786, 787, 788,
	789, 0, 711, 0, 700, 702, 703, 704, 705, 1362,
	706, 1363, 0, 707, 708, 709, 710, 701, 712, 713,
	0, 0, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1324, 723, 0, 0, 724, 725, 726, 792, 793,
	794, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 0, 0, 0, 0, 738,
	739, 796, 740, 741, 742, 1407, 0, 1425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 1415, 0, 1413, 0, 0,
	1326, 0, 0, 0, 332, 0, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 745, 0,
	343, 746, 344, 747, 0, 748, 345, 346, 347, 348,
	349, 350, 351, 0, 1325, 0, 352, 749, 750, 751,
	0, 353, 354, 1332, 0, 1313, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1367, 380, 381,
	382, 1316, 1314, 1315, 1322, 1318, 1317, 1321, 383, 384,
	385, 386, 387, 0, 388, 390, 753, 754, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 755, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1357, 1358, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 758, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1368, 434, 435,
	436, 759, 760, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 1364, 0, 762, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 1327, 1328, 1331,
	551, 1370, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 0,
	1369, 766, 468, 552, 469, 767, 768, 0, 769, 0,
	470, 471, 474, 1371, 1329, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 1411, 485, 487, 486, 0, 489, 1365, 488, 1374,
	490, 491, 1375, 0, 492, 493, 494, 495, 496, 497,
	500, 1320, 1319, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 0, 321, 1378, 546, 547, 548,
	549, 0, 1330, 550, 773, 553, 554, 0, 0, 555,
	0, 556, 0, 1417, 558, 559, 560, 0, 0, 561,
	562, 774, 1379, 563, 1380, 1359, 564, 565, 557, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	1360, 584, 779, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 780, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 781, 1419, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 1323, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 783, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 784,
	678, 679, 680, 681, 1361, 685, 686, 687, 688, 0,
	689, 690, 0, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 786, 787, 788,
	789, 0, 711, 0, 700, 702, 703, 704, 705, 1362,
	706, 1363, 0, 707, 708, 709, 710, 701, 712, 713,
	0, 0, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 1324, 723, 0, 0, 724, 725, 726, 792, 793,
	794, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 0, 0, 0, 0, 738,
	739, 796, 740, 741, 742, 1425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 1415, 0, 1413, 1326, 0,
	0, 0, 332, 0, 333, 334, 335, 1366, 336, 337,
	338, 339, 340, 341, 342, 744, 745, 0, 343, 746,
	344, 747, 0, 748, 345, 346, 347, 348, 349, 350,
	351, 0, 1325, 0, 352, 749, 750, 751, 0, 353,
	354, 1332, 0, 1313, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1367, 380, 381, 382, 1316,
	1314, 1315, 1322, 1318, 1317, 1321, 383, 384, 385, 386,
	387, 0, 388, 390, 753, 754, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 755, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1357,
	1358, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 758, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1368, 434, 435, 436, 759,
	760, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 447, 1364, 0, 762, 448, 0, 449, 450,
	451, 452, 453, 454, 455, 1327, 1328, 1331, 551, 1370,
	456, 457, 458, 0, 459, 460, 461, 462, 463, 464,
	0, 0, 0, 320, 465, 466, 467, 0, 1369, 766,
	468, 552, 469, 767, 768, 0, 769, 0, 470, 471,
	474, 1371, 1329, 1372, 473, 475, 476, 1373, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 1411,
	485, 487, 486, 0, 489, 1365, 488, 1374, 490, 491,
	1375, 0, 492, 493, 494, 495, 496, 497, 500, 1320,
	1319, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1376, 527, 528, 529, 530, 531, 538, 540, 541,
	536, 537, 539, 542, 543, 545, 533, 534, 535, 1377,
	544, 532, 0, 321, 1378, 546, 547, 548, 549, 0,
	1330, 550, 773, 553, 554, 0, 0, 555, 0, 556,
	0, 1417, 558, 559, 560, 0, 0, 561, 562, 774,
	1379, 563, 1380, 1359, 564, 565, 557, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 0, 576, 577,
	776, 578, 579, 580, 777, 581, 582, 583, 1360, 584,
	779, 585, 586, 0, 587, 588, 589, 0, 590, 591,
	592, 593, 594, 595, 596, 597, 780, 598, 599, 601,
	600, 602, 0, 603, 0, 604, 605, 606, 0, 0,
	0, 0, 0, 607, 608, 610, 0, 611, 612, 613,
	614, 609, 615, 616, 617, 618, 619, 620, 0, 622,
	623, 621, 624, 625, 1381, 626, 627, 628, 629, 630,
	781, 1419, 0, 632, 633, 641, 642, 643, 634, 635,
	637, 644, 636, 645, 646, 647, 648, 650, 649, 0,
	652, 653, 651, 654, 655, 656, 1323, 657, 782, 658,
	638, 639, 659, 660, 1382, 661, 662, 663, 664, 665,
	666, 667, 783, 0, 668, 0, 669, 670, 671, 672,
	673, 674, 676, 640, 677, 682, 683, 784, 678, 679,
	680, 681, 1361, 685, 686, 687, 688, 0, 689, 690,
	0, 684, 675, 0, 691, 692, 693, 694, 695, 696,
	0, 697, 698, 0, 699, 786, 787, 788, 789, 0,
	711, 0, 700, 702, 703, 704, 705, 1362, 706, 1363,
	0, 707, 708, 709, 710, 701, 712, 713, 0, 0,
	714, 715, 716, 718, 720, 721, 717, 719, 722, 1324,
	723, 0, 0, 724, 725, 726, 792, 793, 794, 0,
	728, 729, 727, 730, 731, 734, 732, 733, 795, 735,
	472, 736, 737, 0, 0, 0, 0, 738, 739, 796,
	740, 741, 742, 1425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 1415, 0, 1413, 1326, 0, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 745, 0, 343, 746, 344, 747,
	0, 748, 345, 346, 347, 348, 349, 350, 351, 0,
	1325, 0, 352, 749, 750, 751, 0, 353, 354, 1332,
	0, 1313, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 1316, 1314, 1315,
	1322, 1318, 1317, 1321, 383, 384, 385, 386, 387, 0,
	388, 390, 753, 754, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 755, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1357, 1358, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	758, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 759, 760, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 1364, 0, 762, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 1327, 1328, 1331, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 767, 768, 0, 769, 0, 470, 471, 474, 1371,
	1329, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1365, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 1320, 1319, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	0, 321, 1378, 546, 547, 548, 549, 0, 1330, 550,
	773, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 1359, 564, 565, 557, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 1360, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 780, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 781, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 1323, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	783, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 784, 678, 679, 680, 681,
	1361, 685, 686, 687, 688, 0, 689, 690, 0, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 786, 787, 788, 789, 0, 711, 0,
	700, 702, 703, 704, 705, 1362, 706, 1363, 0, 707,
	708, 709, 710, 701, 712, 713, 0, 0, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 1324, 723, 0,
	0, 724, 725, 726, 792, 793, 794, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 4863, 1326, 0, 0, 0, 332, 0,
	333, 334, 335, 1366, 336, 337, 338, 339, 340, 341,
	342, 744, 745, 0, 343, 746, 344, 747, 0, 748,
	345, 346, 347, 348, 349, 350, 351, 0, 1325, 0,
	352, 749, 750, 751, 0, 353, 354, 1332, 0, 1313,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1367, 380, 381, 382, 1316, 1314, 1315, 1322, 1318,
	1317, 1321, 383, 384, 385, 386, 387, 0, 388, 390,
	753, 754, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 755, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1357, 1358, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 758, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1368, 434, 435, 436, 759, 760, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 447, 1364,
	0, 762, 448, 0, 449, 450, 451, 452, 453, 454,
	455, 1327, 1328, 1331, 551, 1370, 456, 457, 458, 0,
	459, 460, 461, 462, 463, 464, 0, 0, 0, 320,
	465, 466, 467, 0, 1369, 766, 468, 552, 469, 767,
	768, 0, 769, 0, 470, 471, 474, 1371, 1329, 1372,
	473, 475, 476, 1373, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1365, 488, 1374, 490, 491, 1375, 0, 492, 493,
	494, 495, 496, 497, 500, 1320, 1319, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1376, 527, 528,
	529, 530, 531, 538, 540, 541, 536, 537, 539, 542,
	543, 545, 533, 534, 535, 1377, 544, 532, 0, 321,
	1378, 546, 547, 548, 549, 0, 1330, 550, 773, 553,
	554, 0, 0, 555, 0, 556, 0, 0, 558, 559,
	560, 0, 0, 561, 562, 774, 1379, 563, 1380, 1359,
	564, 565, 557, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 0, 576, 577, 776, 578, 579, 580,
	777, 581, 582, 583, 1360, 584, 779, 585, 586, 0,
	587, 588, 589, 0, 590, 591, 592, 593, 594, 595,
	596, 597, 780, 598, 599, 601, 600, 602, 0, 603,
	0, 604, 605, 606, 0, 0, 0, 0, 0, 607,
	608, 610, 0, 611, 612, 613, 614, 609, 615, 616,
	617, 618, 619, 620, 0, 622, 623, 621, 624, 625,
	1381, 626, 627, 628, 629, 630, 781, 1419, 0, 632,
	633, 641, 642, 643, 634, 635, 637, 644, 636, 645,
	646, 647, 648, 650, 649, 0, 652, 653, 651, 654,
	655, 656, 1323, 657, 782, 658, 638, 639, 659, 660,
	1382, 661, 662, 663, 664, 665, 666, 667, 783, 0,
	668, 0, 669, 670, 671, 672, 673, 674, 676, 640,
	677, 682, 683, 784, 678, 679, 680, 681, 1361, 685,
	686, 687, 688, 0, 689, 690, 0, 684, 675, 0,
	691, 692, 693, 694, 695, 696, 0, 697, 698, 0,
	699, 786, 787, 788, 789, 0, 711, 0, 700, 702,
	703, 704, 705, 1362, 706, 1363, 0, 707, 708, 709,
	710, 701, 712, 713, 0, 0, 714, 715, 716, 718,
	720, 721, 717, 719, 722, 1324, 723, 0, 0, 724,
	725, 726, 792, 793, 794, 0, 728, 729, 727, 730,
	731, 734, 732, 733, 795, 735, 472, 736, 737, 316,
	0, 0, 0, 738, 739, 796, 740, 741, 742, 2911,
	2912, 2913, 2930, 2931, 2932, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	2933, 0, 743, 0, 0, 0, 332, 0, 333, 334,
	335, 2109, 336, 337, 338, 339, 340, 341, 342, 744,
	745, 0, 343, 746, 344, 747, 0, 748, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 2094, 352, 749,
	750, 751, 0, 353, 354, 752, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 2923, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 2919, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 753, 754,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	755, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 756, 757, 424, 0, 0, 0, 2924,
	2925, 2926, 2927, 425, 426, 427, 758, 0, 0, 2918,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 759, 760, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 447, 761, 0, 762,
	448, 0, 449, 450, 451, 452, 453, 454, 455, 763,
	764, 765, 551, 0, 456, 457, 458, 0, 459, 460,
	461, 462, 463, 464, 0, 0, 0, 0, 465, 466,
	467, 0, 0, 766, 468, 552, 469, 767, 768, 0,
	769, 0, 470, 471, 474, 0, 770, 0, 473, 475,
	476, 0, 477, 0, 2928, 2929, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 771,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 2921,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 538, 540, 541, 536, 537, 539, 542, 543, 545,
	533, 534, 535, 0, 544, 532, 0, 0, 0, 546,
	547, 548, 549, 0, 772, 550, 773, 553, 554, 0,
	0, 555, 0, 556, 0, 0, 558, 559, 560, 0,
	0, 561, 562, 774, 0, 563, 0, 775, 564, 565,
	557, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 0, 576, 577, 776, 578, 579, 580, 777, 581,
	582, 583, 778, 584, 779, 585, 586, 0, 587, 588,
	589, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	780, 598, 599, 601, 600, 602, 0, 603, 0, 604,
	605, 606, 0, 0, 0, 0, 0, 607, 608, 610,
	0, 611, 612, 613, 614, 609, 615, 616, 617, 618,
	619, 620, 0, 622, 623, 621, 624, 625, 0, 626,
	627, 628, 629, 630, 781, 631, 2922, 632, 633, 641,
	642, 643, 634, 635, 637, 644, 636, 645, 646, 647,
	648, 650, 649, 0, 652, 653, 651, 654, 655, 656,
	0, 657, 782, 658, 638, 639, 659, 660, 0, 661,
	662, 663, 664, 665, 666, 667, 783, 0, 668, 0,
	669, 670, 671, 672, 673, 674, 676, 640, 677, 682,
	683, 784, 678, 679, 680, 681, 785, 685, 686, 687,
	688, 0, 689, 690, 2093, 684, 675, 0, 691, 692,
	693, 694, 695, 696, 0, 697, 698, 0, 699, 786,
	787, 788, 789, 0, 711, 0, 700, 702, 703, 704,
	705, 790, 706, 791, 0, 707, 708, 709, 710, 701,
	712, 713, 0, 0, 714, 715, 716, 718, 720, 721,
	717, 719, 722, 0, 723, 0, 0, 724, 725, 726,
	792, 793, 794, 0, 728, 729, 727, 730, 731, 734,
	732, 733, 795, 735, 472, 736, 737, 0, 0, 0,
	0, 738, 739, 796, 740, 741, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 0, 1714, 2908,
	2909, 2910, 2934, 2920, 2914, 0, 2916, 2917, 2915, 2902,
	2903, 2904, 2905, 2906, 2907, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 1680, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 1371, 770, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 0, 0, 1378, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 275, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 277, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 1844,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 269,
	738, 739, 796, 740, 741, 742, 0, 1841, 270, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 216, 0,
	0, 0, 743, 0, 0, 0, 332, 0, 333, 334,
	335, 1366, 336, 337, 338, 339, 340, 341, 342, 744,
	745, 0, 343, 746, 344, 747, 0, 748, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 749,
	750, 751, 0, 353, 354, 752, 0, 1680, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1367,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 753, 754,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	755, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 756, 757, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 758, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1368,
	434, 435, 436, 759, 760, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 447, 761, 0, 762,
	448, 0, 449, 450, 451, 452, 453, 454, 455, 763,
	764, 765, 551, 1370, 456, 457, 458, 0, 459, 460,
	461, 462, 463, 464, 0, 0, 0, 0, 465, 466,
	467, 0, 1369, 766, 468, 552, 469, 767, 768, 0,
	769, 0, 470, 471, 474, 1371, 770, 1372, 473, 475,
	476, 1373, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 771,
	488, 1374, 490, 491, 1375, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1376, 527, 528, 529, 530,
	531, 538, 540, 541, 536, 537, 539, 542, 543, 545,
	533, 534, 535, 1377, 544, 532, 0, 0, 1378, 546,
	547, 548, 549, 0, 772, 550, 773, 553, 554, 0,
	0, 555, 0, 556, 0, 0, 558, 559, 560, 0,
	0, 561, 562, 774, 1379, 563, 1380, 775, 564, 565,
	557, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 0, 576, 577, 776, 578, 579, 580, 777, 581,
	582, 583, 778, 584, 779, 585, 586, 0, 587, 588,
	589, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	780, 598, 599, 601, 600, 602, 0, 603, 0, 604,
	605, 606, 0, 0, 0, 0, 0, 607, 608, 610,
	0, 611, 612, 613, 614, 609, 615, 616, 617, 618,
	619, 620, 0, 622, 623, 621, 624, 625, 1381, 626,
	627, 628, 629, 630, 781, 631, 0, 632, 633, 641,
	642, 643, 634, 635, 637, 644, 636, 645, 646, 647,
	648, 650, 649, 275, 652, 653, 651, 654, 655, 656,
	0, 657, 782, 658, 638, 639, 659, 660, 1382, 661,
	662, 663, 664, 665, 666, 667, 783, 0, 668, 0,
	669, 670, 671, 672, 673, 674, 676, 640, 677, 682,
	683, 784, 678, 679, 680, 681, 785, 685, 686, 687,
	688, 0, 689, 690, 0, 684, 675, 277, 691, 692,
	693, 694, 695, 696, 0, 697, 698, 0, 699, 786,
	787, 788, 789, 0, 711, 0, 700, 702, 703, 704,
	705, 790, 706, 791, 0, 707, 708, 709, 710, 701,
	712, 713, 0, 0, 714, 715, 716, 718, 720, 721,
	717, 719, 722, 0, 723, 0, 0, 724, 725, 726,
	1844, 793, 794, 0, 728, 729, 727, 730, 731, 734,
	732, 733, 795, 735, 472, 736, 737, 0, 0, 0,
	269, 738, 739, 796, 740, 741, 742, 1714, 1713, 270,
	0, 0, 0, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 216,
	743, 0, 0, 0, 332, 0, 333, 334, 335, 1366,
	336, 337, 338, 339, 340, 341, 342, 744, 745, 0,
	343, 746, 344, 747, 0, 748, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 749, 750, 751,
	0, 353, 354, 752, 0, 1680, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1367, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 753, 754, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 755, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 756, 757, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 758, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1368, 434, 435,
	436, 759, 760, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 761, 0, 762, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 763, 764, 765,
	551, 1370, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 0, 465, 466, 467, 0,
	1369, 766, 468, 552, 469, 767, 768, 0, 769, 0,
	470, 471, 474, 1371, 770, 1372, 473, 475, 476, 1373,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 771, 488, 1374,
	490, 491, 1375, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1376, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 1377, 544, 532, 0, 0, 1378, 546, 547, 548,
	549, 0, 772, 550, 773, 553, 554, 0, 0, 555,
	0, 556, 0, 0, 558, 559, 560, 0, 0, 561,
	562, 774, 1379, 563, 1380, 775, 564, 565, 557, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	778, 584, 779, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 780, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 1381, 626, 627, 628,
	629, 630, 781, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 0, 657,
	782, 658, 638, 639, 659, 660, 1382, 661, 662, 663,
	664, 665, 666, 667, 783, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 784,
	678, 679, 680, 681, 785, 685, 686, 687, 688, 0,
	689, 690, 0, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 786, 787, 788,
	789, 0, 711, 0, 700, 702, 703, 704, 705, 790,
	706, 791, 0, 707, 708, 709, 710, 701, 712, 713,
	0, 0, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 0, 723, 0, 0, 724, 725, 726, 792, 793,
	794, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 0, 0, 0, 0, 738,
	739, 796, 740, 741, 742, 1714, 1713, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 1868, 743, 0,
	0, 0, 332, 0, 333, 334, 335, 1366, 336, 337,
	338, 339, 340, 341, 342, 744, 745, 0, 343, 746,
	344, 747, 0, 748, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 749, 750, 751, 0, 353,
	354, 752, 0, 1680, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1367, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 753, 754, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 755, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 756,
	757, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 758, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1368, 434, 435, 436, 759,
	760, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 447, 761, 0, 762, 448, 0, 449, 450,
	451, 452, 453, 454, 455, 763, 764, 765, 551, 1370,
	456, 457, 458, 0, 459, 460, 461, 462, 463, 464,
	0, 0, 0, 0, 465, 466, 467, 0, 1369, 766,
	468, 552, 469, 767, 768, 0, 769, 0, 470, 471,
	474, 1371, 770, 1372, 473, 475, 476, 1373, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 771, 488, 1374, 490, 491,
	1375, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1376, 527, 528, 529, 530, 531, 538, 540, 541,
	536, 537, 539, 542, 543, 545, 533, 534, 535, 1377,
	544, 532, 0, 0, 1378, 546, 547, 548, 549, 0,
	772, 550, 773, 553, 554, 0, 0, 555, 0, 556,
	0, 0, 558, 559, 560, 0, 0, 561, 562, 774,
	1379, 563, 1380, 775, 564, 565, 557, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 0, 576, 577,
	776, 578, 579, 580, 777, 581, 582, 583, 778, 584,
	779, 585, 586, 0, 587, 588, 589, 0, 590, 591,
	592, 593, 594, 595, 596, 597, 780, 598, 599, 601,
	600, 602, 0, 603, 0, 604, 605, 606, 0, 0,
	0, 0, 0, 607, 608, 610, 0, 611, 612, 613,
	614, 609, 615, 616, 617, 618, 619, 620, 0, 622,
	623, 621, 624, 625, 1381, 626, 627, 628, 629, 630,
	781, 631, 0, 632, 633, 641, 642, 643, 634, 635,
	637, 644, 636, 645, 646, 647, 648, 650, 649, 0,
	652, 653, 651, 654, 655, 656, 0, 657, 782, 658,
	638, 639, 659, 660, 1382, 661, 662, 663, 664, 665,
	666, 667, 783, 0, 668, 0, 669, 670, 671, 672,
	673, 674, 676, 640, 677, 682, 683, 784, 678, 679,
	680, 681, 785, 685, 686, 687, 688, 0, 689, 690,
	0, 684, 675, 0, 691, 692, 693, 694, 695, 696,
	0, 697, 698, 0, 699, 786, 787, 788, 789, 0,
	711, 0, 700, 702, 703, 704, 705, 790, 706, 791,
	0, 707, 708, 709, 710, 701, 712, 713, 0, 0,
	714, 715, 716, 718, 720, 721, 717, 719, 722, 0,
	723, 0, 0, 724, 725, 726, 792, 793, 794, 0,
	728, 729, 727, 730, 731, 734, 732, 733, 795, 735,
	472, 736, 737, 0, 0, 0, 0, 738, 739, 796,
	740, 741, 742, 1714, 1713, 0, 0, 0, 0, 1711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 4208, 743, 0, 0, 0,
	332, 0, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 744, 745, 0, 343, 746, 344, 747,
	0, 748, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 749, 750, 751, 0, 353, 354, 752,
	0, 1680, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 753, 754, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 755, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 756, 757, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	758, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 759, 760, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 761, 0, 762, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 763, 764, 765, 551, 1370, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 0, 465, 466, 467, 0, 1369, 766, 468, 552,
	469, 767, 768, 0, 769, 0, 470, 471, 474, 1371,
	770, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 771, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	0, 0, 1378, 546, 547, 548, 549, 0, 772, 550,
	773, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 1379, 563,
	1380, 775, 564, 565, 557, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 778, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 780, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 2661, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 781, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 0, 657, 782, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	783, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 784, 678, 679, 680, 681,
	785, 685, 686, 687, 688, 0, 689, 690, 0, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 786, 787, 788, 789, 0, 711, 0,
	700, 702, 703, 704, 705, 790, 706, 791, 0, 707,
	708, 709, 710, 701, 712, 713, 0, 0, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 0, 723, 0,
	0, 724, 725, 726, 792, 793, 794, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 796, 740, 741,
	742, 1714, 2565, 0, 0, 0, 0, 2566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 1868, 743, 0, 0, 0, 332, 0,
	333, 334, 335, 1366, 336, 337, 338, 339, 340, 341,
	342, 744, 745, 0, 343, 746, 344, 747, 0, 748,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 749, 750, 751, 0, 353, 354, 752, 0, 1680,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1367, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	753, 754, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 755, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 756, 757, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 758, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1368, 434, 435, 436, 759, 760, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 447, 761,
	0, 762, 448, 0, 449, 450, 451, 452, 453, 454,
	455, 763, 764, 765, 551, 1370, 456, 457, 458, 0,
	459, 460, 461, 462, 463, 464, 0, 0, 0, 0,
	465, 466, 467, 0, 1369, 766, 468, 552, 469, 767,
	768, 0, 769, 0, 470, 471, 474, 1371, 770, 1372,
	473, 475, 476, 1373, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 2564, 487, 486, 0,
	489, 771, 488, 1374, 490, 491, 1375, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1376, 527, 528,
	529, 530, 531, 538, 540, 541, 536, 537, 539, 542,
	543, 545, 533, 534, 535, 1377, 544, 532, 0, 0,
	1378, 546, 547, 548, 549, 0, 772, 550, 773, 553,
	554, 0, 0, 555, 0, 556, 0, 0, 558, 559,
	560, 0, 0, 561, 562, 774, 1379, 563, 1380, 775,
	564, 565, 557, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 0, 576, 577, 776, 578, 579, 580,
	777, 581, 582, 583, 778, 584, 779, 585, 586, 0,
	587, 588, 589, 0, 590, 591, 592, 593, 594, 595,
	596, 597, 780, 598, 599, 601, 600, 602, 0, 603,
	0, 604, 605, 606, 0, 0, 0, 0, 0, 607,
	608, 610, 0, 611, 612, 613, 614, 609, 615, 616,
	617, 618, 619, 620, 0, 622, 623, 621, 624, 625,
	1381, 626, 627, 628, 629, 630, 781, 631, 0, 632,
	633, 641, 642, 643, 634, 635, 637, 644, 636, 645,
	646, 647, 648, 650, 649, 0, 652, 653, 651, 654,
	655, 656, 0, 657, 782, 658, 638, 639, 659, 660,
	1382, 661, 662, 663, 664, 665, 666, 667, 783, 0,
	668, 0, 669, 670, 671, 672, 673, 674, 676, 640,
	677, 682, 683, 784, 678, 679, 680, 681, 785, 685,
	686, 687, 688, 0, 689, 690, 0, 684, 675, 0,
	691, 692, 693, 694, 695, 696, 0, 697, 698, 0,
	699, 786, 787, 788, 789, 0, 711, 0, 700, 702,
	703, 704, 705, 790, 706, 791, 0, 707, 708, 709,
	710, 701, 712, 713, 0, 0, 714, 715, 716, 718,
	720, 721, 717, 719, 722, 0, 723, 0, 0, 724,
	725, 726, 792, 793, 794, 0, 728, 729, 727, 730,
	731, 734, 732, 733, 795, 735, 472, 736, 737, 0,
	0, 0, 0, 738, 739, 796, 740, 741, 742, 1714,
	1713, 0, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 1868, 743, 0, 0, 0, 332, 0, 333, 334,
	335, 1366, 336, 337, 338, 339, 340, 341, 342, 744,
	745, 0, 343, 746, 344, 747, 0, 748, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 749,
	750, 751, 0, 353, 354, 752, 0, 1680, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1367,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 753, 754,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	755, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 756, 757, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 758, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1368,
	434, 435, 436, 759, 760, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 447, 761, 0, 762,
	448, 0, 449, 450, 451, 452, 453, 454, 455, 763,
	764, 765, 551, 1370, 456, 457, 458, 0, 459, 460,
	461, 462, 463, 464, 0, 0, 0, 0, 465, 466,
	467, 0, 1369, 766, 468, 552, 469, 767, 768, 0,
	769, 0, 470, 471, 474, 1371, 770, 1372, 473, 475,
	476, 1373, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 771,
	488, 1374, 490, 491, 1375, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1376, 527, 528, 529, 530,
	531, 538, 540, 541, 536, 537, 539, 542, 543, 545,
	533, 534, 535, 1377, 544, 532, 0, 0, 1378, 546,
	547, 548, 549, 0, 772, 550, 773, 553, 554, 0,
	0, 555, 0, 556, 0, 0, 558, 559, 560, 0,
	0, 561, 562, 774, 1379, 563, 1380, 775, 564, 565,
	557, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 0, 576, 577, 776, 578, 579, 580, 777, 581,
	582, 583, 778, 584, 779, 585, 586, 0, 587, 588,
	589, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	780, 598, 599, 601, 600, 602, 0, 603, 0, 604,
	605, 606, 0, 0, 0, 0, 0, 607, 608, 610,
	0, 611, 612, 613, 614, 609, 615, 616, 617, 618,
	619, 620, 0, 622, 623, 621, 624, 625, 1381, 626,
	627, 628, 629, 630, 781, 631, 0, 632, 633, 641,
	642, 643, 634, 635, 637, 644, 636, 645, 646, 647,
	648, 650, 649, 0, 652, 653, 651, 654, 655, 656,
	0, 657, 782, 658, 638, 639, 659, 660, 1382, 661,
	662, 663, 664, 665, 666, 667, 783, 0, 668, 0,
	669, 670, 671, 672, 673, 674, 676, 640, 677, 682,
	683, 784, 678, 679, 680, 681, 785, 685, 686, 687,
	688, 0, 689, 690, 0, 684, 675, 0, 691, 692,
	693, 694, 695, 696, 0, 697, 698, 0, 699, 786,
	787, 788, 789, 0, 711, 0, 700, 702, 703, 704,
	705, 790, 706, 791, 0, 707, 708, 709, 710, 701,
	712, 713, 0, 0, 714, 715, 716, 718, 720, 721,
	717, 719, 722, 0, 723, 0, 0, 724, 725, 726,
	792, 793, 794, 0, 728, 729, 727, 730, 731, 734,
	732, 733, 795, 735, 472, 736, 737, 0, 0, 0,
	0, 738, 739, 796, 740, 741, 742, 1244, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 1850,
	0, 0, 743, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 744,
	745, 0, 343, 746, 344, 747, 0, 748, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 749,
	750, 751, 0, 353, 354, 752, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 753, 754,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	755, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 756, 757, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 758, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 759, 760, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 447, 761, 0, 762,
	448, 0, 449, 450, 451, 452, 453, 454, 455, 763,
	764, 765, 551, 0, 456, 457, 458, 0, 459, 460,
	461, 462, 463, 464, 0, 0, 0, 0, 465, 466,
	467, 0, 0, 766, 468, 552, 469, 767, 768, 0,
	769, 0, 470, 471, 474, 0, 770, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 771,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 538, 540, 541, 536, 537, 539, 542, 543, 545,
	533, 534, 535, 0, 544, 532, 0, 0, 0, 546,
	547, 548, 549, 0, 772, 550, 773, 553, 554, 0,
	0, 555, 0, 556, 0, 0, 558, 559, 560, 0,
	0, 561, 562, 774, 0, 563, 0, 775, 564, 565,
	557, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 0, 576, 577, 776, 578, 579, 580, 777, 581,
	582, 583, 778, 584, 779, 585, 586, 0, 587, 588,
	589, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	780, 598, 599, 601, 600, 602, 0, 603, 0, 604,
	605, 606, 0, 0, 0, 0, 0, 607, 608, 610,
	0, 611, 612, 613, 614, 609, 615, 616, 617, 618,
	619, 620, 0, 622, 623, 621, 624, 625, 0, 626,
	627, 628, 629, 630, 781, 631, 0, 632, 633, 641,
	642, 643, 634, 635, 637, 644, 636, 645, 646, 647,
	648, 650, 649, 275, 652, 653, 651, 654, 655, 656,
	0, 657, 782, 658, 638, 639, 659, 660, 0, 661,
	662, 663, 664, 665, 666, 667, 783, 0, 668, 0,
	669, 670, 671, 672, 673, 674, 676, 640, 677, 682,
	683, 784, 678, 679, 680, 681, 785, 685, 686, 687,
	688, 0, 689, 690, 0, 684, 675, 277, 691, 692,
	693, 694, 695, 696, 0, 697, 698, 0, 699, 786,
	787, 788, 789, 0, 711, 0, 700, 702, 703, 704,
	705, 790, 706, 791, 0, 707, 708, 709, 710, 701,
	712, 713, 0, 0, 714, 715, 716, 718, 720, 721,
	717, 719, 722, 0, 723, 0, 0, 724, 725, 726,
	1844, 793, 794, 0, 728, 729, 727, 730, 731, 734,
	732, 733, 795, 735, 472, 736, 737, 316, 0, 0,
	269, 738, 739, 796, 740, 741, 742, 0, 0, 270,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	743, 0, 0, 0, 332, 0, 333, 334, 335, 216,
	336, 337, 338, 339, 340, 341, 342, 744, 745, 0,
	343, 746, 344, 747, 0, 748, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 749, 750, 751,
	0, 353, 354, 752, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 753, 754, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 755, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 756, 757, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 758, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 759, 760, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 761, 0, 762, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 763, 764, 765,
	551, 0, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 320, 465, 466, 467, 0,
	0, 766, 468, 552, 469, 767, 768, 0, 769, 0,
	470, 471, 474, 0, 770, 0, 473, 475, 476, 0,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 771, 488, 0,
	490, 491, 0, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 0, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 0, 544, 532, 0, 321, 0, 546, 547, 548,
	549, 0, 772, 550, 773, 553, 554, 0, 0, 555,
	0, 556, 0, 0, 558, 559, 560, 0, 0, 561,
	562, 774, 0, 563, 0, 775, 564, 565, 557, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 776, 578, 579, 580, 777, 581, 582, 583,
	778, 584, 779, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 780, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 0, 626, 627, 628,
	629, 630, 781, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 0, 657,
	782, 658, 638, 639, 659, 660, 0, 661, 662, 663,
	664, 665, 666, 667, 783, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 784,
	678, 679, 680, 681, 785, 685, 686, 687, 688, 0,
	689, 690, 0, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 786, 787, 788,
	789, 0, 711, 0, 700, 702, 703, 704, 705, 790,
	706, 791, 0, 707, 708, 709, 710, 701, 712, 713,
	0, 0, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 0, 723, 0, 0, 724, 725, 726, 792, 793,
	794, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	795, 735, 472, 736, 737, 316, 3431, 0, 0, 738,
	739, 796, 740, 741, 742, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 743, 0,
	0, 0, 332, 0, 333, 334, 335, 2228, 336, 337,
	338, 339, 340, 341, 342, 744, 745, 0, 343, 746,
	344, 747, 0, 748, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 749, 750, 751, 0, 353,
	354, 752, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 753, 754, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 755, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 756,
	757, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 758, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 759,
	760, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 447, 761, 0, 762, 448, 0, 449, 450,
	451, 452, 453, 454, 455, 763, 764, 765, 551, 0,
	456, 457, 458, 0, 459, 460, 461, 462, 463, 464,
	0, 0, 0, 0, 465, 466, 467, 0, 0, 766,
	468, 552, 469, 767, 768, 0, 769, 0, 470, 471,
	474, 0, 770, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 771, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 538, 540, 541,
	536, 537, 539, 542, 543, 545, 533, 534, 535, 0,
	544, 532, 0, 0, 0, 546, 547, 548, 549, 0,
	772, 550, 773, 553, 554, 0, 0, 555, 0, 556,
	0, 0, 558, 559, 560, 0, 0, 561, 562, 774,
	0, 563, 0, 775, 564, 565, 557, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 0, 576, 577,
	776, 578, 579, 580, 777, 581, 582, 583, 778, 584,
	779, 585, 586, 0, 587, 588, 589, 0, 590, 591,
	592, 593, 594, 595, 596, 597, 780, 598, 599, 601,
	600, 602, 0, 603, 0, 604, 605, 606, 0, 0,
	0, 0, 0, 607, 608, 610, 0, 611, 612, 613,
	614, 609, 615, 616, 617, 618, 619, 620, 0, 622,
	623, 621, 624, 625, 0, 626, 627, 628, 629, 630,
	781, 631, 0, 632, 633, 641, 642, 643, 634, 635,
	637, 644, 636, 645, 646, 647, 648, 650, 649, 0,
	652, 653, 651, 654, 655, 656, 0, 657, 782, 658,
	638, 639, 659, 660, 0, 661, 662, 663, 664, 665,
	666, 667, 783, 0, 668, 0, 669, 670, 671, 672,
	673, 674, 676, 640, 677, 682, 683, 784, 678, 679,
	680, 681, 785, 685, 686, 687, 688, 0, 689, 690,
	0, 684, 675, 0, 691, 692, 693, 694, 695, 696,
	0, 697, 698, 0, 699, 786, 787, 788, 789, 0,
	711, 0, 700, 702, 703, 704, 705, 790, 706, 791,
	0, 707, 708, 709, 710, 701, 712, 713, 0, 0,
	714, 715, 716, 718, 720, 721, 717, 719, 722, 0,
	723, 0, 0, 724, 725, 726, 792, 793, 794, 0,
	728, 729, 727, 730, 731, 734, 732, 733, 795, 735,
	472, 736, 737, 316, 0, 0, 0, 738, 739, 796,
	740, 741, 742, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 743, 0, 0, 0,
	332, 0, 333, 334, 335, 5674, 336, 337, 338, 339,
	340, 341, 342, 744, 745, 0, 343, 746, 344, 747,
	0, 748, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 749, 750, 751, 0, 353, 354, 752,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 753, 754, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 755, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 756, 757, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	758, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 759, 760, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 761, 0, 762, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 763, 764, 765, 551, 0, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 0, 766, 468, 552,
	469, 767, 768, 0, 769, 0, 470, 471, 474, 0,
	770, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 771, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 0, 544, 532,
	0, 321, 0, 546, 547, 548, 549, 0, 772, 550,
	773, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 0, 563,
	0, 775, 564, 565, 557, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 778, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 780, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 0, 626, 627, 628, 629, 630, 781, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 0, 657, 782, 658, 638, 639,
	659, 660, 0, 661, 662, 663, 664, 665, 666, 667,
	783, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 784, 678, 679, 680, 681,
	785, 685, 686, 687, 688, 0, 689, 690, 0, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 786, 787, 788, 789, 0, 711, 0,
	700, 702, 703, 704, 705, 790, 706, 791, 0, 707,
	708, 709, 710, 701, 712, 713, 0, 0, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 0, 723, 0,
	0, 724, 725, 726, 792, 793, 794, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 316, 0, 738, 739, 796, 740, 741,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 743, 0, 0, 0,
	332, 1838, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 744, 745, 0, 343, 746, 344, 747,
	0, 748, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 749, 750, 751, 0, 353, 354, 752,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 753, 754, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 755, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 756, 757, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	758, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 759, 760, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 761, 0, 762, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 763, 764, 765, 551, 0, 456, 457,
	458, 0, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 320, 465, 466, 467, 0, 0, 766, 468, 552,
	469, 767, 768, 0, 769, 0, 470, 471, 474, 0,
	770, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 771, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 0, 544, 532,
	0, 321, 0, 546, 547, 548, 549, 0, 772, 550,
	773, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 774, 0, 563,
	0, 775, 564, 565, 557, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 776, 578,
	579, 580, 777, 581, 582, 583, 778, 584, 779, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 780, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 0, 626, 627, 628, 629, 630, 781, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 0, 657, 782, 658, 638, 639,
	659, 660, 0, 661, 662, 663, 664, 665, 666, 667,
	783, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 784, 678, 679, 680, 681,
	785, 685, 686, 687, 688, 0, 689, 690, 0, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 786, 787, 788, 789, 0, 711, 0,
	700, 702, 703, 704, 705, 790, 706, 791, 0, 707,
	708, 709, 710, 701, 712, 713, 0, 0, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 0, 723, 0,
	0, 724, 725, 726, 792, 793, 794, 0, 728, 729,
	727, 730, 731, 734, 732, 733, 795, 735, 472, 736,
	737, 0, 0, 3239, 0, 738, 739, 796, 740, 741,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 4159, 333, 334, 335, 1366, 336, 337, 338, 339,
	340, 341, 342, 0, 2288, 0, 343, 2278, 344, 2294,
	0, 2301, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 2304, 2305, 0, 0, 353, 354, 0,
	0, 1680, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1367, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 1349,
	388, 390, 2292, 2291, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1334, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 0, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 0, 0, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	2290, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1368, 434, 435, 436, 2299, 2300, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	447, 0, 0, 0, 448, 0, 449, 450, 451, 452,
	453, 454, 455, 0, 0, 0, 551, 1370, 456, 457,
	458, 3233, 459, 460, 461, 462, 463, 464, 0, 0,
	0, 0, 465, 466, 467, 0, 1369, 3235, 468, 552,
	469, 2285, 2286, 0, 2281, 0, 470, 471, 474, 1371,
	0, 1372, 473, 475, 476, 1373, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 0, 488, 1374, 490, 491, 1375, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1376,
	527, 528, 529, 530, 531, 538, 540, 541, 536, 537,
	539, 542, 543, 545, 533, 534, 535, 1377, 544, 532,
	0, 0, 1378, 546, 547, 548, 549, 0, 0, 550,
	2293, 553, 554, 0, 0, 555, 0, 556, 0, 0,
	558, 559, 560, 0, 0, 561, 562, 3234, 1379, 563,
	1380, 0, 564, 565, 557, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 0, 576, 577, 2275, 578,
	579, 580, 2276, 581, 582, 583, 0, 584, 0, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 2289, 598, 599, 601, 600, 602,
	0, 603, 0, 604, 605, 606, 0, 0, 0, 0,
	0, 607, 608, 610, 0, 611, 612, 613, 614, 609,
	615, 616, 617, 618, 619, 620, 0, 622, 623, 621,
	624, 625, 1381, 626, 627, 628, 629, 630, 0, 631,
	0, 632, 633, 641, 642, 643, 634, 635, 637, 644,
	636, 645, 646, 647, 648, 650, 649, 0, 652, 653,
	651, 654, 655, 656, 0, 657, 0, 658, 638, 639,
	659, 660, 1382, 661, 662, 663, 664, 665, 666, 667,
	2287, 0, 668, 0, 669, 670, 671, 672, 673, 674,
	676, 640, 677, 682, 683, 2303, 678, 679, 680, 681,
	0, 685, 686, 687, 688, 0, 689, 690, 0, 684,
	675, 0, 691, 692, 693, 694, 695, 696, 0, 697,
	698, 0, 699, 2295, 2296, 2297, 2298, 0, 711, 0,
	700, 702, 703, 704, 705, 0, 706, 0, 0, 707,
	708, 709, 710, 701, 712, 713, 0, 0, 714, 715,
	716, 718, 720, 721, 717, 719, 722, 0, 723, 0,
	0, 724, 725, 726, 0, 2279, 2302, 3236, 728, 729,
	727, 730, 731, 734, 732, 733, 0, 735, 472, 736,
	737, 0, 0, 0, 0, 738, 739, 0, 740, 741,
	742, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 3228, 743, 0, 2269, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 763, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	0, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	0, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	3239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 3550, 0, 0, 0, 0, 332, 0, 333,
	334, 335, 1366, 336, 337, 338, 339, 340, 341, 342,
	0, 2288, 0, 343, 2278, 344, 2294, 0, 2301, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	2304, 2305, 0, 0, 353, 354, 0, 0, 1680, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1367, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 1349, 388, 390, 2292,
	2291, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 1334, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 0, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 0, 0, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 2290, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1368, 434, 435, 436, 2299, 2300, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 0, 0,
	0, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	0, 0, 0, 551, 1370, 456, 457, 458, 3233, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 0, 465,
	466, 467, 0, 1369, 3235, 468, 552, 469, 2285, 2286,
	0, 2281, 0, 470, 471, 474, 1371, 0, 1372, 473,
	475, 476, 1373, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	0, 488, 1374, 490, 491, 1375, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 1376, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 1377, 544, 532, 0, 0, 1378,
	546, 547, 548, 549, 0, 0, 550, 2293, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 3234, 1379, 563, 1380, 0, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 2275, 578, 579, 580, 2276,
	581, 582, 583, 0, 584, 0, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 2289, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 1381,
	626, 627, 628, 629, 630, 0, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 0, 658, 638, 639, 659, 660, 1382,
	661, 662, 663, 664, 665, 666, 667, 2287, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 2303, 678, 679, 680, 681, 0, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	2295, 2296, 2297, 2298, 0, 711, 0, 700, 702, 703,
	704, 705, 0, 706, 0, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 0, 2279, 2302, 3236, 728, 729, 727, 730, 731,
	734, 732, 733, 0, 735, 472, 736, 737, 0, 0,
	0, 0, 738, 739, 0, 740, 741, 742, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 2269, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 316, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 4330, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 0, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 2648, 1326, 0, 0,
	0, 332, 0, 333, 334, 335, 1366, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 1325, 0, 352, 749, 750, 751, 0, 353, 354,
	1332, 0, 1313, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1367, 380, 381, 382, 1316, 1314,
	1315, 1322, 1318, 1317, 1321, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1357, 1358,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1368, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 1364, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 1327, 1328, 1331, 551, 1370, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 320, 465, 466, 467, 0, 1369, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	1371, 1329, 1372, 473, 475, 476, 1373, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 1365, 488, 1374, 490, 491, 1375,
	0, 492, 493, 494, 495, 496, 497, 500, 1320, 1319,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	1376, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 1377, 544,
	532, 0, 321, 1378, 546, 547, 548, 549, 0, 1330,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 1379,
	563, 1380, 1359, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 1360, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 1381, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 1323, 657, 782, 658, 638,
	639, 659, 660, 1382, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 1361, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 1362, 706, 1363, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 1324, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 2282, 0, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 333, 334, 335, 1366, 336, 337, 338, 339, 340,
	341, 342, 0, 2288, 0, 343, 2278, 344, 2294, 0,
	2301, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 2304, 2305, 0, 0, 353, 354, 0, 0,
	1680, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1367, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 1349, 388,
	390, 2292, 2291, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1334, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 0, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 2290,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1368, 434, 435, 436, 2299, 2300, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	0, 0, 0, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 0, 0, 0, 551, 1370, 456, 457, 458,
	3233, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 1369, 3235, 468, 552, 469,
	2285, 2286, 0, 2281, 0, 470, 471, 474, 1371, 0,
	1372, 473, 475, 476, 1373, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 0, 488, 1374, 490, 491, 1375, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1376, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 1377, 544, 532, 0,
	0, 1378, 546, 547, 548, 549, 0, 0, 550, 2293,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 3234, 1379, 563, 1380,
	0, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 2275, 578, 579,
	580, 2276, 581, 582, 583, 0, 584, 0, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 2289, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 1381, 626, 627, 628, 629, 630, 0, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 0, 658, 638, 639, 659,
	660, 1382, 661, 662, 663, 664, 665, 666, 667, 2287,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 2303, 678, 679, 680, 681, 0,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 2295, 2296, 2297, 2298, 0, 711, 0, 700,
	702, 703, 704, 705, 0, 706, 0, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 0, 2279, 2302, 3236, 728, 729, 727,
	730, 731, 734, 732, 733, 0, 735, 472, 736, 737,
	0, 0, 0, 0, 738, 739, 0, 740, 741, 742,
	1063, 0, 962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 2269, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 969, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 1060, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 763, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	320, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	321, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 1062, 0, 684, 675,
	967, 691, 692, 693, 694, 695, 968, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	2251, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 4465, 330, 331, 0, 0,
	0, 0, 0, 743, 972, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 2258, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 2259, 756, 757, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 2260, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 320, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 321, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 4464, 636, 645, 646,
	647, 648, 650, 649, 0, 2255, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 2257, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 4463, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 2251, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 2309, 330, 331, 0, 0, 0, 0,
	0, 743, 972, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 2258, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 2259, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 2260,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 321, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 2308, 636, 645, 646, 647, 648,
	650, 649, 0, 2310, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 2257, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 2307, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 2251, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 2250, 330, 331, 0, 0, 0, 0, 0, 743,
	972, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	2258, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 2259,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 2260, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 2249, 636, 645, 646, 647, 648, 650, 649,
	0, 2255, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 2257, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 2248, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 960, 0, 962, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 972, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	969, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 967, 691, 692, 693, 694, 695,
	968, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 962, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 972, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 969, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 763, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 320, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 321, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 967, 691, 692, 693, 694, 695, 968, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 3239, 0, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 0, 972, 0, 0, 332,
	0, 333, 334, 335, 1366, 336, 337, 338, 339, 340,
	341, 342, 0, 2288, 0, 343, 2278, 344, 2294, 0,
	2301, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 2304, 2305, 0, 0, 353, 354, 0, 0,
	1680, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1367, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 1349, 388,
	390, 2292, 2291, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1334, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 0, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 0, 0, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 2290,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1368, 434, 435, 436, 2299, 2300, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	0, 0, 0, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 0, 0, 0, 551, 1370, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 1369, 0, 468, 552, 469,
	2285, 2286, 0, 2281, 0, 470, 471, 474, 1371, 0,
	1372, 473, 475, 476, 1373, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 0, 488, 1374, 490, 491, 1375, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1376, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 1377, 544, 532, 0,
	0, 1378, 546, 547, 548, 549, 0, 0, 550, 2293,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 0, 1379, 563, 1380,
	0, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 2275, 578, 579,
	580, 2276, 581, 582, 583, 0, 584, 0, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 2289, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 1381, 626, 627, 628, 629, 630, 0, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 0, 658, 638, 639, 659,
	660, 1382, 661, 662, 663, 664, 665, 666, 667, 2287,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 2303, 678, 679, 680, 681, 0,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 2295, 2296, 2297, 2298, 0, 711, 0, 700,
	702, 703, 704, 705, 0, 706, 0, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 0, 2279, 2302, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 0, 735, 472, 736, 737,
	0, 0, 0, 0, 738, 739, 0, 740, 741, 742,
	3219, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 2269, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 763, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	320, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	321, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	2251, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 972, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 2258, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 2259, 756, 757, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 2260, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 320, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 321, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	2703, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 2704, 636, 645, 646,
	647, 648, 650, 649, 0, 2255, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 2257, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 2705, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 2282, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 0, 972, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 0, 2288,
	0, 343, 2278, 344, 2294, 0, 2301, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 2304, 2305,
	0, 0, 353, 354, 0, 0, 1680, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 1349, 388, 390, 2292, 2291, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1334, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 0,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 2290, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 2299, 2300, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 0, 0, 0, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 0, 0,
	0, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 1369, 0, 468, 552, 469, 2285, 2286, 0, 2281,
	0, 470, 471, 474, 1371, 0, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 0, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 0, 0, 1378, 546, 547,
	548, 549, 0, 0, 550, 2293, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 0, 1379, 563, 1380, 0, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 2275, 578, 579, 580, 2276, 581, 582,
	583, 0, 584, 0, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 2289,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 0, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 0, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 2287, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	2303, 678, 679, 680, 681, 0, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 2295, 2296,
	2297, 2298, 0, 711, 0, 700, 702, 703, 704, 705,
	0, 706, 0, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 0,
	2279, 2302, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 0, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 0, 740, 741, 742, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 2269, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 316, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 972, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 763, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 320, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 321, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 316, 0, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 928, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 763, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	0, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	0, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 1713,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4709, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 1680, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 1371, 770, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 0, 0, 1378, 546, 547,
	548, 549, 4593, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 3635, 0, 1714, 1713,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 1680, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 1371, 770, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 0, 0, 1378, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 2584, 0, 1714, 1713,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 1680, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1771, 764,
	765, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 1371, 770, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 0, 0, 1378, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 2318, 0, 1714, 1713,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 1680, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 1371, 770, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 0, 0, 1378, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1902, 0, 1714, 1713,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 1680, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 1901, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 1898, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 1371, 770, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 0, 0, 1378, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 1899, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 1897, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 1900, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1768, 0, 1714, 1713,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 1680, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1771, 764,
	765, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 1371, 770, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 0, 0, 1378, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1709, 0, 1714, 1713,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	1366, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 1680, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1367, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1368, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 1370, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 1369, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 1371, 770, 1372, 473, 475, 476,
	1373, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	1374, 490, 491, 1375, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1376, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 1377, 544, 532, 0, 0, 1378, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 1379, 563, 1380, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 1381, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 1707, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 1382, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 0, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 1714, 1713, 0, 0,
	0, 0, 1711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 1366, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 1680, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1367, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1368, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	1370, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 1369,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 1371, 770, 1372, 473, 475, 476, 1373, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 1374, 490,
	491, 1375, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 1376, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	1377, 544, 532, 0, 0, 1378, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 1379, 563, 1380, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 1381, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 1382, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 1714, 1713, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 332, 0, 333, 334, 335, 1366, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 1680, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1367, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1368, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 763, 764, 765, 551, 1370, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 1369, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	1371, 770, 1372, 473, 475, 476, 1373, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 1374, 490, 491, 1375,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	1376, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 1377, 544,
	532, 0, 0, 1378, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 1379,
	563, 1380, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 1381, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 1382, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 1714, 0, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 0, 0, 0, 332,
	0, 333, 334, 335, 1366, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	1680, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1367, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1368, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 763, 764, 765, 551, 1370, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 1369, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 1371, 770,
	1372, 473, 475, 476, 1373, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 1374, 490, 491, 1375, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1376, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 1377, 544, 532, 0,
	0, 1378, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 1379, 563, 1380,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 1381, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 1382, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	316, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 3301, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 4151, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 3305,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 4150, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 3304, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 4147, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 4149, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 4146, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 0, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 3303, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 4148, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 316, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 3301, 353, 354, 752, 0, 0, 3295, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 3297, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 3305, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 3304, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 3294, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 3303, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 3302, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1986, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 1985, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 1983, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 1988, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 1984,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 321, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 1987, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 1982, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 1980, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 1981, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1684, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1686, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 321, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 1417, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1681, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1683, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 321, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 1417, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1587, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1589, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 321, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 1417, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 831, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	829, 328, 329, 818, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 821, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 827, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 823, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 830, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 817, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 818, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 821, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 822, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 823, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 816, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 316, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 818, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 821, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 822, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	823, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 316, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 818,
	330, 331, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	821, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 4603,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 763, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 823, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 316, 0, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 763, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	320, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	321, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 1417, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	316, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 320, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 4017, 544, 532, 0, 321, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 3519, 0,
	316, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	3518, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 320, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 321, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 316, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 818, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 821, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 822, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 823, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 3221, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 2669, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 321, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 2613, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 2612, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 321, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 2597, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 2599, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 321, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 2588, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 321, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 316, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 2558, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 1417, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 1816, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 1815, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 1706, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 1699, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 1701, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 1689, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 1505, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 1504, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 1494, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 1493, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 1490, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 1489, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 1484, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 1483, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 1461, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 1460, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 798, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 307, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 316, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 763, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 320, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 321, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 316, 0, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 821, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 822, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 763, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	0, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 823, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	316, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 2713, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 320, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 321, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 316, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 2711, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 320, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 321, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 316, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	2709, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 320, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 321, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 316, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 2620, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 320, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 321, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 316, 0, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 2342, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	320, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	321, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	316, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	2336, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 320, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 321, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 1047, 0,
	316, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 0, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 1046, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 0, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 1045, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 921, 0,
	316, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 910, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 919, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 912, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 918, 433, 914,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 915, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 0, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 913, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	916, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 0, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 917,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 911,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 904, 0,
	316, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 910, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 919, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 912, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 918, 433, 914,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 915, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 0, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 913, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	916, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 0, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 917,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 911,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 316, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 4150, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 4962, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1532, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	1535, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	1533, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 892, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 891, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 890, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 1536, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 888, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1532, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	1535, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	1533, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 892, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 891, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 890, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 1536, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 888, 787,
	788, 789, 0, 711, 0, 700, 1534, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 899, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 897, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 807, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 806, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 805, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 316, 3431, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 316, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 763, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 5284, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 316, 3957, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 763, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	0, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	316, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 0, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 0, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 4835, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 316, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 4526,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 316, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 3155, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 316, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 0, 3146,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 763, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 316, 3431, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 763, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	0, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 3511, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	316, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 0, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 0, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 2496, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	891, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 890, 636, 645, 646,
	647, 648, 3380, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	888, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 316, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 2682, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 2667, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1872, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1864, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 882, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 878, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	883, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 892, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 891, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 890, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 1849, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 888, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1822, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1821, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1805, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1803, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1797, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1775, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1773, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1766, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1727, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1691, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1538, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 763, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 891, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 890, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 888, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1509, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1508, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 1501, 0, 316, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1500, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 316, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 1442, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 902, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 882, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 878, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 877, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 883, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 892, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 891, 627, 628, 629,
	630, 879, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 890, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 880, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 888, 787, 788, 789,
	0, 711, 0, 700, 884, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 871, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 872, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 833, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 825, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 802, 0, 316, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 316, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 763, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 316, 0, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 4182, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	0, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	316, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 0, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 0, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	891, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 890, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	888, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 316, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 4074, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 316, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 4043, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 316, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 4039, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 316, 0, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 3982, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	0, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 641, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	316, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	3980, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 0, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 0, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 657, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 316, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 3968, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 316, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 3965, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	601, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 316, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 3530, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 316, 0, 0, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 743, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 744, 745, 0, 343, 746, 344, 747, 0,
	748, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 749, 750, 751, 0, 353, 354, 752, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 753, 754, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 755, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 756, 757, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 758,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 759, 760, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 447,
	761, 0, 762, 448, 0, 449, 450, 451, 452, 453,
	454, 455, 763, 764, 765, 551, 0, 456, 457, 458,
	0, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	0, 465, 466, 467, 0, 0, 766, 468, 552, 469,
	767, 768, 0, 769, 0, 470, 471, 474, 0, 770,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 771, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 538, 540, 541, 536, 537, 539,
	542, 543, 545, 533, 534, 535, 0, 544, 532, 0,
	0, 0, 546, 547, 548, 549, 0, 772, 550, 773,
	553, 554, 0, 0, 555, 0, 556, 0, 0, 558,
	559, 560, 0, 0, 561, 562, 774, 0, 563, 0,
	775, 564, 565, 557, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 776, 578, 579,
	580, 777, 581, 582, 583, 778, 584, 779, 585, 586,
	0, 587, 588, 589, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 780, 598, 599, 601, 600, 602, 0,
	603, 0, 604, 605, 606, 0, 0, 0, 0, 0,
	607, 608, 610, 0, 611, 612, 613, 614, 609, 615,
	616, 617, 618, 619, 620, 0, 622, 623, 621, 624,
	625, 0, 626, 627, 628, 629, 630, 781, 631, 0,
	632, 633, 872, 642, 643, 634, 635, 637, 644, 636,
	645, 646, 647, 648, 650, 649, 0, 652, 653, 651,
	654, 655, 656, 0, 657, 782, 658, 638, 639, 659,
	660, 0, 661, 662, 663, 664, 665, 666, 667, 783,
	0, 668, 0, 669, 670, 671, 672, 673, 674, 676,
	640, 677, 682, 683, 784, 678, 679, 680, 681, 785,
	685, 686, 687, 688, 0, 689, 690, 0, 684, 675,
	0, 691, 692, 693, 694, 695, 696, 0, 697, 698,
	0, 699, 786, 787, 788, 789, 0, 711, 0, 700,
	702, 703, 704, 705, 790, 706, 791, 0, 707, 708,
	709, 710, 701, 712, 713, 0, 0, 714, 715, 716,
	718, 720, 721, 717, 719, 722, 0, 723, 0, 0,
	724, 725, 726, 792, 793, 794, 0, 728, 729, 727,
	730, 731, 734, 732, 733, 795, 735, 472, 736, 737,
	316, 0, 0, 0, 738, 739, 796, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 743, 0, 2638, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	744, 745, 0, 343, 746, 344, 747, 0, 748, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	749, 750, 751, 0, 353, 354, 752, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 753,
	754, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 755, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 756, 757, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 758, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 759, 760, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 447, 761, 0,
	762, 448, 0, 449, 450, 451, 452, 453, 454, 455,
	763, 764, 765, 551, 0, 456, 457, 458, 0, 459,
	460, 461, 462, 463, 464, 0, 0, 0, 0, 465,
	466, 467, 0, 0, 766, 468, 552, 469, 767, 768,
	0, 769, 0, 470, 471, 474, 0, 770, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	771, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 538, 540, 541, 536, 537, 539, 542, 543,
	545, 533, 534, 535, 0, 544, 532, 0, 0, 0,
	546, 547, 548, 549, 0, 772, 550, 773, 553, 554,
	0, 0, 555, 0, 556, 0, 0, 558, 559, 560,
	0, 0, 561, 562, 774, 0, 563, 0, 775, 564,
	565, 557, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 776, 578, 579, 580, 777,
	581, 582, 583, 778, 584, 779, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 780, 598, 599, 601, 600, 602, 0, 603, 0,
	604, 605, 606, 0, 0, 0, 0, 0, 607, 608,
	610, 0, 611, 612, 613, 614, 609, 615, 616, 617,
	618, 619, 620, 0, 622, 623, 621, 624, 625, 0,
	626, 627, 628, 629, 630, 781, 631, 0, 632, 633,
	641, 642, 643, 634, 635, 637, 644, 636, 645, 646,
	647, 648, 650, 649, 0, 652, 653, 651, 654, 655,
	656, 0, 0, 782, 658, 638, 639, 659, 660, 0,
	661, 662, 663, 664, 665, 666, 667, 783, 0, 668,
	0, 669, 670, 671, 672, 673, 674, 676, 640, 677,
	682, 683, 784, 678, 679, 680, 681, 785, 685, 686,
	687, 688, 0, 689, 690, 0, 684, 675, 0, 691,
	692, 693, 694, 695, 696, 0, 697, 698, 0, 699,
	786, 787, 788, 789, 0, 711, 0, 700, 702, 703,
	704, 705, 790, 706, 791, 0, 707, 708, 709, 710,
	701, 712, 713, 0, 0, 714, 715, 716, 718, 720,
	721, 717, 719, 722, 0, 723, 0, 0, 724, 725,
	726, 792, 793, 794, 0, 728, 729, 727, 730, 731,
	734, 732, 733, 795, 735, 472, 736, 737, 316, 0,
	0, 0, 738, 739, 796, 740, 741, 742, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 744, 745,
	0, 343, 746, 344, 747, 0, 748, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 749, 750,
	751, 0, 353, 354, 752, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 753, 754, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 755,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 756, 757, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 758, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 759, 760, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 447, 761, 0, 762, 448,
	0, 449, 450, 451, 452, 453, 454, 455, 1470, 764,
	765, 551, 0, 456, 457, 458, 0, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 0, 465, 466, 467,
	0, 0, 766, 468, 552, 469, 767, 768, 0, 769,
	0, 470, 471, 474, 0, 770, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 771, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	538, 540, 541, 536, 537, 539, 542, 543, 545, 533,
	534, 535, 0, 544, 532, 0, 0, 0, 546, 547,
	548, 549, 0, 772, 550, 773, 553, 554, 0, 0,
	555, 0, 556, 0, 0, 558, 559, 560, 0, 0,
	561, 562, 774, 0, 563, 0, 775, 564, 565, 557,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 776, 578, 579, 580, 777, 581, 582,
	583, 778, 584, 779, 585, 586, 0, 587, 588, 589,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 780,
	598, 599, 601, 600, 602, 0, 603, 0, 604, 605,
	606, 0, 0, 0, 0, 0, 607, 608, 610, 0,
	611, 612, 613, 614, 609, 615, 616, 617, 618, 619,
	620, 0, 622, 623, 621, 624, 625, 0, 626, 627,
	628, 629, 630, 781, 631, 0, 632, 633, 641, 642,
	643, 634, 635, 637, 644, 636, 645, 646, 647, 648,
	650, 649, 0, 652, 653, 651, 654, 655, 656, 0,
	657, 782, 658, 638, 639, 659, 660, 0, 661, 662,
	663, 664, 665, 666, 667, 783, 0, 668, 0, 669,
	670, 671, 672, 673, 674, 676, 640, 677, 682, 683,
	784, 678, 679, 680, 681, 785, 685, 686, 687, 688,
	0, 689, 690, 0, 684, 675, 0, 691, 692, 693,
	694, 695, 696, 0, 697, 698, 0, 699, 786, 787,
	788, 789, 0, 711, 0, 700, 702, 703, 704, 705,
	790, 706, 791, 0, 707, 708, 709, 710, 701, 712,
	713, 0, 0, 714, 715, 716, 718, 720, 721, 717,
	719, 722, 0, 723, 0, 0, 724, 725, 726, 792,
	793, 794, 0, 728, 729, 727, 730, 731, 734, 732,
	733, 795, 735, 472, 736, 737, 316, 0, 0, 0,
	738, 739, 796, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 743,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 744, 745, 0, 343,
	746, 344, 747, 0, 748, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 749, 750, 751, 0,
	353, 354, 752, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 753, 754, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 755, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	756, 757, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 758, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	759, 760, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 447, 761, 0, 762, 448, 0, 449,
	450, 451, 452, 453, 454, 455, 763, 764, 765, 551,
	0, 456, 457, 458, 0, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 465, 466, 467, 0, 0,
	766, 468, 552, 469, 767, 768, 0, 769, 0, 470,
	471, 474, 0, 770, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 771, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 538, 540,
	541, 536, 537, 539, 542, 543, 545, 533, 534, 535,
	0, 544, 532, 0, 0, 0, 546, 547, 548, 549,
	0, 772, 550, 773, 553, 554, 0, 0, 555, 0,
	556, 0, 0, 558, 559, 560, 0, 0, 561, 562,
	774, 0, 563, 0, 775, 564, 565, 557, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 776, 578, 579, 580, 777, 581, 582, 583, 778,
	584, 779, 585, 586, 0, 587, 588, 589, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 780, 598, 599,
	1390, 600, 602, 0, 603, 0, 604, 605, 606, 0,
	0, 0, 0, 0, 607, 608, 610, 0, 611, 612,
	613, 614, 609, 615, 616, 617, 618, 619, 620, 0,
	622, 623, 621, 624, 625, 0, 626, 627, 628, 629,
	630, 781, 631, 0, 632, 633, 641, 642, 643, 634,
	635, 637, 644, 636, 645, 646, 647, 648, 650, 649,
	0, 652, 653, 651, 654, 655, 656, 0, 657, 782,
	658, 638, 639, 659, 660, 0, 661, 662, 663, 664,
	665, 666, 667, 783, 0, 668, 0, 669, 670, 671,
	672, 673, 674, 676, 640, 677, 682, 683, 784, 678,
	679, 680, 681, 785, 685, 686, 687, 688, 0, 689,
	690, 0, 684, 675, 0, 691, 692, 693, 694, 695,
	696, 0, 697, 698, 0, 699, 786, 787, 788, 789,
	0, 711, 0, 700, 702, 703, 704, 705, 790, 706,
	791, 0, 707, 708, 709, 710, 701, 712, 713, 0,
	0, 714, 715, 716, 718, 720, 721, 717, 719, 722,
	0, 723, 0, 0, 724, 725, 726, 792, 793, 794,
	0, 728, 729, 727, 730, 731, 734, 732, 733, 795,
	735, 472, 736, 737, 316, 0, 0, 0, 738, 739,
	796, 740, 741, 742, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 744, 745, 0, 343, 746, 344,
	747, 0, 748, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 749, 750, 751, 0, 353, 354,
	752, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 753, 754, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 755, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 756, 757,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 758, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 759, 760,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 761, 0, 762, 0, 0, 449, 450, 451,
	452, 453, 454, 455, 763, 764, 765, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 766, 468,
	552, 469, 767, 768, 0, 769, 0, 470, 471, 474,
	0, 770, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 771, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 772,
	550, 773, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 774, 0,
	563, 0, 775, 564, 565, 557, 566, 567, 568, 0,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 776,
	578, 579, 580, 777, 581, 582, 583, 778, 584, 779,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 0, 596, 597, 780, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 781,
	0, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 0, 657, 782, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 783, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 784, 678, 679, 680,
	681, 785, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 786, 787, 788, 789, 0, 711,
	0, 700, 702, 703, 704, 705, 790, 706, 791, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 792, 793, 794, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 795, 735, 472,
	736, 737, 1811, 0, 1516, 0, 738, 739, 796, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 0, 0, 0, 0, 353, 354,
	0, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 1518, 383, 384, 385, 386, 387,
	0, 388, 390, 0, 0, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 0, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 0, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 0, 0, 0, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 1810, 0, 0, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 0, 468,
	552, 469, 0, 0, 0, 0, 0, 470, 471, 474,
	0, 0, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 0, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 0,
	550, 0, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 0, 0,
	563, 0, 0, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 0, 584, 0,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 0,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 1519, 657, 0, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 0, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 0, 678, 679, 680,
	681, 0, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 0, 0, 0, 0, 0, 711,
	0, 700, 702, 703, 704, 705, 0, 706, 0, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 0, 0, 0, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 0, 735, 472,
	736, 737, 1730, 0, 1516, 0, 738, 739, 0, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 0, 0, 0, 0, 353, 354,
	0, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 1518, 383, 384, 385, 386, 387,
	0, 388, 390, 0, 0, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 0, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 0, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 0, 0, 0, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 1729, 0, 0, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 0, 468,
	552, 469, 0, 0, 0, 0, 0, 470, 471, 474,
	0, 0, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 0, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 0,
	550, 0, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 0, 0,
	563, 0, 0, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 0, 584, 0,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 0,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 1519, 657, 0, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 0, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 0, 678, 679, 680,
	681, 0, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 0, 0, 0, 0, 0, 711,
	0, 700, 702, 703, 704, 705, 0, 706, 0, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 0, 0, 0, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 0, 735, 472,
	736, 737, 1514, 0, 1516, 0, 738, 739, 0, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 0, 0, 0, 0, 353, 354,
	0, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 1518, 383, 384, 385, 386, 387,
	0, 388, 390, 0, 0, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 0, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 0, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 0, 0, 0, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 1513, 0, 0, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 0, 468,
	552, 469, 0, 0, 0, 0, 0, 470, 471, 474,
	0, 0, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 0, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 0,
	550, 0, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 0, 0,
	563, 0, 0, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 0, 584, 0,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 0,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 1519, 657, 0, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 0, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 0, 678, 679, 680,
	681, 0, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 0, 0, 0, 0, 0, 711,
	0, 700, 702, 703, 704, 705, 0, 706, 0, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 0, 0, 0, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 0, 735, 472,
	736, 737, 2356, 0, 1516, 0, 738, 739, 0, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 0, 0, 0, 0, 353, 354,
	0, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 1518, 383, 384, 385, 386, 387,
	0, 388, 390, 0, 0, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 0, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 0, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 0, 0, 0, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 0, 0, 0, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 0, 468,
	552, 469, 0, 0, 0, 0, 0, 470, 471, 474,
	0, 0, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 0, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 0,
	550, 0, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 0, 0,
	563, 0, 0, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 0, 584, 0,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 0,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 1519, 657, 0, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 0, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 0, 678, 679, 680,
	681, 0, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 0, 0, 0, 0, 0, 711,
	0, 700, 702, 703, 704, 705, 0, 706, 0, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 0, 0, 0, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 0, 735, 472,
	736, 737, 2316, 0, 1516, 0, 738, 739, 0, 740,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 0, 0, 0, 0, 353, 354,
	0, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 1518, 383, 384, 385, 386, 387,
	0, 388, 390, 0, 0, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 0, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 0, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 447, 0, 0, 0, 448, 0, 449, 450, 451,
	452, 453, 454, 455, 0, 0, 0, 551, 0, 456,
	457, 458, 0, 459, 460, 461, 462, 463, 464, 0,
	0, 0, 0, 465, 466, 467, 0, 0, 0, 468,
	552, 469, 0, 0, 0, 0, 0, 470, 471, 474,
	0, 0, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 0, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 538, 540, 541, 536,
	537, 539, 542, 543, 545, 533, 534, 535, 0, 544,
	532, 0, 0, 0, 546, 547, 548, 549, 0, 0,
	550, 0, 553, 554, 0, 0, 555, 0, 556, 0,
	0, 558, 559, 560, 0, 0, 561, 562, 0, 0,
	563, 0, 0, 564, 565, 557, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 0, 584, 0,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 598, 599, 601, 600,
	602, 0, 603, 0, 604, 605, 606, 0, 0, 0,
	0, 0, 607, 608, 610, 0, 611, 612, 613, 614,
	609, 615, 616, 617, 618, 619, 620, 0, 622, 623,
	621, 624, 625, 0, 626, 627, 628, 629, 630, 0,
	631, 0, 632, 633, 641, 642, 643, 634, 635, 637,
	644, 636, 645, 646, 647, 648, 650, 649, 0, 652,
	653, 651, 654, 655, 656, 1519, 657, 0, 658, 638,
	639, 659, 660, 0, 661, 662, 663, 664, 665, 666,
	667, 0, 0, 668, 0, 669, 670, 671, 672, 673,
	674, 676, 640, 677, 682, 683, 0, 678, 679, 680,
	681, 0, 685, 686, 687, 688, 0, 689, 690, 0,
	684, 675, 0, 691, 692, 693, 694, 695, 696, 0,
	697, 698, 0, 699, 0, 0, 0, 0, 0, 711,
	0, 700, 702, 703, 704, 705, 0, 706, 0, 0,
	707, 708, 709, 710, 701, 712, 713, 0, 0, 714,
	715, 716, 718, 720, 721, 717, 719, 722, 0, 723,
	0, 0, 724, 725, 726, 0, 0, 0, 0, 728,
	729, 727, 730, 731, 734, 732, 733, 1516, 735, 472,
	736, 737, 0, 0, 0, 0, 738, 739, 0, 740,
	741, 742, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 0, 0, 0,
	0, 353, 354, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 1518, 383, 384,
	385, 386, 387, 0, 388, 390, 0, 0, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 0, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 0, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 0, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 447, 0, 0, 0, 448, 0,
	449, 450, 451, 452, 453, 454, 455, 0, 0, 0,
	551, 0, 456, 457, 458, 0, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 0, 465, 466, 467, 0,
	0, 0, 468, 552, 469, 0, 0, 0, 0, 0,
	470, 471, 474, 0, 0, 0, 473, 475, 476, 0,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 0, 488, 0,
	490, 491, 0, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 0, 527, 528, 529, 530, 531, 538,
	540, 541, 536, 537, 539, 542, 543, 545, 533, 534,
	535, 0, 544, 532, 0, 0, 0, 546, 547, 548,
	549, 0, 0, 550, 0, 553, 554, 0, 0, 555,
	0, 556, 0, 0, 558, 559, 560, 0, 0, 561,
	562, 0, 0, 563, 0, 0, 564, 565, 557, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	0, 584, 0, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 0, 598,
	599, 601, 600, 602, 0, 603, 0, 604, 605, 606,
	0, 0, 0, 0, 0, 607, 608, 610, 0, 611,
	612, 613, 614, 609, 615, 616, 617, 618, 619, 620,
	0, 622, 623, 621, 624, 625, 0, 626, 627, 628,
	629, 630, 0, 631, 0, 632, 633, 641, 642, 643,
	634, 635, 637, 644, 636, 645, 646, 647, 648, 650,
	649, 0, 652, 653, 651, 654, 655, 656, 1519, 657,
	0, 658, 638, 639, 659, 660, 0, 661, 662, 663,
	664, 665, 666, 667, 0, 0, 668, 0, 669, 670,
	671, 672, 673, 674, 676, 640, 677, 682, 683, 0,
	678, 679, 680, 681, 0, 685, 686, 687, 688, 0,
	689, 690, 0, 684, 675, 0, 691, 692, 693, 694,
	695, 696, 0, 697, 698, 0, 699, 0, 0, 0,
	0, 0, 711, 0, 700, 702, 703, 704, 705, 0,
	706, 0, 0, 707, 708, 709, 710, 701, 712, 713,
	0, 0, 714, 715, 716, 718, 720, 721, 717, 719,
	722, 0, 723, 0, 0, 724, 725, 726, 0, 0,
	0, 0, 728, 729, 727, 730, 731, 734, 732, 733,
	0, 735, 472, 736, 737, 0, 0, 0, 0, 738,
	739, 0, 740, 741, 742, 2038, 2039, 0, 2071, 2072,
	2073, 2082, 2083, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 2069,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 2075, 2069, 2040, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 2088, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	2039, 2060, 2071, 2072, 2073, 2082, 2083, 2084, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 2069, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 0, 2063, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 0, 2046, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 2063, 2064, 2065, 2066, 0, 0, 0,
	0, 0, 2079, 2046, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 2068, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 2086, 0, 0, 0,
	0, 0, 0, 2055, 2056, 0, 0, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 2068,
	2070, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 2064, 2065, 2066, 0, 0, 2061, 2085,
	0, 2086, 2046, 0, 0, 0, 0, 0, 2055, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 0, 2079, 2087, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 2091,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 2091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 2080, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 2038, 2039, 0, 2071, 2072, 2073, 2082,
	2083, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 2075, 2069, 0, 0,
	0, 0, 0, 0, 0, 2041, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 2078, 0, 0, 0,
	0, 2080, 0, 0, 2060, 0, 0, 0, 2052, 2053,
	2059, 2081, 2058, 2054, 2057, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 0, 0, 0, 0, 0, 5258,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0,
	0, 0, 0, 0, 5257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 2064, 2065, 2066,
	0, 0, 0, 0, 0, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0,
	2079, 0, 0, 5050, 2089, 0, 0, 0, 0, 0,
	0, 0, 2068, 2070, 0, 0, 0, 0, 0, 0,
	2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0,
	0, 0, 2085, 0, 2086, 0, 0, 0, 0, 0,
	0, 2055, 2056, 2075, 2069, 0, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 2077, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 0, 2038,
	2039, 2057, 2071, 2072, 2073, 2082, 2083, 2084, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 2075, 2069, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 2063, 2064, 2065, 2066, 0, 0, 0,
	2057, 0, 0, 2046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 2068,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2080, 0, 0, 0, 2085,
	0, 2086, 2063, 2064, 2065, 2066, 0, 0, 2055, 2056,
	0, 0, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2077, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2079, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 2087, 0, 0, 0, 0, 2055, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 2078, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 2091, 0, 2052, 2053, 2059, 2081,
	2058, 2054, 2061, 2051, 2049, 2050, 2042, 2043, 2044, 2045,
	2047, 2048, 0, 0, 0, 0, 0, 4859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 2039, 0, 2071, 2072,
	2073, 2082, 2083, 2084, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 2067, 0, 0, 0, 2075, 2069,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 2088, 0,
	2062, 0, 0, 2091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 2080, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 0, 0, 0, 0, 0, 0, 2063, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0,
	0, 0, 2079, 0, 4757, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 2068, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 2086, 0, 0, 0,
	0, 0, 0, 2055, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 2061, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0,
	0, 2038, 2039, 4756, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 2091,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 2039,
	0, 2071, 2072, 2073, 2082, 2083, 2084, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 2069, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 2088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 2094,
	0, 0, 0, 0, 2046, 0, 0, 2080, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 0, 2038, 2039, 2057,
	2071, 2072, 2073, 2082, 2083, 2084, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 2079, 0,
	2075, 2069, 2089, 0, 0, 0, 0, 0, 0, 2041,
	2068, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2085, 0, 2086, 0, 0, 0, 0, 0, 2094, 2055,
	2056, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 2077,
	0, 2063, 2064, 2065, 2066, 0, 0, 0, 2057, 0,
	0, 2046, 0, 0, 2061, 0, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2052, 2053,
	2059, 2081, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 0, 0, 0, 0, 0, 4755,
	0, 0, 0, 0, 0, 2079, 0, 0, 0, 2089,
	0, 0, 0, 2087, 0, 0, 0, 2068, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 0, 0, 2085, 0, 2086,
	2063, 2064, 2065, 2066, 0, 2091, 2055, 2056, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 2067, 2068, 2070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 0, 2086, 0,
	2087, 2062, 0, 0, 0, 2055, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 2077, 0, 0, 0, 0,
	0, 0, 2091, 2080, 0, 0, 0, 0, 0, 0,
	2061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 0, 2062, 0,
	0, 2091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2080, 0, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 2067, 0, 0, 0, 4335, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2080,
	0, 0, 0, 0, 2038, 2039, 0, 2071, 2072, 2073,
	2082, 2083, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 2069, 2078,
	0, 0, 0, 0, 0, 2093, 2041, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 2088, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0,
	0, 0, 3744, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 2038, 2039, 2057, 2071, 2072, 2073, 2082,
	2083, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 2069, 2078, 0,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 0,
	2052, 2053, 2059, 2081, 2058, 2054, 2088, 2051, 2049, 2050,
	2042, 2043, 2044, 2045, 2047, 2048, 0, 0, 0, 0,
	0, 3743, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 2063, 2064, 2065,
	2066, 0, 0, 0, 2057, 0, 0, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 2075, 2069, 2089, 0, 0, 0, 0,
	0, 0, 2041, 2068, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2085, 0, 2086, 2063, 2064, 2065, 2066,
	0, 2094, 2055, 2056, 0, 0, 2046, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 2077, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2079, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 2068, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 2086, 0, 2087, 0, 0, 0,
	0, 2055, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 2077, 0, 2063, 2064, 2065, 2066, 0, 2091, 0,
	0, 0, 0, 2046, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	0, 2089, 0, 0, 0, 2087, 0, 0, 2067, 2068,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 2085,
	0, 2086, 0, 0, 2062, 0, 0, 2091, 2055, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 0, 2061, 0, 2038, 2039, 0, 2071, 2072,
	2073, 2082, 2083, 2084, 0, 0, 0, 0, 0, 2536,
	0, 0, 0, 0, 0, 0, 0, 2067, 2075, 2069,
	0, 0, 2093, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 2087, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 2076, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 2080, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 2052, 2053, 2059,
	2081, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043, 2044,
	2045, 2047, 2048, 0, 2067, 0, 0, 2537, 3742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 2063, 2064,
	2065, 2066, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 0, 2078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2052, 2053, 2059, 2081,
	2058, 2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045,
	2047, 2048, 2079, 0, 0, 0, 2089, 3741, 2093, 0,
	0, 0, 0, 0, 2068, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 2086, 0, 0, 0,
	0, 0, 0, 2055, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0,
	0, 0, 3706, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2091,
	0, 0, 0, 0, 0, 0, 2038, 2039, 0, 2071,
	2072, 2073, 2082, 2083, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	2069, 0, 0, 0, 0, 0, 0, 0, 2041, 2038,
	2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0, 2088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 2075, 2069, 0, 0, 0, 2094, 0, 0,
	0, 2041, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 2088, 0, 0, 2062, 0, 2060, 0, 0,
	0, 2435, 0, 0, 0, 0, 0, 2057, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	2538, 0, 0, 0, 0, 0, 0, 2080, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2063,
	2064, 2065, 2066, 0, 0, 0, 0, 0, 0, 2046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 2064, 2065, 2066, 0, 0, 0, 0,
	0, 0, 2046, 5579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 0, 0, 2078, 2089, 0, 0,
	0, 0, 0, 0, 0, 2068, 2070, 0, 2052, 2053,
	2059, 2081, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043,
	2044, 2045, 2047, 2048, 0, 2085, 2079, 2086, 0, 0,
	2089, 0, 0, 0, 2055, 2056, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2077, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 2061,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 0, 0, 0,
	2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0,
	0, 0, 0, 0, 0, 0, 5578, 0, 0, 2434,
	2067, 0, 0, 2075, 2069, 0, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 2080, 2062,
	0, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 2064, 2065, 2066, 0, 0, 0,
	0, 0, 0, 2046, 0, 3806, 0, 0, 0, 0,
	0, 0, 3805, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2052,
	2053, 2059, 2081, 2058, 2054, 0, 2051, 2049, 2050, 2042,
	2043, 2044, 2045, 2047, 2048, 0, 0, 2079, 0, 0,
	2078, 2089, 0, 0, 0, 0, 0, 0, 0, 2068,
	2070, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 2085,
	0, 2086, 0, 0, 0, 0, 0, 0, 2055, 2056,
	0, 0, 0, 0, 0, 0, 2038, 2039, 0, 2071,
	2072, 2073, 2082, 2083, 2084, 0, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	2069, 0, 0, 2061, 0, 3676, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 2075, 2069, 2040, 0, 0, 0,
	0, 0, 2087, 2041, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 2057, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 2091, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	3677, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 2063,
	2064, 2065, 2066, 0, 0, 0, 0, 0, 0, 2046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 2080, 2079, 2046, 0, 5156, 2089, 0, 0,
	0, 0, 0, 0, 0, 2068, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2085, 0, 2086, 2093, 0,
	0, 0, 0, 0, 2055, 2056, 0, 0, 2079, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	2068, 2070, 0, 0, 2077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	2085, 0, 2086, 0, 0, 0, 0, 0, 0, 2055,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 2061, 0, 0, 0, 2087, 0,
	0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083,
	2084, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 2069, 0, 2080, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 2088, 0, 2038, 2039, 0,
	2071, 2072, 2073, 2082, 2083, 2084, 0, 0, 0, 0,
	0, 0, 0, 2094, 2093, 0, 0, 0, 0, 0,
	2075, 2069, 2040, 2080, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	2088, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2094, 2093,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2052,
	2053, 2059, 2081, 2058, 2054, 0, 2051, 2049, 2050, 2042,
	2043, 2044, 2045, 2047, 2048, 2063, 2064, 2065, 2066, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	2063, 2064, 2065, 2066, 0, 0, 0, 0, 0, 2079,
	2046, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 2068, 2070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2085, 0, 2086, 0, 0, 0, 0, 0, 0,
	2055, 2056, 0, 0, 2079, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 2068, 2070, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 2085, 0, 2086, 0,
	0, 0, 0, 0, 0, 2055, 2056, 0, 0, 0,
	0, 0, 0, 2038, 2039, 0, 2071, 2072, 2073, 2082,
	2083, 2084, 0, 0, 0, 2077, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 2069, 0, 0,
	2061, 0, 0, 0, 2087, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 1241, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 2091, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 2038, 2039,
	0, 2071, 2072, 2073, 2082, 2083, 2084, 0, 0, 0,
	0, 2067, 0, 0, 0, 0, 2063, 2064, 2065, 2066,
	0, 2075, 2069, 0, 2080, 0, 2046, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 2088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2094,
	2093, 0, 0, 0, 0, 0, 0, 0, 2040, 2080,
	2079, 0, 0, 0, 2089, 0, 0, 0, 0, 2060,
	0, 0, 2068, 2070, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 2086, 2093, 0, 0, 0, 0,
	0, 2055, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4911, 0, 0, 0, 0, 0,
	0, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058,
	2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047,
	2048, 2063, 2064, 2065, 2066, 0, 0, 0, 0, 0,
	0, 2046, 0, 4558, 0, 0, 0, 0, 2078, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049, 2050,
	2042, 2043, 2044, 2045, 2047, 2048, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 0, 2091, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 2068, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2085, 0, 2086,
	0, 0, 0, 0, 0, 0, 2055, 2056, 0, 0,
	0, 0, 0, 0, 2038, 2039, 0, 2071, 2072, 2073,
	2082, 2083, 2084, 0, 0, 0, 2077, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 2069, 0,
	0, 2061, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 2088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 2080, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 2091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4559, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 2063, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 0, 2046, 0, 0,
	0, 0, 0, 0, 2078, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 0, 0, 2052, 2053, 2059, 2081,
	2058, 2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045,
	2047, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	2080, 2079, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 2068, 2070, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 2085, 0, 2086, 2093, 0, 0, 0,
	0, 0, 2055, 2056, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 2077, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051, 2049,
	2050, 2042, 2043, 2044, 2045, 2047, 2048, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 0, 2038, 2039, 2046, 2071, 2072, 2073, 2082, 2083,
	2084, 0, 0, 3812, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 2075, 2069, 0, 0, 0,
	3807, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 2088, 0, 0, 2079, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	2068, 2070, 0, 2094, 0, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 2080, 0, 0, 0,
	2085, 0, 2086, 2060, 0, 0, 0, 0, 0, 2055,
	2056, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2061, 4316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 2063, 2064, 2065, 2066, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 2078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 2052, 2053, 2059,
	2081, 2058, 2054, 0, 2051, 2049, 2050, 2042, 2043, 2044,
	2045, 2047, 2048, 0, 0, 0, 0, 0, 0, 2079,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 2068, 2070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2085, 0, 2086, 0, 2067, 0, 0, 0, 0,
	2055, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 2039, 2061, 2071, 2072, 2073, 2082,
	2083, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 2075, 2069, 0, 0,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 2062, 0, 0, 0, 2063, 2064, 2065, 2066,
	0, 0, 0, 0, 2038, 2039, 2046, 2071, 2072, 2073,
	2082, 2083, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2080, 0, 0, 2075, 2069, 0,
	0, 0, 3745, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 0, 0,
	2079, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	2093, 0, 2068, 2070, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 2086, 2060, 0, 0, 0, 0,
	0, 2055, 2056, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058,
	2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047,
	2048, 0, 0, 0, 0, 2087, 0, 2063, 2064, 2065,
	2066, 0, 0, 0, 0, 0, 0, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 2068, 2070, 0, 0, 0, 0, 0,
	0, 2038, 2039, 0, 2071, 2072, 2073, 2082, 2083, 2084,
	0, 0, 0, 2085, 0, 2086, 0, 2067, 0, 0,
	0, 0, 2055, 2056, 2075, 2069, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 2077, 2062, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	2038, 2039, 2057, 2071, 2072, 2073, 2082, 2083, 2084, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 2093, 0, 2075, 2069, 0, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 2063, 2064, 2065, 2066, 0, 0,
	0, 2057, 0, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2078, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 2052, 2053, 2059, 2081,
	2058, 2054, 0, 2051, 2049, 2050, 2042, 2043, 2044, 2045,
	2047, 2048, 0, 0, 2062, 0, 0, 0, 2079, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	2068, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	2085, 0, 2086, 2063, 2064, 2065, 2066, 0, 0, 2055,
	2056, 0, 0, 2046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 2068,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2085,
	0, 2086, 0, 2087, 0, 0, 0, 0, 2055, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 2078, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 2091, 0, 2052, 2053, 2059,
	2081, 2058, 2054, 2061, 2051, 2049, 2050, 2042, 2043, 2044,
	2045, 2047, 2048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 2039, 0, 2071,
	2072, 2073, 2082, 2083, 2084, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 2067, 0, 0, 0, 2075,
	2069, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 2088,
	0, 2062, 0, 0, 2091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 0, 0, 0, 0, 0, 0, 2063,
	2064, 2065, 2066, 0, 0, 0, 0, 0, 0, 2046,
	0, 0, 0, 0, 0, 2650, 0, 0, 0, 0,
	0, 0, 2078, 0, 0, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054,
	0, 2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048,
	0, 0, 0, 2079, 0, 0, 0, 2089, 0, 0,
	0, 0, 0, 0, 0, 2068, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2085, 0, 2086, 0, 0,
	0, 0, 0, 0, 2055, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 2077, 0, 0, 0, 0, 0,
	0, 0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 2061,
	2051, 2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 2038,
	2039, 0, 2071, 2072, 2073, 2082, 2083, 2084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 2088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	2091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 2064, 2065, 2066, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2093, 0, 2079, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 2068, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	2086, 0, 0, 0, 0, 0, 0, 2055, 2056, 0,
	1116, 0, 1170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1124, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 1140, 0, 1122, 1121, 2052,
	2053, 2059, 2081, 2058, 2054, 0, 2051, 2049, 2050, 2042,
	2043, 2044, 2045, 2047, 2048, 0, 0, 0, 0, 0,
	0, 1142, 0, 0, 0, 0, 0, 1123, 0, 0,
	0, 2087, 1126, 0, 0, 0, 0, 1182, 0, 1153,
	0, 0, 0, 0, 0, 0, 0, 0, 1137, 1138,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 2091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 1128, 0, 0,
	0, 0, 0, 1129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1130, 0,
	0, 0, 0, 0, 0, 0, 0, 1168, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 1169, 0, 1149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 1120, 0,
	0, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1134, 1135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 1143, 1141, 0, 0, 0, 0, 0, 0,
	1136, 0, 0, 0, 0, 1154, 0, 0, 1176, 1175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1179, 1167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2052, 2053, 2059, 2081, 2058, 2054, 0, 2051,
	2049, 2050, 2042, 2043, 2044, 2045, 2047, 2048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 1181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1125, 0, 0, 0, 0,
	1162, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1173, 1160, 0, 0, 0, 0, 0, 0,
	0, 1180, 1155, 0, 0, 1146, 1144, 0, 0, 0,
	1150, 0, 0, 0, 0, 0, 0, 0, 1151, 0,
	0, 1118, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1166, 0, 0, 1164, 0, 1152, 1133, 0, 0, 0,
	0, 1148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 0,
	1156, 0, 1157, 0, 0, 0, 0, 0, 0, 0,
	0, 1131, 1177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1161,
}

var sqlPact = [...]int32{
	14559, -1000, -1000, -1000, -1000, -1000, -1000, 239, -1000, -1000,
	235, 234, 231, 230, 229, 228, 227, 223, 221, 220,
	219, -1000, -1000, 217, 213, 212, 211, -1000, -1000, 209,
	207, -1000, 205, -1000, -1000, 204, -1000, 203, 202, 199,
	-1000, -1000, 195, -1000, 193, -1000, -1000, -1000, -1000, 190,
	189, 188, 112372, 111752, 112990, 2718, 141472, 122274, 2301, 98744,
	140852, 98124, 140232, 2575, 10706, 139612, 3197, 183, -1000, 138992,
	181, 180, 177, -1000, 121654, 138372, 119176, 118556, 2287, 86890,
	1924, 1921, -1000, 175, 173, -1000, 7144, 82542, 172, 171,
	170, 169, 3015, 168, -1000, 165, 162, -1000, 156, 154,
	-1000, 8324, 1768, -1000, 152, 151, 150, -1000, 7453, 117936,
	149, 148, 147, 2983, 146, 143, 80068, 141, 140, 136,
	2773, 3300, -1000, -1000, 2430, -1000, -1000, 135, 134, 133,
	132, 131, 130, 127, 124, 123, 122, 120, 119, 118,
	114, -1000, 113, 112, 111, 108, 106, 104, -1000, 102,
	101, 99, -1000, 97, -1000, 96, 95, 94, 92, 91,
	89, 87, 79, 68, 67, 66, 65, 63, 62, 61,
	162948, -1000, -1000, 60, -1000, 2221, 1916, 1912, 1889, 1093,
	59, 58, 57, 56, 55, 54, 53, 52, 51, 48,
	41, 39, 38, 36, 35, 34, 33, 32, 31, 30,
	29, 26, 25, 179, 24, 20, 19, 16, 15, 14,
	13, 12, 3540, 4042, -1000, 1960, 1228, 1360, 35758, 3459,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 150742,
	142090, 11, -60, 9, -1000, 3842, 1126, 65053, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 320, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 571,
	2829, 811, -1000, -1000, -1000, 137752, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2717, -19, 99362, -1000, 2468, -1000,
	-1000, -1000, -1000, -1000, 807, -1000, 2713, 2646, 390, 2645,
	99362, -1000, -1000, -1000, 3909, 3800, 111132, 2877, 4398, 4397,
	4395, 4392, 4391, 150124, 2112, 2958, 4386, 4385, 4381, 4380,
	4379, 4377, 4376, -1000, 110512, 1201, 109892, 109272, 3918, 137134,
	108652, 136514, 153220, 54904, 1173, 3907, -1000, -1000, -1000, -1000,
	-1000, -1000, 142090, -1000, 1200, -1000, -1000, 4375, 2357, 806,
	121034, -1000, -1000, 135894, 2201, -1000, -1000, -1000, 1023, 1307,
	38298, 38298, 38298, 315, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3920, -1000, -1000, -1000, -1000, 142090, 3175, 3175, 1543,
	1361, 1361, 3175, 3175, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4374, 4373, 4372, 4371, 4370, -1000, -1000, -1000,
	1496, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 97504, 27949,
	96884, 96264, 108032, 135274, 54269, 107412, 106792, 91924, 4368, 4366,
	53634, 62521, 4041, 134654, 152600, 4039, 4038, 1199, 2434, 1624,
	-1000, -1000, -1000, -1000, -1000, -1000, -14, 86272, 4126, 142090,
	-1000, 312, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 52999,
	1032, 52364, 879, 51729, 351, 134034, -1000, -1000, -1000, -1000,
	-1000, 91294, 3799, -1000, 133414, 1688, 2876, 4362, 4361, 1312,
	4359, 3778, 2100, 4358, 4356, 4355, 4354, 4353, 4350, 4347,
	1752, 132794, 3108, 132174, 2007, 151980, 2252, 1194, 106172, 112990,
	3056, 131554, 1680, 1665, -1000, -1000, -1000, -1000, 3607, 3298,
	3283, 1470, -1000, -1000, -1000, -1000, -1000, 68825, 8197, 6119,
	-1000, -1000, 13450, 130934, 71965, 112990, 112990, -1000, -1000, -1000,
	-1000, -1000, -1000, 51094, 875, 50459, 1171, 130314, -1000, -1000,
	69453, 3408, 1242, -1000, -1000, -1000, -1000, -1000, 129694, 49824,
	686, 49189, 1099, 142090, -1000, 3458, 2270, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2245, 1825,
	4131, 3205, 90664, 2406, 1562, 3864, 3602, 3600, 1672, 2432,
	3598, 4345, 3035, 3253, 3538, 3536, 3535, 3534, 3530, 1917,
	3003, 693, 2999, 35123, 3443, 2084, 48554, 1727, 1708, 3529,
	3528, 3524, 4171, 3977, 2413, 2329, 2330, 2341, 95644, 4344,
	4343, 3818, 3522, 3518, 3259, 3502, 2282, -1000, 3407, 1733,
	307, -1000, -1000, -1000, -1000, -1000, -1000, 307, 1642, -1000,
	-1000, -1000, -1000, -1000, 100598, -1000, -1000, 1496, -1000, -1000,
	-1000, 1636, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1960,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2644, -1000, 2370, -1000, -1000, -1000, 2996, 3826, 3826,
	3826, 3904, 553, 532, -1000, 179, 939, 1259, -1000, -1000,
	162019, -1000, -1000, 55539, 55539, 55539, 55539, 55539, 55539, 55539,
	55539, 2589, -1000, 805, -1000, -1000, 839, -1000, 804, 744,
	677, -1000, -1000, -1000, -1000, -1000, -1000, 803, -1000, -1000,
	-1000, -1000, -1000, -1000, 4091, -1000, 31176, -1000, -1000, -1000,
	498, 802, 55539, -1000, -1000, 4194, 4193, 1149, -1000, 306,
	1065, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3456, 800, 799, -1000, 797, 796, 792,
	790, 787, -1000, 786, -1000, 785, 784, 783, 782, 779,
	776, 774, 773, -1000, 2481, -1000, -1000, -1000, -1000, -1000,
	-1000, 716, 712, 712, 712, -1000, 1181, -1000, -1000, -1000,
	499, 711, 319, 708, 707, 706, -1000, 770, 766, 764,
	760, 759, 758, 757, 755, 754, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1180, -1000, -1000, -1000, -1000, 1553, -17,
	142090, -1000, 671, -17, -1000, -1000, 753, -1000, 39586, 39586,
	39586, -1000, -1000, 2711, 55539, -1000, 2740, -1000, -4, -4,
	990, 66937, -1000, 63779, 990, 801, 852, 73213, -1000, 3404,
	-1000, -1000, 749, 305, -1000, -1000, -1000, -1000, 28577, 3402,
	142090, 142090, 142090, 112990, 112990, 112990, 142090, 4337, 4334, 3541,
	55539, -1000, -1000, 81922, 155073, 113608, 1634, -15, -1000, -1000,
	4021, 85644, 81304, 3455, 155073, 3454, 3400, 154460, 90034, 288,
	3674, -1000, -1000, 747, 4333, -1000, -1000, -1000, -1000, -1000,
	3671, 4332, 4328, 4326, 142090, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2648, 3670, -1000, -16, -1000, 117316, 2648, 3669,
	-1000, -16, 2648, 3667, -1000, -16, 116698, -1000, -1000, 2648,
	3664, -1000, -1000, 285, 3663, -1000, -1000, 281, 3660, -1000,
	-1000, 300, -92, 3657, -1000, -1000, -1000, -1000, -1000, -1000,
	162019, -1000, -1000, -1000, 153840, -1000, 3830, -1000, 142090, -1000,
	55539, -1000, -1000, 4016, 1820, 3855, 3949, -1000, -1000, -30,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2923, 2911, 1283,
	2738, -1000, 3718, 1693, 38298, 3764, -1000, -1000, -1000, -1000,
	-1000, 298, 28577, 3262, -1000, -1000, 142090, -1000, 142090, 3175,
	3175, -1000, -1000, -1000, 4141, 4139, 3175, 3175, 142090, 142090,
	-1000, -1000, -1000, -1000, -1000, -1000, -30, -1000, 5397, 3655,
	2204, -1000, 2737, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2255, 3654, -1000, 2528, 3650, 2233, -1000, -1000,
	5791, -1000, 2533, -1000, 158845, 1502, -1000, -1000, -1000, -1000,
	2576, 3644, 0, -1000, -1000, 2721, -1000, 4130, 3352, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	158454, -1000, 2037, -1000, -1000, 2402, 2324, -1000, 1475, 3606,
	-1000, 3204, 3204, 105552, 3621, 71337, 69453, 86272, -28, -1000,
	-1000, -1000, -1000, -1000, -108, -1000, 27313, 162019, -1000, -1000,
	-1000, -1000, 2149, 162019, 1052, -1000, -1000, 3603, -1000, 162019,
	1013, -1000, -1000, 3597, -1000, 3002, -1000, 3447, -1000, -1000,
	-1000, 2820, 89404, 2819, 1132, -1000, 104934, 2425, 4324, -1000,
	4321, -1000, -1000, 4320, -1000, 4319, 4316, 4314, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 104314, 2710, -1000, -1000, 1690,
	1068, 92552, -1000, 2817, 3948, -1000, 103694, 1191, -1000, 1094,
	2814, -1000, 1650, 116080, 1098, 2813, -1000, 4313, 3905, 3098,
	1094, 2812, -1000, -1000, -1000, -1000, -1000, 1113, -1000, 74449,
	-1000, 74449, -1000, 1899, -1000, 149506, -4, 112990, 4091, -1000,
	-59, -1000, -1000, -1000, 1126, -1000, 68194, -1000, 68194, 120414,
	92552, 1068, 3395, 78192, 161930, -1000, 1131, -1000, -1000, 162019,
	-1000, -1000, -1000, 2992, -1000, -192, 3201, -1000, 92552, 70709,
	3393, 2984, -1000, 162019, -1000, -1000, -1000, -1000, 162019, -1000,
	-1000, -1000, 92552, 1690, -1000, 129074, 103074, -1000, -1000, 1726,
	2979, -1000, -1000, -1000, 69453, 3392, 1489, 92552, 92552, 92552,
	92552, 92552, -1000, 128454, -1000, -1000, 2409, 1783, 3819, 2366,
	112990, -1000, 2098, -1000, -1000, -1000, 3849, 3616, 142090, -1000,
	-1000, 3446, -1000, 85026, 3446, 115462, -1000, 114844, -1000, 114226,
	-1000, 112990, -1000, 112990, -1000, 4312, 4311, 4310, -1000, -1000,
	4306, -1000, 4305, 3838, -1000, 1028, 47919, 162019, 3829, -1000,
	4303, 2308, 3443, 162019, -1000, 3615, 1931, 1930, 142090, -1000,
	-1000, 142090, -1000, 142090, -1000, 142090, -1000, -1000, -1000, 2730,
	1806, -1000, -1000, 2919, -1000, -1000, -1000, 1130, -1000, -1000,
	112990, 112990, 112990, 112990, 112990, 1818, -1000, 47284, 3796, -1000,
	-1000, 3521, 4302, 2016, -1000, 2088, -1000, 3388, 3839, -1000,
	3387, 1724, 2040, 292, 4202, 292, -1000, -1000, 293, -1000,
	-1000, 148888, -1000, 2996, -1000, 142090, -1000, 2937, 3436, 3440,
	1994, 2725, 3033, -1000, 46649, 2993, 59349, 2736, 179, -1000,
	-1000, 179, 179, 37028, -1000, -1000, 38298, 939, 85644, 85644,
	28577, 1474, 55539, 55539, 55539, 55539, 55539, 55539, 55539, 55539,
	55539, 55539, 55539, 55539, 55539, 55539, 55539, 55539, 55539, 55539,
	55539, 55539, 55539, 55539, 55539, 55539, 55539, 55539, 55539, 55539,
	55539, 55539, 55539, 55539, 55539, 55539, 55539, 55539, 2640, 55539,
	1626, 55539, 55539, 55539, 55539, 2236, -1000, -1000, 2285, 602,
	2478, 744, -1000, -1000, -1000, 4094, 4094, 4094, 1335, 1335,
	1335, 162668, 162668, 616, 4301, 839, -1000, 55539, -1000, 142,
	67555, 55539, 29207, -1000, 532, 8553, 2940, -1000, 530, 29872,
	-1000, -1000, -1000, 31176, 677, 45984, 55539, 1142, 162019, -1000,
	-1000, 1584, 4123, 26677, 3452, 3246, 743, 961, 958, 34458,
	33793, 33128, 32463, 945, 768, 55539, 55539, 55539, 55539, 55539,
	55539, 55539, 55539, -1000, -1000, 4135, -1000, 4123, -1000, -1000,
	-1000, -1000, 4123, 1403, 1379, 4123, -1000, 4123, 4123, 8923,
	8923, 45349, 44714, 44079, 59984, 43444, 55539, 31828, 42809, 42174,
	-1000, 61889, 142090, -17, 4014, 142090, 55539, 348, -1000, 14284,
	-1000, 348, 348, 740, -67, 162019, 2975, 2975, 65681, 2536,
	2602, 2602, 2602, -1000, 990, 20914, 990, 126600, 2609, 990,
	990, 271, 309, 528, 63151, 2740, 125982, 826, 721, 8,
	7, 6, -1000, -1000, 5, 4, -1000, -1000, 112990, 720,
	29207, 28577, 269, 2322, -69, 3018, 3014, 3013, 3012, -1000,
	3000, 2707, -1000, -1000, -1000, 2125, -70, 1621, 112990, 142090,
	2045, -1000, -1000, -1000, -1000, 86272, -18, 86272, 142090, 3795,
	112990, -85, -1000, 155073, 7789, -75, -1000, 1453, 268, 4123,
	-1000, -1000, -1000, -1000, -1000, 4300, 4295, -1000, 1170, 719,
	717, 472, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	716, 712, 712, 712, -1000, 499, 711, 319, 708, 707,
	706, -1000, -1000, -1000, -1000, -1000, 3386, 112990, 142090, 2042,
	84408, 102454, -92, 113608, 155073, -50, -1000, -1000, -1000, -1000,
	112990, -1000, -1000, 112990, -1000, 75689, -1000, 142090, -1000, -1000,
	-1000, 4290, -1000, 112990, 112990, 2648, 3596, -1000, 112990, -1000,
	112990, 273, 3595, -1000, -1000, 142090, -1000, 112990, 112990, -1000,
	142090, 142090, 142090, 155073, 155073, 272, -1000, 112990, 939, -78,
	1332, -30, -1000, -1000, -1000, -1000, 1496, -1000, 2264, -1000,
	-1000, -1000, -1000, -1000, -1000, 1697, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1149, -1000, -1000, -1000, -1000, 4120,
	4106, -27, -1000, -1000, 28577, -1000, 2225, -1000, -1000, -1000,
	-1000, 142090, 142090, -1000, -1000, 142090, 142090, -1000, -1000, -31,
	1897, 446, 1617, -1000, 95024, 2850, 3809, 4289, 3090, 3785,
	1890, -1000, 1805, 704, -1000, 3929, 100598, 3976, 3986, 1486,
	-1000, 3385, -1000, -1000, -1000, 1019, 2009, 2079, 1601, 1597,
	100598, 2528, -1000, 85644, -1000, 3112, 3902, 1361, 1536, 1361,
	1361, 1563, 1546, -1000, 100598, 2064, 1577, 1571, 5948, 1570,
	2062, 1569, 3710, -1000, -1000, 2706, 2761, -1000, -1000, -1000,
	-1000, 1922, 3144, -1000, 2941, 1529, 1529, 142090, -1000, 1557,
	-1000, -1000, 1884, 1935, -1000, -1000, 127836, 2022, -1000, 1549,
	1538, 143326, 4037, 2644, 2578, 868, 2355, -1000, 1500, 1533,
	3381, -1000, -1000, -32, 3966, 3975, 1486, -1000, -1000, 3379,
	1531, -1000, 1153, -1000, -1000, -1000, -1000, 3901, 112990, 28577,
	1780, 1779, 1770, 2060, 1463, -20, -1000, 3955, 1887, -1000,
	4049, 92552, -1000, 2841, 1847, -1000, 1690, 1690, 122892, 142090,
	-1000, -1000, -1000, 3863, 3862, -1000, -1000, 1456, 1451, -1000,
	1134, 7070, 3739, -1000, 155073, 1134, 1134, 2197, 3594, 3153,
	1939, -1000, 3199, 978, 3196, -1000, -1000, -1000, 978, -28,
	86272, 142090, 264, -1000, 142, 55539, 55539, 142, 55539, 142,
	-1000, 3939, 3593, 4013, -1000, 3580, 4284, 703, -1000, -1000,
	2955, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 702, 2808,
	3378, 142090, 260, -1000, 112990, -1000, 4011, 127218, -1000, 3579,
	155073, 2528, 2804, -1000, -1000, 101836, -1000, 3577, 2395, 571,
	2803, -1000, 772, 4283, 3575, -1000, 148270, -1000, 3830, 1657,
	3570, 1236, 922, 4007, -1000, 922, 76318, -1000, 142090, -1000,
	-4, 5732, 93788, -83, -86, 525, -1000, 142090, 142090, 3751,
	2405, 2404, -1000, 1080, 69453, -1000, 69453, -89, -1000, -192,
	3195, 1782, 69453, -1000, 1068, -153, 978, -1000, 978, -1000,
	112990, 3439, -1000, 92552, 69453, -1000, 1068, 1068, 1068, 1068,
	1068, -1000, -1000, -1000, -1000, 4280, 4278, 4277, 4272, -1000,
	-1000, 1086, 112990, 142090, 112990, -1000, 3149, 1936, -1000, 261,
	-1000, 155073, -1000, 155073, 142090, 112990, -1000, -1000, 1086, 142090,
	1086, 142090, 1086, 142090, 1086, 1086, -1000, -1000, -1000, -1000,
	-1000, 142, -1000, -1000, 162019, -1000, 55539, -1000, -1000, 1804,
	4270, 1915, -1000, 3438, -1000, 3437, -1000, 45, 256, -1000,
	-1000, 4132, 2232, -1000, 4191, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4269, 3787, 162019, -1000, 88774, 2214,
	-1000, -1000, -1000, -1000, 112990, 112990, 112990, 112990, 142090, 3738,
	-1000, 142090, 3733, 3737, 112990, -1000, 4199, -1000, -1000, 100598,
	-1000, 2937, 3436, -1000, -1000, -1000, -1000, -1000, -1000, 1883,
	2653, -1000, 2974, -1000, 1840, -1000, -1000, -1000, 162019, 60619,
	-1000, -1000, 162019, 2120, -1000, 58714, 58079, -1000, -1000, 1998,
	112990, 3037, -1000, 3037, -68, -1000, 159545, 2972, 112990, -27,
	38298, -1000, -1000, -1000, -1000, -1000, 1016, 1731, 1731, 1485,
	1485, 1485, 1485, 3941, 6224, 6007, 1637, 9870, 9870, 370,
	370, 370, 370, 370, 9870, 463, 1335, 1335, 463, 463,
	463, 463, 463, 1335, 1335, 1335, 9870, 9870, 9870, 1335,
	162668, 162355, 13424, 55539, 55539, 1446, 2237, 602, 12451, 55539,
	10864, 10864, 10864, 10864, -1000, 2248, -1000, -1000, -1000, -1000,
	3375, 701, 59984, 59984, -1000, -1000, -1000, -1000, 30524, 55539,
	-1000, -1000, -1000, -1000, 41509, -1000, -1000, 158149, -334, 524,
	-1000, 254, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 523, -65, 103, -1000, 55539,
	55539, 55539, 522, -1000, 250, 55539, 142090, -1000, 19219, 824,
	-88, -1000, -91, 1612, -1000, 55539, -1000, -1000, 1444, -1000,
	1442, 1440, 1437, -1000, 694, 518, -1000, 249, -1000, 2598,
	692, 691, 55539, -1000, -1000, -1000, -1000, -1000, 158032, -1000,
	-1000, 157943, -1000, -1000, 157436, -1000, -1000, 157347, -1000, -1000,
	-1000, -1000, -1000, 161683, 19064, 18382, 17458, 6880, 16941, 16206,
	-106, 517, -107, 516, 1014, 1011, 512, 511, 509, -117,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -119, 496, -1000, 3374, -65, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 490, -1000, 487, -1000, 161502,
	-65, 486, 1318, -1000, 59984, 59984, 59984, 59984, 485, -1000,
	159269, -1000, 161201, 40874, 40874, 40874, 483, 161020, 55539, -65,
	-126, -1000, -131, -1000, -1000, -1000, -1000, 567, -132, -1000,
	-146, 1135, 39586, 64423, 28577, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1135, 1135, 55539, -1000, 55539, 2989, -1000, -1000, -1000, -1000,
	2988, 2591, 2975, 65681, -1000, -1000, -1000, -1000, 126600, -1000,
	4091, 3493, -1000, 126600, -1000, -1000, 142090, 671, -1000, 126600,
	126600, 28577, 990, -1000, -1000, 142090, 667, 990, 126600, 851,
	-1000, -1000, -1000, -1000, -1000, 477, 78820, 103, 248, 28577,
	1094, -1000, -1000, 3119, 3119, 3119, 3119, 3119, 112990, -1000,
	-1000, 155073, 1435, -25, -102, 3193, 3192, 3191, -28, 86272,
	-28, -108, 142090, -21, 4046, -270, -1000, 2511, -1000, 85644,
	-1000, 837, 1274, 28577, -1000, -1000, -1000, 690, -1000, 4123,
	4123, -1000, 4123, 155073, 3372, 342, 3190, 3187, 3182, -1000,
	2704, 99362, 327, -92, 155073, -1000, 288, -148, -1000, -1000,
	83778, 79438, -1000, 2604, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4268, -1000, 2648, -1000, -1000, 112990, 2648, 2648, -1000,
	112990, 112990, 2648, -1000, 285, -1000, 281, -1000, -1000, -92,
	-1000, 1121, 38298, -1000, 1496, -1000, -1000, 1778, -1000, 2411,
	-1000, 1364, -1000, -1000, 38298, -1000, 3755, -1000, 2023, -1000,
	-1000, -1000, -1000, 2453, 142090, 142090, 112990, -1000, 124128, 142090,
	-1000, 2521, 155073, -1000, 2799, 147652, 2774, 147034, 85644, -1000,
	-1000, 687, 1033, 2971, 2969, 1232, 142090, 142090, 2967, 146416,
	145798, -1000, 4264, 142090, 2471, 55539, 124128, 3900, 2545, 3930,
	142, 142, -1000, 142, -1000, -1000, 685, 1640, 112990, 112990,
	142090, 155073, 112990, 2154, -1000, -1000, -1000, -1000, -1000, 101216,
	-1000, -1000, 1361, -1000, -1000, -1000, 1361, -1000, 1361, 2528,
	2095, 142090, 155073, 112990, -1000, -1000, -1000, -1000, 142090, 142090,
	155073, 2703, 2760, 2694, 3143, -1000, -1000, -1000, -1000, -1000,
	-1000, 155073, 145180, 2340, 144562, 2332, 2319, -1000, -1000, -1000,
	2272, 2318, 2516, 2059, 142090, -1000, -1000, -1000, -1000, -1000,
	1598, -1000, 868, 1433, 3371, 55539, 55539, 2531, 142, 142,
	-1000, 142, 684, 28577, -1000, 1404, -1000, 3445, 142090, 4188,
	143944, 4186, 142090, 142090, 142090, 155073, 3821, 142090, -22, -1000,
	2017, -1000, 4049, -1000, 960, -1000, -153, -24, -109, -1000,
	957, 953, -108, 2357, 142090, 155073, -1000, 143326, 7070, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2524, 3111, 1246, 142090,
	1475, -1000, -1000, 2043, 1428, 1417, 100598, 2493, 2036, 2172,
	155073, 69453, 1082, 69453, 3107, -1000, -1000, 26041, -1000, 162019,
	162019, -1000, 162019, -1000, 83160, 92552, 92552, 142090, -1000, 76946,
	142090, 94406, 1048, 3569, 75069, -108, 1068, 1690, 3475, 1925,
	-109, 681, 142090, -1000, -1000, 2528, 3558, 571, 2798, -1000,
	155073, 1190, 4005, 3557, 679, 4263, 4262, -1000, 112990, 2693,
	2797, -1000, -1000, 142708, 3610, 868, 142090, 1135, 65681, 2327,
	-1000, 72595, 1216, 142090, 2226, 270, -1000, -1000, -1000, 23,
	142090, -1000, 847, -1000, -1000, 5732, 5732, 1068, 70081, -154,
	-1000, 247, 678, 950, 947, -1000, 6718, -1000, -192, -1000,
	92552, 1080, 69453, 3369, -192, 3177, 3365, -1000, -1000, 1120,
	1068, 1686, 3173, 1068, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -8, -1000, 2034,
	155073, 2169, 142090, -92, -92, -38, -1000, -1000, 246, -25,
	-1000, 1086, -1000, 1086, -1000, 1086, -1000, -1000, -1000, 162019,
	-1000, -1000, -1000, 1904, 1903, 142090, -1000, 142090, 3435, -1000,
	142090, -1000, -1000, 4257, -1000, -1000, 28577, 142090, 112990, 28577,
	112990, 3434, 3433, -1000, -1000, -1000, 142090, -1000, -1000, 142090,
	-1000, -1000, -1000, -1000, -1000, -1000, 1265, -1000, 2120, 2651,
	-1000, 677, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2900, -1000, -1000, 37028, 1006, -1000, -1000, 112990, -9,
	-27, 55539, 55539, 9605, 7788, 55539, 59984, 59984, -1000, 55539,
	7061, -1000, -1000, -1000, -1000, -1000, 3360, 676, 55539, 85644,
	5906, 3500, -1000, 476, 13151, 463, -1000, 55539, -1000, 430,
	-1000, 470, 40239, -1000, 160021, 86, -155, -1000, 21565, -65,
	-156, -1000, -1000, 836, -1000, 3684, -1000, 55539, 160773, 2865,
	2358, 2114, 1952, 4123, 4184, 25405, -1000, 77574, 1137, 2618,
	157230, -1000, -1000, -1000, -1000, 85644, 85644, 55539, 55539, -1000,
	55539, 55539, 55539, -1000, -1000, -1000, 4123, 988, -1000, -1000,
	-1000, 988, -1000, -1000, 1361, -1000, 1361, -1000, 55539, -1000,
	-1000, 3359, 55539, -1000, 85644, 85644, 59984, 59984, 59984, 59984,
	59984, 59984, 59984, 59984, 59984, 59984, 59984, 59984, 59984, 59984,
	59984, 59984, 59984, 59984, 59984, 59984, 2953, 59984, 4073, 4073,
	4073, 705, -1000, 3429, 3359, 55539, 55539, 85644, 462, 460,
	443, -1000, 55539, -65, -1000, -1000, 2508, 675, -1000, 2889,
	-1000, 142090, -1000, 3245, -1000, 55539, -1000, -157, -1000, 2740,
	-1000, -1000, 3245, 3245, -161, 162019, 65681, 65681, -1000, 674,
	55539, 2986, -1000, -1000, 823, -336, -1000, 946, -1000, -1000,
	-1000, -1000, -1000, -1000, 943, -1000, 671, -1000, -1000, -1000,
	244, 126600, 667, -1000, 142090, 126600, 822, -1000, -162, -1000,
	-1000, -168, -1000, 125982, 440, 28577, -1000, 1135, 5598, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2998, -270, 155073, 155073,
	2031, 2029, 2028, -28, -108, 2641, -1000, 3257, 4183, -1000,
	4127, 832, 820, 243, 4123, 439, 428, 426, -92, 155073,
	155073, 2027, 2025, 2021, 80686, 3351, 155073, -1000, -1000, -1000,
	76946, 85644, -1000, 85644, -1000, -1000, -1000, -1000, 2648, -1000,
	-1000, -1000, 273, -1000, -1000, -1000, -1000, 3066, -1000, -30,
	-1000, -1000, -1000, 55539, -1000, 1054, -1000, -1000, 3808, 662,
	1415, 1413, -1000, -169, -1000, 936, -1000, -1000, -1000, -1000,
	-1000, 3316, -1000, 3553, -1000, 2796, -1000, 1224, 2795, 2200,
	-1000, 55539, 661, 3096, 660, 659, 4256, 2470, 4255, 1234,
	3551, 2648, 3547, 2648, -1000, -1000, -1000, 1029, -1000, 162019,
	-170, -1000, 2545, -1000, 657, 655, -1000, -31, 1834, 383,
	1411, 1119, -1000, -1000, 55539, 55539, 125364, -1000, 547, 3804,
	-10, -1000, -1000, -1000, 2020, 1410, 1393, -1000, -1000, -1000,
	-1000, -1000, 2528, 2019, 1391, 1388, -1000, -1000, -1000, -1000,
	-1000, -1000, 3486, 3061, 2759, -1000, -1000, -1000, -1000, 2794,
	-1000, 142090, -1000, 3546, 142090, 3220, 868, 142090, 3804, 3268,
	1104, -1000, 3481, 3480, 997, 142090, 55539, 55539, 160497, 160342,
	-1000, 1102, -1000, -1000, 55539, -1000, -32, -1000, 1386, 3960,
	2793, 112990, -1000, 2648, 3545, 1384, -1000, 1378, -1000, -1000,
	-1000, 3952, 3951, 1375, 1887, 92552, 69453, 2902, -1000, 3937,
	2639, 4108, 4049, 69453, -1000, 122892, 92552, 92552, -1000, -1000,
	-1000, 4108, -1000, -1000, -1000, -1000, 88144, -1000, -1000, 1134,
	142090, 155073, 112990, 2038, -1000, -1000, 99362, 99980, 142090, 3153,
	-92, 978, -1000, 2839, 978, 1082, 3349, -1000, 3025, -1000,
	-1000, 1097, 425, -33, -1000, 1382, 4254, 415, -176, -35,
	85644, -1000, -1000, -1000, -1000, 2774, 112990, 142090, 1454, 3093,
	142090, 142090, 4003, -1000, 2722, 672, 112990, 995, -1000, 4091,
	-1000, -1000, -1000, 142090, 39586, 122892, -1000, 3946, 112990, 4002,
	3544, 1094, 112990, 142, 112990, 4145, -1000, -1000, 3999, 112990,
	3542, 2692, 2783, 2944, 868, 93170, 1094, 2614, -46, -1000,
	2226, 38933, 3802, -178, -1000, -1000, -1000, 1135, 76318, 65681,
	55539, 4253, -179, -1000, -1000, -1000, -1000, -1000, 92552, 1068,
	142090, 142090, 4252, 92552, 92552, 92552, -36, 653, -1000, 935,
	932, 929, -1000, -1000, -1000, -1000, -1000, -1000, 928, 927,
	919, 918, 916, -1000, -1000, 1080, -1000, -1000, -192, 69453,
	1080, 69453, 142, -1000, 2630, -1000, 112990, 69453, -1000, 24769,
	142090, 216, 3149, -1000, 87508, -1000, -1000, -1000, -1000, -1000,
	1086, -1000, 4182, -108, -1000, -1000, -1000, -1000, 2549, 2735,
	2549, 2162, 2147, -1000, -1000, -1000, 2642, -1000, -1000, -1000,
	-1000, 3052, 3812, 28577, 3926, 10864, 55539, 55539, 739, 651,
	513, 10864, 55539, 55539, 85644, 15220, -184, 55539, 55539, -1000,
	55539, 819, 162019, -1000, 4178, 55539, 408, 404, -1000, -1000,
	-1000, 4112, -1000, -1000, -1000, 162019, 55539, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 403, -1000, 186, -1000, -1000, -1000,
	151360, -1000, 55539, 401, 3899, -1000, 400, 399, 10729, 554,
	156914, 156578, 156489, 387, -1000, -1000, 386, 385, 162019, 3429,
	162019, -1000, -1000, 1221, 1221, 1509, 1509, 1509, 1509, 4073,
	1095, 1128, 1030, 347, 347, 347, 618, 705, 705, 347,
	347, 347, 705, 3347, 2957, 652, 6424, -1000, -1000, 162019,
	162019, 384, -1000, -1000, -1000, -65, 379, 2508, -1000, -1000,
	3240, 3898, 162019, -1000, 65681, 3240, 3240, -1000, -1000, 2591,
	142090, 162019, 65681, -1000, 3493, -1000, 22855, 22213, -1000, 28577,
	-1000, -1000, -185, -1000, 85644, -1000, -1000, -1000, 4091, -1000,
	78820, -1000, -1000, 46, -1000, 5598, -1000, 915, -1000, -1000,
	92552, 92552, 4251, 4250, -1000, 4177, 4176, 2556, 4175, 3119,
	-1000, -270, -164, 142090, 142090, 142090, -1000, 2636, -1000, 815,
	4243, 830, 28577, 375, -1000, -1000, -1000, -92, -92, 142090,
	142090, 142090, 3325, 112990, 142090, 2035, 155073, -92, -1000, -1000,
	-1000, -1000, -1000, -1000, 3750, 162019, 3418, 3232, 3231, 142090,
	142090, -1000, 124128, 38298, 1773, 124746, 142090, 3539, -1000, 3532,
	-1000, 1232, 2872, 156242, 66309, -1000, 66309, 142090, -1000, -1000,
	-1000, -1000, 2277, 1749, 4236, 1300, -1000, 3852, 142090, -1000,
	142090, -1000, -1000, -1000, 124128, -1000, 142090, 142090, 112990, 142090,
	-1000, 155073, 3492, -186, 162019, -37, -1000, 912, -1000, 1504,
	-1000, 24133, 142090, 155073, 112990, 142090, 155073, 112990, 142090, -1000,
	3053, 3531, 1215, 142090, -1000, 3512, 142090, 1214, -1000, -1000,
	142090, 2567, -1000, -1000, 3478, -1000, 162019, 160066, 142, 55539,
	3491, -201, 28577, -1000, 4174, 4173, 3507, 3858, -1000, 142090,
	4166, 142090, 112990, 3748, -1000, -1000, -1000, -1000, 911, 907,
	906, 904, 903, 895, 4072, 122892, -1000, 1083, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1985, 1377,
	1373, 2690, 2684, 2633, -38, 2493, 1082, -41, 650, -1000,
	1082, -1000, 92552, 69453, 4234, 2182, 76946, 55539, 55539, -1000,
	3081, -1000, 119794, 94406, 2716, -1000, -1000, 648, 142090, 142090,
	637, -1000, 142, -1000, 4231, 124128, 636, -1000, 2627, -1000,
	814, -1000, -1000, 238, -202, 155073, 2528, 142, 112990, -1000,
	571, 1075, 571, 372, -42, -1000, 3613, 1229, 28577, 112990,
	3505, 2949, 868, 93170, -1000, 1657, 3033, -1000, -44, -1000,
	715, 142, 2614, -1000, -46, 162019, -1000, 894, 371, -1000,
	3745, -1000, -1000, -209, -1000, -1000, 6868, 6868, 92552, 69453,
	92552, 92552, 92552, 55539, 69453, 92552, -1000, 1080, 3998, -1000,
	-192, -1000, 2862, 1068, 1068, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 28577, 1978, -1000, 630, 628, -1000,
	-1000, -1000, -1000, 3812, 10864, 10864, 55539, 55539, 55539, 10864,
	15220, -210, -1000, 10864, 10864, -65, -1000, -1000, 160021, -1000,
	-1000, -1000, 162019, -1000, 23497, 2555, -1000, 155818, -1000, 37028,
	-1000, -1000, 55539, 55539, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 59984, 3324, 626, 85644, -1000, -1000, 366, 1096,
	55539, 57444, 2740, 1096, 1096, -1000, -212, -1000, -1000, -1000,
	4091, -1000, 4091, 46, -1000, 142090, -1000, -1000, -1000, 28577,
	-1000, 92552, -1000, -1000, -1000, -1000, -1000, 4230, 4228, 2758,
	4224, 4223, -1000, -1000, -1000, 3483, -116, -133, -149, -1000,
	741, -1000, 4222, -1000, -1000, 206, 198, 192, 155073, 3304,
	185, 3146, 3145, -92, -1000, 142, -1000, -1000, -1000, -1000,
	-1000, -1000, 3140, 3997, -1000, 2303, -1000, 142090, 142090, -1000,
	142090, -1000, 28577, 142090, 3271, 1402, -1000, 1033, 2966, 621,
	59984, 1263, 112990, 1012, 3228, 3226, -1000, 4031, 3885, 3186,
	-215, -1000, 142090, 55539, 142090, -229, -231, 2751, -1000, -1000,
	1262, 1399, 55539, 1253, -1000, -1000, -1000, 85644, 620, 2648,
	2648, -1000, -232, -237, -1000, -1000, -1000, 55539, 1367, 142090,
	37663, -1000, 4221, 3804, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 142090, 142090, -1000, -1000, -1000, 142090, 3804, 142090,
	-1000, 55539, -1000, 159590, 55539, 1354, -1000, -1000, -1000, 4161,
	2648, 28577, 2648, -1000, 2648, 3858, 1292, 92552, 55539, 1705,
	69453, 69453, 55539, -1000, -1000, -1000, 2700, 142090, 155073, 112990,
	2428, 2428, 3417, -1000, -1000, -1000, 2902, 2902, -1000, -47,
	1082, -1000, 1862, -1000, 162019, 162019, 2552, 4220, -1000, -1000,
	-1000, -1000, 2965, -1000, -1000, -1000, 142090, 2964, 3211, 66309,
	619, 615, 142090, 1069, -1000, -238, 94406, 1048, 1043, -1000,
	74449, -1000, -1000, -1000, -1000, 571, 3996, -1000, 3060, 3995,
	-1000, 4155, 614, 604, 142090, 2679, 603, 28577, 3789, 868,
	93170, -1000, 3610, 2226, -1000, 2777, 142090, 3784, -1000, 3033,
	602, 1068, 601, 1068, -1000, -239, -1000, -1000, -1000, -1000,
	-1000, 162019, -1000, -1000, -1000, -1000, 1539, 1080, -51, -1000,
	1004, 1003, -1000, -1000, -1000, -1000, 112990, 112990, 55539, 55539,
	-1000, 10864, 10864, 10864, -1000, 345, -1000, -1000, 2614, 3881,
	-1000, -56, 155739, 155694, 6024, 59984, 85644, -240, -1000, -1000,
	142090, 162019, -57, -1000, 162019, 599, 598, 489, -1000, -1000,
	-1000, 813, 769, -1000, -1000, -1000, -1000, 4219, -1000, -1000,
	-1000, 155073, 155073, 155073, 4218, -1000, 155073, 155073, 155073, -92,
	155073, 155073, 1980, 1964, -1000, 123510, 142090, -1000, -1000, 2200,
	2364, -1000, -1000, 142090, 2780, -1000, -1000, -1000, 1070, 55539,
	6424, 59984, 589, 55539, -1000, 586, 585, 3994, 3726, -1000,
	3072, 3307, 2257, 66309, -1000, 3812, -1000, 20060, -1000, 1223,
	2373, -1000, -1000, -1000, -1000, 162019, 59984, 3858, 66309, -1000,
	-1000, 584, 582, 162019, 580, 889, 3299, -1000, -1000, -1000,
	-1000, -108, -108, -1000, -1000, 162019, 142, 162019, 579, 3960,
	-1000, -1000, -1000, -1000, 2648, 112990, -1000, 162019, -1000, -1000,
	-1000, -1000, 162019, 876, -1000, -1000, -1000, 1353, -1000, -1000,
	-1000, -1000, -1000, 4217, 3296, 99362, -1000, -245, 2384, 85644,
	-1000, 1048, -1000, -1000, 2716, 578, -1000, 1034, 3062, 3062,
	-247, 66309, 66309, -248, 2662, 3039, -1000, 330, 3992, 1043,
	-1000, 4070, -1000, 1135, -1000, 3991, 142, 3743, -1000, 142,
	-1000, 4145, 66309, -1000, 112990, 66309, 2672, 2480, 2912, 93170,
	-1000, 2944, -1000, -1000, -253, 142090, 2226, -1000, -1000, 92552,
	-1000, -1000, 4087, -1000, 2862, -1000, 142090, -1000, 142090, -1000,
	-1000, -254, -255, -1000, 2392, 55539, 37028, -1000, -1000, 6024,
	-261, -1000, -58, -1000, 3985, 57444, 4216, 4215, 4211, -1000,
	-1000, -1000, -270, -270, -270, -1000, -92, -92, -92, -92,
	-92, 142090, 142090, -1000, 2297, -1000, 2774, -1000, -1000, 3501,
	-1000, 3238, 577, 19724, 6424, 2894, 142090, 19400, 2528, 2528,
	-1000, 3964, 3244, -1000, -1000, 2531, 573, -1000, -1000, -1000,
	-1000, 1006, 142090, 1034, 3237, 112990, 6424, 1230, -262, 2549,
	2549, 55539, 36393, 2563, -1000, 55539, -1000, -1000, 3858, 69453,
	155073, -1000, 155073, 2663, -1000, 3274, 5735, -1000, 2662, 142090,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1223, -263, -269, -1000, -1000, 3846, -1000, 3742,
	3081, 142, -1000, -1000, -1000, 142, -1000, 4210, 1075, 328,
	-271, 1229, -272, 112990, 2278, -1000, 868, -1000, 2949, 1135,
	3697, -1000, -278, -1000, -1000, -1000, -279, -280, -1000, -1000,
	326, 56809, 56809, 56809, -65, -68, -1000, 142090, 572, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 161, 153, -1000, -1000,
	3474, 985, -1000, 963, 2148, 323, 1250, 322, 240, -1000,
	-1000, -1000, 3186, -1000, 142090, -1000, -1000, -1000, 985, 571,
	-1000, 55539, 1223, -285, -1000, 1213, -286, -1000, 1212, -291,
	-1000, 3291, -1000, -292, 2648, -1000, -270, 272, 2428, 1074,
	3936, 2643, 5735, -1000, 4076, 93170, -1000, -1000, -1000, 2904,
	-293, -1000, -1000, 2257, 1223, 2531, 2805, -1000, 2552, 1069,
	-1000, -1000, -1000, -1000, 1223, 563, 2257, 562, 1757, 868,
	-1000, -1000, 1361, 3789, 3695, 1523, 1068, -1000, -1000, -1000,
	3504, -1000, 61254, 2699, 2135, 158878, 3504, 3504, -1000, -1000,
	155073, 155073, 142090, 1034, 3917, -1000, 967, 966, 1706, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1135, -294, -1000,
	2894, 162019, 1034, -1000, 2549, 3137, -1000, 2549, 3290, -1000,
	2535, -1000, -1000, -1000, -1000, 3288, -1000, 2109, 4059, -1000,
	-1000, 3957, 55539, -1000, -1000, -1000, -1000, -1000, -1000, 1034,
	142090, 2531, 2257, 1034, 2122, 2102, 4209, 1048, 2662, 2257,
	66309, 2531, 66309, 2517, -1000, 142090, -1000, 2480, 1511, -1000,
	1885, -1000, -1000, 2163, 4027, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -92, -92, -1000, -1000, 873, -1000, 3715, -1000,
	1251, 2472, 2472, -1000, -1000, 963, -1000, -1000, 561, -1000,
	558, -1000, 155073, 2621, -1000, -1000, -1000, 162019, -1000, -1000,
	1034, 2531, 1135, -1000, 4205, -1000, 2662, -1000, 2531, -299,
	1034, -300, 2573, -1000, -1000, -108, 2278, -1000, 1871, 76318,
	2133, -1000, -1000, 2606, 56174, 55539, -1000, 4051, -1000, -1000,
	2995, -1000, 3186, 55539, 55539, 272, 73831, 17784, 1135, 1034,
	1477, -1000, 2904, 1034, 1223, 1135, 2257, 1937, 868, 1757,
	76318, -277, -1000, -1000, -1000, 162019, -1000, -1000, -1000, -1000,
	-302, -317, -1000, -109, 122892, -319, -1000, -1000, -1000, 1477,
	1135, -1000, 1150, -1000, -1000, -1000, 1135, 2257, 1477, 2531,
	-1000, -1000, 2272, 155073, 2517, -277, -1000, 2531, 1345, -322,
	-1000, -1000, 1477, -1000, 1477, 2531, -1000, 1034, -1000, 2573,
	-1000, -1000, -1000, 557, -1000, -1000, -1000, 1034, 1135, 1937,
	55539, 1135, 1477, -1000, -325, 1477, -1000, 2531, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5164, 5162, 31, 5161, 5160, 5159, 5158, 5156, 5155,
	5153, 5152, 5151, 5149, 5148, 5146, 180, 5145, 5144, 5143,
	5142, 5140, 5138, 5136, 5134, 5133, 5132, 5131, 5130, 5127,
	5126, 5125, 5121, 5120, 5118, 5117, 5113, 5111, 5109, 5107,
	5101, 5100, 5099, 5097, 5096, 5095, 5093, 5090, 5086, 5081,
	5078, 5077, 5076, 5075, 5073, 5072, 5071, 5070, 5069, 5068,
	5067, 5065, 5063, 5061, 5059, 5053, 5052, 5049, 5048, 5047,
	5045, 5044, 5042, 5033, 5032, 5031, 5030, 5029, 5028, 5027,
	5025, 5024, 5023, 5021, 66, 5020, 5016, 5012, 5008, 5006,
	5003, 5002, 4999, 4997, 4996, 4995, 4994, 4993, 4992, 4990,
	4989, 4987, 4985, 4984, 4983, 4982, 4981, 75, 4980, 325,
	4978, 4976, 4973, 4972, 4971, 4969, 4967, 4966, 4965, 4962,
	4961, 4960, 4957, 4954, 324, 4951, 16, 200, 4950, 4949,
	26, 4948, 4947, 323, 4946, 4945, 4944, 4942, 4941, 331,
	4940, 4938, 4937, 4936, 4935, 368, 4930, 4925, 4924, 4923,
	4921, 4920, 103, 156, 4918, 4916, 3254, 4914, 4913, 4911,
	4910, 4909, 4908, 4907, 307, 310, 4906, 4905, 4902, 304,
	208, 4901, 322, 4900, 4899, 4898, 4895, 4894, 4892, 4889,
	4887, 4886, 4884, 4883, 4882, 4881, 4879, 4876, 4875, 4871,
	4869, 4868, 4867, 4866, 4865, 4862, 4861, 4860, 4859, 4858,
	4857, 4856, 4855, 4854, 4853, 4850, 4848, 4844, 4842, 4840,
	4818, 4817, 4816, 4815, 4813, 4812, 4811, 303, 263, 191,
	4809, 4806, 4805, 4804, 4803, 4801, 319, 318, 4800, 4791,
	4787, 4786, 4785, 3950, 4784, 4783, 4782, 4780, 4779, 4778,
	4777, 4775, 4774, 147, 11, 90, 4770, 4769, 115, 107,
	112, 101, 123, 119, 4764, 4761, 141, 4760, 155, 139,
	4759, 144, 126, 33, 6, 314, 290, 3189, 288, 4755,
	4751, 4749, 295, 236, 4748, 292, 4747, 4746, 4740, 4739,
	4738, 4737, 84, 62, 250, 4736, 166, 4735, 4734, 170,
	205, 222, 221, 210, 216, 94, 64, 131, 100, 73,
	55, 21, 111, 255, 32, 257, 5, 7, 313, 4732,
	311, 13, 169, 14, 40, 4721, 4720, 4711, 4710, 4518,
	138, 4704, 315, 293, 206, 4703, 4702, 4701, 1008, 4697,
	4687, 60, 285, 116, 143, 129, 142, 157, 4686, 187,
	207, 46, 4685, 199, 78, 4681, 4680, 134, 121, 10043,
	9978, 4679, 4676, 175, 92, 165, 10732, 211, 181, 237,
	120, 160, 202, 201, 4675, 164, 4674, 174, 185, 217,
	67, 4673, 104, 4671, 3978, 109, 223, 196, 7368, 4669,
	4668, 4667, 102, 4666, 130, 4663, 4661, 81, 25, 3,
	2, 168, 47, 43, 28, 4660, 45, 153, 59, 42,
	4657, 38, 4652, 4649, 4648, 4647, 57, 4645, 65, 213,
	4644, 4643, 326, 4642, 108, 68, 80, 4641, 190, 275,
	4639, 279, 162, 4638, 4637, 228, 239, 242, 226, 268,
	4636, 83, 283, 4634, 4633, 4632, 4630, 4621, 327, 167,
	8, 154, 4615, 4611, 183, 4607, 63, 294, 244, 4604,
	70, 4602, 4600, 220, 72, 179, 329, 188, 277, 146,
	281, 229, 284, 4599, 4592, 4590, 231, 4587, 4586, 274,
	198, 4585, 4583, 267, 332, 110, 58, 12, 214, 106,
	289, 98, 235, 194, 4582, 245, 177, 4574, 182, 4570,
	118, 4569, 330, 224, 266, 52, 15, 19, 125, 128,
	4568, 10, 286, 193, 251, 148, 4566, 8527, 3008, 1043,
	282, 4565, 184, 150, 95, 158, 192, 317, 97, 4559,
	4558, 4425, 4557, 4549, 4544, 4539, 232, 4536, 4535, 258,
	197, 259, 4531, 173, 241, 4530, 124, 85, 69, 34,
	145, 99, 320, 135, 276, 204, 305, 4529, 4528, 4527,
	230, 4525, 76, 151, 246, 4524, 248, 308, 74, 4523,
	1180, 4521, 186, 2913, 82, 189, 4520, 272, 4519, 4517,
	4516, 4515, 4512, 4511, 4510, 2684, 287, 4509, 4507, 4506,
	51, 240, 4505, 238, 212, 218, 89, 77, 234, 114,
	3612, 159, 127, 243, 61, 4, 1, 788, 4504, 4741,
	96, 4503, 0, 15560, 11511, 13847, 4502, 4501, 14694, 4499,
	8298, 4498, 4496, 4494, 265, 93, 4493, 4492, 4491, 133,
	4490, 105, 4489, 4487, 91, 4486, 36, 20, 29, 39,
	37, 846, 482, 4485, 4483, 48, 163, 23, 4482, 321,
	280, 4481, 4478, 4477, 4475, 122, 4474, 53, 4473, 54,
	4472, 4471, 56, 22, 50, 4468, 4466, 252, 195, 3882,
	203, 178, 4465, 152, 4464, 4463, 300, 87, 176, 4461,
	4460, 312, 253, 254, 113, 4459, 306, 4457, 247, 4456,
	79, 35, 4455, 4454, 297, 137, 136, 71, 301, 161,
	49, 4452, 4451, 4450, 4448, 227, 4447, 4446, 4445, 4444,
	4443, 140, 171, 4442, 86, 4441, 4440, 4439, 44, 264,
	225, 4438, 30, 4437, 4434, 4433, 271, 270, 316, 215,
	261, 4430, 4429, 209, 4428, 4426, 4423, 309, 4420, 4419,
	3948, 338, 4418, 41, 4417, 4416, 4414, 18, 4409, 4406,
	249, 3685, 4405, 4402, 9, 4401, 233,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 14, 14, 10, 10, 10, 10, 11, 11, 11,
	11, 11, 63, 63, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	20, 20, 20, 20, 20, 20, 20, 42, 44, 43,
	37, 37, 38, 38, 39, 40, 40, 45, 47, 46,
	48, 49, 49, 50, 50, 50, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 23, 23,
	51, 51, 24, 24, 53, 53, 25, 25, 54, 54,
	671, 671, 671, 672, 672, 673, 673, 673, 28, 56,
	58, 58, 478, 478, 478, 21, 22, 22, 22, 22,
	674, 674, 674, 674, 41, 29, 57, 34, 34, 34,
	34, 34, 246, 246, 246, 246, 27, 27, 52, 52,
	292, 292, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 670, 670, 294, 294, 293, 279, 279, 280,
	280, 281, 281, 675, 675, 295, 295, 295, 296, 296,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	564, 564, 564, 595, 595, 595, 595, 597, 597, 722,
	722, 723, 723, 723, 723, 723, 155, 155, 452, 452,
	452, 72, 72, 72, 72, 72, 660, 660, 248, 248,
	248, 250, 250, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 96, 96, 97, 97, 287, 287, 286,
	286, 286, 286, 286, 286, 286, 681, 681, 680, 718,
	718, 679, 679, 682, 682, 682, 247, 247, 247, 93,
	93, 114, 114, 151, 151, 151, 151, 151, 151, 151,
	151, 152, 152, 153, 153, 691, 691, 691, 251, 251,
	251, 253, 253, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	258, 19, 19, 134, 134, 134, 134, 134, 134, 134,
	129, 129, 599, 599, 600, 600, 242, 242, 243, 243,
	243, 243, 244, 244, 245, 245, 245, 87, 87, 255,
	255, 257, 257, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 75, 75, 75, 75,
	75, 76, 76, 76, 76, 76, 76, 77, 77, 77,
	77, 77, 77, 78, 78, 85, 85, 85, 85, 85,
	85, 85, 85, 219, 219, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 92,
	92, 92, 92, 92, 103, 103, 692, 692, 693, 693,
	711, 697, 697, 698, 698, 701, 701, 701, 702, 702,
	702, 702, 702, 710, 710, 710, 710, 710, 704, 703,
	705, 705, 706, 706, 708, 708, 708, 708, 708, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 696, 712, 713, 713,
	714, 714, 715, 715, 715, 122, 122, 122, 717, 717,
	716, 716, 699, 699, 700, 700, 67, 707, 707, 725,
	725, 68, 69, 70, 71, 694, 694, 724, 724, 724,
	724, 724, 724, 724, 724, 724, 724, 724, 724, 724,
	724, 724, 724, 724, 726, 726, 727, 727, 728, 728,
	728, 728, 728, 728, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 728, 728, 728, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 104, 104, 410, 410, 373,
	373, 105, 105, 105, 106, 106, 107, 107, 89, 89,
	89, 657, 657, 658, 664, 729, 729, 555, 555, 554,
	554, 109, 109, 451, 451, 110, 110, 110, 110, 110,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 120, 120, 120, 120,
	120, 121, 121, 121, 118, 118, 118, 115, 115, 115,
	113, 113, 113, 119, 119, 119, 663, 359, 359, 117,
	117, 117, 116, 116, 116, 426, 426, 427, 429, 428,
	123, 123, 123, 123, 374, 124, 124, 124, 124, 124,
	124, 124, 124, 127, 127, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 557, 557,
	5, 5, 285, 285, 284, 284, 284, 284, 6, 6,
	6, 290, 290, 289, 288, 125, 125, 125, 519, 519,
	130, 130, 130, 467, 467, 131, 131, 131, 131, 131,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 667, 667,
	419, 419, 322, 322, 322, 322, 143, 143, 143, 143,
	144, 144, 144, 144, 145, 145, 228, 228, 161, 161,
	161, 161, 160, 160, 160, 160, 160, 160, 160, 160,
	79, 79, 79, 80, 80, 81, 81, 82, 82, 83,
	83, 84, 84, 84, 84, 84, 164, 164, 33, 33,
	33, 33, 165, 165, 719, 719, 167, 163, 163, 163,
	163, 163, 163, 163, 162, 162, 166, 166, 166, 166,
	168, 170, 170, 170, 170, 170, 169, 169, 169, 169,
	169, 171, 171, 589, 589, 437, 437, 587, 587, 611,
	611, 588, 588, 380, 380, 380, 380, 380, 381, 381,
	381, 598, 598, 598, 598, 598, 598, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 229, 229, 229,
	230, 230, 235, 235, 236, 236, 236, 237, 237, 237,
	234, 234, 234, 231, 231, 232, 232, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 240, 240, 238,
	238, 239, 239, 731, 731, 730, 730, 241, 241, 241,
	241, 241, 200, 200, 200, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 438, 438,
	203, 203, 203, 187, 187, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 254, 254, 254, 254, 254,
	179, 179, 179, 179, 179, 179, 179, 179, 180, 180,
	180, 174, 174, 189, 189, 189, 189, 189, 181, 181,
	182, 182, 182, 182, 183, 183, 183, 183, 211, 211,
	186, 186, 186, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 175, 175, 175, 175, 191, 191, 191, 191,
	474, 474, 474, 217, 217, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 214, 214, 214, 214, 214, 214, 683, 683, 684,
	684, 684, 207, 207, 207, 207, 207, 207, 535, 535,
	201, 201, 201, 201, 206, 206, 206, 206, 185, 185,
	185, 185, 209, 209, 209, 209, 457, 457, 198, 198,
	198, 199, 199, 199, 204, 204, 216, 205, 411, 411,
	202, 202, 208, 208, 208, 208, 210, 210, 210, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 177,
	177, 177, 177, 178, 178, 178, 178, 212, 212, 197,
	197, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 732, 732, 193, 193, 193, 192, 192, 192,
	192, 195, 195, 196, 196, 196, 196, 196, 196, 196,
	194, 184, 215, 665, 665, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 662, 662, 662, 662, 662, 666,
	666, 135, 135, 135, 135, 135, 135, 135, 146, 146,
	146, 146, 146, 146, 146, 149, 149, 136, 136, 136,
	136, 136, 136, 136, 139, 139, 137, 137, 137, 137,
	138, 138, 98, 98, 98, 98, 98, 18, 18, 18,
	99, 99, 313, 313, 263, 263, 263, 398, 398, 264,
	264, 388, 388, 388, 388, 259, 259, 260, 260, 261,
	262, 262, 100, 100, 733, 733, 733, 676, 676, 676,
	677, 677, 677, 677, 677, 677, 382, 382, 383, 383,
	499, 499, 499, 499, 499, 386, 386, 386, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 396, 397, 397,
	389, 389, 395, 394, 394, 393, 393, 392, 392, 390,
	391, 391, 391, 400, 400, 399, 402, 402, 401, 498,
	620, 620, 622, 622, 622, 622, 622, 622, 622, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 475, 475, 734, 734,
	735, 736, 618, 618, 618, 619, 614, 614, 615, 615,
	615, 615, 615, 384, 384, 385, 385, 385, 385, 616,
	617, 417, 417, 539, 621, 621, 623, 623, 625, 737,
	737, 737, 737, 737, 737, 738, 738, 738, 497, 497,
	496, 496, 495, 495, 408, 408, 626, 626, 626, 626,
	627, 627, 627, 627, 627, 630, 629, 628, 628, 628,
	628, 628, 102, 102, 102, 454, 454, 453, 453, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 224, 224, 325,
	325, 325, 95, 95, 95, 15, 15, 15, 15, 15,
	15, 15, 340, 340, 16, 16, 16, 16, 678, 678,
	678, 101, 101, 101, 101, 101, 101, 406, 406, 406,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 669, 669, 668, 668,
	326, 326, 740, 740, 108, 108, 108, 108, 108, 108,
	108, 108, 558, 558, 559, 559, 94, 94, 94, 94,
	94, 476, 476, 473, 473, 472, 472, 416, 416, 537,
	537, 537, 538, 330, 330, 331, 331, 282, 282, 282,
	477, 477, 477, 477, 36, 35, 26, 26, 30, 30,
	31, 31, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 32, 32, 60, 60, 60, 60, 61, 61, 61,
	61, 64, 64, 65, 65, 59, 59, 59, 59, 62,
	62, 55, 55, 66, 66, 66, 66, 66, 685, 687,
	687, 686, 686, 690, 690, 690, 690, 690, 690, 688,
	688, 361, 361, 689, 689, 720, 720, 721, 721, 142,
	142, 147, 147, 147, 147, 147, 148, 148, 148, 148,
	150, 150, 150, 150, 159, 159, 220, 220, 220, 220,
	220, 220, 220, 73, 73, 86, 86, 157, 742, 742,
	742, 158, 158, 158, 221, 221, 221, 221, 222, 222,
	223, 223, 741, 741, 323, 323, 492, 492, 493, 493,
	743, 743, 494, 494, 494, 494, 494, 316, 315, 317,
	317, 318, 318, 91, 91, 91, 304, 304, 303, 306,
	306, 305, 307, 307, 308, 308, 301, 301, 601, 601,
	310, 310, 310, 311, 311, 297, 297, 298, 298, 299,
	299, 300, 300, 314, 314, 596, 596, 744, 744, 133,
	133, 133, 227, 227, 372, 372, 372, 485, 485, 485,
	409, 409, 337, 337, 491, 491, 491, 491, 491, 450,
	450, 450, 226, 226, 424, 424, 440, 440, 441, 441,
	551, 551, 442, 140, 140, 141, 141, 156, 156, 267,
	267, 265, 265, 265, 265, 265, 265, 265, 265, 272,
	272, 273, 273, 274, 274, 275, 276, 276, 276, 276,
	430, 430, 277, 277, 277, 266, 266, 266, 268, 268,
	268, 268, 268, 268, 268, 271, 271, 271, 271, 278,
	278, 278, 270, 270, 637, 637, 637, 639, 639, 641,
	641, 640, 640, 636, 636, 638, 638, 739, 739, 456,
	456, 456, 405, 407, 403, 403, 404, 404, 414, 414,
	412, 413, 413, 415, 415, 536, 536, 536, 283, 283,
	283, 447, 447, 447, 447, 448, 448, 481, 481, 479,
	479, 479, 479, 480, 480, 482, 482, 482, 483, 483,
	484, 484, 444, 444, 445, 445, 446, 446, 446, 446,
	515, 515, 269, 269, 269, 421, 421, 421, 422, 422,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 506, 506, 504, 504, 504, 504, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 541, 542, 542, 423,
	423, 543, 488, 488, 489, 489, 486, 486, 487, 487,
	490, 490, 655, 655, 655, 656, 656, 534, 534, 544,
	544, 544, 544, 544, 544, 530, 530, 531, 531, 532,
	532, 533, 533, 552, 553, 553, 460, 460, 460, 460,
	458, 458, 461, 461, 461, 461, 461, 459, 459, 545,
	545, 545, 545, 449, 449, 225, 225, 546, 546, 546,
	546, 547, 548, 548, 549, 549, 500, 501, 501, 560,
	560, 560, 560, 562, 420, 420, 420, 420, 420, 613,
	612, 612, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 577, 577, 577, 577, 577, 577, 577,
	563, 563, 563, 563, 563, 567, 567, 567, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 568,
	568, 573, 573, 574, 574, 574, 569, 570, 575, 575,
	575, 575, 745, 745, 579, 579, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 565, 565, 565, 572, 572,
	572, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 468, 468, 470, 470, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 509,
	509, 509, 509, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 631, 631,
	631, 631, 631, 631, 631, 631, 511, 511, 634, 634,
	635, 635, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 642, 642, 643, 643, 645, 645, 646,
	646, 647, 648, 648, 648, 649, 650, 650, 644, 644,
	651, 651, 651, 651, 652, 652, 653, 653, 653, 653,
	653, 654, 654, 654, 654, 654, 521, 521, 522, 522,
	528, 528, 528, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 379, 379,
	378, 327, 327, 327, 327, 327, 327, 435, 435, 433,
	433, 433, 436, 436, 434, 434, 432, 432, 431, 431,
	518, 518, 516, 516, 520, 520, 462, 462, 578, 578,
	578, 578, 578, 578, 578, 578, 463, 463, 463, 471,
	464, 464, 465, 465, 465, 465, 465, 512, 513, 466,
	466, 466, 514, 514, 523, 527, 527, 526, 525, 525,
	524, 524, 502, 502, 503, 503, 443, 443, 746, 746,
	439, 439, 550, 550, 550, 550, 607, 607, 376, 376,
	425, 425, 375, 375, 367, 367, 368, 368, 368, 368,
	418, 418, 529, 529, 580, 580, 581, 581, 582, 582,
	583, 583, 584, 585, 586, 517, 517, 348, 347, 334,
	335, 346, 345, 344, 333, 336, 341, 342, 343, 338,
	339, 355, 354, 353, 302, 309, 360, 362, 362, 365,
	365, 366, 364, 363, 363, 350, 351, 352, 556, 332,
	369, 369, 370, 370, 370, 371, 371, 371, 371, 328,
	328, 329, 329, 356, 356, 357, 358, 358, 349, 349,
	349, 319, 319, 319, 320, 320, 321, 321, 594, 594,
	591, 591, 591, 592, 592, 592, 695, 593, 593, 593,
	593, 590, 590, 590, 590, 590, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 603, 603, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 605, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 610, 610,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 9, 7, 9,
	5, 6, 8, 7, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 1, 1, 1, 0, 1, 6, 6,
	4, 6, 2, 1, 1, 4, 8, 7, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	4, 4, 2, 1, 1, 3, 1, 3, 2, 4,
	3, 2, 3, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 1, 1, 1, 1, 3, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 3, 3,
	3, 1, 3, 12, 3, 5, 4, 1, 3, 3,
	3, 3, 2, 4, 4, 4, 1, 1, 2, 1,
	4, 1, 0, 3, 3, 0, 4, 6, 0, 6,
	4, 4, 4, 5, 7, 6, 8, 7, 9, 8,
	2, 1, 3, 1, 3, 3, 3, 0, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 3, 3, 1, 1,
	1, 3, 3, 6, 4, 9, 7, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 2, 2,
	1, 2, 3, 3, 4, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 4, 3, 6, 6, 6, 6, 6,
	8, 4, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 6,
	3, 8, 5, 3, 12, 4, 2, 0, 1, 0,
	1, 1, 0, 1, 3, 1, 3, 3, 3, 3,
	2, 2, 1, 1, 1, 1, 2, 1, 1, 1,
	1, 0, 1, 2, 2, 2, 1, 1, 1, 4,
	5, 1, 1, 1, 1, 3, 3, 2, 2, 1,
	2, 2, 2, 2, 1, 1, 1, 2, 1, 1,
	3, 0, 1, 4, 0, 4, 6, 3, 1, 3,
	2, 1, 3, 2, 1, 3, 5, 1, 2, 1,
	0, 6, 6, 6, 8, 1, 0, 4, 3, 3,
	4, 3, 4, 4, 4, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 1, 0, 1, 0, 4, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 10,
	5, 1, 3, 3, 1, 1, 0, 2, 0, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	4, 3, 1, 2, 3, 2, 2, 2, 4, 6,
	3, 1, 2, 2, 7, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	7, 4, 7, 8, 8, 9, 11, 11, 11, 6,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	10, 13, 10, 13, 5, 8, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 4, 4,
	3, 4, 1, 1, 1, 1, 5, 4, 5, 3,
	3, 2, 2, 6, 3, 3, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 2, 1, 3, 3, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 1, 2, 2, 2,
	9, 2, 1, 0, 1, 1, 0, 1, 2, 0,
	2, 2, 0, 2, 2, 2, 2, 1, 2, 3,
	3, 4, 4, 4, 4, 3, 3, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 3,
	6, 8, 3, 3, 3, 4, 8, 6, 4, 5,
	5, 5, 5, 5, 3, 0, 1, 1, 1, 1,
	4, 4, 3, 4, 4, 3, 4, 4, 1, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	5, 7, 7, 4, 2, 6, 4, 3, 2, 3,
	4, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 5, 3, 5, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 6, 4,
	2, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 7, 5, 2, 0,
	3, 3, 4, 3, 3, 3, 5, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 3, 4,
	5, 4, 4, 5, 6, 5, 5, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 4, 3, 4,
	4, 5, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 6, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 2,
	3, 2, 2, 3, 2, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 1, 1, 1, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 2, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 3, 6, 4, 2, 3, 5, 5,
	5, 2, 5, 5, 2, 2, 2, 0, 1, 1,
	3, 4, 11, 12, 10, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	6, 1, 3, 1, 2, 0, 1, 2, 3, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	3, 0, 4, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 2, 3, 1, 4, 2, 3,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 8, 11, 5, 4, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	2, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	5, 7, 2, 6, 7, 4, 4, 5, 2, 4,
	6, 6, 8, 6, 7, 8, 9, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 6, 8, 8, 4, 7, 3,
	0, 7, 10, 1, 1, 1, 1, 1, 2, 3,
	0, 3, 0, 3, 0, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 2, 1, 2, 3, 2,
	2, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 15, 18, 3, 1, 0, 4, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 7, 10, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 5, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 3, 0, 1, 3, 0, 3, 1, 3,
	1, 2, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 2, 2, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 667, -3, -221, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -220, -229, -230, -231, -232, -241, -225, -222,
	-223, -4, -72, -74, -88, -109, -111, -124, -134, -133,
	-135, -143, -151, -146, -129, -79, -156, -160, -172, -224,
	-226, -227, 33, 32, 107, 85, 166, 138, 148, 219,
	420, 472, 484, 437, 153, 460, 442, -166, -167, 506,
	-73, -86, -158, -157, 78, 139, 183, 324, 452, 590,
	53, 158, -7, -15, -33, -19, 30, 49, -75, -76,
	-77, -78, 67, -95, -90, -104, -96, -89, -92, -93,
	-724, 110, -638, -112, -116, -150, -114, -728, 174, 241,
	-136, -137, -138, 402, -144, -145, 463, -147, -148, -149,
	466, 175, -81, -80, 168, -265, -267, -163, -162, -164,
	-228, -173, -174, -175, -176, -177, -178, -180, -181, -183,
	-211, -184, -185, -186, -187, -188, -189, -190, -194, -214,
	-191, -192, -193, -196, -195, -197, -202, -198, -199, -200,
	-201, -203, -204, -206, -207, -208, -209, -210, -212, -213,
	512, -205, -215, -182, -216, 580, 529, 87, 476, 21,
	-8, -9, -10, -11, -12, -13, -14, -18, -17, -66,
	-5, -6, -20, -97, -91, -94, -98, -99, -100, -108,
	-101, -102, -103, -637, -113, -115, -118, -120, -121, -117,
	-119, -122, 461, 638, -268, -266, 664, 643, 597, -179,
	-23, -28, -24, -25, -27, -29, -26, -30, -31, -32,
	-51, -56, -53, -54, -52, -55, -57, -58, -59, -60,
	-61, -62, -63, -64, -65, -35, -41, -42, -36, -37,
	-38, -39, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -21, -22, -34, -67, -68, -70, -69, -71, 625,
	634, -271, -269, -270, -278, 498, 605, 552, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 667, 667, 667, 667, 667, -374, 2, -350, -356,
	-357, -358, -349, -319, -605, -610, 4, -602, -608, 182,
	252, 362, 21, 22, 24, 23, 25, 26, 27, 28,
	30, 31, 41, 43, 44, 45, 47, 48, 49, 50,
	51, 52, 53, 57, 59, 63, 64, 65, 66, 67,
	68, 69, 73, 78, 79, 84, 85, 86, 87, 88,
	89, 90, 91, 97, 94, 95, 96, 98, 99, 101,
	103, 104, 105, 106, 107, 108, 109, 111, 112, 113,
	115, 116, 117, 125, 126, 127, 128, 129, 131, 138,
	132, 139, 142, 136, 141, 137, 143, 144, 146, 147,
	148, 151, 152, 153, 155, 156, 157, 159, 160, 161,
	163, 164, 166, 167, 168, 171, 169, 172, 170, 173,
	174, 175, 176, 177, 180, 188, 189, 190, 195, 197,
	198, 199, 201, 202, 205, 206, 207, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 220, 221, 225, 227,
	228, 229, 230, 231, 232, 233, 239, 240, 241, 243,
	244, 245, 246, 247, 248, 253, 254, 255, 259, 261,
	267, 268, 619, 273, 269, 274, 275, 277, 281, 282,
	283, 284, 285, 286, 287, 289, 291, 290, 295, 293,
	297, 298, 301, 302, 303, 304, 305, 306, 310, 311,
	307, 312, 313, 315, 316, 319, 317, 320, 321, 318,
	322, 325, 326, 327, 328, 329, 330, 331, 332, 333,
	334, 335, 336, 323, 324, 339, 337, 341, 342, 343,
	344, 345, 360, 355, 356, 357, 349, 350, 346, 351,
	347, 348, 352, 353, 359, 354, 364, 365, 366, 367,
	370, 237, 260, 372, 373, 376, 378, 395, 381, 382,
	383, 386, 387, 390, 393, 394, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 407, 408, 410, 411,
	412, 414, 415, 416, 418, 420, 421, 423, 424, 425,
	427, 428, 429, 430, 431, 432, 433, 434, 436, 437,
	439, 438, 440, 442, 444, 445, 446, 452, 453, 460,
	454, 456, 457, 458, 459, 461, 462, 463, 464, 465,
	466, 470, 468, 469, 471, 472, 474, 475, 476, 477,
	478, 480, 482, 483, 487, 488, 491, 489, 509, 510,
	532, 484, 485, 486, 490, 492, 493, 494, 495, 497,
	496, 501, 499, 500, 502, 503, 504, 506, 508, 511,
	512, 514, 515, 516, 517, 518, 519, 520, 523, 525,
	526, 527, 528, 529, 530, 551, 531, 533, 537, 538,
	539, 540, 534, 535, 550, 542, 543, 544, 545, 547,
	548, 553, 554, 555, 556, 557, 558, 560, 561, 563,
	571, 584, 572, 573, 574, 575, 577, 580, 581, 582,
	583, 569, 585, 586, 589, 590, 591, 595, 592, 596,
	593, 594, 597, 599, 602, 603, 604, 611, 609, 610,
	612, 613, 615, 616, 614, 618, 620, 621, 626, 627,
	629, 630, 631, 37, 54, 55, 58, 60, 62, 74,
	75, 76, 80, 133, 134, 165, 178, 179, 191, 208,
	209, 222, 224, 234, 235, 236, 258, 262, 263, 265,
	271, 294, 369, 371, 388, 392, 409, 413, 417, 419,
	435, 479, 507, 521, 536, 541, 564, 565, 566, 567,
	576, 578, 605, 606, 607, 617, 628, -374, 2, -350,
	379, -343, 2, -319, -319, 420, 29, 2, 29, 408,
	500, 555, 557, 2, -667, -419, 548, 2, 29, -322,
	-319, 110, 219, 498, -343, 2, -667, 219, -419, 26,
	548, 2, -319, 2, 393, 177, 205, 23, 28, 71,
	82, 105, 151, 176, 200, -727, 395, 428, 482, 502,
	550, 561, 577, 2, 610, 316, 499, 552, 252, 128,
	582, 490, -678, 487, 488, 393, 426, 474, 223, 598,
	-323, 2, 484, -319, 316, 2, 667, 101, 79, 479,
	503, -169, 2, 306, 572, -170, -171, -168, 564, -589,
	490, 474, 339, -319, 667, 667, 667, 29, -332, 2,
	-319, -332, 2, -233, 2, -332, -730, -240, -239, -238,
	22, 453, 190, 287, 203, 242, 344, 423, 201, 51,
	-233, 2, 552, 252, 490, 128, 548, -354, 656, -356,
	-741, 2, 572, -741, 2, 667, 667, 2, 552, 399,
	610, 499, 205, 128, 432, 252, 582, 49, 151, 28,
	73, 558, 642, 490, -678, 639, 640, 316, 135, -660,
	2, -659, 4, -608, -602, -368, -367, 552, 558, 128,
	-358, -349, 656, -357, 667, 667, 667, 667, 2, 274,
	275, 430, 429, 503, 504, 29, 667, 667, 667, 667,
	667, 487, 177, 2, 176, -692, 23, 28, 71, 100,
	105, 135, 200, 395, 428, 502, 550, 554, 561, 577,
	-677, 531, 73, 490, -676, -678, 384, 316, 582, 151,
	-472, 128, 306, 217, 591, 557, 555, 588, 142, 261,
	594, 593, 667, 667, 667, -127, 2, 664, 33, 32,
	-126, -130, 153, 506, -258, 552, 266, 2, -319, 667,
	667, 667, 2, 274, 275, 487, 488, 29, 667, 667,
	203, -659, 548, 2, 667, 667, 667, 2, 29, 274,
	275, 487, 488, 266, 2, 73, 493, 667, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 667, 667, 667, 667, 667, 2, -218, 503, 531,
	230, 50, 49, 79, 29, 427, 84, 400, 129, 135,
	160, 583, 221, 548, 252, 253, 282, 100, 101, -474,
	47, 275, 73, 274, 488, -683, 487, -535, 553, 206,
	492, 500, 547, 91, 287, 484, 572, 574, 110, 599,
	475, 631, 432, 433, 545, 446, 542, 307, 169, 204,
	4, 128, 339, 474, 505, 291, 290, 584, 564, 306,
	483, 403, 89, 667, -739, 2, 552, 572, 2, -741,
	2, -741, 2, -742, 572, 628, 667, 667, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, -266,
	-268, -267, 667, 667, 667, 667, 667, 667, 667, 667,
	-218, 503, 2, 79, 29, 29, -412, -414, 587, 264,
	162, 385, -265, -267, 2, -637, 584, 503, -587, 2,
	-507, -611, -509, 654, 655, 647, 549, 72, -378, 361,
	632, -521, 135, 588, 379, -610, -510, -523, 165, 395,
	479, -436, 8, 9, 5, 6, 7, -328, -511, -517,
	579, 181, 368, -371, 668, 10, 664, -634, -267, -522,
	38, 224, 70, -591, -370, -329, -563, 265, -369, -349,
	-631, -632, 4, -602, -603, -592, -566, -574, -570, -571,
	-577, -319, -605, 82, 119, 120, 118, 123, 122, 309,
	308, 124, 121, 505, 598, 71, 37, 234, 235, 271,
	369, 236, 80, -633, 152, -604, 262, 263, 521, 55,
	435, 191, 134, 133, 371, 60, 58, 606, -575, 130,
	564, 565, 566, 567, 208, 209, 62, 178, 179, 392,
	417, 541, 576, 578, 222, 294, 46, 114, 204, 257,
	238, 270, 272, 276, 296, 299, 340, 358, 363, 389,
	391, 473, 513, -745, 607, 536, 74, 75, 196, -639,
	438, -640, -343, -639, 667, 667, 669, 667, -403, -405,
	-407, 2, 29, 149, 664, 2, -540, 2, -541, -545,
	-267, 288, -544, 664, -542, 662, -350, 380, -635, 480,
	-631, -632, -328, -349, -370, 4, -602, -604, 666, -408,
	664, 128, 490, 552, 83, 252, 100, 176, 205, -467,
	664, -319, 29, 379, 568, 669, -667, -419, -404, 425,
	-519, 664, 379, 382, 203, 382, -667, 64, 98, -717,
	234, 2, -716, -356, 320, 2, 2, 2, 2, 2,
	234, -319, 552, 127, 286, 2, 2, 2, 2, 2,
	2, 2, -428, 234, 2, -426, -356, 610, -429, 234,
	2, -426, -427, 234, 2, -426, -473, 2, 93, -333,
	234, 2, -319, -359, 234, 2, -354, -365, 234, 2,
	-362, -319, -597, 234, 2, -595, 4, -602, 124, 505,
	-507, 2, -156, 2, 64, -319, 610, 2, 509, 2,
	664, -169, 2, 76, 572, 46, 503, -170, 2, -493,
	2, -494, -315, -316, -317, -552, -318, 273, 424, 434,
	635, 140, 361, 631, -719, 203, 646, 568, -587, -587,
	-587, -437, 666, -235, 57, -332, -731, -730, -731, -585,
	29, -580, 8, -581, 654, 655, -585, -585, -731, -731,
	2, 2, 2, 2, 2, -492, -493, 2, -545, 234,
	-350, 2, -347, -590, 4, -602, -608, -603, -609, -605,
	29, 32, 33, 34, 36, 38, 39, 40, 42, 61,
	70, 71, 77, 81, 83, 93, 100, 110, 118, 119,
	121, 120, 122, 123, 124, 135, 140, 145, 149, 150,
	154, 158, 162, 181, 183, 196, 200, 203, 219, 223,
	226, 242, 256, 264, 266, 288, 292, 300, 308, 309,
	361, 368, 374, 379, 380, 384, 385, 406, 422, 441,
	467, 498, 505, 524, 546, 552, 562, 568, 570, 579,
	587, 588, 598, 600, 608, 622, 623, 624, 625, -610,
	82, 2, -545, 234, 2, -353, 234, -545, -356, 2,
	-716, 2, -333, 2, -507, -671, 560, 172, 454, 2,
	-375, 234, -350, -352, -356, -354, 2, 487, -599, 2,
	-594, 10, -593, 5, 4, -602, -608, -603, 2, 2,
	-507, 2, -510, 2, -521, 29, -362, 2, -595, 234,
	2, 29, 29, 610, 425, 266, 568, 669, -425, -367,
	-368, -586, 4, 8, -418, -319, 666, -507, 2, -156,
	-139, 2, 196, -507, 234, 2, -156, 234, 2, -507,
	234, 2, -156, 234, 2, -319, 2, -679, 2, -718,
	-599, 234, 98, 234, -319, 2, 205, -726, 482, 581,
	320, 2, 2, 577, 2, 105, 552, 127, 2, 2,
	2, 2, 2, 2, 2, 552, -338, 2, -319, 196,
	-554, 266, -362, 234, -363, 2, 499, -740, 438, -595,
	234, 2, 458, 610, -354, 234, 2, -354, 252, 268,
	-333, 234, 2, 557, 555, 557, 555, 203, 2, 266,
	2, 266, 2, -546, 2, -547, -541, -548, 662, 380,
	-557, 2, -556, -593, 605, -127, 664, -127, 664, 503,
	664, -599, -350, -350, -507, 2, -156, -139, 2, -507,
	2, -156, 2, -319, 2, -153, -599, -152, 664, 203,
	599, -319, 2, -507, 2, -156, -139, 2, -507, 2,
	-156, 2, -258, 196, 2, 128, 552, -218, 2, 196,
	600, 2, 8, 2, 242, -254, -599, 492, 188, 433,
	603, 98, 2, 509, 2, 510, 79, -474, 631, 79,
	203, 2, 203, 2, -457, 2, 625, 425, 203, 2,
	2, -665, 2, 379, 221, 203, 2, 203, 2, 203,
	2, 203, 2, 203, 2, -217, 504, 573, 551, 429,
	275, 2, -156, 622, -139, 275, 274, -507, 622, 2,
	-684, 196, 488, -507, 2, 571, 284, 170, 203, -457,
	2, 203, 2, 203, 2, 203, 2, 5, 2, 43,
	430, 532, 2, 273, 424, 532, 2, 530, 2, -350,
	552, 610, 499, 128, 205, 29, 2, 487, 177, 2,
	2, 94, 95, 203, 2, 203, 2, 218, 203, 2,
	446, 203, 552, -438, 666, -438, 631, 2, -449, -545,
	-492, 568, -412, -414, -218, 509, 2, -272, -447, -274,
	196, -479, -480, -275, 300, 183, 374, -276, -456, 29,
	149, -456, -456, 64, 665, 665, -719, 584, 11, 12,
	81, 43, 654, 655, 656, 657, 194, 658, 659, 652,
	653, 651, 644, 645, 649, 279, 280, 102, 648, 646,
	92, 314, 481, 184, 185, 186, 187, 455, 250, 35,
	251, 14, 15, 16, -378, 34, 384, 299, 632, 238,
	513, 647, 17, 18, 19, 270, 272, 363, 54, 242,
	-327, 395, -377, 549, 72, -507, -507, -507, -507, -507,
	-507, -507, -507, 391, 664, -443, -502, 662, -267, 664,
	664, 664, 664, -586, -267, -507, -521, 665, -434, 664,
	-267, -521, -516, 664, 479, 662, 664, -524, -507, 5,
	5, 5, 664, 666, -642, 626, 196, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 419, -568, 664, -567, 664, -567, -567,
	611, -565, 664, 634, 627, 664, -565, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	611, 558, 669, -639, -488, 664, 664, -439, -550, -507,
	656, -439, -439, 379, -431, -507, 114, -460, 276, 340,
	204, 296, 473, 257, -504, 668, -504, -534, 634, -267,
	-542, -349, -267, -544, 664, -540, -534, -128, -586, -109,
	-124, -133, -156, -172, -226, -227, 656, -350, 664, 203,
	664, 666, -590, 203, -418, -333, -362, -350, -369, -370,
	-375, -344, -319, 2, 2, 148, -431, -661, 582, 490,
	29, 4, -608, -602, -368, 499, -367, 552, 128, 177,
	205, -597, -322, 568, 39, -518, -560, -561, -613, 668,
	-612, -563, -573, -569, -572, 409, 413, -592, 58, 606,
	-575, 265, 4, -602, -604, 262, 263, 521, 55, 435,
	191, 134, 133, 371, 60, 564, 565, 566, 567, 208,
	209, 62, 607, 536, 74, 75, -661, 582, 490, 29,
	499, 196, -597, 196, 203, -597, 2, -599, 2, -295,
	669, 69, 464, 165, -699, 664, 2, 165, 2, 2,
	2, -319, -295, 165, 669, -428, 234, -295, 165, -295,
	165, -376, 234, -375, -295, 165, -295, 669, 165, -295,
	669, 165, 666, 669, 165, -597, 2, -473, -589, -431,
	39, -493, 2, 135, 4, 5, -743, 669, 298, -381,
	313, 360, 229, 380, 629, 372, 140, -598, 5, 4,
	-517, -529, 135, 306, 265, -580, -582, 9, -583, 654,
	655, -588, -587, 117, 666, -590, -236, 260, 41, -332,
	-332, -731, -731, 8, 8, -731, -731, -332, -332, -292,
	456, 506, 394, -291, 25, 30, 153, 254, 345, 603,
	171, -393, 255, 461, -390, 399, 165, 525, 592, -671,
	-674, 486, 560, 172, 454, 96, 372, 506, 394, 456,
	165, -453, -455, 39, 126, 345, 393, 65, 246, 318,
	319, 529, 462, 617, 165, 506, 394, 456, -707, 456,
	506, 394, -694, -709, 345, 66, 469, 535, 240, 528,
	620, 177, 497, 295, 361, 108, 480, 543, 396, 394,
	-16, -308, 25, 153, -310, -303, 506, 30, -674, 106,
	456, 643, 638, 461, 405, 544, 422, -674, -671, 293,
	-673, 621, 359, -294, 525, 592, -671, -478, -674, 486,
	456, -293, 361, 619, 618, -395, -390, 399, 165, 668,
	25, 153, 456, 506, 394, -722, -723, 30, -586, 2,
	-290, 242, -289, 25, -285, -284, 25, 153, 506, 595,
	-165, -145, -164, 461, 506, -165, 2, 456, 394, -668,
	-340, -636, 242, 625, 165, -340, -340, -545, 234, -688,
	196, 2, -681, -152, 289, 5, 10, -599, -152, -425,
	669, 669, -590, 656, 488, 487, 165, 165, 165, 165,
	275, 196, 361, -718, 2, 361, 625, -711, 2, -356,
	-727, 2, 2, 2, 2, 2, 2, 2, -350, 234,
	-410, 379, -657, -658, -729, 552, -245, 625, -599, 361,
	46, -353, 234, 2, -356, 610, -668, 361, -676, -355,
	234, -350, 39, 664, 361, 2, -473, 2, 252, -636,
	361, -546, -372, -350, -541, -372, 506, -343, 39, -504,
	-350, 665, 669, -557, -557, -599, -245, 203, 664, -258,
	625, 625, 275, -553, 669, -552, 242, -600, -599, -153,
	-599, 459, 203, 275, -599, -657, -333, 2, -350, 2,
	552, 277, -152, 203, 242, -245, -599, -599, -599, -599,
	-599, -589, 29, 510, 2, -217, 504, 573, 95, 510,
	2, -350, 552, 128, 252, 85, -688, 196, 2, -319,
	-666, 196, -662, 474, 490, 582, -661, -666, -350, 128,
	-350, 128, -350, 128, -350, -350, 2, 2, 2, 2,
	2, 90, 2, -156, -507, 2, 90, 2, 49, 526,
	-684, 196, 2, 571, 2, 571, 2, -319, -319, -319,
	-319, 374, 531, 298, 625, -350, -350, -353, -351, -356,
	-356, 492, 553, 583, 488, 177, -507, 2, 98, -732,
	2, 203, 196, 2, 552, 252, 552, 252, 128, 203,
	79, 128, 29, 203, 552, 485, 666, 4, -295, 669,
	-323, -272, -447, -589, -448, -447, -273, -272, -275, 196,
	434, 593, 345, 511, 281, -480, -479, 29, -507, -484,
	190, 344, -507, -482, -509, 654, 655, -581, -583, -430,
	372, -266, -266, -266, -415, -536, -507, 422, 252, -588,
	-719, -562, -560, -560, -348, -590, 564, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, 299, 238, 513, 54, 242, -507, 568,
	-507, -507, -507, -507, 337, 361, 368, 579, 181, 589,
	149, 372, -746, 546, 42, -514, -267, -435, 664, -528,
	36, 524, 29, -521, 664, 2, -502, -507, -503, -379,
	-377, -319, 654, 655, 656, 657, 658, 659, 644, 645,
	646, 14, 15, 16, 649, 653, 651, 652, 194, 102,
	648, 314, 481, 92, 184, 185, 186, 187, 279, 280,
	17, 18, 19, 35, 647, -432, -431, -431, 665, 608,
	29, 149, 656, 2, 665, 669, 39, 665, -507, -432,
	-520, -516, -431, -527, -526, 622, -468, -469, 630, 323,
	131, 232, 321, -470, 495, -584, 8, -590, 656, -643,
	189, 223, 664, 665, 2, 665, 2, 665, -507, 2,
	665, -507, 2, 665, -507, 2, 665, -507, 2, 665,
	2, 665, 2, -507, -507, -507, -507, -507, -507, -507,
	-431, 8, -584, -584, 564, 564, -584, -584, -584, -576,
	409, 410, 411, 412, 301, 302, 303, 304, 413, 414,
	415, 416, 329, 330, 331, 332, 325, 326, 327, 328,
	333, 334, 335, 336, 213, 214, 215, 216, 209, 210,
	211, 212, -576, -462, 2, -578, -431, 4, 630, 323,
	131, 232, 321, 495, 5, -462, 2, -463, 2, -507,
	-431, -464, -508, -509, 654, 655, 647, -378, -465, 2,
	-507, -432, -507, 61, 292, 570, -466, -507, 203, -431,
	-431, 2, -431, 2, -510, 2, -640, 39, -489, -319,
	-431, -421, 669, 203, 39, -607, 4, -606, 44, 66,
	108, 137, 144, 177, 220, 240, 245, 259, 269, 295,
	396, 430, 468, 469, 497, 528, 543, 575, 620, 507,
	-421, -421, 664, 665, 669, -461, 227, 317, 312, 268,
	-461, -540, -460, 276, -458, 389, -458, -458, -534, -334,
	662, 671, -590, -534, -531, -530, 39, -343, 386, -534,
	-534, 666, 665, -533, -532, 39, -343, 663, -655, 664,
	667, 667, 667, 667, 667, -350, 664, -431, -590, 666,
	533, 2, 665, 270, 270, 270, 270, 270, 379, 480,
	665, 568, -663, -359, -365, 500, 553, 206, -425, 669,
	-425, -418, 98, -717, 625, -597, -126, 381, 665, 669,
	-420, 38, 662, 666, -584, 2, 2, -579, 611, 664,
	664, -469, 664, 203, -663, -365, 553, 500, 206, 2,
	-667, 548, -419, -597, 568, -716, -717, -700, 665, -702,
	-710, -695, -704, 242, 388, 258, 608, -591, -560, 4,
	-602, -319, 2, -428, -356, -295, 165, -429, -427, -295,
	669, 165, -333, -354, -359, -362, -365, -319, -595, -597,
	-295, -355, -719, 665, 572, -494, -380, 434, 523, 457,
	501, 548, 9, 9, 669, -590, -237, 489, 345, -332,
	-332, -332, -332, 669, -720, 100, 568, 83, 664, 490,
	-312, 307, 568, -498, 234, 83, -614, 100, -336, -615,
	-319, 77, 588, 422, 200, 163, -720, 100, 422, -720,
	100, 2, 254, 100, 506, 531, 664, 29, 64, -545,
	43, 43, 29, -672, -673, 293, 203, 631, 552, 252,
	490, 568, 568, -545, -455, -560, 126, 318, 319, 64,
	-585, -585, 64, -585, -585, -585, 625, -585, 625, -353,
	-545, 490, 568, 568, -725, -709, 464, 506, 568, 490,
	568, 144, 379, 368, 497, 137, 269, 295, -529, -529,
	-319, 568, 444, 542, 444, 542, 496, -303, -305, -170,
	496, 542, 307, 568, 568, -170, 29, -218, 465, 135,
	-744, 646, 444, 293, -673, 568, 203, 669, 43, 43,
	29, -672, 203, 568, 618, -375, -334, 604, 45, 604,
	45, 604, 568, 45, 490, 568, 669, 45, -287, -286,
	506, -289, -599, -288, 343, -284, -657, -657, -244, -243,
	-319, 5, -418, 79, 568, 568, -16, 506, -669, -324,
	113, 351, 311, 352, 104, 348, 103, 347, 111, 349,
	112, 350, 612, 364, 613, 365, 68, 346, 322, 353,
	527, 354, 616, 366, -325, -326, 156, 401, 602, 128,
	-595, -16, -16, 506, 394, 456, 165, -689, 242, 29,
	-678, 242, -553, 242, -553, -367, -319, 666, -156, -507,
	-507, -156, -507, -156, 49, 165, 39, 165, 2, 664,
	286, 664, -384, 361, 203, -418, -554, 669, -350, 39,
	-244, 383, 165, -595, -454, -453, 361, -355, 234, 2,
	165, -740, -408, 361, 159, 664, 432, 2, 165, -335,
	234, -320, -319, -473, -297, 556, 165, -451, 600, -485,
	-156, 664, 135, 39, -485, -440, -441, -551, -442, -336,
	664, -343, -504, -127, -556, 665, 665, 665, -258, -409,
	-337, -336, 127, 436, 436, -251, 625, -152, -153, 665,
	669, -553, 242, 534, -153, -599, -245, -245, -553, -553,
	-350, 196, -599, -152, -245, -245, -245, -245, -245, 2,
	2, 2, 2, -457, -350, -333, -375, -350, -361, 242,
	220, 29, 666, -597, -597, -365, -366, -364, -319, -359,
	-457, -333, -457, -333, -457, -333, -457, -457, -156, -507,
	531, 2, 503, 196, 196, 666, -457, 666, 8, -411,
	467, 5, 2, 99, -599, 2, 432, 128, 552, 399,
	252, -350, -375, -350, -375, -333, 128, -333, 129, 128,
	-350, 4, -545, -448, -273, 380, 281, 511, -482, -483,
	-509, 479, 480, -483, 479, 480, 8, 9, 8, 9,
	-277, 515, 367, -427, 669, -282, 40, 145, 281, -350,
	-588, 631, 161, -507, -507, 568, -746, 546, -514, 161,
	-507, 337, 368, 579, 181, 589, 149, 372, 203, 664,
	-508, -508, 665, -433, -507, -507, 663, 673, 665, 666,
	665, -414, 669, -412, -507, -431, -431, 665, 666, -431,
	-418, 663, 663, 669, 665, -525, -526, 154, -507, 568,
	568, 568, 568, 664, 665, 666, -648, 390, 664, 664,
	-507, 665, 665, 665, 665, 39, 669, 669, 669, 665,
	669, 669, 669, 665, 665, 665, 669, 665, 631, 631,
	665, 665, 665, 665, 669, 665, 669, 665, 203, 665,
	665, -471, 406, 665, 11, 12, 654, 655, 656, 657,
	194, 658, 659, 652, 653, 651, 644, 645, 646, 92,
	314, 481, 14, 15, 16, -378, 270, 242, -508, -508,
	-508, -508, 665, -512, -513, 203, 196, 39, -466, -466,
	-466, 665, 203, -431, 665, 665, 664, -641, 316, 361,
	665, 669, 665, -501, -500, 623, -550, -422, 2, -540,
	-345, -590, -501, -501, -431, -507, 276, 276, -459, 600,
	379, -461, -540, -531, -586, -506, -505, 198, 40, 145,
	355, 356, 357, 237, 199, -531, -343, -488, -531, -531,
	-590, -534, -343, -486, 664, -534, -530, 665, -656, -586,
	665, -423, -543, -635, -414, 666, -590, -255, -636, -219,
	5, 368, -219, -219, -219, -219, -350, -597, 568, 568,
	242, 242, 242, -425, -418, 26, -687, 625, 407, -560,
	662, 663, 8, -590, 664, -584, -584, -584, -597, 203,
	203, 242, 242, 242, 379, -667, 203, -595, -295, 665,
	669, -695, -704, -710, -704, 388, 2, -295, -428, -295,
	-295, -375, -376, -295, -295, -295, -452, 625, -587, -493,
	586, 88, 434, 564, -587, 125, 489, -291, 456, 506,
	-336, -336, -350, -262, -261, -259, -319, 5, -360, -319,
	217, 445, -595, 361, -498, 234, -296, 361, 234, -344,
	-560, 664, -475, 627, 281, 281, 600, -336, -344, 281,
	234, -336, 234, -344, 2, -344, -670, 434, 373, -507,
	-260, -259, 64, -391, 305, 432, 362, -292, 456, 506,
	394, -156, -156, -156, 664, -719, 600, 148, -350, -375,
	-350, -360, -595, -355, 506, 394, 456, 358, -369, -585,
	-585, -585, -453, 506, 394, 456, -360, -595, -353, -319,
	-360, -595, 379, 368, 379, 137, 269, -595, -302, 234,
	-319, 444, -302, 234, 444, 444, 444, 444, 217, 445,
	490, -333, 444, 631, 48, -744, 568, 203, -507, -507,
	-293, -156, -156, -156, 664, -334, -294, -478, 456, 5,
	234, -336, 5, -336, 234, 5, -319, -336, -360, -595,
	-723, 25, 153, -336, 669, 285, 266, 625, -680, 204,
	487, 439, -290, 646, -245, 669, 646, 646, -360, -595,
	-324, 401, -681, 368, 5, 10, 596, -333, -668, -340,
	490, 568, 568, -545, -685, -686, 219, 472, 490, 475,
	-597, -152, -248, 625, -152, -242, 247, 656, -660, -599,
	-599, -319, -697, -698, -701, -702, -319, -382, -385, -383,
	-336, -499, -498, -618, -619, -614, 299, 252, 588, 268,
	182, 100, -263, -264, 627, 625, 165, -373, -350, 662,
	-245, -658, -555, 182, 498, 664, -362, -363, 165, -408,
	361, -595, 610, 39, 165, 664, 2, 2, -354, 379,
	361, -335, 234, -298, 155, -744, -333, -501, -422, -450,
	-491, 467, 379, -409, 605, -343, -450, -424, 669, 203,
	646, 666, -409, -549, 656, -127, -127, -245, 664, -599,
	665, 669, 666, 664, 646, 646, -253, 383, -252, 157,
	283, 267, 517, 518, 519, 520, 147, 516, 132, 342,
	245, 248, 558, 491, 609, -553, -599, -251, -153, 203,
	-553, 242, 203, -82, 625, -245, 552, 242, -245, 668,
	490, -597, 475, -319, 666, -457, -457, -457, 503, 503,
	-319, -319, 196, -418, 2, -346, -590, -333, -350, -347,
	-375, 196, 196, -333, -333, 593, -483, 380, 310, -536,
	-283, 633, -350, 668, -507, -507, 161, 161, -507, -508,
	-508, -507, 161, 203, 664, -507, -518, 34, 34, 665,
	669, -503, -507, -377, 665, 608, -414, -414, 665, 656,
	-590, 668, 665, -516, 158, -507, 562, 323, 232, 321,
	-470, 321, -470, -470, -584, 5, -590, 656, -649, -339,
	664, -319, 623, -413, 385, 665, -562, -560, -507, -507,
	-507, -507, -507, -584, -565, -565, -580, -580, -507, -512,
	-507, -562, -560, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, 149, 361, 372, -508, -513, -512, -507,
	-507, -560, 665, 665, 665, -431, -126, 664, 316, -319,
	-444, 223, -507, -553, 669, -444, -444, 665, -540, -540,
	664, -507, 276, 663, 669, 672, 646, 646, -488, 666,
	-530, -486, -487, -490, -319, -531, 663, 665, 669, 665,
	669, -533, 665, -590, -501, -257, -256, 146, 57, 115,
	143, 368, 376, 202, 228, 431, 161, 197, 155, 270,
	-687, -597, -597, 490, 490, 490, 382, 219, 5, 8,
	662, 663, 666, -584, 665, 665, 665, -597, -597, 490,
	490, 490, -661, 582, 490, 29, 203, -597, -702, -704,
	-704, -295, -295, 127, 345, -507, -234, 625, 627, 568,
	568, 665, 669, 646, 64, 242, 165, 361, 602, 361,
	-615, 163, -620, -507, 664, 252, 664, 664, 2, -279,
	-280, -281, 153, 506, 25, -721, 2, 600, 165, -295,
	165, -295, 629, 665, 669, -391, 664, 664, 568, 490,
	-312, 568, 625, -431, -507, -246, 135, -589, -674, 668,
	-674, 668, 490, 568, 568, 490, 568, 568, 176, 259,
	368, 361, -319, 165, -319, 234, -744, -319, -674, -674,
	242, 625, 180, 180, 631, -302, -507, -507, 196, 568,
	625, -431, 568, -564, 52, 27, 361, -354, -295, 165,
	568, 568, 582, 506, -286, -599, -152, -249, 157, 471,
	147, 283, 248, 245, 49, 382, -681, -152, -243, -599,
	-599, -681, -599, 368, -16, -360, -595, -355, 506, 394,
	456, -667, -667, 219, -365, -689, -553, -250, 383, -249,
	-553, -248, 203, 266, 625, 665, 669, 135, 646, 2,
	665, 665, 669, 669, -621, -296, -350, -335, 252, 252,
	-342, -320, 39, 376, 376, 664, -350, -105, 625, -552,
	-586, -341, -319, -439, -244, 46, -353, 39, 165, -668,
	-355, -156, -355, -558, -559, 5, 39, -350, 165, 379,
	361, -299, 291, -744, -594, -636, -414, -450, -439, 362,
	97, 665, -501, -441, -422, -507, 2, 665, -599, -245,
	-258, -337, 2, -600, -599, -599, 669, 664, 646, 646,
	646, 646, 646, 646, 646, 646, -251, -553, -152, -251,
	-153, -156, 383, -350, -152, 656, -360, -361, -361, 656,
	-457, 5, -397, -396, 399, 372, -397, 479, 479, 380,
	190, 287, -282, -334, -507, -507, 161, 34, 34, -507,
	-507, -518, 665, -507, -507, -431, 663, 5, -507, 665,
	665, 8, -507, 665, 666, -650, -319, -507, 665, 64,
	665, 665, 669, 669, 665, 665, 665, 665, 665, 665,
	665, -513, 203, 149, 372, 664, 665, 665, -126, -515,
	226, 64, -540, -515, -515, -459, -418, -540, -505, -334,
	662, -334, 662, -590, 665, 669, -560, -586, -543, 666,
	-256, 646, -599, -599, 2, 2, 5, 5, 431, 361,
	368, 5, -219, -687, -687, 625, -365, -365, -365, 382,
	663, 2, 662, -590, 665, -365, -365, -365, 203, -663,
	-365, 553, 206, -597, 127, 196, 231, 231, -336, -336,
	-261, -587, 552, 479, -302, 422, -498, 165, 165, -622,
	100, -624, 81, 182, 110, 361, 368, 588, 422, 77,
	135, 379, 441, -734, -735, -736, 39, 636, 637, 665,
	-416, -537, -635, 664, -319, -416, -418, 361, 539, 135,
	379, 361, 135, 379, 618, 127, 2, 582, 84, -336,
	-344, -259, -418, -418, -350, -360, -595, 173, 665, 669,
	646, 2, 656, 656, -360, -595, -355, -360, -595, -353,
	-319, 259, 165, 605, -302, 165, -302, 605, -302, 397,
	180, 568, -156, -507, 173, 665, -334, 5, 5, 165,
	-331, 81, -336, 5, -336, -354, 127, 646, 646, 646,
	646, 646, 646, 31, -681, -243, 625, 490, 568, 568,
	379, 379, 382, -685, -686, -248, 669, 664, -248, -600,
	-152, 2, 469, -701, -507, -507, -398, 254, -336, -619,
	-616, -617, 422, -499, -623, -625, 182, 422, -386, 664,
	-335, -320, 664, -156, 2, -262, 664, -384, 383, 663,
	203, 665, -595, -454, -156, -355, -408, -406, 625, -408,
	665, 669, 159, -476, 600, -334, -350, 165, -300, 290,
	-744, -594, -297, -481, -479, 150, 664, 379, -156, -414,
	646, 665, 127, 665, -252, -253, -599, -152, -599, -599,
	-599, -507, -152, -599, -251, -691, 39, -553, -83, -84,
	252, 100, 404, -245, -245, -347, 552, 252, 664, 664,
	-282, -507, -507, -507, 665, -414, -590, 656, -644, 399,
	665, -536, -507, -507, -508, 203, 664, -518, 665, -645,
	624, -507, -445, -446, -507, 477, 116, 224, -645, -645,
	665, -586, -586, -490, -599, 2, 2, 368, 2, 2,
	2, 568, 568, 568, 662, 2, 203, 203, 203, -597,
	203, 203, 242, 242, -156, 242, 39, 444, -498, -344,
	-344, -348, -341, 182, 234, 368, 618, -475, 281, 664,
	-508, 593, -350, 664, 2, 233, 233, 31, 64, -737,
	140, 256, 665, 669, -538, -330, -319, -507, -538, 665,
	665, 368, 593, 368, 618, -507, 593, -560, 664, -295,
	-295, 665, 665, -507, 568, -589, 107, -587, 2, -674,
	-302, -418, -418, -674, -333, -507, 196, -507, 568, 5,
	-295, -348, -295, -295, -331, 582, -599, -507, 579, 181,
	-152, -152, -507, 378, -360, -595, -355, -690, 553, 500,
	583, 492, 206, 478, -690, 196, -249, -250, -248, -693,
	507, -392, -393, 2, -621, 281, -341, 281, 244, 164,
	-416, 664, 664, -418, -733, 625, 665, -382, -263, -106,
	-107, 569, -552, -664, -372, -408, 39, 345, 127, 39,
	5, 664, 664, -319, 379, 664, -334, -314, 98, -744,
	-594, -298, -450, 362, -418, 100, -481, -514, -245, 664,
	-245, 665, 558, -251, 669, 29, 664, 29, 664, -350,
	-375, -431, -431, 665, -414, 64, 669, 665, 665, -508,
	-518, 665, -646, -647, -339, 669, 664, 664, 508, 663,
	663, 2, -597, -597, -597, 2, -597, -597, -597, -597,
	-597, 490, 490, -302, 422, -319, -615, -624, -341, 361,
	-264, 600, 625, -507, -508, -321, 664, -507, 664, 664,
	39, 135, 256, 141, 239, -497, -738, 109, 540, 243,
	-537, -282, 665, -496, 600, 441, -508, -331, -416, 664,
	664, 664, 646, 203, -156, 664, -564, -295, -354, 646,
	568, 2, 203, -667, 665, -680, -703, -704, -263, 664,
	-264, -387, 86, 101, 136, 233, 207, 253, 531, 537,
	29, -387, 665, -416, -416, 665, -388, 379, 127, 345,
	665, 39, -107, 9, -501, 39, -156, 127, -156, -558,
	-416, -350, -416, 379, -304, -303, 300, -594, -299, 665,
	-344, -450, -600, -586, 4, -84, -418, -418, 665, 665,
	-651, 432, 480, 225, -431, -415, 665, 669, 39, -446,
	2, 2, 2, -687, -687, -687, -365, -365, 444, -296,
	165, 227, 665, -626, 315, -319, 665, -454, -454, 39,
	141, 239, -394, -390, 664, -283, -538, -264, 227, -350,
	-675, 600, 665, -400, -399, -396, -402, -401, -396, -431,
	-587, 107, 397, -431, -331, -152, -597, -597, 379, -682,
	204, -705, -706, -708, 39, 286, 575, 624, -709, -388,
	-417, -539, -336, -496, 665, 665, 87, 127, -398, -156,
	-156, 2, -406, 665, 665, -476, 665, -350, -301, -601,
	444, 446, -744, -300, -501, 150, 665, 665, 665, 665,
	-652, -653, 54, 585, 117, -507, -652, -652, -647, -649,
	203, 203, 182, -495, 634, -627, -630, -629, 641, 514,
	204, 398, 665, 539, 617, 665, 665, -737, -418, -495,
	-408, -507, -496, 665, 669, 605, 665, 669, 605, 665,
	203, 665, -295, -687, -295, -690, -247, 625, 49, -715,
	-712, 53, 468, -708, -696, 5, -594, -313, -312, 665,
	669, -497, -496, -394, 421, 142, 153, -392, -733, -496,
	664, -497, 664, -311, -310, -744, -580, -314, 150, 362,
	593, -245, -654, 163, -653, 418, 195, 479, 418, 195,
	-654, -654, -597, -597, -341, -264, 59, -629, 641, -630,
	641, 593, 142, -501, 665, -626, -264, -399, 242, -401,
	203, 397, 203, 487, -681, 31, 44, -507, -264, -539,
	-394, -497, -264, 480, 480, 2, -263, -388, -497, -416,
	-394, -416, -307, -308, -309, -418, -304, 362, 593, 506,
	117, 223, 563, 345, 34, 646, -628, 345, 464, 69,
	506, -628, -627, 664, 664, -597, 383, -714, -264, -394,
	-501, 2, -388, -394, 665, -264, 665, -596, 394, -301,
	506, -440, 479, 387, -653, -507, 24, 368, 135, -737,
	-431, -431, -295, -244, 664, -713, 158, -3, -712, -501,
	-264, -477, 361, 619, 618, -313, -264, -496, -501, -497,
	-306, -305, 496, -744, -311, -440, -501, 665, 665, -244,
	670, -477, -501, 618, -501, -497, -477, -394, -595, -307,
	-501, -389, -390, 568, 665, -477, -477, -394, -264, -596,
	664, -264, -501, -306, -431, -501, -477, 665, -477, -389,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 1764,
	1766, 735, 736, 738, 739, 740, 742, 743, 745, 747,
	749, 750, 751, 753, 754, 756, 757, 758, 759, 760,
	762, 764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 858, 860, 0,
	1746, 1748, 1750, 1752, 0, 0, -2, -2, 0, 0,
	-2, -2, 45, 46, 48, 50, 0, -2, 427, 429,
	431, 433, 0, 465, 467, 468, 470, 472, 473, 475,
	477, -2, 0, 661, 662, 664, 666, 668, -2, 0,
	1321, 1323, 1325, 0, 846, 848, 0, 1328, 1330, 1332,
	0, 0, 870, 871, 0, 1867, -2, 862, 864, 866,
	868, 947, 949, 951, 953, 955, 957, 959, 961, 963,
	965, 967, 968, 970, 972, 974, 976, 978, 980, 981,
	983, 985, 987, 988, 990, 991, 993, 995, 997, 999,
	1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019,
	-2, 1022, 1023, 1024, 1026, -2, 0, -2, -2, 1760,
	52, 54, 56, 58, 60, 62, 64, 66, 68, 70,
	72, 74, 76, 78, 606, 608, 610, 612, 614, 617,
	619, 621, 623, 1925, 670, 672, 674, 676, 678, 680,
	682, 684, 0, 0, -2, 1939, 0, 0, 0, 1118,
	80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
	149, 150, 151, 152, 153, 154, 155, 156, 93, 94,
	95, 97, 98, 99, 100, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 146, 147, 91, 120, 121, 122, 123, 124, 0,
	0, 1898, 1900, 1902, 1904, -2, 0, 0, 8, 12,
	14, 16, 18, 20, 22, 24, 26, 28, 30, 32,
	36, 38, 40, 42, 1765, 1767, 737, 741, 744, 746,
	748, 752, 755, 761, 763, 765, 720, 721, 724, 2655,
	2673, 2674, 2675, 2678, 2679, 2680, 2681, 2682, 2683, 3223,
	3304, 3305, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893,
	2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903,
	2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913,
	2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923,
	2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933,
	2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943,
	2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953,
	2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963,
	2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973,
	2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983,
	2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993,
	2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003,
	3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013,
	3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023,
	3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033,
	3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043,
	3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053,
	3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063,
	3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073,
	3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083,
	3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093,
	3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103,
	3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113,
	3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123,
	3124, 3125, 3126, 3149, 3150, 3151, 3152, 3153, 3154, 3155,
	3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165,
	3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175,
	3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185,
	3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195,
	3196, 3197, 3198, 3199, 3200, 3201, 3202, 722, 723, 1515,
	0, 804, 802, 2638, 805, 2969, 807, 809, 655, 656,
	657, 658, 659, 660, 0, 839, 3074, 820, 1937, 840,
	842, 843, 844, 845, 799, 797, 0, 844, 839, 2711,
	3074, 837, 1744, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 586, 1578, 1579, 1580,
	1729, 1730, 3025, 1775, 0, 287, 859, -2, -2, 3187,
	-2, 901, 902, -2, -2, 916, 920, 911, 3192, 0,
	3028, 3010, -2, 923, 1747, 1749, 1751, 1027, 1028, 1029,
	2659, 1033, 1031, 1043, 1044, 1047, 0, 1064, -2, 0,
	2707, 2992, -2, -2, 1065, 1066, -2, -2, -2, -2,
	1045, 1046, 0, 0, 0, 0, 0, 2075, 2076, 2642,
	1777, 1769, 1772, 1770, 1771, 47, 49, 51, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 297, -2, -2, -2, -2, 0, 0, 3080, 2770,
	2606, 2675, 2609, 2604, 428, 430, 432, 434, 435, 0,
	0, 0, 0, 0, 0, 0, 466, 469, 471, 474,
	476, -2, 0, 478, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1395, 1387, 1388, 1645, 0, 0,
	0, -2, 663, 665, 667, 725, 726, 0, 1926, 1926,
	733, 734, -2, 0, 0, 0, 0, 389, 380, 1322,
	1324, 1326, 1327, 0, 0, 0, 0, 0, 847, 849,
	0, 0, 3074, 350, 1329, 1331, 1333, 1334, 0, 0,
	0, 0, 0, 0, 391, 0, 0, 863, 865, 867,
	869, 948, 950, 952, 954, 956, 958, 960, 962, 964,
	966, 969, 971, 973, 975, 977, 979, 982, 984, 986,
	989, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008,
	1010, 1012, 1014, 1016, 1018, 1020, 1021, 1072, 0, 0,
	0, 0, -2, -2, -2, 0, 0, 0, -2, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 1189, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 0, 1290, 0, 0,
	1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 0, 1162,
	1187, 1188, 1198, 1025, 0, 1558, 1927, 1777, 1754, 1755,
	1756, 1761, 1763, 1757, 1758, 1759, 53, 55, 57, 59,
	61, 63, 65, 67, 69, 71, 73, 75, 77, 79,
	607, 609, 611, 613, 615, 618, 620, 622, 624, -2,
	1896, 1897, 671, 673, 675, 677, 679, 681, 683, 685,
	850, 0, 853, 0, 1077, 852, -2, 0, 1931, 1931,
	1931, 0, 0, 1897, 1895, 0, 0, 0, 856, 857,
	927, 928, 2218, 0, 0, 0, 0, 0, 0, 0,
	0, 2478, 2306, 0, 929, -2, 2339, 2341, 3161, 2941,
	3187, 2477, 2343, 2344, 2345, 2346, 2347, 0, 2349, 2350,
	2351, 2352, 2353, 2354, 0, 2356, 0, 2361, 2362, 2363,
	0, 3168, 2581, 2669, -2, 0, 0, 3175, 2665, 0,
	2444, 2379, -2, -2, 2692, 2671, 2150, 2151, 2152, 2153,
	2154, -2, -2, 3206, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 0, 3149, 3169, 3170, 3176,
	3178, 3171, 3158, 2404, 2786, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 2177, 2186,
	-2, -2, -2, -2, -2, -2, -2, 3162, 3163, 3181,
	3184, 3191, 3196, 3197, 3167, 3177, 3205, 3207, 3208, 3209,
	3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219,
	3220, 3221, 3222, 2178, -2, -2, -2, -2, 0, 1914,
	2985, 1917, 2023, 1915, 1899, 1901, 0, 1903, 0, 0,
	0, 1908, 1934, 1932, 0, 1983, 1912, 1913, 2006, 2006,
	2038, 0, 2011, 0, 2038, 1926, 2069, 0, 2017, 3015,
	2380, 2381, 0, 2675, 2670, -2, -2, 3203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 800,
	0, 806, 808, 0, 0, 0, 0, 839, 838, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	3169, 547, 548, 551, 0, 589, 590, 591, 592, 593,
	3169, 0, 0, 0, 0, 599, 600, 601, 602, 603,
	604, 605, 257, 3169, 690, 719, 715, 0, 257, 3169,
	693, 718, 257, 3169, 696, 717, 0, 699, 1643, 257,
	3169, 702, 2634, 257, 3169, 705, 707, 257, 3169, 711,
	2649, 2647, 712, 0, 714, 277, 273, 274, 275, 276,
	1740, 1741, 1742, 1743, 0, 1774, 1644, 861, 0, 887,
	0, 899, 900, 3157, -2, 0, 3039, 904, 905, -2,
	907, 1778, 1782, 1783, 1784, 1785, 1786, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 894, 895, 914, 915,
	921, 924, 0, 1036, 1032, 1048, 0, 1063, 0, 1064,
	1064, 2623, 2614, 2615, 0, 0, 1064, 1064, 0, 0,
	1067, 1068, 1069, 1070, 1071, 1768, -2, 90, 0, 3169,
	2069, 92, 0, 2628, 2701, 2702, 2703, 2704, 2705, 3204,
	3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233,
	3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243,
	3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253,
	3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263,
	3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273,
	3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283,
	3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293,
	3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303,
	3206, 96, 0, 3169, 101, 0, 3169, 0, -2, 125,
	566, 126, 0, 148, 0, 176, -2, -2, -2, 157,
	0, 3169, 0, 2603, -2, 0, 269, -2, 0, 790,
	392, 393, 2688, 2689, 2697, 2698, 2699, 2700, 381, 382,
	0, 781, 0, 890, 2478, 0, 0, 1359, -2, 0,
	1571, 1573, 1573, 0, -2, 0, 0, 0, 1310, 2600,
	2605, 1311, 1312, 2624, 1313, 2610, 0, 436, 437, 438,
	439, 440, 0, 441, 3169, 443, 444, 0, 446, 447,
	3169, 449, 450, 0, 452, 0, 454, 0, 314, 331,
	329, 3169, 0, 3169, 480, 483, 0, 587, 0, 584,
	0, 568, 569, 0, 571, 0, 0, 0, 576, 577,
	579, 580, 581, 582, 583, 0, 628, 626, 2639, 646,
	406, 0, -2, 3169, 0, 1356, 0, 0, 1623, -2,
	0, 1564, -2, 0, 1630, 3169, 1626, 0, -2, 0,
	1924, 3169, 1795, 1391, 1392, 1393, 1394, 2083, 652, 0,
	1831, 0, 1833, 0, 1853, 2077, 2006, 0, 0, 2082,
	0, -2, 778, 2658, -2, 728, 0, 729, 0, -2,
	0, 406, 0, 0, 1337, 1339, 1340, 1342, 1343, 1346,
	1347, 1348, 1349, 0, 1351, 2055, 351, 353, 0, 0,
	0, 0, 1336, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 0, 646, 872, 0, 0, 1073, 1074, 0,
	0, 1092, 1093, 1094, 0, 0, 406, -2, -2, -2,
	-2, 2751, 1104, 0, 1112, 1115, -2, 0, 0, 0,
	0, 1122, 0, 1127, 1128, 1129, 0, -2, 0, 1137,
	1139, 1320, 1142, 0, 1320, 0, 1144, 0, 1148, 0,
	1151, 0, 1153, 0, 1155, -2, -2, -2, 1163, 1164,
	-2, 1169, -2, 0, 1173, -2, 0, 1176, 0, 1179,
	-2, 0, 1189, 1185, 1186, 0, 0, 0, 0, 1206,
	1207, 0, 1211, 0, 1220, 0, 1223, 1224, 1225, 0,
	0, 1230, 1231, 0, 1233, 1234, 1235, 1237, 1238, 1239,
	0, 3113, 3036, 2770, 2818, 0, 1248, -2, 2807, 1258,
	1260, 0, -2, 0, 1276, 0, 1280, 0, 0, 1289,
	0, 0, 0, 1076, 0, 1085, 1086, 1087, 257, 2073,
	1753, 0, -2, 0, 851, 0, 855, 1956, 1882, 1879,
	0, 1953, 1954, 1883, 0, 0, 0, 1890, 0, 1929,
	1930, 0, 0, 0, 1869, 1870, 0, 0, 0, 0,
	0, 0, 2483, 2484, 2485, 2486, 2499, 2487, 2488, 2498,
	2496, 2497, 2489, 2490, 2495, 2509, 2510, 2500, 2501, 2491,
	2504, 2502, 2503, 2505, 2506, 2507, 2508, 0, 0, 2514,
	0, 2492, 2493, 2494, 2522, 0, 0, 2523, 0, 2525,
	0, 2515, 2511, 2512, 2513, 0, 2285, 2287, 2589, 0,
	0, 0, 2521, 2516, 2517, 2223, 2224, 2225, 2226, 2227,
	2260, 2264, 2265, 0, 0, 2340, 2586, 2585, 2342, 0,
	0, 2537, 0, 2355, -2, 0, 2478, 2532, 0, 0,
	2364, 2365, 2366, 0, 0, 2537, 0, 0, 2580, 2376,
	2377, 2215, 0, 0, 2446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2164, 2163, 0, 2165, 0, 2166, 2167,
	2174, 2187, 0, 0, 0, 0, 2191, 0, 0, 0,
	0, 0, 0, 0, 2561, -2, 0, 0, 0, 0,
	2179, 0, 0, 1916, 0, 0, 0, 1987, 2590, 2594,
	2595, 1987, 1987, 0, 0, 2538, 2066, 2066, 0, 0,
	2061, 2061, 2061, 2059, 2038, 0, 2038, 2048, 0, 2038,
	2038, 0, -2, 2011, 0, 0, 2052, 0, 2032, 766,
	768, 770, 772, 773, 774, 776, 2070, 2071, 0, 0,
	0, 0, 2676, 0, 0, 0, 0, 0, 0, 2661,
	0, 0, 2633, 461, 462, 0, 0, 0, 3093, 3028,
	0, -2, -2, -2, -2, 3036, 0, 0, 2770, 2807,
	2818, 811, 841, 0, 1926, 0, 2540, 2098, 2102, 0,
	2104, 2105, 2106, 2107, 2108, 0, 0, 2099, -2, 2175,
	2177, 2198, 2693, 2694, 2695, 2158, 2159, 2160, 2161, 2162,
	2170, 2157, 2157, 2157, 2168, 2197, 2189, 2197, 2193, 2143,
	2144, 2145, 2180, 2181, 2182, 2183, 0, 3093, 3028, 0,
	-2, 0, 823, 0, 0, 0, 1864, 341, 342, 545,
	0, 255, 256, 0, 550, 0, 588, 0, 595, 596,
	597, 0, 686, 0, 0, 257, 3169, 691, 0, 694,
	0, 257, 3169, 2598, 700, 0, 703, 0, 0, 709,
	0, 0, 0, 0, 0, 257, 1866, 0, 0, 0,
	0, -2, 909, 917, 918, 919, 0, 1780, 0, 1787,
	938, 939, 940, 1789, 1790, 0, 1792, 912, 941, 942,
	943, 944, 945, 946, 0, 2612, 2613, 2618, 2619, 0,
	0, 910, 931, 913, 0, 925, 1039, 1034, 1035, 1049,
	1050, 0, 0, 2616, 2617, 0, 0, 1055, 1056, 158,
	1726, 0, 0, 210, 0, 1726, 1726, 0, 0, 0,
	0, 238, 0, 0, 1425, 0, 0, 0, 0, 176,
	195, 206, 170, 171, 172, 0, 0, 0, 0, 0,
	0, 102, 1537, 0, 1540, 0, 0, 0, 0, 0,
	0, 0, 1553, 1556, 0, 0, 0, 0, 560, 0,
	534, 0, 0, 557, 565, 0, 0, 521, 522, 523,
	524, 0, 0, 529, 0, 0, 0, 0, 535, 0,
	128, 129, 0, 0, 134, 135, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 1828, 0, 185, 176, 0,
	0, 175, 177, 160, 0, 0, 176, 180, 196, 208,
	0, 244, 0, 183, 184, 246, 1422, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 279, 0, 0, 316,
	788, 0, 791, 0, 780, 782, 646, 646, 0, 0,
	888, 892, 893, 0, 0, 889, 891, 0, 0, 1565,
	0, 0, 0, 1923, 0, 0, 0, 0, 3169, 1724,
	0, 1707, 0, 2055, 2869, -2, -2, 351, 2055, 1309,
	0, 0, 2676, 2608, 0, 0, 0, 0, 0, 0,
	453, 0, 0, 0, 340, 0, 0, 0, 485, 490,
	0, 578, 567, 570, 572, 573, 574, 616, 1484, 3169,
	0, 0, 650, 641, 0, 645, 0, 0, 649, 0,
	0, 1536, 3169, 1534, 2643, 0, 1562, 0, 1622, 1515,
	3169, 2641, 0, 0, 0, 1631, 2685, 1640, 1644, 1816,
	0, 654, 0, 1834, 1836, 0, 0, 2078, 0, 2080,
	2006, 1926, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 1350, 360, 0, 2054, 0, 0, 394, 2055,
	351, 2998, 0, 1335, 406, 406, 2055, 874, 2055, 876,
	0, 0, 1095, 0, 0, 1098, 406, 406, 406, 406,
	406, 1110, 1111, 1113, 1114, -2, -2, -2, -2, 1116,
	1117, 1217, 0, 0, 0, 1216, 1722, 0, 1133, 1136,
	1140, 0, 1293, 3010, 3028, 3093, 1318, 1141, 1217, 2770,
	1217, 2770, 1217, 2770, 1217, 1217, 1157, 1201, 1213, 1168,
	1175, 0, 1170, 1174, 1177, 1180, 0, 1182, 1190, 0,
	-2, 0, 1193, 0, 1195, 0, 1197, 1217, 1209, 1218,
	1221, 0, 1229, 1232, 0, 1240, 1241, 1242, 1243, 2656,
	1244, 1245, 1246, 1247, -2, 0, 1251, 1252, 0, 0,
	1267, 1272, 1273, 1269, 0, 0, 0, 0, 0, 0,
	1283, 1284, 0, 0, 0, 1292, 0, 1088, 1557, 0,
	1762, 1956, 1882, 854, 1873, 1955, 1874, 1881, 1884, 0,
	0, 1886, 0, 1888, 0, 1951, 1952, 1959, 1960, 0,
	1970, 1971, 1963, 0, -2, 0, 0, 1966, 1967, 1892,
	0, 1909, 1910, 1911, 1940, 1943, 1659, 0, 3304, 897,
	0, 2219, 2093, 2220, 2221, 2627, 0, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, -2, -2, -2,
	-2, -2, -2, -2, -2, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, -2, -2, -2, 2261,
	2262, 2263, -2, 2524, 2526, 0, 2589, 0, -2, 0,
	-2, -2, -2, -2, 2282, 0, 2284, 2289, 2291, 2293,
	0, 0, 0, 0, 2588, 2303, 2572, 2573, 0, 0,
	2480, 2481, 2482, 2288, 0, 2307, 2587, 2584, 0, 0,
	2518, 0, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 0, 2536, 1939, 2368, 0,
	0, 0, 0, 2375, 2360, 2534, 0, 2533, 0, 0,
	0, 2544, 0, 2579, 2575, 0, 2625, 2214, 2201, 2202,
	2203, 2204, 2205, 2206, 2216, 0, 2622, 2662, 2668, 2454,
	0, 0, 0, 2405, 2406, 2407, 2408, 2409, 0, 2411,
	2412, 0, 2414, 2415, 0, 2417, 2418, 0, 2420, 2421,
	2422, 2423, 2424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 0, 0, 2426, 0, 2547, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2428, 0, 2430, 2538,
	2558, 0, 0, 2308, 0, 0, 0, 0, 0, 2433,
	2538, 2566, 0, 0, 0, 0, 0, 2538, 0, 2571,
	0, 2440, 0, 2442, 1119, 1120, 1918, 0, 0, 2024,
	0, 2088, 0, 0, 0, 2593, 2596, 2597, 3127, 3128,
	3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138,
	3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148,
	2088, 2088, 0, 1982, 0, 0, 2062, 2063, 2064, 2065,
	0, 0, 2066, 0, 2056, 2060, 2057, 2058, 2048, 2003,
	0, 0, 2629, 2048, 2009, 2047, 0, 2023, 2037, 2048,
	2048, 0, -2, 2013, 2051, 0, 2026, 2038, 0, 0,
	767, 769, 771, 775, 777, 0, 0, 1939, -2, 0,
	-2, 408, 1514, 0, 0, 0, 0, 0, 0, 801,
	803, 0, 0, 706, 0, 0, 0, 0, 1299, 0,
	1301, 1302, 0, 1304, 0, 1710, 795, 0, 798, 0,
	2089, 2092, 0, 0, 2103, 2109, 2110, 0, -2, 0,
	0, 2199, 0, 0, 0, 0, 0, 0, 0, 836,
	0, 3074, 0, 834, 0, 549, 257, 0, 553, 554,
	0, 0, 502, 503, 504, 505, 507, 2696, 508, -2,
	-2, 0, 598, 257, 716, 688, 0, 257, 257, 697,
	0, 0, 257, 708, 257, 2650, 257, 2648, 278, 713,
	1865, 290, 0, 896, 0, 1779, 1788, 0, 935, 0,
	937, 0, 2620, 2621, 0, 926, 0, 1037, 0, 1051,
	1052, 1053, 1054, 0, 0, 0, 0, 1725, 0, 0,
	1670, 0, 0, 214, 3169, 0, 259, 0, 0, 1477,
	2635, 0, 1467, 0, 0, 2794, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 173, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 1538, 1539, 1541, 1548, 1550, 0,
	1544, 1545, 0, 1547, 1549, 1551, 0, 1554, 0, 0,
	0, 0, 0, 0, 556, 558, 559, 534, 0, 0,
	0, 0, 0, 0, 0, 527, 528, 530, 531, 532,
	533, 0, 0, 0, 0, 0, 0, 136, 140, 1574,
	3034, 0, 0, 0, 0, 1575, 1576, 1577, 1804, 1805,
	0, 1827, 1828, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 182, 0, 2602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 317,
	0, 792, 0, 793, 0, 783, 406, 785, 786, 402,
	399, 401, 787, 0, 0, 0, 1567, 0, 1618, 1616,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 0, 0, 0, 0,
	-2, 1569, 1570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 397, 2601, 2611, 0, 1344, 1345,
	442, 445, 448, 451, 296, 0, 0, 0, 482, 492,
	0, 1397, 1369, 0, 0, 627, 406, 646, 648, 0,
	404, 2944, 2654, 1354, 1532, 1535, 0, 1515, 3169, 1586,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	3169, 2630, 2684, 2685, 1818, 1828, 0, 2088, 0, 1851,
	1837, 0, 0, 0, 1851, 1855, 1856, 1858, 1859, 0,
	0, 2079, 2085, 727, 779, 1926, 1926, 406, 0, 0,
	1840, 1842, 0, 0, 0, 343, 0, 354, 2055, 352,
	0, 360, 0, 0, 2055, 351, 0, 640, 873, 878,
	406, 0, 0, 406, 1099, 1100, 1101, 1102, 1103, 1159,
	1203, 1215, 1271, 1121, 1123, 1124, 1125, 0, 1130, 0,
	0, 0, 0, 1319, 1314, 1315, 1316, 2651, 2647, 1317,
	1143, 1217, 1146, 1217, 1149, 1217, 1152, 1154, 1172, 1178,
	1191, 1184, 1192, 0, 0, 0, 1205, 0, 0, 1227,
	0, 1236, 1250, -2, 1255, 1256, 0, 0, 0, 0,
	0, 0, 0, 1277, 1278, 1279, 1281, 1286, 1285, 0,
	1291, 1089, 2074, 1877, 1878, 1880, 0, 1889, 0, 0,
	1965, -2, -2, 1964, 1968, 1969, -2, -2, -2, -2,
	1885, 0, 1894, 1891, 0, 1950, 1657, 1658, 0, 0,
	898, 0, 0, -2, -2, 0, 0, 0, 2304, 0,
	-2, 2283, 2286, 2290, 2292, 2294, 0, 0, 0, 0,
	0, 0, 2527, 0, 2529, 2305, 2582, 2585, 2520, 0,
	2476, 0, 0, 1938, 1939, 1939, 0, 2374, 0, 2535,
	0, 2542, 2543, 0, 2367, 0, 2576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2378, 0, 0, 0,
	0, 2410, 2413, 2416, 2419, 0, 0, 0, 0, 2399,
	0, 0, 0, 2403, 2169, 2155, 0, 2197, 2195, 2196,
	2190, 2197, 2194, 2147, 0, 2146, 0, 2425, 0, 2427,
	2429, 0, 0, 2431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2311, 2312,
	2313, 2333, 2432, 2564, 2565, 0, 0, 0, 0, 0,
	0, 2438, 0, 2570, 2439, 2441, 1926, 0, 1919, 0,
	2022, 0, 1984, 1973, 2087, 0, 2591, 2055, 1986, 1988,
	2592, 2632, 1973, 1973, 0, 2539, 0, 0, 2042, 0,
	0, 0, 2044, 2007, 0, 0, 2001, 0, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 2008, 2023, 2046, 2010, 2014,
	2662, 0, 2026, 2050, 0, 2048, 0, 2033, 0, 2035,
	2072, 0, 2019, 2052, 0, 0, 2677, 2088, 0, 455,
	463, 464, 456, 457, 458, 459, 0, 1710, 0, 0,
	0, 0, 0, 1300, 1303, 0, 819, 0, 0, 2541,
	0, 2094, 0, 2100, 0, 0, 0, 0, 821, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 546, 552,
	0, 0, 501, 0, 500, 506, 594, 687, 257, 692,
	695, 2599, 257, 701, 704, 710, 286, 0, 886, -2,
	933, 934, 936, 0, 932, 1042, 1038, 211, 1726, 0,
	0, 0, 1666, 0, 1380, 0, 1375, 1376, 1668, 2646,
	1672, 1678, 1681, 0, 216, 3169, 228, 0, 3169, 0,
	1441, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	3169, 257, 3169, 257, 232, 234, 237, 0, 243, 239,
	0, 1377, 0, 1429, 0, 0, 1432, 159, 1726, 0,
	0, 162, 166, 178, 0, 0, 0, 193, 0, 0,
	0, 1683, 1687, 1695, 0, 0, 0, 1542, 1543, 1546,
	1552, 1555, 103, 0, 0, 0, 1691, 1693, 1699, 561,
	562, 563, 0, 0, 0, 525, 526, 127, 130, 3169,
	2644, 0, 132, 3169, 0, 141, 1828, 0, 0, 0,
	0, 1665, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 164, 168, 179, 0, 1701, 161, 181, 0, 272,
	0, 0, 262, 257, 3169, 0, 264, 0, 265, 266,
	280, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 789, 0, 784, 0, 0, 0, 1357, 1358,
	1617, 0, 1560, 1561, 326, 327, 0, 1572, 1566, 0,
	0, 0, 0, 0, 1703, 1704, 0, 0, 0, 1724,
	1719, 2055, 292, 0, 2055, 300, 0, 2607, 0, 330,
	339, 479, 0, 491, 493, 495, 0, 0, 0, 1396,
	1495, 1398, 1400, 1401, 1402, 259, 0, 2685, 1467, 2855,
	2685, 0, 0, 1364, 0, 0, 0, 633, 629, 0,
	638, 642, 643, 0, 0, 0, -2, 0, 0, 0,
	0, -2, 0, 0, 0, 1633, 1627, 1628, 0, 0,
	0, 0, 3169, 1820, 1828, 0, 1924, 1939, 653, 1829,
	1851, 0, 0, 0, 1839, 1835, 1832, 2088, 0, 0,
	0, 0, 0, 2081, 2084, 730, 731, 383, 0, 406,
	0, 0, 0, 0, 0, 0, 358, 0, 361, 0,
	0, 0, 366, 367, 368, 369, 370, 371, 0, 0,
	374, 0, 0, 378, 379, 360, 395, 345, 2055, 0,
	360, 0, 0, 875, 0, 1090, 0, 0, 1097, 0,
	0, 1722, 1722, 1135, 0, 1145, 1147, 1150, 1194, 1196,
	1217, 1208, 0, 1228, 1254, 1261, 2631, 1262, 1419, 0,
	1419, 0, 0, 1282, 1288, 1887, 0, 1962, 1893, 1944,
	1945, 0, 1659, 0, 2222, 2267, 0, 0, -2, 0,
	0, 2271, 0, 0, 0, -2, 0, 0, 0, 2528,
	2530, 0, 2584, 2519, 2369, 0, 0, 0, 2373, 2357,
	2358, 0, 2479, 2545, 2574, 2578, 0, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 0, 2626, 2663, 2667, 2452, 2453,
	2457, 2640, 0, 0, 0, 2382, 0, 0, 0, 0,
	0, 0, 0, 0, 2188, 2192, 0, 0, 2546, 2557,
	2559, 2309, 2310, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, -2, -2, -2, 2327, 2328, 2329, -2,
	-2, -2, 2334, 0, 0, 0, 2560, 2562, 2563, 2567,
	2568, 0, 2435, 2436, 2437, 2569, 0, 1926, 1920, 2025,
	1981, 0, 2086, 1985, 0, 1981, 1981, 1933, 2040, 0,
	0, 2068, 0, 2004, 0, 2005, 0, 0, 2045, 0,
	2012, 2049, 0, 2028, 2030, 2015, 2016, 2034, 0, 2018,
	0, 2021, 2369, -2, 407, 409, 411, 0, 414, 415,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	810, 1710, 1710, 0, 0, 0, 812, 0, 796, 0,
	0, 2096, 0, 0, 2172, 2176, 2200, 825, 827, 0,
	0, 0, 0, 3093, 3028, 0, 0, 824, 555, 498,
	499, 689, 698, 288, 0, 2053, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 258, 0,
	1476, 0, 1439, 0, 0, 1466, 0, 0, 1482, 218,
	219, 220, 0, 0, 0, 0, 230, 0, 0, 226,
	0, 236, 242, 241, 0, 1426, 0, 0, 0, 0,
	1671, 0, 0, 0, 190, 191, 192, 0, 197, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	0, 0, 0, 0, 138, 0, 0, 0, 143, 144,
	0, 0, 1810, 1811, 0, 1798, 187, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 1656, 282, 0,
	0, 0, 0, 0, 318, 319, 320, 321, 0, 304,
	306, 0, 0, 311, 0, 0, 328, 0, 403, 398,
	400, 1559, 1620, 1621, 1568, 1684, 1688, 1696, 0, 0,
	0, 0, 0, 844, 1723, 0, 300, 298, 0, 301,
	300, 294, 0, 0, 0, 0, 0, 0, 0, 575,
	1367, 1483, 0, 0, 1485, 1403, 1407, 0, 2685, 2685,
	0, 2637, 0, 1365, 0, 0, 1484, 625, 0, 632,
	0, 647, 2636, 0, 0, 0, 1536, 0, 0, 1563,
	1515, 1589, 1515, 0, 1632, 1634, 0, 1642, 0, 0,
	0, 1822, 1828, 0, 1815, 1816, 1958, 1830, 1849, -2,
	0, 0, 1939, 1857, 1854, 1860, 1861, 0, 0, 386,
	0, 1841, 1843, 0, 1338, 1341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 360, 357, 347,
	2055, 390, 0, 406, 406, 1126, 1721, 1131, 1132, 2652,
	1204, 1226, 1263, 1418, 0, 0, 1265, 0, 0, 1961,
	1948, 1949, 1946, 1659, 2269, 2273, 0, 0, 0, 2275,
	-2, 0, 2297, -2, -2, 2531, 2583, 2348, 1939, 2370,
	2372, 2359, 2577, 2217, 0, 2459, 2456, 0, 2443, 0,
	2394, 2395, 0, 0, 2398, 2400, 2401, 2402, 2156, 2149,
	2148, 2556, 0, 0, 0, 0, 2434, 1921, 0, 2448,
	0, 0, 1989, 2448, 2448, 2041, 0, 2043, 2002, 1990,
	0, 1999, 0, 2663, 2027, 0, 2031, 2036, 2020, 0,
	412, 0, 416, 417, 418, 419, 421, 0, 0, 0,
	0, 0, 460, 813, 814, 0, 0, 0, 0, 1709,
	2090, 2095, 0, 2101, 2171, 0, 0, 0, 0, 0,
	0, 0, 0, 835, 289, 0, 1040, 1041, 212, 213,
	1381, 1379, 1675, 1679, 1676, 0, 215, 0, 0, 1440,
	0, 1443, 0, 0, 0, 0, 1450, 1467, 0, 0,
	0, 0, 0, 0, 1469, 0, 1468, 0, 0, 1499,
	0, 1647, 1654, 0, -2, 0, 0, 0, 222, 248,
	0, 0, 0, 0, 251, 1727, 224, 0, 0, 257,
	257, 1378, 0, 0, 1667, 1669, 1682, 0, 0, 0,
	0, 200, 0, 0, 1685, 1689, 1697, 1692, 1694, 1700,
	564, 520, 0, 0, 133, 142, 1801, 0, 0, 0,
	1812, 0, 186, 0, 0, 0, 1702, 270, 271, 0,
	257, 0, 257, 263, 257, 1656, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 1705, 1706, 291, 0, 0, 293, 396,
	300, 481, 489, 494, 496, 497, 1428, 0, 1495, 1487,
	1488, 1489, 0, 1399, 1494, 1496, 0, 0, 1404, 0,
	0, 0, 0, 1384, 1366, 0, 1397, 1369, 0, 630,
	0, 405, 1355, 1533, 1581, 1515, 0, 1584, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 1824, 1828,
	0, 1817, 1818, 1851, 1957, 0, 0, 0, 1838, 1958,
	0, 406, 0, 406, 362, 0, 363, 364, 365, 372,
	373, 375, 376, 377, 346, 349, 0, 360, 877, 879,
	0, 0, 885, 1091, 1096, 1417, 0, 0, 0, 0,
	1947, 2277, -2, -2, 2298, 0, 2664, 2666, 1939, 0,
	2445, 1941, 0, 0, -2, 0, 0, 0, 1922, 1905,
	0, 1980, 1972, 1974, 1976, 3013, 2765, 3168, 1906, 1907,
	2067, 0, 0, 2029, 413, 422, 423, 0, 425, 426,
	815, 0, 0, 0, 0, 2097, 0, 0, 0, 822,
	0, 0, 0, 0, 1030, 0, 0, 1677, 217, 0,
	0, 1444, 1445, 1447, 0, 1449, 1451, 1452, 1369, 0,
	1456, 0, 2687, 0, 1461, 1464, 1465, 0, 0, 1478,
	1500, 0, 1509, 0, 1649, 1659, 1653, 0, 1651, 1511,
	0, 221, 250, 223, 252, 247, 0, 1656, 0, 225,
	235, 0, 0, 163, 0, 0, 2758, 203, 201, 199,
	131, 137, 139, 145, 1664, 189, 0, 165, 0, 272,
	281, 1655, 283, 267, 257, 0, 303, 305, 307, 308,
	309, 310, 312, 0, 1686, 1690, 1698, 0, 1713, 1714,
	1715, 1716, 1717, 0, 0, 0, 302, 0, 0, 0,
	488, 1369, 1427, 1368, 1486, 0, 1497, 1369, 0, 0,
	0, 0, 0, 0, 1371, 0, 1370, 0, 0, 631,
	634, 0, 637, 2088, 644, 0, 0, 0, 1588, 0,
	1635, 1633, 0, 1641, 0, 0, 0, 1797, 0, 0,
	1819, 1820, 651, 1844, 0, 0, 1851, 1862, 385, 0,
	388, 359, 0, 348, 0, 881, 0, 883, 0, 1264,
	1266, 0, 0, 2371, 2463, 0, 0, 2396, 2397, -2,
	0, 2337, 2447, 2449, 0, 0, 0, 0, 0, 1991,
	2000, 424, 1710, 1710, 1710, 2091, 829, 830, 832, 826,
	828, 0, 0, 1673, 0, 1680, 259, 1442, 1446, 0,
	1453, 0, 0, 0, 1457, 1519, 0, 0, 1536, 1536,
	1470, 0, 0, 1503, 1504, 1424, 0, 1505, 1506, 1507,
	1648, 1950, 1654, 1369, 0, 0, 249, 254, 0, 0,
	0, 0, 0, 0, 188, 0, 261, 284, 1656, 0,
	0, 1718, 0, 0, 299, 335, 511, 509, 1371, 0,
	1498, 1405, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1406, 1511, 0, 0, 1475, 1382, 0, 1385, 0,
	1367, 0, 635, 636, 639, 0, 1582, 0, 1589, 0,
	0, 1642, 0, 0, 1807, 1796, 1828, 1821, 1822, 2088,
	0, 1852, 0, 355, 356, 880, 0, 0, 1274, 1275,
	0, 0, 0, 0, 2458, 1942, 2338, 0, 0, 1975,
	1977, 1978, 1979, 816, 817, 818, 0, 0, 1674, 229,
	0, 1513, 1455, 1524, 0, 0, 0, 0, 0, 1471,
	1501, 1502, 1499, 1423, 0, 1652, 1650, 1480, 1513, 1515,
	227, 0, 1511, 0, 1433, 0, 0, 1436, 0, 0,
	204, 2758, 202, 0, 257, 794, 1710, 257, 0, 338,
	0, 544, 510, 512, 0, 0, 516, 517, 518, 1363,
	0, 1491, 1493, 1509, 1511, 1424, 0, 1386, 1428, 1384,
	1583, 1587, 1585, 1625, 1511, 0, 1509, 0, 1814, 1828,
	1808, 1809, 0, 1824, 0, 0, 406, 882, 884, 2455,
	2475, 2464, -2, 3096, 2766, 0, 2475, 2475, 2450, 2451,
	0, 0, 0, 1369, 0, 1458, 1520, 1521, 0, 1516,
	1517, 1518, 2686, 1459, 1460, 1462, 1463, 2088, 0, 1510,
	1519, 253, 1369, 1430, 0, 0, 1431, 0, 0, 207,
	0, 209, 285, 1708, 1711, 0, 313, 0, 0, 484,
	542, 0, 0, 513, 514, 536, 515, 1360, 1362, 1369,
	0, 1424, 1509, 1369, 0, 0, 0, 1369, 1371, 1509,
	0, 1424, 0, 1803, 1813, 0, 1823, 1797, 0, 1847,
	0, 387, 2460, 0, 0, 2466, 2467, 2468, 2469, 2470,
	2461, 2462, 831, 833, 1448, 1454, 0, 1522, 0, 1523,
	0, 0, 0, 1479, 1508, 1524, 233, 1434, 0, 1437,
	0, 205, 0, 0, 333, 334, 541, 537, 1490, 1492,
	1369, 1424, 2088, 1372, 0, 1374, 1371, 1383, 1424, 0,
	1369, 0, 1826, 1802, 1806, 2645, 1807, 1845, 0, 0,
	0, 2472, 2473, 0, 0, 0, 1525, 0, 1528, 1529,
	0, 1526, 1499, 0, 0, 257, 0, 1926, 2088, 1369,
	1663, 1373, 1363, 1369, 1511, 2088, 1509, 1800, 1828, 1814,
	0, 2088, 2471, 2474, 2465, 1512, 1527, 1530, 1531, 1481,
	0, 0, 1712, 336, 0, 0, 543, 538, 539, 1663,
	2088, 1474, 0, 1661, 1662, 1361, 2088, 1509, 1663, 1424,
	1793, 1799, 0, 0, 1803, 2088, 1848, 1421, 0, 0,
	540, 1472, 1663, 1660, 1663, 1424, 1638, 1369, 1825, 1826,
	1846, 1435, 1420, 0, 337, 1473, 1636, 1369, 2088, 1800,
	0, 2088, 1663, 1794, 0, 1663, 1639, 1421, 1637, 1438,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 652, 3, 658, 653, 3,
	664, 665, 656, 654, 669, 655, 666, 657, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 673, 670,
	644, 646, 645, 649, 668, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 662, 3, 663, 659, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 671, 651, 672, 647,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 643, 57986, 648, 57987, 650, 57988, 660, 57989, 661,
	57990, 667, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1784
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1810
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1824
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1915
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1919
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2064
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2077
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2090
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2126
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2160
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2193
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2214
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2222
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2258
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2269
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2281
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = true
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = true
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = false
		}
	case 185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2326
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2388
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2405
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2424
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2432
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2443
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2453
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2463
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2472
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2483
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2489
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 205:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2515
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2520
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2611
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2655
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2665
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2668
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = nil
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = nil
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = true
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = false
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = nil
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3012
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3118
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeAllSecondaryTenants: tree.MakeDBool(true)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeAllSecondaryTenants: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3308
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3373
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = nil
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3598
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3606
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncludeAllSecondaryTenants: tree.MakeDBool(true)}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncludeAllSecondaryTenants: sqlDollar[3].union.expr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3754
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3763
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3769
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3774
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3779
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3811
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = nil
		}
	case 407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3887
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3901
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.CopyOptions{Quote: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3973
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4119
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4140
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4141
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4145
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4150
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4168
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "CREATE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: tree.Name(sqlDollar[6].str)}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: tree.Name(sqlDollar[3].str)}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4184
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4187
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4208
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = true
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = false
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = true
		}
	case 489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = false
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4250
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4305
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4306
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4307
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4340
		{
			return unimplemented(sqllex, "create window function")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4372
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4376
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4411
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4412
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4479
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4546
		{
		}
	case 560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4547
		{
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = true
		}
	case 566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = false
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4597
		{
			return unimplemented(sqllex, "create access method")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			return unimplemented(sqllex, "create cast")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4600
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4602
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4603
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "create publication")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplemented(sqllex, "create rule")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplemented(sqllex, "create server")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4616
		{
		}
	case 585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4617
		{
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4620
		{
		}
	case 587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4621
		{
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4624
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4630
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4633
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4634
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{
			return unimplemented(sqllex, "drop server")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4672
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4699
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4722
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4733
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4769
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4787
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4818
		{
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4820
		{
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.str = ""
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4838
		{

			sqlVAL.union.val = nil
		}
	case 651:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "DELETE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4866
		{
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4902
		{
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "DROP")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5031
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5084
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5099
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5103
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5142
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5169
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5178
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5186
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5202
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5210
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "DELETE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "INSERT")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "DELETE")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "INSERT")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5400
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5433
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5441
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5474
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5525
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5575
		{
			return helpWith(sqllex, "GRANT")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5726
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5729
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5739
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			return helpWith(sqllex, "RESET")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5768
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5787
		{
			return helpWith(sqllex, "RESET")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "USE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5816
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5817
		{
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5824
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "USE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5859
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5885
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5949
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5957
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5964
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5965
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5995
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6001
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6015
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6032
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6062
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6078
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			return unimplemented(sqllex, "set from current")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6091
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6121
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6126
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = tree.Low
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.Normal
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = tree.High
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6261
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6297
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6298
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6299
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = true
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = false
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = true
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = false
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = false
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6407
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6459
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = int64(1)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = int64(1)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = int64(1)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6514
		{
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6515
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6518
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6519
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6523
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6528
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6538
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6555
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.str = "client_encoding"
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6575
		{
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6577
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.str = "timezone"
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6618
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6647
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupConnectionTest,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6727
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6766
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6771
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6780
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6786
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6800
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6811
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6834
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6845
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:      sqlDollar[6].union.roleSpecList(),
				ForGrantee: true,
				Schema:     tree.Name(sqlDollar[7].str),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6871
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6901
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6911
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6924
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6939
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6950
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6963
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6972
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6983
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6988
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6999
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7004
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = true
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = true
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = false
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7040
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7041
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7042
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7059
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7085
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7086
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7102
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7110
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7118
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7154
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7159
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7161
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7165
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = true
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = false
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7180
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7185
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7216
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7244
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7254
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7259
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = true
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = false
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7277
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7298
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7306
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7316
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7327
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7341
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7349
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7359
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7363
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7377
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7393
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7398
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7403
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7408
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7413
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7433
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7446
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7451
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7463
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7468
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7479
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7508
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7516
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7537
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7542
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7547
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7551
		{
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7560
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7574
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7583
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7595
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7661
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7671
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7684
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7819
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7866
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7911
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7930
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7980
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7981
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7982
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7983
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7989
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7991
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7992
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8003
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8031
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8044
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8076
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8084
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8095
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8159
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8195
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8210
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8238
		{

			sqlVAL.union.val = nil
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8244
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.str = ""
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8254
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = nil
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8277
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8281
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8317
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8330
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8344
		{
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8345
		{
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8346
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8401
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8427
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8441
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8445
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.str = ""
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8583
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8690
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{

			sqlVAL.union.val = true
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = false
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8745
		{
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8749
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8752
		{
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8852
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8880
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8890
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8905
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8973
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8977
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8978
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9145
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9154
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9162
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9201
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9207
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9210
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9213
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9218
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9220
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9234
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9299
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.str = ""
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = true
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{

			sqlVAL.union.val = true
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = false
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9359
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9373
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9385
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9397
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9408
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9419
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = false
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = true
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = true
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = nil
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9566
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9567
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9592
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9594
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9596
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9598
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9600
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9602
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9637
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9655
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9674
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9691
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9708
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9712
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = false
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = true
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = false
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = true
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = false
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9766
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9772
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9778
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9786
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.str = ""
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.str = ""
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = true
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = true
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = false
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = false
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9857
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9863
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10088
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10094
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10106
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10112
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10126
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10132
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10191
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = true
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = false
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10255
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.str = ""
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10290
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10291
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10294
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10295
		{
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10306
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10354
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10362
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10391
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10402
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10406
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10407
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10408
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10427
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10440
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10449
		{
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10450
		{
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10451
		{
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10468
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10474
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10489
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10494
		{
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10537
		{
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10541
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				Owner:           sqlDollar[17].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[18].str),
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.str = ""
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.str = ""
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{

		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10704
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.str = ""
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.str = ""
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.str = ""
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.str = ""
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10759
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10785
		{
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10832
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10836
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10939
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11031
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11046
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11190
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11225
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11226
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11227
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11288
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11332
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11348
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = true
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = false
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11401
		{
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11402
		{
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = nil
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11416
		{
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = true
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = false
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = false
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = true
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11446
		{
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11450
		{
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11491
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11503
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11508
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11534
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11567
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11622
		{
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11623
		{
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11626
		{
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11627
		{
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11661
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11662
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11663
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11693
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11695
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11710
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11732
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11737
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11763
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11779
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11791
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11810
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11852
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11862
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11908
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11938
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = nil
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = true
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = false
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.str = tree.AstFull
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.str = tree.AstRight
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.str = tree.AstInner
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12153
		{
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.str = tree.AstHash
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.str = ""
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12227
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12257
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12263
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12269
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12279
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = true
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = false
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = true
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = false
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12328
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12341
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12349
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12350
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12368
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12370
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12378
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12391
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12398
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12407
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12447
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12459
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12460
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = types.Geography
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12509
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12517
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12543
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12551
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = nil
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = types.Int2
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = types.Int
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = types.Float4
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = types.Float
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12594
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12602
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12610
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = types.Bool
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = types.Float
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12643
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12649
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12671
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12683
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = types.String
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = true
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = false
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = types.Date
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12720
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12728
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12742
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12751
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12759
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12776
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = true
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = false
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12788
		{
			sqlVAL.union.val = false
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12792
		{
			sqlVAL.union.val = types.Interval
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12796
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12800
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12835
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12884
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12890
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12899
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12915
		{
			sqlVAL.union.val = nil
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12929
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12966
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12974
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12989
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13018
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13118
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13122
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13126
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13134
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13138
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13146
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13184
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13236
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13244
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13252
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13256
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13268
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13301
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13313
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13325
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13345
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {

				if tree.IsUnaryComplement(subOp) {
					subOp = treecmp.MakeComparisonOperator(treecmp.RegMatch)
				} else {
					sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
						subOp, op, subOp))
					return 1
				}
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13369
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13374
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13386
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13390
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13402
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13406
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13410
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13414
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13418
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13426
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13430
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13438
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13442
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13458
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13466
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13482
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13490
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13500
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13504
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13508
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13512
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13526
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13534
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13570
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13574
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13578
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13582
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13586
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13591
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13593
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13597
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13601
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13605
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13609
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13613
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13617
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13626
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13633
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13637
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13641
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13651
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13656
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13660
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13664
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13668
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13672
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13675
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13686
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13687
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13702
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13711
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13764
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13777
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13789
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13798
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13799
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13804
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13812
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13826
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13848
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13856
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13860
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13864
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13868
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13876
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13880
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13884
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13888
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13892
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13899
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13902
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13907
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13909
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13913
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13916
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13922
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13925
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13927
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13934
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13936
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13940
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13943
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13945
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13948
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13953
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13958
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13963
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13968
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13977
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13978
		{
			return unimplemented(sqllex, "treat")
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13999
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14001
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14004
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14010
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14014
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14020
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14024
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14031
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14035
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14041
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14045
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14051
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14059
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14063
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14067
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14074
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14094
		{
			sqlVAL.str = ""
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14100
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14104
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14110
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14118
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14126
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14134
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14140
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14153
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14181
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14185
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14189
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14193
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14200
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14209
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14213
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14217
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14221
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14226
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14239
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14243
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14250
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14262
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14266
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14270
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14286
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14287
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14288
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14289
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14290
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14291
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14292
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14293
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14294
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14295
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14296
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14297
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14299
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14300
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14301
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14302
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14303
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14304
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14305
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14306
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14307
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14308
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14309
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14311
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14312
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14313
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14314
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14315
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14316
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14317
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14318
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14319
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14320
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14321
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14326
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14342
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14349
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14350
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14351
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14352
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14375
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14379
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14389
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14393
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14404
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14408
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14414
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14418
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14425
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14431
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14441
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14451
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14455
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14461
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14471
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14475
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14498
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14502
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14506
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14512
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14519
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14523
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14540
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14544
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14548
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14552
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14556
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14562
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14568
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14574
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14578
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14582
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14588
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14600
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14607
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14617
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14623
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14627
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14634
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14640
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14644
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14651
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14657
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14666
		{
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14667
		{
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14671
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14681
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14690
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14694
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14698
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14710
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14720
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14724
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14743
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14751
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14774
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14783
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14787
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14791
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14795
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14801
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14820
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14824
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14836
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14840
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14849
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14860
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14869
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14877
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14894
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14979
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14987
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14991
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14997
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15001
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15007
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15013
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15020
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15047
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15054
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15058
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15062
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15076
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15080
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15084
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15097
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15106
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15124
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15137
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15144
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15169
		{
			sqlVAL.str = ""
		}
	case 2686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15175
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15179
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
