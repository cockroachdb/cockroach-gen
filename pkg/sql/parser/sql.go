// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:873
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13650

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1581,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 410,
	-2, 0,
	-1, 74,
	244, 243,
	518, 243,
	-2, 0,
	-1, 87,
	232, 1317,
	246, 1317,
	262, 406,
	392, 406,
	403, 1070,
	442, 406,
	455, 1070,
	502, 1070,
	529, 406,
	555, 1070,
	-2, 0,
	-1, 93,
	133, 1581,
	239, 1581,
	540, 1581,
	541, 1581,
	-2, 0,
	-1, 109,
	152, 1552,
	171, 1552,
	184, 1552,
	242, 1552,
	275, 1552,
	343, 1552,
	353, 1552,
	535, 1552,
	-2, 1523,
	-1, 150,
	160, 919,
	261, 919,
	395, 880,
	460, 880,
	501, 880,
	521, 919,
	523, 880,
	-2, 0,
	-1, 154,
	4, 1583,
	21, 1583,
	22, 1583,
	23, 1583,
	24, 1583,
	25, 1583,
	26, 1583,
	27, 1583,
	29, 1583,
	30, 1583,
	36, 1583,
	41, 1583,
	42, 1583,
	44, 1583,
	45, 1583,
	46, 1583,
	47, 1583,
	48, 1583,
	49, 1583,
	50, 1583,
	51, 1583,
	53, 1583,
	54, 1583,
	55, 1583,
	56, 1583,
	58, 1583,
	59, 1583,
	60, 1583,
	61, 1583,
	62, 1583,
	63, 1583,
	64, 1583,
	68, 1583,
	69, 1583,
	70, 1583,
	71, 1583,
	73, 1583,
	74, 1583,
	75, 1583,
	79, 1583,
	80, 1583,
	81, 1583,
	82, 1583,
	83, 1583,
	84, 1583,
	85, 1583,
	88, 1583,
	89, 1583,
	90, 1583,
	91, 1583,
	92, 1583,
	94, 1583,
	96, 1583,
	97, 1583,
	98, 1583,
	99, 1583,
	100, 1583,
	101, 1583,
	103, 1583,
	104, 1583,
	105, 1583,
	107, 1583,
	108, 1583,
	109, 1583,
	117, 1583,
	118, 1583,
	119, 1583,
	120, 1583,
	121, 1583,
	123, 1583,
	124, 1583,
	125, 1583,
	126, 1583,
	128, 1583,
	129, 1583,
	130, 1583,
	132, 1583,
	133, 1583,
	134, 1583,
	136, 1583,
	137, 1583,
	138, 1583,
	141, 1583,
	142, 1583,
	143, 1583,
	145, 1583,
	146, 1583,
	147, 1583,
	149, 1583,
	150, 1583,
	151, 1583,
	153, 1583,
	154, 1583,
	155, 1583,
	156, 1583,
	157, 1583,
	158, 1583,
	159, 1583,
	160, 1583,
	161, 1583,
	162, 1583,
	163, 1583,
	164, 1583,
	165, 1583,
	166, 1583,
	167, 1583,
	168, 1583,
	170, 1583,
	176, 1583,
	177, 1583,
	178, 1583,
	179, 1583,
	183, 1583,
	185, 1583,
	186, 1583,
	190, 1583,
	191, 1583,
	192, 1583,
	193, 1583,
	194, 1583,
	195, 1583,
	196, 1583,
	197, 1583,
	198, 1583,
	199, 1583,
	200, 1583,
	201, 1583,
	202, 1583,
	203, 1583,
	205, 1583,
	206, 1583,
	208, 1583,
	209, 1583,
	211, 1583,
	212, 1583,
	213, 1583,
	214, 1583,
	215, 1583,
	216, 1583,
	217, 1583,
	218, 1583,
	219, 1583,
	221, 1583,
	222, 1583,
	224, 1583,
	225, 1583,
	226, 1583,
	227, 1583,
	228, 1583,
	232, 1583,
	233, 1583,
	234, 1583,
	235, 1583,
	236, 1583,
	239, 1583,
	240, 1583,
	241, 1583,
	243, 1583,
	245, 1583,
	246, 1583,
	248, 1583,
	250, 1583,
	251, 1583,
	252, 1583,
	254, 1583,
	258, 1583,
	259, 1583,
	260, 1583,
	261, 1583,
	262, 1583,
	263, 1583,
	265, 1583,
	266, 1583,
	267, 1583,
	269, 1583,
	270, 1583,
	272, 1583,
	273, 1583,
	276, 1583,
	277, 1583,
	278, 1583,
	279, 1583,
	280, 1583,
	281, 1583,
	282, 1583,
	285, 1583,
	286, 1583,
	287, 1583,
	288, 1583,
	290, 1583,
	291, 1583,
	292, 1583,
	293, 1583,
	294, 1583,
	295, 1583,
	296, 1583,
	297, 1583,
	298, 1583,
	299, 1583,
	300, 1583,
	301, 1583,
	302, 1583,
	303, 1583,
	304, 1583,
	305, 1583,
	306, 1583,
	307, 1583,
	308, 1583,
	309, 1583,
	310, 1583,
	311, 1583,
	313, 1583,
	315, 1583,
	316, 1583,
	317, 1583,
	318, 1583,
	319, 1583,
	320, 1583,
	321, 1583,
	322, 1583,
	323, 1583,
	324, 1583,
	325, 1583,
	326, 1583,
	327, 1583,
	328, 1583,
	330, 1583,
	331, 1583,
	333, 1583,
	335, 1583,
	336, 1583,
	338, 1583,
	339, 1583,
	340, 1583,
	341, 1583,
	342, 1583,
	345, 1583,
	348, 1583,
	349, 1583,
	350, 1583,
	351, 1583,
	354, 1583,
	355, 1583,
	356, 1583,
	358, 1583,
	360, 1583,
	361, 1583,
	362, 1583,
	363, 1583,
	364, 1583,
	365, 1583,
	366, 1583,
	367, 1583,
	368, 1583,
	369, 1583,
	370, 1583,
	371, 1583,
	372, 1583,
	374, 1583,
	375, 1583,
	376, 1583,
	377, 1583,
	378, 1583,
	379, 1583,
	380, 1583,
	381, 1583,
	382, 1583,
	383, 1583,
	384, 1583,
	385, 1583,
	386, 1583,
	387, 1583,
	388, 1583,
	390, 1583,
	391, 1583,
	393, 1583,
	394, 1583,
	395, 1583,
	396, 1583,
	397, 1583,
	398, 1583,
	399, 1583,
	400, 1583,
	401, 1583,
	402, 1583,
	403, 1583,
	404, 1583,
	405, 1583,
	407, 1583,
	409, 1583,
	410, 1583,
	411, 1583,
	417, 1583,
	419, 1583,
	420, 1583,
	421, 1583,
	422, 1583,
	423, 1583,
	424, 1583,
	425, 1583,
	426, 1583,
	427, 1583,
	428, 1583,
	430, 1583,
	431, 1583,
	432, 1583,
	434, 1583,
	435, 1583,
	436, 1583,
	437, 1583,
	438, 1583,
	439, 1583,
	440, 1583,
	442, 1583,
	443, 1583,
	444, 1583,
	445, 1583,
	446, 1583,
	447, 1583,
	448, 1583,
	449, 1583,
	450, 1583,
	451, 1583,
	452, 1583,
	453, 1583,
	455, 1583,
	456, 1583,
	457, 1583,
	458, 1583,
	459, 1583,
	460, 1583,
	462, 1583,
	463, 1583,
	464, 1583,
	465, 1583,
	466, 1583,
	467, 1583,
	469, 1583,
	470, 1583,
	471, 1583,
	472, 1583,
	473, 1583,
	474, 1583,
	475, 1583,
	476, 1583,
	478, 1583,
	480, 1583,
	481, 1583,
	482, 1583,
	483, 1583,
	484, 1583,
	485, 1583,
	486, 1583,
	487, 1583,
	488, 1583,
	489, 1583,
	490, 1583,
	491, 1583,
	492, 1583,
	493, 1583,
	494, 1583,
	495, 1583,
	497, 1583,
	498, 1583,
	500, 1583,
	501, 1583,
	503, 1583,
	504, 1583,
	505, 1583,
	506, 1583,
	507, 1583,
	508, 1583,
	509, 1583,
	510, 1583,
	511, 1583,
	513, 1583,
	514, 1583,
	515, 1583,
	516, 1583,
	517, 1583,
	519, 1583,
	521, 1583,
	522, 1583,
	523, 1583,
	524, 1583,
	525, 1583,
	526, 1583,
	528, 1583,
	529, 1583,
	530, 1583,
	531, 1583,
	533, 1583,
	534, 1583,
	537, 1583,
	538, 1583,
	539, 1583,
	540, 1583,
	541, 1583,
	542, 1583,
	543, 1583,
	545, 1583,
	548, 1583,
	549, 1583,
	550, 1583,
	551, 1583,
	552, 1583,
	553, 1583,
	555, 1583,
	556, 1583,
	557, 1583,
	558, 1583,
	559, 1583,
	560, 1583,
	565, 1583,
	566, 1583,
	567, 1583,
	568, 1583,
	569, 1583,
	570, 1583,
	-2, 0,
	-1, 155,
	1, 1434,
	131, 1434,
	250, 1434,
	332, 1434,
	390, 1434,
	399, 1434,
	574, 1434,
	603, 1434,
	-2, 0,
	-1, 157,
	1, 1434,
	603, 1434,
	-2, 0,
	-1, 158,
	1, 1434,
	603, 1434,
	-2, 0,
	-1, 159,
	1, 1434,
	518, 1434,
	603, 1434,
	-2, 0,
	-1, 188,
	152, 1551,
	171, 1551,
	184, 1551,
	242, 1551,
	275, 1551,
	343, 1551,
	353, 1551,
	535, 1551,
	-2, 1526,
	-1, 236,
	4, 1590,
	5, 1590,
	6, 1590,
	7, 1590,
	8, 1590,
	9, 1590,
	10, 1590,
	21, 1590,
	22, 1590,
	23, 1590,
	24, 1590,
	25, 1590,
	26, 1590,
	27, 1590,
	29, 1590,
	30, 1590,
	36, 1590,
	37, 1590,
	41, 1590,
	42, 1590,
	43, 1590,
	44, 1590,
	45, 1590,
	46, 1590,
	47, 1590,
	48, 1590,
	49, 1590,
	50, 1590,
	51, 1590,
	53, 1590,
	54, 1590,
	55, 1590,
	56, 1590,
	58, 1590,
	59, 1590,
	60, 1590,
	61, 1590,
	62, 1590,
	63, 1590,
	64, 1590,
	65, 1590,
	66, 1590,
	67, 1590,
	68, 1590,
	69, 1590,
	70, 1590,
	71, 1590,
	73, 1590,
	74, 1590,
	75, 1590,
	77, 1590,
	79, 1590,
	80, 1590,
	81, 1590,
	82, 1590,
	83, 1590,
	84, 1590,
	85, 1590,
	88, 1590,
	89, 1590,
	90, 1590,
	91, 1590,
	92, 1590,
	94, 1590,
	96, 1590,
	97, 1590,
	98, 1590,
	99, 1590,
	100, 1590,
	101, 1590,
	103, 1590,
	104, 1590,
	105, 1590,
	106, 1590,
	107, 1590,
	108, 1590,
	109, 1590,
	110, 1590,
	111, 1590,
	112, 1590,
	113, 1590,
	114, 1590,
	115, 1590,
	116, 1590,
	117, 1590,
	118, 1590,
	119, 1590,
	120, 1590,
	121, 1590,
	122, 1590,
	123, 1590,
	124, 1590,
	125, 1590,
	126, 1590,
	127, 1590,
	128, 1590,
	129, 1590,
	130, 1590,
	132, 1590,
	133, 1590,
	134, 1590,
	136, 1590,
	137, 1590,
	138, 1590,
	141, 1590,
	142, 1590,
	143, 1590,
	145, 1590,
	146, 1590,
	147, 1590,
	149, 1590,
	150, 1590,
	151, 1590,
	153, 1590,
	154, 1590,
	155, 1590,
	156, 1590,
	157, 1590,
	158, 1590,
	159, 1590,
	160, 1590,
	161, 1590,
	162, 1590,
	163, 1590,
	164, 1590,
	165, 1590,
	166, 1590,
	167, 1590,
	168, 1590,
	169, 1590,
	170, 1590,
	176, 1590,
	177, 1590,
	178, 1590,
	179, 1590,
	183, 1590,
	185, 1590,
	186, 1590,
	189, 1590,
	190, 1590,
	191, 1590,
	192, 1590,
	193, 1590,
	194, 1590,
	195, 1590,
	196, 1590,
	197, 1590,
	198, 1590,
	199, 1590,
	200, 1590,
	201, 1590,
	202, 1590,
	203, 1590,
	205, 1590,
	206, 1590,
	208, 1590,
	209, 1590,
	211, 1590,
	212, 1590,
	213, 1590,
	214, 1590,
	215, 1590,
	216, 1590,
	217, 1590,
	218, 1590,
	219, 1590,
	220, 1590,
	221, 1590,
	222, 1590,
	224, 1590,
	225, 1590,
	226, 1590,
	227, 1590,
	228, 1590,
	232, 1590,
	233, 1590,
	234, 1590,
	235, 1590,
	236, 1590,
	238, 1590,
	239, 1590,
	240, 1590,
	241, 1590,
	243, 1590,
	245, 1590,
	246, 1590,
	247, 1590,
	248, 1590,
	249, 1590,
	250, 1590,
	251, 1590,
	252, 1590,
	253, 1590,
	254, 1590,
	258, 1590,
	259, 1590,
	260, 1590,
	261, 1590,
	262, 1590,
	263, 1590,
	265, 1590,
	266, 1590,
	267, 1590,
	269, 1590,
	270, 1590,
	271, 1590,
	272, 1590,
	273, 1590,
	274, 1590,
	276, 1590,
	277, 1590,
	278, 1590,
	279, 1590,
	280, 1590,
	281, 1590,
	282, 1590,
	283, 1590,
	284, 1590,
	285, 1590,
	286, 1590,
	287, 1590,
	288, 1590,
	290, 1590,
	291, 1590,
	292, 1590,
	293, 1590,
	294, 1590,
	295, 1590,
	296, 1590,
	297, 1590,
	298, 1590,
	299, 1590,
	300, 1590,
	301, 1590,
	302, 1590,
	303, 1590,
	304, 1590,
	305, 1590,
	306, 1590,
	307, 1590,
	308, 1590,
	309, 1590,
	310, 1590,
	311, 1590,
	313, 1590,
	314, 1590,
	315, 1590,
	316, 1590,
	317, 1590,
	318, 1590,
	319, 1590,
	320, 1590,
	321, 1590,
	322, 1590,
	323, 1590,
	324, 1590,
	325, 1590,
	326, 1590,
	327, 1590,
	328, 1590,
	329, 1590,
	330, 1590,
	331, 1590,
	332, 1590,
	333, 1590,
	334, 1590,
	335, 1590,
	336, 1590,
	337, 1590,
	338, 1590,
	339, 1590,
	340, 1590,
	341, 1590,
	342, 1590,
	345, 1590,
	349, 1590,
	350, 1590,
	351, 1590,
	354, 1590,
	355, 1590,
	356, 1590,
	357, 1590,
	358, 1590,
	359, 1590,
	360, 1590,
	361, 1590,
	362, 1590,
	363, 1590,
	364, 1590,
	365, 1590,
	366, 1590,
	367, 1590,
	368, 1590,
	369, 1590,
	370, 1590,
	371, 1590,
	372, 1590,
	374, 1590,
	375, 1590,
	376, 1590,
	377, 1590,
	378, 1590,
	379, 1590,
	380, 1590,
	381, 1590,
	382, 1590,
	383, 1590,
	384, 1590,
	385, 1590,
	386, 1590,
	387, 1590,
	388, 1590,
	390, 1590,
	391, 1590,
	393, 1590,
	394, 1590,
	395, 1590,
	396, 1590,
	397, 1590,
	398, 1590,
	399, 1590,
	400, 1590,
	401, 1590,
	402, 1590,
	403, 1590,
	404, 1590,
	405, 1590,
	407, 1590,
	409, 1590,
	410, 1590,
	411, 1590,
	417, 1590,
	419, 1590,
	420, 1590,
	421, 1590,
	422, 1590,
	423, 1590,
	424, 1590,
	425, 1590,
	426, 1590,
	427, 1590,
	428, 1590,
	430, 1590,
	431, 1590,
	432, 1590,
	433, 1590,
	434, 1590,
	435, 1590,
	436, 1590,
	437, 1590,
	438, 1590,
	439, 1590,
	440, 1590,
	442, 1590,
	443, 1590,
	444, 1590,
	445, 1590,
	446, 1590,
	447, 1590,
	448, 1590,
	449, 1590,
	450, 1590,
	451, 1590,
	452, 1590,
	453, 1590,
	455, 1590,
	456, 1590,
	457, 1590,
	458, 1590,
	459, 1590,
	460, 1590,
	461, 1590,
	462, 1590,
	463, 1590,
	464, 1590,
	465, 1590,
	466, 1590,
	467, 1590,
	468, 1590,
	469, 1590,
	470, 1590,
	471, 1590,
	472, 1590,
	473, 1590,
	474, 1590,
	475, 1590,
	476, 1590,
	478, 1590,
	480, 1590,
	481, 1590,
	482, 1590,
	483, 1590,
	484, 1590,
	485, 1590,
	486, 1590,
	487, 1590,
	488, 1590,
	489, 1590,
	490, 1590,
	491, 1590,
	492, 1590,
	493, 1590,
	494, 1590,
	495, 1590,
	497, 1590,
	498, 1590,
	499, 1590,
	500, 1590,
	501, 1590,
	503, 1590,
	504, 1590,
	505, 1590,
	506, 1590,
	507, 1590,
	508, 1590,
	509, 1590,
	510, 1590,
	511, 1590,
	513, 1590,
	514, 1590,
	515, 1590,
	516, 1590,
	517, 1590,
	519, 1590,
	521, 1590,
	522, 1590,
	523, 1590,
	524, 1590,
	525, 1590,
	526, 1590,
	527, 1590,
	528, 1590,
	529, 1590,
	530, 1590,
	531, 1590,
	533, 1590,
	534, 1590,
	536, 1590,
	537, 1590,
	538, 1590,
	539, 1590,
	540, 1590,
	541, 1590,
	542, 1590,
	543, 1590,
	544, 1590,
	545, 1590,
	548, 1590,
	549, 1590,
	550, 1590,
	551, 1590,
	552, 1590,
	553, 1590,
	555, 1590,
	556, 1590,
	557, 1590,
	558, 1590,
	559, 1590,
	560, 1590,
	565, 1590,
	566, 1590,
	567, 1590,
	568, 1590,
	569, 1590,
	570, 1590,
	571, 1590,
	584, 1590,
	591, 1590,
	592, 1590,
	593, 1590,
	600, 1590,
	604, 1590,
	-2, 0,
	-1, 748,
	4, 1315,
	21, 1315,
	22, 1315,
	23, 1315,
	24, 1315,
	25, 1315,
	26, 1315,
	27, 1315,
	29, 1315,
	30, 1315,
	36, 1315,
	41, 1315,
	42, 1315,
	44, 1315,
	45, 1315,
	46, 1315,
	47, 1315,
	48, 1315,
	49, 1315,
	50, 1315,
	51, 1315,
	53, 1315,
	54, 1315,
	55, 1315,
	56, 1315,
	58, 1315,
	59, 1315,
	60, 1315,
	61, 1315,
	62, 1315,
	63, 1315,
	64, 1315,
	68, 1315,
	69, 1315,
	70, 1315,
	71, 1315,
	73, 1315,
	74, 1315,
	75, 1315,
	79, 1315,
	80, 1315,
	81, 1315,
	82, 1315,
	83, 1315,
	84, 1315,
	85, 1315,
	88, 1315,
	89, 1315,
	90, 1315,
	91, 1315,
	92, 1315,
	94, 1315,
	96, 1315,
	97, 1315,
	98, 1315,
	99, 1315,
	100, 1315,
	101, 1315,
	103, 1315,
	104, 1315,
	105, 1315,
	107, 1315,
	108, 1315,
	109, 1315,
	117, 1315,
	118, 1315,
	119, 1315,
	120, 1315,
	121, 1315,
	123, 1315,
	124, 1315,
	125, 1315,
	126, 1315,
	128, 1315,
	129, 1315,
	130, 1315,
	132, 1315,
	133, 1315,
	134, 1315,
	136, 1315,
	137, 1315,
	138, 1315,
	141, 1315,
	142, 1315,
	143, 1315,
	145, 1315,
	146, 1315,
	147, 1315,
	149, 1315,
	150, 1315,
	151, 1315,
	153, 1315,
	154, 1315,
	155, 1315,
	156, 1315,
	157, 1315,
	158, 1315,
	159, 1315,
	160, 1315,
	161, 1315,
	162, 1315,
	163, 1315,
	164, 1315,
	165, 1315,
	166, 1315,
	167, 1315,
	168, 1315,
	170, 1315,
	176, 1315,
	177, 1315,
	178, 1315,
	179, 1315,
	183, 1315,
	185, 1315,
	186, 1315,
	190, 1315,
	191, 1315,
	192, 1315,
	193, 1315,
	194, 1315,
	195, 1315,
	196, 1315,
	197, 1315,
	198, 1315,
	199, 1315,
	200, 1315,
	201, 1315,
	202, 1315,
	203, 1315,
	205, 1315,
	206, 1315,
	208, 1315,
	209, 1315,
	211, 1315,
	212, 1315,
	213, 1315,
	214, 1315,
	215, 1315,
	216, 1315,
	217, 1315,
	218, 1315,
	219, 1315,
	221, 1315,
	222, 1315,
	224, 1315,
	225, 1315,
	226, 1315,
	227, 1315,
	228, 1315,
	232, 1315,
	233, 1315,
	234, 1315,
	235, 1315,
	236, 1315,
	239, 1315,
	240, 1315,
	241, 1315,
	243, 1315,
	245, 1315,
	246, 1315,
	248, 1315,
	250, 1315,
	251, 1315,
	252, 1315,
	254, 1315,
	258, 1315,
	259, 1315,
	260, 1315,
	261, 1315,
	262, 1315,
	263, 1315,
	265, 1315,
	266, 1315,
	267, 1315,
	269, 1315,
	270, 1315,
	272, 1315,
	273, 1315,
	276, 1315,
	277, 1315,
	278, 1315,
	279, 1315,
	280, 1315,
	281, 1315,
	282, 1315,
	285, 1315,
	286, 1315,
	287, 1315,
	288, 1315,
	290, 1315,
	291, 1315,
	292, 1315,
	293, 1315,
	294, 1315,
	295, 1315,
	296, 1315,
	297, 1315,
	298, 1315,
	299, 1315,
	300, 1315,
	301, 1315,
	302, 1315,
	303, 1315,
	304, 1315,
	305, 1315,
	306, 1315,
	307, 1315,
	308, 1315,
	309, 1315,
	310, 1315,
	311, 1315,
	313, 1315,
	315, 1315,
	316, 1315,
	317, 1315,
	318, 1315,
	319, 1315,
	320, 1315,
	321, 1315,
	322, 1315,
	323, 1315,
	324, 1315,
	325, 1315,
	326, 1315,
	327, 1315,
	328, 1315,
	330, 1315,
	331, 1315,
	333, 1315,
	335, 1315,
	336, 1315,
	338, 1315,
	339, 1315,
	340, 1315,
	341, 1315,
	342, 1315,
	345, 1315,
	349, 1315,
	350, 1315,
	351, 1315,
	354, 1315,
	355, 1315,
	356, 1315,
	358, 1315,
	360, 1315,
	361, 1315,
	362, 1315,
	363, 1315,
	364, 1315,
	365, 1315,
	366, 1315,
	367, 1315,
	368, 1315,
	369, 1315,
	370, 1315,
	371, 1315,
	372, 1315,
	374, 1315,
	375, 1315,
	376, 1315,
	377, 1315,
	378, 1315,
	379, 1315,
	380, 1315,
	381, 1315,
	382, 1315,
	383, 1315,
	384, 1315,
	385, 1315,
	386, 1315,
	387, 1315,
	388, 1315,
	390, 1315,
	391, 1315,
	393, 1315,
	394, 1315,
	395, 1315,
	396, 1315,
	397, 1315,
	398, 1315,
	399, 1315,
	400, 1315,
	401, 1315,
	402, 1315,
	403, 1315,
	404, 1315,
	405, 1315,
	407, 1315,
	409, 1315,
	410, 1315,
	411, 1315,
	417, 1315,
	419, 1315,
	420, 1315,
	421, 1315,
	422, 1315,
	423, 1315,
	424, 1315,
	425, 1315,
	426, 1315,
	427, 1315,
	428, 1315,
	430, 1315,
	431, 1315,
	432, 1315,
	434, 1315,
	435, 1315,
	436, 1315,
	437, 1315,
	438, 1315,
	439, 1315,
	440, 1315,
	442, 1315,
	443, 1315,
	444, 1315,
	445, 1315,
	446, 1315,
	447, 1315,
	448, 1315,
	449, 1315,
	450, 1315,
	451, 1315,
	452, 1315,
	453, 1315,
	455, 1315,
	456, 1315,
	457, 1315,
	458, 1315,
	459, 1315,
	460, 1315,
	462, 1315,
	463, 1315,
	464, 1315,
	465, 1315,
	466, 1315,
	467, 1315,
	469, 1315,
	470, 1315,
	471, 1315,
	472, 1315,
	473, 1315,
	474, 1315,
	475, 1315,
	476, 1315,
	478, 1315,
	480, 1315,
	481, 1315,
	482, 1315,
	483, 1315,
	484, 1315,
	485, 1315,
	486, 1315,
	487, 1315,
	488, 1315,
	489, 1315,
	490, 1315,
	491, 1315,
	492, 1315,
	493, 1315,
	494, 1315,
	495, 1315,
	497, 1315,
	498, 1315,
	500, 1315,
	501, 1315,
	503, 1315,
	504, 1315,
	505, 1315,
	506, 1315,
	507, 1315,
	508, 1315,
	509, 1315,
	510, 1315,
	511, 1315,
	513, 1315,
	514, 1315,
	515, 1315,
	516, 1315,
	517, 1315,
	519, 1315,
	521, 1315,
	522, 1315,
	523, 1315,
	524, 1315,
	525, 1315,
	526, 1315,
	528, 1315,
	529, 1315,
	530, 1315,
	531, 1315,
	533, 1315,
	534, 1315,
	537, 1315,
	538, 1315,
	539, 1315,
	540, 1315,
	541, 1315,
	542, 1315,
	543, 1315,
	545, 1315,
	548, 1315,
	549, 1315,
	550, 1315,
	551, 1315,
	552, 1315,
	553, 1315,
	555, 1315,
	556, 1315,
	557, 1315,
	558, 1315,
	559, 1315,
	560, 1315,
	565, 1315,
	566, 1315,
	567, 1315,
	568, 1315,
	569, 1315,
	570, 1315,
	-2, 0,
	-1, 767,
	188, 2379,
	518, 2379,
	583, 2379,
	602, 2379,
	-2, 0,
	-1, 768,
	188, 2366,
	518, 2366,
	583, 2366,
	602, 2366,
	-2, 0,
	-1, 770,
	188, 2629,
	518, 2629,
	583, 2629,
	602, 2629,
	-2, 0,
	-1, 773,
	188, 2491,
	518, 2491,
	583, 2491,
	602, 2491,
	-2, 0,
	-1, 774,
	188, 2670,
	518, 2670,
	583, 2670,
	602, 2670,
	-2, 0,
	-1, 782,
	188, 2518,
	518, 2518,
	583, 2518,
	602, 2518,
	-2, 704,
	-1, 817,
	602, 2315,
	605, 2315,
	-2, 999,
	-1, 818,
	602, 2317,
	605, 2317,
	-2, 1000,
	-1, 819,
	602, 2316,
	605, 2316,
	-2, 1001,
	-1, 820,
	605, 2241,
	-2, 1002,
	-1, 843,
	184, 264,
	-2, 0,
	-1, 867,
	43, 2288,
	-2, 0,
	-1, 868,
	555, 1293,
	-2, 1071,
	-1, 884,
	4, 1721,
	21, 1721,
	22, 1721,
	23, 1721,
	24, 1721,
	25, 1721,
	26, 1721,
	27, 1721,
	29, 1721,
	30, 1721,
	36, 1721,
	41, 1721,
	42, 1721,
	44, 1721,
	45, 1721,
	46, 1721,
	47, 1721,
	48, 1721,
	49, 1721,
	50, 1721,
	51, 1721,
	53, 1721,
	54, 1721,
	55, 1721,
	56, 1721,
	58, 1721,
	59, 1721,
	60, 1721,
	61, 1721,
	62, 1721,
	63, 1721,
	64, 1721,
	68, 1721,
	69, 1721,
	70, 1721,
	71, 1721,
	73, 1721,
	74, 1721,
	75, 1721,
	79, 1721,
	80, 1721,
	81, 1721,
	82, 1721,
	83, 1721,
	84, 1721,
	85, 1721,
	88, 1721,
	89, 1721,
	90, 1721,
	91, 1721,
	92, 1721,
	94, 1721,
	96, 1721,
	97, 1721,
	98, 1721,
	99, 1721,
	100, 1721,
	101, 1721,
	103, 1721,
	104, 1721,
	105, 1721,
	107, 1721,
	108, 1721,
	109, 1721,
	117, 1721,
	118, 1721,
	119, 1721,
	120, 1721,
	121, 1721,
	123, 1721,
	124, 1721,
	125, 1721,
	126, 1721,
	128, 1721,
	129, 1721,
	130, 1721,
	132, 1721,
	133, 1721,
	134, 1721,
	136, 1721,
	137, 1721,
	138, 1721,
	141, 1721,
	142, 1721,
	143, 1721,
	145, 1721,
	146, 1721,
	147, 1721,
	149, 1721,
	150, 1721,
	151, 1721,
	153, 1721,
	154, 1721,
	155, 1721,
	156, 1721,
	157, 1721,
	158, 1721,
	159, 1721,
	160, 1721,
	161, 1721,
	162, 1721,
	163, 1721,
	164, 1721,
	165, 1721,
	166, 1721,
	167, 1721,
	168, 1721,
	170, 1721,
	176, 1721,
	177, 1721,
	178, 1721,
	179, 1721,
	183, 1721,
	185, 1721,
	186, 1721,
	190, 1721,
	191, 1721,
	192, 1721,
	193, 1721,
	194, 1721,
	195, 1721,
	196, 1721,
	197, 1721,
	198, 1721,
	199, 1721,
	200, 1721,
	201, 1721,
	202, 1721,
	203, 1721,
	205, 1721,
	206, 1721,
	208, 1721,
	209, 1721,
	211, 1721,
	212, 1721,
	213, 1721,
	214, 1721,
	215, 1721,
	216, 1721,
	217, 1721,
	218, 1721,
	219, 1721,
	221, 1721,
	222, 1721,
	224, 1721,
	225, 1721,
	226, 1721,
	227, 1721,
	228, 1721,
	232, 1721,
	233, 1721,
	234, 1721,
	235, 1721,
	236, 1721,
	239, 1721,
	240, 1721,
	241, 1721,
	243, 1721,
	245, 1721,
	246, 1721,
	248, 1721,
	250, 1721,
	251, 1721,
	252, 1721,
	254, 1721,
	258, 1721,
	259, 1721,
	260, 1721,
	261, 1721,
	262, 1721,
	263, 1721,
	265, 1721,
	266, 1721,
	267, 1721,
	269, 1721,
	270, 1721,
	272, 1721,
	273, 1721,
	276, 1721,
	277, 1721,
	278, 1721,
	279, 1721,
	280, 1721,
	281, 1721,
	282, 1721,
	285, 1721,
	286, 1721,
	287, 1721,
	288, 1721,
	290, 1721,
	291, 1721,
	292, 1721,
	293, 1721,
	294, 1721,
	295, 1721,
	296, 1721,
	297, 1721,
	298, 1721,
	299, 1721,
	300, 1721,
	301, 1721,
	302, 1721,
	303, 1721,
	304, 1721,
	305, 1721,
	306, 1721,
	307, 1721,
	308, 1721,
	309, 1721,
	310, 1721,
	311, 1721,
	313, 1721,
	315, 1721,
	316, 1721,
	317, 1721,
	318, 1721,
	319, 1721,
	320, 1721,
	321, 1721,
	322, 1721,
	323, 1721,
	324, 1721,
	325, 1721,
	326, 1721,
	327, 1721,
	328, 1721,
	330, 1721,
	331, 1721,
	333, 1721,
	335, 1721,
	336, 1721,
	338, 1721,
	339, 1721,
	340, 1721,
	341, 1721,
	342, 1721,
	345, 1721,
	349, 1721,
	350, 1721,
	351, 1721,
	354, 1721,
	355, 1721,
	356, 1721,
	358, 1721,
	360, 1721,
	361, 1721,
	362, 1721,
	363, 1721,
	364, 1721,
	365, 1721,
	366, 1721,
	367, 1721,
	368, 1721,
	369, 1721,
	370, 1721,
	371, 1721,
	372, 1721,
	374, 1721,
	375, 1721,
	376, 1721,
	377, 1721,
	378, 1721,
	379, 1721,
	380, 1721,
	381, 1721,
	382, 1721,
	383, 1721,
	384, 1721,
	385, 1721,
	386, 1721,
	387, 1721,
	388, 1721,
	390, 1721,
	391, 1721,
	393, 1721,
	394, 1721,
	395, 1721,
	396, 1721,
	397, 1721,
	398, 1721,
	399, 1721,
	400, 1721,
	401, 1721,
	402, 1721,
	403, 1721,
	404, 1721,
	405, 1721,
	407, 1721,
	409, 1721,
	410, 1721,
	411, 1721,
	417, 1721,
	419, 1721,
	420, 1721,
	421, 1721,
	422, 1721,
	423, 1721,
	424, 1721,
	425, 1721,
	426, 1721,
	427, 1721,
	428, 1721,
	430, 1721,
	431, 1721,
	432, 1721,
	434, 1721,
	435, 1721,
	436, 1721,
	437, 1721,
	438, 1721,
	439, 1721,
	440, 1721,
	442, 1721,
	443, 1721,
	444, 1721,
	445, 1721,
	446, 1721,
	447, 1721,
	448, 1721,
	449, 1721,
	450, 1721,
	451, 1721,
	452, 1721,
	453, 1721,
	455, 1721,
	456, 1721,
	457, 1721,
	458, 1721,
	459, 1721,
	460, 1721,
	462, 1721,
	463, 1721,
	464, 1721,
	465, 1721,
	466, 1721,
	467, 1721,
	469, 1721,
	470, 1721,
	471, 1721,
	472, 1721,
	473, 1721,
	474, 1721,
	475, 1721,
	476, 1721,
	478, 1721,
	480, 1721,
	481, 1721,
	482, 1721,
	483, 1721,
	484, 1721,
	485, 1721,
	486, 1721,
	487, 1721,
	488, 1721,
	489, 1721,
	490, 1721,
	491, 1721,
	492, 1721,
	493, 1721,
	494, 1721,
	495, 1721,
	497, 1721,
	498, 1721,
	500, 1721,
	501, 1721,
	503, 1721,
	504, 1721,
	505, 1721,
	506, 1721,
	507, 1721,
	508, 1721,
	509, 1721,
	510, 1721,
	511, 1721,
	513, 1721,
	514, 1721,
	515, 1721,
	516, 1721,
	517, 1721,
	519, 1721,
	521, 1721,
	522, 1721,
	523, 1721,
	524, 1721,
	525, 1721,
	526, 1721,
	528, 1721,
	529, 1721,
	530, 1721,
	531, 1721,
	533, 1721,
	534, 1721,
	537, 1721,
	538, 1721,
	539, 1721,
	540, 1721,
	541, 1721,
	542, 1721,
	543, 1721,
	545, 1721,
	548, 1721,
	549, 1721,
	550, 1721,
	551, 1721,
	552, 1721,
	553, 1721,
	555, 1721,
	556, 1721,
	557, 1721,
	558, 1721,
	559, 1721,
	560, 1721,
	565, 1721,
	566, 1721,
	567, 1721,
	568, 1721,
	569, 1721,
	570, 1721,
	-2, 0,
	-1, 894,
	262, 410,
	-2, 0,
	-1, 967,
	395, 881,
	460, 881,
	501, 881,
	523, 881,
	-2, 0,
	-1, 968,
	395, 880,
	460, 880,
	501, 880,
	523, 880,
	-2, 814,
	-1, 972,
	1, 933,
	599, 933,
	601, 933,
	603, 933,
	-2, 0,
	-1, 974,
	1, 855,
	599, 855,
	601, 855,
	603, 855,
	-2, 0,
	-1, 975,
	1, 859,
	599, 859,
	601, 859,
	603, 859,
	-2, 0,
	-1, 976,
	1, 998,
	184, 998,
	599, 998,
	601, 998,
	603, 998,
	-2, 0,
	-1, 984,
	1, 886,
	599, 886,
	601, 886,
	603, 886,
	-2, 0,
	-1, 991,
	1, 933,
	599, 933,
	601, 933,
	603, 933,
	-2, 0,
	-1, 992,
	1, 935,
	599, 935,
	601, 935,
	603, 935,
	-2, 0,
	-1, 993,
	1, 938,
	599, 938,
	601, 938,
	603, 938,
	-2, 0,
	-1, 999,
	1, 962,
	599, 962,
	601, 962,
	603, 962,
	-2, 0,
	-1, 1000,
	1, 964,
	599, 964,
	601, 964,
	603, 964,
	-2, 0,
	-1, 1005,
	1, 992,
	599, 992,
	601, 992,
	603, 992,
	-2, 0,
	-1, 1057,
	171, 1594,
	184, 1594,
	275, 1594,
	343, 1594,
	-2, 1530,
	-1, 1072,
	171, 1593,
	184, 1593,
	275, 1593,
	343, 1593,
	-2, 1527,
	-1, 1099,
	602, 2314,
	-2, 712,
	-1, 1128,
	5, 2306,
	600, 2304,
	-2, 2295,
	-1, 1136,
	5, 2327,
	600, 2324,
	-2, 2315,
	-1, 1137,
	5, 2328,
	600, 2325,
	-2, 2316,
	-1, 1145,
	602, 2312,
	-2, 2294,
	-1, 1146,
	600, 2754,
	-2, 2313,
	-1, 1169,
	600, 2753,
	-2, 2329,
	-1, 1170,
	5, 1796,
	-2, 2724,
	-1, 1171,
	5, 1797,
	-2, 2725,
	-1, 1172,
	5, 1798,
	-2, 2739,
	-1, 1173,
	5, 1799,
	-2, 2703,
	-1, 1174,
	5, 1800,
	-2, 2737,
	-1, 1175,
	5, 1808,
	-2, 2716,
	-1, 1176,
	5, 1795,
	-2, 2712,
	-1, 1177,
	5, 1795,
	-2, 2711,
	-1, 1178,
	5, 1795,
	-2, 2730,
	-1, 1179,
	5, 1806,
	-2, 2705,
	-1, 1180,
	5, 1811,
	-2, 2704,
	-1, 1181,
	5, 1813,
	-2, 2749,
	-1, 1184,
	5, 1835,
	-2, 2742,
	-1, 1185,
	5, 1827,
	-2, 2743,
	-1, 1186,
	5, 1835,
	-2, 2744,
	-1, 1187,
	5, 1831,
	-2, 2745,
	-1, 1188,
	5, 1781,
	-2, 2717,
	-1, 1189,
	5, 1782,
	-2, 2718,
	-1, 1190,
	5, 1783,
	-2, 2706,
	-1, 1218,
	5, 1818,
	-2, 2750,
	-1, 1219,
	5, 1819,
	-2, 2740,
	-1, 1220,
	5, 1820,
	556, 1820,
	-2, 2707,
	-1, 1221,
	5, 1821,
	556, 1821,
	-2, 2708,
	-1, 1258,
	600, 2324,
	-2, 2315,
	-1, 1259,
	600, 2325,
	-2, 2316,
	-1, 1360,
	188, 2670,
	518, 2670,
	583, 2670,
	602, 2670,
	-2, 0,
	-1, 1365,
	1, 689,
	603, 689,
	-2, 1442,
	-1, 1493,
	362, 2289,
	419, 2289,
	462, 2289,
	593, 2289,
	-2, 2279,
	-1, 1504,
	604, 2289,
	-2, 2291,
	-1, 1512,
	1, 1290,
	424, 1254,
	462, 1254,
	577, 1254,
	599, 1290,
	601, 1290,
	603, 1290,
	-2, 1579,
	-1, 1518,
	204, 1387,
	223, 1387,
	432, 1387,
	-2, 0,
	-1, 1564,
	403, 1070,
	555, 1070,
	-2, 405,
	-1, 1581,
	43, 2287,
	-2, 1036,
	-1, 1588,
	1, 1290,
	599, 1290,
	601, 1290,
	603, 1290,
	-2, 1579,
	-1, 1596,
	4, 1315,
	21, 1315,
	22, 1315,
	23, 1315,
	24, 1315,
	25, 1315,
	26, 1315,
	27, 1315,
	29, 1315,
	30, 1315,
	36, 1315,
	41, 1315,
	42, 1315,
	44, 1315,
	45, 1315,
	46, 1315,
	47, 1315,
	48, 1315,
	49, 1315,
	50, 1315,
	51, 1315,
	53, 1315,
	54, 1315,
	55, 1315,
	56, 1315,
	58, 1315,
	59, 1315,
	60, 1315,
	61, 1315,
	62, 1315,
	63, 1315,
	64, 1315,
	68, 1315,
	69, 1315,
	70, 1315,
	71, 1315,
	73, 1315,
	74, 1315,
	75, 1315,
	79, 1315,
	80, 1315,
	81, 1315,
	82, 1315,
	83, 1315,
	84, 1315,
	85, 1315,
	88, 1315,
	89, 1315,
	90, 1315,
	91, 1315,
	92, 1315,
	94, 1315,
	96, 1315,
	97, 1315,
	98, 1315,
	99, 1315,
	100, 1315,
	101, 1315,
	103, 1315,
	104, 1315,
	105, 1315,
	107, 1315,
	108, 1315,
	109, 1315,
	117, 1315,
	118, 1315,
	119, 1315,
	120, 1315,
	121, 1315,
	123, 1315,
	124, 1315,
	125, 1315,
	126, 1315,
	128, 1315,
	129, 1315,
	130, 1315,
	132, 1315,
	133, 1315,
	134, 1315,
	136, 1315,
	137, 1315,
	138, 1315,
	141, 1315,
	142, 1315,
	143, 1315,
	145, 1315,
	146, 1315,
	147, 1315,
	149, 1315,
	150, 1315,
	151, 1315,
	153, 1315,
	154, 1315,
	155, 1315,
	156, 1315,
	157, 1315,
	158, 1315,
	159, 1315,
	160, 1315,
	161, 1315,
	162, 1315,
	163, 1315,
	164, 1315,
	165, 1315,
	166, 1315,
	167, 1315,
	168, 1315,
	176, 1315,
	177, 1315,
	178, 1315,
	179, 1315,
	183, 1315,
	185, 1315,
	186, 1315,
	190, 1315,
	191, 1315,
	192, 1315,
	193, 1315,
	194, 1315,
	195, 1315,
	196, 1315,
	197, 1315,
	198, 1315,
	199, 1315,
	200, 1315,
	201, 1315,
	202, 1315,
	203, 1315,
	205, 1315,
	206, 1315,
	208, 1315,
	209, 1315,
	211, 1315,
	212, 1315,
	213, 1315,
	214, 1315,
	215, 1315,
	216, 1315,
	217, 1315,
	218, 1315,
	219, 1315,
	221, 1315,
	222, 1315,
	224, 1315,
	225, 1315,
	226, 1315,
	227, 1315,
	228, 1315,
	233, 1315,
	234, 1315,
	235, 1315,
	236, 1315,
	239, 1315,
	240, 1315,
	241, 1315,
	243, 1315,
	245, 1315,
	246, 1315,
	248, 1315,
	250, 1315,
	251, 1315,
	252, 1315,
	254, 1315,
	258, 1315,
	259, 1315,
	260, 1315,
	261, 1315,
	262, 1315,
	263, 1315,
	265, 1315,
	266, 1315,
	267, 1315,
	269, 1315,
	270, 1315,
	272, 1315,
	273, 1315,
	276, 1315,
	277, 1315,
	278, 1315,
	279, 1315,
	280, 1315,
	281, 1315,
	282, 1315,
	285, 1315,
	286, 1315,
	287, 1315,
	288, 1315,
	290, 1315,
	291, 1315,
	292, 1315,
	293, 1315,
	294, 1315,
	295, 1315,
	296, 1315,
	297, 1315,
	298, 1315,
	299, 1315,
	300, 1315,
	301, 1315,
	302, 1315,
	303, 1315,
	304, 1315,
	305, 1315,
	306, 1315,
	307, 1315,
	308, 1315,
	309, 1315,
	310, 1315,
	311, 1315,
	313, 1315,
	315, 1315,
	316, 1315,
	317, 1315,
	318, 1315,
	319, 1315,
	320, 1315,
	321, 1315,
	322, 1315,
	323, 1315,
	324, 1315,
	325, 1315,
	326, 1315,
	327, 1315,
	328, 1315,
	330, 1315,
	331, 1315,
	335, 1315,
	336, 1315,
	338, 1315,
	339, 1315,
	340, 1315,
	341, 1315,
	342, 1315,
	345, 1315,
	347, 1315,
	349, 1315,
	350, 1315,
	351, 1315,
	354, 1315,
	355, 1315,
	356, 1315,
	358, 1315,
	360, 1315,
	361, 1315,
	362, 1315,
	363, 1315,
	364, 1315,
	365, 1315,
	366, 1315,
	367, 1315,
	368, 1315,
	369, 1315,
	370, 1315,
	371, 1315,
	372, 1315,
	374, 1315,
	375, 1315,
	376, 1315,
	377, 1315,
	378, 1315,
	379, 1315,
	380, 1315,
	381, 1315,
	382, 1315,
	383, 1315,
	384, 1315,
	385, 1315,
	386, 1315,
	387, 1315,
	388, 1315,
	390, 1315,
	391, 1315,
	393, 1315,
	394, 1315,
	395, 1315,
	396, 1315,
	397, 1315,
	398, 1315,
	399, 1315,
	400, 1315,
	401, 1315,
	402, 1315,
	403, 1315,
	404, 1315,
	405, 1315,
	407, 1315,
	409, 1315,
	410, 1315,
	411, 1315,
	417, 1315,
	419, 1315,
	420, 1315,
	421, 1315,
	422, 1315,
	423, 1315,
	424, 1315,
	425, 1315,
	426, 1315,
	427, 1315,
	428, 1315,
	430, 1315,
	431, 1315,
	432, 1315,
	434, 1315,
	435, 1315,
	436, 1315,
	437, 1315,
	438, 1315,
	439, 1315,
	440, 1315,
	442, 1315,
	443, 1315,
	444, 1315,
	445, 1315,
	446, 1315,
	447, 1315,
	448, 1315,
	449, 1315,
	450, 1315,
	451, 1315,
	452, 1315,
	453, 1315,
	455, 1315,
	456, 1315,
	457, 1315,
	458, 1315,
	459, 1315,
	460, 1315,
	462, 1315,
	463, 1315,
	464, 1315,
	465, 1315,
	466, 1315,
	467, 1315,
	469, 1315,
	470, 1315,
	471, 1315,
	472, 1315,
	473, 1315,
	474, 1315,
	475, 1315,
	476, 1315,
	478, 1315,
	480, 1315,
	481, 1315,
	482, 1315,
	483, 1315,
	484, 1315,
	485, 1315,
	486, 1315,
	487, 1315,
	488, 1315,
	489, 1315,
	490, 1315,
	491, 1315,
	492, 1315,
	493, 1315,
	494, 1315,
	495, 1315,
	497, 1315,
	498, 1315,
	500, 1315,
	501, 1315,
	503, 1315,
	504, 1315,
	505, 1315,
	506, 1315,
	507, 1315,
	508, 1315,
	509, 1315,
	510, 1315,
	511, 1315,
	513, 1315,
	514, 1315,
	515, 1315,
	516, 1315,
	517, 1315,
	519, 1315,
	521, 1315,
	522, 1315,
	523, 1315,
	524, 1315,
	525, 1315,
	526, 1315,
	528, 1315,
	529, 1315,
	530, 1315,
	531, 1315,
	533, 1315,
	534, 1315,
	537, 1315,
	538, 1315,
	539, 1315,
	540, 1315,
	541, 1315,
	542, 1315,
	543, 1315,
	545, 1315,
	548, 1315,
	549, 1315,
	550, 1315,
	551, 1315,
	552, 1315,
	553, 1315,
	555, 1315,
	556, 1315,
	557, 1315,
	558, 1315,
	559, 1315,
	560, 1315,
	565, 1315,
	566, 1315,
	567, 1315,
	568, 1315,
	569, 1315,
	570, 1315,
	-2, 0,
	-1, 1619,
	1, 550,
	599, 550,
	601, 550,
	603, 550,
	-2, 1550,
	-1, 1622,
	4, 2748,
	11, 2748,
	12, 2748,
	14, 2748,
	15, 2748,
	16, 2748,
	17, 2748,
	18, 2748,
	19, 2748,
	21, 2748,
	22, 2748,
	23, 2748,
	24, 2748,
	25, 2748,
	26, 2748,
	27, 2748,
	29, 2748,
	30, 2748,
	33, 2748,
	34, 2748,
	36, 2748,
	38, 2748,
	41, 2748,
	42, 2748,
	44, 2748,
	45, 2748,
	46, 2748,
	47, 2748,
	48, 2748,
	49, 2748,
	50, 2748,
	51, 2748,
	53, 2748,
	54, 2748,
	55, 2748,
	56, 2748,
	58, 2748,
	59, 2748,
	60, 2748,
	61, 2748,
	62, 2748,
	63, 2748,
	64, 2748,
	67, 2748,
	68, 2748,
	69, 2748,
	70, 2748,
	71, 2748,
	73, 2748,
	74, 2748,
	75, 2748,
	76, 2748,
	79, 2748,
	80, 2748,
	81, 2748,
	82, 2748,
	83, 2748,
	84, 2748,
	85, 2748,
	86, 2748,
	88, 2748,
	89, 2748,
	90, 2748,
	91, 2748,
	92, 2748,
	94, 2748,
	95, 2748,
	96, 2748,
	97, 2748,
	98, 2748,
	99, 2748,
	100, 2748,
	101, 2748,
	103, 2748,
	104, 2748,
	105, 2748,
	106, 2748,
	107, 2748,
	108, 2748,
	109, 2748,
	117, 2748,
	118, 2748,
	119, 2748,
	120, 2748,
	121, 2748,
	123, 2748,
	124, 2748,
	125, 2748,
	126, 2748,
	128, 2748,
	129, 2748,
	130, 2748,
	132, 2748,
	133, 2748,
	134, 2748,
	136, 2748,
	137, 2748,
	138, 2748,
	141, 2748,
	142, 2748,
	143, 2748,
	145, 2748,
	146, 2748,
	147, 2748,
	149, 2748,
	150, 2748,
	151, 2748,
	153, 2748,
	154, 2748,
	155, 2748,
	156, 2748,
	157, 2748,
	158, 2748,
	159, 2748,
	160, 2748,
	161, 2748,
	162, 2748,
	163, 2748,
	164, 2748,
	165, 2748,
	166, 2748,
	167, 2748,
	168, 2748,
	172, 2748,
	173, 2748,
	174, 2748,
	175, 2748,
	176, 2748,
	177, 2748,
	178, 2748,
	179, 2748,
	182, 2748,
	183, 2748,
	185, 2748,
	186, 2748,
	189, 2748,
	190, 2748,
	191, 2748,
	192, 2748,
	193, 2748,
	194, 2748,
	195, 2748,
	196, 2748,
	197, 2748,
	198, 2748,
	199, 2748,
	200, 2748,
	201, 2748,
	202, 2748,
	203, 2748,
	205, 2748,
	206, 2748,
	208, 2748,
	209, 2748,
	211, 2748,
	212, 2748,
	213, 2748,
	214, 2748,
	215, 2748,
	216, 2748,
	217, 2748,
	218, 2748,
	219, 2748,
	220, 2748,
	221, 2748,
	222, 2748,
	223, 2748,
	224, 2748,
	225, 2748,
	226, 2748,
	227, 2748,
	228, 2748,
	230, 2748,
	231, 2748,
	233, 2748,
	234, 2748,
	235, 2748,
	236, 2748,
	238, 2748,
	239, 2748,
	240, 2748,
	241, 2748,
	243, 2748,
	245, 2748,
	246, 2748,
	247, 2748,
	248, 2748,
	249, 2748,
	250, 2748,
	251, 2748,
	252, 2748,
	253, 2748,
	254, 2748,
	256, 2748,
	257, 2748,
	258, 2748,
	259, 2748,
	260, 2748,
	261, 2748,
	262, 2748,
	263, 2748,
	265, 2748,
	266, 2748,
	267, 2748,
	269, 2748,
	270, 2748,
	271, 2748,
	272, 2748,
	273, 2748,
	274, 2748,
	276, 2748,
	277, 2748,
	278, 2748,
	279, 2748,
	280, 2748,
	281, 2748,
	282, 2748,
	285, 2748,
	286, 2748,
	287, 2748,
	288, 2748,
	289, 2748,
	290, 2748,
	291, 2748,
	292, 2748,
	293, 2748,
	294, 2748,
	295, 2748,
	296, 2748,
	297, 2748,
	298, 2748,
	299, 2748,
	300, 2748,
	301, 2748,
	302, 2748,
	303, 2748,
	304, 2748,
	305, 2748,
	306, 2748,
	307, 2748,
	308, 2748,
	309, 2748,
	310, 2748,
	311, 2748,
	313, 2748,
	314, 2748,
	315, 2748,
	316, 2748,
	317, 2748,
	318, 2748,
	319, 2748,
	320, 2748,
	321, 2748,
	322, 2748,
	323, 2748,
	324, 2748,
	325, 2748,
	326, 2748,
	327, 2748,
	328, 2748,
	330, 2748,
	331, 2748,
	334, 2748,
	335, 2748,
	336, 2748,
	338, 2748,
	339, 2748,
	340, 2748,
	341, 2748,
	342, 2748,
	345, 2748,
	349, 2748,
	350, 2748,
	351, 2748,
	352, 2748,
	354, 2748,
	355, 2748,
	356, 2748,
	358, 2748,
	360, 2748,
	361, 2748,
	362, 2748,
	363, 2748,
	364, 2748,
	365, 2748,
	366, 2748,
	367, 2748,
	368, 2748,
	369, 2748,
	370, 2748,
	371, 2748,
	372, 2748,
	374, 2748,
	375, 2748,
	376, 2748,
	377, 2748,
	378, 2748,
	379, 2748,
	380, 2748,
	381, 2748,
	382, 2748,
	383, 2748,
	384, 2748,
	385, 2748,
	386, 2748,
	387, 2748,
	388, 2748,
	390, 2748,
	391, 2748,
	393, 2748,
	394, 2748,
	395, 2748,
	396, 2748,
	397, 2748,
	398, 2748,
	399, 2748,
	400, 2748,
	401, 2748,
	402, 2748,
	403, 2748,
	404, 2748,
	405, 2748,
	407, 2748,
	409, 2748,
	410, 2748,
	411, 2748,
	417, 2748,
	418, 2748,
	419, 2748,
	420, 2748,
	421, 2748,
	422, 2748,
	423, 2748,
	424, 2748,
	425, 2748,
	426, 2748,
	427, 2748,
	428, 2748,
	430, 2748,
	431, 2748,
	432, 2748,
	433, 2748,
	434, 2748,
	435, 2748,
	436, 2748,
	437, 2748,
	438, 2748,
	439, 2748,
	440, 2748,
	441, 2748,
	442, 2748,
	443, 2748,
	444, 2748,
	445, 2748,
	446, 2748,
	447, 2748,
	448, 2748,
	449, 2748,
	450, 2748,
	451, 2748,
	452, 2748,
	453, 2748,
	455, 2748,
	456, 2748,
	457, 2748,
	458, 2748,
	459, 2748,
	460, 2748,
	462, 2748,
	463, 2748,
	464, 2748,
	465, 2748,
	466, 2748,
	467, 2748,
	468, 2748,
	469, 2748,
	470, 2748,
	471, 2748,
	472, 2748,
	473, 2748,
	474, 2748,
	475, 2748,
	476, 2748,
	478, 2748,
	480, 2748,
	481, 2748,
	482, 2748,
	483, 2748,
	484, 2748,
	485, 2748,
	486, 2748,
	487, 2748,
	488, 2748,
	489, 2748,
	490, 2748,
	491, 2748,
	492, 2748,
	493, 2748,
	494, 2748,
	495, 2748,
	497, 2748,
	498, 2748,
	499, 2748,
	500, 2748,
	501, 2748,
	503, 2748,
	504, 2748,
	505, 2748,
	506, 2748,
	507, 2748,
	508, 2748,
	509, 2748,
	510, 2748,
	511, 2748,
	513, 2748,
	514, 2748,
	515, 2748,
	516, 2748,
	517, 2748,
	519, 2748,
	521, 2748,
	522, 2748,
	523, 2748,
	524, 2748,
	525, 2748,
	526, 2748,
	528, 2748,
	529, 2748,
	530, 2748,
	531, 2748,
	533, 2748,
	534, 2748,
	537, 2748,
	538, 2748,
	539, 2748,
	540, 2748,
	541, 2748,
	542, 2748,
	543, 2748,
	545, 2748,
	548, 2748,
	549, 2748,
	550, 2748,
	551, 2748,
	552, 2748,
	553, 2748,
	555, 2748,
	556, 2748,
	557, 2748,
	558, 2748,
	559, 2748,
	560, 2748,
	565, 2748,
	566, 2748,
	567, 2748,
	568, 2748,
	569, 2748,
	570, 2748,
	571, 2748,
	573, 2748,
	581, 2748,
	582, 2748,
	583, 2748,
	584, 2748,
	585, 2748,
	586, 2748,
	588, 2748,
	589, 2748,
	590, 2748,
	591, 2748,
	592, 2748,
	593, 2748,
	594, 2748,
	595, 2748,
	596, 2748,
	598, 2748,
	601, 2748,
	602, 2748,
	604, 2748,
	605, 2748,
	-2, 0,
	-1, 1627,
	188, 2629,
	518, 2629,
	583, 2629,
	602, 2629,
	-2, 0,
	-1, 1676,
	395, 881,
	460, 881,
	501, 881,
	523, 881,
	-2, 0,
	-1, 1687,
	1, 1387,
	599, 1387,
	601, 1387,
	603, 1387,
	-2, 0,
	-1, 1704,
	1, 876,
	599, 876,
	601, 876,
	603, 876,
	-2, 0,
	-1, 1705,
	1, 920,
	599, 920,
	601, 920,
	603, 920,
	-2, 0,
	-1, 1706,
	1, 928,
	599, 928,
	601, 928,
	603, 928,
	-2, 0,
	-1, 1709,
	1, 885,
	599, 885,
	601, 885,
	603, 885,
	-2, 0,
	-1, 1711,
	1, 891,
	599, 891,
	601, 891,
	603, 891,
	-2, 0,
	-1, 1714,
	1, 887,
	599, 887,
	601, 887,
	603, 887,
	-2, 0,
	-1, 1719,
	1, 901,
	599, 901,
	601, 901,
	603, 901,
	-2, 0,
	-1, 1750,
	1, 2612,
	599, 2612,
	601, 2612,
	602, 2612,
	603, 2612,
	-2, 0,
	-1, 1754,
	1, 973,
	599, 973,
	601, 973,
	603, 973,
	-2, 0,
	-1, 1769,
	1, 1437,
	603, 1437,
	-2, 1442,
	-1, 1772,
	171, 1593,
	184, 1593,
	275, 1593,
	343, 1593,
	-2, 1531,
	-1, 1872,
	152, 1552,
	171, 1552,
	184, 1552,
	242, 1552,
	275, 1552,
	343, 1552,
	353, 1552,
	535, 1552,
	-2, 2000,
	-1, 1933,
	601, 2175,
	-2, 0,
	-1, 1968,
	152, 1552,
	171, 1552,
	184, 1552,
	242, 1552,
	275, 1552,
	343, 1552,
	353, 1552,
	535, 1552,
	-2, 1682,
	-1, 2005,
	518, 2626,
	602, 2626,
	605, 2626,
	-2, 0,
	-1, 2022,
	600, 1823,
	-2, 1811,
	-1, 2054,
	188, 2626,
	602, 2626,
	605, 2626,
	-2, 0,
	-1, 2096,
	1, 691,
	603, 691,
	-2, 1442,
	-1, 2236,
	223, 259,
	-2, 2323,
	-1, 2237,
	223, 260,
	-2, 312,
	-1, 2344,
	1, 878,
	599, 878,
	601, 878,
	603, 878,
	-2, 0,
	-1, 2345,
	1, 922,
	599, 922,
	601, 922,
	603, 922,
	-2, 0,
	-1, 2346,
	1, 930,
	599, 930,
	601, 930,
	603, 930,
	-2, 0,
	-1, 2347,
	1, 975,
	599, 975,
	601, 975,
	603, 975,
	-2, 0,
	-1, 2388,
	1, 903,
	599, 903,
	601, 903,
	603, 903,
	-2, 0,
	-1, 2406,
	1, 958,
	599, 958,
	601, 958,
	603, 958,
	-2, 0,
	-1, 2451,
	439, 1620,
	440, 1620,
	-2, 1856,
	-1, 2482,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1876,
	-1, 2483,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1877,
	-1, 2484,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1878,
	-1, 2485,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1879,
	-1, 2486,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1880,
	-1, 2487,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1881,
	-1, 2488,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1882,
	-1, 2489,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1883,
	-1, 2501,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1895,
	-1, 2502,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1896,
	-1, 2503,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1897,
	-1, 2507,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1904,
	-1, 2513,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1908,
	-1, 2515,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1916,
	-1, 2516,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1917,
	-1, 2517,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1918,
	-1, 2518,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1919,
	-1, 2692,
	5, 2327,
	188, 2186,
	600, 2324,
	-2, 2315,
	-1, 2693,
	188, 2187,
	-2, 2699,
	-1, 2694,
	188, 2188,
	-2, 2517,
	-1, 2695,
	188, 2189,
	-2, 2397,
	-1, 2696,
	188, 2190,
	-2, 2454,
	-1, 2697,
	188, 2191,
	-2, 2502,
	-1, 2698,
	188, 2192,
	-2, 2624,
	-1, 2699,
	188, 2193,
	-2, 1983,
	-1, 2770,
	1, 1683,
	2, 1683,
	106, 1683,
	152, 1683,
	171, 1683,
	184, 1683,
	189, 1683,
	207, 1683,
	210, 1683,
	238, 1683,
	242, 1683,
	253, 1683,
	271, 1683,
	275, 1683,
	314, 1683,
	343, 1683,
	347, 1683,
	353, 1683,
	429, 1683,
	433, 1683,
	535, 1683,
	546, 1683,
	562, 1683,
	563, 1683,
	564, 1683,
	574, 1683,
	599, 1683,
	601, 1683,
	603, 1683,
	605, 1683,
	-2, 1682,
	-1, 2783,
	600, 2296,
	-2, 2310,
	-1, 2785,
	1, 329,
	562, 329,
	-2, 1579,
	-1, 2814,
	600, 1822,
	-2, 1812,
	-1, 3000,
	1, 1290,
	424, 1254,
	462, 1254,
	577, 1254,
	599, 1290,
	601, 1290,
	603, 1290,
	-2, 1579,
	-1, 3186,
	348, 1623,
	-2, 2738,
	-1, 3187,
	348, 1624,
	-2, 2609,
	-1, 3191,
	439, 2252,
	440, 2252,
	-2, 1981,
	-1, 3192,
	439, 2256,
	440, 2256,
	-2, 1982,
	-1, 3193,
	439, 2253,
	440, 2253,
	-2, 1981,
	-1, 3194,
	439, 2257,
	440, 2257,
	-2, 1982,
	-1, 3207,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1906,
	-1, 3208,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1910,
	-1, 3214,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1912,
	-1, 3438,
	1, 686,
	599, 686,
	601, 686,
	603, 686,
	-2, 1442,
	-1, 3604,
	43, 2287,
	-2, 1037,
	-1, 3609,
	1, 1290,
	599, 1290,
	601, 1290,
	603, 1290,
	-2, 1579,
	-1, 3720,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1914,
	-1, 3727,
	247, 0,
	249, 0,
	334, 0,
	-2, 1933,
	-1, 3795,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1962,
	-1, 3796,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1963,
	-1, 3797,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1964,
	-1, 3801,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1968,
	-1, 3802,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1969,
	-1, 3803,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1970,
	-1, 3850,
	600, 2297,
	-2, 2311,
	-1, 4025,
	602, 2855,
	-2, 1505,
	-1, 4086,
	247, 0,
	249, 0,
	334, 0,
	-2, 1934,
	-1, 4089,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1937,
	-1, 4090,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1939,
	-1, 4188,
	602, 2312,
	-2, 1325,
	-1, 4342,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1938,
	-1, 4343,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1940,
	-1, 4354,
	247, 0,
	-2, 1973,
	-1, 4541,
	247, 0,
	-2, 1974,
	-1, 4741,
	50, 0,
	220, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 2702,
}

const sqlPrivate = 57344

const sqlLast = 133114

var sqlAct = [...]int{
	272, 4858, 3593, 3075, 4937, 3345, 4734, 4845, 2876, 4403,
	4733, 3088, 4799, 4740, 4751, 4463, 4574, 4722, 3592, 4610,
	4874, 4631, 2146, 4606, 4582, 4687, 4667, 4752, 4690, 4709,
	4069, 4812, 4753, 4494, 2233, 2945, 4385, 2920, 3760, 1527,
	4545, 1251, 4470, 4448, 4258, 4297, 4739, 1262, 4292, 4408,
	4233, 3712, 2309, 4363, 2461, 4331, 4279, 4009, 3626, 3045,
	4184, 4017, 1336, 4479, 4281, 4185, 3459, 1325, 3200, 708,
	3944, 2009, 1332, 4165, 2725, 819, 4508, 4272, 2958, 2530,
	1082, 1781, 3519, 3620, 4302, 3097, 3990, 2078, 1643, 3588,
	3462, 2154, 3972, 2282, 2462, 3577, 1073, 2469, 779, 3974,
	1399, 819, 3667, 3112, 3669, 3099, 4359, 3064, 2320, 3570,
	2065, 3031, 1974, 3853, 3351, 1490, 3390, 3569, 1327, 3360,
	3368, 3328, 3107, 4068, 719, 892, 4, 896, 3061, 3090,
	3059, 1081, 179, 3349, 2222, 3076, 3096, 4125, 1943, 3007,
	2220, 3481, 4846, 2181, 2878, 2762, 3327, 2763, 2165, 2466,
	1919, 4546, 2608, 1850, 1880, 3456, 2543, 1497, 3821, 887,
	2610, 266, 3184, 3106, 1583, 2221, 108, 1330, 1242, 2010,
	775, 814, 2975, 2204, 2765, 3035, 2216, 2134, 2197, 1132,
	1128, 1769, 3046, 1380, 2138, 1304, 2076, 2743, 2722, 1944,
	1318, 2599, 1137, 2527, 1684, 3397, 2433, 3590, 2450, 2124,
	1139, 2431, 3041, 2919, 1641, 3069, 2797, 1620, 816, 1963,
	752, 1586, 2269, 820, 2901, 821, 961, 4632, 1135, 1338,
	3100, 1367, 2796, 2318, 695, 179, 265, 3966, 717, 1914,
	2602, 1245, 1960, 2688, 1953, 2752, 825, 1224, 1864, 1259,
	1315, 2864, 1782, 188, 2580, 1783, 2432, 2733, 1719, 2434,
	2654, 2230, 2295, 189, 760, 771, 2268, 1611, 4800, 1522,
	2153, 1618, 825, 1704, 4859, 1182, 3042, 2455, 1113, 44,
	712, 1247, 1222, 735, 43, 41, 32, 30, 28, 264,
	709, 1241, 720, 868, 809, 3237, 1533, 1788, 1768, 982,
	3835, 3231, 3836, 4950, 1992, 3347, 2067, 2742, 869, 2067,
	4780, 828, 1077, 1077, 2067, 2067, 2067, 2067, 4940, 911,
	4924, 4923, 3645, 4913, 2742, 2742, 4894, 2242, 4892, 4831,
	4407, 4788, 4407, 2242, 4777, 4789, 4775, 828, 2742, 4772,
	2742, 4769, 4737, 4773, 160, 4770, 2242, 4375, 3635, 1526,
	1376, 2242, 73, 4736, 46, 45, 4735, 2242, 4730, 4378,
	2088, 4729, 2088, 1239, 4720, 2088, 4718, 1078, 4407, 74,
	4407, 4715, 155, 4685, 4656, 4482, 4649, 4407, 2805, 4648,
	2742, 2319, 3636, 2742, 4643, 78, 1710, 4642, 4407, 4636,
	4602, 4407, 3645, 2242, 4249, 4543, 67, 4525, 4522, 2805,
	4519, 4054, 2242, 48, 4407, 157, 4472, 4426, 4425, 4414,
	4473, 2242, 2242, 2242, 1067, 1225, 1225, 4413, 4406, 4146,
	4370, 4407, 4407, 47, 2242, 87, 1376, 2242, 4344, 1257,
	3298, 3299, 2805, 1058, 2085, 4321, 4310, 4228, 4211, 2088,
	3645, 2742, 2742, 1057, 4088, 1796, 1797, 4033, 2805, 3406,
	4027, 3662, 50, 68, 3662, 3988, 2825, 3825, 3845, 3989,
	2242, 51, 3846, 3199, 3423, 3843, 57, 1254, 1827, 3844,
	3828, 158, 3744, 3740, 2742, 1799, 2242, 2742, 3661, 49,
	3652, 107, 3662, 1275, 3653, 1072, 93, 104, 3344, 3421,
	3339, 3338, 2742, 3289, 2742, 2742, 3287, 3290, 3279, 3277,
	3288, 1852, 3280, 2742, 93, 3313, 3246, 3248, 2735, 3116,
	1798, 2742, 3247, 2088, 1226, 3086, 2801, 3085, 2848, 2305,
	1818, 2305, 2742, 1282, 2804, 2742, 2794, 52, 2805, 1815,
	2742, 4657, 4547, 2787, 2741, 1650, 2085, 2242, 2742, 1228,
	2304, 1229, 4538, 2242, 2305, 94, 2556, 2557, 2558, 2575,
	2576, 2577, 4526, 4482, 2088, 3825, 2734, 2242, 3298, 3299,
	2605, 4290, 4249, 2085, 2742, 3236, 2578, 1276, 1535, 4212,
	1276, 4054, 1796, 1797, 3653, 2948, 2863, 2158, 236, 2103,
	2066, 2082, 3037, 2241, 2968, 4082, 2861, 3298, 3299, 1939,
	1521, 3927, 3715, 3689, 1961, 1796, 1797, 2209, 3637, 1852,
	1686, 3304, 1799, 3298, 3299, 2779, 1821, 1822, 1823, 1824,
	2778, 2777, 2776, 2775, 1230, 236, 1804, 3638, 2568, 1227,
	1066, 1065, 1064, 1063, 1062, 1799, 238, 2564, 1061, 1060,
	1056, 1055, 1054, 1053, 1052, 1051, 1050, 1798, 3158, 4141,
	3298, 3299, 1049, 3316, 3317, 3318, 1048, 1047, 1046, 1045,
	1044, 2606, 3298, 3299, 1043, 1042, 1041, 1040, 1134, 1039,
	1798, 1021, 4084, 238, 1826, 1828, 959, 958, 2068, 957,
	956, 2068, 955, 954, 953, 237, 2068, 2068, 2068, 2068,
	1111, 952, 3298, 3299, 951, 3316, 3317, 3318, 230, 950,
	1813, 1814, 97, 949, 948, 947, 946, 231, 945, 944,
	943, 942, 941, 940, 2569, 2570, 2571, 2572, 3314, 939,
	53, 938, 237, 937, 2563, 3313, 936, 1535, 935, 934,
	3298, 3299, 933, 1819, 190, 56, 932, 1526, 931, 3304,
	59, 930, 929, 2607, 928, 2604, 3072, 927, 926, 925,
	69, 924, 914, 1804, 913, 1547, 58, 187, 100, 909,
	908, 103, 902, 901, 886, 54, 885, 3313, 3304, 159,
	842, 190, 841, 1341, 1137, 840, 1804, 55, 839, 831,
	830, 829, 795, 786, 3304, 785, 2085, 236, 784, 766,
	260, 259, 1849, 258, 257, 62, 256, 1636, 2573, 2574,
	150, 1137, 1137, 1137, 255, 236, 254, 1849, 253, 3635,
	252, 251, 250, 249, 248, 156, 247, 246, 150, 1402,
	245, 3304, 244, 1402, 243, 242, 241, 240, 239, 4100,
	1341, 2566, 3867, 3304, 3839, 238, 2380, 3663, 3393, 3259,
	3242, 3233, 3140, 3054, 3017, 1922, 3314, 3342, 236, 2809,
	2784, 2769, 1921, 238, 1137, 2637, 1137, 2242, 1137, 2132,
	2835, 154, 1825, 3304, 1341, 2066, 2085, 2082, 2426, 2087,
	3315, 4304, 2635, 2621, 1987, 3314, 191, 1964, 1891, 1925,
	39, 1384, 1385, 1386, 237, 1820, 3320, 1922, 3343, 2619,
	1341, 1276, 1505, 1882, 1921, 2312, 238, 230, 1529, 1388,
	2609, 3304, 237, 1371, 1261, 1795, 231, 1253, 4762, 4761,
	1341, 1500, 4550, 4758, 4738, 230, 2085, 1341, 4717, 4617,
	1849, 1920, 4529, 4535, 231, 1137, 4358, 1137, 3314, 1255,
	4527, 1341, 4311, 190, 1849, 2734, 3, 1137, 4289, 1137,
	3314, 4152, 4123, 1851, 1541, 237, 2285, 3298, 3299, 1849,
	1276, 190, 1309, 1312, 4122, 1712, 1525, 4398, 230, 1592,
	1595, 4116, 1534, 4115, 1363, 1849, 4114, 231, 4107, 1546,
	3314, 4106, 4104, 4099, 4096, 4095, 1365, 1322, 3987, 1535,
	3871, 2311, 3993, 2567, 3870, 3869, 1395, 1341, 1487, 1492,
	1654, 3849, 3816, 3815, 190, 1889, 1510, 236, 3315, 3814,
	3736, 3731, 1849, 3388, 825, 3335, 3326, 1137, 3314, 3297,
	1137, 3294, 1495, 3293, 1849, 3291, 2603, 3309, 3307, 3308,
	3300, 3301, 3302, 3303, 3305, 3306, 3286, 3315, 3285, 1816,
	1812, 3284, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805,
	1806, 1851, 179, 179, 1849, 238, 1357, 2818, 1640, 1884,
	1326, 3281, 1883, 3278, 1881, 1581, 1524, 3258, 1523, 3241,
	3234, 3232, 3087, 2770, 2592, 1349, 1795, 2249, 1655, 828,
	1623, 1625, 1238, 236, 2247, 1882, 1078, 1794, 4306, 4944,
	3315, 4884, 1849, 4883, 3994, 1598, 4847, 4798, 4796, 1263,
	3762, 3056, 3315, 4677, 237, 4609, 4593, 2807, 4590, 4589,
	1493, 3925, 1080, 1504, 1326, 4588, 4568, 230, 1137, 1137,
	1137, 1137, 1137, 1137, 1137, 1137, 231, 4567, 3304, 4565,
	4549, 238, 3315, 2553, 2554, 2555, 2579, 2565, 2559, 1621,
	2561, 2562, 2560, 2547, 2548, 2549, 2550, 2551, 2552, 4548,
	4523, 1137, 4376, 190, 1535, 1796, 1797, 1137, 3300, 3301,
	3302, 3303, 3305, 3306, 1371, 4507, 3340, 1371, 1540, 4506,
	3315, 2533, 1800, 1801, 1802, 1803, 1805, 1806, 1827, 4492,
	237, 1326, 1326, 4489, 1773, 1799, 3308, 3300, 3301, 3302,
	3303, 3305, 3306, 230, 4488, 4483, 1614, 1802, 1803, 1805,
	1806, 4422, 231, 3300, 3301, 3302, 3303, 3305, 3306, 1660,
	4393, 1852, 3413, 4356, 4339, 4338, 1728, 236, 4318, 4317,
	1798, 1767, 1635, 4275, 4250, 4140, 4121, 4055, 4047, 3071,
	3310, 3311, 3312, 4044, 1649, 3913, 3912, 3309, 3307, 3308,
	3300, 3301, 3302, 3303, 3305, 3306, 2539, 3994, 3895, 3309,
	3307, 3308, 3300, 3301, 3302, 3303, 3305, 3306, 3894, 236,
	3892, 1871, 1137, 1137, 1137, 238, 3831, 3819, 1137, 3726,
	1869, 3664, 3310, 3311, 3312, 1259, 3646, 1259, 3612, 3309,
	3307, 3308, 3300, 3301, 3302, 3303, 3305, 3306, 1677, 3536,
	3494, 4551, 1402, 3461, 3415, 3263, 3262, 3257, 236, 3223,
	3030, 1713, 1137, 1941, 3055, 819, 1928, 238, 1927, 1926,
	1923, 2027, 819, 1915, 237, 1774, 1913, 1078, 3307, 3308,
	3300, 3301, 3302, 3303, 3305, 3306, 1804, 230, 2816, 1617,
	2815, 2781, 2774, 1990, 2740, 2617, 231, 1868, 1986, 4278,
	3385, 4305, 1950, 1942, 1937, 2006, 238, 1770, 1936, 1935,
	1778, 1934, 2055, 1777, 2057, 1058, 237, 1933, 1932, 1931,
	1930, 1929, 1910, 190, 1909, 1057, 1908, 1924, 1907, 230,
	1796, 1797, 1906, 1772, 1826, 1828, 2000, 1905, 231, 1904,
	1903, 1902, 1901, 1900, 1899, 1898, 1997, 1137, 1897, 1896,
	1895, 1971, 1341, 1791, 1792, 237, 1884, 1870, 1867, 1862,
	1799, 1947, 1948, 2313, 1356, 190, 236, 1612, 230, 1280,
	179, 1137, 1271, 4148, 4092, 3866, 3842, 231, 3834, 1402,
	2090, 3245, 2772, 4150, 236, 3298, 3299, 3865, 1225, 1883,
	3411, 1865, 2148, 1819, 3641, 1798, 2123, 1916, 1917, 2123,
	1982, 4214, 4881, 1078, 190, 4873, 2123, 2121, 2946, 1383,
	2072, 4591, 236, 2074, 238, 1257, 4484, 1257, 4475, 2079,
	4474, 2094, 4309, 2081, 2636, 4252, 825, 4251, 2084, 4213,
	4143, 4059, 238, 825, 4058, 4057, 4056, 1995, 1996, 3837,
	4754, 2634, 2620, 2093, 3666, 1991, 3665, 1972, 2924, 1381,
	3648, 2130, 3647, 1254, 4827, 1254, 4825, 1376, 2618, 1371,
	238, 3497, 3713, 237, 4530, 1962, 1964, 1849, 1969, 2192,
	236, 2021, 4528, 2001, 1382, 1676, 230, 1765, 2286, 3939,
	2050, 237, 1905, 3997, 2070, 231, 1940, 236, 4480, 1905,
	3283, 828, 3282, 1376, 230, 2109, 3205, 2206, 828, 3302,
	3303, 3305, 3306, 231, 2906, 1379, 1966, 2973, 1981, 237,
	1341, 1341, 190, 1980, 1979, 1977, 1976, 1975, 238, 1922,
	1402, 2097, 230, 3910, 236, 4397, 1921, 3463, 1037, 3528,
	190, 231, 2096, 1893, 1729, 238, 2024, 2007, 1504, 1616,
	3595, 4810, 3594, 1376, 1685, 1820, 2310, 4471, 4784, 4765,
	3657, 4750, 3578, 3113, 1686, 2224, 4001, 3984, 190, 3941,
	1890, 3936, 3918, 3686, 3436, 2317, 4360, 237, 4417, 3347,
	2223, 2100, 238, 1038, 3764, 2336, 3251, 2188, 2600, 2196,
	230, 4759, 2201, 2092, 237, 1504, 2965, 2814, 1938, 231,
	1918, 3586, 2279, 1591, 1517, 4774, 2954, 230, 2234, 2239,
	4771, 1352, 1308, 1851, 3631, 1348, 231, 2962, 2960, 2115,
	2114, 3887, 4583, 2123, 2125, 1341, 190, 1341, 2099, 1341,
	4389, 237, 2191, 4293, 4684, 4561, 3466, 3905, 2808, 2158,
	3094, 3068, 1366, 190, 230, 1341, 1341, 2126, 2116, 3561,
	1237, 4828, 4420, 231, 3440, 1377, 1341, 2903, 4760, 881,
	1377, 4829, 4416, 4395, 3707, 2441, 3954, 2953, 1341, 4863,
	1341, 1341, 1341, 2164, 1076, 4444, 4201, 1558, 1035, 1519,
	190, 2226, 2227, 825, 2605, 1664, 2228, 2849, 1033, 1566,
	4939, 1726, 1017, 3139, 819, 1532, 1031, 1539, 1029, 1545,
	4597, 2275, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805,
	1806, 1026, 2867, 2186, 4437, 2394, 1137, 2322, 2902, 2392,
	4428, 2335, 3442, 1617, 2439, 2110, 2867, 2865, 4242, 2280,
	1727, 4241, 3952, 2292, 3953, 1524, 3951, 1523, 3943, 3933,
	3932, 2865, 2118, 3930, 3929, 3917, 3882, 3881, 828, 3567,
	3566, 1137, 3405, 3256, 2185, 3255, 3254, 3253, 3209, 2315,
	2182, 2200, 2971, 2970, 1075, 882, 1634, 2967, 1639, 2956,
	2940, 1377, 2340, 3412, 1373, 2606, 1567, 2939, 1648, 1373,
	1653, 2240, 3009, 2934, 2933, 1137, 2932, 1137, 2300, 1383,
	2911, 1078, 1725, 1078, 1137, 2910, 2871, 2027, 2027, 1402,
	4418, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137,
	1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137,
	1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137,
	1137, 1137, 1137, 1137, 1137, 1137, 1137, 2289, 1137, 2261,
	1137, 1137, 1137, 1137, 1621, 1711, 1621, 2302, 2260, 2328,
	2323, 1383, 4390, 2795, 1382, 825, 1378, 2607, 2120, 2604,
	2514, 1378, 2298, 2294, 2443, 2278, 1137, 1662, 1771, 2650,
	1137, 1137, 758, 2440, 2430, 1077, 4864, 2425, 1137, 3496,
	2649, 2471, 1137, 1357, 1137, 1137, 2306, 1614, 2307, 2297,
	1373, 2297, 1402, 1253, 3463, 1253, 2119, 2904, 1137, 1137,
	1137, 1137, 2365, 3526, 1137, 1137, 1137, 1137, 1137, 1137,
	1137, 1137, 1130, 2327, 1374, 1255, 1382, 1255, 3065, 1374,
	828, 2224, 2259, 1375, 2822, 1806, 2310, 1604, 1375, 1603,
	1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 2355,
	2799, 2344, 4180, 1137, 2581, 2582, 2406, 2438, 2904, 1023,
	1602, 2441, 1601, 1520, 4337, 1259, 4199, 2908, 2581, 2597,
	2415, 758, 1402, 1562, 4196, 2928, 2467, 2468, 707, 3687,
	2388, 1259, 1378, 1616, 4158, 2423, 4173, 4868, 1657, 2418,
	3306, 1678, 2352, 1294, 2332, 2645, 2454, 1137, 1402, 2921,
	2922, 1952, 2921, 2922, 702, 2155, 2529, 2021, 2021, 2921,
	2922, 2405, 4215, 2600, 2691, 2691, 2705, 1763, 2581, 1575,
	2439, 2726, 2728, 4453, 2609, 1708, 2856, 2732, 1708, 2525,
	2429, 4576, 2545, 2428, 2442, 2435, 2427, 2404, 2529, 2151,
	1374, 4174, 1058, 2166, 1078, 1058, 1058, 4157, 2596, 1375,
	2757, 2194, 2458, 3119, 1078, 2459, 2460, 3220, 1078, 2523,
	2786, 1580, 1724, 3153, 1674, 1764, 2170, 1074, 2156, 2157,
	2894, 2782, 2024, 2024, 3527, 4193, 884, 883, 4828, 2749,
	2398, 2537, 2964, 1738, 1956, 4869, 2647, 3218, 2535, 2386,
	2345, 2648, 2880, 1705, 2651, 1971, 2652, 2653, 2152, 1341,
	1341, 2417, 2437, 3182, 2353, 4896, 1658, 2893, 1376, 757,
	3963, 1742, 2541, 1376, 2963, 3439, 1686, 4756, 1776, 1978,
	3197, 2349, 2299, 2167, 1225, 2343, 1686, 1355, 2771, 3696,
	3695, 1707, 2798, 1959, 1707, 2961, 2959, 3155, 2594, 922,
	2603, 2609, 2870, 1402, 2802, 1257, 4240, 1078, 1954, 3931,
	179, 2748, 1982, 2346, 4578, 793, 1706, 3753, 2870, 3928,
	2838, 1257, 3914, 3874, 3861, 3573, 1957, 3964, 1721, 2440,
	3565, 3902, 2844, 3890, 2700, 3524, 2866, 2027, 2966, 4195,
	2756, 2821, 2761, 1254, 2810, 2767, 2768, 2730, 2717, 2687,
	2931, 2830, 3750, 1587, 4197, 4871, 2846, 2834, 757, 1254,
	2750, 2519, 1924, 2754, 2755, 2738, 2739, 2883, 1027, 1955,
	3962, 2845, 1969, 4842, 2909, 2841, 2127, 2128, 1027, 759,
	1402, 1371, 2520, 2424, 1376, 2139, 1027, 2521, 1028, 3215,
	2140, 2526, 2171, 3164, 4336, 2872, 1341, 2907, 2183, 1663,
	2414, 1027, 3362, 2438, 2393, 1585, 4169, 879, 2391, 878,
	3513, 4170, 2852, 915, 3196, 3216, 4850, 1137, 1137, 3221,
	1137, 4175, 4849, 2840, 4877, 2829, 2817, 791, 2793, 2832,
	4454, 2833, 4899, 2854, 3751, 2158, 1916, 1917, 2246, 2245,
	4191, 2837, 4452, 819, 2820, 1341, 3690, 2847, 4450, 2869,
	3900, 903, 1326, 4757, 2824, 4194, 3505, 4817, 2172, 2173,
	2839, 4074, 2929, 4172, 2158, 4073, 2957, 3514, 759, 3915,
	2855, 3628, 3574, 2189, 2609, 3161, 1341, 3034, 3079, 2139,
	4176, 2944, 2168, 2913, 2140, 2868, 3189, 3190, 1958, 2897,
	1341, 2853, 1341, 3108, 2850, 4449, 1564, 3004, 3571, 3629,
	3052, 1326, 2912, 4584, 2141, 3167, 2914, 1341, 4663, 832,
	3512, 703, 1661, 3506, 1009, 2930, 1561, 2184, 2511, 1739,
	4381, 2207, 2145, 4451, 2760, 4180, 2169, 4927, 2938, 2178,
	2875, 2416, 1326, 1326, 2351, 2972, 1293, 2021, 1071, 2707,
	3001, 3002, 2067, 3048, 4604, 2923, 2925, 2926, 2927, 3120,
	3121, 4870, 2885, 2888, 3005, 1137, 3504, 4755, 1267, 4173,
	3127, 3128, 3129, 4166, 2219, 4517, 4198, 1587, 2947, 2882,
	3141, 2936, 3142, 825, 3539, 2937, 3111, 2522, 3114, 2942,
	4164, 3628, 4577, 2935, 3977, 2952, 2179, 2524, 4724, 4168,
	4725, 2609, 704, 3110, 3975, 2142, 2147, 3003, 2141, 4192,
	1264, 3361, 2024, 3478, 825, 3217, 179, 3441, 1736, 3093,
	4171, 3137, 3010, 756, 4174, 3219, 2145, 1137, 4509, 1024,
	1687, 2218, 3211, 1137, 1137, 1524, 1493, 3015, 3012, 2177,
	1010, 4510, 2210, 3014, 3083, 3450, 1518, 2217, 828, 3166,
	4653, 705, 3028, 706, 792, 1269, 3081, 2174, 1659, 4181,
	4182, 3039, 3143, 3038, 2528, 1278, 2195, 4167, 1504, 1740,
	3477, 3482, 916, 917, 2100, 4511, 4791, 4267, 1911, 828,
	3163, 4816, 3979, 3169, 3074, 3171, 4792, 4875, 2143, 1137,
	1137, 3095, 923, 3084, 2387, 1137, 1673, 1675, 2509, 2142,
	2147, 2512, 2536, 794, 3409, 1621, 3115, 790, 1137, 1137,
	904, 905, 3063, 2785, 1137, 1137, 3082, 3978, 4333, 2161,
	1137, 2207, 1268, 3136, 3484, 3134, 2881, 3117, 1095, 2867,
	2193, 3558, 3122, 2175, 3123, 1737, 3572, 2149, 3146, 4513,
	3148, 3145, 3150, 3147, 2886, 3149, 2180, 3010, 2207, 2149,
	1775, 3144, 2508, 4070, 2348, 2381, 2193, 4839, 2342, 1354,
	4349, 2211, 4512, 1741, 4707, 1137, 1137, 1137, 833, 834,
	3159, 1137, 3212, 2195, 2203, 3177, 2162, 4695, 4225, 3901,
	4514, 1137, 2143, 1253, 725, 3165, 1015, 1014, 3483, 3172,
	3445, 2943, 3174, 3188, 1861, 2591, 4876, 3261, 1137, 1253,
	2766, 2202, 2753, 2190, 4900, 1255, 3179, 1077, 2192, 3766,
	3178, 3244, 4887, 1504, 4277, 4064, 4885, 4245, 3862, 2160,
	1283, 1255, 4075, 3198, 1326, 3183, 2454, 3488, 4282, 4169,
	3709, 2149, 4878, 1011, 4170, 2198, 1692, 3180, 4651, 4611,
	3239, 3240, 4700, 4630, 4175, 3243, 2187, 4491, 4283, 4244,
	4243, 4015, 1952, 3451, 1785, 1956, 3616, 4332, 1086, 3235,
	2267, 1949, 1281, 1274, 2156, 2157, 694, 1780, 918, 919,
	3992, 1785, 1786, 4071, 4119, 1504, 3805, 1504, 2194, 2457,
	1078, 4652, 2159, 4815, 3486, 3210, 4172, 2111, 3976, 3398,
	1137, 1137, 1137, 1137, 2199, 3679, 4268, 4905, 4415, 4928,
	1137, 1137, 1137, 4176, 1959, 1137, 906, 907, 3677, 4500,
	4560, 4016, 836, 835, 2068, 1137, 1259, 1402, 3670, 2751,
	2144, 1137, 2108, 1137, 3354, 3355, 3947, 3487, 3934, 3886,
	3457, 4790, 1259, 3977, 3617, 1956, 3608, 1957, 3453, 1265,
	3053, 3047, 3032, 3975, 2293, 2287, 2510, 2281, 2273, 2253,
	1402, 2252, 3749, 1555, 1012, 4612, 1285, 2447, 1784, 765,
	3820, 2191, 1259, 3878, 4668, 1402, 3710, 2870, 4633, 2399,
	3250, 2104, 4018, 4298, 3029, 1784, 837, 838, 2990, 3337,
	2214, 1013, 1785, 1296, 1959, 4076, 2027, 2744, 4469, 4467,
	1402, 4392, 1266, 3378, 2915, 3356, 4334, 3469, 2106, 1954,
	3465, 3464, 3203, 3391, 2333, 3181, 1341, 3833, 3359, 3358,
	1709, 2982, 2980, 2792, 2144, 3404, 3672, 1957, 2984, 2986,
	2976, 3979, 2747, 1715, 1714, 2791, 1786, 2790, 1137, 2789,
	4515, 3671, 2788, 4171, 1016, 1596, 4516, 2212, 3983, 3419,
	2887, 2107, 1137, 1786, 3855, 1610, 3364, 1075, 1608, 1597,
	2148, 3366, 1341, 3446, 3447, 921, 3978, 2027, 3036, 3392,
	1955, 2996, 4280, 2746, 4571, 4404, 4464, 3387, 2745, 3806,
	4077, 4259, 4181, 4182, 3467, 1137, 4120, 3471, 3807, 2891,
	2213, 3893, 3365, 3658, 2148, 2291, 1784, 3376, 3332, 3333,
	3334, 1341, 3581, 3379, 3380, 2448, 1257, 4836, 3856, 1958,
	3396, 3384, 4315, 3430, 3348, 4608, 4379, 4904, 3437, 3883,
	3008, 3422, 1257, 1341, 3407, 1341, 1861, 3118, 3363, 3377,
	3426, 3013, 3443, 3428, 3429, 3857, 3011, 3854, 3432, 2321,
	3433, 2223, 3434, 3468, 1254, 2206, 3473, 1402, 1371, 3475,
	3454, 1667, 1257, 4387, 2206, 3540, 4400, 3973, 1341, 3542,
	1254, 3544, 1341, 4613, 3548, 3410, 3416, 3417, 3554, 3418,
	3382, 3879, 3383, 3529, 4399, 3400, 3401, 3402, 3403, 2916,
	2917, 4405, 4674, 4681, 4314, 4665, 3499, 4572, 1341, 1958,
	1254, 1693, 4126, 3822, 2616, 3503, 2021, 4840, 1759, 4388,
	4702, 1761, 1341, 1758, 1341, 4841, 4838, 3427, 1402, 3522,
	4776, 2978, 4600, 3431, 4592, 819, 1341, 4355, 3424, 4118,
	3982, 3438, 2992, 1756, 2410, 3537, 1733, 1341, 3329, 3591,
	3725, 3399, 1731, 3684, 3683, 2100, 3458, 3976, 3444, 3517,
	3575, 4456, 1341, 2991, 2983, 2981, 2985, 2987, 2977, 2979,
	2993, 1703, 3678, 3673, 3674, 3675, 3676, 1701, 764, 1259,
	2989, 2024, 1699, 3624, 3452, 3485, 3420, 2021, 1697, 3292,
	3108, 4675, 3370, 1695, 3222, 3033, 4573, 2955, 3600, 3108,
	3495, 2100, 3884, 1689, 1341, 1341, 3607, 2905, 3508, 1996,
	3576, 3622, 3579, 2997, 1683, 1681, 3018, 1609, 2819, 3021,
	1607, 3023, 3511, 3502, 1009, 1504, 1504, 920, 2419, 1341,
	1989, 1985, 3530, 1762, 1645, 3330, 3615, 3705, 3509, 3704,
	2100, 3525, 3510, 3633, 1780, 3516, 3538, 3518, 1071, 1606,
	3644, 3563, 2024, 3157, 2938, 3551, 3156, 3557, 3858, 3125,
	2436, 2390, 2100, 1400, 2100, 1720, 3070, 1498, 2357, 3070,
	2232, 2360, 2272, 3449, 1402, 2251, 3564, 1402, 2056, 1894,
	3550, 1656, 1579, 2615, 3556, 3568, 3541, 4749, 3371, 3688,
	4226, 3938, 3937, 4227, 4210, 4664, 825, 2100, 1504, 4813,
	3562, 2100, 1025, 2015, 3618, 2913, 3583, 1760, 4291, 1757,
	1137, 3698, 3625, 4296, 3501, 3605, 1137, 1137, 3604, 4232,
	1137, 1137, 1137, 2278, 1137, 3603, 2412, 179, 179, 1755,
	2411, 3681, 1732, 1137, 2027, 3746, 3515, 4223, 1730, 3369,
	1010, 1999, 1137, 3656, 3660, 3630, 4804, 1137, 1078, 4162,
	3151, 4014, 4005, 1402, 3639, 3642, 3643, 1702, 3632, 1257,
	3950, 828, 1137, 1700, 3935, 3703, 3654, 3623, 1698, 3908,
	1402, 3549, 3375, 3906, 1696, 3555, 3885, 3702, 3611, 1694,
	2027, 2027, 1137, 1137, 3606, 1137, 1137, 1137, 3596, 1688,
	3066, 3058, 3051, 2998, 3040, 3026, 3025, 1254, 3006, 2836,
	1682, 1680, 2988, 1137, 3711, 3728, 2831, 1137, 2250, 2027,
	2027, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137,
	1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137,
	1137, 3699, 1137, 3682, 2248, 1605, 3778, 2225, 3779, 2208,
	1137, 1137, 2027, 2389, 2176, 3738, 3739, 1137, 1326, 3680,
	2356, 3692, 2231, 3693, 2163, 3694, 3708, 2150, 1137, 2089,
	1030, 1032, 1034, 2086, 2083, 3700, 2080, 2075, 2073, 1259,
	1259, 2069, 2060, 1137, 3706, 3621, 1789, 3552, 3201, 3372,
	3373, 3374, 2217, 4282, 4829, 2112, 1015, 1014, 4570, 1234,
	3175, 3173, 2999, 4712, 1253, 4320, 4313, 3735, 3733, 2422,
	4312, 4239, 4154, 4283, 1402, 3109, 2131, 1560, 4502, 2867,
	1253, 3851, 3745, 2892, 4495, 1235, 1255, 3752, 3754, 3755,
	4026, 3817, 2867, 3761, 2865, 2158, 1753, 1754, 3756, 3768,
	2347, 2384, 1255, 1011, 2021, 3838, 1317, 2889, 4711, 2379,
	1253, 2354, 3776, 2290, 4202, 2420, 3777, 1316, 4234, 2467,
	3769, 3775, 3781, 1137, 1679, 3859, 3860, 1504, 3783, 3809,
	4537, 2895, 1255, 4402, 4127, 4105, 1145, 3480, 1796, 1797,
	3872, 3873, 1137, 3875, 3202, 2896, 3818, 2918, 2467, 3784,
	2021, 2021, 179, 3829, 3830, 3810, 1793, 1790, 1796, 1797,
	1350, 2421, 1069, 2896, 1009, 1284, 3553, 4832, 1799, 2024,
	4785, 4823, 3024, 4002, 261, 1137, 1137, 2274, 3946, 2021,
	2021, 3813, 268, 268, 268, 1361, 697, 698, 1071, 713,
	697, 713, 723, 3826, 3827, 763, 1236, 2962, 1317, 783,
	3945, 2960, 1317, 1798, 789, 2969, 2949, 2898, 4673, 3841,
	3840, 268, 2021, 2951, 2900, 2024, 2024, 1137, 3876, 1257,
	1257, 691, 3877, 1798, 1012, 4658, 2950, 2899, 4624, 4618,
	4569, 900, 4486, 4462, 1070, 4380, 4012, 268, 4004, 1341,
	3991, 3848, 1341, 3610, 2024, 2024, 3073, 1341, 2731, 3919,
	2095, 1013, 2008, 3824, 4872, 3679, 3868, 1254, 1254, 4401,
	4704, 2941, 3907, 1516, 3909, 4705, 1515, 3408, 3677, 4903,
	3924, 3926, 2027, 3298, 3299, 3923, 4620, 2024, 3670, 1526,
	1010, 1796, 1797, 4704, 3889, 4844, 4011, 4097, 4705, 1666,
	3948, 3942, 3940, 2859, 2860, 1665, 1988, 2857, 2858, 2238,
	2611, 3864, 3911, 1341, 1016, 2859, 2857, 2646, 1735, 1137,
	3916, 1734, 4487, 4438, 4236, 4231, 4230, 1259, 1137, 4093,
	4028, 3965, 3967, 3863, 3079, 3757, 3546, 3543, 1341, 1341,
	1341, 1888, 1887, 4889, 4851, 3949, 4662, 4019, 4035, 4661,
	2913, 3961, 4660, 4599, 4598, 1341, 1341, 1341, 4553, 1874,
	4465, 3108, 4432, 1879, 4377, 4374, 3981, 4372, 4270, 4256,
	3985, 4200, 4149, 4050, 1341, 4020, 4023, 697, 697, 4032,
	1402, 3986, 3969, 3904, 3896, 268, 3672, 3614, 3613, 3474,
	3425, 3162, 3154, 4039, 3133, 4008, 3998, 3132, 3958, 2015,
	2015, 3671, 3999, 3131, 3970, 3130, 1402, 1253, 3057, 1137,
	1137, 4022, 4003, 3027, 2890, 1137, 1137, 2027, 2827, 2823,
	1137, 1137, 2812, 1137, 2811, 2800, 2540, 4051, 1137, 1255,
	2413, 2385, 2378, 2133, 2377, 2376, 1015, 1014, 2375, 1137,
	4006, 2374, 2288, 2262, 2258, 2257, 2256, 2255, 4021, 3489,
	3490, 3458, 3491, 3492, 3493, 1137, 2254, 4024, 2063, 3960,
	4030, 4029, 4062, 2062, 2061, 4034, 2059, 1998, 1752, 4040,
	4041, 1751, 1690, 4078, 4060, 4049, 2100, 4046, 4045, 4048,
	4042, 1574, 2021, 1011, 4079, 1573, 1572, 1571, 4087, 1570,
	3971, 2139, 3668, 3980, 1569, 1568, 2140, 4091, 1563, 1559,
	3531, 3532, 1557, 3533, 3534, 3535, 1556, 1257, 1509, 1508,
	1507, 1393, 1326, 1392, 1391, 1390, 1259, 4072, 1389, 1353,
	1303, 1302, 1301, 1300, 1259, 1299, 1298, 1297, 1402, 1295,
	1402, 1290, 1289, 1288, 1287, 1286, 1217, 1259, 893, 8,
	2102, 1036, 1022, 4575, 4179, 1254, 4178, 2024, 1341, 1341,
	3959, 4177, 2409, 92, 1565, 855, 86, 2215, 1402, 3903,
	4779, 4132, 988, 4701, 4603, 1548, 863, 4683, 4000, 3476,
	2974, 2359, 1691, 2361, 2243, 3386, 2278, 2773, 3391, 4650,
	4155, 4156, 4067, 1259, 4101, 1259, 3260, 4544, 4348, 2614,
	1892, 3341, 88, 4117, 1121, 1167, 4061, 4266, 4265, 4163,
	3888, 3098, 4263, 4262, 1012, 4203, 4135, 2012, 1341, 2014,
	2141, 1085, 3678, 3673, 3674, 3675, 3676, 2021, 1402, 1405,
	1341, 4723, 2113, 1341, 4186, 4190, 4186, 1127, 2145, 1068,
	4128, 1013, 2129, 2122, 1402, 4124, 2813, 2690, 4133, 1144,
	4131, 179, 4205, 4206, 1141, 4189, 4134, 4138, 2016, 4235,
	2018, 4237, 1143, 4139, 4129, 4130, 4142, 4159, 1142, 2017,
	1912, 4161, 1140, 2011, 4010, 4204, 3077, 3640, 1615, 1613,
	4147, 990, 2117, 1341, 1341, 2534, 2598, 3249, 1885, 1101,
	1123, 2595, 2024, 4153, 1016, 1279, 1112, 1100, 4260, 3367,
	3346, 3627, 3847, 1341, 2446, 873, 1257, 1253, 1253, 3295,
	2601, 2142, 2147, 1270, 1257, 1402, 2714, 2706, 4224, 2702,
	1341, 4238, 4229, 3435, 4219, 3067, 1766, 1257, 4362, 1255,
	1255, 1863, 3078, 4257, 1387, 1105, 2532, 1876, 3227, 2456,
	3634, 3389, 2806, 4708, 1254, 1259, 3765, 3160, 2266, 4222,
	1233, 1232, 1254, 1277, 4299, 4254, 4288, 1341, 1341, 1341,
	1341, 1231, 4689, 4285, 4686, 1254, 2205, 4248, 4043, 3589,
	2105, 1402, 4255, 1257, 2851, 1257, 4253, 2544, 3597, 2015,
	4247, 1117, 4300, 1137, 1137, 1137, 4186, 4319, 4246, 1503,
	2403, 3352, 3659, 4294, 2143, 4261, 1576, 788, 4409, 4287,
	1129, 1402, 1848, 2995, 4303, 4316, 1137, 4276, 2994, 1137,
	1137, 1254, 4564, 1254, 1372, 1370, 1369, 1368, 4860, 1137,
	4209, 4926, 2027, 3899, 3898, 4308, 3897, 1137, 1137, 4301,
	235, 3195, 4218, 1787, 1779, 4221, 232, 2100, 234, 2137,
	233, 4271, 1402, 2149, 1341, 3852, 4325, 3395, 4340, 2100,
	4783, 3921, 2100, 2470, 3580, 23, 1272, 22, 4323, 4322,
	21, 113, 42, 20, 152, 4328, 130, 1402, 149, 148,
	122, 4335, 147, 146, 145, 1137, 144, 151, 143, 142,
	137, 141, 140, 139, 138, 136, 134, 135, 1137, 1292,
	129, 4345, 133, 4357, 132, 131, 2135, 1137, 128, 127,
	4351, 268, 2027, 268, 268, 4284, 1321, 268, 1331, 126,
	4208, 1137, 125, 2278, 1137, 124, 123, 121, 153, 1351,
	120, 119, 2100, 4217, 118, 1257, 4220, 783, 1137, 117,
	783, 4383, 116, 1326, 115, 1402, 4368, 4369, 4412, 2136,
	114, 776, 1341, 777, 61, 60, 2612, 112, 4382, 4371,
	110, 111, 1341, 1341, 268, 19, 268, 268, 1321, 40,
	268, 268, 4391, 1254, 4384, 1331, 14, 65, 66, 18,
	13, 35, 91, 102, 101, 36, 99, 98, 34, 268,
	17, 1528, 16, 15, 3591, 1253, 4329, 96, 4455, 4443,
	95, 33, 31, 11, 4431, 4477, 9, 1402, 37, 1973,
	1341, 12, 1553, 5, 4468, 184, 4434, 1255, 4433, 183,
	186, 4429, 182, 185, 4423, 4424, 90, 181, 1259, 1259,
	180, 1578, 2021, 89, 1331, 29, 2144, 10, 268, 268,
	176, 1321, 4440, 4478, 4496, 4485, 4447, 3996, 81, 1137,
	1137, 4460, 2783, 4458, 4439, 4501, 4441, 4466, 4442, 4457,
	178, 4461, 783, 177, 268, 268, 1137, 2027, 175, 4186,
	4186, 4499, 4497, 174, 4505, 4476, 173, 82, 79, 172,
	85, 4421, 1335, 171, 4524, 4493, 80, 900, 4520, 4521,
	84, 83, 27, 6, 64, 4498, 4481, 2024, 7, 4504,
	4303, 4330, 4518, 4503, 1137, 3685, 1137, 105, 1137, 106,
	38, 77, 2021, 76, 75, 26, 63, 25, 1259, 170,
	2538, 217, 216, 4533, 4534, 4552, 4435, 215, 4554, 214,
	213, 1137, 212, 1259, 4559, 4532, 1874, 211, 4542, 1512,
	210, 205, 204, 209, 207, 206, 208, 203, 227, 226,
	220, 219, 225, 224, 4446, 4536, 223, 222, 221, 4186,
	218, 229, 202, 201, 200, 268, 198, 4558, 194, 193,
	197, 2100, 4555, 1550, 4186, 2451, 199, 2024, 196, 195,
	2148, 4007, 4586, 4579, 1253, 1137, 1137, 192, 4580, 268,
	228, 2713, 1253, 4587, 72, 1137, 4607, 2862, 168, 1588,
	1259, 169, 71, 1259, 167, 1253, 1255, 1341, 1257, 1257,
	166, 165, 164, 163, 1255, 162, 161, 1341, 1341, 4594,
	70, 24, 4596, 2, 1, 0, 1629, 1255, 0, 0,
	0, 0, 0, 0, 1341, 0, 4601, 0, 0, 0,
	1642, 4186, 0, 0, 4186, 4445, 1254, 1254, 1137, 1137,
	4622, 1253, 4619, 1253, 4641, 4063, 4626, 4621, 1137, 0,
	4627, 4614, 0, 4629, 4595, 4615, 4616, 2021, 0, 4634,
	4635, 0, 4638, 1255, 0, 1255, 0, 0, 4646, 4637,
	4647, 0, 0, 0, 0, 0, 0, 0, 0, 4639,
	4640, 0, 4645, 0, 0, 0, 1668, 4481, 1257, 0,
	4676, 1137, 1137, 4655, 1137, 0, 4644, 0, 4680, 0,
	0, 4659, 0, 1257, 0, 0, 0, 0, 0, 0,
	0, 2708, 4654, 0, 0, 0, 0, 1504, 4710, 4688,
	4691, 0, 2024, 0, 0, 4706, 1254, 4671, 4672, 0,
	0, 4679, 4678, 0, 0, 0, 0, 4698, 0, 4703,
	4699, 1254, 4728, 0, 0, 0, 0, 4697, 0, 0,
	0, 0, 1137, 1137, 1137, 0, 0, 0, 4731, 0,
	0, 0, 4713, 0, 0, 4692, 0, 4732, 4696, 4726,
	1257, 0, 4693, 1257, 0, 0, 0, 4719, 0, 0,
	697, 4727, 0, 0, 0, 1137, 0, 4763, 0, 0,
	0, 0, 0, 1253, 0, 0, 0, 4748, 4747, 4745,
	4746, 268, 0, 268, 0, 0, 0, 268, 1254, 0,
	4768, 1254, 0, 0, 0, 1255, 0, 4764, 2015, 0,
	1528, 1321, 1993, 268, 1326, 268, 4786, 0, 0, 4793,
	4766, 268, 1528, 713, 0, 0, 4809, 4797, 268, 1528,
	0, 1528, 1137, 4795, 4782, 0, 0, 4807, 0, 4808,
	0, 0, 0, 2064, 0, 4814, 0, 4794, 0, 4801,
	0, 4803, 0, 0, 4802, 268, 0, 0, 0, 0,
	0, 0, 268, 4830, 0, 0, 0, 4820, 4821, 0,
	0, 4826, 4805, 4806, 4834, 4824, 4822, 0, 4811, 2015,
	0, 0, 0, 4833, 0, 0, 4835, 1259, 4710, 1259,
	2148, 4688, 4837, 0, 4691, 0, 0, 1528, 4778, 0,
	4781, 783, 4854, 4856, 4853, 4867, 4607, 4852, 4865, 4848,
	4843, 0, 0, 0, 4866, 4862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4880, 0, 4186, 0,
	4186, 4861, 0, 0, 0, 0, 0, 0, 4882, 0,
	4879, 0, 4269, 0, 0, 0, 0, 4855, 0, 4857,
	0, 0, 0, 0, 0, 4286, 0, 4893, 4897, 0,
	4891, 4890, 0, 1137, 1137, 0, 0, 4898, 0, 0,
	4895, 4886, 1137, 0, 1137, 1137, 4901, 4888, 4307, 0,
	0, 0, 4907, 0, 0, 0, 4917, 3224, 3225, 4911,
	4920, 4922, 4915, 4921, 0, 3079, 0, 0, 4919, 0,
	4914, 4918, 0, 0, 0, 0, 0, 4916, 4930, 0,
	0, 4934, 4929, 4932, 4925, 0, 4935, 0, 4936, 0,
	4938, 0, 0, 4931, 4933, 0, 4941, 0, 0, 0,
	0, 0, 0, 0, 4943, 1137, 4946, 4942, 4948, 0,
	0, 0, 4949, 4945, 4951, 4952, 0, 4938, 4908, 4909,
	0, 0, 0, 0, 0, 0, 1253, 1253, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 1257, 268, 1257,
	0, 0, 0, 0, 0, 0, 0, 0, 1255, 1255,
	0, 0, 0, 0, 0, 2713, 0, 4910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	796, 0, 0, 0, 0, 1254, 0, 1254, 0, 4947,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 807, 268, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 1253, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 268, 0, 0, 0,
	697, 1253, 268, 0, 0, 0, 2713, 2713, 1255, 3322,
	3323, 3324, 3325, 0, 783, 0, 0, 0, 900, 0,
	0, 3353, 0, 1255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 1321, 268, 0, 0, 0,
	0, 0, 0, 0, 3381, 3185, 0, 0, 801, 0,
	783, 0, 0, 0, 0, 813, 2015, 268, 1253, 3394,
	0, 1253, 0, 0, 0, 2358, 0, 0, 0, 806,
	268, 268, 0, 268, 0, 268, 0, 268, 0, 268,
	1255, 0, 0, 1255, 3414, 0, 888, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2015, 2015, 2395, 0, 0, 2396, 0, 2397,
	0, 0, 0, 73, 0, 891, 890, 0, 805, 0,
	0, 268, 268, 268, 268, 0, 2708, 2708, 0, 0,
	74, 2015, 2015, 0, 0, 758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 763, 0,
	0, 0, 783, 0, 0, 0, 0, 0, 0, 0,
	803, 0, 0, 0, 2015, 0, 0, 0, 2308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2713, 2713,
	2713, 2713, 0, 0, 1335, 2324, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 2326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2334, 0, 2337,
	2338, 2339, 0, 0, 0, 0, 0, 0, 0, 812,
	0, 0, 0, 0, 0, 0, 0, 894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 0, 107, 4605, 0, 2546, 0, 93, 104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3394, 0, 798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 2708, 2708,
	2708, 2708, 0, 0, 0, 0, 697, 0, 0, 0,
	0, 0, 0, 0, 0, 802, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	697, 0, 0, 0, 0, 0, 0, 268, 0, 697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 757, 0, 0, 1253, 0, 1253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 808, 0, 268,
	1331, 0, 0, 800, 0, 0, 0, 1255, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4714,
	0, 0, 0, 3298, 3299, 4716, 3316, 3317, 3318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 2015, 4083, 0, 0, 268, 1331,
	797, 0, 0, 713, 0, 0, 0, 2826, 1498, 0,
	74, 1400, 0, 268, 0, 0, 268, 0, 0, 0,
	268, 0, 268, 97, 0, 0, 78, 1321, 804, 268,
	268, 0, 1331, 1331, 2842, 0, 0, 0, 0, 268,
	0, 0, 759, 0, 0, 0, 0, 0, 3313, 0,
	0, 0, 0, 799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	3721, 3722, 0, 0, 0, 0, 810, 811, 187, 100,
	0, 0, 103, 0, 0, 0, 2879, 3742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 3758, 0, 0, 894, 236, 0,
	268, 0, 0, 0, 0, 0, 895, 0, 0, 0,
	49, 150, 107, 268, 0, 0, 0, 93, 104, 2015,
	0, 0, 0, 0, 783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 238, 0, 0, 0,
	3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794,
	3795, 3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804,
	0, 3808, 154, 0, 0, 0, 94, 0, 268, 3016,
	0, 0, 0, 0, 0, 0, 0, 191, 2843, 1335,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 3320,
	0, 0, 0, 0, 1528, 0, 0, 268, 230, 268,
	0, 0, 1796, 1797, 0, 0, 268, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 3062, 0, 3850, 0,
	0, 0, 0, 0, 0, 1827, 2879, 0, 697, 2713,
	2713, 3314, 1799, 0, 889, 0, 0, 3091, 900, 0,
	2879, 2879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 268,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 268, 1321,
	268, 0, 0, 0, 0, 0, 1815, 1528, 0, 1528,
	1331, 268, 0, 0, 1321, 0, 1321, 0, 1321, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 3000, 0, 0, 0, 2713,
	2713, 2713, 2713, 2713, 2713, 2713, 2713, 2713, 2713, 2713,
	2713, 2713, 2713, 2713, 2713, 2713, 2713, 2713, 2713, 0,
	2713, 268, 268, 268, 268, 1321, 0, 0, 1321, 0,
	268, 0, 0, 268, 0, 0, 0, 0, 0, 2708,
	2708, 0, 0, 1821, 1822, 1823, 1824, 1092, 187, 100,
	0, 0, 103, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3315, 268, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 895, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 1099, 1099,
	1099, 1826, 1828, 0, 0, 0, 3126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	1485, 0, 0, 0, 0, 0, 238, 1813, 1814, 2708,
	2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708,
	2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 0,
	2708, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 191, 0, 73,
	1796, 1797, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 74, 0, 230, 0,
	0, 0, 0, 1827, 0, 0, 0, 231, 1528, 0,
	1799, 0, 78, 3310, 3311, 3312, 0, 0, 0, 0,
	3309, 3307, 3308, 3300, 3301, 3302, 3303, 3305, 3306, 0,
	0, 0, 0, 0, 190, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 1849, 1798, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 1796,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 894, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 93, 104, 1852, 0, 0, 0, 0,
	0, 0, 1820, 0, 1798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 268, 0, 4137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 94, 697, 0, 0, 0, 0, 697, 0,
	1851, 697, 4151, 0, 697, 697, 0, 0, 0, 0,
	697, 0, 0, 0, 0, 0, 0, 0, 268, 1826,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	1821, 1822, 1823, 1824, 0, 0, 0, 73, 0, 2015,
	1804, 0, 0, 0, 0, 0, 1528, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 268, 0,
	0, 0, 268, 268, 0, 0, 0, 0, 1819, 0,
	78, 0, 0, 0, 0, 0, 1816, 1812, 0, 1809,
	1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806, 1826, 1828,
	0, 2879, 2879, 268, 0, 1993, 0, 0, 0, 0,
	0, 2879, 0, 0, 3460, 0, 0, 0, 0, 2803,
	87, 0, 2879, 3460, 0, 2879, 3460, 0, 0, 3460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 268, 268, 1993, 0, 268, 0,
	0, 0, 1849, 0, 0, 0, 0, 1819, 0, 0,
	0, 894, 0, 0, 0, 0, 0, 0, 1993, 0,
	268, 0, 3521, 3521, 49, 0, 107, 1321, 0, 0,
	0, 93, 104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 100, 0, 2879, 103, 2879,
	0, 3547, 2879, 1993, 0, 1400, 2879, 1993, 0, 1485,
	783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	1820, 1849, 895, 0, 0, 4346, 1321, 150, 0, 0,
	94, 0, 0, 268, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 3585, 0, 0, 3587, 2879, 4354, 0,
	268, 0, 238, 0, 268, 0, 4346, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 0, 1851, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 154, 0,
	3062, 2470, 0, 1321, 0, 268, 0, 0, 2879, 1820,
	697, 0, 0, 191, 0, 0, 0, 2879, 0, 0,
	0, 237, 0, 0, 4394, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 230, 0, 1485, 0, 268, 3062,
	0, 0, 3062, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 2470,
	190, 0, 0, 0, 0, 0, 0, 3691, 1807, 1808,
	1800, 1801, 1802, 1803, 1805, 1806, 0, 97, 1796, 1797,
	0, 0, 0, 0, 0, 3697, 0, 3559, 1528, 0,
	0, 1321, 268, 0, 268, 0, 0, 0, 0, 0,
	1321, 1827, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 3584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3601, 0, 0, 0,
	268, 0, 187, 100, 1852, 0, 103, 2713, 0, 0,
	0, 3609, 0, 1798, 0, 0, 1809, 1807, 1808, 1800,
	1801, 1802, 1803, 1805, 1806, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 1485, 0, 0,
	895, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 3650, 3651, 0, 0, 0, 3763, 0,
	0, 0, 0, 2713, 0, 4541, 0, 0, 0, 0,
	1796, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 4563, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 191, 0, 0, 0, 0, 1852, 0, 0, 237,
	4585, 0, 0, 0, 0, 1798, 0, 2708, 0, 0,
	0, 0, 230, 0, 0, 1818, 0, 0, 0, 0,
	0, 231, 0, 0, 1815, 268, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 697,
	697, 0, 1796, 1797, 0, 1829, 1830, 1831, 1840, 1841,
	1842, 0, 0, 2708, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 1528, 1833, 1827, 0, 0, 0, 0,
	3724, 0, 1799, 0, 0, 0, 0, 1528, 1528, 0,
	1528, 1846, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 1821, 1822, 1823, 1824, 0, 0, 0, 1852, 0,
	0, 1804, 0, 0, 2713, 0, 1951, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2713, 0, 0, 0, 0, 1826,
	1828, 0, 0, 783, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 1485, 0, 0, 2713,
	0, 0, 0, 0, 0, 1813, 1814, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 3521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 1821, 1822, 1823, 1824, 0, 1819, 0,
	0, 0, 0, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 268, 0, 0, 0, 713, 713,
	1331, 0, 0, 0, 2708, 0, 0, 0, 1820, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 268, 1847, 0, 0, 0, 0, 1485,
	0, 1826, 1828, 268, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 268, 2708, 0, 0, 0, 1843, 0,
	1844, 0, 1849, 0, 0, 0, 0, 1813, 1814, 0,
	0, 0, 2879, 268, 0, 0, 1851, 0, 1084, 2708,
	0, 0, 3091, 3091, 0, 1835, 0, 0, 900, 900,
	2879, 0, 0, 73, 3062, 3062, 0, 0, 900, 2879,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 1485,
	74, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 268, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	1820, 0, 0, 73, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3955, 0,
	74, 3956, 0, 1834, 0, 0, 87, 1808, 1800, 1801,
	1802, 1803, 1805, 1806, 1849, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 4102,
	0, 0, 0, 0, 0, 0, 0, 894, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	49, 0, 107, 0, 1832, 0, 0, 93, 104, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4036, 4037, 4038,
	0, 0, 1820, 0, 0, 0, 0, 894, 0, 0,
	0, 0, 268, 0, 1335, 4052, 4053, 0, 1528, 0,
	268, 0, 107, 0, 0, 0, 0, 93, 104, 1838,
	1485, 0, 0, 268, 1816, 1812, 94, 1809, 1807, 1808,
	1800, 1801, 1802, 1803, 1805, 1806, 0, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1331, 0, 0, 0, 0, 0, 0, 2879, 2879,
	0, 3521, 2879, 0, 0, 0, 0, 0, 0, 4188,
	0, 4188, 1528, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 2879, 0, 3460, 0, 0, 0, 1528,
	1528, 268, 1993, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 1993, 0, 268, 1993, 0,
	268, 0, 3521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 2879, 0, 2879,
	268, 0, 1810, 1811, 1817, 1839, 1816, 1812, 0, 1809,
	1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806, 1832, 0,
	0, 0, 4110, 0, 1832, 0, 4109, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 2879, 0, 0, 0,
	0, 4273, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 4144, 4145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4188, 0, 97, 1528, 0, 0, 0, 187, 100,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3298, 3299, 0, 3316, 3317, 3318, 0,
	1832, 0, 0, 0, 0, 1832, 0, 0, 236, 0,
	0, 0, 0, 0, 1832, 3730, 895, 0, 0, 1832,
	0, 150, 0, 0, 0, 0, 0, 0, 187, 100,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3298, 3299, 0, 3316, 3317, 3318,
	0, 0, 0, 0, 0, 0, 238, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 895, 0, 3313, 0,
	0, 150, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 1832, 0, 0, 0, 0, 2879,
	1832, 3460, 0, 0, 4386, 0, 0, 191, 0, 0,
	0, 0, 0, 268, 0, 237, 238, 0, 0, 0,
	0, 0, 0, 4410, 0, 4410, 0, 0, 230, 3313,
	0, 3298, 3299, 0, 3316, 3317, 3318, 231, 0, 0,
	1346, 0, 154, 0, 0, 0, 0, 0, 0, 783,
	0, 0, 0, 3729, 0, 0, 4324, 191, 4326, 4327,
	3521, 0, 1321, 0, 1624, 237, 0, 1084, 1084, 1084,
	0, 0, 0, 0, 3304, 0, 0, 1993, 230, 268,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4386, 0, 3313, 0, 0, 0,
	0, 0, 2879, 0, 190, 0, 0, 0, 0, 0,
	1530, 0, 1536, 0, 1542, 3304, 0, 0, 0, 0,
	4490, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 3320,
	0, 0, 1528, 4373, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 4188, 4188, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 3321, 0, 0, 0,
	0, 0, 0, 268, 268, 0, 0, 0, 0, 0,
	0, 3314, 0, 0, 0, 0, 0, 0, 0, 0,
	3320, 1632, 0, 1637, 0, 0, 0, 3763, 0, 0,
	0, 0, 3304, 1646, 0, 1651, 0, 0, 0, 0,
	2712, 0, 1528, 0, 0, 1528, 3521, 4557, 0, 0,
	0, 0, 0, 1832, 4386, 0, 0, 0, 0, 1832,
	0, 0, 3314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4188, 0, 0, 0, 0, 0,
	0, 4459, 0, 0, 0, 1849, 0, 0, 0, 4188,
	0, 0, 0, 0, 0, 0, 0, 3320, 0, 0,
	0, 0, 0, 1716, 0, 0, 1722, 0, 0, 0,
	0, 268, 0, 0, 1485, 3298, 3299, 0, 3316, 3317,
	3318, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 3314,
	4273, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 4188, 0, 268, 4188,
	0, 0, 1485, 3315, 0, 0, 0, 0, 0, 3460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	3313, 0, 0, 0, 0, 1528, 0, 1528, 0, 0,
	0, 0, 0, 0, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 0, 1849, 3315, 1796, 1797, 0, 1829, 1830,
	1831, 1840, 1841, 1842, 0, 1099, 0, 0, 0, 0,
	0, 0, 4669, 0, 0, 0, 0, 1873, 1827, 1099,
	0, 0, 0, 1886, 0, 1799, 0, 0, 4410, 0,
	0, 268, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 0, 1528, 0, 0,
	0, 1852, 0, 0, 0, 0, 2879, 0, 0, 0,
	1798, 0, 0, 0, 0, 0, 3304, 0, 0, 0,
	1818, 3315, 0, 0, 0, 0, 0, 268, 0, 1815,
	0, 0, 0, 3310, 3311, 3312, 0, 0, 0, 0,
	3309, 3307, 3308, 3300, 3301, 3302, 3303, 3305, 3306, 0,
	0, 0, 0, 0, 3763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 1335, 1335, 0, 0,
	0, 0, 0, 0, 1528, 0, 0, 0, 1945, 1945,
	1945, 3320, 0, 1335, 3310, 3311, 3312, 0, 0, 0,
	0, 3309, 3307, 3308, 3300, 3301, 3302, 3303, 3305, 3306,
	0, 0, 0, 0, 268, 0, 1821, 1822, 1823, 1824,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 0, 0, 3314, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4386, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 1847, 0, 0,
	0, 3310, 3311, 3312, 1826, 1828, 0, 0, 3309, 3307,
	3308, 3300, 3301, 3302, 3303, 3305, 3306, 0, 0, 0,
	0, 1843, 0, 1844, 0, 0, 2879, 0, 0, 0,
	1813, 1814, 0, 4188, 0, 4188, 0, 1849, 1528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 1819, 0, 0, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1528, 0,
	0, 0, 0, 0, 1528, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 1485, 0, 0, 1485, 3315, 0, 0, 0, 0,
	0, 0, 0, 1832, 3091, 0, 0, 1832, 0, 0,
	0, 0, 0, 2879, 0, 0, 0, 1849, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 3091,
	1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832,
	1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832,
	1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832,
	1832, 1832, 1832, 1832, 1832, 1832, 0, 0, 0, 0,
	1485, 1832, 1825, 1832, 1832, 1832, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 2712, 2712, 1485, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3310, 3311, 3312, 1796, 1797,
	0, 0, 3309, 3307, 3308, 3300, 3301, 3302, 3303, 3305,
	3306, 1832, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 1832, 0, 0, 1832, 0, 0,
	1832, 0, 0, 0, 1852, 0, 1832, 1832, 1832, 1832,
	1832, 1832, 1832, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 1817, 1839, 1816,
	1812, 0, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 3319, 0, 2712, 2712, 2712,
	2712, 0, 0, 0, 1832, 0, 1832, 0, 0, 0,
	0, 1832, 2382, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 2407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2445, 0, 2449, 0, 0, 0, 1826, 1828, 1169,
	2463, 0, 0, 0, 0, 0, 0, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 0, 2513, 0, 2515, 2516, 2517, 2518,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 2683, 2684, 2685, 2686, 2679, 2680, 2681, 2682, 0,
	0, 0, 2542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 2593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2623, 2626, 2629, 2632, 0, 0,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 2704, 0,
	2716, 2718, 2723, 2659, 2660, 2661, 2662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 2671, 2672, 2673, 2674,
	2667, 2668, 2669, 2670, 2675, 2676, 2677, 2678, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 743, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 1832, 0,
	1832, 0, 0, 0, 0, 726, 0, 0, 0, 0,
	727, 0, 0, 0, 0, 0, 0, 0, 1260, 0,
	0, 0, 0, 2655, 2656, 2657, 2658, 2663, 2664, 2665,
	2666, 0, 0, 1122, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 1485, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 0, 109, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 1800, 1801,
	1802, 1803, 1805, 1806, 0, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	733, 0, 0, 734, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 1832, 0, 2712, 2712,
	758, 1485, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3319, 3319, 0, 0, 1832, 1832, 0, 0,
	0, 0, 0, 1059, 0, 748, 1832, 0, 0, 0,
	0, 0, 0, 0, 1079, 0, 0, 0, 0, 0,
	1832, 0, 0, 3019, 3020, 0, 3022, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1243, 0, 745, 0, 0, 0, 2712, 2712,
	2712, 2712, 2712, 2712, 2712, 2712, 2712, 2712, 2712, 2712,
	2712, 2712, 2712, 2712, 2712, 2712, 2712, 2712, 0, 2712,
	3319, 3319, 3319, 3319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 1797, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 755, 0, 736, 0, 1485, 0,
	1827, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3152, 0, 0, 0, 756, 0, 737, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 1485,
	1796, 1797, 1798, 1829, 1830, 1831, 1840, 1841, 1842, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 1833, 1827, 1485, 0, 0, 757, 0, 0,
	1799, 0, 0, 0, 0, 738, 0, 0, 0, 1846,
	753, 754, 751, 0, 0, 0, 0, 0, 746, 1853,
	1854, 739, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 1832, 0, 0,
	0, 1099, 0, 0, 0, 1818, 0, 3719, 0, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 1485, 740, 0, 747, 0, 0, 1821, 1822,
	1823, 1824, 0, 0, 741, 3207, 3208, 0, 1804, 0,
	0, 3214, 0, 0, 0, 0, 0, 0, 742, 0,
	0, 0, 0, 750, 0, 0, 0, 0, 0, 0,
	3228, 3229, 0, 0, 0, 0, 2593, 759, 0, 0,
	0, 0, 1260, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 1485, 0, 1826, 1828, 0, 0,
	0, 1821, 1822, 1823, 1824, 0, 0, 0, 0, 0,
	0, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3238, 1813, 1814, 0, 0, 0, 0, 1260, 0,
	0, 0, 1260, 0, 0, 0, 0, 3252, 0, 1260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 1847, 0, 3264, 1819, 0, 0, 0, 1826,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 0, 0, 1843, 0, 1844, 0,
	0, 0, 0, 0, 0, 1813, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1260,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1260,
	0, 0, 0, 0, 0, 0, 1260, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1260, 0, 0, 0, 1832, 1832, 0, 0, 1832, 3319,
	3319, 1832, 0, 0, 0, 1832, 2723, 2723, 2723, 0,
	0, 0, 1832, 1845, 0, 0, 0, 0, 0, 0,
	0, 1945, 1099, 1099, 0, 1832, 0, 0, 0, 3357,
	0, 1834, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 1260, 1249, 1832, 1832,
	1832, 1832, 1832, 0, 0, 0, 0, 1820, 1832, 0,
	1832, 0, 0, 3319, 3319, 3319, 3319, 3319, 3319, 3319,
	3319, 3319, 3319, 3319, 3319, 3319, 3319, 3319, 3319, 3319,
	3319, 3319, 3319, 0, 0, 0, 3319, 0, 109, 1832,
	1832, 0, 0, 263, 263, 693, 0, 1825, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 0, 1838, 1084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 1832,
	109, 0, 109, 0, 0, 0, 0, 0, 1851, 0,
	0, 3479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802,
	1803, 1805, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1079, 109, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 109, 0, 109, 0, 0, 0, 0, 0, 0,
	1810, 1811, 1817, 1839, 1816, 1812, 0, 1809, 1807, 1808,
	1800, 1801, 1802, 1803, 1805, 1806, 0, 0, 0, 0,
	3273, 0, 0, 0, 3274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 1260, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 1832,
	2028, 0, 0, 1832, 1832, 0, 0, 1832, 1832, 0,
	0, 0, 1832, 0, 0, 0, 1832, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 1260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2712, 0, 1872, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2463, 0, 0, 0,
	0, 0, 3716, 3717, 0, 0, 3720, 0, 0, 0,
	3723, 0, 0, 0, 0, 0, 0, 0, 0, 3727,
	0, 0, 0, 0, 0, 0, 0, 0, 3734, 0,
	0, 0, 0, 3357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3770, 3771,
	0, 3772, 3773, 3774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1965, 3780,
	1968, 0, 109, 3782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1260,
	1260, 0, 0, 0, 0, 0, 0, 0, 0, 1260,
	0, 0, 0, 0, 0, 0, 3811, 3812, 0, 1832,
	1832, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 1832, 3319, 2712, 3823, 0, 0, 0, 0, 1832,
	0, 0, 1832, 0, 0, 0, 0, 1796, 1797, 3832,
	1829, 1830, 1831, 1840, 1841, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	1827, 0, 3319, 2712, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 1832, 2712, 0,
	0, 0, 0, 1852, 1260, 1832, 1260, 0, 1260, 0,
	0, 0, 1798, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 1260, 1260, 0, 0, 0, 3880,
	0, 1815, 0, 0, 0, 1260, 0, 0, 0, 0,
	0, 0, 743, 0, 0, 0, 0, 1260, 3891, 1260,
	1260, 1260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3920, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1307, 0, 1307, 1307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 1821, 1822,
	1823, 1824, 0, 0, 0, 0, 0, 729, 1804, 3319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 730, 0,
	1832, 3319, 0, 0, 1832, 1397, 0, 0, 0, 0,
	0, 1502, 0, 0, 0, 0, 1837, 0, 0, 1847,
	749, 0, 0, 3319, 0, 0, 1826, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 2028, 2028, 1260, 0,
	0, 731, 0, 1843, 0, 1844, 0, 0, 0, 0,
	0, 0, 1813, 1814, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 732, 0, 0, 0, 0,
	1835, 0, 0, 0, 0, 1945, 0, 0, 0, 0,
	0, 0, 0, 0, 4031, 1819, 0, 733, 0, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 1631, 758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1079, 0,
	1079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 1260, 748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 4080, 4081, 0, 0, 0,
	0, 4085, 4086, 0, 1796, 1797, 4089, 4090, 0, 0,
	0, 0, 1832, 0, 4094, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 1260, 4098, 0, 1827, 0, 0,
	0, 1260, 0, 0, 1799, 1832, 1743, 0, 109, 0,
	1260, 4103, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1260, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 1820, 0, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 736, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1059, 0, 0, 1059, 1059, 0, 0, 0,
	0, 0, 756, 0, 737, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1260, 1260,
	0, 0, 0, 0, 757, 1821, 1822, 1823, 1824, 0,
	1832, 2531, 738, 0, 1832, 1804, 0, 753, 754, 751,
	0, 0, 0, 0, 0, 746, 0, 0, 739, 0,
	0, 1079, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 1872, 1260, 0, 0, 1872, 0, 1810, 1811, 1817,
	1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802,
	1803, 1805, 1806, 1826, 1828, 0, 0, 2589, 0, 0,
	740, 2590, 747, 0, 0, 0, 2028, 0, 0, 0,
	0, 741, 0, 0, 0, 0, 0, 0, 0, 1813,
	1814, 0, 0, 0, 0, 742, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 759, 0, 0, 0, 1243, 1260,
	0, 0, 1819, 0, 0, 744, 0, 0, 1983, 0,
	0, 0, 0, 0, 1968, 1260, 0, 0, 0, 0,
	0, 0, 0, 0, 1994, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1260, 0, 1307, 0, 0, 0,
	0, 0, 0, 1502, 0, 0, 1849, 0, 0, 4341,
	4342, 4343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1260, 0, 0, 0, 0,
	0, 0, 2463, 0, 0, 4352, 4353, 0, 0, 1260,
	0, 1260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4361, 4364, 0, 1260, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4411, 0, 0, 0, 0, 0,
	0, 0, 0, 4419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4427, 0, 0,
	1084, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4436, 1133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 267, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 109, 0, 109, 0, 0, 0, 1816, 1812,
	826, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 0, 0, 0,
	0, 0, 0, 2264, 0, 0, 0, 2271, 0, 109,
	0, 0, 109, 0, 0, 0, 0, 0, 109, 2284,
	0, 0, 0, 0, 0, 0, 1796, 1797, 0, 1829,
	1830, 1831, 1840, 1841, 1842, 2296, 0, 2296, 0, 0,
	0, 0, 0, 2303, 0, 0, 0, 0, 1833, 1827,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	4562, 0, 0, 0, 4566, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 2271, 0, 0, 2330, 0, 0,
	0, 1798, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 2350, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2366, 0, 2368, 0, 2370, 0, 2372, 0,
	2373, 0, 0, 0, 1256, 0, 0, 0, 0, 0,
	0, 1084, 1084, 0, 0, 0, 0, 0, 0, 0,
	0, 4623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2400, 2401, 2402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 1822, 1823,
	1824, 0, 0, 0, 0, 1260, 1260, 1804, 0, 0,
	0, 0, 0, 0, 0, 2463, 0, 0, 0, 0,
	0, 1260, 0, 0, 4364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2531, 0, 0, 1260,
	0, 0, 0, 0, 0, 1837, 0, 0, 1847, 0,
	0, 1260, 0, 0, 1260, 1826, 1828, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1084, 0,
	0, 0, 1843, 0, 1844, 2028, 0, 0, 0, 1260,
	0, 1813, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1260, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4744, 4744,
	4744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1260, 0, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 4767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	1260, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1260, 0, 1260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4744, 0,
	0, 0, 2780, 0, 0, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1260, 0, 0,
	0, 1260, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1243,
	0, 0, 0, 0, 0, 0, 1820, 1260, 0, 0,
	0, 0, 0, 0, 0, 1243, 0, 0, 0, 0,
	0, 1260, 0, 1260, 0, 0, 0, 1260, 0, 0,
	0, 0, 0, 1838, 0, 1260, 0, 0, 0, 0,
	0, 0, 0, 0, 2828, 0, 1260, 1307, 0, 0,
	0, 1307, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 1260, 0, 0, 1851, 0, 0, 0, 0, 0,
	2284, 0, 0, 0, 0, 0, 0, 0, 1260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4744,
	4902, 0, 0, 0, 0, 0, 0, 0, 4906, 0,
	0, 0, 0, 1260, 1260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1260, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 1817, 1839,
	1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802, 1803,
	1805, 1806, 109, 109, 0, 109, 109, 109, 0, 0,
	4108, 0, 0, 1260, 0, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	267, 0, 267, 267, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 109, 0, 109, 109, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 267, 267, 0, 2271, 267,
	267, 0, 1260, 0, 0, 0, 0, 2284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 826, 1260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 2028,
	3124, 0, 0, 0, 0, 0, 0, 267, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3135,
	0, 3138, 1243, 0, 0, 1079, 0, 0, 0, 0,
	0, 2028, 0, 267, 267, 0, 0, 0, 0, 109,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1260, 1260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3168, 1502, 3170, 1502, 0, 0, 0, 0,
	0, 3176, 0, 1260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 1797, 0, 1829, 1830, 1831,
	1840, 1841, 1842, 0, 0, 1307, 0, 0, 0, 0,
	0, 0, 0, 3204, 267, 0, 1833, 1827, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1260, 0,
	0, 1260, 0, 0, 0, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 1822, 1823, 1824, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 2028, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1243, 1243, 0, 0, 0, 0, 0, 0,
	0, 0, 1260, 1837, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 1826, 1828, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1260, 1260, 1260,
	1843, 0, 1844, 0, 0, 0, 0, 0, 0, 1813,
	1814, 0, 0, 0, 1260, 1260, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 0, 0,
	1967, 0, 1256, 1260, 0, 0, 267, 0, 0, 1260,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 1967, 267, 0, 0, 0, 0, 0,
	826, 0, 0, 0, 0, 1260, 0, 826, 0, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1307,
	0, 0, 0, 1502, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 1260, 0, 0, 0, 0,
	0, 0, 0, 1260, 3448, 0, 0, 1260, 0, 1260,
	0, 0, 0, 0, 1820, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1260, 1260, 0,
	0, 0, 0, 0, 109, 0, 0, 1260, 0, 0,
	0, 1838, 0, 0, 0, 3498, 3500, 1796, 1797, 2284,
	1829, 1830, 1831, 1840, 1841, 1842, 0, 0, 0, 0,
	1243, 0, 1260, 0, 1260, 0, 0, 0, 0, 0,
	1827, 0, 1851, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1260, 0, 1260,
	0, 0, 1260, 1852, 0, 0, 0, 0, 109, 0,
	0, 0, 1798, 1260, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 267, 0, 0, 0, 826, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 1260, 1260, 1810, 1811, 1817, 1839, 1816, 1812,
	0, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806,
	0, 3598, 1260, 0, 0, 3602, 0, 0, 3732, 0,
	0, 267, 0, 0, 1260, 267, 0, 0, 0, 1260,
	0, 267, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 1822,
	1823, 1824, 0, 267, 1260, 267, 0, 0, 1804, 0,
	0, 267, 0, 0, 0, 0, 1260, 1260, 1260, 1260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3655,
	1260, 0, 0, 109, 0, 0, 0, 0, 0, 1243,
	0, 0, 0, 0, 0, 0, 1837, 1243, 0, 1847,
	0, 0, 267, 0, 0, 267, 1826, 1828, 0, 0,
	1260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 2028, 1813, 1814, 0, 0, 0, 0, 0, 826,
	267, 0, 267, 3701, 267, 1502, 267, 0, 267, 0,
	1835, 1260, 0, 1260, 0, 0, 0, 0, 0, 0,
	0, 0, 1146, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1260, 0, 0, 0,
	0, 3714, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 267, 267, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 269,
	269, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 1849,
	0, 0, 0, 0, 1260, 0, 0, 0, 0, 0,
	0, 1260, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 1260, 1260, 269, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1260, 0, 0, 1260,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1260, 1260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1256, 1260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 1260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 1817,
	1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802,
	1803, 1805, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 1260,
	0, 0, 1260, 0, 0, 0, 1260, 0, 0, 0,
	0, 0, 267, 0, 0, 267, 1260, 1260, 0, 267,
	0, 267, 0, 0, 0, 0, 0, 0, 267, 267,
	0, 0, 0, 1260, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 2284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2284, 0, 0, 1796, 1797, 0,
	0, 0, 0, 2531, 3995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2284,
	1827, 0, 0, 0, 4013, 0, 267, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 1797,
	0, 1829, 1830, 1831, 1840, 1841, 1842, 826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1827, 0, 0, 0, 0, 0, 3213, 1799, 0,
	0, 0, 0, 0, 0, 0, 267, 1846, 826, 0,
	0, 0, 0, 0, 0, 267, 109, 0, 1821, 1822,
	1823, 1824, 0, 0, 1852, 0, 0, 0, 1804, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 1826, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 267,
	0, 0, 0, 0, 0, 0, 1260, 0, 1260, 0,
	267, 0, 1813, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	1822, 1823, 1824, 0, 0, 1819, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 267, 267, 267, 0, 0, 0, 0, 0, 267,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 1837, 109, 0,
	1847, 0, 4207, 0, 0, 0, 0, 1826, 1828, 0,
	0, 0, 0, 267, 0, 0, 0, 269, 2284, 269,
	269, 267, 0, 269, 1843, 1344, 1844, 0, 0, 1849,
	0, 0, 0, 1813, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	269, 1344, 269, 269, 0, 1344, 269, 269, 0, 0,
	0, 0, 1344, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 2284, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 4295, 0, 0, 0, 1820, 0, 0,
	0, 1845, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 1344, 0, 269, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 1851, 0, 0, 0, 1344,
	269, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	1796, 1797, 0, 0, 0, 1838, 1840, 1841, 1842, 0,
	0, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802,
	1803, 1805, 1806, 1827, 4396, 0, 0, 0, 0, 0,
	1799, 269, 0, 0, 0, 0, 1851, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1256, 0, 0, 0, 269, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 1256, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	2284, 0, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 1810, 1811,
	1817, 1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801,
	1802, 1803, 1805, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 3276, 0, 0, 0, 0, 267, 0, 0,
	0, 267, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 1822, 1823, 1824, 0, 0, 0, 0, 0,
	0, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 4531, 1502, 0, 0, 0, 0,
	0, 818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 1847, 0, 0, 0, 0, 818, 0, 1826,
	1828, 0, 0, 267, 267, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 1967, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1814, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 269,
	269, 269, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4628,
	826, 269, 0, 0, 0, 0, 0, 0, 269, 267,
	0, 0, 1849, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 4682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4721, 0,
	0, 267, 0, 267, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 1344, 1344, 269, 4787, 0, 0, 0, 0,
	1836, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 1816, 1812, 0, 1809, 1807, 1808,
	1800, 1801, 1802, 1803, 1805, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 269, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 1344,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1138, 1256, 1256, 0, 1344, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 269,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 1344, 1344, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 1796, 1797, 0,
	0, 0, 0, 0, 0, 0, 269, 269, 0, 269,
	0, 269, 0, 269, 0, 269, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 269, 269, 269,
	269, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	1797, 1344, 1829, 1830, 1831, 1840, 1841, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 1827, 0, 0, 0, 0, 3206, 267, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 1342,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 1822,
	1823, 1824, 0, 267, 0, 1852, 0, 0, 1804, 0,
	0, 0, 0, 0, 1798, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 267, 1815, 0, 1403, 0, 0, 0, 1403,
	0, 0, 267, 0, 1344, 0, 1342, 267, 0, 0,
	0, 0, 267, 0, 0, 0, 1826, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1256, 0, 0, 0, 0, 0, 0, 0,
	1342, 0, 1813, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1342, 0, 0, 0,
	1821, 1822, 1823, 1824, 1344, 1819, 0, 0, 0, 0,
	1804, 0, 0, 267, 0, 0, 1342, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 269, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 1837, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 1826, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 1844, 0, 1849,
	0, 0, 0, 0, 1813, 1814, 0, 0, 0, 0,
	0, 0, 0, 1342, 269, 0, 0, 0, 0, 0,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 269, 0, 0, 0, 269, 1819, 269, 0,
	0, 0, 0, 0, 0, 269, 269, 0, 0, 0,
	0, 1344, 1344, 0, 1825, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1256, 0, 0, 0, 0, 0, 1820, 0, 1256,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 0, 0, 1344, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 1967, 269,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 269, 1344, 0, 0, 0, 267, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802,
	1803, 1805, 1806, 269, 0, 269, 0, 1344, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 1851, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 1344, 0, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 269, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 1403, 0,
	0, 0, 0, 0, 269, 0, 269, 0, 0, 1836,
	0, 818, 0, 0, 0, 0, 0, 269, 818, 1810,
	1811, 1817, 1839, 1816, 1812, 0, 1809, 1807, 1808, 1800,
	1801, 1802, 1803, 1805, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 3275, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 269, 269,
	269, 0, 0, 0, 0, 0, 269, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1404, 0, 0, 0, 1404, 0, 1342, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 0, 0,
	269, 0, 267, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 0, 0,
	1343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 1797, 0, 1829, 1830, 1831, 1840, 1841,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1827, 0, 0, 0, 0,
	0, 0, 1799, 1967, 1967, 0, 1342, 1342, 0, 0,
	1343, 1846, 0, 0, 0, 0, 1403, 0, 0, 0,
	0, 0, 267, 267, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 0,
	0, 1342, 0, 1342, 0, 1342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 1342, 1342, 1821, 1822, 1823, 1824, 0, 0, 1344,
	0, 0, 1342, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1342, 0, 1342, 1342, 1342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 1967, 0, 267, 1967, 0,
	818, 1837, 0, 0, 1847, 0, 0, 1344, 0, 0,
	0, 1826, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	1844, 0, 1344, 0, 0, 0, 0, 1813, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 269, 1835, 0, 0, 269, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	267, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1404, 0, 0, 0, 0,
	269, 269, 0, 1344, 269, 0, 267, 0, 0, 0,
	0, 269, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 269, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 1344, 0, 0, 0, 1403, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	1344, 0, 1820, 0, 0, 1343, 0, 0, 0, 269,
	0, 0, 0, 0, 1344, 0, 1344, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 269, 1344, 1838,
	0, 0, 1404, 0, 0, 0, 269, 0, 0, 1344,
	269, 0, 0, 0, 0, 0, 0, 0, 1403, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	1851, 269, 0, 0, 1796, 1797, 0, 1829, 1830, 1831,
	1840, 1841, 1842, 0, 1403, 0, 0, 0, 0, 0,
	0, 0, 1967, 0, 1967, 0, 1833, 1827, 0, 0,
	0, 0, 0, 0, 1799, 0, 1344, 1344, 0, 0,
	0, 0, 0, 1846, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 1344, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 1810, 1811, 1817, 1839, 1816, 1812, 1815, 1809,
	1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806, 0, 0,
	0, 0, 0, 1343, 1343, 0, 1344, 0, 269, 1344,
	269, 0, 0, 1404, 0, 1342, 1342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1403,
	0, 0, 0, 0, 0, 1821, 1822, 1823, 1824, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 1343, 0,
	1343, 0, 1343, 1837, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 1826, 1828, 0, 0, 0, 1343, 1343,
	0, 0, 0, 0, 0, 0, 1403, 0, 0, 1343,
	1843, 0, 1844, 0, 0, 0, 0, 0, 0, 1813,
	1814, 1343, 1342, 1343, 1343, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 818,
	0, 1342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 1342, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 1342, 0, 1342, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 0, 0, 1344, 0, 0, 0, 0, 1344,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 1404, 0, 0, 0, 269,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 1836, 1344, 0, 0, 0, 0,
	0, 1404, 0, 0, 1810, 1811, 1817, 1839, 1816, 1812,
	0, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806,
	1344, 1344, 1344, 0, 0, 0, 0, 0, 3272, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 1344, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	269, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1343, 1343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 1797, 0, 1829, 1830, 1831, 1840, 1841, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1827, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 1403, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 1344, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 1404, 0, 1798, 1403, 0, 0, 0,
	1344, 1344, 0, 0, 0, 1818, 0, 0, 0, 1343,
	1344, 1403, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1342, 0, 0, 0, 0, 269, 1343, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 1344, 269, 0, 1344, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 1343,
	0, 1821, 1822, 1823, 1824, 0, 269, 0, 1342, 0,
	0, 1804, 0, 1343, 0, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1343, 0, 0, 0, 0, 1344, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 0, 1837,
	0, 0, 1847, 0, 0, 1344, 0, 0, 269, 1826,
	1828, 0, 0, 0, 0, 0, 0, 1344, 269, 1342,
	0, 1342, 1344, 0, 0, 0, 1843, 0, 1844, 0,
	0, 0, 0, 0, 0, 1813, 1814, 0, 0, 0,
	0, 0, 0, 1403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 1342, 0, 0, 0, 1342, 1344,
	1344, 1344, 1344, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1342, 0,
	1342, 0, 0, 1344, 1403, 0, 0, 0, 0, 0,
	0, 818, 1342, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 1342, 0,
	0, 0, 1849, 0, 1344, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	1342, 1342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 0, 0, 1344, 269, 0, 1838, 0, 0,
	1403, 0, 0, 1403, 1344, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	269, 0, 0, 0, 0, 0, 1403, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1811, 1817, 1839, 1816, 1812, 0, 1809, 1807, 1808,
	1800, 1801, 1802, 1803, 1805, 1806, 0, 0, 0, 0,
	1404, 0, 0, 0, 3271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 0, 844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 846, 1404, 0, 0, 0, 847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 848, 0, 865, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	1344, 0, 0, 0, 0, 1343, 0, 0, 0, 0,
	0, 0, 0, 849, 0, 0, 1344, 0, 850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 1343, 0, 0, 851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 872, 0, 0, 0, 0, 1343, 0, 1343, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 845, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 0, 0, 0, 1343, 0, 852, 0, 0,
	853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 269, 0, 0, 0, 758, 0, 0,
	0, 1343, 0, 0, 0, 1342, 0, 0, 1342, 0,
	0, 0, 0, 1342, 0, 1343, 0, 1343, 0, 0,
	0, 1404, 0, 0, 0, 0, 0, 0, 0, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	269, 875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1342, 1342, 1342, 1343, 1343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1342, 1342, 1342, 0, 0, 0, 0, 0, 0,
	0, 0, 1343, 0, 0, 0, 0, 0, 0, 0,
	1342, 0, 0, 0, 0, 0, 1403, 0, 0, 0,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 856, 0, 0, 0, 0, 0, 0,
	0, 0, 1403, 0, 0, 0, 0, 1404, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 857, 0, 0, 1796, 1797, 0,
	1829, 1830, 1831, 1840, 1841, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	1827, 0, 866, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 757, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 843, 0, 867,
	0, 0, 0, 1852, 0, 0, 1404, 0, 858, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 1404, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1403, 0, 1403, 0, 0, 0,
	859, 0, 0, 0, 860, 879, 0, 878, 0, 0,
	0, 861, 0, 0, 1342, 1342, 0, 0, 0, 0,
	0, 0, 0, 0, 1403, 862, 0, 0, 0, 0,
	871, 0, 0, 0, 0, 0, 880, 0, 877, 0,
	0, 0, 0, 0, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 1822,
	1823, 1824, 0, 0, 0, 0, 0, 0, 1804, 0,
	0, 0, 0, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1403, 0, 1342, 0, 0, 1342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1403, 0, 0, 0, 0, 0, 1837, 1404, 0, 1847,
	0, 0, 0, 0, 0, 0, 1826, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 1844, 0, 0, 0, 1342,
	1342, 0, 1813, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1403, 0, 0, 0, 1819, 1342, 0, 0, 0,
	1796, 1797, 0, 1829, 1830, 1831, 1840, 1841, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1827, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 1342, 1342, 1342, 1342, 0, 0, 1846,
	1845, 0, 0, 0, 0, 0, 0, 1403, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 1834, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 1818, 0, 1403, 0, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 1343, 0, 0, 1343, 0, 0, 0, 0,
	1343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1403, 0,
	1342, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1403, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 1821, 1822, 1823, 1824, 0, 0, 0, 0, 0,
	0, 1804, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 1343, 1343, 1343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1343, 1343,
	1343, 0, 0, 0, 0, 1851, 0, 0, 0, 1837,
	0, 1403, 1847, 0, 0, 0, 0, 1343, 1342, 1826,
	1828, 0, 0, 1404, 0, 0, 0, 0, 1342, 1342,
	0, 0, 0, 0, 0, 0, 1843, 0, 1844, 0,
	0, 0, 0, 0, 0, 1813, 1814, 0, 0, 1404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1403, 0, 0, 1342, 1836, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 1817,
	1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802,
	1803, 1805, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 3270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1404, 0, 1404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 1343, 0, 0, 0, 0, 0, 0, 0,
	0, 1404, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 1404, 0, 1343, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 1404, 0, 0,
	0, 0, 0, 1342, 1342, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1811, 1817, 1839, 1816, 1812, 0, 1809, 1807, 1808,
	1800, 1801, 1802, 1803, 1805, 1806, 0, 0, 0, 0,
	1343, 1343, 1343, 1343, 2590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1404, 0, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 0, 0, 0, 0, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 1343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1401, 0, 0,
	1343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1343, 1343, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 1406, 284, 285, 1407, 1408, 1409, 1343, 1410, 639,
	1411, 1412, 1413, 1414, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	1415, 644, 296, 297, 298, 299, 300, 301, 1416, 1417,
	0, 302, 645, 646, 647, 1418, 303, 304, 648, 1419,
	1345, 1420, 305, 306, 307, 308, 309, 310, 311, 0,
	1421, 313, 314, 315, 312, 316, 1422, 317, 0, 318,
	319, 320, 321, 322, 323, 1423, 324, 325, 326, 1201,
	327, 328, 329, 1424, 1425, 1427, 1426, 1428, 1429, 1430,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	1431, 340, 336, 338, 1432, 341, 339, 342, 1433, 343,
	344, 345, 1434, 1435, 346, 347, 348, 1436, 349, 350,
	351, 1437, 352, 353, 354, 1438, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 1439, 274, 1440, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 1441, 373, 374,
	1442, 1443, 1202, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 1444, 387, 657,
	1445, 658, 388, 1446, 389, 390, 391, 392, 393, 659,
	660, 661, 477, 1204, 394, 395, 1447, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	1448, 1203, 404, 662, 663, 1449, 664, 1450, 406, 407,
	1205, 665, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 1451, 418, 420,
	419, 1452, 421, 666, 1208, 422, 423, 1209, 1453, 424,
	425, 426, 427, 428, 429, 432, 1454, 1455, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 1456, 276, 1212, 474, 475,
	1457, 667, 476, 668, 478, 479, 1458, 0, 480, 0,
	1459, 1460, 482, 483, 484, 1461, 1462, 485, 486, 669,
	1213, 487, 1214, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 1463, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	508, 509, 1464, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 1465,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 1466, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 1467, 564, 565,
	563, 566, 567, 568, 1468, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 1469, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 1470,
	596, 597, 0, 593, 584, 1471, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 1472, 606, 680, 681, 682,
	683, 1473, 615, 1474, 607, 608, 609, 684, 610, 685,
	1475, 611, 612, 613, 614, 0, 616, 617, 1476, 1477,
	618, 619, 620, 622, 623, 621, 624, 1478, 625, 1479,
	0, 626, 627, 628, 686, 687, 688, 1480, 630, 629,
	631, 689, 632, 633, 1481, 1482, 1483, 1484, 634, 635,
	690, 636, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1401, 0, 0, 0, 0, 0, 0,
	0, 2758, 0, 0, 0, 0, 0, 0, 0, 2759,
	277, 279, 278, 280, 281, 282, 283, 1406, 284, 285,
	1407, 1408, 1409, 0, 1410, 639, 1411, 1412, 1413, 1414,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	641, 0, 294, 642, 295, 643, 1415, 644, 296, 297,
	298, 299, 300, 301, 1416, 1417, 0, 302, 645, 646,
	647, 1418, 303, 304, 648, 1419, 1345, 1420, 305, 306,
	307, 308, 309, 310, 311, 0, 1421, 313, 314, 315,
	312, 316, 1422, 317, 0, 318, 319, 320, 321, 322,
	323, 1423, 324, 325, 326, 1201, 327, 328, 329, 1424,
	1425, 1427, 1426, 1428, 1429, 1430, 330, 331, 332, 333,
	334, 0, 335, 337, 649, 650, 1431, 340, 336, 338,
	1432, 341, 339, 342, 1433, 343, 344, 345, 1434, 1435,
	346, 347, 348, 1436, 349, 350, 351, 1437, 352, 353,
	354, 1438, 355, 356, 651, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 652, 653, 368, 1439, 274,
	1440, 0, 0, 0, 0, 369, 370, 371, 654, 0,
	0, 0, 372, 1441, 373, 374, 1442, 1443, 1202, 375,
	376, 377, 655, 656, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 1444, 387, 657, 1445, 658, 388, 1446,
	389, 390, 391, 392, 393, 659, 660, 661, 477, 1204,
	394, 395, 1447, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 1448, 1203, 404, 662,
	663, 1449, 664, 1450, 406, 407, 1205, 665, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 1451, 418, 420, 419, 1452, 421, 666,
	1208, 422, 423, 1209, 1453, 424, 425, 426, 427, 428,
	429, 432, 1454, 1455, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 1456, 276, 1212, 474, 475, 1457, 667, 476, 668,
	478, 479, 1458, 0, 480, 0, 1459, 1460, 482, 483,
	484, 1461, 1462, 485, 486, 669, 1213, 487, 1214, 670,
	488, 489, 481, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 1463, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 673, 507, 674, 508, 509, 1464, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 675,
	519, 520, 522, 521, 523, 1465, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 1466, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 676, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 1467, 564, 565, 563, 566, 567, 568,
	1468, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 677, 0, 580, 1469, 581,
	582, 583, 585, 554, 586, 591, 592, 678, 587, 588,
	589, 590, 679, 594, 595, 1470, 596, 597, 0, 593,
	584, 1471, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 1472, 606, 680, 681, 682, 683, 1473, 615, 1474,
	607, 608, 609, 684, 610, 685, 1475, 611, 612, 613,
	614, 0, 616, 617, 1476, 1477, 618, 619, 620, 622,
	623, 621, 624, 1478, 625, 1479, 0, 626, 627, 628,
	686, 687, 688, 1480, 630, 629, 631, 689, 632, 633,
	1481, 1482, 1483, 1484, 634, 635, 690, 636, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1401, 0, 0,
	0, 0, 3741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3743, 277, 279, 278, 280, 281, 282,
	283, 1406, 284, 285, 1407, 1408, 1409, 0, 1410, 639,
	1411, 1412, 1413, 1414, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	1415, 644, 296, 297, 298, 299, 300, 301, 1416, 1417,
	0, 302, 645, 646, 647, 1418, 303, 304, 648, 1419,
	1345, 1420, 305, 306, 307, 308, 309, 310, 311, 0,
	1421, 313, 314, 315, 312, 316, 1422, 317, 0, 318,
	319, 320, 321, 322, 323, 1423, 324, 325, 326, 1201,
	327, 328, 329, 1424, 1425, 1427, 1426, 1428, 1429, 1430,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	1431, 340, 336, 338, 1432, 341, 339, 342, 1433, 343,
	344, 345, 1434, 1435, 346, 347, 348, 1436, 349, 350,
	351, 1437, 352, 353, 354, 1438, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 1439, 274, 1440, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 1441, 373, 374,
	1442, 1443, 1202, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 1444, 387, 657,
	1445, 658, 388, 1446, 389, 390, 391, 392, 393, 659,
	660, 661, 477, 1204, 394, 395, 1447, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	1448, 1203, 404, 662, 663, 1449, 664, 1450, 406, 407,
	1205, 665, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 1451, 418, 420,
	419, 1452, 421, 666, 1208, 422, 423, 1209, 1453, 424,
	425, 426, 427, 428, 429, 432, 1454, 1455, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 1456, 276, 1212, 474, 475,
	1457, 667, 476, 668, 478, 479, 1458, 0, 480, 0,
	1459, 1460, 482, 483, 484, 1461, 1462, 485, 486, 669,
	1213, 487, 1214, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 1463, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	508, 509, 1464, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 1465,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 1466, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 1467, 564, 565,
	563, 566, 567, 568, 1468, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 1469, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 1470,
	596, 597, 0, 593, 584, 1471, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 1472, 606, 680, 681, 682,
	683, 1473, 615, 1474, 607, 608, 609, 684, 610, 685,
	1475, 611, 612, 613, 614, 0, 616, 617, 1476, 1477,
	618, 619, 620, 622, 623, 621, 624, 1478, 625, 1479,
	0, 626, 627, 628, 686, 687, 688, 1480, 630, 629,
	631, 689, 632, 633, 1481, 1482, 1483, 1484, 634, 635,
	690, 636, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4136, 277, 279, 278, 280, 281, 282, 283, 1406,
	284, 285, 1407, 1408, 1409, 0, 1410, 639, 1411, 1412,
	1413, 1414, 286, 287, 1200, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 1415, 644,
	296, 297, 298, 299, 300, 301, 1416, 1417, 0, 302,
	645, 646, 647, 1418, 303, 304, 648, 1419, 1345, 1420,
	305, 306, 307, 308, 309, 310, 311, 0, 1421, 313,
	314, 315, 312, 316, 1422, 317, 0, 318, 319, 320,
	321, 322, 323, 1423, 324, 325, 326, 1201, 327, 328,
	329, 1424, 1425, 1427, 1426, 1428, 1429, 1430, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 1431, 340,
	336, 338, 1432, 341, 339, 342, 1433, 343, 344, 345,
	1434, 1435, 346, 347, 348, 1436, 349, 350, 351, 1437,
	352, 353, 354, 1438, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	1439, 274, 1440, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 1441, 373, 374, 1442, 1443,
	1202, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 1444, 387, 657, 1445, 658,
	388, 1446, 389, 390, 391, 392, 393, 659, 660, 661,
	477, 1204, 394, 395, 1447, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 1448, 1203,
	404, 662, 663, 1449, 664, 1450, 406, 407, 1205, 665,
	1206, 408, 409, 410, 1207, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 1451, 418, 420, 419, 1452,
	421, 666, 1208, 422, 423, 1209, 1453, 424, 425, 426,
	427, 428, 429, 432, 1454, 1455, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1210, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1211, 473, 461, 1456, 276, 1212, 474, 475, 1457, 667,
	476, 668, 478, 479, 1458, 0, 480, 0, 1459, 1460,
	482, 483, 484, 1461, 1462, 485, 486, 669, 1213, 487,
	1214, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 1463, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	1464, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 1465, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	1466, 539, 540, 541, 1215, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 1467, 564, 565, 563, 566,
	567, 568, 1468, 569, 570, 552, 553, 571, 572, 1216,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	1469, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 1470, 596, 597,
	0, 593, 584, 1471, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 1472, 606, 680, 681, 682, 683, 1473,
	615, 1474, 607, 608, 609, 684, 610, 685, 1475, 611,
	612, 613, 614, 0, 616, 617, 1476, 1477, 618, 619,
	620, 622, 623, 621, 624, 1478, 625, 1479, 0, 626,
	627, 628, 686, 687, 688, 1480, 630, 629, 631, 689,
	632, 633, 1481, 1482, 1483, 1484, 634, 635, 690, 636,
	637, 638, 0, 0, 0, 0, 0, 0, 1401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4347, 277, 279, 278, 280, 281,
	282, 283, 1406, 284, 285, 1407, 1408, 1409, 0, 1410,
	639, 1411, 1412, 1413, 1414, 286, 287, 1200, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 1415, 644, 296, 297, 298, 299, 300, 301, 1416,
	1417, 0, 302, 645, 646, 647, 1418, 303, 304, 648,
	1419, 1345, 1420, 305, 306, 307, 308, 309, 310, 311,
	0, 1421, 313, 314, 315, 312, 316, 1422, 317, 0,
	318, 319, 320, 321, 322, 323, 1423, 324, 325, 326,
	1201, 327, 328, 329, 1424, 1425, 1427, 1426, 1428, 1429,
	1430, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 1431, 340, 336, 338, 1432, 341, 339, 342, 1433,
	343, 344, 345, 1434, 1435, 346, 347, 348, 1436, 349,
	350, 351, 1437, 352, 353, 354, 1438, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 1439, 274, 1440, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 1441, 373,
	374, 1442, 1443, 1202, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 1444, 387,
	657, 1445, 658, 388, 1446, 389, 390, 391, 392, 393,
	659, 660, 661, 477, 1204, 394, 395, 1447, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 1448, 1203, 404, 662, 663, 1449, 664, 1450, 406,
	407, 1205, 665, 1206, 408, 409, 410, 1207, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 1451, 418,
	420, 419, 1452, 421, 666, 1208, 422, 423, 1209, 1453,
	424, 425, 426, 427, 428, 429, 432, 1454, 1455, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1210, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1211, 473, 461, 1456, 276, 1212, 474,
	475, 1457, 667, 476, 668, 478, 479, 1458, 0, 480,
	0, 1459, 1460, 482, 483, 484, 1461, 1462, 485, 486,
	669, 1213, 487, 1214, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 1463, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 1464, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	1465, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 1466, 539, 540, 541, 1215, 542, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 1467, 564,
	565, 563, 566, 567, 568, 1468, 569, 570, 552, 553,
	571, 572, 1216, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 1469, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	1470, 596, 597, 0, 593, 584, 1471, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 1472, 606, 680, 681,
	682, 683, 1473, 615, 1474, 607, 608, 609, 684, 610,
	685, 1475, 611, 612, 613, 614, 0, 616, 617, 1476,
	1477, 618, 619, 620, 622, 623, 621, 624, 1478, 625,
	1479, 0, 626, 627, 628, 686, 687, 688, 1480, 630,
	629, 631, 689, 632, 633, 1481, 1482, 1483, 1484, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 1401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4216, 277, 279,
	278, 280, 281, 282, 283, 1406, 284, 285, 1407, 1408,
	1409, 0, 1410, 639, 1411, 1412, 1413, 1414, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 1415, 644, 296, 297, 298, 299,
	300, 301, 1416, 1417, 0, 302, 645, 646, 647, 1418,
	303, 304, 648, 1419, 1345, 1420, 305, 306, 307, 308,
	309, 310, 311, 0, 1421, 313, 314, 315, 312, 316,
	1422, 317, 0, 318, 319, 320, 321, 322, 323, 1423,
	324, 325, 326, 1201, 327, 328, 329, 1424, 1425, 1427,
	1426, 1428, 1429, 1430, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 1431, 340, 336, 338, 1432, 341,
	339, 342, 1433, 343, 344, 345, 1434, 1435, 346, 347,
	348, 1436, 349, 350, 351, 1437, 352, 353, 354, 1438,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 1439, 274, 1440, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 1441, 373, 374, 1442, 1443, 1202, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 1444, 387, 657, 1445, 658, 388, 1446, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 1204, 394, 395,
	1447, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 1448, 1203, 404, 662, 663, 1449,
	664, 1450, 406, 407, 1205, 665, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 1451, 418, 420, 419, 1452, 421, 666, 1208, 422,
	423, 1209, 1453, 424, 425, 426, 427, 428, 429, 432,
	1454, 1455, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 1456,
	276, 1212, 474, 475, 1457, 667, 476, 668, 478, 479,
	1458, 0, 480, 0, 1459, 1460, 482, 483, 484, 1461,
	1462, 485, 486, 669, 1213, 487, 1214, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	1463, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 1464, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 1465, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 1466, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 1467, 564, 565, 563, 566, 567, 568, 1468, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 1469, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 1470, 596, 597, 0, 593, 584, 1471,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 1472,
	606, 680, 681, 682, 683, 1473, 615, 1474, 607, 608,
	609, 684, 610, 685, 1475, 611, 612, 613, 614, 0,
	616, 617, 1476, 1477, 618, 619, 620, 622, 623, 621,
	624, 1478, 625, 1479, 0, 626, 627, 628, 686, 687,
	688, 1480, 630, 629, 631, 689, 632, 633, 1481, 1482,
	1483, 1484, 634, 635, 690, 636, 637, 638, 0, 0,
	0, 0, 0, 0, 1401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4066, 277, 279, 278, 280, 281, 282, 283, 1406, 284,
	285, 1407, 1408, 1409, 0, 1410, 639, 1411, 1412, 1413,
	1414, 286, 287, 1200, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 1415, 644, 296,
	297, 298, 299, 300, 301, 1416, 1417, 0, 302, 645,
	646, 647, 1418, 303, 304, 648, 1419, 1345, 1420, 305,
	306, 307, 308, 309, 310, 311, 0, 1421, 313, 314,
	315, 312, 316, 1422, 317, 0, 318, 319, 320, 321,
	322, 323, 1423, 324, 325, 326, 1201, 327, 328, 329,
	1424, 1425, 1427, 1426, 1428, 1429, 1430, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 1431, 340, 336,
	338, 1432, 341, 339, 342, 1433, 343, 344, 345, 1434,
	1435, 346, 347, 348, 1436, 349, 350, 351, 1437, 352,
	353, 354, 1438, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 1439,
	274, 1440, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 1441, 373, 374, 1442, 1443, 1202,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 1444, 387, 657, 1445, 658, 388,
	1446, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	1204, 394, 395, 1447, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 1448, 1203, 404,
	662, 663, 1449, 664, 1450, 406, 407, 1205, 665, 1206,
	408, 409, 410, 1207, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 1451, 418, 420, 419, 1452, 421,
	666, 1208, 422, 423, 1209, 1453, 424, 425, 426, 427,
	428, 429, 432, 1454, 1455, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1210, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1211,
	473, 461, 1456, 276, 1212, 474, 475, 1457, 667, 476,
	668, 478, 479, 1458, 0, 480, 0, 1459, 1460, 482,
	483, 484, 1461, 1462, 485, 486, 669, 1213, 487, 1214,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 1463, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 1464,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 1465, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 1466,
	539, 540, 541, 1215, 542, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 1467, 564, 565, 563, 566, 567,
	568, 1468, 569, 570, 552, 553, 571, 572, 1216, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 1469,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 1470, 596, 597, 0,
	593, 584, 1471, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 1472, 606, 680, 681, 682, 683, 1473, 615,
	1474, 607, 608, 609, 684, 610, 685, 1475, 611, 612,
	613, 614, 0, 616, 617, 1476, 1477, 618, 619, 620,
	622, 623, 621, 624, 1478, 625, 1479, 0, 626, 627,
	628, 686, 687, 688, 1480, 630, 629, 631, 689, 632,
	633, 1481, 1482, 1483, 1484, 634, 635, 690, 636, 637,
	638, 0, 0, 0, 0, 0, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3759, 277, 279, 278, 280, 281, 282,
	283, 1406, 284, 285, 1407, 1408, 1409, 0, 1410, 639,
	1411, 1412, 1413, 1414, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	1415, 644, 296, 297, 298, 299, 300, 301, 1416, 1417,
	0, 302, 645, 646, 647, 1418, 303, 304, 648, 1419,
	1345, 1420, 305, 306, 307, 308, 309, 310, 311, 0,
	1421, 313, 314, 315, 312, 316, 1422, 317, 0, 318,
	319, 320, 321, 322, 323, 1423, 324, 325, 326, 1201,
	327, 328, 329, 1424, 1425, 1427, 1426, 1428, 1429, 1430,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	1431, 340, 336, 338, 1432, 341, 339, 342, 1433, 343,
	344, 345, 1434, 1435, 346, 347, 348, 1436, 349, 350,
	351, 1437, 352, 353, 354, 1438, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 1439, 274, 1440, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 1441, 373, 374,
	1442, 1443, 1202, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 1444, 387, 657,
	1445, 658, 388, 1446, 389, 390, 391, 392, 393, 659,
	660, 661, 477, 1204, 394, 395, 1447, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	1448, 1203, 404, 662, 663, 1449, 664, 1450, 406, 407,
	1205, 665, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 1451, 418, 420,
	419, 1452, 421, 666, 1208, 422, 423, 1209, 1453, 424,
	425, 426, 427, 428, 429, 432, 1454, 1455, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 1456, 276, 1212, 474, 475,
	1457, 667, 476, 668, 478, 479, 1458, 0, 480, 0,
	1459, 1460, 482, 483, 484, 1461, 1462, 485, 486, 669,
	1213, 487, 1214, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 1463, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	508, 509, 1464, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 1465,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 1466, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 1467, 564, 565,
	563, 566, 567, 568, 1468, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 1469, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 1470,
	596, 597, 0, 593, 584, 1471, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 1472, 606, 680, 681, 682,
	683, 1473, 615, 1474, 607, 608, 609, 684, 610, 685,
	1475, 611, 612, 613, 614, 0, 616, 617, 1476, 1477,
	618, 619, 620, 622, 623, 621, 624, 1478, 625, 1479,
	0, 626, 627, 628, 686, 687, 688, 1480, 630, 629,
	631, 689, 632, 633, 1481, 1482, 1483, 1484, 634, 635,
	690, 636, 637, 638, 0, 0, 0, 0, 0, 0,
	1401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3582, 277, 279, 278,
	280, 281, 282, 283, 1406, 284, 285, 1407, 1408, 1409,
	0, 1410, 639, 1411, 1412, 1413, 1414, 286, 287, 1200,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 1415, 644, 296, 297, 298, 299, 300,
	301, 1416, 1417, 0, 302, 645, 646, 647, 1418, 303,
	304, 648, 1419, 1345, 1420, 305, 306, 307, 308, 309,
	310, 311, 0, 1421, 313, 314, 315, 312, 316, 1422,
	317, 0, 318, 319, 320, 321, 322, 323, 1423, 324,
	325, 326, 1201, 327, 328, 329, 1424, 1425, 1427, 1426,
	1428, 1429, 1430, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 1431, 340, 336, 338, 1432, 341, 339,
	342, 1433, 343, 344, 345, 1434, 1435, 346, 347, 348,
	1436, 349, 350, 351, 1437, 352, 353, 354, 1438, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 1439, 274, 1440, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	1441, 373, 374, 1442, 1443, 1202, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	1444, 387, 657, 1445, 658, 388, 1446, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 1204, 394, 395, 1447,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 1448, 1203, 404, 662, 663, 1449, 664,
	1450, 406, 407, 1205, 665, 1206, 408, 409, 410, 1207,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	1451, 418, 420, 419, 1452, 421, 666, 1208, 422, 423,
	1209, 1453, 424, 425, 426, 427, 428, 429, 432, 1454,
	1455, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1210, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1211, 473, 461, 1456, 276,
	1212, 474, 475, 1457, 667, 476, 668, 478, 479, 1458,
	0, 480, 0, 1459, 1460, 482, 483, 484, 1461, 1462,
	485, 486, 669, 1213, 487, 1214, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 1463,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 1464, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 1465, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 1466, 539, 540, 541, 1215,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	1467, 564, 565, 563, 566, 567, 568, 1468, 569, 570,
	552, 553, 571, 572, 1216, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 1469, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 1470, 596, 597, 0, 593, 584, 1471, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 1472, 606,
	680, 681, 682, 683, 1473, 615, 1474, 607, 608, 609,
	684, 610, 685, 1475, 611, 612, 613, 614, 0, 616,
	617, 1476, 1477, 618, 619, 620, 622, 623, 621, 624,
	1478, 625, 1479, 0, 626, 627, 628, 686, 687, 688,
	1480, 630, 629, 631, 689, 632, 633, 1481, 1482, 1483,
	1484, 634, 635, 690, 636, 637, 638, 0, 0, 0,
	0, 0, 0, 1401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2613,
	277, 279, 278, 280, 281, 282, 283, 1406, 284, 285,
	1407, 1408, 1409, 0, 1410, 639, 1411, 1412, 1413, 1414,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	641, 0, 294, 642, 295, 643, 1415, 644, 296, 297,
	298, 299, 300, 301, 1416, 1417, 0, 302, 645, 646,
	647, 1418, 303, 304, 648, 1419, 1345, 1420, 305, 306,
	307, 308, 309, 310, 311, 0, 1421, 313, 314, 315,
	312, 316, 1422, 317, 0, 318, 319, 320, 321, 322,
	323, 1423, 324, 325, 326, 1201, 327, 328, 329, 1424,
	1425, 1427, 1426, 1428, 1429, 1430, 330, 331, 332, 333,
	334, 0, 335, 337, 649, 650, 1431, 340, 336, 338,
	1432, 341, 339, 342, 1433, 343, 344, 345, 1434, 1435,
	346, 347, 348, 1436, 349, 350, 351, 1437, 352, 353,
	354, 1438, 355, 356, 651, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 652, 653, 368, 1439, 274,
	1440, 0, 0, 0, 0, 369, 370, 371, 654, 0,
	0, 0, 372, 1441, 373, 374, 1442, 1443, 1202, 375,
	376, 377, 655, 656, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 1444, 387, 657, 1445, 658, 388, 1446,
	389, 390, 391, 392, 393, 659, 660, 661, 477, 1204,
	394, 395, 1447, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 1448, 1203, 404, 662,
	663, 1449, 664, 1450, 406, 407, 1205, 665, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 1451, 418, 420, 419, 1452, 421, 666,
	1208, 422, 423, 1209, 1453, 424, 425, 426, 427, 428,
	429, 432, 1454, 1455, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 1456, 276, 1212, 474, 475, 1457, 667, 476, 668,
	478, 479, 1458, 0, 480, 0, 1459, 1460, 482, 483,
	484, 1461, 1462, 485, 486, 669, 1213, 487, 1214, 670,
	488, 489, 481, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 1463, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 673, 507, 674, 508, 509, 1464, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 675,
	519, 520, 522, 521, 523, 1465, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 1466, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 676, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 1467, 564, 565, 563, 566, 567, 568,
	1468, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 677, 0, 580, 1469, 581,
	582, 583, 585, 554, 586, 591, 592, 678, 587, 588,
	589, 590, 679, 594, 595, 1470, 596, 597, 0, 593,
	584, 1471, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 1472, 606, 680, 681, 682, 683, 1473, 615, 1474,
	607, 608, 609, 684, 610, 685, 1475, 611, 612, 613,
	614, 0, 616, 617, 1476, 1477, 618, 619, 620, 622,
	623, 621, 624, 1478, 625, 1479, 0, 626, 627, 628,
	686, 687, 688, 1480, 630, 629, 631, 689, 632, 633,
	1481, 1482, 1483, 1484, 634, 635, 690, 636, 637, 638,
	0, 0, 0, 0, 1496, 0, 1401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2244, 277, 279, 278, 280, 281, 282, 283,
	1406, 284, 285, 1407, 1408, 1409, 0, 1410, 639, 1411,
	1412, 1413, 1414, 286, 287, 1200, 288, 289, 290, 291,
	292, 293, 640, 641, 0, 294, 642, 295, 643, 1415,
	644, 296, 297, 298, 299, 300, 301, 1416, 1417, 0,
	302, 645, 646, 647, 1418, 303, 304, 648, 1419, 1345,
	1420, 305, 306, 307, 308, 309, 310, 311, 0, 1421,
	313, 314, 315, 312, 316, 1422, 317, 0, 318, 319,
	320, 321, 322, 323, 1423, 324, 325, 326, 1201, 327,
	328, 329, 1424, 1425, 1427, 1426, 1428, 1429, 1430, 330,
	331, 332, 333, 334, 0, 335, 337, 649, 650, 1431,
	340, 336, 338, 1432, 341, 339, 342, 1433, 343, 344,
	345, 1434, 1435, 346, 347, 348, 1436, 349, 350, 351,
	1437, 352, 353, 354, 1438, 355, 356, 651, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 652, 653,
	368, 1439, 274, 1440, 0, 0, 0, 0, 369, 370,
	371, 654, 0, 0, 0, 372, 1441, 373, 374, 1442,
	1443, 1202, 375, 376, 377, 655, 656, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 1444, 387, 657, 1445,
	658, 388, 1446, 389, 390, 391, 392, 393, 659, 660,
	661, 477, 1204, 394, 395, 1447, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 1448,
	1203, 404, 662, 663, 1449, 664, 1450, 406, 407, 1205,
	665, 1206, 408, 409, 410, 1207, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 1451, 418, 420, 419,
	1452, 421, 666, 1208, 422, 423, 1209, 1453, 424, 425,
	426, 427, 428, 429, 432, 1454, 1455, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1210, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 1211, 473, 461, 1456, 276, 1212, 474, 475, 1457,
	667, 476, 668, 478, 479, 1458, 0, 480, 0, 1459,
	1460, 482, 483, 484, 1461, 1462, 485, 486, 669, 1213,
	487, 1214, 670, 488, 489, 481, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 1463, 499, 500, 671, 501,
	502, 503, 672, 504, 505, 506, 673, 507, 674, 508,
	509, 1464, 510, 511, 0, 512, 513, 514, 515, 516,
	517, 518, 675, 519, 520, 522, 521, 523, 1465, 524,
	0, 525, 526, 527, 0, 0, 0, 0, 0, 528,
	0, 530, 531, 532, 533, 529, 534, 535, 536, 537,
	538, 1466, 539, 540, 541, 1215, 542, 543, 544, 545,
	546, 676, 547, 0, 548, 549, 555, 556, 557, 550,
	551, 558, 559, 560, 561, 562, 1467, 564, 565, 563,
	566, 567, 568, 1468, 569, 570, 552, 553, 571, 572,
	1216, 573, 574, 575, 576, 577, 578, 579, 677, 0,
	580, 1469, 581, 582, 583, 585, 554, 586, 591, 592,
	678, 587, 588, 589, 590, 679, 594, 595, 1470, 596,
	597, 0, 593, 584, 1471, 598, 599, 600, 601, 602,
	603, 604, 362, 605, 1472, 606, 680, 681, 682, 683,
	1473, 615, 1474, 607, 608, 609, 684, 610, 685, 1475,
	611, 612, 613, 614, 0, 616, 617, 1476, 1477, 618,
	619, 620, 622, 623, 621, 624, 1478, 625, 1479, 0,
	626, 627, 628, 686, 687, 688, 1480, 630, 629, 631,
	689, 632, 633, 1481, 1482, 1483, 1484, 634, 635, 690,
	636, 637, 638, 1398, 0, 1401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 1406,
	284, 285, 1407, 1408, 1409, 0, 1410, 639, 1411, 1412,
	1413, 1414, 286, 287, 1200, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 1415, 644,
	296, 297, 298, 299, 300, 301, 1416, 1417, 0, 302,
	645, 646, 647, 1418, 303, 304, 648, 1419, 1345, 1420,
	305, 306, 307, 308, 309, 310, 311, 0, 1421, 313,
	314, 315, 312, 316, 1422, 317, 0, 318, 319, 320,
	321, 322, 323, 1423, 324, 325, 326, 1201, 327, 328,
	329, 1424, 1425, 1427, 1426, 1428, 1429, 1430, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 1431, 340,
	336, 338, 1432, 341, 339, 342, 1433, 343, 344, 345,
	1434, 1435, 346, 347, 348, 1436, 349, 350, 351, 1437,
	352, 353, 354, 1438, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	1439, 274, 1440, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 1441, 373, 374, 1442, 1443,
	1202, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 1444, 387, 657, 1445, 658,
	388, 1446, 389, 390, 391, 392, 393, 659, 660, 661,
	477, 1204, 394, 395, 1447, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 1448, 1203,
	404, 662, 663, 1449, 664, 1450, 406, 407, 1205, 665,
	1206, 408, 409, 410, 1207, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 1451, 418, 420, 419, 1452,
	421, 666, 1208, 422, 423, 1209, 1453, 424, 425, 426,
	427, 428, 429, 432, 1454, 1455, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1210, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1211, 473, 461, 1456, 276, 1212, 474, 475, 1457, 667,
	476, 668, 478, 479, 1458, 0, 480, 0, 1459, 1460,
	482, 483, 484, 1461, 1462, 485, 486, 669, 1213, 487,
	1214, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 1463, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	1464, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 1465, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	1466, 539, 540, 541, 1215, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 1467, 564, 565, 563, 566,
	567, 568, 1468, 569, 570, 552, 553, 571, 572, 1216,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	1469, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 1470, 596, 597,
	0, 593, 584, 1471, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 1472, 606, 680, 681, 682, 683, 1473,
	615, 1474, 607, 608, 609, 684, 610, 685, 1475, 611,
	612, 613, 614, 0, 616, 617, 1476, 1477, 618, 619,
	620, 622, 623, 621, 624, 1478, 625, 1479, 0, 626,
	627, 628, 686, 687, 688, 1480, 630, 629, 631, 689,
	632, 633, 1481, 1482, 1483, 1484, 634, 635, 690, 636,
	637, 638, 1401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 1406, 284, 285, 1407,
	1408, 1409, 0, 1410, 639, 1411, 1412, 1413, 1414, 286,
	287, 1200, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 1415, 644, 296, 297, 298,
	299, 300, 301, 1416, 1417, 0, 302, 645, 646, 647,
	1418, 303, 304, 648, 1419, 1345, 1420, 305, 306, 307,
	308, 309, 310, 311, 0, 1421, 313, 314, 315, 312,
	316, 1422, 317, 0, 318, 319, 320, 321, 322, 323,
	1423, 324, 325, 326, 1201, 327, 328, 329, 1424, 1425,
	1427, 1426, 1428, 1429, 1430, 330, 331, 332, 333, 334,
	0, 335, 337, 649, 650, 1431, 340, 336, 338, 1432,
	341, 339, 342, 1433, 343, 344, 345, 1434, 1435, 346,
	347, 348, 1436, 349, 350, 351, 1437, 352, 353, 354,
	1438, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 1439, 274, 1440,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 1441, 373, 374, 1442, 1443, 1202, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 1444, 387, 657, 1445, 658, 388, 1446, 389,
	390, 391, 392, 393, 659, 660, 661, 477, 1204, 394,
	395, 1447, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 1448, 1203, 404, 662, 663,
	1449, 664, 1450, 406, 407, 1205, 665, 1206, 408, 409,
	410, 1207, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 1451, 418, 420, 419, 1452, 421, 666, 1208,
	422, 423, 1209, 1453, 424, 425, 426, 427, 428, 429,
	432, 1454, 1455, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1210, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 1211, 473, 461,
	1456, 276, 1212, 474, 475, 1457, 667, 476, 668, 478,
	479, 1458, 0, 480, 0, 1459, 1460, 482, 483, 484,
	1461, 1462, 485, 486, 669, 1213, 487, 1214, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 1463, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 1464, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 1465, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 1466, 539, 540,
	541, 1215, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 1467, 564, 565, 563, 566, 567, 568, 1468,
	569, 570, 552, 553, 571, 572, 1216, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 1469, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 1470, 596, 597, 0, 593, 584,
	1471, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	1472, 606, 680, 681, 682, 683, 1473, 615, 1474, 607,
	608, 609, 684, 610, 685, 1475, 611, 612, 613, 614,
	0, 616, 617, 1476, 1477, 618, 619, 620, 622, 623,
	621, 624, 1478, 625, 1479, 0, 626, 627, 628, 686,
	687, 688, 1480, 630, 629, 631, 689, 632, 633, 1481,
	1482, 1483, 1484, 634, 635, 690, 636, 637, 638, 2588,
	0, 1136, 1108, 1109, 1110, 1106, 1107, 1119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 2585, 284, 285, 0, 0,
	0, 0, 0, 1160, 1124, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 1173, 0,
	294, 1180, 295, 1179, 0, 1190, 296, 297, 298, 299,
	300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0,
	303, 304, 1166, 0, 1147, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 1150, 1148, 1149,
	1156, 1152, 1151, 1155, 330, 331, 332, 333, 334, 1183,
	335, 337, 1177, 1176, 1096, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 2586, 0, 346, 1168,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1102, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1191, 1192, 368, 1115, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1175, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	1188, 1189, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1198, 0, 1125, 388, 0, 389, 390,
	391, 392, 393, 1161, 1162, 1165, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1203, 404, 1170, 1171, 0,
	1131, 0, 406, 407, 1205, 1163, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1199, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	1154, 1153, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 1093,
	276, 1212, 474, 475, 1116, 1164, 476, 1178, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 1193, 488, 489,
	1103, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 1194, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 1174, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 1104, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 1157, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 1172, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 1219, 587, 588, 589, 590,
	1195, 594, 595, 0, 596, 597, 1090, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 1184, 1185, 1186, 1187, 0, 615, 0, 607, 608,
	609, 1196, 610, 1197, 1114, 611, 612, 613, 614, 0,
	616, 617, 0, 1097, 618, 619, 620, 622, 623, 621,
	624, 1158, 625, 0, 0, 626, 627, 628, 686, 1181,
	1218, 2584, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 0, 1087, 1088,
	2587, 0, 0, 0, 0, 0, 0, 1120, 2583, 0,
	1080, 1118, 1136, 1108, 1109, 1110, 1106, 1107, 1119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1160, 1124, 0, 0, 0, 286,
	287, 1200, 288, 289, 290, 291, 292, 293, 640, 1173,
	0, 294, 1180, 295, 1179, 0, 1190, 296, 297, 298,
	299, 300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647,
	0, 303, 304, 1166, 0, 1147, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1201, 327, 328, 329, 1150, 1148,
	1149, 1156, 1152, 1151, 1155, 330, 331, 332, 333, 334,
	1183, 335, 337, 1177, 1176, 1096, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1168, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 1102, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 1191, 1192, 368, 1115, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 1175, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1202, 375, 376,
	377, 1188, 1189, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 1198, 0, 1125, 388, 0, 389,
	390, 391, 392, 393, 1161, 1162, 1165, 477, 1204, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 1203, 404, 1170, 1171,
	0, 1131, 0, 406, 407, 1205, 1163, 1206, 408, 409,
	410, 1207, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 1199, 1208,
	422, 423, 1209, 0, 424, 425, 426, 427, 428, 429,
	432, 1154, 1153, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1210, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 1211, 473, 461,
	1093, 276, 1212, 474, 475, 1116, 1164, 476, 1178, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 1213, 487, 1214, 1193, 488,
	489, 1103, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 1194, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 1174, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 1215, 542, 543, 544, 545, 546, 1104, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 236, 564, 565, 563, 566, 567, 568, 1157,
	569, 570, 552, 553, 571, 572, 1216, 573, 574, 575,
	576, 577, 578, 579, 1172, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 1219, 587, 588, 589,
	590, 1195, 594, 595, 0, 596, 597, 1090, 593, 584,
	238, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 1184, 1185, 1186, 1187, 0, 615, 0, 607,
	608, 609, 1196, 610, 1197, 1114, 611, 612, 613, 614,
	0, 616, 617, 0, 1097, 618, 619, 620, 622, 623,
	621, 624, 1158, 625, 0, 0, 626, 627, 628, 1622,
	1181, 1218, 0, 630, 629, 631, 689, 632, 633, 0,
	0, 0, 230, 634, 635, 690, 636, 637, 638, 1094,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 0, 1087,
	1088, 1136, 1108, 1109, 1110, 1106, 1107, 1119, 1877, 1875,
	0, 0, 1118, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1160, 1124, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 1173, 0,
	294, 1180, 295, 1179, 0, 1190, 296, 297, 298, 299,
	300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0,
	303, 304, 1166, 0, 1147, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 1150, 1148, 1149,
	1156, 1152, 1151, 1155, 330, 331, 332, 333, 334, 1183,
	335, 337, 1177, 1176, 1096, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1168,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1102, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1191, 1192, 368, 1115, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1175, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	1188, 1189, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1198, 0, 1125, 388, 0, 389, 390,
	391, 392, 393, 1161, 1162, 1165, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1203, 404, 1170, 1171, 0,
	1131, 0, 406, 407, 1205, 1163, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1199, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	1154, 1153, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 1093,
	276, 1212, 474, 475, 1116, 1164, 476, 1178, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 1193, 488, 489,
	1103, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 1194, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 1174, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 1104, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 236, 564, 565, 563, 566, 567, 568, 1157, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 1172, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 1219, 587, 588, 589, 590,
	1195, 594, 595, 0, 596, 597, 1090, 593, 584, 238,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 1184, 1185, 1186, 1187, 0, 615, 0, 607, 608,
	609, 1196, 610, 1197, 1114, 611, 612, 613, 614, 0,
	616, 617, 0, 1097, 618, 619, 620, 622, 623, 621,
	624, 1158, 625, 0, 0, 626, 627, 628, 1622, 1181,
	1218, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 230, 634, 635, 690, 636, 637, 638, 1094, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 0, 1087, 1088,
	1136, 1108, 1109, 1110, 1106, 1107, 1119, 1877, 3226, 0,
	0, 1118, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1160, 1124, 0, 0, 0, 286, 287, 1200,
	288, 289, 290, 291, 292, 293, 640, 1173, 0, 294,
	1180, 295, 1179, 0, 1190, 296, 297, 298, 299, 300,
	301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0, 303,
	304, 1166, 0, 1147, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1201, 327, 328, 329, 1150, 1148, 1149, 1156,
	1152, 1151, 1155, 330, 331, 332, 333, 334, 1183, 335,
	337, 1177, 1176, 1096, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1168, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 1102, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1191, 1192, 368, 1115, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 1175, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1202, 375, 376, 377, 1188,
	1189, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1198, 0, 1125, 388, 0, 389, 390, 391,
	392, 393, 1161, 1162, 1165, 477, 1204, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1203, 404, 1170, 1171, 0, 1131,
	0, 406, 407, 1205, 1163, 1206, 408, 409, 410, 1207,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 1199, 1208, 422, 423,
	1209, 0, 424, 425, 426, 427, 428, 429, 432, 1154,
	1153, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1210, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1211, 473, 461, 1093, 276,
	1212, 474, 475, 1116, 1164, 476, 1178, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 1213, 487, 1214, 1193, 488, 489, 1103,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	1194, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 1174, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 1215,
	542, 543, 544, 545, 546, 1104, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	236, 564, 565, 563, 566, 567, 568, 1157, 569, 570,
	552, 553, 571, 572, 1216, 573, 574, 575, 576, 577,
	578, 579, 1172, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 1219, 587, 588, 589, 590, 1195,
	594, 595, 0, 596, 597, 1090, 593, 584, 238, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	1184, 1185, 1186, 1187, 0, 615, 0, 607, 608, 609,
	1196, 610, 1197, 1114, 611, 612, 613, 614, 0, 616,
	617, 0, 1097, 618, 619, 620, 622, 623, 621, 624,
	1158, 625, 0, 0, 626, 627, 628, 1622, 1181, 1218,
	0, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	230, 634, 635, 690, 636, 637, 638, 1094, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 0, 0, 0, 1087, 1088, 1136,
	1108, 1109, 1110, 1106, 1107, 1119, 1877, 1875, 0, 0,
	1118, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 1160, 1124, 0, 0, 0, 286, 287, 1200, 288,
	289, 290, 291, 292, 293, 640, 1173, 0, 294, 1180,
	295, 1179, 2719, 1190, 296, 297, 298, 299, 300, 301,
	1126, 1159, 1091, 302, 1220, 1221, 647, 0, 303, 304,
	1166, 0, 1147, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152,
	1151, 1155, 330, 331, 332, 333, 334, 1183, 335, 337,
	1177, 1176, 1096, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1168, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1102, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1191, 1192, 368, 1115, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1175, 0, 0, 0, 372, 0,
	373, 374, 0, 2724, 1202, 375, 376, 377, 1188, 1189,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1198, 0, 1125, 388, 0, 389, 390, 391, 392,
	393, 1161, 1162, 1165, 477, 1204, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1203, 404, 1170, 1171, 0, 1131, 0,
	406, 407, 1205, 1163, 1206, 408, 409, 410, 1207, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 2720, 421, 1199, 1208, 422, 423, 1209,
	0, 424, 425, 426, 427, 428, 429, 432, 1154, 1153,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1210,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1211, 473, 461, 1093, 276, 1212,
	474, 475, 1116, 1164, 476, 1178, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 1213, 487, 1214, 1193, 488, 489, 1103, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 1194,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 1174, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 1215, 542,
	543, 544, 545, 546, 1104, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 1157, 569, 570, 552,
	553, 571, 572, 1216, 573, 574, 575, 576, 577, 578,
	579, 1172, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 1219, 587, 588, 589, 590, 1195, 594,
	595, 0, 596, 597, 1090, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 1184,
	1185, 1186, 1187, 0, 615, 2721, 607, 608, 609, 1196,
	610, 1197, 1114, 611, 612, 613, 614, 0, 616, 617,
	0, 1097, 618, 619, 620, 622, 623, 621, 624, 1158,
	625, 0, 0, 626, 627, 628, 686, 1181, 1218, 0,
	630, 629, 631, 689, 632, 633, 0, 0, 0, 0,
	634, 635, 690, 636, 637, 638, 1094, 0, 0, 2633,
	0, 1136, 1108, 1109, 1110, 1106, 1107, 1119, 0, 1089,
	0, 0, 0, 0, 0, 0, 1087, 1088, 277, 279,
	278, 280, 281, 282, 283, 1120, 284, 285, 0, 1118,
	0, 0, 0, 1160, 1124, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 1173, 0,
	294, 1180, 295, 1179, 0, 1190, 296, 297, 298, 299,
	300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0,
	303, 304, 1166, 0, 1147, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 1150, 1148, 1149,
	1156, 1152, 1151, 1155, 330, 331, 332, 333, 334, 1183,
	335, 337, 1177, 1176, 1096, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1168,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1102, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1191, 1192, 368, 1115, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1175, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	1188, 1189, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1198, 0, 1125, 388, 0, 389, 390,
	391, 392, 393, 1161, 1162, 1165, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1203, 404, 1170, 1171, 0,
	1131, 0, 406, 407, 1205, 1163, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1199, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	1154, 1153, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 1093,
	276, 1212, 474, 475, 1116, 1164, 476, 1178, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 1193, 488, 489,
	1103, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 1194, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 1174, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 1104, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 1157, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 1172, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 1219, 587, 588, 589, 590,
	1195, 594, 595, 0, 596, 597, 1090, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 1184, 1185, 1186, 1187, 0, 615, 0, 607, 608,
	609, 1196, 610, 1197, 1114, 611, 612, 613, 614, 0,
	616, 617, 0, 1097, 618, 619, 620, 622, 623, 621,
	624, 1158, 625, 0, 0, 626, 627, 628, 686, 1181,
	1218, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 0, 1087, 1088,
	0, 0, 0, 0, 0, 0, 0, 1120, 2631, 0,
	2630, 1118, 1136, 1108, 1109, 1110, 1106, 1107, 1119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1160, 1124, 0, 0, 0, 286,
	287, 1200, 288, 289, 290, 291, 292, 293, 640, 1173,
	0, 294, 1180, 295, 1179, 0, 1190, 296, 297, 298,
	299, 300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647,
	0, 303, 304, 1166, 0, 1147, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1201, 327, 328, 329, 1150, 1148,
	1149, 1156, 1152, 1151, 1155, 330, 331, 332, 333, 334,
	1183, 335, 337, 1177, 1176, 1096, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1168, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 1102, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 1191, 1192, 368, 1115, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 1175, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1202, 375, 376,
	377, 1188, 1189, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 1198, 0, 1125, 388, 0, 389,
	390, 391, 392, 393, 1161, 1162, 1165, 477, 1204, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 1203, 404, 1170, 1171,
	0, 1131, 0, 406, 407, 1205, 1163, 1206, 408, 409,
	410, 1207, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 1199, 1208,
	422, 423, 1209, 0, 424, 425, 426, 427, 428, 429,
	432, 1154, 1153, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1210, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 1211, 473, 461,
	1093, 276, 1212, 474, 475, 1116, 1164, 476, 1178, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 1213, 487, 1214, 1193, 488,
	489, 1103, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 1194, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 1174, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 1215, 542, 543, 544, 545, 546, 1104, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 1157,
	569, 570, 552, 553, 571, 572, 1216, 573, 574, 575,
	576, 577, 578, 579, 1172, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 1219, 587, 588, 589,
	590, 1195, 594, 595, 0, 596, 597, 1090, 593, 584,
	0, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 1184, 1185, 1186, 1187, 0, 615, 0, 607,
	608, 609, 1196, 610, 1197, 1114, 611, 612, 613, 614,
	0, 616, 617, 0, 1097, 618, 619, 620, 622, 623,
	621, 624, 1158, 625, 0, 0, 626, 627, 628, 686,
	1181, 1218, 0, 630, 629, 631, 689, 632, 633, 0,
	0, 0, 0, 634, 635, 690, 636, 637, 638, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 0, 1087,
	1088, 0, 0, 0, 0, 0, 0, 0, 1120, 2628,
	0, 2627, 1118, 1136, 1108, 1109, 1110, 1106, 1107, 1119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 1160, 1124, 0, 0, 0,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	1173, 0, 294, 1180, 295, 1179, 0, 1190, 296, 297,
	298, 299, 300, 301, 1126, 1159, 1091, 302, 1220, 1221,
	647, 0, 303, 304, 1166, 0, 1147, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1201, 327, 328, 329, 1150,
	1148, 1149, 1156, 1152, 1151, 1155, 330, 331, 332, 333,
	334, 1183, 335, 337, 1177, 1176, 1096, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1168, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1102, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1191, 1192, 368, 1115, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1175, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1202, 375,
	376, 377, 1188, 1189, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1198, 0, 1125, 388, 0,
	389, 390, 391, 392, 393, 1161, 1162, 1165, 477, 1204,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1203, 404, 1170,
	1171, 0, 1131, 0, 406, 407, 1205, 1163, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1199,
	1208, 422, 423, 1209, 0, 424, 425, 426, 427, 428,
	429, 432, 1154, 1153, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 1093, 276, 1212, 474, 475, 1116, 1164, 476, 1178,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 1213, 487, 1214, 1193,
	488, 489, 1103, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 1194, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 1174,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 1104, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	1157, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 1172, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 1219, 587, 588,
	589, 590, 1195, 594, 595, 0, 596, 597, 1090, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 1184, 1185, 1186, 1187, 0, 615, 0,
	607, 608, 609, 1196, 610, 1197, 1114, 611, 612, 613,
	614, 0, 616, 617, 0, 1097, 618, 619, 620, 622,
	623, 621, 624, 1158, 625, 0, 0, 626, 627, 628,
	686, 1181, 1218, 0, 630, 629, 631, 689, 632, 633,
	0, 0, 0, 0, 634, 635, 690, 636, 637, 638,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 0, 0, 0,
	1087, 1088, 0, 0, 0, 0, 0, 0, 0, 1120,
	2625, 0, 2624, 1118, 1136, 1108, 1109, 1110, 1106, 1107,
	1119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1160, 1124, 0, 0,
	0, 286, 287, 1200, 288, 289, 290, 291, 292, 293,
	640, 1173, 0, 294, 1180, 295, 1179, 0, 1190, 296,
	297, 298, 299, 300, 301, 1126, 1159, 1091, 302, 1220,
	1221, 647, 0, 303, 304, 1166, 0, 1147, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1201, 327, 328, 329,
	1150, 1148, 1149, 1156, 1152, 1151, 1155, 330, 331, 332,
	333, 334, 1183, 335, 337, 1177, 1176, 1096, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1168, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1102, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1191, 1192, 368, 1115,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1175,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1202,
	375, 376, 377, 1188, 1189, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1198, 0, 1125, 388,
	0, 389, 390, 391, 392, 393, 1161, 1162, 1165, 477,
	1204, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1203, 404,
	1170, 1171, 0, 1131, 0, 406, 407, 1205, 1163, 1206,
	408, 409, 410, 1207, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1199, 1208, 422, 423, 1209, 0, 424, 425, 426, 427,
	428, 429, 432, 1154, 1153, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1210, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1211,
	473, 461, 1093, 276, 1212, 474, 475, 1116, 1164, 476,
	1178, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 1213, 487, 1214,
	1193, 488, 489, 1103, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 1194, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	1174, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 1215, 542, 543, 544, 545, 546, 1104,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 0, 564, 565, 563, 566, 567,
	568, 1157, 569, 570, 552, 553, 571, 572, 1216, 573,
	574, 575, 576, 577, 578, 579, 1172, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 1219, 587,
	588, 589, 590, 1195, 594, 595, 0, 596, 597, 1090,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 1184, 1185, 1186, 1187, 0, 615,
	0, 607, 608, 609, 1196, 610, 1197, 1114, 611, 612,
	613, 614, 0, 616, 617, 0, 1097, 618, 619, 620,
	622, 623, 621, 624, 1158, 625, 0, 0, 626, 627,
	628, 686, 1181, 1218, 0, 630, 629, 631, 689, 632,
	633, 0, 0, 0, 0, 634, 635, 690, 636, 637,
	638, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 0, 0, 0,
	0, 1087, 1088, 0, 0, 0, 0, 0, 0, 0,
	1120, 2622, 0, 1718, 1118, 1136, 1108, 1109, 1110, 1106,
	1107, 1119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1160, 1124, 0,
	0, 0, 286, 287, 1200, 288, 289, 290, 291, 292,
	293, 640, 1173, 0, 294, 1180, 295, 1179, 0, 1190,
	296, 297, 298, 299, 300, 301, 1126, 1159, 1091, 302,
	1220, 1221, 647, 0, 303, 304, 1166, 0, 1147, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1201, 327, 328,
	329, 1150, 1148, 1149, 1156, 1152, 1151, 1155, 330, 331,
	332, 333, 334, 1183, 335, 337, 1177, 1176, 1096, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1168, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1102, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1191, 1192, 368,
	1115, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1175, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1202, 375, 376, 377, 1188, 1189, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1198, 0, 1125,
	388, 0, 389, 390, 391, 392, 393, 1161, 1162, 1165,
	477, 1204, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1203,
	404, 1170, 1171, 0, 1131, 0, 406, 407, 1205, 1163,
	1206, 408, 409, 410, 1207, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1199, 1208, 422, 423, 1209, 0, 424, 425, 426,
	427, 428, 429, 432, 1154, 1153, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1210, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1211, 473, 461, 1093, 276, 1212, 474, 475, 1116, 1164,
	476, 1178, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 1213, 487,
	1214, 1193, 488, 489, 1103, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 1194, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 1174, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 1215, 542, 543, 544, 545, 546,
	1104, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 1157, 569, 570, 552, 553, 571, 572, 1216,
	573, 574, 575, 576, 577, 578, 579, 1172, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 1219,
	587, 588, 589, 590, 1195, 594, 595, 0, 596, 597,
	1090, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 1184, 1185, 1186, 1187, 0,
	615, 0, 607, 608, 609, 1196, 610, 1197, 1114, 611,
	612, 613, 614, 0, 616, 617, 0, 1097, 618, 619,
	620, 622, 623, 621, 624, 1158, 625, 0, 0, 626,
	627, 628, 686, 1181, 1218, 0, 630, 629, 631, 689,
	632, 633, 1717, 0, 0, 0, 634, 635, 690, 636,
	637, 638, 1094, 0, 0, 1083, 0, 1136, 1108, 1109,
	1110, 1106, 1107, 1119, 0, 1089, 0, 0, 0, 0,
	0, 0, 1087, 1088, 277, 279, 278, 280, 281, 282,
	283, 1120, 284, 285, 0, 1118, 0, 0, 0, 1160,
	1124, 0, 0, 0, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 1173, 0, 294, 1180, 295, 1179,
	0, 1190, 296, 297, 298, 299, 300, 301, 1126, 1159,
	1091, 302, 1220, 1221, 647, 0, 303, 304, 1166, 0,
	1147, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1201,
	327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151, 1155,
	330, 331, 332, 333, 334, 1183, 335, 337, 1177, 1176,
	1096, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1168, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1102, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1191,
	1192, 368, 1115, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1175, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1202, 375, 376, 377, 1188, 1189, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1198,
	0, 1125, 388, 0, 389, 390, 391, 392, 393, 1161,
	1162, 1165, 477, 1204, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1203, 404, 1170, 1171, 0, 1131, 0, 406, 407,
	1205, 1163, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1199, 1208, 422, 423, 1209, 0, 424,
	425, 426, 427, 428, 429, 432, 1154, 1153, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 1093, 276, 1212, 474, 475,
	1116, 1164, 476, 1178, 478, 479, 0, 0, 480, 0,
	1098, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	1213, 487, 1214, 1193, 488, 489, 1103, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 1194, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 1174, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 1104, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 1157, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 1172,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 1219, 587, 588, 589, 590, 1195, 594, 595, 0,
	596, 597, 1090, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 1184, 1185, 1186,
	1187, 0, 615, 0, 607, 608, 609, 1196, 610, 1197,
	1114, 611, 612, 613, 614, 0, 616, 617, 0, 1097,
	618, 619, 620, 622, 623, 621, 624, 1158, 625, 0,
	0, 626, 627, 628, 686, 1181, 1218, 0, 630, 629,
	631, 689, 632, 633, 0, 0, 0, 0, 634, 635,
	690, 636, 637, 638, 1094, 0, 0, 0, 0, 1136,
	1108, 1109, 1110, 1106, 1107, 1119, 0, 1089, 0, 0,
	0, 0, 0, 0, 1087, 1088, 277, 279, 278, 280,
	281, 282, 283, 1120, 284, 285, 0, 1118, 0, 0,
	0, 1160, 1124, 0, 0, 0, 286, 287, 1200, 288,
	289, 290, 291, 292, 293, 640, 1173, 0, 294, 1180,
	295, 1179, 0, 1190, 296, 297, 298, 299, 300, 301,
	1126, 1159, 1091, 302, 1220, 1221, 647, 0, 303, 304,
	1166, 0, 1147, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 4694, 323, 0, 324, 325,
	326, 1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152,
	1151, 1155, 330, 331, 332, 333, 334, 1183, 335, 337,
	1177, 1176, 1096, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1168, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1102, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1191, 1192, 368, 1115, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1175, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1202, 375, 376, 377, 1188, 1189,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1198, 0, 1125, 388, 0, 389, 390, 391, 392,
	393, 1161, 1162, 1165, 477, 1204, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1203, 404, 1170, 1171, 0, 1131, 0,
	406, 407, 1205, 1163, 1206, 408, 409, 410, 1207, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1199, 1208, 422, 423, 1209,
	0, 424, 425, 426, 427, 428, 429, 432, 1154, 1153,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1210,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1211, 473, 461, 1093, 276, 1212,
	474, 475, 1116, 1164, 476, 1178, 478, 479, 0, 0,
	480, 0, 1098, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 1213, 487, 1214, 1193, 488, 489, 1103, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 1194,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 1174, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 1215, 542,
	543, 544, 545, 546, 1104, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 1157, 569, 570, 552,
	553, 571, 572, 1216, 573, 574, 575, 576, 577, 578,
	579, 1172, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 1219, 587, 588, 589, 590, 1195, 594,
	595, 0, 596, 597, 1090, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 1184,
	1185, 1186, 1187, 0, 615, 0, 607, 608, 609, 1196,
	610, 1197, 1114, 611, 612, 613, 614, 0, 616, 617,
	0, 1097, 618, 619, 620, 622, 623, 621, 624, 1158,
	625, 0, 0, 626, 627, 628, 686, 1181, 1218, 0,
	630, 629, 631, 689, 632, 633, 0, 0, 0, 0,
	634, 635, 690, 636, 637, 638, 1094, 0, 0, 0,
	0, 1136, 1108, 1109, 1110, 1106, 1107, 1119, 0, 1089,
	0, 0, 0, 0, 0, 0, 1087, 1088, 277, 279,
	278, 280, 281, 282, 283, 1120, 284, 285, 0, 1118,
	0, 0, 0, 1160, 1124, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 1173, 0,
	294, 1180, 295, 1179, 0, 1190, 296, 297, 298, 299,
	300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0,
	303, 304, 1166, 0, 1147, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 1150, 1148, 1149,
	1156, 1152, 1151, 1155, 330, 331, 332, 333, 334, 1183,
	335, 337, 1177, 1176, 1096, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1168,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1102, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1191, 1192, 368, 1115, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1175, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	1188, 1189, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1198, 0, 1125, 388, 0, 389, 390,
	391, 392, 393, 1161, 1162, 1165, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 2465,
	401, 402, 403, 405, 0, 1203, 404, 1170, 1171, 0,
	1131, 0, 406, 407, 1205, 1163, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1199, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	1154, 1153, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 1093,
	276, 1212, 474, 475, 1116, 1164, 476, 1178, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 1193, 488, 489,
	1103, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 1194, 507, 674, 508, 509, 2464, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 1174, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 1104, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 1157, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 1172, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 1219, 587, 588, 589, 590,
	1195, 594, 595, 0, 596, 597, 1090, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 1184, 1185, 1186, 1187, 0, 615, 0, 607, 608,
	609, 1196, 610, 1197, 1114, 611, 612, 613, 614, 0,
	616, 617, 0, 1097, 618, 619, 620, 622, 623, 621,
	624, 1158, 625, 0, 0, 626, 627, 628, 686, 1181,
	1218, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 1094, 0,
	0, 0, 0, 1136, 1108, 1109, 1110, 1106, 1107, 1119,
	0, 1089, 0, 0, 0, 0, 0, 0, 1087, 1088,
	277, 279, 278, 280, 281, 282, 283, 1120, 284, 285,
	0, 1118, 0, 0, 0, 1160, 1124, 0, 0, 0,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	1173, 0, 294, 1180, 295, 1179, 0, 1190, 296, 297,
	298, 299, 300, 301, 1126, 1159, 1091, 302, 1220, 1221,
	647, 0, 303, 304, 1166, 0, 1147, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1201, 327, 328, 329, 1150,
	1148, 1149, 1156, 1152, 1151, 1155, 330, 331, 332, 333,
	334, 1183, 335, 337, 1177, 1176, 1096, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1168, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1102, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1191, 1192, 368, 1115, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1175, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1202, 375,
	376, 377, 1188, 1189, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1198, 0, 1125, 388, 0,
	389, 390, 391, 392, 393, 1161, 1162, 1165, 477, 1204,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1203, 404, 1170,
	1171, 0, 1131, 0, 406, 407, 1205, 1163, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1199,
	1208, 422, 423, 1209, 0, 424, 425, 426, 427, 428,
	429, 432, 1154, 1153, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 1093, 276, 1212, 474, 475, 1116, 1164, 476, 1178,
	478, 479, 0, 0, 480, 0, 1098, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 1213, 487, 1214, 1193,
	488, 489, 1103, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 1194, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 1174,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 1104, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	1157, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 1172, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 1219, 587, 588,
	589, 590, 1195, 594, 595, 0, 596, 597, 1090, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 1184, 1185, 1186, 1187, 0, 615, 0,
	607, 608, 609, 1196, 610, 1197, 1114, 611, 612, 613,
	614, 0, 616, 617, 0, 1097, 618, 619, 620, 622,
	623, 621, 624, 1158, 625, 0, 0, 626, 627, 628,
	686, 1181, 1218, 0, 630, 629, 631, 689, 632, 633,
	0, 0, 0, 0, 634, 635, 690, 636, 637, 638,
	1094, 0, 0, 0, 0, 1136, 1108, 1109, 1110, 1106,
	1107, 1119, 0, 1089, 0, 0, 0, 0, 0, 0,
	1087, 1088, 277, 279, 278, 280, 281, 282, 283, 1120,
	284, 285, 0, 1118, 0, 0, 0, 1160, 1124, 0,
	0, 0, 286, 287, 1200, 288, 289, 290, 291, 292,
	293, 640, 1173, 0, 294, 1180, 295, 1179, 0, 1190,
	296, 297, 298, 299, 300, 301, 1126, 1159, 1091, 302,
	1220, 1221, 647, 0, 303, 304, 1166, 0, 1147, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 4430, 323, 0, 324, 325, 326, 1201, 327, 328,
	329, 1150, 1148, 1149, 1156, 1152, 1151, 1155, 330, 331,
	332, 333, 334, 1183, 335, 337, 1177, 1176, 1096, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1168, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1102, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1191, 1192, 368,
	1115, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1175, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1202, 375, 376, 377, 1188, 1189, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1198, 0, 1125,
	388, 0, 389, 390, 391, 392, 393, 1161, 1162, 1165,
	477, 1204, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1203,
	404, 1170, 1171, 0, 1131, 0, 406, 407, 1205, 1163,
	1206, 408, 409, 410, 1207, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1199, 1208, 422, 423, 1209, 0, 424, 425, 426,
	427, 428, 429, 432, 1154, 1153, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1210, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1211, 473, 461, 1093, 276, 1212, 474, 475, 1116, 1164,
	476, 1178, 478, 479, 0, 0, 480, 0, 1098, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 1213, 487,
	1214, 1193, 488, 489, 1103, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 1194, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 1174, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 1215, 542, 543, 544, 545, 546,
	1104, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 1157, 569, 570, 552, 553, 571, 572, 1216,
	573, 574, 575, 576, 577, 578, 579, 1172, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 1219,
	587, 588, 589, 590, 1195, 594, 595, 0, 596, 597,
	1090, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 1184, 1185, 1186, 1187, 0,
	615, 0, 607, 608, 609, 1196, 610, 1197, 1114, 611,
	612, 613, 614, 0, 616, 617, 0, 1097, 618, 619,
	620, 622, 623, 621, 624, 1158, 625, 0, 0, 626,
	627, 628, 686, 1181, 1218, 0, 630, 629, 631, 689,
	632, 633, 0, 0, 0, 0, 634, 635, 690, 636,
	637, 638, 1094, 0, 0, 0, 0, 1136, 1108, 1109,
	1110, 1106, 1107, 1119, 0, 1089, 0, 0, 0, 0,
	0, 0, 1087, 1088, 277, 279, 278, 280, 281, 282,
	283, 1120, 284, 285, 0, 1118, 0, 0, 0, 1160,
	1124, 0, 0, 0, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 1173, 0, 294, 1180, 295, 1179,
	0, 1190, 296, 297, 298, 299, 300, 301, 1126, 1159,
	1091, 302, 1220, 1221, 647, 0, 303, 304, 1166, 0,
	1147, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1201,
	327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151, 1155,
	330, 331, 332, 333, 334, 1183, 335, 337, 1177, 1176,
	1096, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1168, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1102, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1191,
	1192, 368, 1115, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1175, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1202, 375, 376, 377, 1188, 1189, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1198,
	0, 1125, 388, 0, 389, 390, 391, 392, 393, 1161,
	1162, 1165, 477, 1204, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1203, 404, 1170, 1171, 0, 1131, 0, 406, 407,
	1205, 1163, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1199, 1208, 422, 423, 1209, 0, 424,
	425, 426, 427, 428, 429, 432, 1154, 1153, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 1093, 4025, 1212, 474, 475,
	1116, 1164, 476, 1178, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	1213, 487, 1214, 1193, 488, 489, 1103, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 1194, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 1174, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 1104, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 1157, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 1172,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 1219, 587, 588, 589, 590, 1195, 594, 595, 0,
	596, 597, 1090, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 1184, 1185, 1186,
	1187, 0, 615, 0, 607, 608, 609, 1196, 610, 1197,
	1114, 611, 612, 613, 614, 0, 616, 617, 0, 1097,
	618, 619, 620, 622, 623, 621, 624, 1158, 625, 0,
	0, 626, 627, 628, 686, 1181, 1218, 0, 630, 629,
	631, 689, 632, 633, 0, 0, 0, 0, 634, 635,
	690, 636, 637, 638, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	0, 0, 0, 0, 1087, 1088, 1946, 0, 0, 0,
	0, 0, 0, 1120, 0, 0, 0, 1118, 1136, 1108,
	1109, 1110, 1106, 1107, 1119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1160, 1124, 0, 0, 0, 286, 287, 1200, 288, 289,
	290, 291, 292, 293, 640, 1173, 0, 294, 1180, 295,
	1179, 0, 1190, 296, 297, 298, 299, 300, 301, 1126,
	1159, 1091, 302, 1220, 1221, 647, 0, 303, 304, 1166,
	0, 1147, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151,
	1155, 330, 331, 332, 333, 334, 1183, 335, 337, 1177,
	1176, 1096, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1168, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 1102,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1191, 1192, 368, 1115, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 1175, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1202, 375, 376, 377, 1188, 1189, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1198, 0, 1125, 388, 0, 389, 390, 391, 392, 393,
	1161, 1162, 1165, 477, 1204, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1203, 404, 1170, 1171, 0, 1131, 0, 406,
	407, 1205, 1163, 1206, 408, 409, 410, 1207, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 1199, 1208, 422, 423, 1209, 0,
	424, 425, 426, 427, 428, 429, 432, 1154, 1153, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1210, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1211, 473, 461, 1093, 276, 1212, 474,
	475, 1116, 1164, 476, 1178, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 1213, 487, 1214, 1193, 488, 489, 1103, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 1194, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 1174, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 1215, 542, 543,
	544, 545, 546, 1104, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 1157, 569, 570, 552, 553,
	571, 572, 1216, 573, 574, 575, 576, 577, 578, 579,
	1172, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 1219, 587, 588, 589, 590, 1195, 594, 595,
	0, 596, 597, 1090, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 1184, 1185,
	1186, 1187, 0, 615, 0, 607, 608, 609, 1196, 610,
	1197, 1114, 611, 612, 613, 614, 0, 616, 617, 0,
	1097, 618, 619, 620, 622, 623, 621, 624, 1158, 625,
	0, 0, 626, 627, 628, 686, 1181, 1218, 3737, 630,
	629, 631, 689, 632, 633, 0, 0, 0, 0, 634,
	635, 690, 636, 637, 638, 1094, 0, 0, 0, 0,
	1136, 1108, 1109, 1110, 1106, 1107, 1119, 0, 1089, 0,
	0, 0, 0, 0, 0, 1087, 1088, 277, 279, 278,
	280, 281, 282, 283, 1120, 284, 285, 0, 1118, 0,
	0, 0, 1160, 1124, 0, 0, 0, 286, 287, 1200,
	288, 289, 290, 291, 292, 293, 640, 1173, 0, 294,
	1180, 295, 1179, 0, 1190, 296, 297, 298, 299, 300,
	301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0, 303,
	304, 1166, 0, 1147, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1201, 327, 328, 329, 1150, 1148, 1149, 1156,
	1152, 1151, 1155, 330, 331, 332, 333, 334, 1183, 335,
	337, 1177, 1176, 1096, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1168, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 1102, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1191, 1192, 368, 1115, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 1175, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1202, 375, 376, 377, 1188,
	1189, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1198, 0, 1125, 388, 0, 389, 390, 391,
	392, 393, 1161, 1162, 1165, 477, 1204, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1203, 404, 1170, 1171, 0, 1131,
	0, 406, 407, 1205, 1163, 1206, 408, 409, 410, 1207,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 1199, 1208, 422, 423,
	1209, 0, 424, 425, 426, 427, 428, 429, 432, 1154,
	1153, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1210, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1211, 473, 461, 1093, 276,
	1212, 474, 475, 1116, 1164, 476, 1178, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 1213, 487, 1214, 1193, 488, 489, 1103,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	1194, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 1174, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 1215,
	542, 543, 544, 545, 546, 1104, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 1157, 569, 570,
	552, 553, 571, 572, 1216, 573, 574, 575, 576, 577,
	578, 579, 1172, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 1219, 587, 588, 589, 590, 1195,
	594, 595, 0, 596, 597, 1090, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	1184, 1185, 1186, 1187, 0, 615, 0, 607, 608, 609,
	1196, 610, 1197, 1114, 611, 612, 613, 614, 0, 616,
	617, 0, 1097, 618, 619, 620, 622, 623, 621, 624,
	1158, 625, 0, 0, 626, 627, 628, 686, 1181, 1218,
	0, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 1094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 0, 0, 0, 1087, 1088, 1946,
	0, 0, 0, 0, 0, 0, 1120, 0, 0, 0,
	1118, 1136, 1108, 1109, 1110, 1106, 1107, 1119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1160, 1124, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 1173, 0,
	294, 1180, 295, 1179, 0, 1190, 296, 297, 298, 299,
	300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0,
	303, 304, 1166, 0, 1147, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 1150, 1148, 1149,
	1156, 1152, 1151, 1155, 330, 331, 332, 333, 334, 1183,
	335, 337, 1177, 1176, 1096, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1168,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1102, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1191, 1192, 368, 1115, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1175, 0, 0, 0,
	372, 0, 373, 374, 0, 2724, 1202, 375, 376, 377,
	1188, 1189, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1198, 0, 1125, 388, 0, 389, 390,
	391, 392, 393, 1161, 1162, 1165, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1203, 404, 1170, 1171, 0,
	1131, 0, 406, 407, 1205, 1163, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1199, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	1154, 1153, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 1093,
	276, 1212, 474, 475, 1116, 1164, 476, 1178, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 1193, 488, 489,
	1103, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 1194, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 1174, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 1104, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 1157, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 1172, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 1219, 587, 588, 589, 590,
	1195, 594, 595, 0, 596, 597, 1090, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 1184, 1185, 1186, 1187, 0, 615, 0, 607, 608,
	609, 1196, 610, 1197, 1114, 611, 612, 613, 614, 0,
	616, 617, 0, 1097, 618, 619, 620, 622, 623, 621,
	624, 1158, 625, 0, 0, 626, 627, 628, 686, 1181,
	1218, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 1094, 0,
	0, 0, 0, 1136, 1108, 1109, 1110, 1106, 1107, 1119,
	0, 1089, 0, 0, 0, 0, 0, 0, 1087, 1088,
	277, 279, 278, 280, 281, 282, 283, 1120, 284, 285,
	0, 1118, 0, 0, 0, 1160, 1124, 0, 0, 0,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	1173, 0, 294, 1180, 295, 1179, 0, 1190, 296, 297,
	298, 299, 300, 301, 1126, 1159, 1091, 302, 1220, 1221,
	647, 0, 303, 304, 1166, 0, 1147, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1201, 327, 328, 329, 1150,
	1148, 1149, 1156, 1152, 1151, 1155, 330, 331, 332, 333,
	334, 1183, 335, 337, 1177, 1176, 1096, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1168, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1102, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1191, 1192, 368, 1115, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1175, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1202, 375,
	376, 377, 1188, 1189, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1198, 0, 1125, 388, 0,
	389, 390, 391, 392, 393, 1161, 1162, 1165, 477, 1204,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1203, 404, 1170,
	1171, 0, 1131, 0, 406, 407, 1205, 1163, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1199,
	1208, 422, 423, 1209, 0, 424, 425, 426, 427, 428,
	429, 432, 1154, 1153, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 1093, 276, 1212, 474, 475, 1116, 1164, 476, 1178,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 1213, 487, 1214, 1193,
	488, 489, 1103, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 1194, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 1174,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 1104, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	1157, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 1172, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 1219, 587, 588,
	589, 590, 1195, 594, 595, 0, 596, 597, 1090, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 1184, 1185, 1186, 1187, 0, 615, 0,
	607, 608, 609, 1196, 610, 1197, 1114, 611, 612, 613,
	614, 0, 616, 617, 0, 1097, 618, 619, 620, 622,
	623, 621, 624, 1158, 625, 0, 0, 626, 627, 628,
	686, 1181, 1218, 0, 630, 629, 631, 689, 632, 633,
	0, 0, 0, 0, 634, 635, 690, 636, 637, 638,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 0, 0, 0,
	1087, 1088, 0, 0, 0, 0, 0, 0, 0, 1120,
	1875, 0, 2729, 1118, 1136, 1108, 1109, 1110, 1106, 1107,
	1119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1160, 1124, 0, 0,
	0, 286, 287, 1200, 288, 289, 290, 291, 292, 293,
	640, 1173, 0, 294, 1180, 295, 1179, 0, 1190, 296,
	297, 298, 299, 300, 301, 1126, 1159, 1091, 302, 1220,
	1221, 647, 0, 303, 304, 1166, 0, 1147, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1201, 327, 328, 329,
	1150, 1148, 1149, 1156, 1152, 1151, 1155, 330, 331, 332,
	333, 334, 1183, 335, 337, 1177, 1176, 1096, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1168, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1102, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1191, 1192, 368, 1115,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1175,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1202,
	375, 376, 377, 1188, 1189, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1198, 0, 1125, 388,
	0, 389, 390, 391, 392, 393, 1161, 1162, 1165, 477,
	1204, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1203, 404,
	1170, 1171, 0, 1131, 0, 406, 407, 1205, 1163, 1206,
	408, 409, 410, 1207, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1199, 1208, 422, 423, 1209, 0, 424, 425, 426, 427,
	428, 429, 432, 1154, 1153, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1210, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1211,
	473, 461, 1093, 276, 1212, 474, 475, 1116, 1164, 476,
	1178, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 1213, 487, 1214,
	1193, 488, 489, 1103, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 1194, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	1174, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 1215, 542, 543, 544, 545, 546, 1104,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 0, 564, 565, 563, 566, 567,
	568, 1157, 569, 570, 552, 553, 571, 572, 1216, 573,
	574, 575, 576, 577, 578, 579, 1172, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 1219, 587,
	588, 589, 590, 1195, 594, 595, 0, 596, 597, 1090,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 1184, 1185, 1186, 1187, 0, 615,
	0, 607, 608, 609, 1196, 610, 1197, 1114, 611, 612,
	613, 614, 0, 616, 617, 0, 1097, 618, 619, 620,
	622, 623, 621, 624, 1158, 625, 0, 0, 626, 627,
	628, 686, 1181, 1218, 0, 630, 629, 631, 689, 632,
	633, 0, 0, 0, 0, 634, 635, 690, 636, 637,
	638, 1094, 0, 0, 2727, 0, 1136, 1108, 1109, 1110,
	1106, 1107, 1119, 0, 1089, 0, 0, 0, 0, 0,
	0, 1087, 1088, 277, 279, 278, 280, 281, 282, 283,
	1120, 284, 285, 0, 1118, 0, 0, 0, 1160, 1124,
	0, 0, 0, 286, 287, 1200, 288, 289, 290, 291,
	292, 293, 640, 1173, 0, 294, 1180, 295, 1179, 0,
	1190, 296, 297, 298, 299, 300, 301, 1126, 1159, 1091,
	302, 1220, 1221, 647, 0, 303, 304, 1166, 0, 1147,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1201, 327,
	328, 329, 1150, 1148, 1149, 1156, 1152, 1151, 1155, 330,
	331, 332, 333, 334, 1183, 335, 337, 1177, 1176, 1096,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1168, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 1102, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 1191, 1192,
	368, 1115, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 1175, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1202, 375, 376, 377, 1188, 1189, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 1198, 0,
	1125, 388, 0, 389, 390, 391, 392, 393, 1161, 1162,
	1165, 477, 1204, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	1203, 404, 1170, 1171, 0, 1131, 0, 406, 407, 1205,
	1163, 1206, 408, 409, 410, 1207, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 1199, 1208, 422, 423, 1209, 0, 424, 425,
	426, 427, 428, 429, 432, 1154, 1153, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1210, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 1211, 473, 461, 1093, 276, 1212, 474, 475, 1116,
	1164, 476, 1178, 478, 479, 0, 0, 480, 0, 0,
	0, 482, 483, 484, 0, 0, 485, 486, 669, 1213,
	487, 1214, 1193, 488, 489, 1103, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 0, 499, 500, 671, 501,
	502, 503, 672, 504, 505, 506, 1194, 507, 674, 508,
	509, 0, 510, 511, 0, 512, 513, 514, 515, 516,
	517, 518, 1174, 519, 520, 522, 521, 523, 0, 524,
	0, 525, 526, 527, 0, 0, 0, 0, 0, 528,
	0, 530, 531, 532, 533, 529, 534, 535, 536, 537,
	538, 0, 539, 540, 541, 1215, 542, 543, 544, 545,
	546, 1104, 547, 0, 548, 549, 555, 556, 557, 550,
	551, 558, 559, 560, 561, 562, 0, 564, 565, 563,
	566, 567, 568, 1157, 569, 570, 552, 553, 571, 572,
	1216, 573, 574, 575, 576, 577, 578, 579, 1172, 0,
	580, 0, 581, 582, 583, 585, 554, 586, 591, 592,
	1219, 587, 588, 589, 590, 1195, 594, 595, 0, 596,
	597, 1090, 593, 584, 0, 598, 599, 600, 601, 602,
	603, 604, 362, 605, 0, 606, 1184, 1185, 1186, 1187,
	0, 615, 0, 607, 608, 609, 1196, 610, 1197, 1114,
	611, 612, 613, 614, 0, 616, 617, 0, 1097, 618,
	619, 620, 622, 623, 621, 624, 1158, 625, 0, 0,
	626, 627, 628, 686, 1181, 1218, 0, 630, 629, 631,
	689, 632, 633, 0, 0, 0, 0, 634, 635, 690,
	636, 637, 638, 1094, 0, 0, 2715, 0, 1136, 1108,
	1109, 1110, 1106, 1107, 1119, 0, 1089, 0, 0, 0,
	0, 0, 0, 1087, 1088, 277, 279, 278, 280, 281,
	282, 283, 1120, 284, 285, 0, 1118, 0, 0, 0,
	1160, 1124, 0, 0, 0, 286, 287, 1200, 288, 289,
	290, 291, 292, 293, 640, 1173, 0, 294, 1180, 295,
	1179, 0, 1190, 296, 297, 298, 299, 300, 301, 1126,
	1159, 1091, 302, 1220, 1221, 647, 0, 303, 304, 1166,
	0, 1147, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151,
	1155, 330, 331, 332, 333, 334, 1183, 335, 337, 1177,
	1176, 1096, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1168, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 1102,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1191, 1192, 368, 1115, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 1175, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1202, 375, 376, 377, 1188, 1189, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1198, 0, 1125, 388, 0, 389, 390, 391, 392, 393,
	1161, 1162, 1165, 477, 1204, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1203, 404, 1170, 1171, 0, 1131, 0, 406,
	407, 1205, 1163, 1206, 408, 409, 410, 1207, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 1199, 1208, 422, 423, 1209, 0,
	424, 425, 426, 427, 428, 429, 432, 1154, 1153, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1210, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1211, 473, 461, 1093, 276, 1212, 474,
	475, 1116, 1164, 476, 1178, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 1213, 487, 1214, 1193, 488, 489, 1103, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 1194, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 1174, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 1215, 542, 543,
	544, 545, 546, 1104, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 1157, 569, 570, 552, 553,
	571, 572, 1216, 573, 574, 575, 576, 577, 578, 579,
	1172, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 1219, 587, 588, 589, 590, 1195, 594, 595,
	0, 596, 597, 1090, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 1184, 1185,
	1186, 1187, 0, 615, 0, 607, 608, 609, 1196, 610,
	1197, 1114, 611, 612, 613, 614, 0, 616, 617, 0,
	1097, 618, 619, 620, 622, 623, 621, 624, 1158, 625,
	0, 0, 626, 627, 628, 686, 1181, 1218, 0, 630,
	629, 631, 689, 632, 633, 0, 0, 0, 0, 634,
	635, 690, 636, 637, 638, 1094, 0, 0, 2703, 0,
	1136, 1108, 1109, 1110, 1106, 1107, 1119, 0, 1089, 0,
	0, 0, 0, 0, 0, 1087, 1088, 277, 279, 278,
	280, 281, 282, 283, 1120, 284, 285, 0, 1118, 0,
	0, 0, 1160, 1124, 0, 0, 0, 286, 287, 1200,
	288, 289, 290, 291, 292, 293, 640, 1173, 0, 294,
	1180, 295, 1179, 0, 1190, 296, 297, 298, 299, 300,
	301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0, 303,
	304, 1166, 0, 1147, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1201, 327, 328, 329, 1150, 1148, 1149, 1156,
	1152, 1151, 1155, 330, 331, 332, 333, 334, 1183, 335,
	337, 1177, 1176, 1096, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1168, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 1102, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1191, 1192, 368, 1115, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 1175, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1202, 375, 376, 377, 1188,
	1189, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1198, 0, 1125, 388, 0, 389, 390, 391,
	392, 393, 1161, 1162, 1165, 477, 1204, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1203, 404, 1170, 1171, 0, 1131,
	0, 406, 407, 1205, 1163, 1206, 408, 409, 410, 1207,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 1199, 1208, 422, 423,
	1209, 0, 424, 425, 426, 427, 428, 429, 432, 1154,
	1153, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1210, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1211, 473, 461, 1093, 276,
	1212, 474, 475, 1116, 1164, 476, 1178, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 1213, 487, 1214, 1193, 488, 489, 1103,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	1194, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 1174, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 1215,
	542, 543, 544, 545, 546, 1104, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 1157, 569, 570,
	552, 553, 571, 572, 1216, 573, 574, 575, 576, 577,
	578, 579, 1172, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 1219, 587, 588, 589, 590, 1195,
	594, 595, 0, 596, 597, 1090, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	1184, 1185, 1186, 1187, 0, 615, 0, 607, 608, 609,
	1196, 610, 1197, 1114, 611, 612, 613, 614, 0, 616,
	617, 0, 1097, 618, 619, 620, 622, 623, 621, 624,
	1158, 625, 0, 0, 626, 627, 628, 686, 1181, 1218,
	0, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 1094, 0, 0,
	2701, 0, 2692, 2699, 1109, 1110, 1106, 1107, 1119, 0,
	1089, 0, 0, 0, 0, 0, 0, 1087, 1088, 277,
	279, 278, 280, 281, 282, 283, 1120, 284, 285, 0,
	1118, 0, 0, 0, 1160, 1124, 0, 0, 0, 286,
	287, 1200, 288, 289, 290, 291, 292, 293, 640, 1173,
	0, 294, 1180, 295, 1179, 0, 1190, 296, 297, 298,
	299, 300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647,
	0, 303, 304, 1166, 0, 1147, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1201, 327, 328, 329, 1150, 1148,
	1149, 1156, 1152, 1151, 1155, 330, 331, 332, 333, 334,
	1183, 2695, 337, 1177, 1176, 1096, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1168, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 1102, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 1191, 1192, 368, 1115, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 1175, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1202, 375, 376,
	377, 1188, 1189, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 1198, 0, 1125, 388, 0, 389,
	390, 391, 2696, 393, 1161, 1162, 1165, 477, 1204, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 1203, 404, 1170, 1171,
	0, 1131, 0, 406, 407, 1205, 1163, 1206, 408, 409,
	410, 1207, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 1199, 1208,
	422, 423, 1209, 0, 424, 425, 426, 427, 428, 429,
	432, 1154, 1153, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 2697, 442, 2694, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1210, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 1211, 473, 461,
	1093, 276, 1212, 474, 475, 1116, 1164, 476, 1178, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 1213, 487, 1214, 1193, 488,
	489, 1103, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 1194, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 1174, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 1215, 542, 543, 544, 545, 546, 1104, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 2698, 0, 564, 565, 563, 566, 567, 568, 1157,
	569, 570, 552, 553, 571, 572, 1216, 573, 574, 575,
	576, 577, 578, 579, 1172, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 1219, 587, 588, 589,
	590, 1195, 594, 595, 0, 596, 597, 1090, 593, 584,
	0, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 1184, 1185, 1186, 1187, 0, 615, 0, 607,
	608, 609, 1196, 610, 1197, 1114, 611, 612, 613, 614,
	0, 616, 617, 0, 1097, 618, 619, 620, 622, 623,
	621, 624, 1158, 625, 0, 0, 626, 627, 628, 686,
	1181, 1218, 0, 630, 629, 631, 689, 632, 633, 0,
	0, 0, 0, 634, 635, 690, 636, 2693, 638, 1094,
	0, 0, 2689, 0, 2692, 2699, 1109, 1110, 1106, 1107,
	1119, 0, 1089, 0, 0, 0, 0, 0, 0, 1087,
	1088, 277, 279, 278, 280, 281, 282, 283, 1120, 284,
	285, 0, 1118, 0, 0, 0, 1160, 1124, 0, 0,
	0, 286, 287, 1200, 288, 289, 290, 291, 292, 293,
	640, 1173, 0, 294, 1180, 295, 1179, 0, 1190, 296,
	297, 298, 299, 300, 301, 1126, 1159, 1091, 302, 1220,
	1221, 647, 0, 303, 304, 1166, 0, 1147, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1201, 327, 328, 329,
	1150, 1148, 1149, 1156, 1152, 1151, 1155, 330, 331, 332,
	333, 334, 1183, 2695, 337, 1177, 1176, 1096, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1168, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1102, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1191, 1192, 368, 1115,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1175,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1202,
	375, 376, 377, 1188, 1189, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1198, 0, 1125, 388,
	0, 389, 390, 391, 2696, 393, 1161, 1162, 1165, 477,
	1204, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1203, 404,
	1170, 1171, 0, 1131, 0, 406, 407, 1205, 1163, 1206,
	408, 409, 410, 1207, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1199, 1208, 422, 423, 1209, 0, 424, 425, 426, 427,
	428, 429, 432, 1154, 1153, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 2697, 442, 2694, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1210, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1211,
	473, 461, 1093, 276, 1212, 474, 475, 1116, 1164, 476,
	1178, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 1213, 487, 1214,
	1193, 488, 489, 1103, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 1194, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	1174, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 1215, 542, 543, 544, 545, 546, 1104,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 2698, 0, 564, 565, 563, 566, 567,
	568, 1157, 569, 570, 552, 553, 571, 572, 1216, 573,
	574, 575, 576, 577, 578, 579, 1172, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 1219, 587,
	588, 589, 590, 1195, 594, 595, 0, 596, 597, 1090,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 1184, 1185, 1186, 1187, 0, 615,
	0, 607, 608, 609, 1196, 610, 1197, 1114, 611, 612,
	613, 614, 0, 616, 617, 0, 1097, 618, 619, 620,
	622, 623, 621, 624, 1158, 625, 0, 0, 626, 627,
	628, 686, 1181, 1218, 0, 630, 629, 631, 689, 632,
	633, 0, 0, 0, 0, 634, 635, 690, 636, 2693,
	638, 1094, 0, 0, 0, 0, 1136, 1108, 1109, 1110,
	1106, 1107, 1119, 0, 1089, 0, 0, 0, 0, 0,
	0, 1087, 1088, 277, 279, 278, 280, 281, 282, 283,
	1120, 284, 285, 0, 1118, 0, 0, 0, 1160, 1124,
	0, 0, 0, 286, 287, 1200, 288, 289, 290, 291,
	292, 293, 640, 1173, 0, 294, 1180, 295, 1179, 0,
	1190, 296, 297, 298, 299, 300, 301, 1126, 1159, 1091,
	302, 1220, 1221, 647, 0, 303, 304, 1166, 0, 1147,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1201, 327,
	328, 329, 1150, 1148, 1149, 1156, 1152, 1151, 1155, 330,
	331, 332, 333, 334, 1183, 335, 337, 1177, 1176, 1096,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1168, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 1102, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 1191, 1192,
	368, 1115, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 1175, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1202, 375, 376, 377, 1188, 1189, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 1198, 0,
	1125, 388, 0, 389, 390, 391, 392, 393, 1161, 1162,
	1165, 477, 1204, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	1203, 404, 1170, 1171, 0, 1131, 0, 406, 407, 1205,
	1163, 1206, 408, 409, 410, 1207, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 1199, 1208, 422, 423, 1209, 0, 424, 425,
	426, 427, 428, 429, 432, 1154, 1153, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1210, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 1211, 473, 461, 1093, 276, 1212, 474, 475, 1116,
	1164, 476, 1178, 478, 479, 0, 0, 480, 0, 0,
	0, 482, 483, 484, 0, 0, 485, 486, 669, 1213,
	487, 1214, 1193, 488, 489, 1103, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 0, 499, 500, 671, 501,
	502, 503, 672, 504, 505, 506, 1194, 507, 674, 508,
	509, 0, 510, 511, 0, 512, 513, 514, 515, 516,
	517, 518, 1174, 519, 520, 522, 521, 523, 0, 524,
	0, 525, 526, 527, 0, 0, 0, 0, 0, 528,
	0, 530, 531, 532, 533, 529, 534, 535, 536, 537,
	538, 0, 539, 540, 541, 1215, 542, 543, 544, 545,
	546, 1104, 547, 0, 548, 549, 555, 556, 557, 550,
	551, 558, 559, 560, 561, 562, 0, 564, 565, 563,
	566, 567, 568, 1157, 569, 570, 552, 553, 571, 572,
	1216, 573, 574, 575, 576, 577, 578, 579, 1172, 0,
	580, 0, 581, 582, 583, 585, 554, 586, 591, 592,
	1219, 587, 588, 589, 590, 1195, 594, 595, 0, 596,
	597, 1090, 593, 584, 0, 598, 599, 600, 601, 602,
	603, 604, 362, 605, 0, 606, 1184, 1185, 1186, 1187,
	0, 615, 0, 607, 608, 609, 1196, 610, 1197, 1114,
	611, 612, 613, 614, 0, 616, 617, 0, 1097, 618,
	619, 620, 622, 623, 621, 624, 1158, 625, 0, 0,
	626, 627, 628, 686, 1181, 1218, 0, 630, 629, 631,
	689, 632, 633, 0, 0, 0, 0, 634, 635, 690,
	636, 637, 638, 1094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 0,
	0, 0, 0, 1087, 1088, 0, 0, 0, 0, 0,
	1883, 0, 1120, 0, 0, 0, 1118, 1136, 1108, 1109,
	1110, 1106, 1107, 1119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 2444, 284, 285, 0, 0, 0, 0, 0, 1160,
	1124, 0, 0, 0, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 1173, 0, 294, 1180, 295, 1179,
	0, 1190, 296, 297, 298, 299, 300, 301, 1126, 1159,
	1091, 302, 1220, 1221, 647, 0, 303, 304, 1166, 0,
	1147, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1201,
	327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151, 1155,
	330, 331, 332, 333, 334, 1183, 335, 337, 1177, 1176,
	1096, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1168, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1102, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1191,
	1192, 368, 1115, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1175, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1202, 375, 376, 377, 1188, 1189, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1198,
	0, 1125, 388, 0, 389, 390, 391, 392, 393, 1161,
	1162, 1165, 477, 1204, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1203, 404, 1170, 1171, 0, 1131, 0, 406, 407,
	1205, 1163, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1199, 1208, 422, 423, 1209, 0, 424,
	425, 426, 427, 428, 429, 432, 1154, 1153, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 1093, 276, 1212, 474, 475,
	1116, 1164, 476, 1178, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	1213, 487, 1214, 1193, 488, 489, 1103, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 1194, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 1174, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 1104, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 1157, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 1172,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 1219, 587, 588, 589, 590, 1195, 594, 595, 0,
	596, 597, 1090, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 1184, 1185, 1186,
	1187, 0, 615, 0, 607, 608, 609, 1196, 610, 1197,
	1114, 611, 612, 613, 614, 0, 616, 617, 0, 1097,
	618, 619, 620, 622, 623, 621, 624, 1158, 625, 0,
	0, 626, 627, 628, 686, 1181, 1218, 0, 630, 629,
	631, 689, 632, 633, 0, 0, 0, 0, 634, 635,
	690, 636, 637, 638, 1094, 0, 0, 2408, 0, 1136,
	1108, 1109, 1110, 1106, 1107, 1119, 0, 1089, 0, 0,
	0, 0, 0, 0, 1087, 1088, 277, 279, 278, 280,
	281, 282, 283, 1120, 284, 285, 0, 1118, 0, 0,
	0, 1160, 1124, 0, 0, 0, 286, 287, 1200, 288,
	289, 290, 291, 292, 293, 640, 1173, 0, 294, 1180,
	295, 1179, 0, 1190, 296, 297, 298, 299, 300, 301,
	1126, 1159, 1091, 302, 1220, 1221, 647, 0, 303, 304,
	1166, 0, 1147, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152,
	1151, 1155, 330, 331, 332, 333, 334, 1183, 335, 337,
	1177, 1176, 1096, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1168, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1102, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1191, 1192, 368, 1115, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1175, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1202, 375, 376, 377, 1188, 1189,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1198, 0, 1125, 388, 0, 389, 390, 391, 392,
	393, 1161, 1162, 1165, 477, 1204, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1203, 404, 1170, 1171, 0, 1131, 0,
	406, 407, 1205, 1163, 1206, 408, 409, 410, 1207, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1199, 1208, 422, 423, 1209,
	0, 424, 425, 426, 427, 428, 429, 432, 1154, 1153,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1210,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1211, 473, 461, 1093, 276, 1212,
	474, 475, 1116, 1164, 476, 1178, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 1213, 487, 1214, 1193, 488, 489, 1103, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 1194,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 1174, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 1215, 542,
	543, 544, 545, 546, 1104, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 1157, 569, 570, 552,
	553, 571, 572, 1216, 573, 574, 575, 576, 577, 578,
	579, 1172, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 1219, 587, 588, 589, 590, 1195, 594,
	595, 0, 596, 597, 1090, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 1184,
	1185, 1186, 1187, 0, 615, 0, 607, 608, 609, 1196,
	610, 1197, 1114, 611, 612, 613, 614, 0, 616, 617,
	0, 1097, 618, 619, 620, 622, 623, 621, 624, 1158,
	625, 0, 0, 626, 627, 628, 686, 1181, 1218, 0,
	630, 629, 631, 689, 632, 633, 0, 0, 0, 0,
	634, 635, 690, 636, 637, 638, 1094, 0, 0, 2383,
	0, 1136, 1108, 1109, 1110, 1106, 1107, 1119, 0, 1089,
	0, 0, 0, 0, 0, 0, 1087, 1088, 277, 279,
	278, 280, 281, 282, 283, 1120, 284, 285, 0, 1118,
	0, 0, 0, 1160, 1124, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 1173, 0,
	294, 1180, 295, 1179, 0, 1190, 296, 297, 298, 299,
	300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0,
	303, 304, 1166, 0, 1147, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 1150, 1148, 1149,
	1156, 1152, 1151, 1155, 330, 331, 332, 333, 334, 1183,
	335, 337, 1177, 1176, 1096, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1168,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1102, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1191, 1192, 368, 1115, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1175, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	1188, 1189, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1198, 0, 1125, 388, 0, 389, 390,
	391, 392, 393, 1161, 1162, 1165, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1203, 404, 1170, 1171, 0,
	1131, 0, 406, 407, 1205, 1163, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1199, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	1154, 1153, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 1093,
	276, 1212, 474, 475, 1116, 1164, 476, 1178, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 1193, 488, 489,
	1103, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 1194, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 1174, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 1104, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 1157, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 1172, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 1219, 587, 588, 589, 590,
	1195, 594, 595, 0, 596, 597, 1090, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 1184, 1185, 1186, 1187, 0, 615, 0, 607, 608,
	609, 1196, 610, 1197, 1114, 611, 612, 613, 614, 0,
	616, 617, 0, 1097, 618, 619, 620, 622, 623, 621,
	624, 1158, 625, 0, 0, 626, 627, 628, 686, 1181,
	1218, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 1094, 0,
	0, 1723, 0, 1136, 1108, 1109, 1110, 1106, 1107, 1119,
	0, 1089, 0, 0, 0, 0, 0, 0, 1087, 1088,
	277, 279, 278, 280, 281, 282, 283, 1120, 284, 285,
	0, 1118, 0, 0, 0, 1160, 1124, 0, 0, 0,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	1173, 0, 294, 1180, 295, 1179, 0, 1190, 296, 297,
	298, 299, 300, 301, 1126, 1159, 1091, 302, 1220, 1221,
	647, 0, 303, 304, 1166, 0, 1147, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1201, 327, 328, 329, 1150,
	1148, 1149, 1156, 1152, 1151, 1155, 330, 331, 332, 333,
	334, 1183, 335, 337, 1177, 1176, 1096, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1168, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1102, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1191, 1192, 368, 1115, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1175, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1202, 375,
	376, 377, 1188, 1189, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1198, 0, 1125, 388, 0,
	389, 390, 391, 392, 393, 1161, 1162, 1165, 477, 1204,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1203, 404, 1170,
	1171, 0, 1131, 0, 406, 407, 1205, 1163, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1199,
	1208, 422, 423, 1209, 0, 424, 425, 426, 427, 428,
	429, 432, 1154, 1153, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 1093, 276, 1212, 474, 475, 1116, 1164, 476, 1178,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 1213, 487, 1214, 1193,
	488, 489, 1103, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 1194, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 1174,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 1104, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	1157, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 1172, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 1219, 587, 588,
	589, 590, 1195, 594, 595, 0, 596, 597, 1090, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 1184, 1185, 1186, 1187, 0, 615, 0,
	607, 608, 609, 1196, 610, 1197, 1114, 611, 612, 613,
	614, 0, 616, 617, 0, 1097, 618, 619, 620, 622,
	623, 621, 624, 1158, 625, 0, 0, 626, 627, 628,
	686, 1181, 1218, 0, 630, 629, 631, 689, 632, 633,
	0, 0, 0, 0, 634, 635, 690, 636, 637, 638,
	1094, 0, 0, 1652, 0, 1136, 1108, 1109, 1110, 1106,
	1107, 1119, 0, 1089, 0, 0, 0, 0, 0, 0,
	1087, 1088, 277, 279, 278, 280, 281, 282, 283, 1120,
	284, 285, 0, 1118, 0, 0, 0, 1160, 1124, 0,
	0, 0, 286, 287, 1200, 288, 289, 290, 291, 292,
	293, 640, 1173, 0, 294, 1180, 295, 1179, 0, 1190,
	296, 297, 298, 299, 300, 301, 1126, 1159, 1091, 302,
	1220, 1221, 647, 0, 303, 304, 1166, 0, 1147, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1201, 327, 328,
	329, 1150, 1148, 1149, 1156, 1152, 1151, 1155, 330, 331,
	332, 333, 334, 1183, 335, 337, 1177, 1176, 1096, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1168, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1102, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1191, 1192, 368,
	1115, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1175, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1202, 375, 376, 377, 1188, 1189, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1198, 0, 1125,
	388, 0, 389, 390, 391, 392, 393, 1161, 1162, 1165,
	477, 1204, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1203,
	404, 1170, 1171, 0, 1131, 0, 406, 407, 1205, 1163,
	1206, 408, 409, 410, 1207, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1199, 1208, 422, 423, 1209, 0, 424, 425, 426,
	427, 428, 429, 432, 1154, 1153, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1210, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1211, 473, 461, 1093, 276, 1212, 474, 475, 1116, 1164,
	476, 1178, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 1213, 487,
	1214, 1193, 488, 489, 1103, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 1194, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 1174, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 1215, 542, 543, 544, 545, 546,
	1104, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 1157, 569, 570, 552, 553, 571, 572, 1216,
	573, 574, 575, 576, 577, 578, 579, 1172, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 1219,
	587, 588, 589, 590, 1195, 594, 595, 0, 596, 597,
	1090, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 1184, 1185, 1186, 1187, 0,
	615, 0, 607, 608, 609, 1196, 610, 1197, 1114, 611,
	612, 613, 614, 0, 616, 617, 0, 1097, 618, 619,
	620, 622, 623, 621, 624, 1158, 625, 0, 0, 626,
	627, 628, 686, 1181, 1218, 0, 630, 629, 631, 689,
	632, 633, 0, 0, 0, 0, 634, 635, 690, 636,
	637, 638, 1094, 0, 0, 1647, 0, 1136, 1108, 1109,
	1110, 1106, 1107, 1119, 0, 1089, 0, 0, 0, 0,
	0, 0, 1087, 1088, 277, 279, 278, 280, 281, 282,
	283, 1120, 284, 285, 0, 1118, 0, 0, 0, 1160,
	1124, 0, 0, 0, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 1173, 0, 294, 1180, 295, 1179,
	0, 1190, 296, 297, 298, 299, 300, 301, 1126, 1159,
	1091, 302, 1220, 1221, 647, 0, 303, 304, 1166, 0,
	1147, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1201,
	327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151, 1155,
	330, 331, 332, 333, 334, 1183, 335, 337, 1177, 1176,
	1096, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1168, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1102, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1191,
	1192, 368, 1115, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1175, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1202, 375, 376, 377, 1188, 1189, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1198,
	0, 1125, 388, 0, 389, 390, 391, 392, 393, 1161,
	1162, 1165, 477, 1204, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1203, 404, 1170, 1171, 0, 1131, 0, 406, 407,
	1205, 1163, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1199, 1208, 422, 423, 1209, 0, 424,
	425, 426, 427, 428, 429, 432, 1154, 1153, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 1093, 276, 1212, 474, 475,
	1116, 1164, 476, 1178, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	1213, 487, 1214, 1193, 488, 489, 1103, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 1194, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 1174, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 1104, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 1157, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 1172,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 1219, 587, 588, 589, 590, 1195, 594, 595, 0,
	596, 597, 1090, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 1184, 1185, 1186,
	1187, 0, 615, 0, 607, 608, 609, 1196, 610, 1197,
	1114, 611, 612, 613, 614, 0, 616, 617, 0, 1097,
	618, 619, 620, 622, 623, 621, 624, 1158, 625, 0,
	0, 626, 627, 628, 686, 1181, 1218, 0, 630, 629,
	631, 689, 632, 633, 0, 0, 0, 0, 634, 635,
	690, 636, 637, 638, 1094, 0, 0, 1638, 0, 1136,
	1108, 1109, 1110, 1106, 1107, 1119, 0, 1089, 0, 0,
	0, 0, 0, 0, 1087, 1088, 277, 279, 278, 280,
	281, 282, 283, 1120, 284, 285, 0, 1118, 0, 0,
	0, 1160, 1124, 0, 0, 0, 286, 287, 1200, 288,
	289, 290, 291, 292, 293, 640, 1173, 0, 294, 1180,
	295, 1179, 0, 1190, 296, 297, 298, 299, 300, 301,
	1126, 1159, 1091, 302, 1220, 1221, 647, 0, 303, 304,
	1166, 0, 1147, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152,
	1151, 1155, 330, 331, 332, 333, 334, 1183, 335, 337,
	1177, 1176, 1096, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1168, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1102, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1191, 1192, 368, 1115, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1175, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1202, 375, 376, 377, 1188, 1189,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1198, 0, 1125, 388, 0, 389, 390, 391, 392,
	393, 1161, 1162, 1165, 477, 1204, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1203, 404, 1170, 1171, 0, 1131, 0,
	406, 407, 1205, 1163, 1206, 408, 409, 410, 1207, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1199, 1208, 422, 423, 1209,
	0, 424, 425, 426, 427, 428, 429, 432, 1154, 1153,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1210,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1211, 473, 461, 1093, 276, 1212,
	474, 475, 1116, 1164, 476, 1178, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 1213, 487, 1214, 1193, 488, 489, 1103, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 1194,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 1174, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 1215, 542,
	543, 544, 545, 546, 1104, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 1157, 569, 570, 552,
	553, 571, 572, 1216, 573, 574, 575, 576, 577, 578,
	579, 1172, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 1219, 587, 588, 589, 590, 1195, 594,
	595, 0, 596, 597, 1090, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 1184,
	1185, 1186, 1187, 0, 615, 0, 607, 608, 609, 1196,
	610, 1197, 1114, 611, 612, 613, 614, 0, 616, 617,
	0, 1097, 618, 619, 620, 622, 623, 621, 624, 1158,
	625, 0, 0, 626, 627, 628, 686, 1181, 1218, 0,
	630, 629, 631, 689, 632, 633, 0, 0, 0, 0,
	634, 635, 690, 636, 637, 638, 1094, 0, 0, 1633,
	0, 1136, 1108, 1109, 1110, 1106, 1107, 1119, 0, 1089,
	0, 0, 0, 0, 0, 0, 1087, 1088, 277, 279,
	278, 280, 281, 282, 283, 1120, 284, 285, 0, 1118,
	0, 0, 0, 1160, 1124, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 1173, 0,
	294, 1180, 295, 1179, 0, 1190, 296, 297, 298, 299,
	300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0,
	303, 304, 1166, 0, 1147, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 1150, 1148, 1149,
	1156, 1152, 1151, 1155, 330, 331, 332, 333, 334, 1183,
	335, 337, 1177, 1176, 1096, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1168,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1102, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1191, 1192, 368, 1115, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1175, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	1188, 1189, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1198, 0, 1125, 388, 0, 389, 390,
	391, 392, 393, 1161, 1162, 1165, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1203, 404, 1170, 1171, 0,
	1131, 0, 406, 407, 1205, 1163, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1199, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	1154, 1153, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 1093,
	276, 1212, 474, 475, 1116, 1164, 476, 1178, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 1193, 488, 489,
	1103, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 1194, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 1174, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 1104, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 1157, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 1172, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 1219, 587, 588, 589, 590,
	1195, 594, 595, 0, 596, 597, 1090, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 1184, 1185, 1186, 1187, 0, 615, 0, 607, 608,
	609, 1196, 610, 1197, 1114, 611, 612, 613, 614, 0,
	616, 617, 0, 1097, 618, 619, 620, 622, 623, 621,
	624, 1158, 625, 0, 0, 626, 627, 628, 686, 1181,
	1218, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 1094, 0,
	0, 1544, 0, 1136, 1108, 1109, 1110, 1106, 1107, 1119,
	0, 1089, 0, 0, 0, 0, 0, 0, 1087, 1088,
	277, 279, 278, 280, 281, 282, 283, 1120, 284, 285,
	0, 1118, 0, 0, 0, 1160, 1124, 0, 0, 0,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	1173, 0, 294, 1180, 295, 1179, 0, 1190, 296, 297,
	298, 299, 300, 301, 1126, 1159, 1091, 302, 1220, 1221,
	647, 0, 303, 304, 1166, 0, 1147, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1201, 327, 328, 329, 1150,
	1148, 1149, 1156, 1152, 1151, 1155, 330, 331, 332, 333,
	334, 1183, 335, 337, 1177, 1176, 1096, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1168, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1102, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1191, 1192, 368, 1115, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1175, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1202, 375,
	376, 377, 1188, 1189, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1198, 0, 1125, 388, 0,
	389, 390, 391, 392, 393, 1543, 1162, 1165, 477, 1204,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1203, 404, 1170,
	1171, 0, 1131, 0, 406, 407, 1205, 1163, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1199,
	1208, 422, 423, 1209, 0, 424, 425, 426, 427, 428,
	429, 432, 1154, 1153, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 1093, 276, 1212, 474, 475, 1116, 1164, 476, 1178,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 1213, 487, 1214, 1193,
	488, 489, 1103, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 1194, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 1174,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 1104, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	1157, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 1172, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 1219, 587, 588,
	589, 590, 1195, 594, 595, 0, 596, 597, 1090, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 1184, 1185, 1186, 1187, 0, 615, 0,
	607, 608, 609, 1196, 610, 1197, 1114, 611, 612, 613,
	614, 0, 616, 617, 0, 1097, 618, 619, 620, 622,
	623, 621, 624, 1158, 625, 0, 0, 626, 627, 628,
	686, 1181, 1218, 0, 630, 629, 631, 689, 632, 633,
	0, 0, 0, 0, 634, 635, 690, 636, 637, 638,
	1094, 0, 0, 1538, 0, 1136, 1108, 1109, 1110, 1106,
	1107, 1119, 0, 1089, 0, 0, 0, 0, 0, 0,
	1087, 1088, 277, 279, 278, 280, 281, 282, 283, 1120,
	284, 285, 0, 1118, 0, 0, 0, 1160, 1124, 0,
	0, 0, 286, 287, 1200, 288, 289, 290, 291, 292,
	293, 640, 1173, 0, 294, 1180, 295, 1179, 0, 1190,
	296, 297, 298, 299, 300, 301, 1126, 1159, 1091, 302,
	1220, 1221, 647, 0, 303, 304, 1166, 0, 1147, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1201, 327, 328,
	329, 1150, 1148, 1149, 1156, 1152, 1151, 1155, 330, 331,
	332, 333, 334, 1183, 335, 337, 1177, 1176, 1096, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1168, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1102, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1191, 1192, 368,
	1115, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1175, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1202, 375, 376, 377, 1188, 1189, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1198, 0, 1125,
	388, 0, 389, 390, 391, 392, 393, 1537, 1162, 1165,
	477, 1204, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1203,
	404, 1170, 1171, 0, 1131, 0, 406, 407, 1205, 1163,
	1206, 408, 409, 410, 1207, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1199, 1208, 422, 423, 1209, 0, 424, 425, 426,
	427, 428, 429, 432, 1154, 1153, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1210, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1211, 473, 461, 1093, 276, 1212, 474, 475, 1116, 1164,
	476, 1178, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 1213, 487,
	1214, 1193, 488, 489, 1103, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 1194, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 1174, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 1215, 542, 543, 544, 545, 546,
	1104, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 1157, 569, 570, 552, 553, 571, 572, 1216,
	573, 574, 575, 576, 577, 578, 579, 1172, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 1219,
	587, 588, 589, 590, 1195, 594, 595, 0, 596, 597,
	1090, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 1184, 1185, 1186, 1187, 0,
	615, 0, 607, 608, 609, 1196, 610, 1197, 1114, 611,
	612, 613, 614, 0, 616, 617, 0, 1097, 618, 619,
	620, 622, 623, 621, 624, 1158, 625, 0, 0, 626,
	627, 628, 686, 1181, 1218, 0, 630, 629, 631, 689,
	632, 633, 0, 0, 0, 0, 634, 635, 690, 636,
	637, 638, 1094, 0, 0, 1531, 0, 1136, 1108, 1109,
	1110, 1106, 1107, 1119, 0, 1089, 0, 0, 0, 0,
	0, 0, 1087, 1088, 277, 279, 278, 280, 281, 282,
	283, 1120, 284, 285, 0, 1118, 0, 0, 0, 1160,
	1124, 0, 0, 0, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 1173, 0, 294, 1180, 295, 1179,
	0, 1190, 296, 297, 298, 299, 300, 301, 1126, 1159,
	1091, 302, 1220, 1221, 647, 0, 303, 304, 1166, 0,
	1147, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1201,
	327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151, 1155,
	330, 331, 332, 333, 334, 1183, 335, 337, 1177, 1176,
	1096, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1168, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1102, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1191,
	1192, 368, 1115, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1175, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1202, 375, 376, 377, 1188, 1189, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1198,
	0, 1125, 388, 0, 389, 390, 391, 392, 393, 1161,
	1162, 1165, 477, 1204, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1203, 404, 1170, 1171, 0, 1131, 0, 406, 407,
	1205, 1163, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1199, 1208, 422, 423, 1209, 0, 424,
	425, 426, 427, 428, 429, 432, 1154, 1153, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 1093, 276, 1212, 474, 475,
	1116, 1164, 476, 1178, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	1213, 487, 1214, 1193, 488, 489, 1103, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 1194, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 1174, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 1104, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 1157, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 1172,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 1219, 587, 588, 589, 590, 1195, 594, 595, 0,
	596, 597, 1090, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 1184, 1185, 1186,
	1187, 0, 615, 0, 607, 608, 609, 1196, 610, 1197,
	1114, 611, 612, 613, 614, 0, 616, 617, 0, 1097,
	618, 619, 620, 622, 623, 621, 624, 1158, 625, 0,
	0, 626, 627, 628, 686, 1181, 1218, 0, 630, 629,
	631, 689, 632, 633, 0, 0, 0, 0, 634, 635,
	690, 636, 637, 638, 1094, 0, 0, 1347, 0, 1136,
	1108, 1109, 1110, 1106, 1107, 1119, 0, 1089, 0, 0,
	0, 0, 0, 0, 1087, 1088, 277, 279, 278, 280,
	281, 282, 283, 1120, 284, 285, 0, 1118, 0, 0,
	0, 1160, 1124, 0, 0, 0, 286, 287, 1200, 288,
	289, 290, 291, 292, 293, 640, 1173, 0, 294, 1180,
	295, 1179, 0, 1190, 296, 297, 298, 299, 300, 301,
	1126, 1159, 1091, 302, 1220, 1221, 647, 0, 303, 304,
	1166, 0, 1147, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152,
	1151, 1155, 330, 331, 332, 333, 334, 1183, 335, 337,
	1177, 1176, 1096, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1168, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1102, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1191, 1192, 368, 1115, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1175, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1202, 375, 376, 377, 1188, 1189,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1198, 0, 1125, 388, 0, 389, 390, 391, 392,
	393, 1161, 1162, 1165, 477, 1204, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1203, 404, 1170, 1171, 0, 1131, 0,
	406, 407, 1205, 1163, 1206, 408, 409, 410, 1207, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1199, 1208, 422, 423, 1209,
	0, 424, 425, 426, 427, 428, 429, 432, 1154, 1153,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1210,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1211, 473, 461, 1093, 276, 1212,
	474, 475, 1116, 1164, 476, 1178, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 1213, 487, 1214, 1193, 488, 489, 1103, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 1194,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 1174, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 1215, 542,
	543, 544, 545, 546, 1104, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 1157, 569, 570, 552,
	553, 571, 572, 1216, 573, 574, 575, 576, 577, 578,
	579, 1172, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 1219, 587, 588, 589, 590, 1195, 594,
	595, 0, 596, 597, 1090, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 1184,
	1185, 1186, 1187, 0, 615, 0, 607, 608, 609, 1196,
	610, 1197, 1114, 611, 612, 613, 614, 0, 616, 617,
	0, 1097, 618, 619, 620, 622, 623, 621, 624, 1158,
	625, 0, 0, 626, 627, 628, 686, 1181, 1218, 0,
	630, 629, 631, 689, 632, 633, 0, 0, 0, 0,
	634, 635, 690, 636, 637, 638, 1094, 0, 0, 0,
	0, 1136, 1108, 1109, 1110, 1106, 1107, 1119, 0, 1089,
	0, 0, 0, 0, 0, 0, 1087, 1088, 277, 279,
	278, 280, 281, 282, 283, 1120, 284, 285, 0, 1118,
	0, 0, 0, 1160, 1124, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 1173, 0,
	294, 1180, 295, 1179, 0, 1190, 296, 297, 298, 299,
	300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0,
	303, 304, 1166, 0, 1147, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 1150, 1148, 1149,
	1156, 1152, 1151, 1155, 330, 331, 332, 333, 334, 1183,
	335, 337, 1177, 1176, 1096, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1168,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1102, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1191, 1192, 368, 1115, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1175, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	1188, 1189, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1198, 0, 1125, 388, 0, 389, 390,
	391, 392, 393, 1161, 1162, 1165, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1203, 404, 1170, 1171, 0,
	1131, 0, 406, 407, 1205, 1163, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1199, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	1154, 1153, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 1093,
	276, 1212, 474, 475, 1116, 1164, 476, 1178, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 1193, 488, 489,
	1103, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 1194, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 1174, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 1104, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 1157, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 1172, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 1219, 587, 588, 589, 590,
	1195, 594, 595, 0, 596, 597, 1090, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 1184, 1185, 1186, 1187, 0, 615, 0, 607, 608,
	609, 1196, 610, 1197, 1114, 611, 612, 613, 614, 0,
	616, 617, 0, 1097, 618, 619, 620, 622, 623, 621,
	624, 1158, 625, 0, 0, 626, 627, 628, 686, 1181,
	1218, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 1094, 0,
	0, 0, 0, 1136, 1108, 1109, 1110, 1106, 1107, 1119,
	0, 1089, 0, 0, 0, 0, 0, 0, 1087, 1088,
	277, 279, 278, 280, 281, 282, 283, 1120, 284, 285,
	0, 1118, 0, 0, 0, 1160, 1124, 0, 0, 0,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	1173, 0, 294, 1180, 295, 1179, 0, 1190, 296, 297,
	298, 299, 300, 301, 1126, 1159, 1091, 302, 1220, 1221,
	647, 0, 303, 304, 1166, 0, 1147, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1201, 327, 328, 4743, 1150,
	1148, 1149, 1156, 1152, 1151, 1155, 330, 331, 332, 333,
	334, 1183, 335, 337, 1177, 1176, 1096, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1168, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1102, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1191, 1192, 368, 1115, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1175, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1202, 375,
	376, 377, 1188, 1189, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1198, 0, 1125, 388, 0,
	389, 390, 391, 392, 393, 1161, 1162, 1165, 477, 1204,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1203, 404, 1170,
	1171, 0, 1131, 0, 406, 407, 1205, 1163, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1199,
	1208, 422, 423, 1209, 0, 424, 425, 426, 427, 428,
	429, 432, 1154, 1153, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 1093, 276, 1212, 474, 475, 1116, 1164, 476, 1178,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 1213, 487, 1214, 1193,
	488, 489, 1103, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 1194, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 1174,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 1104, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	1157, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 1172, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 1219, 587, 588,
	589, 590, 1195, 594, 595, 0, 596, 597, 1090, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 1184, 1185, 1186, 1187, 0, 615, 0,
	607, 608, 609, 1196, 610, 1197, 1114, 611, 612, 613,
	614, 0, 4742, 617, 0, 1097, 618, 619, 620, 622,
	623, 621, 624, 1158, 625, 0, 0, 626, 627, 628,
	686, 1181, 1218, 0, 630, 629, 631, 689, 632, 633,
	0, 0, 0, 0, 634, 635, 690, 636, 637, 638,
	1094, 0, 0, 0, 0, 1136, 1108, 1109, 1110, 1106,
	1107, 1119, 0, 1089, 0, 0, 0, 0, 0, 0,
	1087, 1088, 277, 279, 278, 280, 281, 282, 283, 1120,
	284, 285, 0, 1118, 0, 0, 0, 1160, 1124, 0,
	0, 0, 286, 287, 1200, 288, 289, 290, 291, 292,
	293, 4741, 1173, 0, 294, 1180, 295, 1179, 0, 1190,
	296, 297, 298, 299, 300, 301, 1126, 1159, 1091, 302,
	1220, 1221, 647, 0, 303, 304, 1166, 0, 1147, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1201, 327, 328,
	4743, 1150, 1148, 1149, 1156, 1152, 1151, 1155, 330, 331,
	332, 333, 334, 1183, 335, 337, 1177, 1176, 1096, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1168, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1102, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1191, 1192, 368,
	1115, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1175, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1202, 375, 376, 377, 1188, 1189, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1198, 0, 1125,
	388, 0, 389, 390, 391, 392, 393, 1161, 1162, 1165,
	477, 1204, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1203,
	404, 1170, 1171, 0, 1131, 0, 406, 407, 1205, 1163,
	1206, 408, 409, 410, 1207, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1199, 1208, 422, 423, 1209, 0, 424, 425, 426,
	427, 428, 429, 432, 1154, 1153, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1210, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1211, 473, 461, 1093, 276, 1212, 474, 475, 1116, 1164,
	476, 1178, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 1213, 487,
	1214, 1193, 488, 489, 1103, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 1194, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 1174, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 1215, 542, 543, 544, 545, 546,
	1104, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 1157, 569, 570, 552, 553, 571, 572, 1216,
	573, 574, 575, 576, 577, 578, 579, 1172, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 1219,
	587, 588, 589, 590, 1195, 594, 595, 0, 596, 597,
	1090, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 1184, 1185, 1186, 1187, 0,
	615, 0, 607, 608, 609, 1196, 610, 1197, 1114, 611,
	612, 613, 614, 0, 4742, 617, 0, 1097, 618, 619,
	620, 622, 623, 621, 624, 1158, 625, 0, 0, 626,
	627, 628, 686, 1181, 1218, 0, 630, 629, 631, 689,
	632, 633, 0, 0, 0, 0, 634, 635, 690, 636,
	637, 638, 1094, 0, 0, 0, 0, 1136, 1108, 1109,
	1110, 1106, 1107, 1119, 0, 1089, 0, 0, 0, 0,
	0, 0, 1087, 1088, 277, 279, 278, 280, 281, 282,
	283, 1120, 284, 285, 0, 1118, 0, 0, 0, 1160,
	1124, 0, 0, 0, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 1173, 0, 294, 1180, 295, 1179,
	0, 1190, 296, 297, 298, 299, 300, 301, 1126, 1159,
	1091, 302, 1220, 1221, 647, 0, 303, 304, 1166, 0,
	1147, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1201,
	327, 4366, 329, 1150, 1148, 1149, 1156, 1152, 1151, 1155,
	330, 331, 332, 333, 334, 1183, 335, 337, 1177, 1176,
	1096, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1168, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1102, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1191,
	1192, 368, 1115, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1175, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1202, 375, 376, 377, 1188, 1189, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1198,
	0, 4367, 388, 0, 389, 390, 391, 392, 393, 1161,
	1162, 1165, 477, 1204, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1203, 404, 1170, 1171, 0, 1131, 0, 406, 407,
	1205, 1163, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1199, 1208, 422, 423, 1209, 0, 424,
	425, 426, 427, 428, 429, 432, 1154, 1153, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 1093, 276, 1212, 474, 475,
	1116, 1164, 476, 1178, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	1213, 487, 1214, 1193, 488, 489, 1103, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 1194, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 1174, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 1215, 542, 543, 544,
	4365, 546, 1104, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 1157, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 1172,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 1219, 587, 588, 589, 590, 1195, 594, 595, 0,
	596, 597, 1090, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 1184, 1185, 1186,
	1187, 0, 615, 0, 607, 608, 609, 1196, 610, 1197,
	1114, 611, 612, 613, 614, 0, 616, 617, 0, 1097,
	618, 619, 620, 622, 623, 621, 624, 1158, 625, 0,
	0, 626, 627, 628, 686, 1181, 1218, 0, 630, 629,
	631, 689, 632, 633, 0, 0, 0, 0, 634, 635,
	690, 636, 637, 638, 1094, 0, 0, 0, 0, 1136,
	1108, 1109, 1110, 3193, 3194, 1119, 0, 1089, 0, 0,
	0, 0, 0, 0, 1087, 1088, 277, 279, 278, 280,
	281, 282, 283, 1120, 284, 285, 0, 1118, 0, 0,
	0, 1160, 1124, 0, 0, 0, 286, 287, 1200, 288,
	289, 290, 291, 292, 293, 640, 1173, 0, 294, 1180,
	295, 1179, 0, 1190, 296, 297, 298, 299, 300, 301,
	1126, 1159, 1091, 302, 1220, 1221, 647, 0, 303, 304,
	1166, 0, 1147, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152,
	1151, 1155, 330, 331, 332, 333, 334, 1183, 335, 337,
	1177, 1176, 1096, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1168, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1102, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1191, 1192, 368, 1115, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1175, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1202, 375, 376, 377, 1188, 1189,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1198, 0, 1125, 388, 0, 389, 390, 391, 392,
	393, 1161, 1162, 1165, 477, 1204, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1203, 404, 1170, 1171, 0, 1131, 0,
	406, 407, 1205, 1163, 1206, 408, 409, 410, 1207, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1199, 1208, 422, 423, 1209,
	0, 424, 425, 426, 427, 428, 429, 432, 1154, 1153,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1210,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1211, 473, 461, 1093, 276, 1212,
	474, 475, 1116, 1164, 476, 1178, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 1213, 487, 1214, 1193, 488, 489, 1103, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 1194,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 1174, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 1215, 542,
	543, 544, 545, 546, 1104, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 1157, 569, 570, 552,
	553, 571, 572, 1216, 573, 574, 575, 576, 577, 578,
	579, 1172, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 1219, 587, 588, 589, 590, 1195, 594,
	595, 0, 596, 597, 1090, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 1184,
	1185, 1186, 1187, 0, 615, 0, 607, 608, 609, 1196,
	610, 1197, 1114, 611, 612, 613, 614, 0, 616, 617,
	0, 1097, 618, 619, 620, 622, 623, 621, 624, 1158,
	625, 0, 0, 626, 627, 628, 686, 1181, 1218, 0,
	630, 629, 631, 689, 632, 633, 0, 0, 0, 0,
	634, 635, 690, 636, 637, 638, 1094, 0, 0, 0,
	0, 1136, 1108, 1109, 1110, 3191, 3192, 1119, 0, 1089,
	0, 0, 0, 0, 0, 0, 1087, 1088, 277, 279,
	278, 280, 281, 282, 283, 1120, 284, 285, 0, 1118,
	0, 0, 0, 1160, 1124, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 1173, 0,
	294, 1180, 295, 1179, 0, 1190, 296, 297, 298, 299,
	300, 301, 1126, 1159, 1091, 302, 1220, 1221, 647, 0,
	303, 304, 1166, 0, 1147, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 1150, 1148, 1149,
	1156, 1152, 1151, 1155, 330, 331, 332, 333, 334, 1183,
	335, 337, 1177, 1176, 1096, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1168,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1102, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1191, 1192, 368, 1115, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1175, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	1188, 1189, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1198, 0, 1125, 388, 0, 389, 390,
	391, 392, 393, 1161, 1162, 1165, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1203, 404, 1170, 1171, 0,
	1131, 0, 406, 407, 1205, 1163, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1199, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	1154, 1153, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 1093,
	276, 1212, 474, 475, 1116, 1164, 476, 1178, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 1193, 488, 489,
	1103, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 1194, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 1174, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 1104, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 1157, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 1172, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 1219, 587, 588, 589, 590,
	1195, 594, 595, 0, 596, 597, 1090, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 1184, 1185, 1186, 1187, 0, 615, 0, 607, 608,
	609, 1196, 610, 1197, 1114, 611, 612, 613, 614, 0,
	616, 617, 0, 1097, 618, 619, 620, 622, 623, 621,
	624, 1158, 625, 0, 0, 626, 627, 628, 686, 1181,
	1218, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 1094, 0,
	0, 0, 0, 1136, 1108, 1109, 1110, 1106, 1107, 1119,
	0, 1089, 0, 0, 0, 0, 0, 0, 1087, 1088,
	277, 279, 278, 280, 281, 282, 283, 1120, 284, 285,
	0, 1118, 0, 0, 0, 1160, 1124, 0, 0, 0,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	1173, 0, 294, 1180, 295, 1179, 0, 1190, 296, 297,
	298, 299, 300, 301, 1126, 1159, 1091, 302, 1220, 1221,
	647, 0, 303, 304, 1166, 0, 1147, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1201, 327, 328, 329, 1150,
	1148, 1149, 1156, 1152, 1151, 1155, 330, 331, 332, 333,
	334, 1183, 335, 337, 1177, 1176, 1096, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1168, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1102, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1191, 1192, 368, 1115, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1175, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1202, 375,
	376, 377, 1188, 1189, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1198, 0, 1125, 388, 0,
	389, 390, 391, 392, 393, 1161, 1162, 1165, 477, 1204,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1203, 404, 1170,
	1171, 0, 1131, 0, 406, 407, 1205, 1163, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1199,
	1208, 422, 423, 1209, 0, 424, 425, 426, 427, 428,
	429, 432, 1154, 1153, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 1093, 276, 1212, 474, 475, 1116, 1164, 476, 1178,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 1213, 487, 1214, 1193,
	488, 489, 1103, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 1194, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 1174,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 1104, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	1157, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 1172, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 1219, 587, 588,
	589, 590, 1195, 594, 595, 0, 596, 597, 1090, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 1184, 1185, 1186, 1187, 0, 615, 0,
	607, 608, 609, 1196, 610, 1197, 1114, 611, 612, 613,
	614, 0, 616, 617, 0, 1097, 618, 619, 620, 622,
	623, 621, 624, 1158, 625, 0, 0, 626, 627, 628,
	686, 1181, 1218, 0, 630, 629, 631, 689, 632, 633,
	0, 0, 0, 0, 634, 635, 690, 636, 637, 638,
	1094, 0, 0, 0, 0, 1136, 1108, 1109, 1110, 1106,
	1107, 1119, 0, 1089, 0, 0, 0, 0, 0, 0,
	2452, 2453, 277, 279, 278, 280, 281, 282, 283, 1120,
	284, 285, 0, 1118, 0, 0, 0, 1160, 1124, 0,
	0, 0, 286, 287, 1200, 288, 289, 290, 291, 292,
	293, 640, 1173, 0, 294, 1180, 295, 1179, 0, 1190,
	296, 297, 298, 299, 300, 301, 1126, 1159, 0, 302,
	1220, 1221, 647, 0, 303, 304, 1166, 0, 1147, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1201, 327, 328,
	329, 1150, 1148, 1149, 1156, 1152, 1151, 1155, 330, 331,
	332, 333, 334, 1183, 335, 337, 1177, 1176, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1168, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1102, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1191, 1192, 368,
	1115, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1175, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1202, 375, 376, 377, 1188, 1189, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1198, 0, 1125,
	388, 0, 389, 390, 391, 392, 393, 1161, 1162, 1165,
	477, 1204, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1203,
	404, 1170, 1171, 0, 1131, 0, 406, 407, 1205, 1163,
	1206, 408, 409, 410, 1207, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1199, 1208, 422, 423, 1209, 0, 424, 425, 426,
	427, 428, 429, 432, 1154, 1153, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1210, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1211, 473, 461, 0, 276, 1212, 474, 475, 1116, 1164,
	476, 1178, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 1213, 487,
	1214, 1193, 488, 489, 1103, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 1194, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 1174, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 1215, 542, 543, 544, 545, 546,
	1104, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 1157, 569, 570, 552, 553, 571, 572, 1216,
	573, 574, 575, 576, 577, 578, 579, 1172, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 1219,
	587, 588, 589, 590, 1195, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 1184, 1185, 1186, 1187, 0,
	615, 0, 607, 608, 609, 1196, 610, 1197, 1114, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 1158, 625, 0, 0, 626,
	627, 628, 686, 1181, 1218, 0, 630, 629, 631, 689,
	632, 633, 0, 0, 0, 0, 634, 635, 690, 636,
	637, 638, 0, 0, 0, 0, 0, 1136, 1108, 1109,
	1110, 1106, 1107, 1119, 0, 2711, 0, 0, 0, 0,
	0, 0, 2709, 2710, 277, 279, 278, 280, 281, 282,
	283, 1120, 284, 285, 0, 1118, 0, 0, 0, 1160,
	1124, 0, 0, 0, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 1173, 0, 294, 1180, 295, 1179,
	0, 1190, 296, 297, 298, 299, 300, 301, 1126, 1159,
	0, 302, 1220, 1221, 647, 0, 303, 304, 1166, 0,
	1147, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1201,
	327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151, 1155,
	330, 331, 332, 333, 334, 1183, 335, 337, 1177, 1176,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1168, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1102, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1191,
	1192, 368, 1115, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1175, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1202, 375, 376, 377, 1188, 1189, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1198,
	0, 1125, 388, 0, 389, 390, 391, 392, 393, 1161,
	1162, 1165, 477, 1204, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1203, 404, 1170, 1171, 0, 1131, 0, 406, 407,
	1205, 1163, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1199, 1208, 422, 423, 1209, 0, 424,
	425, 426, 427, 428, 429, 432, 1154, 1153, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 0, 276, 1212, 474, 475,
	1116, 1164, 476, 1178, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	1213, 487, 1214, 1193, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 1194, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 1174, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 3186, 3187, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 1157, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 1172,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 1219, 587, 588, 589, 590, 1195, 594, 595, 0,
	596, 597, 0, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 1184, 1185, 1186,
	1187, 0, 615, 0, 607, 608, 609, 1196, 610, 1197,
	1114, 611, 612, 613, 614, 0, 616, 617, 0, 0,
	618, 619, 620, 622, 623, 621, 624, 1158, 625, 0,
	0, 626, 627, 628, 686, 1181, 1218, 0, 630, 629,
	631, 689, 632, 633, 0, 0, 0, 0, 634, 635,
	690, 636, 637, 638, 0, 0, 0, 0, 0, 1136,
	1108, 1109, 1110, 1106, 1107, 1119, 0, 0, 0, 0,
	0, 0, 0, 0, 2127, 2128, 277, 279, 278, 280,
	281, 282, 283, 1120, 284, 285, 0, 1118, 0, 0,
	0, 1160, 1124, 0, 0, 0, 286, 287, 1200, 288,
	289, 290, 291, 292, 293, 0, 1173, 0, 294, 1180,
	295, 1179, 0, 1190, 296, 297, 298, 299, 300, 301,
	1126, 1159, 1091, 302, 1220, 1221, 647, 0, 303, 304,
	1166, 0, 1147, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1201, 327, 328, 4743, 1150, 1148, 1149, 1156, 1152,
	1151, 1155, 330, 331, 332, 333, 334, 1183, 335, 337,
	1177, 1176, 1096, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1168, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1102, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1191, 1192, 368, 1115, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1175, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1202, 375, 376, 377, 1188, 1189,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1198, 0, 1125, 388, 0, 389, 390, 391, 392,
	393, 1161, 1162, 1165, 477, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1203, 404, 1170, 1171, 0, 1131, 0,
	406, 407, 0, 1163, 0, 408, 409, 410, 1207, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1199, 1208, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 1154, 1153,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1210,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1211, 473, 461, 1093, 276, 0,
	474, 475, 1116, 1164, 476, 1178, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 1213, 487, 1214, 1193, 488, 489, 1103, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 1194,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 1174, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 1215, 542,
	543, 544, 545, 546, 1104, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 1157, 569, 570, 552,
	553, 571, 572, 0, 573, 574, 575, 576, 577, 578,
	579, 1172, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 1219, 587, 588, 589, 590, 1195, 594,
	595, 0, 596, 597, 1090, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 1184,
	1185, 1186, 1187, 0, 615, 0, 607, 608, 609, 1196,
	610, 1197, 1114, 611, 612, 613, 614, 0, 4742, 617,
	0, 1097, 618, 619, 620, 622, 623, 621, 624, 1158,
	625, 0, 0, 626, 627, 628, 686, 1181, 1218, 0,
	630, 629, 631, 689, 632, 633, 0, 0, 0, 0,
	634, 635, 690, 636, 637, 638, 0, 0, 0, 1080,
	0, 1258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1087, 1088, 277, 279,
	278, 280, 281, 282, 283, 1120, 284, 285, 0, 1118,
	0, 0, 0, 1160, 0, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 1159, 0, 302, 645, 646, 647, 0,
	303, 304, 1166, 0, 1147, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 1150, 1148, 1149,
	1156, 1152, 1151, 1155, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1191, 1192, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1198, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 1161, 1162, 1165, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1203, 404, 662, 663, 0,
	664, 0, 406, 407, 1205, 1163, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 1244, 418, 420, 419, 0, 421, 1199, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	1154, 1153, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 0,
	276, 1212, 474, 475, 0, 1164, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 1250, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 1193, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 1194, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 676, 1252, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 236, 564, 565, 563, 566, 567, 568, 1157, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	1195, 594, 595, 0, 596, 597, 0, 593, 584, 238,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 1196, 610, 1197, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 1158, 625, 0, 0, 626, 627, 628, 1622, 687,
	688, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 230, 634, 635, 690, 636, 637, 638, 1258, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 1248, 0, 1970, 0, 0,
	1160, 0, 0, 0, 0, 286, 287, 1200, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	1159, 0, 302, 645, 646, 647, 0, 303, 304, 1166,
	0, 1147, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151,
	1155, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1191, 1192, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1202, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1198, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	1161, 1162, 1165, 477, 1204, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1203, 404, 662, 663, 0, 664, 0, 406,
	407, 1205, 1163, 1206, 408, 409, 410, 1207, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 1244, 418,
	420, 419, 0, 421, 1199, 1208, 422, 423, 1209, 0,
	424, 425, 426, 427, 428, 429, 432, 1154, 1153, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1210, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1211, 473, 461, 0, 276, 1212, 474,
	475, 0, 1164, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 1250, 482, 483, 484, 0, 0, 485, 486,
	669, 1213, 487, 1214, 1193, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 1194, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 1215, 542, 543,
	544, 545, 546, 676, 1252, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 236, 564,
	565, 563, 566, 567, 568, 1157, 569, 570, 552, 553,
	571, 572, 1216, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 1195, 594, 595,
	0, 596, 597, 0, 593, 584, 238, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 1196, 610,
	1197, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 1158, 625,
	0, 0, 626, 627, 628, 1622, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 0, 0, 0, 230, 634,
	635, 690, 636, 637, 638, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 3350, 0, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 0, 1970, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 286, 287, 1200, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	1159, 0, 302, 645, 646, 647, 0, 303, 304, 1166,
	0, 1147, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151,
	1155, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1191, 1192, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1202, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1198, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	1161, 1162, 1165, 477, 1204, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1203, 404, 662, 663, 0, 664, 0, 406,
	407, 1205, 1163, 1206, 408, 409, 410, 1207, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 1244, 418,
	420, 419, 0, 421, 1199, 1208, 422, 423, 1209, 0,
	424, 425, 426, 427, 428, 429, 432, 1154, 1153, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1210, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1211, 473, 461, 0, 276, 1212, 474,
	475, 0, 1164, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 1250, 482, 483, 484, 0, 0, 485, 486,
	669, 1213, 487, 1214, 1193, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 1194, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 1215, 542, 543,
	544, 545, 546, 676, 1252, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 1157, 569, 570, 552, 553,
	571, 572, 1216, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 1195, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 1196, 610,
	1197, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 1158, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 0, 1240, 0, 1258, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1160, 0, 1248, 0, 1246, 286, 287, 1200, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	1159, 0, 302, 645, 646, 647, 0, 303, 304, 1166,
	0, 1147, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151,
	1155, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1191, 1192, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1202, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1198, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	1161, 1162, 1165, 477, 1204, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1203, 404, 662, 663, 0, 664, 0, 406,
	407, 1205, 1163, 1206, 408, 409, 410, 1207, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 1244, 418,
	420, 419, 0, 421, 1199, 1208, 422, 423, 1209, 0,
	424, 425, 426, 427, 428, 429, 432, 1154, 1153, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1210, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1211, 473, 461, 0, 276, 1212, 474,
	475, 0, 1164, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 1250, 482, 483, 484, 0, 0, 485, 486,
	669, 1213, 487, 1214, 1193, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 1194, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 1215, 542, 543,
	544, 545, 546, 676, 1252, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 1157, 569, 570, 552, 553,
	571, 572, 1216, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 1195, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 1196, 610,
	1197, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 1158, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 0, 0, 0, 1258, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1160, 0, 1248, 0, 1246, 286, 287, 1200, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	1159, 0, 302, 645, 646, 647, 0, 303, 304, 1166,
	0, 1147, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151,
	1155, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1191, 1192, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1202, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1198, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	1161, 1162, 1165, 477, 1204, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1203, 404, 662, 663, 0, 664, 0, 406,
	407, 1205, 1163, 1206, 408, 409, 410, 1207, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 1244, 418,
	420, 419, 0, 421, 1199, 1208, 422, 423, 1209, 0,
	424, 425, 426, 427, 428, 429, 432, 1154, 1153, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1210, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1211, 473, 461, 0, 276, 1212, 474,
	475, 0, 1164, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 1250, 482, 483, 484, 0, 0, 485, 486,
	669, 1213, 487, 1214, 1193, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 1194, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 1215, 542, 543,
	544, 545, 546, 676, 1252, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 1157, 569, 570, 552, 553,
	571, 572, 1216, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 1195, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 1196, 610,
	1197, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 1158, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 0, 0, 0, 1258, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1160, 0, 1248, 0, 1246, 286, 287, 1200, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	1159, 0, 302, 645, 646, 647, 0, 303, 304, 1166,
	0, 1147, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151,
	1155, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1191, 1192, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1202, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1198, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	1161, 1162, 1165, 477, 1204, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1203, 404, 662, 663, 0, 664, 0, 406,
	407, 1205, 1163, 1206, 408, 409, 410, 1207, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 1199, 1208, 422, 423, 1209, 0,
	424, 425, 426, 427, 428, 429, 432, 1154, 1153, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1210, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1211, 473, 461, 0, 276, 1212, 474,
	475, 0, 1164, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 1213, 487, 1214, 1193, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 1194, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 1215, 542, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 1157, 569, 570, 552, 553,
	571, 572, 1216, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 1195, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 1196, 610,
	1197, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 1158, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 0, 0, 0, 1258, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 4187, 286, 287, 1200, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	1159, 0, 302, 645, 646, 647, 0, 303, 304, 1166,
	0, 1147, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1201, 327, 328, 329, 1150, 1148, 1149, 1156, 1152, 1151,
	1155, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1191, 1192, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1202, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1198, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	1161, 1162, 1165, 477, 1204, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1203, 404, 662, 663, 0, 664, 0, 406,
	407, 1205, 1163, 1206, 408, 409, 410, 1207, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 1199, 1208, 422, 423, 1209, 0,
	424, 425, 426, 427, 428, 429, 432, 1154, 1153, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1210, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1211, 473, 461, 0, 276, 1212, 474,
	475, 0, 1164, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 1213, 487, 1214, 1193, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 1194, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 1215, 542, 543,
	544, 545, 546, 676, 1252, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 1157, 569, 570, 552, 553,
	571, 572, 1216, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 1195, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 1196, 610,
	1197, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 1158, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 271, 0, 0, 0, 634,
	635, 690, 636, 637, 638, 2556, 2557, 2558, 2575, 2576,
	2577, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 2578, 0, 639, 0, 0,
	0, 0, 286, 287, 1867, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 0, 644,
	296, 297, 298, 299, 300, 301, 0, 0, 1852, 302,
	645, 646, 647, 0, 303, 304, 648, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 2568, 0, 313,
	314, 315, 312, 316, 0, 317, 2564, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	0, 0, 0, 2569, 2570, 2571, 2572, 369, 370, 371,
	654, 0, 0, 2563, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 657, 0, 658,
	388, 0, 389, 390, 391, 392, 393, 659, 660, 661,
	477, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 662, 663, 0, 664, 0, 406, 407, 0, 665,
	0, 408, 409, 410, 0, 411, 0, 2573, 2574, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 666, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	2566, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 0, 667,
	476, 668, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 0, 487,
	0, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	676, 547, 2567, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 0, 569, 570, 552, 553, 571, 572, 0,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 0, 596, 597,
	1851, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 680, 681, 682, 683, 0,
	615, 0, 607, 608, 609, 684, 610, 685, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 0, 625, 0, 0, 626,
	627, 628, 686, 687, 688, 0, 630, 629, 631, 689,
	632, 633, 0, 0, 0, 0, 634, 635, 690, 636,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 1080,
	0, 1340, 2553, 2554, 2555, 2579, 2565, 2559, 0, 2561,
	2562, 2560, 2547, 2548, 2549, 2550, 2551, 2552, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 1345, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 1203, 404, 662, 663, 0,
	664, 0, 406, 407, 1205, 665, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 0,
	0, 1212, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 236, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 238,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 1622, 687,
	688, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 230, 634, 635, 690, 636, 637, 638, 0, 0,
	231, 1619, 0, 1340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 190, 284, 285,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	641, 0, 294, 642, 295, 643, 0, 644, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 645, 646,
	647, 0, 303, 304, 648, 0, 1345, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1201, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 649, 650, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 651, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 652, 653, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 654, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1202, 375,
	376, 377, 655, 656, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 657, 0, 658, 388, 0,
	389, 390, 391, 392, 393, 659, 660, 661, 477, 1204,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 1203, 404, 662,
	663, 0, 664, 0, 406, 407, 1205, 665, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 666,
	1208, 422, 423, 1209, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 0, 0, 1212, 474, 475, 0, 667, 476, 668,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 1213, 487, 1214, 670,
	488, 489, 481, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 673, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 675,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 676, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 236, 564, 565, 563, 566, 567, 568,
	0, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 677, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 678, 587, 588,
	589, 590, 679, 594, 595, 0, 596, 597, 0, 593,
	584, 238, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 680, 681, 682, 683, 0, 615, 0,
	607, 608, 609, 684, 610, 685, 0, 611, 612, 613,
	614, 0, 616, 617, 0, 0, 618, 619, 620, 622,
	623, 621, 624, 0, 625, 0, 0, 626, 627, 628,
	1622, 687, 688, 0, 630, 629, 631, 689, 632, 633,
	0, 0, 0, 230, 634, 635, 690, 636, 637, 638,
	1340, 1339, 231, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 190,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 1200,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 1345, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1201, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1202, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 1204, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 1203, 404, 662, 663, 0, 664,
	0, 406, 407, 1205, 665, 1206, 408, 409, 410, 1207,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 1208, 422, 423,
	1209, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1210, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1211, 473, 461, 0, 0,
	1212, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 1213, 487, 1214, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 1215,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 1216, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	0, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 1340, 1339, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 1644, 0, 0, 639,
	0, 0, 0, 0, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	0, 644, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 645, 646, 647, 0, 303, 304, 648, 0,
	1345, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1201,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1202, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 657,
	0, 658, 388, 0, 389, 390, 391, 392, 393, 659,
	660, 661, 477, 1204, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 1203, 404, 662, 663, 0, 664, 0, 406, 407,
	1205, 665, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 666, 1208, 422, 423, 1209, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 0, 0, 1212, 474, 475,
	0, 667, 476, 668, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	1213, 487, 1214, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 0, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 0,
	596, 597, 0, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 680, 681, 682,
	683, 0, 615, 0, 607, 608, 609, 684, 610, 685,
	0, 611, 612, 613, 614, 0, 616, 617, 0, 0,
	618, 619, 620, 622, 623, 621, 624, 0, 625, 0,
	0, 626, 627, 628, 686, 687, 688, 0, 630, 629,
	631, 689, 632, 633, 0, 0, 0, 0, 634, 635,
	690, 636, 637, 638, 1340, 1339, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 3649, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 1200, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 304, 648, 0, 1345, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1201, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1202,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	1204, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 1203, 404,
	662, 663, 0, 664, 0, 406, 407, 1205, 665, 1206,
	408, 409, 410, 1207, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 1208, 422, 423, 1209, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1210, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1211,
	473, 461, 0, 0, 1212, 474, 475, 0, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 1213, 487, 1214,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 2325, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 1215, 542, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 0, 564, 565, 563, 566, 567,
	568, 0, 569, 570, 552, 553, 571, 572, 1216, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 680, 681, 682, 683, 0, 615,
	0, 607, 608, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 0, 630, 629, 631, 689, 632,
	633, 0, 0, 0, 0, 634, 635, 690, 636, 637,
	638, 1340, 2236, 0, 0, 0, 0, 2237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	1644, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 1345, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 1203, 404, 662, 663, 0,
	664, 0, 406, 407, 1205, 665, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 2235, 420, 419, 0, 421, 666, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 0,
	0, 1212, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 1340, 1339,
	0, 0, 0, 0, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 1644, 0, 0,
	639, 0, 0, 0, 0, 286, 287, 1200, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 645, 646, 647, 0, 303, 304, 648,
	0, 1345, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1201, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1202, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	657, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	659, 660, 661, 477, 1204, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 1203, 404, 662, 663, 0, 664, 0, 406,
	407, 1205, 665, 1206, 408, 409, 410, 1207, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 666, 1208, 422, 423, 1209, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1210, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1211, 473, 461, 0, 0, 1212, 474,
	475, 0, 667, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 1213, 487, 1214, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 1215, 542, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 0, 569, 570, 552, 553,
	571, 572, 1216, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 684, 610,
	685, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 0, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 0, 1080, 0, 271, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 1628, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 645, 646, 647, 0, 303, 304, 648,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	657, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	659, 660, 661, 477, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 662, 663, 0, 664, 0, 406,
	407, 0, 665, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 666, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 0, 0, 474,
	475, 0, 667, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 0, 487, 0, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 236, 564,
	565, 563, 566, 567, 568, 0, 569, 570, 552, 553,
	571, 572, 0, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	0, 596, 597, 0, 593, 584, 238, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 684, 610,
	685, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 0, 625,
	0, 0, 626, 627, 628, 1622, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 271, 0, 0, 230, 634,
	635, 690, 636, 637, 638, 0, 0, 231, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 286, 287, 190, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 0, 644,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	645, 646, 647, 0, 303, 304, 648, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 657, 0, 658,
	388, 0, 389, 390, 391, 392, 393, 659, 660, 661,
	477, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 662, 663, 0, 664, 0, 406, 407, 0, 665,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 666, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 0, 667,
	476, 668, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 0, 487,
	0, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 0, 569, 570, 552, 553, 571, 572, 0,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 680, 681, 682, 683, 0,
	615, 0, 607, 608, 609, 684, 610, 685, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 0, 625, 0, 0, 626,
	627, 628, 686, 687, 688, 0, 630, 629, 631, 689,
	632, 633, 0, 0, 0, 1258, 634, 635, 690, 636,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1160, 0, 0,
	0, 1984, 286, 287, 1200, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 0, 644,
	296, 297, 298, 299, 300, 301, 0, 1159, 0, 302,
	645, 646, 647, 0, 303, 304, 1166, 0, 1147, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1201, 327, 328,
	329, 1150, 1148, 1149, 1156, 1152, 1151, 1155, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1191, 1192, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1202, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1198, 0, 658,
	388, 0, 389, 390, 391, 392, 393, 1161, 1162, 1165,
	477, 1204, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1203,
	404, 662, 663, 0, 664, 0, 406, 407, 1205, 1163,
	1206, 408, 409, 410, 1207, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1199, 1208, 422, 423, 1209, 0, 424, 425, 426,
	427, 428, 429, 432, 1154, 1153, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1210, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1211, 473, 461, 0, 276, 1212, 474, 475, 0, 1164,
	476, 668, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 1213, 487,
	1214, 1193, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 1194, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 1215, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 1157, 569, 570, 552, 553, 571, 572, 1216,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 1195, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 680, 681, 682, 683, 0,
	615, 0, 607, 608, 609, 1196, 610, 1197, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 1158, 625, 0, 0, 626,
	627, 628, 686, 687, 688, 0, 630, 629, 631, 689,
	632, 633, 271, 3092, 0, 0, 634, 635, 690, 636,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 659, 660, 661, 477, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 662, 663,
	0, 664, 0, 406, 407, 0, 665, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 0, 487, 0, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 0, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	0, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 613, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 0, 630, 629, 631, 689, 632, 633, 271,
	0, 0, 0, 634, 635, 690, 636, 637, 638, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 286, 287, 4912, 288,
	289, 290, 291, 292, 293, 640, 641, 0, 294, 642,
	295, 643, 0, 644, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 645, 646, 647, 0, 303, 304,
	648, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	649, 650, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	651, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 652, 653, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 654, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 655, 656,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 657, 0, 658, 388, 0, 389, 390, 391, 392,
	393, 659, 660, 661, 477, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 662, 663, 0, 664, 0,
	406, 407, 0, 665, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 666, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 276, 0,
	474, 475, 0, 667, 476, 668, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 0, 487, 0, 670, 488, 489, 481, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 673,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 675, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 676, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 0, 569, 570, 552,
	553, 571, 572, 0, 573, 574, 575, 576, 577, 578,
	579, 677, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 678, 587, 588, 589, 590, 679, 594,
	595, 0, 596, 597, 0, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 680,
	681, 682, 683, 0, 615, 0, 607, 608, 609, 684,
	610, 685, 0, 611, 612, 613, 614, 0, 616, 617,
	0, 0, 618, 619, 620, 622, 623, 621, 624, 0,
	625, 0, 0, 626, 627, 628, 686, 687, 688, 0,
	630, 629, 631, 689, 632, 633, 0, 271, 0, 0,
	634, 635, 690, 636, 637, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 3599, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	0, 644, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 645, 646, 647, 0, 303, 304, 648, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 657,
	0, 658, 388, 0, 389, 390, 391, 392, 393, 659,
	660, 661, 477, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 0, 404, 662, 663, 0, 664, 0, 406, 407,
	0, 665, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 666, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 276, 0, 474, 475,
	0, 667, 476, 668, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	0, 487, 0, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 0, 569, 570, 552, 553, 571,
	572, 0, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 0,
	596, 597, 0, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 680, 681, 682,
	683, 0, 615, 0, 607, 608, 609, 684, 610, 685,
	0, 611, 612, 613, 614, 0, 616, 617, 0, 0,
	618, 619, 620, 622, 623, 621, 624, 0, 625, 0,
	0, 626, 627, 628, 686, 687, 688, 0, 630, 629,
	631, 689, 632, 633, 0, 271, 0, 0, 634, 635,
	690, 636, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 1616, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 0, 644,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	645, 646, 647, 0, 303, 304, 648, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 657, 0, 658,
	388, 0, 389, 390, 391, 392, 393, 659, 660, 661,
	477, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 662, 663, 0, 664, 0, 406, 407, 0, 665,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 666, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 0, 667,
	476, 668, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 0, 487,
	0, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 0, 569, 570, 552, 553, 571, 572, 0,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 680, 681, 682, 683, 0,
	615, 0, 607, 608, 609, 684, 610, 685, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 0, 625, 0, 0, 626,
	627, 628, 686, 687, 688, 0, 630, 629, 631, 689,
	632, 633, 271, 0, 0, 0, 634, 635, 690, 636,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 286,
	287, 3080, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 659, 660, 661, 477, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 662, 663,
	0, 664, 0, 406, 407, 0, 665, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 0, 487, 0, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 0, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	0, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 613, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 0, 630, 629, 631, 689, 632, 633, 271,
	0, 0, 0, 634, 635, 690, 636, 637, 638, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 286, 287, 3762, 288,
	289, 290, 291, 292, 293, 640, 641, 0, 294, 642,
	295, 643, 0, 644, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 645, 646, 647, 0, 303, 304,
	648, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	649, 650, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	651, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 652, 653, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 654, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 655, 656,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 657, 0, 658, 388, 0, 389, 390, 391, 392,
	393, 659, 660, 661, 477, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 662, 663, 0, 664, 0,
	406, 407, 0, 665, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 666, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 0, 0,
	474, 475, 0, 667, 476, 668, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 0, 487, 0, 670, 488, 489, 481, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 673,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 675, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 676, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 0, 569, 570, 552,
	553, 571, 572, 0, 573, 574, 575, 576, 577, 578,
	579, 677, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 678, 587, 588, 589, 590, 679, 594,
	595, 0, 596, 597, 0, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 680,
	681, 682, 683, 0, 615, 0, 607, 608, 609, 684,
	610, 685, 0, 611, 612, 613, 614, 0, 616, 617,
	0, 0, 618, 619, 620, 622, 623, 621, 624, 0,
	625, 0, 0, 626, 627, 628, 686, 687, 688, 0,
	630, 629, 631, 689, 632, 633, 0, 912, 0, 817,
	634, 635, 690, 636, 637, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 2314, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 640, 641, 0, 294, 642,
	295, 643, 0, 644, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 645, 646, 647, 0, 303, 304,
	648, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 824, 334, 0, 335, 337,
	649, 650, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	651, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 652, 653, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 654, 0, 0, 0, 372, 0,
	373, 374, 0, 910, 0, 375, 376, 377, 655, 656,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 657, 0, 658, 388, 0, 389, 390, 391, 392,
	393, 659, 660, 661, 477, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 662, 663, 0, 664, 0,
	406, 407, 0, 665, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 666, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 276, 0,
	474, 475, 0, 667, 476, 668, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 0, 487, 0, 670, 488, 489, 481, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 673,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 675, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 676, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 0, 569, 570, 552,
	553, 571, 572, 0, 573, 574, 575, 576, 577, 578,
	579, 677, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 678, 587, 588, 589, 590, 679, 594,
	595, 0, 596, 597, 0, 593, 584, 822, 598, 599,
	600, 601, 602, 823, 604, 362, 605, 0, 606, 680,
	681, 682, 683, 0, 615, 0, 607, 608, 609, 684,
	610, 685, 0, 611, 612, 613, 614, 0, 616, 617,
	0, 0, 618, 619, 620, 622, 623, 621, 624, 0,
	625, 0, 0, 626, 627, 628, 686, 687, 688, 817,
	630, 629, 631, 689, 632, 633, 0, 0, 0, 0,
	634, 635, 690, 636, 637, 638, 277, 279, 278, 280,
	281, 282, 283, 2053, 284, 285, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 286, 287, 827, 288,
	289, 290, 291, 292, 293, 640, 641, 0, 294, 642,
	295, 643, 0, 644, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 645, 646, 647, 0, 303, 304,
	648, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 824, 334, 0, 335, 337,
	649, 650, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	651, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 652, 653, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 654, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 655, 656,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 657, 0, 658, 388, 0, 389, 390, 391, 392,
	393, 659, 660, 661, 477, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 662, 663, 0, 664, 0,
	406, 407, 0, 665, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 666, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 276, 0,
	474, 475, 0, 667, 476, 668, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 0, 487, 0, 670, 488, 489, 481, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 673,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 675, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 676, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 2052, 559, 560, 561, 562, 0,
	2054, 565, 563, 566, 567, 568, 0, 569, 570, 552,
	553, 571, 572, 0, 573, 574, 575, 576, 577, 578,
	579, 677, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 678, 587, 588, 589, 590, 679, 594,
	595, 0, 596, 597, 0, 593, 584, 822, 598, 599,
	600, 601, 602, 823, 604, 362, 605, 0, 606, 680,
	681, 682, 683, 0, 615, 0, 607, 608, 609, 684,
	610, 685, 0, 611, 612, 2051, 614, 0, 616, 617,
	0, 0, 618, 619, 620, 622, 623, 621, 624, 0,
	625, 0, 0, 626, 627, 628, 686, 687, 688, 817,
	630, 629, 631, 689, 632, 633, 0, 0, 0, 0,
	634, 635, 690, 636, 637, 638, 277, 279, 278, 280,
	281, 282, 283, 2004, 284, 285, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 286, 287, 827, 288,
	289, 290, 291, 292, 293, 640, 641, 0, 294, 642,
	295, 643, 0, 644, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 645, 646, 647, 0, 303, 304,
	648, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 824, 334, 0, 335, 337,
	649, 650, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	651, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 652, 653, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 654, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 655, 656,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 657, 0, 658, 388, 0, 389, 390, 391, 392,
	393, 659, 660, 661, 477, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 662, 663, 0, 664, 0,
	406, 407, 0, 665, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 666, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 276, 0,
	474, 475, 0, 667, 476, 668, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 0, 487, 0, 670, 488, 489, 481, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 673,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 675, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 676, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 2003, 559, 560, 561, 562, 0,
	2005, 565, 563, 566, 567, 568, 0, 569, 570, 552,
	553, 571, 572, 0, 573, 574, 575, 576, 577, 578,
	579, 677, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 678, 587, 588, 589, 590, 679, 594,
	595, 0, 596, 597, 0, 593, 584, 822, 598, 599,
	600, 601, 602, 823, 604, 362, 605, 0, 606, 680,
	681, 682, 683, 0, 615, 0, 607, 608, 609, 684,
	610, 685, 0, 611, 612, 2002, 614, 0, 616, 617,
	0, 0, 618, 619, 620, 622, 623, 621, 624, 0,
	625, 0, 0, 626, 627, 628, 686, 687, 688, 0,
	630, 629, 631, 689, 632, 633, 815, 0, 817, 0,
	634, 635, 690, 636, 637, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 827, 0,
	639, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 645, 646, 647, 0, 303, 304, 648,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 824, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	657, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	659, 660, 661, 477, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 0, 404, 662, 663, 0, 664, 0, 406,
	407, 0, 665, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 666, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 276, 0, 474,
	475, 0, 667, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 0, 487, 0, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 0, 569, 570, 552, 553,
	571, 572, 0, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	0, 596, 597, 0, 593, 584, 822, 598, 599, 600,
	601, 602, 823, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 684, 610,
	685, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 0, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 2026, 0, 0, 0, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 827, 0, 0,
	0, 0, 286, 287, 1200, 288, 289, 290, 291, 292,
	293, 0, 2032, 0, 294, 2022, 295, 2038, 0, 2045,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	2048, 2049, 0, 0, 303, 304, 0, 0, 1345, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1201, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 1183, 335, 337, 2036, 2035, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1168, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 0, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	2034, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1202, 375, 376, 377, 2043, 2044, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 0, 0, 0,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	477, 1204, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 1203,
	404, 2029, 2030, 0, 2025, 0, 406, 407, 1205, 0,
	1206, 408, 409, 410, 1207, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 0, 1208, 422, 423, 1209, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1210, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1211, 473, 461, 0, 0, 1212, 474, 475, 0, 0,
	476, 2037, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 0, 1213, 487,
	1214, 0, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 2019, 501, 502,
	503, 2020, 504, 505, 506, 0, 507, 0, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 2033, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 1215, 542, 543, 544, 545, 546,
	0, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 0, 569, 570, 552, 553, 571, 572, 1216,
	573, 574, 575, 576, 577, 578, 579, 2031, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 2047,
	587, 588, 589, 590, 0, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 2039, 2040, 2041, 2042, 0,
	615, 0, 607, 608, 609, 0, 610, 0, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 0, 625, 0, 0, 626,
	627, 628, 0, 2023, 2046, 0, 630, 629, 631, 0,
	632, 633, 0, 0, 0, 0, 634, 635, 0, 636,
	637, 638, 817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 2013, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 824, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 659, 660, 661, 477, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 662, 663,
	0, 664, 0, 406, 407, 0, 665, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 276, 0, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 0, 487, 0, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 0, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	822, 598, 599, 600, 601, 602, 823, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 613, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 817, 630, 629, 631, 689, 632, 633, 0,
	0, 0, 0, 634, 635, 690, 636, 637, 638, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 286,
	287, 827, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 824, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 659, 660, 661, 477, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 662, 663,
	0, 664, 0, 406, 407, 0, 665, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 276, 0, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 0, 487, 0, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 0, 2362, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 2363, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 0, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	822, 598, 599, 600, 601, 602, 823, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 2364, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 271, 630, 629, 631, 689, 632, 633, 0,
	0, 0, 0, 634, 635, 690, 636, 637, 638, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 286,
	287, 827, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 659, 660, 661, 477, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 662, 663,
	0, 664, 0, 406, 407, 0, 665, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 276, 0, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 0, 487, 0, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 0, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	0, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 613, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 0, 630, 629, 631, 689, 632, 633, 0,
	1340, 2101, 0, 634, 635, 690, 636, 637, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 827, 639, 0, 0, 0, 0, 286, 287, 1200,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 1345, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1201, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 3043, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1202, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 1204, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 1203, 404, 662, 663, 0, 664,
	0, 406, 407, 1205, 665, 1206, 408, 409, 410, 1207,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 1208, 422, 423,
	1209, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1210, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1211, 473, 461, 0, 0,
	1212, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 1213, 487, 1214, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 1215,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 3044, 569, 570,
	552, 553, 571, 572, 1216, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	0, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 1340, 1339, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 286, 287, 1200, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	0, 644, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 645, 646, 647, 0, 303, 304, 648, 0,
	1345, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1201,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1202, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 657,
	0, 658, 388, 0, 389, 390, 391, 392, 393, 659,
	660, 661, 477, 1204, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 1203, 404, 662, 663, 0, 664, 0, 406, 407,
	1205, 665, 1206, 408, 409, 410, 1207, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 666, 1208, 422, 423, 1209, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1210, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1211, 473, 461, 0, 0, 1212, 474, 475,
	3957, 667, 476, 668, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	1213, 487, 1214, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 1215, 542, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 0, 569, 570, 552, 553, 571,
	572, 1216, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 0,
	596, 597, 0, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 680, 681, 682,
	683, 0, 615, 0, 607, 608, 609, 684, 610, 685,
	0, 611, 612, 613, 614, 0, 616, 617, 0, 0,
	618, 619, 620, 622, 623, 621, 624, 0, 625, 0,
	0, 626, 627, 628, 686, 687, 688, 0, 630, 629,
	631, 689, 632, 633, 0, 0, 0, 0, 634, 635,
	690, 636, 637, 638, 1340, 1339, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 1200, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 304, 648, 0, 1345, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1201, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1202,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	1204, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 1203, 404,
	662, 663, 0, 664, 0, 406, 407, 1205, 665, 1206,
	408, 409, 410, 1207, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 1208, 422, 423, 1209, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1210, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1211,
	473, 461, 0, 0, 1212, 474, 475, 3560, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 1213, 487, 1214,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 1215, 542, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 0, 564, 565, 563, 566, 567,
	568, 0, 569, 570, 552, 553, 571, 572, 1216, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 680, 681, 682, 683, 0, 615,
	0, 607, 608, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 0, 630, 629, 631, 689, 632,
	633, 0, 0, 0, 0, 634, 635, 690, 636, 637,
	638, 1672, 0, 1340, 1339, 0, 0, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	641, 0, 294, 642, 295, 643, 0, 644, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 645, 646,
	647, 0, 303, 304, 648, 0, 1345, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1201, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 649, 650, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 651, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 652, 653, 368, 0, 274,
	0, 0, 0, 0, 0, 1671, 370, 371, 654, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1202, 375,
	376, 377, 655, 656, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 657, 0, 658, 388, 0,
	389, 390, 391, 392, 393, 659, 660, 661, 477, 1204,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 1203, 404, 662,
	663, 0, 664, 0, 406, 407, 1205, 665, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 666,
	1208, 422, 423, 1209, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 0, 0, 1212, 474, 475, 0, 667, 476, 668,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 1213, 487, 1214, 670,
	488, 489, 481, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 673, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 1670, 518, 675,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 676, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 1669,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	0, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 677, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 678, 587, 588,
	589, 590, 679, 594, 595, 0, 596, 597, 0, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 680, 681, 682, 683, 0, 615, 0,
	607, 608, 609, 684, 610, 685, 0, 611, 612, 613,
	614, 0, 616, 617, 0, 0, 618, 619, 620, 622,
	623, 621, 624, 0, 625, 0, 0, 626, 627, 628,
	686, 687, 688, 0, 630, 629, 631, 689, 632, 633,
	0, 0, 0, 0, 634, 635, 690, 636, 637, 638,
	1590, 0, 1340, 1339, 0, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 286,
	287, 1200, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 1345, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1201, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1202, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 1589, 660, 661, 477, 1204, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 1203, 404, 662, 663,
	0, 664, 0, 406, 407, 1205, 665, 1206, 408, 409,
	410, 1207, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 1208,
	422, 423, 1209, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1210, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 1211, 473, 461,
	0, 0, 1212, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 1213, 487, 1214, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 1215, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 1216, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	0, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 613, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 0, 630, 629, 631, 689, 632, 633, 0,
	0, 0, 0, 634, 635, 690, 636, 637, 638, 1549,
	0, 1340, 1339, 0, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	1200, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 1345, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1201, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1202, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 1551, 660, 661, 477, 1204, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 1203, 404, 662, 663, 0,
	664, 0, 406, 407, 1205, 665, 1206, 408, 409, 410,
	1207, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 1208, 422,
	423, 1209, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1210, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1211, 473, 461, 0,
	0, 1212, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 1213, 487, 1214, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	1215, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 1216, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 0, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 1514, 0,
	1340, 1339, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 1200,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 1345, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1201, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1202, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 1513, 660, 661, 477, 1204, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 1203, 404, 662, 663, 0, 664,
	0, 406, 407, 1205, 665, 1206, 408, 409, 410, 1207,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 1208, 422, 423,
	1209, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1210, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1211, 473, 461, 0, 0,
	1212, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 1213, 487, 1214, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 1215,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 1216, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	0, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 1334, 0, 1340,
	1339, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 286, 287, 1200, 288,
	289, 290, 291, 292, 293, 640, 641, 0, 294, 642,
	295, 643, 0, 644, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 645, 646, 647, 0, 303, 304,
	648, 0, 1345, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1201, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	649, 650, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	651, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 652, 653, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 654, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1202, 375, 376, 377, 655, 656,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 657, 0, 658, 388, 0, 389, 390, 391, 392,
	393, 1333, 660, 661, 477, 1204, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 1203, 404, 662, 663, 0, 664, 0,
	406, 407, 1205, 665, 1206, 408, 409, 410, 1207, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 666, 1208, 422, 423, 1209,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1210,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1211, 473, 461, 0, 0, 1212,
	474, 475, 0, 667, 476, 668, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 1213, 487, 1214, 670, 488, 489, 481, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 673,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 675, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 1215, 542,
	543, 544, 545, 546, 676, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 0, 569, 570, 552,
	553, 571, 572, 1216, 573, 574, 575, 576, 577, 578,
	579, 677, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 678, 587, 588, 589, 590, 679, 594,
	595, 0, 596, 597, 0, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 680,
	681, 682, 683, 0, 615, 0, 607, 608, 609, 684,
	610, 685, 0, 611, 612, 613, 614, 0, 616, 617,
	0, 0, 618, 619, 620, 622, 623, 621, 624, 0,
	625, 0, 0, 626, 627, 628, 686, 687, 688, 0,
	630, 629, 631, 689, 632, 633, 0, 0, 0, 0,
	634, 635, 690, 636, 637, 638, 1340, 1339, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 639, 0,
	0, 0, 0, 286, 287, 1200, 288, 289, 290, 291,
	292, 293, 640, 641, 0, 294, 642, 295, 643, 0,
	644, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 645, 646, 647, 0, 303, 304, 648, 0, 1345,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1201, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 649, 650, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 651, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 652, 653,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 654, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1202, 375, 376, 377, 655, 656, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 657, 0,
	658, 388, 0, 389, 390, 391, 392, 393, 659, 660,
	661, 477, 1204, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	1203, 404, 662, 663, 0, 664, 0, 406, 407, 1205,
	665, 1206, 408, 409, 410, 1207, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 666, 1208, 422, 423, 1209, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1210, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 1211, 473, 461, 0, 0, 1212, 474, 475, 0,
	667, 476, 668, 478, 479, 0, 0, 480, 0, 0,
	0, 482, 483, 484, 0, 0, 485, 486, 669, 1213,
	487, 1214, 670, 488, 489, 481, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 0, 499, 500, 671, 501,
	502, 503, 672, 504, 505, 506, 673, 507, 674, 508,
	509, 0, 510, 511, 0, 512, 513, 514, 515, 516,
	517, 518, 675, 519, 520, 522, 521, 523, 0, 524,
	0, 525, 526, 527, 0, 0, 0, 0, 0, 528,
	0, 530, 531, 532, 533, 529, 534, 535, 536, 537,
	538, 0, 539, 540, 541, 1215, 542, 543, 544, 545,
	546, 676, 547, 0, 548, 549, 555, 556, 557, 550,
	551, 558, 559, 560, 561, 562, 0, 564, 565, 563,
	566, 567, 568, 0, 569, 570, 552, 553, 571, 572,
	1216, 573, 574, 575, 576, 577, 578, 579, 677, 0,
	580, 0, 581, 582, 583, 585, 554, 586, 591, 592,
	678, 587, 588, 589, 590, 679, 594, 595, 0, 596,
	597, 0, 593, 584, 0, 598, 599, 600, 601, 602,
	603, 604, 362, 605, 0, 606, 680, 681, 682, 683,
	0, 615, 0, 607, 608, 609, 684, 610, 685, 0,
	611, 612, 613, 614, 0, 616, 617, 0, 0, 618,
	619, 620, 622, 623, 621, 624, 0, 625, 0, 0,
	626, 627, 628, 686, 687, 688, 0, 630, 629, 631,
	689, 632, 633, 1340, 2101, 0, 0, 634, 635, 690,
	636, 637, 638, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	286, 287, 1200, 288, 289, 290, 291, 292, 293, 640,
	641, 0, 294, 642, 295, 643, 0, 644, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 645, 646,
	647, 0, 303, 304, 648, 0, 1345, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1201, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 649, 650, 2098, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 651, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 652, 653, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 654, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1202, 375,
	376, 377, 655, 656, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 657, 0, 658, 388, 0,
	389, 390, 391, 392, 393, 659, 660, 661, 477, 1204,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 1203, 404, 662,
	663, 0, 664, 0, 406, 407, 1205, 665, 1206, 408,
	409, 410, 1207, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 666,
	1208, 422, 423, 1209, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1210, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1211, 473,
	461, 0, 0, 1212, 474, 475, 0, 667, 476, 668,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 1213, 487, 1214, 670,
	488, 489, 481, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 673, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 675,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 1215, 542, 543, 544, 545, 546, 676, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	0, 569, 570, 552, 553, 571, 572, 1216, 573, 574,
	575, 576, 577, 578, 579, 677, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 678, 587, 588,
	589, 590, 679, 594, 595, 0, 596, 597, 0, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 680, 681, 682, 683, 0, 615, 0,
	607, 608, 609, 684, 610, 685, 0, 611, 612, 613,
	614, 0, 616, 617, 0, 0, 618, 619, 620, 622,
	623, 621, 624, 0, 625, 0, 0, 626, 627, 628,
	686, 687, 688, 0, 630, 629, 631, 689, 632, 633,
	1340, 1339, 0, 0, 634, 635, 690, 636, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 1200,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 1345, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1201, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1202, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 1204, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 1203, 404, 662, 663, 0, 664,
	0, 406, 407, 1205, 665, 1206, 408, 409, 410, 1207,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 1208, 422, 423,
	1209, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1210, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1211, 473, 461, 0, 0,
	1212, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 1213, 487, 1214, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 1215,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 1216, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	1340, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 1200,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 1345, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1201, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1202, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 1204, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 1203, 404, 662, 663, 0, 664,
	0, 406, 407, 1205, 665, 1206, 408, 409, 410, 1207,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 1208, 422, 423,
	1209, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1210, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1211, 473, 461, 0, 0,
	1212, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 1213, 487, 1214, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 1215,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 1216, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 2880, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 2877,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 2884,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 3105, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 2883, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 3102, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 3104, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	3101, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 2882, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 3103, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 2880, 303,
	304, 648, 0, 0, 2874, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 2877,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 2884,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 2883, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 2873, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 2882, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 2881, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	0, 630, 629, 631, 689, 632, 633, 1749, 0, 271,
	0, 634, 635, 690, 636, 637, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 1748, 284, 285, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 640, 641, 0, 294, 642,
	295, 643, 0, 644, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 645, 646, 647, 0, 303, 304,
	648, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 1747, 334, 0, 335, 337,
	649, 650, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	651, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 652, 653, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 654, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 655, 656,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 657, 0, 658, 388, 0, 389, 390, 391, 392,
	393, 659, 660, 661, 477, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 662, 663, 0, 664, 0,
	406, 407, 0, 665, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 666, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 276, 0,
	474, 475, 0, 667, 476, 668, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 0, 487, 0, 670, 488, 489, 481, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 673,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 675, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 676, 547, 0, 548, 549, 555,
	556, 557, 1750, 551, 558, 559, 560, 561, 562, 0,
	1746, 565, 563, 566, 567, 568, 0, 569, 570, 552,
	553, 571, 572, 0, 573, 574, 575, 576, 577, 578,
	579, 677, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 678, 587, 588, 589, 590, 679, 594,
	595, 0, 596, 597, 0, 593, 584, 1744, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 680,
	681, 682, 683, 0, 615, 0, 607, 608, 609, 684,
	610, 685, 0, 611, 612, 613, 614, 0, 616, 617,
	0, 0, 618, 619, 620, 622, 623, 621, 624, 0,
	625, 0, 0, 626, 627, 628, 686, 687, 688, 0,
	1745, 629, 631, 689, 632, 633, 1489, 0, 271, 0,
	634, 635, 690, 636, 637, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 645, 646, 647, 0, 303, 304, 648,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	657, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	1491, 660, 661, 477, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 0, 404, 662, 663, 0, 664, 0, 406,
	407, 0, 665, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 666, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 276, 0, 474,
	475, 0, 667, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 1250, 482, 483, 484, 0, 0, 485, 486,
	669, 0, 487, 0, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 0, 569, 570, 552, 553,
	571, 572, 0, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 684, 610,
	685, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 0, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 1486, 0, 271, 0, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	0, 644, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 645, 646, 647, 0, 303, 304, 648, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 657,
	0, 658, 388, 0, 389, 390, 391, 392, 393, 1488,
	660, 661, 477, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 0, 404, 662, 663, 0, 664, 0, 406, 407,
	0, 665, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 666, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 276, 0, 474, 475,
	0, 667, 476, 668, 478, 479, 0, 0, 480, 0,
	0, 1250, 482, 483, 484, 0, 0, 485, 486, 669,
	0, 487, 0, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 0, 569, 570, 552, 553, 571,
	572, 0, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 0,
	596, 597, 0, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 680, 681, 682,
	683, 0, 615, 0, 607, 608, 609, 684, 610, 685,
	0, 611, 612, 613, 614, 0, 616, 617, 0, 0,
	618, 619, 620, 622, 623, 621, 624, 0, 625, 0,
	0, 626, 627, 628, 686, 687, 688, 0, 630, 629,
	631, 689, 632, 633, 1394, 0, 271, 0, 634, 635,
	690, 636, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 639, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 640, 641, 0, 294, 642, 295, 643, 0,
	644, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 645, 646, 647, 0, 303, 304, 648, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 649, 650, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 651, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 652, 653,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 654, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 655, 656, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 657, 0,
	658, 388, 0, 389, 390, 391, 392, 393, 1396, 660,
	661, 477, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 662, 663, 0, 664, 0, 406, 407, 0,
	665, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 666, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 276, 0, 474, 475, 0,
	667, 476, 668, 478, 479, 0, 0, 480, 0, 0,
	1250, 482, 483, 484, 0, 0, 485, 486, 669, 0,
	487, 0, 670, 488, 489, 481, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 0, 499, 500, 671, 501,
	502, 503, 672, 504, 505, 506, 673, 507, 674, 508,
	509, 0, 510, 511, 0, 512, 513, 514, 515, 516,
	517, 518, 675, 519, 520, 522, 521, 523, 0, 524,
	0, 525, 526, 527, 0, 0, 0, 0, 0, 528,
	0, 530, 531, 532, 533, 529, 534, 535, 536, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 676, 547, 0, 548, 549, 555, 556, 557, 550,
	551, 558, 559, 560, 561, 562, 0, 564, 565, 563,
	566, 567, 568, 0, 569, 570, 552, 553, 571, 572,
	0, 573, 574, 575, 576, 577, 578, 579, 677, 0,
	580, 0, 581, 582, 583, 585, 554, 586, 591, 592,
	678, 587, 588, 589, 590, 679, 594, 595, 0, 596,
	597, 0, 593, 584, 0, 598, 599, 600, 601, 602,
	603, 604, 362, 605, 0, 606, 680, 681, 682, 683,
	0, 615, 0, 607, 608, 609, 684, 610, 685, 0,
	611, 612, 613, 614, 0, 616, 617, 0, 0, 618,
	619, 620, 622, 623, 621, 624, 0, 625, 0, 0,
	626, 627, 628, 686, 687, 688, 0, 630, 629, 631,
	689, 632, 633, 722, 0, 271, 0, 634, 635, 690,
	636, 637, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 721, 282, 283, 711,
	284, 285, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 0, 644,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	645, 646, 647, 0, 303, 304, 648, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 714, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 715, 387, 657, 0, 658,
	388, 0, 389, 390, 391, 392, 393, 659, 660, 661,
	477, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 662, 663, 0, 664, 0, 406, 407, 0, 665,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 666, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 0, 667,
	476, 668, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 0, 487,
	0, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 716, 564, 565, 563, 566,
	567, 568, 0, 569, 570, 552, 553, 571, 572, 0,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 680, 681, 682, 683, 0,
	615, 0, 607, 608, 609, 684, 610, 685, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 0, 625, 0, 0, 626,
	627, 628, 686, 687, 688, 0, 630, 629, 631, 689,
	632, 633, 710, 0, 271, 0, 634, 635, 690, 636,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 711, 284,
	285, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 304, 648, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 714, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 715, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	662, 663, 0, 664, 0, 406, 407, 0, 665, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 0, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 0, 487, 0,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 716, 564, 565, 563, 566, 567,
	568, 0, 569, 570, 552, 553, 571, 572, 0, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 680, 681, 682, 683, 0, 615,
	0, 607, 608, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 271, 630, 629, 631, 689, 632,
	633, 0, 0, 0, 0, 634, 635, 690, 636, 637,
	638, 277, 279, 278, 280, 281, 282, 283, 711, 284,
	285, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 304, 648, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 714, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 715, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	662, 663, 0, 664, 0, 406, 407, 0, 665, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 0, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 0, 487, 0,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 716, 564, 565, 563, 566, 567,
	568, 0, 569, 570, 552, 553, 571, 572, 0, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 680, 681, 682, 683, 0, 615,
	0, 607, 608, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 271, 630, 629, 631, 689, 632,
	633, 0, 0, 0, 0, 634, 635, 690, 636, 637,
	638, 277, 279, 278, 280, 281, 282, 283, 711, 284,
	285, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 304, 648, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 714, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 3968, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	662, 663, 0, 664, 0, 406, 407, 0, 665, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 0, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 0, 487, 0,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 716, 564, 565, 563, 566, 567,
	568, 0, 569, 570, 552, 553, 571, 572, 0, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 680, 681, 682, 683, 0, 615,
	0, 607, 608, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 271, 630, 629, 631, 689, 632,
	633, 0, 0, 0, 0, 634, 635, 690, 636, 637,
	638, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 304, 648, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	662, 663, 0, 664, 0, 406, 407, 0, 665, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 276, 0, 474, 475, 0, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 1250, 482,
	483, 484, 0, 0, 485, 486, 669, 0, 487, 0,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 0, 564, 565, 563, 566, 567,
	568, 0, 569, 570, 552, 553, 571, 572, 0, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 680, 681, 682, 683, 0, 615,
	0, 607, 608, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 271, 630, 629, 631, 689, 632,
	633, 0, 0, 0, 0, 634, 635, 690, 636, 637,
	638, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 304, 648, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	662, 663, 0, 664, 0, 406, 407, 0, 665, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 3507,
	473, 461, 0, 276, 0, 474, 475, 0, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 0, 487, 0,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 0, 564, 565, 563, 566, 567,
	568, 0, 569, 570, 552, 553, 571, 572, 0, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 680, 681, 682, 683, 0, 615,
	0, 607, 608, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 0, 630, 629, 631, 689, 632,
	633, 3050, 0, 271, 0, 634, 635, 690, 636, 637,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 640,
	641, 0, 294, 642, 295, 643, 0, 644, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 645, 646,
	647, 0, 303, 304, 648, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 649, 650, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 651, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 652, 653, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 654, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 655, 656, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 657, 0, 658, 388, 0,
	389, 390, 391, 392, 393, 3049, 660, 661, 477, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 662,
	663, 0, 664, 0, 406, 407, 0, 665, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 666,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 276, 0, 474, 475, 0, 667, 476, 668,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 0, 487, 0, 670,
	488, 489, 481, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 673, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 675,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 676, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	0, 569, 570, 552, 553, 571, 572, 0, 573, 574,
	575, 576, 577, 578, 579, 677, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 678, 587, 588,
	589, 590, 679, 594, 595, 0, 596, 597, 0, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 680, 681, 682, 683, 0, 615, 0,
	607, 608, 609, 684, 610, 685, 0, 611, 612, 613,
	614, 0, 616, 617, 0, 0, 618, 619, 620, 622,
	623, 621, 624, 0, 625, 0, 0, 626, 627, 628,
	686, 687, 688, 0, 630, 629, 631, 689, 632, 633,
	2331, 0, 271, 0, 634, 635, 690, 636, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 659, 660, 661, 477, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 662, 663,
	0, 664, 0, 406, 407, 0, 665, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 276, 0, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 0, 487, 0, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 0, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	0, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 613, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 271, 630, 629, 631, 689, 632, 633, 0,
	0, 0, 0, 634, 635, 690, 636, 637, 638, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 659, 660, 661, 477, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 662, 663,
	0, 664, 0, 406, 407, 0, 665, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 276, 0, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 0, 487, 0, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 0, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	2270, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 613, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 0, 630, 629, 631, 689, 632, 633, 2277,
	0, 271, 0, 634, 635, 690, 636, 637, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 2276, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 0, 630, 629, 631, 689, 632, 633, 2263, 0,
	271, 0, 634, 635, 690, 636, 637, 638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 2265, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 276,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 2229, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 276,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 1250, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	0, 630, 629, 631, 689, 632, 633, 1594, 0, 271,
	0, 634, 635, 690, 636, 637, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 640, 641, 0, 294, 642,
	295, 643, 0, 644, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 645, 646, 647, 0, 303, 304,
	648, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	649, 650, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	651, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 652, 653, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 654, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 655, 656,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 657, 0, 658, 388, 0, 389, 390, 391, 392,
	393, 1593, 660, 661, 477, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 662, 663, 0, 664, 0,
	406, 407, 0, 665, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 666, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 276, 0,
	474, 475, 0, 667, 476, 668, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 0, 487, 0, 670, 488, 489, 481, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 673,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 675, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 676, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 0, 569, 570, 552,
	553, 571, 572, 0, 573, 574, 575, 576, 577, 578,
	579, 677, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 678, 587, 588, 589, 590, 679, 594,
	595, 0, 596, 597, 0, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 680,
	681, 682, 683, 0, 615, 0, 607, 608, 609, 684,
	610, 685, 0, 611, 612, 613, 614, 0, 616, 617,
	0, 0, 618, 619, 620, 622, 623, 621, 624, 0,
	625, 0, 0, 626, 627, 628, 686, 687, 688, 0,
	630, 629, 631, 689, 632, 633, 1506, 0, 271, 0,
	634, 635, 690, 636, 637, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 645, 646, 647, 0, 303, 304, 648,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	657, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	659, 660, 661, 477, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 0, 404, 662, 663, 0, 664, 0, 406,
	407, 0, 665, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 666, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 276, 0, 474,
	475, 0, 667, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 0, 487, 0, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 0, 569, 570, 552, 553,
	571, 572, 0, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 684, 610,
	685, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 0, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 1499, 0, 271, 0, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	0, 644, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 645, 646, 647, 0, 303, 304, 648, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 657,
	0, 658, 388, 0, 389, 390, 391, 392, 393, 1501,
	660, 661, 477, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 0, 404, 662, 663, 0, 664, 0, 406, 407,
	0, 665, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 666, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 276, 0, 474, 475,
	0, 667, 476, 668, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	0, 487, 0, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 0, 569, 570, 552, 553, 571,
	572, 0, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 0,
	596, 597, 0, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 680, 681, 682,
	683, 0, 615, 0, 607, 608, 609, 684, 610, 685,
	0, 611, 612, 613, 614, 0, 616, 617, 0, 0,
	618, 619, 620, 622, 623, 621, 624, 0, 625, 0,
	0, 626, 627, 628, 686, 687, 688, 0, 630, 629,
	631, 689, 632, 633, 1324, 0, 271, 0, 634, 635,
	690, 636, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 639, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 640, 641, 0, 294, 642, 295, 643, 0,
	644, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 645, 646, 647, 0, 303, 304, 648, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 649, 650, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 651, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 652, 653,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 654, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 655, 656, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 657, 0,
	658, 388, 0, 389, 390, 391, 392, 393, 1323, 660,
	661, 477, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 662, 663, 0, 664, 0, 406, 407, 0,
	665, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 666, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 276, 0, 474, 475, 0,
	667, 476, 668, 478, 479, 0, 0, 480, 0, 0,
	0, 482, 483, 484, 0, 0, 485, 486, 669, 0,
	487, 0, 670, 488, 489, 481, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 0, 499, 500, 671, 501,
	502, 503, 672, 504, 505, 506, 673, 507, 674, 508,
	509, 0, 510, 511, 0, 512, 513, 514, 515, 516,
	517, 518, 675, 519, 520, 522, 521, 523, 0, 524,
	0, 525, 526, 527, 0, 0, 0, 0, 0, 528,
	0, 530, 531, 532, 533, 529, 534, 535, 536, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 676, 547, 0, 548, 549, 555, 556, 557, 550,
	551, 558, 559, 560, 561, 562, 0, 564, 565, 563,
	566, 567, 568, 0, 569, 570, 552, 553, 571, 572,
	0, 573, 574, 575, 576, 577, 578, 579, 677, 0,
	580, 0, 581, 582, 583, 585, 554, 586, 591, 592,
	678, 587, 588, 589, 590, 679, 594, 595, 0, 596,
	597, 0, 593, 584, 0, 598, 599, 600, 601, 602,
	603, 604, 362, 605, 0, 606, 680, 681, 682, 683,
	0, 615, 0, 607, 608, 609, 684, 610, 685, 0,
	611, 612, 613, 614, 0, 616, 617, 0, 0, 618,
	619, 620, 622, 623, 621, 624, 0, 625, 0, 0,
	626, 627, 628, 686, 687, 688, 0, 630, 629, 631,
	689, 632, 633, 1314, 0, 271, 0, 634, 635, 690,
	636, 637, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 0, 644,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	645, 646, 647, 0, 303, 304, 648, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 657, 0, 658,
	388, 0, 389, 390, 391, 392, 393, 1313, 660, 661,
	477, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 662, 663, 0, 664, 0, 406, 407, 0, 665,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 666, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 0, 667,
	476, 668, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 0, 487,
	0, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 0, 569, 570, 552, 553, 571, 572, 0,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 680, 681, 682, 683, 0,
	615, 0, 607, 608, 609, 684, 610, 685, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 0, 625, 0, 0, 626,
	627, 628, 686, 687, 688, 0, 630, 629, 631, 689,
	632, 633, 1311, 0, 271, 0, 634, 635, 690, 636,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 304, 648, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 1310, 660, 661, 477,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	662, 663, 0, 664, 0, 406, 407, 0, 665, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 276, 0, 474, 475, 0, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 0, 487, 0,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 0, 564, 565, 563, 566, 567,
	568, 0, 569, 570, 552, 553, 571, 572, 0, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 680, 681, 682, 683, 0, 615,
	0, 607, 608, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 0, 630, 629, 631, 689, 632,
	633, 1306, 0, 271, 0, 634, 635, 690, 636, 637,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 640,
	641, 0, 294, 642, 295, 643, 0, 644, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 645, 646,
	647, 0, 303, 304, 648, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 649, 650, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 651, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 652, 653, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 654, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 655, 656, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 657, 0, 658, 388, 0,
	389, 390, 391, 392, 393, 1305, 660, 661, 477, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 662,
	663, 0, 664, 0, 406, 407, 0, 665, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 666,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 276, 0, 474, 475, 0, 667, 476, 668,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 0, 487, 0, 670,
	488, 489, 481, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 673, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 675,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 676, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	0, 569, 570, 552, 553, 571, 572, 0, 573, 574,
	575, 576, 577, 578, 579, 677, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 678, 587, 588,
	589, 590, 679, 594, 595, 0, 596, 597, 0, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 680, 681, 682, 683, 0, 615, 0,
	607, 608, 609, 684, 610, 685, 0, 611, 612, 613,
	614, 0, 616, 617, 0, 0, 618, 619, 620, 622,
	623, 621, 624, 0, 625, 0, 0, 626, 627, 628,
	686, 687, 688, 0, 630, 629, 631, 689, 632, 633,
	692, 0, 271, 0, 634, 635, 690, 636, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 659, 660, 661, 477, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 662, 663,
	0, 664, 0, 406, 407, 0, 665, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 276, 0, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 0, 487, 0, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 0, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	0, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 613, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 0, 630, 629, 631, 689, 632, 633, 262,
	0, 271, 0, 634, 635, 690, 636, 637, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 714,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 715, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 716, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 2371, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 2369, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 2367, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 2283, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 2077, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 2071, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 0, 630, 629, 631, 689, 632, 633, 899, 0,
	271, 0, 634, 635, 690, 636, 637, 638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	898, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 897, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 3105, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 4264, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	0, 630, 629, 631, 689, 632, 633, 1358, 0, 271,
	0, 634, 635, 690, 636, 637, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 286, 287, 1361, 288,
	289, 290, 291, 292, 293, 640, 641, 0, 294, 642,
	295, 643, 0, 644, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 645, 646, 1359, 0, 303, 304,
	648, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	649, 650, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	651, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 652, 653, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 654, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 655, 656,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 657, 0, 658, 388, 0, 389, 390, 391, 392,
	393, 659, 660, 661, 477, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 662, 663, 0, 664, 0,
	406, 407, 0, 665, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 666, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 782, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 0, 0,
	474, 475, 0, 667, 476, 668, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 0, 487, 0, 670, 488, 489, 481, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 673,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 675, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 0, 781,
	543, 544, 545, 546, 676, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 780, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 1362, 568, 0, 569, 570, 552,
	553, 571, 572, 0, 573, 574, 575, 576, 577, 578,
	579, 677, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 678, 587, 588, 589, 590, 679, 594,
	595, 0, 596, 597, 0, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 778,
	681, 682, 683, 0, 615, 0, 607, 608, 609, 684,
	610, 685, 0, 611, 612, 613, 614, 0, 616, 617,
	0, 0, 618, 619, 620, 622, 623, 621, 624, 0,
	625, 0, 0, 626, 627, 628, 686, 687, 688, 0,
	630, 629, 631, 689, 632, 633, 1358, 0, 271, 0,
	634, 635, 690, 636, 637, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 286, 287, 1361, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 645, 646, 1359, 0, 303, 304, 648,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	657, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	659, 660, 661, 477, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 662, 663, 0, 664, 0, 406,
	407, 0, 665, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 666, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 782, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 0, 0, 474,
	475, 0, 667, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 0, 487, 0, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 0, 781, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 780, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 1362, 568, 0, 569, 570, 552, 553,
	571, 572, 0, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 778, 681,
	682, 683, 0, 615, 0, 607, 1360, 609, 684, 610,
	685, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 0, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 701, 0, 271, 0, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 700, 284, 285, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	0, 644, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 645, 646, 647, 0, 303, 304, 648, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 657,
	0, 658, 388, 0, 389, 390, 391, 392, 393, 659,
	660, 661, 477, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 662, 663, 0, 664, 0, 406, 407,
	0, 665, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 666, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 0, 0, 474, 475,
	0, 667, 476, 668, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	0, 487, 0, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	699, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 0, 569, 570, 552, 553, 571,
	572, 0, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 0,
	596, 597, 0, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 680, 681, 682,
	683, 0, 615, 0, 607, 608, 609, 684, 610, 685,
	0, 611, 612, 613, 614, 0, 616, 617, 0, 0,
	618, 619, 620, 622, 623, 621, 624, 0, 625, 0,
	0, 626, 627, 628, 686, 687, 688, 0, 630, 629,
	631, 689, 632, 633, 271, 3092, 0, 0, 634, 635,
	690, 636, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 304, 648, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	662, 663, 0, 664, 0, 406, 407, 0, 665, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 0, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 0, 487, 0,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 0, 542, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 558,
	559, 560, 561, 562, 0, 564, 565, 563, 566, 567,
	568, 0, 569, 570, 552, 553, 571, 572, 0, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 680, 681, 682, 683, 0, 615,
	0, 607, 608, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 0, 630, 629, 631, 689, 632,
	633, 271, 4274, 0, 0, 634, 635, 690, 636, 637,
	638, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 4556, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 4160, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 3922, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 271, 630, 629, 631, 689, 632, 633, 0, 0,
	0, 0, 634, 635, 690, 636, 637, 638, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 2764, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 0, 630, 629, 631, 689, 632, 633, 271, 3092,
	0, 0, 634, 635, 690, 636, 637, 638, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 645, 646, 647, 0, 303, 304, 648,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	657, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	659, 660, 661, 477, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 662, 663, 0, 664, 0, 406,
	407, 0, 665, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 666, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 0, 0, 474,
	475, 0, 667, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 3089, 0, 0, 485, 486,
	669, 0, 487, 0, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 0, 569, 570, 552, 553,
	571, 572, 0, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 684, 610,
	685, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 0, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 271, 630,
	629, 631, 689, 632, 633, 0, 0, 0, 0, 634,
	635, 690, 636, 637, 638, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 645, 646, 647, 0, 303, 304, 648,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	657, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	659, 660, 661, 477, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 662, 663, 0, 664, 0, 406,
	407, 0, 665, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 666, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 0, 0, 474,
	475, 0, 667, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 0, 487, 0, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 2195, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 0, 781, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 780, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 0, 569, 570, 552, 553,
	571, 572, 0, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 778, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 684, 610,
	685, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 0, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 271, 630,
	629, 631, 689, 632, 633, 0, 0, 0, 0, 634,
	635, 690, 636, 637, 638, 277, 279, 278, 280, 281,
	282, 283, 2341, 284, 285, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 645, 646, 647, 0, 303, 304, 648,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	657, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	659, 660, 661, 477, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 662, 663, 0, 664, 0, 406,
	407, 0, 665, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 666, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 0, 0, 474,
	475, 0, 667, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 0, 487, 0, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 0, 569, 570, 552, 553,
	571, 572, 0, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 684, 610,
	685, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 0, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 2329, 0, 271, 0, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	0, 644, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 645, 646, 647, 0, 303, 304, 648, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 657,
	0, 658, 388, 0, 389, 390, 391, 392, 393, 659,
	660, 661, 477, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 662, 663, 0, 664, 0, 406, 407,
	0, 665, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 666, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 0, 0, 474, 475,
	0, 667, 476, 668, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	0, 487, 0, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 0, 542, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 558, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 0, 569, 570, 552, 553, 571,
	572, 0, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 0,
	596, 597, 0, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 680, 681, 682,
	683, 0, 615, 0, 607, 608, 609, 684, 610, 685,
	0, 611, 612, 613, 614, 0, 616, 617, 0, 0,
	618, 619, 620, 622, 623, 621, 624, 0, 625, 0,
	0, 626, 627, 628, 686, 687, 688, 0, 630, 629,
	631, 689, 632, 633, 2091, 0, 271, 0, 634, 635,
	690, 636, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 639, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 640, 641, 0, 294, 642, 295, 643, 0,
	644, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 645, 646, 647, 0, 303, 304, 648, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 649, 650, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 651, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 652, 653,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 654, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 655, 656, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 657, 0,
	658, 388, 0, 389, 390, 391, 392, 393, 659, 660,
	661, 477, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 662, 663, 0, 664, 0, 406, 407, 0,
	665, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 666, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 0,
	667, 476, 668, 478, 479, 0, 0, 480, 0, 0,
	0, 482, 483, 484, 0, 0, 485, 486, 669, 0,
	487, 0, 670, 488, 489, 481, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 0, 499, 500, 671, 501,
	502, 503, 672, 504, 505, 506, 673, 507, 674, 508,
	509, 0, 510, 511, 0, 512, 513, 514, 515, 516,
	517, 518, 675, 519, 520, 522, 521, 523, 0, 524,
	0, 525, 526, 527, 0, 0, 0, 0, 0, 528,
	0, 530, 531, 532, 533, 529, 534, 535, 536, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 676, 547, 0, 548, 549, 555, 556, 557, 550,
	551, 558, 559, 560, 561, 562, 0, 564, 565, 563,
	566, 567, 568, 0, 569, 570, 552, 553, 571, 572,
	0, 573, 574, 575, 576, 577, 578, 579, 677, 0,
	580, 0, 581, 582, 583, 585, 554, 586, 591, 592,
	678, 587, 588, 589, 590, 679, 594, 595, 0, 596,
	597, 0, 593, 584, 0, 598, 599, 600, 601, 602,
	603, 604, 362, 605, 0, 606, 680, 681, 682, 683,
	0, 615, 0, 607, 608, 609, 684, 610, 685, 0,
	611, 612, 613, 614, 0, 616, 617, 0, 0, 618,
	619, 620, 622, 623, 621, 624, 0, 625, 0, 0,
	626, 627, 628, 686, 687, 688, 0, 630, 629, 631,
	689, 632, 633, 2058, 0, 271, 0, 634, 635, 690,
	636, 637, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 0, 644,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	645, 646, 647, 0, 303, 304, 648, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 657, 0, 658,
	388, 0, 389, 390, 391, 392, 393, 659, 660, 661,
	477, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 662, 663, 0, 664, 0, 406, 407, 0, 665,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 666, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 0, 667,
	476, 668, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 0, 487,
	0, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 0, 569, 570, 552, 553, 571, 572, 0,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 680, 681, 682, 683, 0,
	615, 0, 607, 608, 609, 684, 610, 685, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 0, 625, 0, 0, 626,
	627, 628, 686, 687, 688, 0, 630, 629, 631, 689,
	632, 633, 772, 0, 271, 0, 634, 635, 690, 636,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 768, 648, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	662, 663, 0, 664, 0, 406, 407, 0, 665, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 773, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 782, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 0, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 0, 487, 0,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 0, 781, 543, 544, 545, 546, 676,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 780,
	559, 560, 561, 562, 0, 564, 565, 563, 566, 1627,
	568, 0, 569, 570, 552, 553, 571, 572, 0, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 778, 681, 682, 683, 0, 615,
	0, 607, 608, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 0, 630, 629, 631, 689, 632,
	633, 1600, 0, 271, 0, 634, 635, 690, 636, 637,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 640,
	641, 0, 294, 642, 295, 643, 0, 644, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 645, 646,
	647, 0, 303, 304, 648, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 649, 650, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 651, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 652, 653, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 654, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 655, 656, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 657, 0, 658, 388, 0,
	389, 390, 391, 392, 393, 1599, 660, 661, 477, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 662,
	663, 0, 664, 0, 406, 407, 0, 665, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 666,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 0, 0, 474, 475, 0, 667, 476, 668,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 0, 487, 0, 670,
	488, 489, 481, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 673, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 675,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 676, 547,
	0, 548, 549, 555, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	0, 569, 570, 552, 553, 571, 572, 0, 573, 574,
	575, 576, 577, 578, 579, 677, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 678, 587, 588,
	589, 590, 679, 594, 595, 0, 596, 597, 0, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 680, 681, 682, 683, 0, 615, 0,
	607, 608, 609, 684, 610, 685, 0, 611, 612, 613,
	614, 0, 616, 617, 0, 0, 618, 619, 620, 622,
	623, 621, 624, 0, 625, 0, 0, 626, 627, 628,
	686, 687, 688, 0, 630, 629, 631, 689, 632, 633,
	1584, 0, 271, 0, 634, 635, 690, 636, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 1582, 660, 661, 477, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 662, 663,
	0, 664, 0, 406, 407, 0, 665, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 0, 487, 0, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 0, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	0, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 613, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 0, 630, 629, 631, 689, 632, 633, 1577,
	0, 271, 0, 634, 635, 690, 636, 637, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 0, 630, 629, 631, 689, 632, 633, 1554, 0,
	271, 0, 634, 635, 690, 636, 637, 638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 1552, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	0, 630, 629, 631, 689, 632, 633, 1511, 0, 271,
	0, 634, 635, 690, 636, 637, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 640, 641, 0, 294, 642,
	295, 643, 0, 644, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 645, 646, 647, 0, 303, 304,
	648, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	649, 650, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	651, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 652, 653, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 654, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 655, 656,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 657, 0, 658, 388, 0, 389, 390, 391, 392,
	393, 659, 660, 661, 477, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 662, 663, 0, 664, 0,
	406, 407, 0, 665, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 666, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 0, 0,
	474, 475, 0, 667, 476, 668, 478, 479, 0, 0,
	480, 0, 0, 0, 482, 483, 484, 0, 0, 485,
	486, 669, 0, 487, 0, 670, 488, 489, 481, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 0, 499,
	500, 671, 501, 502, 503, 672, 504, 505, 506, 673,
	507, 674, 508, 509, 0, 510, 511, 0, 512, 513,
	514, 515, 516, 517, 518, 675, 519, 520, 522, 521,
	523, 0, 524, 0, 525, 526, 527, 0, 0, 0,
	0, 0, 528, 0, 530, 531, 532, 533, 529, 534,
	535, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	543, 544, 545, 546, 676, 547, 0, 548, 549, 555,
	556, 557, 550, 551, 558, 559, 560, 561, 562, 0,
	564, 565, 563, 566, 567, 568, 0, 569, 570, 552,
	553, 571, 572, 0, 573, 574, 575, 576, 577, 578,
	579, 677, 0, 580, 0, 581, 582, 583, 585, 554,
	586, 591, 592, 678, 587, 588, 589, 590, 679, 594,
	595, 0, 596, 597, 0, 593, 584, 0, 598, 599,
	600, 601, 602, 603, 604, 362, 605, 0, 606, 680,
	681, 682, 683, 0, 615, 0, 607, 608, 609, 684,
	610, 685, 0, 611, 612, 613, 614, 0, 616, 617,
	0, 0, 618, 619, 620, 622, 623, 621, 624, 0,
	625, 0, 0, 626, 627, 628, 686, 687, 688, 0,
	630, 629, 631, 689, 632, 633, 1494, 0, 271, 0,
	634, 635, 690, 636, 637, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 640, 641, 0, 294, 642, 295,
	643, 0, 644, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 645, 646, 647, 0, 303, 304, 648,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 649,
	650, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 651,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	652, 653, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 654, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 655, 656, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	657, 0, 658, 388, 0, 389, 390, 391, 392, 393,
	659, 660, 661, 477, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 662, 663, 0, 664, 0, 406,
	407, 0, 665, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 666, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 0, 0, 474,
	475, 0, 667, 476, 668, 478, 479, 0, 0, 480,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 486,
	669, 0, 487, 0, 670, 488, 489, 481, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 0, 499, 500,
	671, 501, 502, 503, 672, 504, 505, 506, 673, 507,
	674, 508, 509, 0, 510, 511, 0, 512, 513, 514,
	515, 516, 517, 518, 675, 519, 520, 522, 521, 523,
	0, 524, 0, 525, 526, 527, 0, 0, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 529, 534, 535,
	536, 537, 538, 0, 539, 540, 541, 0, 542, 543,
	544, 545, 546, 676, 547, 0, 548, 549, 555, 556,
	557, 550, 551, 558, 559, 560, 561, 562, 0, 564,
	565, 563, 566, 567, 568, 0, 569, 570, 552, 553,
	571, 572, 0, 573, 574, 575, 576, 577, 578, 579,
	677, 0, 580, 0, 581, 582, 583, 585, 554, 586,
	591, 592, 678, 587, 588, 589, 590, 679, 594, 595,
	0, 596, 597, 0, 593, 584, 0, 598, 599, 600,
	601, 602, 603, 604, 362, 605, 0, 606, 680, 681,
	682, 683, 0, 615, 0, 607, 608, 609, 684, 610,
	685, 0, 611, 612, 613, 614, 0, 616, 617, 0,
	0, 618, 619, 620, 622, 623, 621, 624, 0, 625,
	0, 0, 626, 627, 628, 686, 687, 688, 0, 630,
	629, 631, 689, 632, 633, 1364, 0, 271, 0, 634,
	635, 690, 636, 637, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 640, 641, 0, 294, 642, 295, 643,
	0, 644, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 645, 646, 647, 0, 303, 304, 648, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 649, 650,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 651, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 652,
	653, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 654, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 655, 656, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 657,
	0, 658, 388, 0, 389, 390, 391, 392, 393, 659,
	660, 661, 477, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 662, 663, 0, 664, 0, 406, 407,
	0, 665, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 666, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 0, 0, 474, 475,
	0, 667, 476, 668, 478, 479, 0, 0, 480, 0,
	0, 0, 482, 483, 484, 0, 0, 485, 486, 669,
	0, 487, 0, 670, 488, 489, 481, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 0, 499, 500, 671,
	501, 502, 503, 672, 504, 505, 506, 673, 507, 674,
	508, 509, 0, 510, 511, 0, 512, 513, 514, 515,
	516, 517, 518, 675, 519, 520, 522, 521, 523, 0,
	524, 0, 525, 526, 527, 0, 0, 0, 0, 0,
	528, 0, 530, 531, 532, 533, 529, 534, 535, 536,
	537, 538, 0, 539, 540, 541, 0, 781, 543, 544,
	545, 546, 676, 547, 0, 548, 549, 555, 556, 557,
	550, 551, 780, 559, 560, 561, 562, 0, 564, 565,
	563, 566, 567, 568, 0, 569, 570, 552, 553, 571,
	572, 0, 573, 574, 575, 576, 577, 578, 579, 677,
	0, 580, 0, 581, 582, 583, 585, 554, 586, 591,
	592, 678, 587, 588, 589, 590, 679, 594, 595, 0,
	596, 597, 0, 593, 584, 0, 598, 599, 600, 601,
	602, 603, 604, 362, 605, 0, 606, 778, 681, 682,
	683, 0, 615, 0, 607, 608, 609, 684, 610, 685,
	0, 611, 612, 613, 614, 0, 616, 617, 0, 0,
	618, 619, 620, 622, 623, 621, 624, 0, 625, 0,
	0, 626, 627, 628, 686, 687, 688, 0, 630, 629,
	631, 689, 632, 633, 1329, 0, 271, 0, 634, 635,
	690, 636, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 639, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 640, 641, 0, 294, 642, 295, 643, 0,
	644, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 645, 646, 647, 0, 303, 304, 648, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 649, 650, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 651, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 652, 653,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 654, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 655, 656, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 657, 0,
	658, 388, 0, 389, 390, 391, 392, 393, 1328, 660,
	661, 477, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 662, 663, 0, 664, 0, 406, 407, 0,
	665, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 666, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 0,
	667, 476, 668, 478, 479, 0, 0, 480, 0, 0,
	0, 482, 483, 484, 0, 0, 485, 486, 669, 0,
	487, 0, 670, 488, 489, 481, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 0, 499, 500, 671, 501,
	502, 503, 672, 504, 505, 506, 673, 507, 674, 508,
	509, 0, 510, 511, 0, 512, 513, 514, 515, 516,
	517, 518, 675, 519, 520, 522, 521, 523, 0, 524,
	0, 525, 526, 527, 0, 0, 0, 0, 0, 528,
	0, 530, 531, 532, 533, 529, 534, 535, 536, 537,
	538, 0, 539, 540, 541, 0, 542, 543, 544, 545,
	546, 676, 547, 0, 548, 549, 555, 556, 557, 550,
	551, 558, 559, 560, 561, 562, 0, 564, 565, 563,
	566, 567, 568, 0, 569, 570, 552, 553, 571, 572,
	0, 573, 574, 575, 576, 577, 578, 579, 677, 0,
	580, 0, 581, 582, 583, 585, 554, 586, 591, 592,
	678, 587, 588, 589, 590, 679, 594, 595, 0, 596,
	597, 0, 593, 584, 0, 598, 599, 600, 601, 602,
	603, 604, 362, 605, 0, 606, 680, 681, 682, 683,
	0, 615, 0, 607, 608, 609, 684, 610, 685, 0,
	611, 612, 613, 614, 0, 616, 617, 0, 0, 618,
	619, 620, 622, 623, 621, 624, 0, 625, 0, 0,
	626, 627, 628, 686, 687, 688, 0, 630, 629, 631,
	689, 632, 633, 1320, 0, 271, 0, 634, 635, 690,
	636, 637, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 0, 644,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	645, 646, 647, 0, 303, 304, 648, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 657, 0, 658,
	388, 0, 389, 390, 391, 392, 393, 1319, 660, 661,
	477, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 662, 663, 0, 664, 0, 406, 407, 0, 665,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 666, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 0, 667,
	476, 668, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 0, 487,
	0, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 0, 569, 570, 552, 553, 571, 572, 0,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 680, 681, 682, 683, 0,
	615, 0, 607, 608, 609, 684, 610, 685, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 0, 625, 0, 0, 626,
	627, 628, 686, 687, 688, 271, 630, 629, 631, 689,
	632, 633, 0, 0, 0, 0, 634, 635, 690, 636,
	637, 638, 277, 279, 278, 280, 281, 282, 283, 1273,
	284, 285, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 0, 644,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	645, 646, 647, 0, 303, 304, 648, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 657, 0, 658,
	388, 0, 389, 390, 391, 392, 393, 659, 660, 661,
	477, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 662, 663, 0, 664, 0, 406, 407, 0, 665,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 666, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 0, 667,
	476, 668, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 0, 487,
	0, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 0, 569, 570, 552, 553, 571, 572, 0,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 680, 681, 682, 683, 0,
	615, 0, 607, 608, 609, 684, 610, 685, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 0, 625, 0, 0, 626,
	627, 628, 686, 687, 688, 271, 630, 629, 631, 689,
	632, 633, 0, 0, 0, 0, 634, 635, 690, 636,
	637, 638, 277, 279, 278, 280, 281, 282, 283, 787,
	284, 285, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 640, 641, 0, 294, 642, 295, 643, 0, 644,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	645, 646, 647, 0, 303, 304, 648, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 649, 650, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 651, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 652, 653, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	654, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 655, 656, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 657, 0, 658,
	388, 0, 389, 390, 391, 392, 393, 659, 660, 661,
	477, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 662, 663, 0, 664, 0, 406, 407, 0, 665,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 666, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 0, 667,
	476, 668, 478, 479, 0, 0, 480, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 486, 669, 0, 487,
	0, 670, 488, 489, 481, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 499, 500, 671, 501, 502,
	503, 672, 504, 505, 506, 673, 507, 674, 508, 509,
	0, 510, 511, 0, 512, 513, 514, 515, 516, 517,
	518, 675, 519, 520, 522, 521, 523, 0, 524, 0,
	525, 526, 527, 0, 0, 0, 0, 0, 528, 0,
	530, 531, 532, 533, 529, 534, 535, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 543, 544, 545, 546,
	676, 547, 0, 548, 549, 555, 556, 557, 550, 551,
	558, 559, 560, 561, 562, 0, 564, 565, 563, 566,
	567, 568, 0, 569, 570, 552, 553, 571, 572, 0,
	573, 574, 575, 576, 577, 578, 579, 677, 0, 580,
	0, 581, 582, 583, 585, 554, 586, 591, 592, 678,
	587, 588, 589, 590, 679, 594, 595, 0, 596, 597,
	0, 593, 584, 0, 598, 599, 600, 601, 602, 603,
	604, 362, 605, 0, 606, 680, 681, 682, 683, 0,
	615, 0, 607, 608, 609, 684, 610, 685, 0, 611,
	612, 613, 614, 0, 616, 617, 0, 0, 618, 619,
	620, 622, 623, 621, 624, 0, 625, 0, 0, 626,
	627, 628, 686, 687, 688, 0, 630, 629, 631, 689,
	632, 633, 772, 0, 271, 0, 634, 635, 690, 636,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	640, 641, 0, 294, 642, 295, 643, 0, 644, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 645,
	646, 647, 0, 303, 768, 648, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 767, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 649, 650, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 651, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 652, 653, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 654,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 655, 656, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 657, 0, 658, 388,
	0, 389, 390, 391, 392, 393, 659, 660, 661, 477,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	662, 663, 0, 664, 0, 406, 407, 0, 665, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	666, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 773, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 782, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 0, 667, 476,
	668, 478, 479, 0, 0, 480, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 486, 669, 0, 487, 0,
	670, 488, 489, 481, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 0, 499, 500, 671, 501, 502, 503,
	672, 504, 505, 506, 673, 507, 674, 508, 509, 0,
	510, 511, 0, 512, 513, 514, 515, 516, 517, 518,
	675, 519, 520, 522, 521, 523, 0, 524, 0, 525,
	526, 527, 0, 0, 0, 0, 0, 528, 0, 530,
	531, 532, 533, 529, 534, 535, 536, 537, 538, 0,
	539, 540, 541, 0, 781, 543, 544, 545, 546, 769,
	547, 0, 548, 549, 555, 556, 557, 550, 551, 780,
	559, 560, 561, 562, 0, 564, 565, 563, 566, 770,
	568, 0, 569, 570, 552, 553, 571, 572, 0, 573,
	574, 575, 576, 577, 578, 579, 677, 0, 580, 0,
	581, 582, 583, 585, 554, 586, 591, 592, 678, 587,
	588, 589, 590, 679, 594, 595, 0, 596, 597, 0,
	593, 584, 0, 598, 599, 600, 601, 602, 603, 604,
	362, 605, 0, 606, 778, 681, 682, 683, 0, 615,
	0, 607, 774, 609, 684, 610, 685, 0, 611, 612,
	613, 614, 0, 616, 617, 0, 0, 618, 619, 620,
	622, 623, 621, 624, 0, 625, 0, 0, 626, 627,
	628, 686, 687, 688, 0, 630, 629, 631, 689, 632,
	633, 761, 0, 271, 0, 634, 635, 690, 636, 637,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 640,
	641, 0, 294, 642, 295, 643, 0, 644, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 645, 646,
	647, 0, 303, 304, 648, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 649, 650, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 651, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 652, 653, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 654, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 655, 656, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 657, 0, 658, 388, 0,
	389, 390, 391, 392, 393, 659, 660, 661, 477, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 662,
	663, 0, 664, 0, 406, 407, 0, 665, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 666,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 0, 0, 474, 475, 0, 667, 476, 668,
	478, 479, 0, 0, 480, 0, 0, 0, 482, 483,
	484, 0, 0, 485, 486, 669, 0, 487, 0, 670,
	488, 489, 481, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 0, 499, 500, 671, 501, 502, 503, 672,
	504, 505, 506, 673, 507, 674, 508, 509, 0, 510,
	511, 0, 512, 513, 514, 515, 516, 517, 518, 675,
	519, 520, 522, 521, 523, 0, 524, 0, 525, 526,
	527, 0, 0, 0, 0, 0, 528, 0, 530, 531,
	532, 533, 529, 534, 535, 536, 537, 538, 0, 539,
	540, 541, 0, 542, 543, 544, 545, 546, 676, 547,
	0, 548, 549, 762, 556, 557, 550, 551, 558, 559,
	560, 561, 562, 0, 564, 565, 563, 566, 567, 568,
	0, 569, 570, 552, 553, 571, 572, 0, 573, 574,
	575, 576, 577, 578, 579, 677, 0, 580, 0, 581,
	582, 583, 585, 554, 586, 591, 592, 678, 587, 588,
	589, 590, 679, 594, 595, 0, 596, 597, 0, 593,
	584, 0, 598, 599, 600, 601, 602, 603, 604, 362,
	605, 0, 606, 680, 681, 682, 683, 0, 615, 0,
	607, 608, 609, 684, 610, 685, 0, 611, 612, 613,
	614, 0, 616, 617, 0, 0, 618, 619, 620, 622,
	623, 621, 624, 0, 625, 0, 0, 626, 627, 628,
	686, 687, 688, 0, 630, 629, 631, 689, 632, 633,
	724, 0, 271, 0, 634, 635, 690, 636, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 640, 641,
	0, 294, 642, 295, 643, 0, 644, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 645, 646, 647,
	0, 303, 304, 648, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 649, 650, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 651, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 652, 653, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 654, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 655, 656, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 657, 0, 658, 388, 0, 389,
	390, 391, 392, 393, 659, 660, 661, 477, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 662, 663,
	0, 664, 0, 406, 407, 0, 665, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 666, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 0, 667, 476, 668, 478,
	479, 0, 0, 480, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 486, 669, 0, 487, 0, 670, 488,
	489, 481, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 0, 499, 500, 671, 501, 502, 503, 672, 504,
	505, 506, 673, 507, 674, 508, 509, 0, 510, 511,
	0, 512, 513, 514, 515, 516, 517, 518, 675, 519,
	520, 522, 521, 523, 0, 524, 0, 525, 526, 527,
	0, 0, 0, 0, 0, 528, 0, 530, 531, 532,
	533, 529, 534, 535, 536, 537, 538, 0, 539, 540,
	541, 0, 542, 543, 544, 545, 546, 676, 547, 0,
	548, 549, 555, 556, 557, 550, 551, 558, 559, 560,
	561, 562, 0, 564, 565, 563, 566, 567, 568, 0,
	569, 570, 552, 553, 571, 572, 0, 573, 574, 575,
	576, 577, 578, 579, 677, 0, 580, 0, 581, 582,
	583, 585, 554, 586, 591, 592, 678, 587, 588, 589,
	590, 679, 594, 595, 0, 596, 597, 0, 593, 584,
	0, 598, 599, 600, 601, 602, 603, 604, 362, 605,
	0, 606, 680, 681, 682, 683, 0, 615, 0, 607,
	608, 609, 684, 610, 685, 0, 611, 612, 613, 614,
	0, 616, 617, 0, 0, 618, 619, 620, 622, 623,
	621, 624, 0, 625, 0, 0, 626, 627, 628, 686,
	687, 688, 0, 630, 629, 631, 689, 632, 633, 718,
	0, 271, 0, 634, 635, 690, 636, 637, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 640, 641, 0,
	294, 642, 295, 643, 0, 644, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 645, 646, 647, 0,
	303, 304, 648, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 649, 650, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 651, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 652, 653, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 654, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	655, 656, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 657, 0, 658, 388, 0, 389, 390,
	391, 392, 393, 659, 660, 661, 477, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 662, 663, 0,
	664, 0, 406, 407, 0, 665, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 666, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 0, 667, 476, 668, 478, 479,
	0, 0, 480, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 486, 669, 0, 487, 0, 670, 488, 489,
	481, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	0, 499, 500, 671, 501, 502, 503, 672, 504, 505,
	506, 673, 507, 674, 508, 509, 0, 510, 511, 0,
	512, 513, 514, 515, 516, 517, 518, 675, 519, 520,
	522, 521, 523, 0, 524, 0, 525, 526, 527, 0,
	0, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	529, 534, 535, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 543, 544, 545, 546, 676, 547, 0, 548,
	549, 555, 556, 557, 550, 551, 558, 559, 560, 561,
	562, 0, 564, 565, 563, 566, 567, 568, 0, 569,
	570, 552, 553, 571, 572, 0, 573, 574, 575, 576,
	577, 578, 579, 677, 0, 580, 0, 581, 582, 583,
	585, 554, 586, 591, 592, 678, 587, 588, 589, 590,
	679, 594, 595, 0, 596, 597, 0, 593, 584, 0,
	598, 599, 600, 601, 602, 603, 604, 362, 605, 0,
	606, 680, 681, 682, 683, 0, 615, 0, 607, 608,
	609, 684, 610, 685, 0, 611, 612, 613, 614, 0,
	616, 617, 0, 0, 618, 619, 620, 622, 623, 621,
	624, 0, 625, 0, 0, 626, 627, 628, 686, 687,
	688, 0, 630, 629, 631, 689, 632, 633, 696, 0,
	271, 0, 634, 635, 690, 636, 637, 638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 3619, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	781, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 780, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	778, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 3545, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 3523, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 3520, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 3472, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 3470, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 3455, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 3060, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	762, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 2301, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 0, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 1291, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 388, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 516, 517, 518, 675, 519, 520, 1223,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 547, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	271, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 640, 641, 0, 294,
	642, 295, 643, 0, 644, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 645, 646, 647, 0, 303,
	304, 648, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 649, 650, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 651, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 652, 653, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 654, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 655,
	656, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 657, 0, 658, 0, 0, 389, 390, 391,
	392, 393, 659, 660, 661, 477, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 662, 663, 0, 664,
	0, 406, 407, 0, 665, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 666, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 0, 667, 476, 668, 478, 479, 0,
	0, 480, 0, 0, 0, 482, 483, 484, 0, 0,
	485, 486, 669, 0, 487, 0, 670, 488, 489, 481,
	490, 491, 0, 493, 494, 495, 496, 497, 498, 0,
	499, 500, 671, 501, 502, 503, 672, 504, 505, 506,
	673, 507, 674, 508, 509, 0, 510, 511, 0, 512,
	513, 514, 515, 0, 517, 518, 675, 519, 520, 522,
	521, 523, 0, 524, 0, 525, 526, 527, 0, 0,
	0, 0, 0, 528, 0, 530, 531, 532, 533, 529,
	534, 535, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 543, 544, 545, 546, 676, 0, 0, 548, 549,
	555, 556, 557, 550, 551, 558, 559, 560, 561, 562,
	0, 564, 565, 563, 566, 567, 568, 0, 569, 570,
	552, 553, 571, 572, 0, 573, 574, 575, 576, 577,
	578, 579, 677, 0, 580, 0, 581, 582, 583, 585,
	554, 586, 591, 592, 678, 587, 588, 589, 590, 679,
	594, 595, 0, 596, 597, 0, 593, 584, 0, 598,
	599, 600, 601, 602, 603, 604, 362, 605, 0, 606,
	680, 681, 682, 683, 0, 615, 0, 607, 608, 609,
	684, 610, 685, 0, 611, 612, 613, 614, 0, 616,
	617, 0, 0, 618, 619, 620, 622, 623, 621, 624,
	0, 625, 0, 0, 626, 627, 628, 686, 687, 688,
	0, 630, 629, 631, 689, 632, 633, 0, 0, 0,
	0, 634, 635, 690, 636, 637, 638, 1796, 1797, 0,
	1829, 1830, 1831, 1840, 1841, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	1827, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 1797, 0, 1829,
	1830, 1831, 1840, 1841, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1827,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 1822,
	1823, 1824, 1852, 0, 0, 0, 0, 0, 1804, 0,
	0, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 1826, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 1844, 0, 0, 0, 0,
	0, 0, 1813, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 0, 0, 0, 0, 0, 1821, 1822, 1823,
	1824, 0, 0, 0, 0, 1819, 0, 1804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 1847, 0,
	1845, 0, 0, 0, 0, 1826, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 1843, 0, 1844, 0, 0, 0, 0, 1849,
	0, 1813, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 1796, 1797, 0,
	1829, 1830, 1831, 1840, 1841, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 1833,
	1827, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1820, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 1834, 0, 0,
	0, 0, 1798, 0, 1838, 0, 0, 0, 1849, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 1822,
	1823, 1824, 0, 0, 0, 0, 0, 1836, 1804, 0,
	0, 0, 0, 1838, 0, 0, 0, 1810, 1811, 1817,
	1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802,
	1803, 1805, 1806, 0, 0, 0, 0, 4670, 0, 0,
	0, 0, 0, 0, 1851, 0, 1837, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 1826, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 1844, 0, 0, 0, 0,
	0, 0, 1813, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 1817, 1839,
	1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802, 1803,
	1805, 1806, 0, 0, 0, 0, 4666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 1797, 0, 1829,
	1830, 1831, 1840, 1841, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1827,
	0, 0, 0, 0, 1825, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1838, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 1822, 1823,
	1824, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 1817,
	1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802,
	1803, 1805, 1806, 0, 0, 1837, 0, 4581, 1847, 0,
	0, 0, 0, 0, 0, 1826, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 1844, 0, 0, 0, 0, 0,
	0, 1813, 1814, 0, 0, 0, 0, 0, 0, 1796,
	1797, 0, 1829, 1830, 1831, 1840, 1841, 1842, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 1827, 0, 1819, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	1821, 1822, 1823, 1824, 0, 0, 0, 0, 0, 0,
	1804, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 1797, 0, 1829, 1830, 1831, 1840, 1841,
	1842, 0, 0, 1838, 0, 0, 0, 0, 1837, 0,
	0, 1847, 0, 0, 1833, 1827, 0, 0, 1826, 1828,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 1851, 1843, 0, 1844, 0, 0,
	0, 0, 0, 0, 1813, 1814, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 1835, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 1817, 1839,
	1816, 1812, 1845, 1809, 1807, 1808, 1800, 1801, 1802, 1803,
	1805, 1806, 0, 0, 0, 0, 4540, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 1821, 1822, 1823, 1824, 0, 0, 0,
	0, 0, 0, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1797, 0, 1829, 1830,
	1831, 1840, 1841, 1842, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 1847, 0, 1825, 1833, 1827, 0,
	0, 1826, 1828, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 1843, 1820,
	1844, 0, 0, 0, 0, 0, 0, 1813, 1814, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 1835, 1838, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 1821, 1822, 1823, 1824,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	1811, 1817, 1839, 1816, 1812, 0, 1809, 1807, 1808, 1800,
	1801, 1802, 1803, 1805, 1806, 0, 0, 0, 0, 4539,
	0, 0, 0, 0, 1837, 0, 0, 1847, 0, 1825,
	0, 0, 0, 0, 1826, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1820, 1844, 0, 0, 0, 0, 0, 0,
	1813, 1814, 0, 0, 0, 0, 0, 0, 1796, 1797,
	0, 1829, 1830, 1831, 1840, 1841, 1842, 0, 1835, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1827, 0, 1819, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1811, 1817, 1839, 1816, 1812, 0, 1809,
	1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806, 0, 0,
	0, 0, 4350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 1821,
	1822, 1823, 1824, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 1797, 0, 1829, 1830, 1831, 1840, 1841, 1842,
	0, 0, 1838, 0, 0, 0, 0, 1837, 0, 0,
	1847, 0, 0, 1833, 1827, 0, 0, 1826, 1828, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 1851, 1843, 0, 1844, 0, 0, 0,
	0, 0, 0, 1813, 1814, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 0, 0, 0,
	0, 1835, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 1817, 1839, 1816,
	1812, 1845, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805,
	1806, 0, 0, 0, 0, 4183, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 1821, 1822, 1823, 1824, 0, 0, 0, 0,
	0, 0, 1804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 1797, 0, 1829, 1830, 1831,
	1840, 1841, 1842, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 1847, 0, 1825, 1833, 1827, 0, 0,
	1826, 1828, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 1843, 1820, 1844,
	0, 0, 0, 0, 0, 0, 1813, 1814, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 0, 1835, 1838, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 1821, 1822, 1823, 1824, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1811,
	1817, 1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801,
	1802, 1803, 1805, 1806, 0, 0, 0, 0, 4113, 0,
	0, 0, 0, 1837, 0, 0, 1847, 0, 1825, 0,
	0, 0, 0, 1826, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1820, 1844, 0, 0, 0, 0, 0, 0, 1813,
	1814, 0, 0, 0, 0, 0, 0, 1796, 1797, 0,
	1829, 1830, 1831, 1840, 1841, 1842, 0, 1835, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	1827, 0, 1819, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1811, 1817, 1839, 1816, 1812, 0, 1809, 1807,
	1808, 1800, 1801, 1802, 1803, 1805, 1806, 0, 0, 0,
	0, 4112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 1821, 1822,
	1823, 1824, 0, 0, 0, 0, 0, 0, 1804, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 1797, 0, 1829, 1830, 1831, 1840, 1841, 1842, 0,
	0, 1838, 0, 0, 0, 0, 1837, 0, 0, 1847,
	0, 0, 1833, 1827, 0, 0, 1826, 1828, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 1851, 1843, 0, 1844, 0, 0, 0, 0,
	0, 0, 1813, 1814, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 0, 0,
	1835, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1811, 1817, 1839, 1816, 1812,
	1845, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806,
	0, 0, 0, 0, 4111, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 1821, 1822, 1823, 1824, 0, 0, 0, 0, 0,
	0, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 1797, 0, 1829, 1830, 1831, 1840,
	1841, 1842, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 1847, 0, 1825, 1833, 1827, 0, 0, 1826,
	1828, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 1843, 1820, 1844, 0,
	0, 0, 0, 0, 0, 1813, 1814, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 0, 0, 1835, 1838, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 1821, 1822, 1823, 1824, 0, 0,
	0, 0, 0, 0, 1804, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 1817,
	1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802,
	1803, 1805, 1806, 0, 0, 0, 0, 3767, 0, 0,
	0, 0, 1837, 0, 0, 1847, 0, 1825, 0, 0,
	0, 0, 1826, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1820, 1844, 0, 0, 0, 0, 0, 0, 1813, 1814,
	0, 0, 0, 0, 0, 0, 1796, 1797, 0, 1829,
	1830, 1831, 1840, 1841, 1842, 0, 1835, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1827,
	0, 1819, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1811, 1817, 1839, 1816, 1812, 0, 1809, 1807, 1808,
	1800, 1801, 1802, 1803, 1805, 1806, 0, 0, 0, 0,
	3268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 1821, 1822, 1823,
	1824, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	1797, 0, 1829, 1830, 1831, 1840, 1841, 1842, 0, 0,
	1838, 0, 0, 0, 0, 1837, 0, 0, 1847, 0,
	0, 1833, 1827, 0, 0, 1826, 1828, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 1851, 1843, 0, 1844, 0, 0, 0, 0, 0,
	0, 1813, 1814, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 1811, 1817, 1839, 1816, 1812, 1845,
	1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806, 0,
	0, 0, 0, 3267, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	1821, 1822, 1823, 1824, 0, 0, 0, 0, 0, 0,
	1804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 1797, 0, 1829, 1830, 1831, 1840, 1841,
	1842, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 1847, 0, 1825, 1833, 1827, 0, 0, 1826, 1828,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 1843, 1820, 1844, 0, 0,
	0, 0, 0, 0, 1813, 1814, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 1835, 1838, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 1821, 1822, 1823, 1824, 0, 0, 0,
	0, 0, 0, 1804, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 1817, 1839,
	1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802, 1803,
	1805, 1806, 0, 0, 0, 0, 3266, 0, 0, 0,
	0, 1837, 0, 0, 1847, 0, 1825, 0, 0, 0,
	0, 1826, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1820,
	1844, 0, 0, 0, 0, 0, 0, 1813, 1814, 0,
	0, 0, 0, 0, 0, 1796, 1797, 0, 1829, 1830,
	1831, 1840, 1841, 1842, 0, 1835, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1827, 0,
	1819, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	1811, 1817, 1839, 1816, 1812, 0, 1809, 1807, 1808, 1800,
	1801, 1802, 1803, 1805, 1806, 0, 0, 0, 0, 3265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 1821, 1822, 1823, 1824,
	0, 0, 0, 0, 0, 0, 1804, 4819, 0, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 1796, 1797,
	0, 1829, 1830, 1831, 1840, 1841, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	1833, 1827, 0, 0, 1837, 0, 0, 1847, 1799, 0,
	0, 0, 0, 0, 1826, 1828, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1843, 0, 1844, 1852, 0, 0, 0, 0, 0,
	1813, 1814, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 1835, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1811, 1817, 1839, 1816, 1812, 1845, 1809,
	1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806, 0, 0,
	3230, 0, 0, 0, 0, 0, 1834, 0, 0, 1821,
	1822, 1823, 1824, 0, 0, 0, 0, 1849, 0, 1804,
	0, 3330, 0, 0, 0, 3329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4818,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 1797,
	0, 1829, 1830, 1831, 1840, 1841, 1842, 1837, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 1826, 1828, 0,
	1833, 1827, 1825, 0, 0, 0, 3201, 0, 1799, 0,
	0, 0, 0, 0, 1843, 0, 1844, 1846, 0, 0,
	0, 0, 0, 1813, 1814, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 1835, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 1818, 0, 0, 1819, 0, 0, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 3202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	1822, 1823, 1824, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 1817, 1839, 1816,
	1812, 0, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805,
	1806, 0, 0, 0, 0, 1825, 0, 1837, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 1826, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 1843, 0, 1844, 0, 0, 0,
	0, 0, 0, 1813, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1811,
	1817, 1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801,
	1802, 1803, 1805, 1806, 2737, 0, 0, 0, 0, 0,
	0, 1796, 1797, 0, 1829, 1830, 1831, 1840, 1841, 1842,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 1833, 1827, 0, 0, 0, 2736, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 1820, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 1838, 1798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 1822, 1823, 1824, 0, 0, 1836, 0,
	0, 0, 1804, 0, 0, 0, 0, 0, 1810, 1811,
	1817, 1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801,
	1802, 1803, 1805, 1806, 1796, 1797, 0, 1829, 1830, 1831,
	1840, 1841, 1842, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 1847, 0, 0, 1833, 1827, 0, 0,
	1826, 1828, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 1843, 0, 1844,
	0, 0, 0, 0, 0, 0, 1813, 1814, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 1821, 1822, 1823, 1824, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 1797, 0,
	1829, 1830, 1831, 1840, 1841, 1842, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 1847, 0, 1825, 1833,
	1827, 0, 0, 1826, 1828, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	1843, 1820, 1844, 0, 0, 0, 0, 0, 0, 1813,
	1814, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 1835, 1838, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 1077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 1821, 1822,
	1823, 1824, 0, 0, 0, 0, 0, 0, 1804, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1811, 1817, 1839, 1816, 1812, 0, 1809, 1807,
	1808, 1800, 1801, 1802, 1803, 1805, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 1847,
	0, 1825, 0, 0, 0, 0, 1826, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1820, 1844, 0, 0, 0, 0,
	0, 0, 1813, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1811, 1817, 1839, 1816, 1812,
	0, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1797, 1820, 1829, 1830,
	1831, 1840, 1841, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1827, 0,
	0, 0, 0, 0, 1838, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 1851, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 3748, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 1817,
	1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801, 1802,
	1803, 1805, 1806, 0, 0, 0, 1821, 1822, 1823, 1824,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 0, 3336, 0, 0, 0, 0, 0, 1796, 1797,
	0, 1829, 1830, 1831, 1840, 1841, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1827, 0, 0, 1837, 3331, 0, 1847, 1799, 0,
	0, 0, 0, 0, 1826, 1828, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 1844, 1852, 0, 0, 0, 0, 0,
	1813, 1814, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 1835, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 1821,
	1822, 1823, 1824, 0, 0, 0, 0, 1849, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 1797,
	0, 1829, 1830, 1831, 1840, 1841, 1842, 1837, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 1826, 1828, 0,
	1833, 1827, 1825, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 1843, 0, 1844, 1846, 0, 0,
	0, 0, 0, 1813, 1814, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 1835, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 1818, 0, 0, 1819, 0, 0, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	1822, 1823, 1824, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 1817, 1839, 1816,
	1812, 0, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805,
	1806, 0, 0, 0, 0, 1825, 0, 1837, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 1826, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 1843, 0, 1844, 0, 0, 0,
	0, 0, 0, 1813, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 1835, 1796, 1797, 0, 1829, 1830, 1831, 1840, 1841,
	1842, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 1833, 1827, 1851, 0, 0, 3269,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 1845, 0, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 1834,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	3296, 0, 0, 0, 0, 0, 0, 0, 1810, 1811,
	1817, 1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801,
	1802, 1803, 1805, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 1822, 1823, 1824, 0, 1820, 0,
	0, 0, 0, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1797, 0, 1829, 1830,
	1831, 1840, 1841, 1842, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1827, 0,
	0, 1837, 0, 0, 1847, 1799, 0, 0, 0, 0,
	0, 1826, 1828, 0, 1846, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	1844, 1852, 0, 0, 0, 0, 0, 1813, 1814, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 0, 0, 1835, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1811,
	1817, 1839, 1816, 1812, 0, 1809, 1807, 1808, 1800, 1801,
	1802, 1803, 1805, 1806, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 1821, 1822, 1823, 1824,
	0, 0, 0, 0, 1849, 0, 1804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1797, 0, 1829, 1830,
	1831, 1840, 1841, 1842, 1837, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 1826, 1828, 0, 1833, 1827, 1825,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 1843, 0, 1844, 1846, 0, 0, 0, 0, 0,
	1813, 1814, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 1835, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	1818, 0, 0, 1819, 0, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 1822, 1823, 1824,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1811, 1817, 1839, 1816, 1812, 0, 1809,
	1807, 1808, 1800, 1801, 1802, 1803, 1805, 1806, 0, 0,
	0, 0, 1825, 0, 1837, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 1826, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 1843, 0, 1844, 0, 960, 0, 1009, 0, 0,
	1813, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 1835, 0,
	0, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 983, 0, 966,
	965, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 985, 0, 0, 0, 0, 0, 967, 0, 0,
	0, 0, 970, 0, 0, 0, 0, 1020, 1845, 0,
	0, 0, 0, 0, 0, 0, 980, 981, 0, 0,
	0, 0, 0, 0, 0, 998, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 2316, 0,
	0, 0, 0, 1010, 972, 1836, 0, 0, 0, 0,
	973, 0, 0, 0, 0, 1810, 1811, 1817, 1839, 1816,
	1812, 0, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805,
	1806, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 1007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1008, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 976, 0,
	0, 0, 0, 0, 0, 0, 964, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 977, 978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 986, 984, 0, 0, 0, 0,
	0, 0, 979, 0, 0, 0, 995, 0, 0, 1015,
	1014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1017, 1006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1011, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 1817, 1839, 1816,
	1812, 0, 1809, 1807, 1808, 1800, 1801, 1802, 1803, 1805,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	971, 0, 0, 1019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 0,
	1002, 1003, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1012, 1000, 0,
	0, 0, 0, 0, 0, 0, 1018, 996, 0, 0,
	989, 987, 0, 992, 0, 0, 0, 0, 0, 993,
	0, 0, 962, 0, 1013, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1004, 0,
	994, 0, 0, 0, 0, 0, 991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1016, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 0, 0, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1001,
}

var sqlPact = [...]int{
	313, -1000, -1000, -1000, -1000, 205, -1000, -1000, 204, 203,
	202, 201, 199, 197, 194, 193, 191, 190, 189, -1000,
	-1000, -1000, -1000, -1000, -1000, 188, -1000, -1000, 187, -1000,
	185, 183, 181, -1000, -1000, 173, -1000, 171, -1000, -1000,
	-1000, -1000, 170, 168, 167, 93967, 93408, 94517, 2339, 117286,
	101153, 1966, 83400, 116727, 82841, 116168, 2243, 8903, 115609, 2777,
	166, -1000, 115050, 165, 162, 160, -1000, 114491, -1000, 2025,
	-1000, 159, -1000, 5008, 69954, 158, 157, 156, 2337, 155,
	-1000, 152, 149, -1000, -1000, 147, -1000, 17280, 1526, -1000,
	143, 141, -1000, 5164, 98926, 140, 139, 2279, 137, 136,
	68295, 131, 129, 2241, 2873, -1000, -1000, 2061, -1000, -1000,
	128, 126, 125, 124, 121, 119, 118, 115, 113, 109,
	106, 105, 103, -1000, 100, 98, 96, 90, 89, -1000,
	88, 87, 86, -1000, 85, -1000, 83, 82, 81, 80,
	76, 71, 68, 61, 60, 59, 57, 56, 54, 53,
	132543, -1000, -1000, 48, 1947, 1709, 1696, 1694, 1686, 1676,
	1016, 46, 44, 43, 42, 41, 37, 36, 35, 34,
	33, 29, 23, 22, 21, 20, 19, 18, 17, 151,
	16, 15, 11, 10, 9, 8, 7, 3480, -1000, 1522,
	1080, 32363, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	124986, 117836, 6, -74, 1, -1000, 3377, 1050, 56494, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 282, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 469, 2310, 782, -1000, -1000, -1000, 113941,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2336, -45,
	-1000, 2094, -1000, -1000, -1000, -1000, -1000, 779, -1000, 2335,
	325, 2290, -1000, -1000, -1000, 3425, 2481, 3843, 3842, 3841,
	3840, 3839, 124436, 1864, 3837, 2541, 3835, 3834, 3833, 3831,
	3830, 3829, 3828, -1000, 92849, 1057, 92290, 91731, 3435, 113391,
	91172, 112832, 76715, 48495, 1043, 3420, -1000, -1000, -1000, -1000,
	-1000, -1000, 117836, -1000, 1056, -1000, -1000, 3827, 2115, 774,
	100594, -1000, -1000, 112273, 1640, -1000, -1000, -1000, 945, 1271,
	34079, 34079, 34079, 277, -1000, -1000, -1000, -1000, -1000, -1000,
	3826, 3823, 3822, 3821, 3819, -1000, -1000, 82282, 25311, 81723,
	81164, 111714, 24742, 90613, 90054, 3818, 3817, 3816, 111155, 76146,
	3558, 3555, 1049, 2075, 1435, -1000, -1000, -1000, -1000, -1000,
	-1000, -25, 72178, 3591, 117836, -1000, 276, -1000, -1000, -1000,
	-1000, -1000, -1000, 47923, 940, 47351, 922, 46779, 733, -1000,
	-1000, -1000, -1000, 75577, -1000, 110596, 2478, 3814, 3810, 1152,
	3807, 3299, 1844, 3806, 1905, 1247, 3803, 3802, 3797, 3795,
	3794, 3793, 3789, 1507, 110037, 2988, 1565, 109478, 1780, 75008,
	1048, 89495, 94517, 2623, 108919, 1445, 1422, -1000, -1000, -1000,
	-1000, 3137, 2866, 2863, 1375, -1000, -1000, -1000, -1000, 59879,
	7084, 6238, -1000, -1000, 10360, 108360, 62714, 94517, 94517, -1000,
	-1000, -1000, -1000, -1000, 46207, 775, 45635, 1026, -1000, -1000,
	60446, 2936, -1000, -1000, -1000, -1000, 45063, 523, 44491, 968,
	117836, -1000, 2987, 1976, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2340, 1683, 3607, 2738, 74439, 2052, 1411, 3370,
	3103, 3102, 1552, 2059, 3091, 3780, 2654, 3081, 3076, 3070,
	3065, 3059, 1623, 2578, 374, 2592, 31791, 2971, 1710, 43919,
	1531, 1542, 3040, 3034, 3626, 2042, 2071, 2099, 80605, 3779,
	3776, 3328, 3031, 3011, 2805, 3009, -1000, 2935, 1505, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1485, -1000, -1000, -1000,
	-1000, -1000, 85050, -1000, -1000, 1524, -1000, -1000, 1524, -1000,
	-1000, -1000, -1000, -1000, 1350, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1522, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3110, -1000,
	2106, -1000, -1000, 2503, 3338, 3338, 3338, 3416, 456, 445,
	-1000, 151, -1000, -1000, 132294, -1000, -1000, 49067, 49067, 49067,
	49067, 49067, 49067, 49067, 49067, 2255, -1000, 769, -1000, -1000,
	803, -1000, 768, 707, 640, -1000, -1000, -1000, -1000, -1000,
	-1000, 767, -1000, -1000, -1000, -1000, -1000, -1000, 3591, -1000,
	28226, -1000, -1000, -1000, 434, 766, 49067, -1000, -1000, 3647,
	3646, 970, -1000, 256, 978, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2985, 760, 759,
	-1000, 758, 755, 754, 753, 752, -1000, 751, -1000, 750,
	749, 747, 742, 738, 736, 734, 732, -1000, 2112, -1000,
	-1000, -1000, -1000, -1000, -1000, 686, 683, 683, 683, -1000,
	1044, -1000, -1000, -1000, 301, 680, 259, 679, 678, 676,
	-1000, 731, 730, 729, 728, 727, 721, 719, 718, 714,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1042, -1000, -1000,
	-1000, -1000, -26, 117836, -1000, 469, -26, -1000, -1000, 713,
	-1000, 36396, 36396, 36396, -1000, -1000, 2334, 49067, -1000, 2566,
	-1000, -20, -20, 903, 58174, -1000, 55354, 903, 331, 817,
	63831, -1000, 2933, -1000, -1000, 708, 252, -1000, -1000, -1000,
	-1000, 25878, 2932, 117836, 117836, 117836, 94517, 94517, 94517, 3775,
	3093, 49067, -1000, -1000, 69395, 117836, 95067, -1000, -1000, 3534,
	70511, 68845, 117836, 2984, 107801, 3774, -1000, -1000, -1000, -1000,
	-1000, 3207, 3772, 3771, 3766, -1000, 117836, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 240, 3206, -1000, -1000, 98367, 240,
	3203, -1000, 240, 3202, -1000, 97817, -1000, -1000, 2308, 3201,
	-1000, -1000, 242, 3199, -1000, -1000, -1000, 241, 3198, -1000,
	-1000, 247, -61, 3194, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 132294, -1000, -1000, -1000,
	107242, -1000, 3339, -1000, 117836, -1000, 49067, -1000, -1000, 3532,
	1529, 77839, 3462, -1000, -1000, -36, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2518, 2530, 1157, 2366, -1000, 3244, 1615,
	34079, 3287, -1000, -1000, -1000, -1000, -1000, 237, 25878, -1000,
	-1000, -1000, -1000, -1000, -1000, 3777, 3192, 1549, -1000, 2361,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2177, 3189, -1000,
	1995, 3179, 1997, -1000, -1000, 2204, -1000, 3325, -1000, -1000,
	2175, 3174, -17, -1000, -1000, 2438, -1000, -1000, -1000, -1000,
	2032, -1000, 1357, 3172, -1000, 2728, 2728, 88936, 3158, 62147,
	60446, 72178, -32, -1000, -1000, -1000, -1000, -188, -1000, 24169,
	132294, -1000, -1000, -1000, -1000, 1821, 132294, 899, -1000, -1000,
	3169, -1000, 132294, 892, -1000, -1000, 3143, -1000, 2981, -1000,
	-1000, 2439, 2437, -1000, -1000, 3764, -1000, -1000, 3755, -1000,
	3754, 3753, 3752, -1000, 1732, 2051, 3751, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 88386, 2333, -1000, -1000, 87268,
	2978, -1000, 2436, 3454, -1000, 87827, 1047, -1000, 1001, 2435,
	-1000, 97267, 888, 2433, -1000, 3750, 3431, 2673, 1001, 2432,
	-1000, -1000, -1000, -1000, -1000, 951, -1000, 66063, -1000, 66063,
	-1000, 1650, -1000, 123886, -20, 94517, 3591, -1000, -71, -1000,
	-1000, -1000, 1050, -1000, 59307, -1000, 59307, 100035, 77282, 992,
	773, 67735, 132094, -1000, 1011, -1000, -1000, 132294, -1000, -1000,
	-1000, -234, 2726, -1000, 77282, 61580, 132294, -1000, -1000, -1000,
	-1000, 132294, -1000, -1000, -1000, 77282, 87268, -1000, 106683, 86718,
	-1000, -1000, 1482, 2570, -1000, -1000, -1000, 77282, 1362, 77282,
	77282, 77282, -1000, 106124, -1000, -1000, 2113, 1620, 3331, 2109,
	94517, -1000, 1862, -1000, -1000, -1000, 3351, 3156, 117836, -1000,
	-1000, 2977, -1000, 71628, 96717, -1000, 96167, -1000, 95617, -1000,
	94517, -1000, 94517, -1000, 3749, 3746, 3743, -1000, -1000, 3742,
	-1000, 3740, 3344, -1000, 814, 43347, 132294, 3336, -1000, 3739,
	2033, 2971, 132294, -1000, 3149, 1717, 1713, 117836, -1000, -1000,
	117836, -1000, 117836, -1000, -1000, -1000, 1587, -1000, -1000, 2516,
	-1000, -1000, -1000, -1000, 94517, 94517, 94517, 94517, 1498, -1000,
	42775, -1000, -1000, 3032, 3738, 1728, -1000, 1859, -1000, 2930,
	3361, -1000, 1473, 1768, -1000, -1000, 243, -1000, -1000, -36,
	-1000, 123336, -1000, 2503, -1000, 117836, -1000, 2520, 2950, 2966,
	1693, 2349, 2631, -1000, 42203, 2599, 52499, 2358, 151, -1000,
	-1000, 151, 151, 33507, -1000, -1000, 70511, 70511, 25878, 1367,
	49067, 49067, 49067, 49067, 49067, 49067, 49067, 49067, 49067, 49067,
	49067, 49067, 49067, 49067, 49067, 49067, 49067, 49067, 49067, 49067,
	49067, 49067, 49067, 49067, 49067, 49067, 49067, 49067, 49067, 49067,
	49067, 49067, 49067, 49067, 49067, 49067, 2298, 49067, 1342, 49067,
	49067, 49067, 49067, 1880, -1000, -1000, 1988, 541, 2043, 707,
	-1000, -1000, -1000, 3590, 3590, 3590, 551, 551, 551, 7994,
	7994, 616, 3734, 803, -1000, 49067, -1000, 114, 58731, 49067,
	26447, -1000, 445, 10256, 2577, -1000, 443, 27048, -1000, -1000,
	-1000, 28226, 640, 41602, 49067, 1027, 132294, -1000, -1000, 1561,
	3612, 23596, 2996, 2797, 705, 867, 851, 31190, 30589, 29988,
	29387, 850, 833, 49067, 49067, 49067, 49067, 49067, 49067, 49067,
	49067, -1000, -1000, 3619, -1000, 3612, -1000, -1000, -1000, -1000,
	3612, 1366, 1355, 3612, -1000, 3612, 3612, 8567, 8567, 41030,
	40458, 39886, 53071, 39314, 49067, 28815, 38742, 38170, -1000, 117836,
	-26, 3530, 49067, 310, -1000, 130450, -1000, 310, 310, 704,
	-77, 132294, 2596, 2596, 57054, 2486, 2265, 2265, 2265, -1000,
	903, 18983, 903, 104467, 2266, 903, 903, 229, 284, 442,
	54787, 2566, 104467, 793, 702, 0, -1, -2, -1000, -1000,
	-3, -8, -1000, -1000, 94517, 701, 26447, 25878, 228, 2048,
	-78, 2605, 2602, -1000, 2600, 2598, -1000, 2586, -1000, 1818,
	-85, 1335, 94517, 117836, 1437, 3733, -58, -1000, 5990, -87,
	-1000, 1040, 227, 3612, -1000, -1000, -1000, -1000, -1000, 3732,
	3730, -1000, 1041, 700, 698, 427, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 686, 683, 683, 683, -1000, 301,
	680, 259, 679, 678, 676, -1000, -1000, -1000, -1000, -1000,
	2920, 94517, 117836, 1421, 3727, -188, 95067, -72, -1000, -1000,
	117836, -1000, -1000, -1000, 3726, -1000, 94517, -1000, -1000, 94517,
	240, 3141, -1000, 94517, -1000, 94517, 235, 3134, -1000, -1000,
	117836, -1000, 94517, 94517, -1000, 117836, 117836, 117836, 77282, 77282,
	232, -1000, 94517, 901, -93, 1165, -36, -1000, -1000, -1000,
	-1000, -1000, 1524, -1000, 1843, -1000, -1000, -1000, -1000, -1000,
	-1000, 1518, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	970, -1000, -1000, -1000, -1000, -1000, -1000, 3609, 3605, -29,
	-1000, -1000, 25878, -1000, -39, 1648, 1866, 1278, -1000, 80046,
	2471, 3334, 3722, 2665, 3310, 1635, -1000, 1577, -1000, 3423,
	85050, 3486, 3506, 1388, -1000, 2909, -1000, -1000, 944, 1725,
	1755, 1277, 1272, 85050, 1995, -1000, 70511, -1000, 2696, 3407,
	1408, 1398, 1408, 1408, 1401, -1000, 85050, 1731, 1268, 1266,
	1265, -1000, -1000, 2004, 1992, -1000, -1000, 105574, -1000, 1259,
	1252, 3553, 3110, 2184, 835, 1989, -1000, -40, 3485, 3505,
	1337, -1000, 2899, 1251, -1000, -1000, -1000, 3405, 94517, 25878,
	1576, 1575, 1554, 1719, 1249, -31, -1000, 3483, 1245, 1244,
	-1000, 1055, 2735, 3262, -1000, 77282, 1055, 1055, 1965, 3133,
	2707, 1754, -1000, 2723, 893, 2718, -1000, -1000, -1000, 893,
	-32, 72178, 117836, 222, -1000, 114, 49067, 49067, 114, 49067,
	114, 3446, 3131, 3130, -1000, -1000, -1000, -1000, -1000, 3721,
	1994, 2532, -1000, -1000, 670, 2430, 2897, 117836, 2634, -33,
	94517, -1000, 71078, 3129, 72736, 1995, 2429, -1000, -1000, 86159,
	-1000, 3127, 469, 2428, -1000, 674, 3716, 3126, -1000, 122786,
	-1000, 3339, 1412, 3125, 1095, 599, 3528, -1000, 599, 66621,
	-1000, 117836, -1000, -20, 5474, 78946, -94, -96, 441, -1000,
	105024, 117836, 1094, 79496, 117836, 3276, 2022, 2005, 999, 60446,
	-1000, 60446, -102, -234, 2714, 1557, 992, 992, 893, -1000,
	893, -1000, 94517, 2965, -1000, -1000, 77282, 992, 992, 992,
	-1000, -1000, -1000, -1000, 3713, 3711, 3705, 3702, -1000, -1000,
	1000, 94517, 117836, 94517, -1000, -1000, 1665, -1000, 220, -1000,
	117836, -1000, 117836, 117836, 94517, -1000, 1000, 117836, 1000, 117836,
	1000, 117836, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 114,
	-1000, -1000, 132294, -1000, 49067, -1000, -1000, 1570, 3700, 1668,
	-1000, 2962, -1000, 2959, -1000, 26, -1000, -1000, 1876, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3699, 132294, -1000, 2103,
	-1000, -1000, -1000, -1000, 94517, 94517, 94517, 94517, 117836, 3261,
	-1000, 117836, 3259, 94517, -1000, -1000, 85050, -1000, 2520, 2950,
	-1000, -1000, -1000, -1000, -1000, -1000, 1407, 2309, -1000, 2567,
	-1000, 1627, -1000, -1000, -1000, 132294, 53643, -1000, -1000, 132294,
	1877, -1000, 51927, 51355, -1000, -1000, 1774, 94517, 2625, -1000,
	2625, -152, -1000, 130057, 2564, 94517, -1000, -1000, -1000, -1000,
	-1000, 936, 574, 574, 1329, 1329, 1329, 1329, 3447, 6597,
	8467, 6009, 13809, 13809, 6088, 6088, 6088, 6088, 6088, 13809,
	1114, 551, 551, 1114, 1114, 1114, 1114, 1114, 551, 551,
	551, 13809, 13809, 13809, 551, 7994, 15411, 14526, 49067, 49067,
	1240, 1956, 541, 13246, 49067, 5721, 5721, 5721, 5721, -1000,
	1908, -1000, -1000, -1000, -1000, 2896, 669, 53071, 53071, -1000,
	-1000, -1000, -1000, 27637, 49067, -1000, -1000, -1000, -1000, 37569,
	-1000, -1000, 129421, -317, 440, -1000, 219, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	439, -90, -50, -1000, 49067, 49067, 49067, 438, -1000, 218,
	49067, 117836, -1000, 17949, 792, -103, -1000, -104, 1442, -1000,
	49067, -1000, -1000, 1239, -1000, 1238, 1237, 1235, -1000, 667,
	436, -1000, 217, -1000, 2259, 666, 665, 49067, -1000, -1000,
	-1000, -1000, -1000, 129228, -1000, -1000, 129035, -1000, -1000, 128782,
	-1000, -1000, 128589, -1000, -1000, -1000, -1000, -1000, 131911, 17666,
	16629, 15903, 9299, 14638, 13357, -112, 432, -113, 430, 932,
	930, 410, 407, 405, -115, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -118, 394, -1000,
	2891, -90, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	392, -1000, 390, -1000, 131647, -90, 388, 7563, -1000, 53071,
	53071, 53071, 53071, -1000, 385, -1000, 129857, -1000, 131447, 36997,
	36997, 36997, 384, 131264, 49067, -90, -120, -1000, -121, -1000,
	-1000, 536, -123, 1017, 36396, 55934, 25878, -1000, 1017, 1017,
	49067, -1000, 49067, 2576, -1000, -1000, -1000, -1000, 2575, 1885,
	2596, 57054, -1000, -1000, -1000, -1000, 104467, -1000, 3591, 3043,
	-1000, 104467, -1000, -1000, 117836, 469, -1000, 104467, 104467, 25878,
	903, -1000, 903, 104467, 709, -1000, -1000, -1000, -1000, -1000,
	382, 64391, -50, 216, 25878, 1001, -1000, -1000, 2704, 2704,
	2704, 2704, 2704, -1000, -1000, 117836, 1234, -34, -79, 2711,
	-1000, 3562, -1000, 2150, -1000, 70511, -1000, 802, 1174, 25878,
	-1000, -1000, -1000, 664, -1000, 3612, 3612, -1000, 3612, 117836,
	2888, 291, 2708, -1000, 266, 72736, 3698, -1000, -1000, 240,
	-1000, 94517, 240, 240, -1000, 94517, 94517, 2308, -1000, 242,
	-1000, 241, -1000, -1000, -61, -1000, 1010, 34079, -1000, 1524,
	-1000, -1000, 1571, -1000, 2038, -1000, 1208, -1000, -1000, -1000,
	-1000, 34079, -1000, 2191, 117836, 117836, 94517, -1000, 117836, -1000,
	2263, 72736, -1000, 2426, 122236, 2418, 70511, 117836, -1000, -1000,
	663, 971, 2563, 2562, 1090, 117836, 117836, 2559, 121686, 121136,
	-1000, 3697, 117836, 2091, 49067, 3397, 2211, 2285, 114, 114,
	-1000, 114, 114, 114, -1000, 660, 1333, 94517, 94517, 117836,
	72736, 94517, 1924, -1000, -1000, -1000, -1000, -1000, 85600, -1000,
	-1000, 3618, 3617, -1000, 1408, -1000, -1000, -1000, 1408, 1995,
	1878, 117836, 72736, 94517, 72736, 120586, 120036, -1000, -1000, 1716,
	117836, -1000, -1000, -1000, -1000, 1494, -1000, 835, 2202, 114,
	114, -1000, 114, 114, 114, 659, 25878, 1985, -1000, 2960,
	117836, 3642, 119486, 3641, 117836, 117836, 117836, 72736, 3343, 117836,
	117836, 72736, -1000, 118936, 2735, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2183, 73870, 1107, 117836,
	1357, -1000, -1000, 1711, 1232, 1231, 85050, 2124, 1706, 1867,
	117836, 60446, 998, 60446, 2684, -1000, -1000, 23023, -1000, 132294,
	132294, -1000, 132294, -1000, 71078, 77282, 117836, -1000, 1046, 117836,
	79496, 986, 3123, 65505, -188, 992, 77282, 94517, -33, 2634,
	117836, -1000, -1000, -1000, -1000, -1000, 1995, 3119, 469, 2424,
	-1000, 77282, 3525, 3113, 648, 3696, 3695, -1000, 94517, 2329,
	2422, -1000, -1000, 118386, 3220, 835, 117836, 1017, 57054, 1982,
	-1000, 63274, 1063, 117836, 1872, 184, -1000, -1000, -1000, 5,
	117836, -1000, 811, -1000, -1000, 5474, 5474, 992, -223, 646,
	-1000, 879, 877, 61013, 77282, -131, -1000, -1000, -1000, -1000,
	2418, 94517, 117836, 1328, 2671, 117836, -133, -1000, 215, 641,
	873, 871, -1000, 3451, -1000, -234, -1000, 999, 60446, 2856,
	2855, -1000, -1000, 1009, -1000, 1467, 992, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -21, 1841,
	117836, -188, -188, -52, -34, -1000, 1000, -1000, 1000, -1000,
	1000, -1000, 132294, -1000, -1000, -1000, 1661, 1660, 117836, -1000,
	-1000, 117836, -1000, 25878, 117836, 94517, 25878, 94517, 2945, 2943,
	-1000, -1000, -1000, 117836, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1124, -1000, 1877, 2302, -1000, 640, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2501, -1000, -35, 33507,
	900, -1000, -1000, 94517, -22, 49067, 49067, 10623, 9236, 49067,
	53071, 53071, -1000, 49067, 6719, -1000, -1000, -1000, -1000, -1000,
	2852, 639, 49067, 70511, 7640, 7512, -1000, 380, 12103, 1114,
	-1000, 49067, -1000, 522, -1000, 379, 35824, -1000, 130643, -51,
	-138, -1000, 19569, -90, -139, -1000, -1000, 801, -1000, 3077,
	-1000, 49067, 130836, 2474, 1968, 1851, 1678, 3612, 3640, 22450,
	-1000, 67178, 1022, 2276, 128396, -1000, -1000, -1000, -1000, 70511,
	70511, 49067, 49067, -1000, 49067, 49067, 49067, -1000, -1000, -1000,
	3612, 963, -1000, -1000, -1000, 963, -1000, -1000, 1408, -1000,
	1408, -1000, 49067, -1000, -1000, 2850, 49067, -1000, 70511, 70511,
	53071, 53071, 53071, 53071, 53071, 53071, 53071, 53071, 53071, 53071,
	53071, 53071, 53071, 53071, 53071, 53071, 53071, 53071, 53071, 53071,
	2557, 53071, 3582, 3582, 3582, 582, -1000, 2941, 2850, 49067,
	49067, 70511, 378, 372, 371, -1000, 49067, -90, -1000, -1000,
	7134, 637, -1000, 2489, -1000, 2796, -1000, 49067, -1000, -158,
	-1000, 2566, -1000, -1000, 2796, 2796, -141, 132294, 57054, 57054,
	-1000, 636, 49067, 2574, -1000, -1000, 789, -315, -1000, 866,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 469, -1000, -1000,
	-1000, 212, 104467, 104467, 787, -1000, -146, -1000, -1000, -153,
	-1000, 3523, 370, 25878, -1000, 1017, 2811, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -188, 117836, 117836, 1705, 2288, 3638,
	-1000, 3613, 799, 786, 210, 3612, 364, 363, 359, -188,
	117836, 117836, 1704, 117836, -1000, -1000, -1000, 240, -1000, -1000,
	-1000, 235, -1000, -1000, -1000, -1000, 2664, -1000, -36, -1000,
	-1000, -1000, 49067, -1000, -1000, 3321, 1229, 1228, -1000, -1000,
	-1000, 2869, -1000, 3111, -1000, 2417, -1000, 1073, -1000, 2010,
	-1000, 49067, 630, 2669, 628, 618, 3692, 2137, 3691, 1091,
	3108, 2308, 3104, 2308, -1000, -1000, -1000, 965, -1000, 132294,
	2211, -1000, 606, 605, -1000, -39, 1634, 1850, 1227, 1008,
	-1000, -1000, -1000, -1000, 49067, 49067, 103917, -1000, 477, 3325,
	-23, -1000, -1000, -1000, 1700, 1226, 1225, -1000, -1000, -1000,
	-1000, 1995, 1690, 1222, 1221, -1000, -1000, -1000, -1000, -1000,
	2416, -1000, -1000, 3099, 1007, -1000, 3014, 3013, 919, 117836,
	-1000, 1005, -1000, -1000, -1000, -1000, 49067, -1000, -40, 1220,
	3472, 2414, 94517, -1000, 2308, 3095, 1218, -1000, 1214, -1000,
	-1000, -1000, 3479, 3475, 1204, -1000, -1000, -1000, 77282, -1000,
	-1000, 73303, -1000, -1000, 1055, 117836, 72736, 94517, 1738, -1000,
	-1000, 83950, 84500, 117836, 2707, -188, 893, -1000, 2616, 893,
	998, 2842, -1000, 2614, -1000, 1003, 94517, 3689, 357, -156,
	-41, 70511, 3522, -1000, 2345, 617, 94517, 929, -1000, 3591,
	-1000, -1000, -1000, 1002, -1000, 3450, 94517, 3520, 3087, 1001,
	114, 94517, 3601, -1000, -1000, 3518, 94517, 3086, 2324, 2399,
	2525, 835, 78396, 1001, 2274, -60, -1000, 1872, 35223, 3319,
	-161, -1000, -1000, -1000, 1017, 66621, 57054, 49067, 3687, -164,
	-1000, -1000, -1000, -1000, -1000, 101710, 101710, 77282, 77282, 77282,
	992, 117836, 117836, 79496, -1000, -1000, 603, 117836, 117836, 598,
	-1000, 117836, 117836, 3681, 77282, 77282, 77282, -44, 597, -1000,
	863, 862, 861, -1000, -1000, -1000, -1000, -1000, -1000, 858,
	999, -1000, -234, 60446, 114, -1000, 2284, 94517, -1000, 21877,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1000, -188, -1000,
	-1000, 2207, 2352, 2207, 1856, 1852, -1000, -1000, 2294, -1000,
	-1000, -1000, -1000, 2627, 3329, 25878, 3467, 5721, 49067, 49067,
	424, 5472, 619, 5721, 49067, 49067, 70511, 12566, -167, 49067,
	49067, -1000, 49067, 785, 132294, -1000, 3634, 49067, 354, 353,
	-1000, -1000, -1000, 3599, -1000, -1000, -1000, 132294, 49067, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 352, -1000, 207, -1000,
	-1000, -1000, 125536, -1000, 49067, 351, 3395, -1000, 350, 347,
	11255, 6831, 128143, 127950, 127757, 345, -1000, -1000, 342, 340,
	132294, 2941, 132294, -1000, -1000, 916, 916, 1384, 1384, 1384,
	1384, 3582, 566, 537, 699, 409, 409, 409, 631, 582,
	582, 409, 409, 409, 582, 2841, 2555, 596, 7894, -1000,
	-1000, 132294, 132294, 333, -1000, -1000, -1000, -90, 321, 7134,
	-1000, 2792, 3394, 132294, -1000, 57054, 2792, 2792, -1000, -1000,
	1885, 117836, 132294, 57054, -1000, 3043, -1000, 20153, -1000, 25878,
	-1000, -1000, -1000, -1000, 3591, -1000, 64391, -1000, 595, -1000,
	27, -1000, 2811, -1000, 857, -1000, -1000, 77282, 77282, -188,
	-155, 117836, -1000, -1000, 784, 3680, 795, 25878, 320, -1000,
	-1000, -1000, -188, -188, 117836, -188, -1000, -1000, -1000, 3273,
	132294, 117836, 117836, 1535, 103367, 117836, 3084, -1000, 2317, -1000,
	1090, 127504, 57614, -1000, 57614, 117836, -1000, -1000, -1000, -1000,
	1938, 1837, 3679, 1146, -1000, 3355, 117836, -1000, 117836, -1000,
	-1000, -1000, 117836, 117836, 94517, 117836, -1000, 72736, 3022, -173,
	132294, -46, -1000, 856, -1000, 1409, -1000, 21304, 117836, 72736,
	94517, 117836, 72736, 94517, 3072, 117836, 2234, -1000, -1000, 3012,
	-1000, 3021, -174, 25878, -1000, 3631, 3630, 3054, 3362, -1000,
	117836, 3629, 117836, 94517, 3272, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1687, 1213, 1210, 2323, -48, 2322, 2287, -52,
	2124, 998, -53, 594, -1000, 854, -1000, -1000, 852, -1000,
	998, -1000, 77282, 60446, 3677, 469, -1000, 2657, -1000, 99476,
	2327, 114, -1000, 3676, 102267, 593, -1000, 2283, -1000, 710,
	-1000, 2531, 72736, 1995, 114, 94517, -1000, -1000, 469, 317,
	-54, -1000, 3049, 1087, 25878, 94517, 3048, 2527, 835, 78396,
	-1000, 1412, 2631, -1000, -59, -1000, 711, 114, 2274, -1000,
	-60, 132294, -1000, 849, -1000, -175, -1000, -1000, 311, -1000,
	3271, 3267, -1000, 2768, 57614, 589, 588, 117836, 3266, -1000,
	-1000, -176, -1000, -1000, 2591, 2591, 77282, 60446, 77282, 77282,
	-1000, 999, 893, -1000, 2445, -1000, -1000, -1000, -1000, -1000,
	25878, 1722, -1000, 585, 584, -1000, -1000, -1000, -1000, 3329,
	5721, 5721, 49067, 49067, 49067, 5721, 12566, -183, -1000, 5721,
	5721, -90, -1000, -1000, 130643, -1000, -1000, -1000, 132294, -1000,
	20731, 2214, -1000, 127311, -1000, 33507, -1000, -1000, 49067, 49067,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 53071, 2839,
	583, 70511, -1000, -1000, 305, 1013, 49067, 50783, 2566, 1013,
	1013, -1000, -191, -1000, -1000, -1000, 3591, 27, -1000, -1000,
	3675, 25878, -1000, 77282, -1000, -1000, 3673, -181, 524, -1000,
	3672, -1000, -1000, 161, -1000, -1000, -1000, 2703, 3517, -1000,
	1941, -1000, 117836, -1000, 117836, -1000, 25878, 117836, 2793, 1293,
	-1000, 971, 2553, 580, 53071, 1123, 94517, 935, 2769, 2751,
	-1000, 3549, 3393, 2754, -193, -1000, 117836, 49067, 117836, -194,
	-202, 2381, -1000, -1000, 1122, 1241, 49067, 1112, -1000, -1000,
	-1000, 70511, 571, 2308, 2308, -203, -204, -1000, -1000, -1000,
	49067, 1202, 117836, 34651, -1000, 3670, 3325, -1000, -1000, -1000,
	-1000, -1000, -1000, 117836, -1000, 117836, -1000, 49067, 1196, -1000,
	-1000, -1000, 3628, 2308, 25878, 2308, -1000, 2308, 3362, 1145,
	117836, 72736, 94517, 1822, 1822, 2867, -1000, -1000, -1000, 2277,
	2277, 77282, 60446, -1000, -61, 998, -1000, 3515, 2650, 3668,
	-1000, -1000, -1000, -1000, 2551, -1000, -1000, 117836, 2550, 993,
	-1000, -205, -1000, 847, 845, 79496, 986, 979, -1000, -62,
	565, -1000, 843, -1000, -1000, -1000, -1000, 469, 3514, -1000,
	3627, 564, 553, 117836, 2320, 549, 25878, 3312, 835, 78396,
	-1000, 3220, 1872, -1000, 2396, 117836, 3305, -1000, 2631, 541,
	-1000, 992, 539, 535, 2367, 2367, -211, 57614, 57614, -213,
	520, 992, -1000, -214, -1000, -1000, -1000, -1000, -1000, -1000,
	-63, -1000, 882, 874, -1000, -1000, 94517, 94517, 49067, 49067,
	-1000, 5721, 5721, 5721, -1000, 302, -1000, -1000, 2274, 3390,
	-1000, -73, 127118, 126865, 661, 53071, 70511, -216, -1000, -1000,
	117836, 132294, -83, -1000, 132294, 519, 500, 429, -1000, -1000,
	-1000, 662, -1000, -1000, -1000, 117836, 3666, -1000, 117836, 102817,
	117836, -1000, -1000, 1904, -1000, -1000, -1000, 117836, 2398, -1000,
	-1000, -1000, 1089, 49067, 7894, 53071, 499, 49067, -1000, 497,
	486, 3512, 3251, -1000, 2647, 2865, 1920, 57614, -1000, 3329,
	-1000, 126486, -1000, 1076, 1927, -1000, -1000, -1000, -1000, 132294,
	53071, 3362, 57614, -1000, -1000, 485, 479, 132294, 478, 838,
	2836, -1000, -1000, -1000, -1000, -1000, 132294, 476, 3472, -1000,
	-1000, -1000, -1000, 2308, 94517, -1000, -1000, -1000, 1182, -1000,
	-1000, -1000, -1000, 3662, 3661, 2834, 83950, -1000, -221, -1000,
	-1000, 1970, 114, 2203, 2702, -1000, 2327, 475, -1000, -1000,
	2312, 2656, -1000, 102267, 34079, 34079, 298, 3511, 979, -1000,
	3587, -1000, 3256, 3256, 49067, 3510, 114, -1000, 3601, 57614,
	-1000, 94517, 57614, 2316, 2097, 2513, 78396, -1000, 2525, -1000,
	-1000, -222, 117836, 1872, -1000, -1000, 77282, 77282, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1076,
	-224, -227, -1000, 77282, -1000, -1000, 2445, -1000, 117836, -1000,
	117836, -1000, -1000, -232, -235, -1000, 2261, 49067, 33507, -1000,
	-1000, 661, -237, -1000, -84, -1000, 3507, 50783, 3660, 3657,
	3654, -1000, -188, -1000, -188, -1000, 1929, -1000, -1000, -1000,
	3030, 2784, 126205, 7894, 2494, 117836, 126096, 1995, 1995, -1000,
	3490, 2860, -1000, -1000, 2650, 473, -1000, -1000, -1000, -1000,
	900, 117836, 2650, 2782, 94517, 7894, 1088, -238, 2207, 2207,
	49067, 32935, 2233, 49067, -1000, -1000, 3362, 117836, -1000, -1000,
	117836, 2315, -1000, 2821, 3598, -1000, 986, -1000, 2220, 117836,
	-1000, 3346, -1000, 3264, -1000, -1000, -1000, 2657, 114, -1000,
	-1000, -1000, -240, 132294, 114, -1000, 297, -245, 1087, -247,
	94517, 2009, -1000, 835, -1000, 2527, 1017, -1000, -1000, -250,
	-253, 1920, 1076, 2202, -255, -1000, -258, -269, -1000, -1000,
	293, 50211, 50211, 50211, -90, -152, -1000, 117836, 470, -1000,
	-1000, -1000, -1000, -1000, 3007, 997, -1000, 870, 1918, 292,
	1100, 288, 287, -1000, -1000, -1000, 2202, 117836, -1000, -1000,
	-1000, 995, 469, -1000, 49067, 1076, -270, -1000, 1059, -272,
	-1000, 1054, -275, -1000, 2832, -1000, -277, 2308, -264, 232,
	1822, 994, 3444, -1000, -1000, -1000, 2312, 94517, -280, -1000,
	-1000, 2363, -1000, 2650, 993, -1000, -1000, -1000, 1076, 468,
	1920, 467, 1547, 835, -1000, -1000, 1408, 3312, 3096, 992,
	992, 2650, 1920, 987, -1000, 992, -1000, -1000, -1000, 3036,
	-1000, 54215, 2318, 1848, 129674, 3036, 3036, -1000, -1000, 117836,
	3436, -1000, 886, 884, 1528, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2754, -282, 3432, 2494, 132294, 2650, -1000,
	2207, 2694, -1000, 2207, 2828, -1000, 2213, -1000, -1000, -1000,
	2803, -1000, 2827, -1000, 1756, 3575, 2505, 466, -1000, 117836,
	1812, 1806, 3652, 2203, 2312, 1920, 57614, 2650, 57614, 2178,
	-1000, 117836, -1000, 2097, 1336, -1000, -1000, 2202, 2650, 1017,
	464, -1000, -1000, 1868, 3541, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 832, -1000, 3241, -1000, 1111, 2190, 2190,
	1017, -1000, 829, 870, -1000, -1000, 463, -1000, 461, -1000,
	2286, 117836, 2281, -1000, -1000, -1000, -1000, 117836, -1000, -1000,
	3651, -1000, 986, -1000, 2650, -283, 2202, -285, -1000, -1000,
	-1000, -188, 2009, -1000, 1633, 987, 2202, -1000, 1823, -1000,
	-1000, 2269, 49639, 49067, -1000, 3566, -1000, -1000, 2590, -1000,
	-1000, 49067, 2754, 49067, 49067, -1000, 232, 64948, -288, -1000,
	2312, 2202, 1076, 987, 1920, 1547, 66621, 1017, 987, -1000,
	-1000, -1000, 132294, -1000, -1000, -1000, 132294, -1000, -290, -291,
	-1000, -223, 101710, 2293, 2505, 987, 1920, 1017, 2650, 2178,
	-267, -1000, 1017, 2202, 1172, -293, -1000, -1000, -1000, -1000,
	1017, 2650, -1000, 2202, -1000, -1000, -1000, -1000, -1000, 459,
	-1000, -1000, 2202, 987, 49067, 987, 1017, -308, 1017, -1000,
	2202, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4514, 4513, 4511, 4510, 4506, 4505, 4503, 4502, 4501,
	4500, 4494, 4492, 143, 4491, 4488, 4484, 4480, 4477, 4469,
	4468, 4466, 4460, 4459, 4458, 4456, 4454, 4453, 4452, 4451,
	4450, 4448, 4447, 4446, 4443, 4442, 4441, 4440, 4439, 4438,
	4437, 4436, 4435, 4434, 4433, 4432, 4431, 4430, 4427, 4422,
	4420, 4419, 4417, 4412, 4411, 4409, 4407, 4406, 4405, 4404,
	4403, 4401, 4400, 4399, 4397, 4395, 4391, 55, 4388, 4384,
	4383, 4382, 4381, 4380, 4376, 4373, 4370, 4369, 4368, 4367,
	4366, 4363, 4358, 4353, 4350, 4338, 4337, 4333, 63, 4330,
	278, 4327, 4325, 4323, 4320, 4317, 4316, 4313, 4312, 4310,
	4309, 4305, 4303, 277, 4301, 125, 159, 4299, 4298, 3848,
	4296, 4293, 276, 4292, 4291, 4290, 4287, 286, 4283, 4282,
	4280, 4278, 4277, 4276, 4275, 4274, 4273, 4272, 4271, 88,
	204, 4270, 4269, 860, 4268, 4267, 4266, 4259, 4255, 4251,
	4250, 4247, 4245, 4244, 4243, 255, 170, 4241, 275, 4240,
	4234, 4232, 4229, 4224, 4221, 4220, 4218, 4217, 4216, 4215,
	4212, 4209, 4199, 4198, 4195, 4194, 4192, 4190, 4187, 4186,
	4185, 4184, 4183, 4182, 4181, 4180, 4179, 4178, 4177, 4176,
	4174, 4173, 4172, 4170, 4169, 4168, 4166, 4164, 263, 216,
	195, 4163, 4162, 274, 269, 4161, 4160, 4157, 4155, 4154,
	129, 11, 52, 4151, 4150, 95, 99, 92, 103, 104,
	102, 4147, 113, 4145, 127, 77, 4141, 18, 2, 166,
	253, 8953, 243, 4140, 4138, 4136, 249, 196, 4134, 245,
	4133, 4131, 4130, 4126, 4124, 4123, 68, 51, 184, 177,
	173, 178, 110, 4121, 155, 107, 83, 61, 45, 17,
	82, 217, 21, 1, 264, 4118, 258, 12, 142, 7,
	33, 4117, 4116, 4115, 4114, 3456, 128, 4112, 270, 254,
	172, 4108, 4103, 4102, 670, 4100, 4098, 50, 4097, 190,
	78, 130, 8, 122, 4096, 151, 165, 36, 4092, 174,
	66, 4091, 157, 100, 97, 11135, 9667, 4090, 4089, 115,
	67, 93, 279, 226, 161, 206, 294, 167, 164, 118,
	215, 213, 179, 180, 4081, 252, 4078, 3494, 87, 186,
	153, 5897, 4077, 4074, 4070, 89, 197, 111, 4069, 4068,
	76, 19, 15, 4, 6, 141, 23, 22, 10, 4066,
	30, 123, 44, 25, 4064, 28, 4062, 4061, 4053, 4051,
	4050, 47, 163, 4048, 4047, 285, 4046, 96, 54, 60,
	4043, 39, 227, 4042, 247, 133, 4041, 4040, 259, 212,
	185, 4039, 74, 244, 4038, 4037, 4036, 4035, 4034, 138,
	3, 135, 4032, 4031, 158, 4028, 53, 246, 201, 4026,
	58, 4025, 4023, 182, 59, 148, 287, 194, 235, 119,
	234, 187, 233, 4019, 4017, 4016, 188, 4013, 4010, 230,
	152, 4009, 4005, 240, 289, 90, 48, 81, 242, 84,
	198, 162, 4004, 205, 4002, 4001, 288, 181, 221, 24,
	16, 85, 136, 4000, 5, 238, 156, 232, 120, 3999,
	6906, 2369, 2678, 3997, 3996, 146, 121, 79, 137, 154,
	268, 71, 3995, 3991, 2548, 3990, 3989, 3988, 3987, 191,
	3986, 3985, 3982, 147, 145, 209, 3981, 94, 65, 49,
	29, 114, 281, 271, 116, 231, 168, 257, 3979, 3978,
	3977, 189, 3976, 108, 223, 175, 207, 261, 57, 3974,
	169, 3973, 149, 1912, 70, 150, 3972, 229, 3970, 3969,
	3968, 3962, 3960, 3958, 3954, 265, 250, 3949, 3947, 3946,
	37, 199, 3943, 267, 160, 203, 112, 80, 3942, 98,
	2354, 3937, 200, 219, 62, 266, 202, 3932, 3619, 72,
	3931, 0, 14493, 8699, 12852, 13936, 3929, 5167, 3921, 3919,
	3917, 220, 144, 3913, 3912, 3911, 105, 3910, 86, 3909,
	3908, 73, 3907, 26, 14, 20, 32, 27, 648, 218,
	3905, 3904, 41, 134, 131, 3902, 272, 237, 3901, 3900,
	3899, 3898, 106, 3897, 40, 3896, 38, 3894, 3889, 46,
	13, 31, 3887, 3885, 208, 3883, 222, 256, 3882, 171,
	3881, 69, 140, 3880, 3879, 3878, 64, 56, 260, 91,
	3877, 283, 3876, 210, 3875, 3874, 3874, 34, 3873, 3872,
	248, 117, 109, 3870, 251, 139, 43, 214, 183, 241,
	3869, 3867, 176, 3866, 3865, 3864, 273, 3863, 3862, 42,
	3861, 3856, 3854, 9, 3853, 3852, 211, 3192, 3851, 3850,
	35, 3846, 193,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	598, 598, 617, 617, 23, 23, 45, 45, 24, 46,
	17, 599, 599, 599, 599, 36, 25, 47, 29, 29,
	29, 29, 29, 203, 203, 203, 203, 22, 22, 41,
	41, 239, 239, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	594, 594, 241, 241, 240, 233, 233, 234, 234, 235,
	235, 600, 600, 242, 242, 242, 244, 244, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 494, 494,
	494, 526, 526, 526, 525, 525, 621, 621, 622, 622,
	622, 622, 622, 132, 132, 392, 392, 392, 56, 56,
	56, 56, 56, 589, 589, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 79, 79, 606, 606, 607,
	607, 605, 604, 604, 604, 608, 608, 608, 204, 204,
	204, 128, 128, 128, 128, 128, 128, 129, 129, 130,
	130, 208, 208, 208, 210, 210, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 214, 16, 16, 16,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 108,
	108, 528, 528, 529, 529, 199, 199, 200, 200, 200,
	200, 201, 201, 202, 202, 202, 70, 70, 211, 211,
	213, 213, 212, 212, 212, 212, 212, 58, 58, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 60,
	60, 60, 60, 60, 60, 61, 61, 61, 61, 61,
	61, 68, 68, 68, 68, 68, 68, 190, 190, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 76, 76, 76, 76, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 624, 624, 625, 625, 626,
	626, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 85, 85, 353,
	353, 316, 316, 86, 86, 86, 87, 87, 88, 88,
	72, 72, 587, 587, 369, 369, 485, 485, 73, 595,
	595, 595, 597, 597, 596, 596, 90, 90, 391, 391,
	91, 91, 91, 91, 91, 91, 92, 92, 92, 92,
	92, 92, 92, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 100, 100, 100,
	100, 100, 101, 101, 101, 98, 98, 98, 95, 95,
	95, 94, 94, 94, 99, 99, 99, 586, 305, 305,
	97, 97, 97, 96, 96, 96, 370, 370, 102, 102,
	102, 102, 317, 103, 103, 103, 103, 103, 103, 103,
	103, 106, 106, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 487, 487, 104, 104,
	104, 452, 452, 109, 109, 109, 407, 407, 110, 110,
	110, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 131, 131, 131, 131, 131, 131, 131, 131,
	591, 591, 362, 362, 268, 268, 268, 268, 121, 121,
	121, 121, 122, 122, 122, 123, 123, 195, 195, 138,
	138, 138, 138, 137, 137, 137, 137, 137, 137, 137,
	137, 62, 62, 62, 63, 63, 64, 64, 65, 65,
	66, 66, 67, 67, 67, 67, 67, 141, 141, 618,
	618, 143, 140, 140, 140, 140, 140, 139, 139, 142,
	142, 142, 142, 144, 146, 146, 146, 146, 146, 145,
	145, 145, 145, 147, 147, 519, 519, 378, 378, 517,
	517, 538, 538, 518, 518, 323, 323, 323, 323, 323,
	324, 324, 324, 527, 527, 527, 527, 527, 527, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 196, 196, 197, 198, 198, 198, 198, 198,
	173, 173, 173, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 176, 176, 176, 160, 160, 149, 149,
	149, 149, 149, 149, 149, 154, 154, 154, 154, 154,
	154, 154, 154, 150, 150, 162, 162, 162, 162, 162,
	155, 155, 156, 156, 156, 157, 157, 157, 157, 183,
	183, 159, 159, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 151, 151, 151, 151, 164, 164, 164, 164,
	414, 414, 414, 188, 188, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 186, 186, 186, 186, 186, 186, 609, 609, 610,
	610, 610, 180, 180, 180, 180, 180, 180, 466, 466,
	174, 174, 174, 174, 179, 179, 179, 179, 182, 182,
	182, 182, 397, 397, 171, 171, 171, 172, 172, 172,
	177, 177, 178, 354, 354, 175, 175, 181, 181, 181,
	181, 152, 152, 152, 152, 152, 152, 152, 153, 153,
	153, 153, 184, 184, 170, 170, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 628, 628, 166,
	166, 166, 165, 165, 165, 165, 168, 168, 169, 169,
	169, 169, 169, 169, 167, 158, 187, 588, 588, 584,
	584, 584, 584, 584, 584, 584, 584, 585, 585, 585,
	585, 590, 590, 114, 114, 114, 114, 114, 124, 124,
	124, 124, 124, 115, 115, 115, 115, 115, 115, 115,
	117, 117, 116, 116, 116, 116, 80, 80, 80, 80,
	80, 15, 15, 15, 81, 81, 259, 259, 217, 217,
	217, 342, 342, 218, 218, 331, 331, 331, 331, 215,
	215, 216, 216, 82, 82, 629, 629, 629, 601, 601,
	601, 602, 602, 602, 602, 602, 602, 325, 325, 326,
	326, 432, 432, 432, 432, 432, 329, 329, 329, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 332, 332,
	243, 243, 243, 340, 341, 341, 333, 333, 339, 338,
	338, 337, 337, 336, 336, 334, 335, 335, 335, 344,
	344, 343, 346, 346, 345, 431, 547, 547, 549, 549,
	549, 549, 549, 549, 549, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 415, 415, 630, 630, 631, 632, 545, 545,
	545, 546, 541, 541, 542, 542, 542, 542, 542, 327,
	327, 328, 328, 328, 328, 543, 544, 360, 360, 470,
	548, 548, 550, 550, 552, 633, 633, 633, 633, 633,
	633, 634, 634, 634, 430, 430, 429, 429, 351, 351,
	553, 553, 553, 553, 554, 554, 554, 554, 554, 557,
	556, 555, 555, 555, 555, 555, 84, 84, 84, 394,
	394, 393, 393, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 192, 192,
	271, 271, 271, 78, 78, 78, 12, 12, 12, 12,
	12, 12, 12, 286, 286, 13, 13, 13, 603, 603,
	603, 83, 83, 83, 83, 83, 83, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 593, 593, 592,
	592, 272, 272, 636, 636, 89, 89, 89, 89, 89,
	89, 89, 89, 488, 488, 489, 489, 77, 77, 77,
	77, 77, 416, 416, 413, 413, 412, 412, 359, 359,
	468, 468, 468, 469, 276, 276, 277, 277, 236, 236,
	236, 31, 30, 21, 21, 26, 26, 27, 27, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 28, 28,
	49, 49, 49, 49, 50, 50, 50, 50, 53, 53,
	54, 54, 48, 48, 48, 48, 51, 51, 44, 44,
	55, 55, 55, 55, 55, 611, 613, 613, 612, 612,
	616, 616, 616, 616, 616, 616, 614, 614, 615, 615,
	619, 619, 620, 620, 120, 120, 125, 125, 125, 125,
	125, 126, 126, 126, 126, 127, 127, 127, 127, 136,
	136, 191, 191, 191, 191, 191, 191, 191, 57, 57,
	57, 57, 69, 69, 69, 69, 134, 638, 638, 638,
	135, 135, 135, 637, 637, 269, 269, 426, 426, 427,
	427, 639, 639, 428, 428, 428, 428, 428, 262, 261,
	263, 263, 264, 264, 75, 75, 75, 252, 252, 251,
	253, 253, 254, 254, 249, 249, 530, 530, 256, 256,
	256, 257, 257, 245, 245, 246, 246, 247, 247, 248,
	248, 260, 260, 640, 640, 112, 112, 112, 194, 194,
	315, 315, 315, 423, 423, 423, 352, 352, 283, 283,
	425, 425, 425, 425, 390, 390, 390, 193, 193, 367,
	367, 380, 380, 381, 381, 482, 482, 382, 118, 118,
	119, 119, 133, 133, 221, 221, 219, 219, 219, 219,
	219, 219, 219, 219, 226, 226, 227, 227, 228, 228,
	229, 230, 230, 230, 230, 371, 371, 231, 231, 231,
	220, 220, 220, 222, 222, 222, 222, 222, 222, 222,
	225, 225, 225, 225, 232, 232, 232, 224, 224, 564,
	564, 564, 566, 566, 568, 568, 567, 567, 563, 563,
	565, 565, 635, 635, 396, 396, 396, 349, 350, 347,
	347, 348, 348, 357, 357, 355, 356, 356, 358, 358,
	467, 467, 467, 237, 237, 237, 387, 387, 387, 387,
	388, 388, 419, 419, 417, 417, 417, 417, 418, 418,
	420, 420, 420, 421, 421, 422, 422, 384, 384, 385,
	385, 386, 386, 386, 386, 448, 448, 223, 223, 223,
	364, 364, 364, 365, 365, 438, 438, 438, 438, 438,
	438, 438, 438, 439, 439, 437, 437, 437, 437, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 472, 473,
	473, 366, 366, 474, 424, 424, 582, 582, 582, 583,
	583, 465, 465, 475, 475, 475, 475, 475, 475, 463,
	463, 464, 464, 483, 484, 484, 400, 400, 400, 400,
	398, 398, 401, 401, 401, 401, 401, 399, 399, 476,
	476, 476, 476, 389, 389, 477, 477, 477, 477, 478,
	479, 479, 480, 480, 433, 434, 434, 490, 490, 490,
	490, 492, 363, 363, 363, 363, 363, 540, 539, 539,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 507, 507, 507, 507, 507, 507, 507, 493, 493,
	493, 493, 493, 497, 497, 497, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 498, 498, 503,
	503, 504, 504, 504, 499, 500, 505, 505, 505, 505,
	641, 641, 509, 509, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 495, 495, 495, 502, 502, 502, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 408, 408, 410, 410, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 442, 442, 442,
	442, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 558, 558, 558, 558,
	558, 558, 558, 558, 444, 444, 561, 561, 562, 562,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 569, 569, 570, 570, 572, 572, 573, 573, 574,
	575, 575, 575, 576, 577, 577, 571, 571, 578, 578,
	578, 578, 579, 579, 580, 580, 580, 580, 580, 581,
	581, 581, 581, 581, 454, 454, 455, 455, 461, 461,
	461, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 322, 322, 321, 273,
	273, 273, 273, 273, 273, 376, 376, 374, 374, 374,
	377, 377, 375, 375, 373, 373, 372, 372, 451, 451,
	449, 449, 453, 453, 402, 402, 508, 508, 508, 508,
	508, 508, 508, 508, 403, 403, 403, 411, 404, 404,
	405, 405, 405, 405, 405, 445, 446, 406, 406, 406,
	447, 447, 456, 460, 460, 459, 458, 458, 457, 457,
	435, 435, 436, 436, 383, 383, 642, 642, 379, 379,
	481, 481, 481, 481, 319, 319, 368, 368, 318, 318,
	310, 310, 311, 311, 311, 311, 361, 361, 462, 462,
	510, 510, 511, 511, 512, 512, 513, 513, 514, 515,
	516, 450, 450, 294, 293, 280, 281, 292, 291, 290,
	279, 282, 287, 288, 289, 284, 285, 301, 300, 299,
	250, 255, 306, 307, 307, 309, 309, 308, 308, 296,
	297, 298, 486, 278, 312, 312, 313, 313, 313, 314,
	314, 314, 314, 274, 274, 275, 275, 302, 302, 303,
	304, 304, 295, 295, 295, 265, 265, 265, 266, 266,
	267, 267, 524, 524, 521, 521, 521, 522, 522, 522,
	523, 523, 523, 523, 520, 520, 520, 520, 520, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 532, 532, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 534, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 537, 537,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 5, 2, 0, 3, 3, 4, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 3, 4, 5,
	4, 4, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 7, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 11, 12,
	9, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	3, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 17, 20, 16,
	19, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 8, 8, 4, 7, 3, 0, 7, 10,
	1, 1, 1, 1, 2, 2, 3, 0, 3, 0,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 13, 16, 3, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 603, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-191, -196, -197, -198, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -148, -192, -193, -194, 32, 31, 100, 80, 156,
	129, 138, 204, 387, 432, 444, 402, 143, 423, 407,
	-142, -143, 462, -57, -69, -135, -134, 73, 130, 417,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -623, 102, -565, -93,
	-96, -127, -627, 163, 222, -115, -116, 369, -122, -123,
	425, -125, -126, 428, 164, -64, -63, 158, -219, -221,
	-140, -139, -141, -195, -149, -150, -151, -152, -153, -154,
	-155, -157, -183, -158, -159, -160, -161, -162, -163, -167,
	-186, -164, -165, -166, -169, -168, -170, -175, -171, -172,
	-173, -174, -176, -177, -179, -180, -181, -182, -184, -185,
	467, -178, -187, -156, 528, 49, 482, 82, 148, 436,
	21, -5, -6, -7, -8, -9, -10, -11, -15, -14,
	-55, -75, -77, -80, -81, -82, -89, -83, -84, -564,
	-94, -95, -98, -100, -101, -97, -99, 424, -222, -220,
	600, 543, -18, -23, -24, -19, -20, -22, -25, -21,
	-26, -27, -28, -40, -45, -46, -42, -43, -41, -44,
	-47, -48, -49, -50, -51, -52, -53, -54, -30, -36,
	-37, -31, -32, -33, -34, -35, -38, -39, -17, -29,
	564, 573, -225, -223, -224, -232, 454, 551, 502, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, -317, 2, -296, -302, -303, -304, -295, -265, -534,
	-537, 4, -531, -535, 170, 232, 333, 21, 23, 22,
	24, 25, 26, 27, 29, 30, 41, 42, 44, 45,
	46, 47, 48, 49, 53, 55, 59, 60, 61, 62,
	63, 64, 68, 73, 74, 79, 80, 81, 82, 83,
	84, 85, 91, 88, 89, 90, 92, 94, 96, 97,
	98, 99, 100, 101, 103, 104, 105, 107, 108, 109,
	117, 118, 119, 120, 121, 123, 129, 124, 130, 133,
	128, 132, 134, 136, 137, 138, 141, 142, 143, 145,
	146, 147, 149, 150, 151, 153, 154, 156, 157, 158,
	161, 159, 510, 160, 162, 163, 164, 165, 168, 176,
	177, 178, 183, 185, 186, 190, 191, 192, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 205, 209, 211,
	212, 213, 214, 215, 221, 222, 224, 225, 226, 227,
	228, 233, 234, 235, 239, 236, 245, 246, 250, 251,
	252, 254, 258, 259, 260, 261, 262, 263, 265, 267,
	266, 269, 272, 273, 276, 277, 278, 279, 280, 281,
	285, 286, 282, 287, 288, 290, 291, 294, 292, 295,
	296, 293, 297, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 308, 309, 310, 298, 313, 311, 315, 316,
	317, 331, 326, 327, 328, 321, 322, 318, 323, 319,
	320, 324, 325, 330, 335, 336, 339, 219, 341, 342,
	345, 363, 349, 350, 351, 354, 355, 358, 361, 362,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 374,
	375, 377, 378, 379, 381, 382, 383, 385, 387, 388,
	390, 391, 393, 394, 395, 396, 397, 398, 399, 401,
	402, 404, 403, 405, 407, 409, 410, 411, 417, 423,
	419, 420, 421, 422, 424, 425, 426, 427, 428, 430,
	431, 432, 434, 435, 436, 437, 438, 440, 442, 443,
	447, 448, 464, 465, 484, 444, 445, 446, 449, 450,
	451, 452, 453, 457, 455, 456, 458, 459, 460, 462,
	463, 466, 467, 469, 470, 471, 472, 473, 474, 475,
	478, 480, 481, 482, 501, 483, 485, 489, 490, 491,
	492, 486, 487, 500, 494, 495, 497, 498, 503, 504,
	505, 506, 507, 508, 509, 511, 513, 521, 522, 523,
	525, 528, 529, 530, 531, 519, 533, 534, 537, 538,
	539, 542, 540, 541, 543, 545, 548, 549, 550, 556,
	555, 557, 559, 560, 565, 566, 568, 569, 570, 36,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 125,
	126, 155, 166, 167, 179, 193, 194, 206, 208, 216,
	217, 218, 240, 241, 243, 248, 270, 338, 340, 356,
	360, 376, 380, 384, 386, 400, 439, 476, 488, 493,
	514, 515, 516, 517, 524, 526, 551, 552, 553, 558,
	567, -317, 2, -296, 347, -289, 2, -265, -265, 387,
	28, 2, 28, 375, 456, 505, 507, 2, -591, -362,
	2, 28, -268, -265, 102, 204, 454, -289, 2, -591,
	-362, 25, 2, -265, 2, 361, 22, 27, 66, 77,
	98, 141, 165, 187, 190, -626, 363, 394, 442, 458,
	500, 511, 525, 2, 555, 291, 455, 502, 232, 120,
	530, 449, -603, 447, 448, 361, 392, 434, 207, 544,
	-269, 2, 444, -265, 291, 2, 603, 94, 74, 439,
	459, -145, 2, 281, 522, -146, -147, -144, 514, -519,
	449, 434, 313, -265, 603, 603, 603, 28, -278, -265,
	502, 232, 449, 120, 498, 603, 2, 502, 366, 555,
	455, 120, 397, 232, 530, 190, 141, 27, 449, -603,
	578, 579, 291, 127, -589, 2, -584, 4, -535, -531,
	-311, -310, 502, 508, 120, -304, -295, 593, -303, 603,
	603, 603, 2, 251, 252, 396, 395, 459, 460, 603,
	603, 603, 603, 447, 2, 165, 22, 27, 66, 93,
	98, 127, 187, 190, 352, -624, 363, 394, 458, 500,
	504, 511, 525, -602, 483, 68, 422, 449, -601, -603,
	291, 530, 141, -412, 120, 281, 202, 538, 507, 505,
	536, 133, 239, 541, 540, 603, 603, -106, 2, 600,
	32, 31, -105, -109, 143, 462, -214, 502, 244, 2,
	-265, 603, 603, 2, 251, 252, 447, 448, 603, 603,
	188, -584, 2, 603, 603, 2, 251, 252, 447, 448,
	244, 2, 68, 451, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	2, -189, 459, 483, 213, 47, 46, 74, 28, 393,
	79, 367, 121, 127, 150, 531, 205, 232, 233, 259,
	93, 94, -414, 44, 252, 68, 251, 448, -609, 447,
	-466, 503, 450, 456, 497, 263, 444, 522, 102, 545,
	435, 570, 397, 398, 495, 411, 282, 159, 189, 4,
	120, 313, 434, 461, 267, 266, 514, 281, 443, 370,
	84, 603, -635, 2, 502, -637, 2, 522, 522, 2,
	-637, 2, -637, 2, -637, 2, -638, 522, 567, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, -220, -222, -221,
	603, 603, 603, 603, 603, 603, 603, -189, 459, 2,
	74, 28, -355, -357, 535, 242, 152, 353, -219, -221,
	2, -564, -517, 2, -440, -538, -442, 591, 592, 584,
	499, 67, -321, 332, 571, -454, 127, 536, 347, -537,
	-443, -456, 155, 363, 439, -377, 8, 9, 5, 6,
	7, -274, -444, -450, 527, 169, 337, -314, 604, 10,
	600, -561, -221, -455, 37, 208, 65, -521, -313, -275,
	-493, 243, -312, -295, -558, -559, 4, -531, -532, -522,
	-496, -504, -500, -501, -507, -265, -534, 77, 111, 112,
	110, 115, 114, 284, 283, 116, 113, 461, 544, 66,
	36, 216, 217, 248, 338, 218, 75, -560, 142, -533,
	240, 241, 476, 51, 400, 179, 126, 125, 340, 56,
	54, 552, -505, 122, 514, 515, 516, 517, 193, 194,
	58, 166, 167, 360, 384, 493, 524, 526, 206, 270,
	43, 106, 189, 238, 220, 247, 249, 253, 271, 274,
	314, 329, 334, 357, 359, 433, 468, -641, 553, 488,
	69, 70, -566, 403, -567, -289, -566, 603, 603, 605,
	603, -347, -349, -350, 2, 28, 139, 600, 2, -471,
	2, -472, -476, -221, 264, -475, 600, -473, 598, -296,
	348, -562, 440, -558, -559, -274, -295, -313, 4, -531,
	-533, 602, -351, 600, 120, 449, 502, 78, 232, 165,
	-407, 600, -265, 28, 347, 518, 605, -348, 391, -452,
	600, 347, 188, 350, 60, 295, 2, 2, 2, 2,
	2, 216, -265, 502, 119, 2, 262, 2, 2, 2,
	2, 2, 2, 2, -370, 216, 2, -296, 555, -370,
	216, 2, -370, 216, 2, -413, 2, 87, -279, 216,
	2, -265, -305, 216, 2, -300, -302, -309, 216, 2,
	-307, -265, -529, 216, 2, -528, -524, 10, -523, 5,
	4, -531, -535, -532, -534, 77, -440, 2, -133, 2,
	60, -265, 555, 2, 464, 2, 600, -145, 2, 71,
	522, 43, 459, -146, 2, -427, 2, -428, -261, -262,
	-263, -483, -264, 250, 390, 399, 574, 131, 332, 570,
	-618, 188, 583, 518, -517, -517, -517, -378, 602, 2,
	2, 2, 2, 2, 2, -476, 216, -296, 2, -293,
	-520, 4, -531, -535, -532, -536, 28, 31, 32, 33,
	35, 37, 38, 39, 40, 57, 65, 66, 72, 76,
	78, 87, 93, 102, 110, 111, 113, 112, 114, 115,
	116, 127, 131, 135, 139, 140, 144, 148, 152, 169,
	171, 184, 187, 188, 204, 207, 210, 223, 237, 242,
	244, 264, 268, 275, 283, 284, 332, 337, 343, 347,
	348, 352, 353, 373, 389, 406, 429, 454, 461, 479,
	496, 502, 512, 518, 520, 527, 535, 536, 544, 546,
	554, 561, 562, 563, 564, -537, 2, -476, 216, 2,
	-299, 216, -476, -302, 2, -279, 2, -292, -520, 2,
	-318, 216, -296, -298, -302, -300, 2, 2, 2, 2,
	-307, 2, -528, 216, 2, 28, 28, 555, 391, 244,
	518, 605, -368, -310, -311, -516, 8, -361, -265, 602,
	-440, 2, -133, -117, 2, 184, -440, 216, 2, -133,
	216, 2, -440, 216, 2, -133, 216, 2, -604, 2,
	-528, 216, 216, -265, 2, 295, 2, 2, 525, 2,
	98, 502, 119, 2, 421, -625, 442, 529, 2, 2,
	2, 2, 2, 2, 2, 502, -284, 2, -265, 184,
	486, -307, 216, -308, 2, 455, -636, 403, -528, 216,
	2, 555, -300, 216, 2, -300, 232, 246, -279, 216,
	2, 507, 505, 507, 505, 188, 2, 244, 2, 244,
	2, -477, 2, -478, -472, -479, 598, 348, -487, 2,
	-486, -523, 551, -106, 600, -106, 600, 459, 600, -528,
	-296, -296, -440, 2, -133, -117, 2, -440, 2, -133,
	2, -130, -528, -129, 600, 188, -440, 2, -133, -117,
	2, -440, 2, -133, 2, -214, 184, 2, 120, 502,
	-189, 2, 184, 546, 2, 8, 2, 223, -528, 450,
	398, 176, 2, 464, 2, 465, 74, -414, 570, 74,
	188, 2, 188, 2, -397, 2, 564, 391, 188, 2,
	2, -588, 2, 347, 188, 2, 188, 2, 188, 2,
	188, 2, 188, 2, -188, 460, 523, 501, 395, 252,
	2, -133, 561, -117, 252, 251, -440, 561, 2, -610,
	184, 448, -440, 2, 521, 261, 160, 188, -397, 2,
	188, 2, 188, 2, 5, 2, 396, 484, 2, 250,
	390, 484, 2, -296, 502, 555, 455, 120, 28, 2,
	447, 2, 2, 88, 89, 188, 2, 188, 2, 203,
	188, 2, 188, 502, 570, 2, -389, -476, -426, -427,
	-426, 518, -355, -357, -189, 464, 2, -226, -387, -228,
	184, -417, -418, -229, 275, 171, 343, -230, -396, 28,
	139, -396, -396, 60, 601, 601, 11, 12, 76, 41,
	591, 592, 593, 594, 182, 595, 596, 589, 590, 588,
	581, 582, 586, 256, 257, 95, 585, 583, 86, 289,
	441, 172, 173, 174, 175, 418, 230, 34, 231, 14,
	15, 16, -321, 33, 352, 274, 571, 220, 468, 584,
	17, 18, 19, 247, 249, 334, 50, 223, -273, 363,
	-320, 499, 67, -440, -440, -440, -440, -440, -440, -440,
	-440, 359, 600, -383, -435, 598, -221, 600, 600, 600,
	600, -516, -221, -440, -454, 601, -375, 600, -221, -454,
	-449, 600, 439, 598, 600, -457, -440, 5, 5, 5,
	600, 602, -569, 565, 184, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 386, -498, 600, -497, 600, -497, -497, 556, -495,
	600, 573, 566, 600, -495, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 556, 605,
	-566, -351, 600, -379, -481, -440, 593, -379, -379, 347,
	-372, -440, 106, -400, 253, 314, 189, 271, 433, 238,
	-437, 604, -437, -465, 573, -221, -473, -295, -221, -475,
	600, -471, -465, -107, -516, -90, -103, -112, -133, -148,
	-193, -194, 593, -296, 600, 188, 600, 602, -520, 188,
	-361, -279, -306, -265, -296, -312, -313, -318, 2, 138,
	-372, -584, 530, 449, 28, 455, -361, -268, 38, -451,
	-490, -491, -540, 604, -539, -493, -503, -499, -502, 376,
	380, -522, 54, 552, -505, 243, 4, -531, -533, 240,
	241, 476, 51, 400, 179, 126, 125, 340, 56, 514,
	515, 516, 517, 193, 194, 58, 553, 488, 69, 70,
	-584, 530, 449, 28, 455, -361, 184, -361, 2, 2,
	155, 2, 2, 2, -265, -242, 605, 64, 426, 155,
	-370, 216, -242, 155, -242, 155, -319, 216, -318, -242,
	155, -242, 605, 155, -242, 605, 155, 602, 605, 155,
	-361, 2, -413, -519, -372, 38, -427, 2, 127, -525,
	-523, 5, -639, 605, 273, -324, 288, 331, 212, 348,
	568, 341, 131, -527, 5, 4, -450, -462, 127, 281,
	243, -510, -512, 8, -511, 9, -513, 591, 592, -518,
	-517, 109, 602, -520, -239, 419, 462, 362, -238, 24,
	29, 143, 234, 317, 549, 161, -337, 235, -334, 366,
	155, 480, 539, -598, -599, 446, 509, 510, 90, 341,
	462, 362, 419, 155, -393, -395, 38, 118, 317, 361,
	61, 227, 293, 294, 482, 558, 155, 462, 362, 419,
	362, -13, -254, 24, 143, -256, -251, 462, -599, 99,
	419, 577, 424, 372, 494, 389, -599, -241, 480, 539,
	-598, -599, 446, 419, -240, -339, -334, 366, 155, 604,
	24, 143, 419, 462, 362, -621, -622, 29, 419, 362,
	-592, -286, -563, 223, 564, 155, -286, -286, -476, 216,
	-614, 184, 2, -607, -129, 265, 5, 10, -528, -129,
	-368, 605, 605, -520, 593, 448, 447, 155, 155, 155,
	155, 184, 332, 332, 2, 2, 2, 2, 2, 190,
	-601, -626, 2, 2, -296, 216, -353, 347, -587, -369,
	502, -296, 184, 332, 43, -299, 216, 2, -302, 555,
	-592, 332, -301, 216, -296, 38, 600, 332, 2, -413,
	2, 232, -563, 332, -477, -315, -296, -472, -315, 462,
	-289, 38, -437, -296, 601, 605, -487, -487, -528, -202,
	564, 188, 102, 600, 600, -214, 564, 564, -484, 605,
	-483, 223, -529, -130, -528, 422, -528, -587, -279, 2,
	-296, 2, 502, 254, -528, -202, 223, -528, -528, -528,
	-519, 28, 465, 2, -188, 460, 523, 89, 465, 2,
	-296, 502, 120, 232, 80, -614, 184, 2, -265, -590,
	184, -585, 434, 449, 530, -584, -296, 120, -296, 120,
	-296, 120, -296, -296, 2, 2, 2, 2, 2, 85,
	2, -133, -440, 2, 85, 2, 46, 481, -610, 184,
	2, 521, 2, 521, 2, -265, -265, -265, 483, 273,
	-296, -296, -296, -297, -302, 503, 448, -440, 2, -628,
	2, 188, 184, 2, 502, 232, 502, 232, 120, 188,
	74, 120, 28, 502, 445, -242, 605, -269, -226, -387,
	-519, -388, -387, -227, -226, -229, 184, 399, 540, 317,
	466, 258, -418, -417, 28, -440, -422, 178, 316, -440,
	-420, -442, 591, 592, -511, -513, -371, 341, -220, -220,
	-220, -358, -467, -440, 389, 232, -492, -490, -490, -294,
	-520, 514, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, 274, 220,
	468, 50, 223, -440, 518, -440, -440, -440, -440, 311,
	332, 337, 527, 169, 537, 139, 341, -642, 496, 40,
	-447, -221, -376, 600, -461, 35, 479, 28, -454, 600,
	2, -435, -440, -436, -322, -320, -265, 591, 592, 593,
	594, 595, 596, 581, 582, 583, 14, 15, 16, 586,
	590, 588, 589, 182, 95, 585, 289, 441, 86, 172,
	173, 174, 175, 256, 257, 17, 18, 19, 34, 584,
	-373, -372, -372, 601, 554, 28, 139, 593, 2, 601,
	605, 38, 601, -440, -373, -453, -449, -372, -460, -459,
	561, -408, -409, 569, 298, 123, 214, 296, -410, 453,
	-514, 8, -520, 593, -570, 177, 207, 600, 601, 2,
	601, 2, 601, -440, 2, 601, -440, 2, 601, -440,
	2, 601, -440, 2, 601, 2, 601, 2, -440, -440,
	-440, -440, -440, -440, -440, -372, 8, -514, -514, 514,
	514, -514, -514, -514, -506, 376, 377, 378, 379, 276,
	277, 278, 279, 380, 381, 382, 383, 303, 304, 305,
	306, 299, 300, 301, 302, 307, 308, 309, 310, 198,
	199, 200, 201, 194, 195, 196, 197, -506, -402, 2,
	-508, -372, 4, 569, 298, 123, 214, 296, 453, 5,
	-402, 2, -403, 2, -440, -372, -404, -441, -442, 591,
	592, 584, -321, -454, -405, 2, -440, -373, -440, 57,
	268, 520, -406, -440, 188, -372, -372, 2, -372, 2,
	-567, 38, -372, -364, 605, 188, 38, 4, -364, -364,
	600, 601, 605, -401, 211, 292, 287, 246, -401, -471,
	-400, 253, -398, 357, -398, -398, -465, -280, 598, 606,
	-520, -465, -464, -463, 38, -289, 354, -465, -465, 602,
	601, -464, 599, -582, 600, 603, 603, 603, 603, 603,
	-296, 600, -372, -520, 602, 485, 2, 601, 247, 247,
	247, 247, 247, 440, 601, 518, -586, -305, -309, 503,
	2, 564, -105, 349, 601, 605, -363, 37, 598, 602,
	-514, 2, 2, -509, 556, 600, 600, -409, 600, 188,
	-586, -309, 503, 2, -362, 518, -265, 2, -296, -370,
	-242, 155, -370, -370, -242, 605, 155, -279, -300, -305,
	-307, -309, -265, -528, -529, -242, -301, -618, 601, 522,
	-428, -323, 399, 478, 420, 457, 498, 8, 9, 8,
	9, 605, -520, 605, -619, 93, 518, 78, 449, -258,
	282, 518, -431, 216, 78, -541, -282, 93, -542, -265,
	72, 536, 389, 187, 153, -619, 93, 389, -619, 93,
	2, 234, 93, 462, 483, 28, 60, -476, 41, 41,
	28, -617, 330, 269, 560, 188, 570, 502, 232, 449,
	518, 518, -476, -395, -490, 118, 293, 294, 60, -515,
	-510, 591, 592, -515, 60, -515, -515, -515, 564, -299,
	-476, 449, 518, 518, 518, 409, 409, -251, -146, 518,
	518, 28, -189, 427, 127, -640, 583, 409, 605, 41,
	41, 28, -617, 330, 269, 188, 518, -318, -280, 550,
	42, 550, 42, 550, 518, 42, 449, 518, 605, 42,
	518, 518, -13, 462, -593, -270, 105, 323, 286, 324,
	97, 320, 96, 319, 103, 321, 104, 322, 557, 335,
	63, 318, 297, 325, -271, -272, 146, 368, 548, 120,
	-528, -13, -13, 462, 362, 419, 155, -615, 223, 28,
	-603, 223, -484, 223, -484, -310, -265, 602, -133, -440,
	-440, -133, -440, -133, 46, 155, 155, 2, -636, 262,
	600, -327, 332, 188, -361, -485, 244, 605, -369, -584,
	155, -526, -525, 116, 461, -394, -393, 332, -301, 216,
	2, 155, -351, 332, 149, 600, 397, 2, 155, -281,
	216, -266, -265, -413, -245, 506, 155, -391, 546, -423,
	-133, 600, 127, 38, -423, -380, -381, -482, -382, -282,
	600, -289, -437, -106, -486, 601, 601, 601, -201, 351,
	-200, -265, 5, -214, 546, -326, -432, -431, -545, -546,
	-541, 274, 232, 536, 246, 170, -352, -283, -282, 119,
	401, 401, -208, 564, -129, -130, 601, -484, 223, 486,
	-202, -202, -484, -484, -296, 184, -528, -202, -202, -202,
	2, 2, 2, 2, -397, -296, -279, -318, -296, 28,
	602, -361, -361, -309, -305, -397, -279, -397, -279, -397,
	-279, -133, -440, 483, 2, 459, 184, 184, 602, -397,
	-354, 429, 2, 397, 120, 502, 366, 232, -296, -318,
	-296, -318, -279, 120, -279, 121, -296, -476, -388, -227,
	348, 258, 466, -420, -421, -442, 439, 440, -421, 439,
	440, 8, 9, 8, 9, -231, 470, 336, -370, 605,
	-236, 39, 135, 258, -296, 570, 151, -440, -440, 518,
	-642, 496, -447, 151, -440, 311, 337, 527, 169, 537,
	139, 341, 188, 600, -441, -441, 601, -374, -440, -440,
	599, 608, 601, 602, 601, -357, 605, -355, -440, -372,
	-372, 601, 602, -372, -361, 599, 599, 605, 601, -458,
	-459, 144, -440, 518, 518, 518, 518, 600, 601, 602,
	-575, 358, 600, 600, -440, 601, 601, 601, 601, 38,
	605, 605, 605, 601, 605, 605, 605, 601, 601, 601,
	605, 601, 570, 570, 601, 601, 601, 601, 605, 601,
	605, 601, 188, 601, 601, -411, 373, 601, 11, 12,
	591, 592, 593, 594, 182, 595, 596, 589, 590, 588,
	581, 582, 583, 86, 289, 441, 14, 15, 16, -321,
	247, 223, -441, -441, -441, -441, 601, -445, -446, 188,
	184, 38, -406, -406, -406, 601, 188, -372, 601, 601,
	600, -568, 291, 332, 601, -434, -433, 562, -481, -365,
	2, -471, -291, -520, -434, -434, -372, -440, 253, 253,
	-399, 546, 347, -401, -471, -464, -516, -439, -438, 186,
	39, 135, 326, 327, 328, 219, -464, -289, -351, -464,
	-464, -520, -465, -465, -463, 601, -583, -516, 601, -366,
	-474, -562, -357, 602, -520, -211, -563, -190, 5, 337,
	-190, -190, -190, -190, -361, 518, 518, 223, 25, 374,
	-490, 598, 599, 8, -520, 600, -514, -514, -514, -361,
	188, 188, 223, 188, -526, 2, -242, -370, -242, -242,
	-318, -319, -242, -242, -242, -392, 564, -517, -427, 534,
	83, 399, 514, -517, -238, 419, -282, -282, -296, -306,
	202, 410, -526, 332, -431, 216, -244, 332, -490, -290,
	-265, 600, -415, 566, 258, 258, 546, -282, -290, 258,
	216, -282, 216, -290, 2, -290, -594, 399, 342, -440,
	60, -335, 280, 397, 333, -239, 419, 462, 362, -133,
	-133, -133, -133, -133, 600, -618, 546, 138, -296, -318,
	-296, -306, -526, -301, 462, 362, 419, 329, -312, -515,
	-515, -393, 462, 362, 419, -306, -526, -299, -526, -250,
	216, -265, -250, 216, 449, -279, 409, 570, 45, -640,
	-240, -133, -133, -133, -133, -133, 600, -280, -241, 419,
	5, 216, -282, 5, -282, 216, 5, -265, -282, -306,
	-526, -622, 24, 143, -282, -306, -526, -270, 368, -528,
	337, 542, -279, -592, -286, 449, 518, 518, -476, -611,
	-612, 204, 432, 449, 435, -361, -129, -205, 564, -129,
	-199, 228, 593, -589, -528, -265, 555, -265, -325, -328,
	-326, -282, -217, -218, 566, 564, 155, -316, -296, 598,
	-202, -528, -296, -485, -307, -308, 155, -351, 332, -528,
	38, 155, 600, 2, 2, -300, 347, 332, -281, 216,
	-246, 145, -640, -279, -434, -365, -390, -425, 429, 347,
	-352, 551, -289, -390, -367, 605, 188, 583, 602, -352,
	-480, 593, -106, -106, -202, 605, 600, 583, 583, 600,
	-528, -528, 601, 605, -244, -296, -281, 232, 232, -288,
	-266, 601, 605, 602, 600, 583, 583, -210, 351, -209,
	147, 260, 245, 472, 473, 474, 475, 137, 471, 124,
	-484, -208, -130, 188, 188, -65, 564, 502, -202, 604,
	435, -265, -397, -397, -397, 459, 459, -265, -361, -292,
	-279, -296, -293, -318, 184, 184, -279, 540, -421, 348,
	285, -467, -237, 572, -296, 604, -440, -440, 151, 151,
	-440, -441, -441, -440, 151, 188, 600, -440, -451, 33,
	33, 601, 605, -436, -440, -320, 601, 554, -357, -357,
	601, 593, -520, 604, 601, -449, 148, -440, 512, 298,
	214, 296, -410, 296, -410, -410, -514, 5, -520, 593,
	-576, -285, 600, -265, 562, -356, 353, 601, -492, -490,
	-440, -440, -440, -440, -440, -514, -495, -495, -510, -510,
	-440, -445, -440, -492, -490, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, 139, 332, 341, -441, -446,
	-445, -440, -440, -490, 601, 601, 601, -372, -105, 600,
	291, -384, 207, -440, -484, 605, -384, -384, 601, -471,
	-471, 600, -440, 253, 599, 605, 607, 583, -351, 602,
	-463, -464, 599, 601, 605, 601, 605, -424, 38, 601,
	-520, -434, -213, -212, 136, 53, 107, 134, 337, -361,
	-361, 449, 350, 5, 8, 598, 599, 602, -514, 601,
	601, 601, -361, -361, 449, -361, -242, -242, 119, 317,
	-440, 518, 518, 60, 223, 155, 332, 548, -547, -542,
	153, -440, 600, 232, 600, 600, 2, -233, -234, -235,
	143, 462, 24, -620, 2, 546, 155, -242, 155, -242,
	568, -335, 600, 600, 518, 449, -258, 518, 564, -372,
	-440, -203, 127, -519, -599, 604, -599, 604, 449, 518,
	518, 449, 518, 518, 332, 155, 564, 168, 168, 570,
	-250, 564, -372, 518, -494, 48, 26, 332, -300, -242,
	155, 518, 518, 530, 462, -528, -528, 337, -13, -306,
	-526, -301, 462, 362, 419, -591, -362, -591, 204, -309,
	-615, -484, -207, 351, -206, 147, 431, 137, 260, 225,
	-484, -205, 188, 244, 564, -301, 2, 601, 601, 605,
	-548, 38, 345, 345, 600, -296, -86, 564, -483, -516,
	-595, 564, 43, -299, 38, 155, -592, -133, -301, -488,
	-489, 5, 38, -296, 155, 347, 332, -247, 267, -640,
	-524, -563, -357, -390, -379, 333, 91, 601, -434, -381,
	-365, -440, 2, 601, -200, -201, -528, -528, -528, -202,
	-214, -214, -432, -329, 600, -281, -266, 600, -214, -283,
	2, -529, -528, -528, 605, 600, 583, 583, 583, 583,
	-208, -484, -129, -133, 351, -296, 593, -397, -341, -340,
	366, 341, -341, 439, 439, 348, 178, 263, -236, -280,
	-440, -440, 151, 33, 33, -440, -440, -451, 601, -440,
	-440, -372, 599, 5, -440, 601, 601, 8, -440, 601,
	602, -577, -265, -440, 601, 60, 601, 601, 605, 605,
	601, 601, 601, 601, 601, 601, 601, -446, 188, 139,
	341, 600, 601, 601, -105, -448, 210, 60, -471, -448,
	-448, -399, -361, -471, -438, -280, 598, -520, -516, -474,
	600, 602, -212, 583, -528, -528, 564, -309, 599, 2,
	598, -520, 601, -309, 119, -282, -282, 502, 439, -250,
	389, -431, 155, -549, 93, -551, 76, 170, 102, 332,
	337, 536, 389, 72, 127, 347, 406, -630, -631, -632,
	38, 575, 576, 601, -359, -468, -562, 600, -265, -359,
	-361, 332, 491, 127, 347, 332, 127, 347, 559, 119,
	2, 530, 79, -282, -290, -361, -361, -296, -306, -526,
	162, 601, 605, 583, 2, 593, 593, -306, -526, -301,
	-306, -526, -299, 155, -250, 364, 168, 162, 601, -280,
	5, 5, 155, -277, 76, -282, 5, -282, -300, 119,
	449, 518, 518, 347, 347, 350, -611, -612, -205, 605,
	600, 583, 583, -205, -529, -129, 2, -351, -342, 234,
	-282, -546, -543, -544, 389, -550, -552, 170, 389, -133,
	2, -216, -215, -265, 5, 600, -327, 351, 599, -597,
	351, -596, 117, 137, -526, -394, -133, -301, -351, 601,
	605, 149, -416, 546, -280, -296, 155, -248, 266, -640,
	-524, -245, -419, -417, 140, 600, 347, -133, -357, 583,
	601, 601, 119, 119, 226, 154, -359, 600, 600, -361,
	119, 601, -209, -210, -528, -129, -528, -528, -208, -484,
	-66, -67, 232, 93, 371, -293, 502, 232, 600, 600,
	-236, -440, -440, -440, 601, -357, -520, 593, -571, 366,
	601, -467, -440, -440, -441, 188, 600, -451, 601, -572,
	563, -440, -385, -386, -440, 437, 108, 208, -572, -572,
	601, -516, 2, -528, 2, 518, 598, 2, 188, 223,
	38, 409, -431, -290, -294, -287, -265, 170, 216, 337,
	559, -415, 258, 600, -441, 540, -296, 600, 2, 215,
	215, 30, 60, -633, 131, 237, 601, 605, -469, -276,
	-265, -440, -469, 601, 601, 337, 540, 337, 559, -440,
	540, -490, 600, -242, -242, 601, 601, -440, 518, -519,
	100, -517, 2, -599, -250, -279, -440, 518, 5, -242,
	-294, -242, -242, -277, 530, -306, -526, -301, -616, 503,
	456, 531, 450, 191, 438, -616, 184, -206, -207, -528,
	-129, -205, 38, -332, 236, 2, -548, 258, -287, 258,
	-629, 564, 601, 605, 583, 583, -325, -217, -87, -88,
	519, -483, 605, 600, 583, -351, 38, 5, 600, 600,
	-265, 347, 600, -280, -260, 92, -640, -524, -246, -390,
	333, -361, 93, -419, -447, -202, 600, 600, -330, 81,
	94, 128, 215, 192, 233, 483, 489, 28, -330, 601,
	-359, -359, 601, 600, -202, 601, 605, 28, 600, 28,
	600, -296, -318, -372, -372, 601, -357, 60, 605, 601,
	601, -441, -451, 601, -573, -574, -285, 605, 600, 600,
	463, 599, -361, 2, -361, -250, 389, -265, -551, -287,
	332, 546, -440, -441, -267, 600, -440, 600, 600, 38,
	127, 237, 132, 221, -430, -634, 101, 492, 224, -468,
	-236, 601, -429, 546, 406, -441, -277, -359, 600, 600,
	600, 583, 188, 600, -494, -242, -300, 518, 2, 2,
	188, -591, 601, -605, 404, -133, -336, -337, 223, 600,
	-331, 347, 119, 317, -215, -517, -517, 601, 38, -88,
	9, -596, -597, -440, 38, -133, -488, -359, -296, -359,
	347, -252, -251, 275, -524, -247, 601, -290, -390, -529,
	-529, -429, 601, 601, -529, -67, -361, -361, 601, 601,
	-578, 397, 440, 209, -372, -358, 601, 605, 38, -386,
	2, 2, 2, 409, 155, 211, 601, -553, 290, -265,
	601, -394, -394, 38, 132, 221, -332, 600, -237, -469,
	-332, 211, -296, -600, 546, 601, -344, -343, -340, -346,
	-345, -340, -372, -517, 100, 364, -372, -277, -361, -361,
	347, -608, 189, -607, 5, 10, -217, 364, -360, -470,
	-282, 82, 119, -342, -133, 601, -133, 601, 601, -416,
	601, -296, -249, -530, 409, 411, -640, -248, -434, 601,
	601, -430, -429, -338, -334, 601, 601, 601, 601, -579,
	-580, 50, 533, 109, -440, -579, -579, -574, -576, 170,
	564, -554, -557, -556, 580, 469, 189, 365, 601, 491,
	558, 601, 601, -338, -361, 564, -351, -440, -429, 601,
	605, 551, 601, 605, 551, 601, 188, 601, -242, -613,
	564, -242, -616, -204, 564, 46, -331, -296, 601, 605,
	388, 133, 143, -332, -629, -429, 600, -430, 600, -257,
	-256, -640, -510, -260, 140, -202, -202, -332, -430, -218,
	564, -202, -581, 153, -580, 385, 183, 439, 385, 183,
	-581, -581, -287, 55, -556, 580, -557, 580, 540, 133,
	-633, 601, 55, -553, -332, -343, 223, -345, 188, 364,
	204, 188, 447, -607, 30, -259, -258, 600, -470, 440,
	440, 2, -336, -331, -430, -359, -332, -359, -253, -254,
	-255, -361, -252, 333, 540, -338, -332, -434, 109, 207,
	513, 317, 33, 583, -555, 317, 426, 64, 462, -555,
	-434, 583, -554, 600, 600, 350, -361, 351, -361, 2,
	-217, -332, 601, -338, 601, -249, 462, -218, -338, 439,
	355, -580, -440, 23, 337, 127, -440, -633, -372, -372,
	-242, -201, 600, 601, -331, -338, -429, -218, -430, -257,
	-380, -434, -218, 601, 601, -201, -243, 64, 426, -259,
	-218, -430, -434, -332, -253, -434, -434, -333, -334, 518,
	601, -434, -332, -338, 600, -338, -218, -372, -218, -434,
	601, -434, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 553, 554, 556, 557, 558, 560,
	561, 563, 565, 567, 568, 569, 571, 572, 574, 575,
	576, 577, 578, 580, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	649, 651, 0, 1411, 1413, 1415, 1417, 0, 804, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 0, 369,
	371, 372, 374, 376, 377, 378, 380, -2, 0, 486,
	487, 489, 491, -2, 0, 1013, 1015, 0, 638, 640,
	0, 1018, 1020, 0, 0, 661, 662, 0, 1522, -2,
	653, 655, 657, 659, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 748, 750, 752, 754, 756, 758,
	759, 761, 763, 765, 766, 768, 769, 771, 773, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	-2, 798, 799, 800, -2, -2, 0, -2, -2, -2,
	1429, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	59, 430, 432, 434, 436, 438, 441, 443, 445, 1580,
	493, 495, 497, 499, 501, 503, 505, 0, -2, 1594,
	0, 0, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 109, 110, 111, 112, 113, 114, 115,
	116, 75, 76, 77, 79, 80, 81, 82, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 107, 73,
	0, 0, 1553, 1555, 1557, 1559, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 25, 27,
	29, 555, 559, 562, 564, 566, 570, 573, 579, 581,
	583, 538, 539, 542, 2289, 2307, 2308, 2309, 2312, 2313,
	2314, 2315, 2316, 2317, 2773, 2854, 2855, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 540, 541, 1199, 0, 607, 605, 2274, 608, 2570,
	610, 612, 480, 481, 482, 483, 484, 485, 0, 631,
	621, 1592, 632, 634, 635, 636, 637, 602, 600, 0,
	631, 2343, 629, 1409, 1410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 409, 1258, 1259, 1260,
	1394, 1395, 2617, 1436, 0, 234, 650, -2, -2, 2738,
	-2, 684, 685, -2, -2, 699, 702, 694, 2742, 0,
	2620, 2604, -2, 705, 1412, 1414, 1416, 802, 803, 2293,
	0, 0, 0, 0, 0, 38, 40, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 244, -2, -2, -2,
	-2, 0, 0, 2665, 2395, 2242, 2309, 2245, 2240, 338,
	340, 342, 343, 0, 0, 0, 0, 0, 0, 370,
	373, 375, 379, -2, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1076, 1068, 1069,
	1316, 0, 0, 0, -2, 488, 490, 543, 544, 0,
	1581, 1581, 551, 552, -2, 0, 0, 0, 0, 308,
	296, 1014, 1016, 1017, 0, 0, 0, 0, 639, 641,
	0, 0, 276, 1019, 1021, 1022, 0, 0, 0, 0,
	0, 310, 0, 0, 654, 656, 658, 660, 730, 732,
	734, 736, 738, 740, 742, 744, 746, 749, 751, 753,
	755, 757, 760, 762, 764, 767, 770, 772, 774, 776,
	778, 780, 782, 784, 786, 788, 790, 792, 794, 796,
	797, 810, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 909, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 994, 0, 0, 813,
	815, 816, 817, 818, 819, 820, 0, 882, 907, 908,
	918, 801, 0, 1239, 1582, 1438, 1419, 1433, 1438, 1421,
	1422, 1423, 1424, 1425, 1430, 1432, 1426, 1427, 1428, 42,
	44, 46, 48, 50, 52, 54, 56, 58, 60, 431,
	433, 435, 437, 439, 442, 444, 446, -2, 1551, 1552,
	494, 496, 498, 500, 502, 504, 506, 642, 0, 644,
	0, 814, -2, 0, 1586, 1586, 1586, 0, 0, 1552,
	1550, 0, 647, 648, 709, 710, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 2116, 1944, 0, 711, -2,
	1977, 1979, 2713, 2543, 2738, 2115, 1981, 1982, 1983, 1984,
	1985, 0, 1987, 1988, 1989, 1990, 1991, 1992, 0, 1994,
	0, 1999, 2000, 2001, 0, 2720, 2219, 2303, -2, 0,
	0, 2726, 2299, 0, 2082, 2017, -2, -2, 2326, 2305,
	1788, 1789, 1790, 1791, 1792, -2, -2, 2756, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 0,
	2701, 2721, 2722, 2727, 2729, 2723, 2710, 2042, 2409, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1815, 1824, -2, -2, -2, -2, -2, -2,
	-2, 2714, 2715, 2732, 2735, 2741, 2746, 2747, 2719, 2728,
	2755, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 2771, 2772, 1816, -2, -2,
	-2, -2, 1569, 2584, 1572, 1199, 1570, 1554, 1556, 0,
	1558, 0, 0, 0, 1563, 1589, 1587, 0, 1638, 1567,
	1568, 1658, 1658, 1682, 0, 1663, 0, 1682, 1581, 1709,
	0, 1669, 2609, 2018, 2019, 0, 2309, 2304, -2, -2,
	2753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	603, 0, 609, 611, 0, 0, 0, 630, 1591, 0,
	0, 0, 0, 0, 0, 0, 412, 413, 414, 415,
	416, 2721, 0, 0, 0, 421, 0, 423, 424, 425,
	426, 427, 428, 429, 205, 2721, 511, 536, 0, 205,
	2721, 514, 205, 2721, 517, 0, 520, 1314, 205, 2721,
	523, 2270, 205, 2721, 526, 528, 2278, 205, 2721, 532,
	2285, 2283, 533, 2721, 535, 313, 311, 312, 2322, 2323,
	2330, 2331, 2332, 2333, 2754, 2756, 1405, 1406, 1407, 1408,
	0, 1435, 1315, 652, 0, 678, 0, 682, 683, 2709,
	-2, 0, 2629, 687, 688, -2, 690, 1439, 1443, 1444,
	1445, 1446, 1447, 0, 0, 0, 0, 1452, 0, 0,
	0, 0, 679, 680, 697, 698, 703, 706, 0, 805,
	806, 807, 808, 809, 72, 0, 2721, 1709, 74, 0,
	2264, 2334, 2335, 2336, 2337, 2338, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
	2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
	2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817,
	2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827,
	2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837,
	2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847,
	2848, 2849, 2850, 2851, 2852, 2853, 78, 0, 2721, 83,
	0, 2721, 0, -2, 96, 0, 108, 0, 2267, 117,
	0, 2721, 0, 2239, -2, 0, 217, 297, 298, 299,
	0, 1043, -2, 2721, 1252, 1254, 1254, 0, -2, 0,
	0, 0, 1004, 2236, 2241, 1005, 2260, 1006, 2246, 0,
	344, 345, 346, 347, 348, 0, 349, 2721, 351, 352,
	0, 354, 355, 2721, 357, 358, 0, 360, 0, 256,
	262, 2721, 2721, 383, 385, 0, 387, 388, 0, 390,
	0, 0, 0, 394, -2, 410, 0, 407, 397, 398,
	400, 401, 402, 403, 404, 0, 450, 448, 2275, 0,
	0, -2, 2721, 0, 1040, 0, 0, 1294, -2, 2721,
	1245, 0, 1301, 2721, 1297, 0, -2, 0, 1579, 2721,
	1456, 1072, 1073, 1074, 1075, 1721, 477, 0, 1487, 0,
	1489, 0, 1508, 1715, 1658, 0, 0, 1720, 0, -2,
	596, 2292, -2, 546, 0, 547, 0, -2, 0, 325,
	0, 0, 1023, 1025, 1026, 1028, 1029, 1032, 1033, 1034,
	1035, 1695, 277, 279, 0, 0, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 0, 0, 663, 0, 0,
	811, 812, 0, 0, 825, 826, 827, 0, 325, 2621,
	2579, 2431, 834, 0, 837, 840, -2, 0, 0, 0,
	0, 844, 0, 849, 850, 851, 0, -2, 0, 858,
	860, 1012, 862, 0, 0, 864, 0, 868, 0, 871,
	0, 873, 0, 875, -2, -2, -2, 883, 884, -2,
	889, -2, 0, 893, -2, 0, 896, 0, 899, -2,
	0, 909, 905, 906, 0, 0, 0, 0, 926, 927,
	0, 936, 0, 939, 940, 941, 0, 945, 946, 0,
	948, 949, 950, 951, 0, 2692, 2626, 2395, 0, 957,
	-2, 963, 965, 0, -2, 0, 981, 0, 985, 0,
	0, 993, 0, 0, 821, 822, 205, 1713, 1418, -2,
	1420, 0, -2, 0, 643, 0, 646, 1611, 1537, 1534,
	0, 1608, 1609, 1538, 0, 0, 0, 1545, 0, 1584,
	1585, 0, 0, 0, 1524, 1525, 0, 0, 0, 0,
	2121, 2122, 2123, 2124, 2137, 2125, 2126, 2136, 2134, 2135,
	2127, 2128, 2133, 2147, 2148, 2138, 2139, 2129, 2142, 2140,
	2141, 2143, 2144, 2145, 2146, 0, 0, 2152, 0, 2130,
	2131, 2132, 2160, 0, 0, 2161, 0, 2163, 0, 2153,
	2149, 2150, 2151, 0, 1923, 1925, 2227, 0, 0, 0,
	2159, 2154, 2155, 1861, 1862, 1863, 1864, 1865, 1898, 1902,
	1903, 0, 0, 1978, 2224, 2223, 1980, 0, 0, 2175,
	0, 1993, -2, 0, 2116, 2170, 0, 0, 2002, 2003,
	2004, 0, 0, 2175, 0, 0, 2218, 2014, 2015, 1853,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1801, 0, 1803, 0, 1804, 1805, 1812, 1825,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 2199, -2, 0, 0, 0, 0, 1817, 0,
	1571, 0, 0, 1642, 2228, 2232, 2233, 1642, 1642, 0,
	0, 2176, 1706, 1706, 0, 0, 1701, 1701, 1701, 1699,
	1682, 0, 1682, 1692, 0, 1682, 1682, 0, -2, 1663,
	0, 0, 1692, 0, 1676, 584, 586, 588, 590, 591,
	592, 594, 1710, 1711, 0, 0, 0, 0, 2310, 0,
	0, 0, 0, 2282, 0, 0, 2295, 0, 366, 0,
	0, 0, 2675, 2620, 0, -2, 614, 633, 1581, 0,
	2178, 1736, 1740, 0, 1742, 1743, 1744, 1745, 1746, 0,
	0, 1737, -2, 1813, 1815, 1836, 2327, 2328, 2329, 1796,
	1797, 1798, 1799, 1800, 1808, 1795, 1795, 1795, 1806, 1835,
	1827, 1835, 1831, 1781, 1782, 1783, 1818, 1819, 1820, 1821,
	0, 2675, 2620, 0, -2, 623, 0, 0, 1519, 411,
	0, 418, 419, 420, 0, 507, 0, 203, 204, 0,
	205, 2721, 512, 0, 515, 0, 205, 2721, 2234, 521,
	0, 524, 0, 0, 530, 0, 0, 0, 0, 0,
	205, 1521, 0, 0, 0, 0, -2, 692, 700, 701,
	224, 225, 0, 1441, 0, 1448, 720, 721, 722, 1450,
	1451, 0, 1453, 695, 723, 724, 725, 726, 727, 728,
	0, 2248, 2249, 2250, 2251, 2254, 2255, 0, 0, 693,
	713, 696, 0, 707, 118, 1391, 0, 0, 161, 0,
	1391, 1391, 0, 0, 0, 0, 188, 0, 1111, 0,
	0, 0, 0, 133, 146, 157, 130, 131, 0, 0,
	0, 0, 0, 0, 84, 1221, 0, 1224, 0, 0,
	0, 0, 0, 0, 0, 1237, 0, 0, 0, 0,
	0, 98, 99, 0, 0, 104, 105, 0, 145, 0,
	0, 0, 0, 0, 1484, 0, 140, 120, 0, 0,
	133, 147, 159, 0, 192, 194, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 226, 0, 0, 0,
	1246, 0, 0, 0, 1578, 0, 0, 0, 0, 2721,
	1389, 0, 1374, 0, 1695, 2480, -2, -2, 277, 1695,
	1003, 0, 0, 2310, 2244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 389, 391, 392, 393, 0,
	1293, 0, 399, 440, 1170, 2721, 0, 0, 467, 462,
	0, 464, 0, 0, 0, 1220, 2721, 1218, 2279, 0,
	1243, 0, 1199, 2721, 2277, 0, 0, 0, 1302, 2319,
	1311, 1315, 1474, 0, 479, 0, 1490, 1492, 0, 0,
	1716, 0, 1718, 1658, 1581, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	1694, 0, 0, 1695, 277, 2595, 325, 325, 1695, 665,
	1695, 667, 0, 0, 828, 829, 0, 325, 325, 325,
	835, 836, 838, 839, -2, -2, -2, -2, 841, 842,
	933, 0, 0, 0, 932, 852, 0, 854, 857, 861,
	0, 997, 2604, 2620, 2675, 1010, 933, 2395, 933, 2395,
	933, 2395, 872, 874, 877, 921, 929, 888, 895, 0,
	890, 894, 897, 900, 0, 902, 910, 0, -2, 0,
	913, 0, 915, 0, 917, 933, 934, 937, 944, 947,
	952, 953, 954, 955, 2290, 956, -2, 960, 961, 0,
	972, 977, 978, 974, 0, 0, 0, 0, 0, 0,
	988, 989, 0, 0, 996, 1238, 0, 1431, 1611, 1537,
	645, 1528, 1610, 1529, 1536, 1539, 0, 0, 1541, 0,
	1543, 0, 1606, 1607, 1614, 1615, 0, 1625, 1626, 1618,
	0, -2, 0, 0, 1621, 1622, 1547, 0, 1564, 1565,
	1566, 1595, 1598, 1330, 0, 2854, 1857, 1731, 1858, 1859,
	2263, 0, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, -2, -2, -2, -2, -2, -2, -2, -2,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, -2, -2, -2, 1899, 1900, 1901, -2, 2162, 2164,
	0, 2227, 0, -2, 0, -2, -2, -2, -2, 1920,
	0, 1922, 1927, 1929, 1931, 0, 0, 0, 0, 2226,
	1941, 2210, 2211, 0, 0, 2118, 2119, 2120, 1926, 0,
	1945, 2225, 2222, 0, 0, 2156, 0, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	0, 2174, 1594, 2006, 0, 0, 0, 0, 2013, 1998,
	2172, 0, 2171, 0, 0, 0, 2182, 0, 2217, 2213,
	0, 2261, 1852, 1839, 1840, 1841, 1842, 1843, 1844, 1854,
	0, 2258, 2296, 2302, 2092, 0, 0, 0, 2043, 2044,
	2045, 2046, 2047, 0, 2049, 2050, 0, 2052, 2053, 0,
	2055, 2056, 0, 2058, 2059, 2060, 2061, 2062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 0, 0, 2064,
	0, 2185, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2066, 0, 2068, 2176, 2196, 0, 0, 1946, 0,
	0, 0, 0, 2116, 0, 2071, 2176, 2204, 0, 0,
	0, 0, 0, 2176, 0, 2209, 0, 2078, 0, 2080,
	1573, 0, 0, 1726, 0, 0, 0, 2231, 1726, 1726,
	0, 1637, 0, 0, 1702, 1703, 1704, 1705, 0, 0,
	1706, 0, 1696, 1700, 1697, 1698, 1692, 1655, 0, 0,
	2265, 1692, 1661, 1691, 0, 1199, 1681, 1692, 1692, 0,
	-2, 1665, 1682, 0, 0, 585, 587, 589, 593, 595,
	0, 0, 1594, -2, 0, -2, 327, 1198, 0, 0,
	0, 0, 0, 604, 606, 0, 0, 527, 0, 0,
	620, 0, 598, 0, 601, 0, 1727, 1730, 0, 0,
	1741, 1747, 1748, 0, -2, 0, 0, 1837, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 422, 537, 205,
	509, 0, 205, 205, 518, 0, 0, 205, 529, 205,
	2286, 205, 2284, 314, 534, 1520, 237, 0, 681, 0,
	1440, 1449, 0, 717, 0, 719, 0, 2252, 2256, 2253,
	2257, 0, 708, 0, 0, 0, 0, 1390, 0, 1337,
	0, 0, 165, 2721, 0, 207, 0, 0, 1163, 2271,
	0, 1153, 0, 0, 2417, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 1222, 1223, 1225, 1232, 1234, 0, 1228,
	2259, 0, 0, 1229, 0, 1231, 1233, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 1255, 0,
	0, 1256, 1257, 1462, 1463, 0, 1483, 1484, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 2238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 0, 1289, 1287, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 0, 0, 0, 0,
	-2, 1250, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 316, 2237, 2247, 0, 1030, 1031,
	350, 353, 356, 359, 243, 0, 0, 395, 0, 0,
	1078, 1053, 0, 0, 449, 325, 0, 0, 463, 467,
	2288, 1038, 221, 222, 223, 1216, 1219, 0, 1199, 2721,
	1266, 0, 0, 0, 0, 0, 0, 1300, 0, 0,
	2721, 2266, 2318, 2319, 1476, 1484, 0, 1726, 0, 1506,
	1493, 0, 0, 0, 1506, 1510, 1511, 1513, 1514, 0,
	0, 1717, 1723, 545, 597, 1581, 1581, 325, 323, 2546,
	321, 318, 320, 0, 0, 0, 1079, 1081, 1082, 1083,
	207, 0, 2319, 1153, 2469, 2319, 0, 1496, 1498, 0,
	0, 0, 271, 0, 280, 1695, 278, 283, 0, 0,
	0, 461, 664, 669, 823, 0, 325, 831, 832, 833,
	879, 923, 931, 976, 843, 845, 846, 847, 0, 0,
	0, 1011, 1007, 1008, 1009, 863, 933, 866, 933, 869,
	933, 892, 898, 911, 904, 912, 0, 0, 0, 925,
	942, 0, 959, 0, 0, 0, 0, 0, 0, 0,
	982, 983, 984, 986, 991, 990, 995, 1714, 1532, 1533,
	1535, 0, 1544, 0, 0, 1620, -2, -2, 1619, 1623,
	1624, -2, -2, -2, -2, 1540, 0, 1549, 1546, 0,
	1605, 1328, 1329, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1942, 0, -2, 1921, 1924, 1928, 1930, 1932,
	0, 0, 0, 0, 0, 0, 2165, 0, 2167, 1943,
	2220, 2223, 2158, 0, 2114, 0, 0, 1593, 1594, 1594,
	0, 2012, 0, 2173, 0, 2180, 2181, 0, 2005, 0,
	2214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 2048, 2051, 2054, 2057, 0,
	0, 0, 0, 2037, 0, 0, 0, 2041, 1807, 1793,
	0, 1835, 1833, 1834, 1828, 1835, 1832, 1785, 0, 1784,
	0, 2063, 0, 2065, 2067, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 1950, 1951, 1971, 2070, 2202, 2203, 0,
	0, 0, 0, 0, 0, 2076, 0, 2208, 2077, 2079,
	1581, 0, 1574, 0, 1639, 1628, 1725, 0, 2229, 1695,
	1641, 1643, 2230, 2268, 1628, 1628, 0, 2177, 0, 0,
	1686, 0, 0, 0, 1688, 1659, 0, 0, 1653, 0,
	1647, 1648, 1649, 1650, 1651, 1652, 1660, 1199, 1690, 1662,
	1666, 2296, 0, 1692, 0, 1677, 0, 1679, 1712, 0,
	1671, 1674, 0, 0, 2311, 1726, 0, 361, 367, 368,
	362, 363, 364, 365, 613, 0, 0, 0, 0, 0,
	2179, 0, 1732, 0, 1738, 0, 0, 0, 0, 622,
	0, 0, 0, 0, 1518, 417, 508, 205, 513, 516,
	2235, 205, 522, 525, 531, 233, 0, 677, -2, 715,
	716, 718, 0, 714, 162, 1391, 0, 0, 1333, 1335,
	1339, 1345, 1348, 0, 167, 2721, 179, 0, 1127, 0,
	2269, 0, 0, 0, 0, 0, 0, 1393, 0, 0,
	2721, 205, 2721, 205, 182, 184, 187, 0, 191, 189,
	0, 1115, 0, 0, 1118, 119, 1391, 0, 0, 122,
	126, 134, 135, 138, 0, 0, 0, 144, 0, 0,
	0, 1350, 1354, 1362, 0, 0, 0, 1226, 1227, 1230,
	1236, 85, 0, 0, 0, 1358, 1360, 1366, 97, 100,
	2721, 2280, 102, 2721, 0, 1332, 0, 0, 0, 0,
	193, 124, 128, 136, 137, 139, 0, 1368, 121, 0,
	220, 0, 0, 210, 205, 2721, 0, 212, 0, 213,
	214, 227, 0, 0, 0, 1041, 1042, 1288, 0, 1241,
	1242, 0, 1253, 1247, 0, 0, 0, 0, 0, 1370,
	1371, 0, 0, 0, 1389, 1386, 1695, 239, 0, 1695,
	247, 0, 2243, 0, 263, 382, 0, 0, 0, 0,
	1077, 1181, 0, 1048, 0, 0, 0, 455, 451, 0,
	460, 466, 465, 471, -2, 0, 0, 0, 0, -2,
	0, 0, 1304, 1298, 1299, 0, 0, 0, 0, 2721,
	1478, 1484, 0, 1579, 1594, 478, 1485, 1506, 0, 0,
	0, 1495, 1491, 1488, 1726, 0, 0, 0, 0, 0,
	1719, 1722, 548, 549, 300, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 1084, 1088, 0, 2319, 2319, 0,
	2273, 0, 0, 0, 0, 0, 0, 281, 0, 284,
	0, 0, 0, 289, 290, 291, 292, 293, 294, 0,
	283, 273, 1695, 0, 0, 666, 0, 0, 830, 0,
	853, 856, 865, 867, 870, 914, 916, 933, 943, 966,
	967, 1105, 0, 1105, 0, 0, 987, 1542, 0, 1617,
	1548, 1599, 1600, 0, 1330, 0, 1860, 1905, 0, 0,
	-2, 0, 0, 1909, 0, 0, 0, -2, 0, 0,
	0, 2166, 2168, 0, 2222, 2157, 2007, 0, 0, 0,
	2011, 1995, 1996, 0, 2117, 2183, 2212, 2216, 0, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 0, 2262, 2297, 2301,
	2090, 2091, 2095, 2276, 0, 0, 0, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1830, 0, 0,
	2184, 2195, 2197, 1947, 1948, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, -2, -2, -2, 1965, 1966,
	1967, -2, -2, -2, 1972, 0, 0, 0, 2198, 2200,
	2201, 2205, 2206, 0, 2073, 2074, 2075, 2207, 0, 1581,
	1575, 1636, 0, 1724, 1640, 0, 1636, 1636, 1588, 1684,
	0, 0, 1708, 0, 1656, 0, 1657, 0, 1689, 0,
	1664, 1667, 1668, 1678, 0, 1670, 0, 1673, 0, 2007,
	-2, 326, 328, 330, 0, 333, 334, 0, 0, 616,
	617, 0, 615, 599, 0, 0, 1734, 0, 0, 1810,
	1814, 1838, 625, 626, 0, 624, 510, 519, 235, 0,
	1693, 0, 0, 0, 0, 0, 0, 206, 1125, 1162,
	0, 0, 0, 1152, 0, 0, 1168, 169, 170, 171,
	0, 0, 0, 0, 180, 0, 0, 177, 0, 186,
	190, 1112, 0, 0, 0, 0, 1338, 0, 0, 0,
	141, 142, 143, 0, 148, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1468, 1469, 0,
	1459, 0, 0, 0, 208, 0, 0, 0, 1327, 229,
	0, 0, 0, 0, 0, 1240, 1291, 1292, 1249, 1351,
	1355, 1363, 0, 0, 0, 0, 631, 0, 636, 1388,
	0, 247, 245, 0, 248, 0, 251, 252, 0, 254,
	247, 241, 0, 0, 0, 1199, 396, 1051, 1169, 0,
	1171, 0, 1049, 0, 0, 1170, 447, 0, 454, 0,
	468, 0, 0, 1220, 0, 0, 1244, 1264, 1199, 0,
	1303, 1305, 0, 1313, 0, 0, 0, 1480, 1484, 0,
	1473, 1474, 1613, 1486, 1504, -2, 0, 0, 1594, 1512,
	1509, 1515, 1516, 0, 322, 0, 317, 319, 0, 303,
	0, 0, 1080, 1085, 0, 0, 0, 0, 0, 1497,
	1499, 0, 1024, 1027, 0, 0, 0, 0, 0, 0,
	272, 283, 1695, 309, 0, 824, 848, 924, 968, 1104,
	0, 0, 970, 0, 0, 1616, 1603, 1604, 1601, 1330,
	1907, 1911, 0, 0, 0, 1913, -2, 0, 1935, -2,
	-2, 2169, 2221, 1986, 1594, 2008, 2010, 1997, 2215, 1855,
	0, 2097, 2094, 0, 2081, 0, 2032, 2033, 0, 0,
	2036, 2038, 2039, 2040, 1794, 1787, 1786, 2194, 0, 0,
	0, 0, 2072, 1576, 0, 2086, 0, 0, 1644, 2086,
	2086, 1685, 0, 1687, 1654, 1645, 0, 2297, 1680, 1672,
	0, 0, 331, 0, 335, 336, 0, 0, 1728, 1733,
	0, 1739, 1809, 0, 236, 163, 164, 1342, 1346, 1343,
	0, 166, 0, 1126, 0, 1129, 0, 0, 0, 0,
	1136, 1153, 0, 0, 0, 0, 0, 0, 1155, 0,
	1154, 0, 0, 1185, 0, 1318, 1325, 0, -2, 0,
	0, 0, 173, 196, 0, 0, 0, 0, 199, 1392,
	175, 0, 0, 205, 205, 0, 0, 1334, 1336, 1349,
	0, 0, 0, 0, 151, 0, 0, 1352, 1356, 1364,
	1359, 1361, 1367, 0, 103, 0, 1470, 0, 0, 1369,
	218, 219, 0, 205, 0, 205, 211, 205, 1327, 0,
	0, 0, 0, 0, 0, 0, 1372, 1373, 238, 0,
	0, 0, 0, 240, 315, 247, 384, 0, 1099, 0,
	1181, 1173, 1174, 1175, 0, 1180, 1182, 0, 0, 1065,
	1050, 0, 1061, 0, 0, 1078, 1053, 0, 452, 469,
	0, 472, 0, 475, 1039, 1217, 1261, 1199, 0, 1295,
	0, 0, 0, 0, 0, 0, 0, 1482, 1484, 0,
	1475, 1476, 1506, 1612, 0, 0, 0, 1494, 1613, 0,
	324, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 285, 0, 286, 287, 288, 295, 274, 275,
	668, 670, 0, 0, 676, 1103, 0, 0, 0, 0,
	1602, 1915, -2, -2, 1936, 0, 2298, 2300, 1594, 0,
	2083, 1596, 0, 0, -2, 0, 0, 0, 1577, 1560,
	0, 1635, 1627, 1629, 1631, 2607, 2390, 2720, 1561, 1562,
	1707, 0, 1675, 332, 618, 0, 0, 1735, 0, 0,
	0, 1344, 168, 0, 1130, 1131, 2272, 1133, 0, 1135,
	1137, 1138, 1139, 0, 1142, 0, 2321, 0, 1147, 1150,
	1151, 0, 0, 1164, 1186, 0, 1195, 0, 1320, 1330,
	1324, 0, 1322, 1197, 0, 172, 198, 174, 200, 195,
	0, 1327, 0, 176, 185, 0, 0, 123, 0, 0,
	2384, 154, 152, 150, 101, 1331, 125, 0, 220, 228,
	1326, 230, 215, 205, 0, 1353, 1357, 1365, 0, 1380,
	1381, 1382, 1383, 0, 0, 0, 0, 249, 0, 250,
	253, 0, 0, 1114, 0, 1052, 1172, 0, 1183, 1184,
	1055, 0, 1054, 0, 0, 0, 0, 0, 453, 456,
	0, 459, 0, 0, 0, 0, 0, 1306, 1304, 0,
	1312, 0, 0, 0, 1458, 0, 0, 1477, 1478, 476,
	1500, 0, 0, 1506, 1517, 302, 0, 0, 1086, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1087, 1197,
	0, 0, 1161, 0, 307, 282, 0, 672, 0, 674,
	0, 969, 971, 0, 0, 2009, 2101, 0, 0, 2034,
	2035, -2, 0, 1975, 2085, 2087, 0, 0, 0, 0,
	0, 1646, 619, 1729, 627, 1340, 0, 1347, 1128, 1132,
	0, 0, 0, 1143, 1203, 0, 0, 1220, 1220, 1156,
	0, 0, 1189, 1190, 1099, 0, 1191, 1192, 1193, 1319,
	1605, 1325, 1099, 0, 0, 197, 202, 0, 0, 0,
	0, 0, 0, 0, 209, 231, 1327, 0, 1384, 1385,
	0, 0, 246, 267, 0, 1262, 1053, 1113, 0, 0,
	1063, 0, 1066, 0, 1062, 1059, 1060, 1051, 0, 457,
	458, 473, 0, 474, 0, 1265, 0, 0, 1313, 0,
	0, 1465, 1457, 1484, 1479, 1480, 1726, 1503, 1507, 0,
	0, 1195, 1197, 1110, 0, 671, 0, 0, 979, 980,
	0, 0, 0, 0, 2096, 1597, 1976, 0, 0, 1630,
	1632, 1633, 1634, 1341, 0, 0, 1141, 1208, 0, 0,
	0, 0, 0, 1157, 1187, 1188, 1110, 0, 1323, 1321,
	1166, 0, 1199, 178, 0, 1197, 0, 1119, 0, 0,
	1122, 0, 0, 155, 2384, 153, 0, 205, 1377, 205,
	0, 270, 0, 261, 259, 260, 1055, 0, 0, 1177,
	1179, 0, 1067, 1099, 1065, 470, 1263, 1296, 1197, 0,
	1195, 0, 1472, 1484, 1466, 1467, 0, 1482, 0, 325,
	325, 1099, 1195, 1053, 1109, 325, 673, 675, 2093, 2113,
	2102, -2, 2678, 2391, 0, 2113, 2113, 2088, 2089, 0,
	0, 1144, 1204, 1205, 0, 1200, 1201, 1202, 2320, 1145,
	1146, 1148, 1149, 1185, 0, 0, 1203, 201, 1099, 1116,
	0, 0, 1117, 0, 0, 158, 0, 160, 232, 1375,
	0, 1378, 0, 255, 0, 0, 1047, 0, 1176, 0,
	0, 0, 0, 1114, 1055, 1195, 0, 1099, 0, 1461,
	1471, 0, 1481, 1458, 0, 304, 305, 1110, 1099, 1726,
	0, 306, 2098, 0, 0, 2104, 2105, 2106, 2107, 2108,
	2099, 2100, 1134, 0, 1206, 0, 1207, 0, 0, 0,
	1726, 1194, 0, 1208, 183, 1120, 0, 1123, 0, 156,
	0, 0, 0, 265, 266, 1044, 1046, 0, 1178, 1056,
	0, 1058, 1053, 1064, 1099, 0, 1110, 0, 1454, 1460,
	1464, 2281, 1465, 1501, 0, 1053, 1110, 1160, 0, 2110,
	2111, 0, 0, 0, 1209, 0, 1212, 1213, 0, 1210,
	1165, 0, 1185, 0, 0, 1376, 205, 0, 0, 1057,
	1055, 1110, 1197, 1053, 1195, 1472, 0, 1726, 1053, 2109,
	2112, 2103, 1140, 1211, 1214, 1215, 1196, 1167, 0, 0,
	1379, 268, 0, 1102, 1047, 1053, 1195, 1726, 1099, 1461,
	1726, 1158, 1726, 1107, 0, 0, 1098, 1100, 1101, 1045,
	1726, 1099, 1309, 1110, 1455, 1502, 1159, 1121, 1106, 0,
	269, 1307, 1110, 1053, 0, 1053, 1726, 0, 1726, 1310,
	1107, 1308, 1124,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 589, 3, 595, 590, 3,
	600, 601, 593, 591, 605, 592, 602, 594, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 608, 3,
	581, 583, 582, 586, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 598, 3, 599, 596, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 606, 588, 607, 584,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 585, 57924, 587,
	57925, 597, 57926, 603, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1502
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1624
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1642
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1691
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1787
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1819
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1843
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1852
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1873
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1881
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1904
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1905
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1909
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1918
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1935
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1942
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1954
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1961
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1969
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1989
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1997
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2008
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2018
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2028
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2037
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2048
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2054
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2080
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2085
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2176
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2219
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2222
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2228
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2463
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2467
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2470
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2495
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2545
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2629
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2637
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2664
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2976
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3033
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3041
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3078
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3087
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3093
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3098
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3103
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3108
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3113
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3117
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3172
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3208
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3220
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3234
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3307
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3404
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3424
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3429
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3443
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3448
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "CREATE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplemented(sqllex, "create access method")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			return unimplemented(sqllex, "create cast")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3469
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplemented(sqllex, "create publication")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplemented(sqllex, "create rule")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplemented(sqllex, "create server")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3488
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3491
		{
		}
	case 408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3492
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3495
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3496
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplemented(sqllex, "drop server")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3565
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3643
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3678
		{

			sqlVAL.union.val = nil
		}
	case 468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "DELETE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3764
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3765
		{
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3791
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "DROP")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3797
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3991
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4025
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4057
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4073
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4081
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4089
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "DELETE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "INSERT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "DELETE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "INSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4170
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4178
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4203
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4293
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4308
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			return helpWith(sqllex, "GRANT")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4371
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4383
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "RESET")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "USE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4458
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4462
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4481
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4660
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4664
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4683
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4687
		{
			return unimplemented(sqllex, "set from current")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4691
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4696
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4710
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4722
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4727
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = tree.Low
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.Normal
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.High
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4907
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4921
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.str = "client_encoding"
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.str = "timezone"
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4979
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4994
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5002
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5042
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5051
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5059
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5076
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5191
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5204
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = false
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5314
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5315
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5427
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5434
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5438
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = true
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = false
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5453
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5458
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5499
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5504
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = true
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = false
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5522
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5551
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5562
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5584
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5589
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5598
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5612
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5617
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5622
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5627
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5635
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5645
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5649
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5651
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5655
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5666
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5677
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5695
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5703
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5724
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5729
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5734
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5738
		{
		}
	case 979:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5747
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5770
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5851
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5858
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5865
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5998
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6041
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6154
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6186
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6194
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6229
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6296
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6312
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{

			sqlVAL.union.val = nil
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.str = ""
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = nil
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6380
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6384
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6410
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6424
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6439
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6440
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6496
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6522
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6546
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6562
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.str = ""
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6710
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6814
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{

			sqlVAL.union.val = true
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = false
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6873
		{
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6876
		{
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6976
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6987
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7004
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7014
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7094
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7095
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7096
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7098
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7171
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7255
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7264
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7272
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7288
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7300
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7307
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7312
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7329
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7356
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7390
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.str = ""
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = true
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7424
		{

			sqlVAL.union.val = true
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = false
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7439
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7453
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7465
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7477
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7487
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7497
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = nil
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7607
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7608
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7633
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7635
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7637
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7639
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7641
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7643
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7681
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7699
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7718
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7735
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7752
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7756
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = false
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = true
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = false
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = true
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = false
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7810
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7816
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7822
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.str = ""
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.str = ""
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7889
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7895
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8120
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8126
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8138
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8144
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8158
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8164
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8223
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = true
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = false
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.Types
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8283
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8287
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8311
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8312
		{
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8316
		{
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8327
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8345
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8375
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8383
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8412
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8423
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8427
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8428
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8429
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8453
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8471
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8480
		{
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8482
		{
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8544
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8546
		{
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8550
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.str = ""
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8667
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8684
		{

		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8699
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.str = ""
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.str = ""
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.str = ""
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.str = ""
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8754
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8768
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8797
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8819
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8828
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8877
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8904
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8908
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8999
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9014
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9158
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9195
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9300
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = true
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = false
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9369
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9370
		{
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = nil
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9383
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9384
		{
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = true
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = false
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = false
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = true
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9413
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9414
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9418
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9480
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9485
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9511
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9544
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9599
		{
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9600
		{
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9603
		{
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9638
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9639
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9670
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9672
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9687
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9709
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9740
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9752
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9771
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9812
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9822
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9857
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9868
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9898
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9931
		{
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9933
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = nil
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = true
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = false
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.str = tree.AstFull
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.str = tree.AstRight
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.str = tree.AstInner
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10050
		{
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10051
		{
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.str = tree.AstHash
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.str = ""
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10120
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10125
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10143
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10149
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10155
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10165
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = true
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = false
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = true
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = false
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10214
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10227
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10235
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10236
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10254
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10256
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10264
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10277
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10284
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10293
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10333
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10345
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10346
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = types.Geography
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10395
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10403
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10437
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = nil
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = types.Int2
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = types.Int
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = types.Float4
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = types.Float
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10480
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10488
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10496
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = types.Bool
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = types.Float
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10529
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10535
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10557
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = types.String
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = true
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = false
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = types.Date
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10606
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10614
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10628
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10637
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10645
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10662
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = true
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = false
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = false
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = types.Interval
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10686
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10770
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10785
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = nil
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10815
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10875
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11024
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11211
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11233
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11341
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11349
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11450
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11476
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11500
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11534
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11545
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11546
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11561
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11570
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11636
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11761
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11802
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11822
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11837
		{
			return unimplemented(sqllex, "treat")
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11858
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11863
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11910
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.str = ""
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11999
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12012
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12080
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12109
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12185
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12300
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12433
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12525
		{
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12526
		{
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12598
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12606
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12656
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12660
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12675
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12679
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12691
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12695
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12704
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12715
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12724
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12732
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12749
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12852
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12898
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12902
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12968
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12981
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12988
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.str = ""
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13019
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
