// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12838

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1482,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	258, 388,
	-2, 0,
	-1, 74,
	240, 227,
	504, 227,
	-2, 0,
	-1, 87,
	228, 1242,
	242, 1242,
	258, 384,
	384, 384,
	394, 1012,
	430, 384,
	442, 1012,
	488, 1012,
	515, 384,
	541, 1012,
	-2, 0,
	-1, 93,
	132, 1482,
	235, 1482,
	526, 1482,
	527, 1482,
	-2, 0,
	-1, 109,
	150, 1453,
	169, 1453,
	182, 1453,
	238, 1453,
	271, 1453,
	336, 1453,
	346, 1453,
	521, 1453,
	-2, 1424,
	-1, 148,
	158, 870,
	257, 870,
	387, 837,
	447, 837,
	487, 837,
	507, 870,
	509, 837,
	-2, 0,
	-1, 150,
	4, 1484,
	21, 1484,
	22, 1484,
	23, 1484,
	24, 1484,
	25, 1484,
	26, 1484,
	27, 1484,
	29, 1484,
	30, 1484,
	36, 1484,
	41, 1484,
	42, 1484,
	44, 1484,
	45, 1484,
	46, 1484,
	47, 1484,
	48, 1484,
	49, 1484,
	50, 1484,
	51, 1484,
	53, 1484,
	54, 1484,
	55, 1484,
	56, 1484,
	58, 1484,
	59, 1484,
	60, 1484,
	61, 1484,
	62, 1484,
	63, 1484,
	64, 1484,
	68, 1484,
	69, 1484,
	70, 1484,
	71, 1484,
	73, 1484,
	74, 1484,
	75, 1484,
	79, 1484,
	80, 1484,
	81, 1484,
	82, 1484,
	83, 1484,
	84, 1484,
	85, 1484,
	88, 1484,
	89, 1484,
	90, 1484,
	91, 1484,
	92, 1484,
	94, 1484,
	96, 1484,
	97, 1484,
	98, 1484,
	99, 1484,
	100, 1484,
	101, 1484,
	103, 1484,
	104, 1484,
	105, 1484,
	107, 1484,
	108, 1484,
	109, 1484,
	117, 1484,
	118, 1484,
	119, 1484,
	120, 1484,
	121, 1484,
	123, 1484,
	124, 1484,
	125, 1484,
	127, 1484,
	128, 1484,
	129, 1484,
	131, 1484,
	132, 1484,
	133, 1484,
	135, 1484,
	136, 1484,
	137, 1484,
	140, 1484,
	141, 1484,
	142, 1484,
	144, 1484,
	145, 1484,
	147, 1484,
	148, 1484,
	149, 1484,
	151, 1484,
	152, 1484,
	153, 1484,
	154, 1484,
	155, 1484,
	156, 1484,
	157, 1484,
	158, 1484,
	159, 1484,
	160, 1484,
	161, 1484,
	162, 1484,
	163, 1484,
	164, 1484,
	165, 1484,
	166, 1484,
	168, 1484,
	174, 1484,
	175, 1484,
	176, 1484,
	177, 1484,
	181, 1484,
	183, 1484,
	184, 1484,
	188, 1484,
	189, 1484,
	190, 1484,
	191, 1484,
	192, 1484,
	193, 1484,
	194, 1484,
	195, 1484,
	196, 1484,
	197, 1484,
	198, 1484,
	199, 1484,
	200, 1484,
	202, 1484,
	203, 1484,
	205, 1484,
	206, 1484,
	208, 1484,
	209, 1484,
	210, 1484,
	211, 1484,
	212, 1484,
	213, 1484,
	214, 1484,
	215, 1484,
	216, 1484,
	218, 1484,
	219, 1484,
	221, 1484,
	222, 1484,
	223, 1484,
	224, 1484,
	228, 1484,
	229, 1484,
	230, 1484,
	231, 1484,
	232, 1484,
	235, 1484,
	236, 1484,
	237, 1484,
	239, 1484,
	241, 1484,
	242, 1484,
	244, 1484,
	246, 1484,
	247, 1484,
	248, 1484,
	250, 1484,
	254, 1484,
	255, 1484,
	256, 1484,
	257, 1484,
	258, 1484,
	259, 1484,
	261, 1484,
	262, 1484,
	263, 1484,
	265, 1484,
	266, 1484,
	268, 1484,
	269, 1484,
	272, 1484,
	276, 1484,
	277, 1484,
	278, 1484,
	281, 1484,
	282, 1484,
	283, 1484,
	284, 1484,
	286, 1484,
	287, 1484,
	288, 1484,
	289, 1484,
	290, 1484,
	291, 1484,
	292, 1484,
	293, 1484,
	294, 1484,
	295, 1484,
	296, 1484,
	297, 1484,
	298, 1484,
	299, 1484,
	300, 1484,
	301, 1484,
	302, 1484,
	303, 1484,
	304, 1484,
	305, 1484,
	306, 1484,
	307, 1484,
	309, 1484,
	311, 1484,
	312, 1484,
	313, 1484,
	314, 1484,
	315, 1484,
	316, 1484,
	317, 1484,
	318, 1484,
	319, 1484,
	320, 1484,
	321, 1484,
	322, 1484,
	324, 1484,
	326, 1484,
	328, 1484,
	329, 1484,
	331, 1484,
	332, 1484,
	333, 1484,
	334, 1484,
	335, 1484,
	338, 1484,
	341, 1484,
	342, 1484,
	343, 1484,
	344, 1484,
	347, 1484,
	348, 1484,
	349, 1484,
	351, 1484,
	353, 1484,
	354, 1484,
	355, 1484,
	356, 1484,
	357, 1484,
	358, 1484,
	359, 1484,
	360, 1484,
	361, 1484,
	362, 1484,
	363, 1484,
	364, 1484,
	366, 1484,
	367, 1484,
	368, 1484,
	369, 1484,
	370, 1484,
	371, 1484,
	372, 1484,
	373, 1484,
	374, 1484,
	375, 1484,
	376, 1484,
	377, 1484,
	378, 1484,
	379, 1484,
	380, 1484,
	382, 1484,
	383, 1484,
	385, 1484,
	386, 1484,
	387, 1484,
	388, 1484,
	389, 1484,
	390, 1484,
	391, 1484,
	392, 1484,
	393, 1484,
	394, 1484,
	395, 1484,
	396, 1484,
	398, 1484,
	400, 1484,
	401, 1484,
	402, 1484,
	407, 1484,
	409, 1484,
	410, 1484,
	411, 1484,
	412, 1484,
	413, 1484,
	414, 1484,
	415, 1484,
	416, 1484,
	417, 1484,
	419, 1484,
	420, 1484,
	421, 1484,
	423, 1484,
	424, 1484,
	425, 1484,
	426, 1484,
	427, 1484,
	428, 1484,
	430, 1484,
	431, 1484,
	432, 1484,
	433, 1484,
	434, 1484,
	435, 1484,
	436, 1484,
	437, 1484,
	438, 1484,
	439, 1484,
	440, 1484,
	442, 1484,
	443, 1484,
	444, 1484,
	445, 1484,
	446, 1484,
	447, 1484,
	449, 1484,
	450, 1484,
	451, 1484,
	452, 1484,
	453, 1484,
	454, 1484,
	456, 1484,
	457, 1484,
	458, 1484,
	459, 1484,
	460, 1484,
	461, 1484,
	462, 1484,
	464, 1484,
	466, 1484,
	467, 1484,
	468, 1484,
	469, 1484,
	470, 1484,
	471, 1484,
	472, 1484,
	473, 1484,
	474, 1484,
	475, 1484,
	476, 1484,
	477, 1484,
	478, 1484,
	479, 1484,
	480, 1484,
	481, 1484,
	483, 1484,
	484, 1484,
	486, 1484,
	487, 1484,
	489, 1484,
	490, 1484,
	491, 1484,
	492, 1484,
	493, 1484,
	494, 1484,
	495, 1484,
	496, 1484,
	497, 1484,
	499, 1484,
	500, 1484,
	501, 1484,
	502, 1484,
	503, 1484,
	505, 1484,
	507, 1484,
	508, 1484,
	509, 1484,
	510, 1484,
	511, 1484,
	512, 1484,
	514, 1484,
	515, 1484,
	516, 1484,
	517, 1484,
	519, 1484,
	520, 1484,
	523, 1484,
	524, 1484,
	525, 1484,
	526, 1484,
	527, 1484,
	528, 1484,
	529, 1484,
	531, 1484,
	534, 1484,
	535, 1484,
	536, 1484,
	537, 1484,
	538, 1484,
	539, 1484,
	541, 1484,
	542, 1484,
	543, 1484,
	544, 1484,
	550, 1484,
	551, 1484,
	552, 1484,
	553, 1484,
	554, 1484,
	555, 1484,
	-2, 0,
	-1, 151,
	1, 1339,
	130, 1339,
	246, 1339,
	325, 1339,
	382, 1339,
	391, 1339,
	559, 1339,
	583, 1339,
	-2, 0,
	-1, 153,
	1, 1339,
	583, 1339,
	-2, 0,
	-1, 154,
	1, 1339,
	583, 1339,
	-2, 0,
	-1, 155,
	1, 1339,
	504, 1339,
	583, 1339,
	-2, 0,
	-1, 183,
	150, 1452,
	169, 1452,
	182, 1452,
	238, 1452,
	271, 1452,
	336, 1452,
	346, 1452,
	521, 1452,
	-2, 1427,
	-1, 229,
	4, 1491,
	5, 1491,
	6, 1491,
	7, 1491,
	8, 1491,
	9, 1491,
	10, 1491,
	21, 1491,
	22, 1491,
	23, 1491,
	24, 1491,
	25, 1491,
	26, 1491,
	27, 1491,
	29, 1491,
	30, 1491,
	36, 1491,
	37, 1491,
	41, 1491,
	42, 1491,
	43, 1491,
	44, 1491,
	45, 1491,
	46, 1491,
	47, 1491,
	48, 1491,
	49, 1491,
	50, 1491,
	51, 1491,
	53, 1491,
	54, 1491,
	55, 1491,
	56, 1491,
	58, 1491,
	59, 1491,
	60, 1491,
	61, 1491,
	62, 1491,
	63, 1491,
	64, 1491,
	65, 1491,
	66, 1491,
	67, 1491,
	68, 1491,
	69, 1491,
	70, 1491,
	71, 1491,
	73, 1491,
	74, 1491,
	75, 1491,
	77, 1491,
	79, 1491,
	80, 1491,
	81, 1491,
	82, 1491,
	83, 1491,
	84, 1491,
	85, 1491,
	88, 1491,
	89, 1491,
	90, 1491,
	91, 1491,
	92, 1491,
	94, 1491,
	96, 1491,
	97, 1491,
	98, 1491,
	99, 1491,
	100, 1491,
	101, 1491,
	103, 1491,
	104, 1491,
	105, 1491,
	106, 1491,
	107, 1491,
	108, 1491,
	109, 1491,
	110, 1491,
	111, 1491,
	112, 1491,
	113, 1491,
	114, 1491,
	115, 1491,
	116, 1491,
	117, 1491,
	118, 1491,
	119, 1491,
	120, 1491,
	121, 1491,
	122, 1491,
	123, 1491,
	124, 1491,
	125, 1491,
	126, 1491,
	127, 1491,
	128, 1491,
	129, 1491,
	131, 1491,
	132, 1491,
	133, 1491,
	135, 1491,
	136, 1491,
	137, 1491,
	140, 1491,
	141, 1491,
	142, 1491,
	144, 1491,
	145, 1491,
	147, 1491,
	148, 1491,
	149, 1491,
	151, 1491,
	152, 1491,
	153, 1491,
	154, 1491,
	155, 1491,
	156, 1491,
	157, 1491,
	158, 1491,
	159, 1491,
	160, 1491,
	161, 1491,
	162, 1491,
	163, 1491,
	164, 1491,
	165, 1491,
	166, 1491,
	167, 1491,
	168, 1491,
	174, 1491,
	175, 1491,
	176, 1491,
	177, 1491,
	181, 1491,
	183, 1491,
	184, 1491,
	187, 1491,
	188, 1491,
	189, 1491,
	190, 1491,
	191, 1491,
	192, 1491,
	193, 1491,
	194, 1491,
	195, 1491,
	196, 1491,
	197, 1491,
	198, 1491,
	199, 1491,
	200, 1491,
	202, 1491,
	203, 1491,
	205, 1491,
	206, 1491,
	208, 1491,
	209, 1491,
	210, 1491,
	211, 1491,
	212, 1491,
	213, 1491,
	214, 1491,
	215, 1491,
	216, 1491,
	217, 1491,
	218, 1491,
	219, 1491,
	221, 1491,
	222, 1491,
	223, 1491,
	224, 1491,
	228, 1491,
	229, 1491,
	230, 1491,
	231, 1491,
	232, 1491,
	234, 1491,
	235, 1491,
	236, 1491,
	237, 1491,
	239, 1491,
	241, 1491,
	242, 1491,
	243, 1491,
	244, 1491,
	245, 1491,
	246, 1491,
	247, 1491,
	248, 1491,
	249, 1491,
	250, 1491,
	254, 1491,
	255, 1491,
	256, 1491,
	257, 1491,
	258, 1491,
	259, 1491,
	261, 1491,
	262, 1491,
	263, 1491,
	265, 1491,
	266, 1491,
	267, 1491,
	268, 1491,
	269, 1491,
	270, 1491,
	272, 1491,
	276, 1491,
	277, 1491,
	278, 1491,
	279, 1491,
	280, 1491,
	281, 1491,
	282, 1491,
	283, 1491,
	284, 1491,
	286, 1491,
	287, 1491,
	288, 1491,
	289, 1491,
	290, 1491,
	291, 1491,
	292, 1491,
	293, 1491,
	294, 1491,
	295, 1491,
	296, 1491,
	297, 1491,
	298, 1491,
	299, 1491,
	300, 1491,
	301, 1491,
	302, 1491,
	303, 1491,
	304, 1491,
	305, 1491,
	306, 1491,
	307, 1491,
	309, 1491,
	310, 1491,
	311, 1491,
	312, 1491,
	313, 1491,
	314, 1491,
	315, 1491,
	316, 1491,
	317, 1491,
	318, 1491,
	319, 1491,
	320, 1491,
	321, 1491,
	322, 1491,
	323, 1491,
	324, 1491,
	325, 1491,
	326, 1491,
	327, 1491,
	328, 1491,
	329, 1491,
	330, 1491,
	331, 1491,
	332, 1491,
	333, 1491,
	334, 1491,
	335, 1491,
	338, 1491,
	342, 1491,
	343, 1491,
	344, 1491,
	347, 1491,
	348, 1491,
	349, 1491,
	350, 1491,
	351, 1491,
	352, 1491,
	353, 1491,
	354, 1491,
	355, 1491,
	356, 1491,
	357, 1491,
	358, 1491,
	359, 1491,
	360, 1491,
	361, 1491,
	362, 1491,
	363, 1491,
	364, 1491,
	366, 1491,
	367, 1491,
	368, 1491,
	369, 1491,
	370, 1491,
	371, 1491,
	372, 1491,
	373, 1491,
	374, 1491,
	375, 1491,
	376, 1491,
	377, 1491,
	378, 1491,
	379, 1491,
	380, 1491,
	382, 1491,
	383, 1491,
	385, 1491,
	386, 1491,
	387, 1491,
	388, 1491,
	389, 1491,
	390, 1491,
	391, 1491,
	392, 1491,
	393, 1491,
	394, 1491,
	395, 1491,
	396, 1491,
	398, 1491,
	400, 1491,
	401, 1491,
	402, 1491,
	407, 1491,
	409, 1491,
	410, 1491,
	411, 1491,
	412, 1491,
	413, 1491,
	414, 1491,
	415, 1491,
	416, 1491,
	417, 1491,
	419, 1491,
	420, 1491,
	421, 1491,
	422, 1491,
	423, 1491,
	424, 1491,
	425, 1491,
	426, 1491,
	427, 1491,
	428, 1491,
	430, 1491,
	431, 1491,
	432, 1491,
	433, 1491,
	434, 1491,
	435, 1491,
	436, 1491,
	437, 1491,
	438, 1491,
	439, 1491,
	440, 1491,
	442, 1491,
	443, 1491,
	444, 1491,
	445, 1491,
	446, 1491,
	447, 1491,
	448, 1491,
	449, 1491,
	450, 1491,
	451, 1491,
	452, 1491,
	453, 1491,
	454, 1491,
	455, 1491,
	456, 1491,
	457, 1491,
	458, 1491,
	459, 1491,
	460, 1491,
	461, 1491,
	462, 1491,
	464, 1491,
	466, 1491,
	467, 1491,
	468, 1491,
	469, 1491,
	470, 1491,
	471, 1491,
	472, 1491,
	473, 1491,
	474, 1491,
	475, 1491,
	476, 1491,
	477, 1491,
	478, 1491,
	479, 1491,
	480, 1491,
	481, 1491,
	483, 1491,
	484, 1491,
	485, 1491,
	486, 1491,
	487, 1491,
	489, 1491,
	490, 1491,
	491, 1491,
	492, 1491,
	493, 1491,
	494, 1491,
	495, 1491,
	496, 1491,
	497, 1491,
	499, 1491,
	500, 1491,
	501, 1491,
	502, 1491,
	503, 1491,
	505, 1491,
	507, 1491,
	508, 1491,
	509, 1491,
	510, 1491,
	511, 1491,
	512, 1491,
	513, 1491,
	514, 1491,
	515, 1491,
	516, 1491,
	517, 1491,
	519, 1491,
	520, 1491,
	522, 1491,
	523, 1491,
	524, 1491,
	525, 1491,
	526, 1491,
	527, 1491,
	528, 1491,
	529, 1491,
	530, 1491,
	531, 1491,
	534, 1491,
	535, 1491,
	536, 1491,
	537, 1491,
	538, 1491,
	539, 1491,
	541, 1491,
	542, 1491,
	543, 1491,
	544, 1491,
	550, 1491,
	551, 1491,
	552, 1491,
	553, 1491,
	554, 1491,
	555, 1491,
	556, 1491,
	564, 1491,
	571, 1491,
	572, 1491,
	573, 1491,
	580, 1491,
	584, 1491,
	-2, 0,
	-1, 723,
	4, 1240,
	21, 1240,
	22, 1240,
	23, 1240,
	24, 1240,
	25, 1240,
	26, 1240,
	27, 1240,
	29, 1240,
	30, 1240,
	36, 1240,
	41, 1240,
	42, 1240,
	44, 1240,
	45, 1240,
	46, 1240,
	47, 1240,
	48, 1240,
	49, 1240,
	50, 1240,
	51, 1240,
	53, 1240,
	54, 1240,
	55, 1240,
	56, 1240,
	58, 1240,
	59, 1240,
	60, 1240,
	61, 1240,
	62, 1240,
	63, 1240,
	64, 1240,
	68, 1240,
	69, 1240,
	70, 1240,
	71, 1240,
	73, 1240,
	74, 1240,
	75, 1240,
	79, 1240,
	80, 1240,
	81, 1240,
	82, 1240,
	83, 1240,
	84, 1240,
	85, 1240,
	88, 1240,
	89, 1240,
	90, 1240,
	91, 1240,
	92, 1240,
	94, 1240,
	96, 1240,
	97, 1240,
	98, 1240,
	99, 1240,
	100, 1240,
	101, 1240,
	103, 1240,
	104, 1240,
	105, 1240,
	107, 1240,
	108, 1240,
	109, 1240,
	117, 1240,
	118, 1240,
	119, 1240,
	120, 1240,
	121, 1240,
	123, 1240,
	124, 1240,
	125, 1240,
	127, 1240,
	128, 1240,
	129, 1240,
	131, 1240,
	132, 1240,
	133, 1240,
	135, 1240,
	136, 1240,
	137, 1240,
	140, 1240,
	141, 1240,
	142, 1240,
	144, 1240,
	145, 1240,
	147, 1240,
	148, 1240,
	149, 1240,
	151, 1240,
	152, 1240,
	153, 1240,
	154, 1240,
	155, 1240,
	156, 1240,
	157, 1240,
	158, 1240,
	159, 1240,
	160, 1240,
	161, 1240,
	162, 1240,
	163, 1240,
	164, 1240,
	165, 1240,
	166, 1240,
	168, 1240,
	174, 1240,
	175, 1240,
	176, 1240,
	177, 1240,
	181, 1240,
	183, 1240,
	184, 1240,
	188, 1240,
	189, 1240,
	190, 1240,
	191, 1240,
	192, 1240,
	193, 1240,
	194, 1240,
	195, 1240,
	196, 1240,
	197, 1240,
	198, 1240,
	199, 1240,
	200, 1240,
	202, 1240,
	203, 1240,
	205, 1240,
	206, 1240,
	208, 1240,
	209, 1240,
	210, 1240,
	211, 1240,
	212, 1240,
	213, 1240,
	214, 1240,
	215, 1240,
	216, 1240,
	218, 1240,
	219, 1240,
	221, 1240,
	222, 1240,
	223, 1240,
	224, 1240,
	228, 1240,
	229, 1240,
	230, 1240,
	231, 1240,
	232, 1240,
	235, 1240,
	236, 1240,
	237, 1240,
	239, 1240,
	241, 1240,
	242, 1240,
	244, 1240,
	246, 1240,
	247, 1240,
	248, 1240,
	250, 1240,
	254, 1240,
	255, 1240,
	256, 1240,
	257, 1240,
	258, 1240,
	259, 1240,
	261, 1240,
	262, 1240,
	263, 1240,
	265, 1240,
	266, 1240,
	268, 1240,
	269, 1240,
	272, 1240,
	276, 1240,
	277, 1240,
	278, 1240,
	281, 1240,
	282, 1240,
	283, 1240,
	284, 1240,
	286, 1240,
	287, 1240,
	288, 1240,
	289, 1240,
	290, 1240,
	291, 1240,
	292, 1240,
	293, 1240,
	294, 1240,
	295, 1240,
	296, 1240,
	297, 1240,
	298, 1240,
	299, 1240,
	300, 1240,
	301, 1240,
	302, 1240,
	303, 1240,
	304, 1240,
	305, 1240,
	306, 1240,
	307, 1240,
	309, 1240,
	311, 1240,
	312, 1240,
	313, 1240,
	314, 1240,
	315, 1240,
	316, 1240,
	317, 1240,
	318, 1240,
	319, 1240,
	320, 1240,
	321, 1240,
	322, 1240,
	324, 1240,
	326, 1240,
	328, 1240,
	329, 1240,
	331, 1240,
	332, 1240,
	333, 1240,
	334, 1240,
	335, 1240,
	338, 1240,
	342, 1240,
	343, 1240,
	344, 1240,
	347, 1240,
	348, 1240,
	349, 1240,
	351, 1240,
	353, 1240,
	354, 1240,
	355, 1240,
	356, 1240,
	357, 1240,
	358, 1240,
	359, 1240,
	360, 1240,
	361, 1240,
	362, 1240,
	363, 1240,
	364, 1240,
	366, 1240,
	367, 1240,
	368, 1240,
	369, 1240,
	370, 1240,
	371, 1240,
	372, 1240,
	373, 1240,
	374, 1240,
	375, 1240,
	376, 1240,
	377, 1240,
	378, 1240,
	379, 1240,
	380, 1240,
	382, 1240,
	383, 1240,
	385, 1240,
	386, 1240,
	387, 1240,
	388, 1240,
	389, 1240,
	390, 1240,
	391, 1240,
	392, 1240,
	393, 1240,
	394, 1240,
	395, 1240,
	396, 1240,
	398, 1240,
	400, 1240,
	401, 1240,
	402, 1240,
	407, 1240,
	409, 1240,
	410, 1240,
	411, 1240,
	412, 1240,
	413, 1240,
	414, 1240,
	415, 1240,
	416, 1240,
	417, 1240,
	419, 1240,
	420, 1240,
	421, 1240,
	423, 1240,
	424, 1240,
	425, 1240,
	426, 1240,
	427, 1240,
	428, 1240,
	430, 1240,
	431, 1240,
	432, 1240,
	433, 1240,
	434, 1240,
	435, 1240,
	436, 1240,
	437, 1240,
	438, 1240,
	439, 1240,
	440, 1240,
	442, 1240,
	443, 1240,
	444, 1240,
	445, 1240,
	446, 1240,
	447, 1240,
	449, 1240,
	450, 1240,
	451, 1240,
	452, 1240,
	453, 1240,
	454, 1240,
	456, 1240,
	457, 1240,
	458, 1240,
	459, 1240,
	460, 1240,
	461, 1240,
	462, 1240,
	464, 1240,
	466, 1240,
	467, 1240,
	468, 1240,
	469, 1240,
	470, 1240,
	471, 1240,
	472, 1240,
	473, 1240,
	474, 1240,
	475, 1240,
	476, 1240,
	477, 1240,
	478, 1240,
	479, 1240,
	480, 1240,
	481, 1240,
	483, 1240,
	484, 1240,
	486, 1240,
	487, 1240,
	489, 1240,
	490, 1240,
	491, 1240,
	492, 1240,
	493, 1240,
	494, 1240,
	495, 1240,
	496, 1240,
	497, 1240,
	499, 1240,
	500, 1240,
	501, 1240,
	502, 1240,
	503, 1240,
	505, 1240,
	507, 1240,
	508, 1240,
	509, 1240,
	510, 1240,
	511, 1240,
	512, 1240,
	514, 1240,
	515, 1240,
	516, 1240,
	517, 1240,
	519, 1240,
	520, 1240,
	523, 1240,
	524, 1240,
	525, 1240,
	526, 1240,
	527, 1240,
	528, 1240,
	529, 1240,
	531, 1240,
	534, 1240,
	535, 1240,
	536, 1240,
	537, 1240,
	538, 1240,
	539, 1240,
	541, 1240,
	542, 1240,
	543, 1240,
	544, 1240,
	550, 1240,
	551, 1240,
	552, 1240,
	553, 1240,
	554, 1240,
	555, 1240,
	-2, 0,
	-1, 742,
	186, 2248,
	504, 2248,
	563, 2248,
	582, 2248,
	-2, 0,
	-1, 743,
	186, 2353,
	504, 2353,
	563, 2353,
	582, 2353,
	-2, 0,
	-1, 744,
	186, 2235,
	504, 2235,
	563, 2235,
	582, 2235,
	-2, 0,
	-1, 746,
	186, 2483,
	504, 2483,
	563, 2483,
	582, 2483,
	-2, 0,
	-1, 748,
	186, 2523,
	504, 2523,
	563, 2523,
	582, 2523,
	-2, 0,
	-1, 755,
	186, 2380,
	504, 2380,
	563, 2380,
	582, 2380,
	-2, 672,
	-1, 788,
	582, 2184,
	585, 2184,
	-2, 943,
	-1, 789,
	582, 2186,
	585, 2186,
	-2, 944,
	-1, 790,
	582, 2185,
	585, 2185,
	-2, 945,
	-1, 791,
	585, 2111,
	-2, 946,
	-1, 814,
	182, 241,
	-2, 0,
	-1, 838,
	43, 2158,
	-2, 0,
	-1, 839,
	541, 1218,
	-2, 1013,
	-1, 855,
	4, 1620,
	21, 1620,
	22, 1620,
	23, 1620,
	24, 1620,
	25, 1620,
	26, 1620,
	27, 1620,
	29, 1620,
	30, 1620,
	36, 1620,
	41, 1620,
	42, 1620,
	44, 1620,
	45, 1620,
	46, 1620,
	47, 1620,
	48, 1620,
	49, 1620,
	50, 1620,
	51, 1620,
	53, 1620,
	54, 1620,
	55, 1620,
	56, 1620,
	58, 1620,
	59, 1620,
	60, 1620,
	61, 1620,
	62, 1620,
	63, 1620,
	64, 1620,
	68, 1620,
	69, 1620,
	70, 1620,
	71, 1620,
	73, 1620,
	74, 1620,
	75, 1620,
	79, 1620,
	80, 1620,
	81, 1620,
	82, 1620,
	83, 1620,
	84, 1620,
	85, 1620,
	88, 1620,
	89, 1620,
	90, 1620,
	91, 1620,
	92, 1620,
	94, 1620,
	96, 1620,
	97, 1620,
	98, 1620,
	99, 1620,
	100, 1620,
	101, 1620,
	103, 1620,
	104, 1620,
	105, 1620,
	107, 1620,
	108, 1620,
	109, 1620,
	117, 1620,
	118, 1620,
	119, 1620,
	120, 1620,
	121, 1620,
	123, 1620,
	124, 1620,
	125, 1620,
	127, 1620,
	128, 1620,
	129, 1620,
	131, 1620,
	132, 1620,
	133, 1620,
	135, 1620,
	136, 1620,
	137, 1620,
	140, 1620,
	141, 1620,
	142, 1620,
	144, 1620,
	145, 1620,
	147, 1620,
	148, 1620,
	149, 1620,
	151, 1620,
	152, 1620,
	153, 1620,
	154, 1620,
	155, 1620,
	156, 1620,
	157, 1620,
	158, 1620,
	159, 1620,
	160, 1620,
	161, 1620,
	162, 1620,
	163, 1620,
	164, 1620,
	165, 1620,
	166, 1620,
	168, 1620,
	174, 1620,
	175, 1620,
	176, 1620,
	177, 1620,
	181, 1620,
	183, 1620,
	184, 1620,
	188, 1620,
	189, 1620,
	190, 1620,
	191, 1620,
	192, 1620,
	193, 1620,
	194, 1620,
	195, 1620,
	196, 1620,
	197, 1620,
	198, 1620,
	199, 1620,
	200, 1620,
	202, 1620,
	203, 1620,
	205, 1620,
	206, 1620,
	208, 1620,
	209, 1620,
	210, 1620,
	211, 1620,
	212, 1620,
	213, 1620,
	214, 1620,
	215, 1620,
	216, 1620,
	218, 1620,
	219, 1620,
	221, 1620,
	222, 1620,
	223, 1620,
	224, 1620,
	228, 1620,
	229, 1620,
	230, 1620,
	231, 1620,
	232, 1620,
	235, 1620,
	236, 1620,
	237, 1620,
	239, 1620,
	241, 1620,
	242, 1620,
	244, 1620,
	246, 1620,
	247, 1620,
	248, 1620,
	250, 1620,
	254, 1620,
	255, 1620,
	256, 1620,
	257, 1620,
	258, 1620,
	259, 1620,
	261, 1620,
	262, 1620,
	263, 1620,
	265, 1620,
	266, 1620,
	268, 1620,
	269, 1620,
	272, 1620,
	276, 1620,
	277, 1620,
	278, 1620,
	281, 1620,
	282, 1620,
	283, 1620,
	284, 1620,
	286, 1620,
	287, 1620,
	288, 1620,
	289, 1620,
	290, 1620,
	291, 1620,
	292, 1620,
	293, 1620,
	294, 1620,
	295, 1620,
	296, 1620,
	297, 1620,
	298, 1620,
	299, 1620,
	300, 1620,
	301, 1620,
	302, 1620,
	303, 1620,
	304, 1620,
	305, 1620,
	306, 1620,
	307, 1620,
	309, 1620,
	311, 1620,
	312, 1620,
	313, 1620,
	314, 1620,
	315, 1620,
	316, 1620,
	317, 1620,
	318, 1620,
	319, 1620,
	320, 1620,
	321, 1620,
	322, 1620,
	324, 1620,
	326, 1620,
	328, 1620,
	329, 1620,
	331, 1620,
	332, 1620,
	333, 1620,
	334, 1620,
	335, 1620,
	338, 1620,
	342, 1620,
	343, 1620,
	344, 1620,
	347, 1620,
	348, 1620,
	349, 1620,
	351, 1620,
	353, 1620,
	354, 1620,
	355, 1620,
	356, 1620,
	357, 1620,
	358, 1620,
	359, 1620,
	360, 1620,
	361, 1620,
	362, 1620,
	363, 1620,
	364, 1620,
	366, 1620,
	367, 1620,
	368, 1620,
	369, 1620,
	370, 1620,
	371, 1620,
	372, 1620,
	373, 1620,
	374, 1620,
	375, 1620,
	376, 1620,
	377, 1620,
	378, 1620,
	379, 1620,
	380, 1620,
	382, 1620,
	383, 1620,
	385, 1620,
	386, 1620,
	387, 1620,
	388, 1620,
	389, 1620,
	390, 1620,
	391, 1620,
	392, 1620,
	393, 1620,
	394, 1620,
	395, 1620,
	396, 1620,
	398, 1620,
	400, 1620,
	401, 1620,
	402, 1620,
	407, 1620,
	409, 1620,
	410, 1620,
	411, 1620,
	412, 1620,
	413, 1620,
	414, 1620,
	415, 1620,
	416, 1620,
	417, 1620,
	419, 1620,
	420, 1620,
	421, 1620,
	423, 1620,
	424, 1620,
	425, 1620,
	426, 1620,
	427, 1620,
	428, 1620,
	430, 1620,
	431, 1620,
	432, 1620,
	433, 1620,
	434, 1620,
	435, 1620,
	436, 1620,
	437, 1620,
	438, 1620,
	439, 1620,
	440, 1620,
	442, 1620,
	443, 1620,
	444, 1620,
	445, 1620,
	446, 1620,
	447, 1620,
	449, 1620,
	450, 1620,
	451, 1620,
	452, 1620,
	453, 1620,
	454, 1620,
	456, 1620,
	457, 1620,
	458, 1620,
	459, 1620,
	460, 1620,
	461, 1620,
	462, 1620,
	464, 1620,
	466, 1620,
	467, 1620,
	468, 1620,
	469, 1620,
	470, 1620,
	471, 1620,
	472, 1620,
	473, 1620,
	474, 1620,
	475, 1620,
	476, 1620,
	477, 1620,
	478, 1620,
	479, 1620,
	480, 1620,
	481, 1620,
	483, 1620,
	484, 1620,
	486, 1620,
	487, 1620,
	489, 1620,
	490, 1620,
	491, 1620,
	492, 1620,
	493, 1620,
	494, 1620,
	495, 1620,
	496, 1620,
	497, 1620,
	499, 1620,
	500, 1620,
	501, 1620,
	502, 1620,
	503, 1620,
	505, 1620,
	507, 1620,
	508, 1620,
	509, 1620,
	510, 1620,
	511, 1620,
	512, 1620,
	514, 1620,
	515, 1620,
	516, 1620,
	517, 1620,
	519, 1620,
	520, 1620,
	523, 1620,
	524, 1620,
	525, 1620,
	526, 1620,
	527, 1620,
	528, 1620,
	529, 1620,
	531, 1620,
	534, 1620,
	535, 1620,
	536, 1620,
	537, 1620,
	538, 1620,
	539, 1620,
	541, 1620,
	542, 1620,
	543, 1620,
	544, 1620,
	550, 1620,
	551, 1620,
	552, 1620,
	553, 1620,
	554, 1620,
	555, 1620,
	-2, 0,
	-1, 863,
	258, 388,
	-2, 0,
	-1, 934,
	387, 838,
	447, 838,
	487, 838,
	509, 838,
	-2, 0,
	-1, 935,
	387, 837,
	447, 837,
	487, 837,
	509, 837,
	-2, 777,
	-1, 939,
	1, 884,
	579, 884,
	581, 884,
	583, 884,
	-2, 0,
	-1, 940,
	1, 812,
	579, 812,
	581, 812,
	583, 812,
	-2, 0,
	-1, 941,
	1, 816,
	579, 816,
	581, 816,
	583, 816,
	-2, 0,
	-1, 942,
	1, 942,
	182, 942,
	579, 942,
	581, 942,
	583, 942,
	-2, 0,
	-1, 950,
	1, 843,
	579, 843,
	581, 843,
	583, 843,
	-2, 0,
	-1, 956,
	1, 884,
	579, 884,
	581, 884,
	583, 884,
	-2, 0,
	-1, 957,
	1, 886,
	579, 886,
	581, 886,
	583, 886,
	-2, 0,
	-1, 958,
	1, 889,
	579, 889,
	581, 889,
	583, 889,
	-2, 0,
	-1, 964,
	1, 907,
	579, 907,
	581, 907,
	583, 907,
	-2, 0,
	-1, 965,
	1, 909,
	579, 909,
	581, 909,
	583, 909,
	-2, 0,
	-1, 970,
	1, 937,
	579, 937,
	581, 937,
	583, 937,
	-2, 0,
	-1, 1016,
	169, 1495,
	182, 1495,
	271, 1495,
	336, 1495,
	-2, 1431,
	-1, 1031,
	169, 1494,
	182, 1494,
	271, 1494,
	336, 1494,
	-2, 1428,
	-1, 1057,
	582, 2183,
	-2, 680,
	-1, 1085,
	5, 2175,
	580, 2173,
	-2, 2164,
	-1, 1093,
	5, 2196,
	580, 2193,
	-2, 2184,
	-1, 1094,
	5, 2197,
	580, 2194,
	-2, 2185,
	-1, 1102,
	582, 2181,
	-2, 2163,
	-1, 1103,
	580, 2605,
	-2, 2182,
	-1, 1126,
	580, 2604,
	-2, 2198,
	-1, 1127,
	5, 1695,
	-2, 2575,
	-1, 1128,
	5, 1696,
	-2, 2576,
	-1, 1129,
	5, 1697,
	-2, 2590,
	-1, 1130,
	5, 1698,
	-2, 2554,
	-1, 1131,
	5, 1699,
	-2, 2588,
	-1, 1132,
	5, 1707,
	-2, 2567,
	-1, 1133,
	5, 1694,
	-2, 2563,
	-1, 1134,
	5, 1694,
	-2, 2562,
	-1, 1135,
	5, 1694,
	-2, 2581,
	-1, 1136,
	5, 1705,
	-2, 2556,
	-1, 1137,
	5, 1710,
	-2, 2555,
	-1, 1138,
	5, 1712,
	-2, 2600,
	-1, 1141,
	5, 1734,
	-2, 2593,
	-1, 1142,
	5, 1726,
	-2, 2594,
	-1, 1143,
	5, 1734,
	-2, 2595,
	-1, 1144,
	5, 1730,
	-2, 2596,
	-1, 1145,
	5, 1680,
	-2, 2568,
	-1, 1146,
	5, 1681,
	-2, 2569,
	-1, 1147,
	5, 1682,
	-2, 2557,
	-1, 1175,
	5, 1717,
	-2, 2601,
	-1, 1176,
	5, 1718,
	-2, 2591,
	-1, 1177,
	5, 1719,
	542, 1719,
	-2, 2558,
	-1, 1178,
	5, 1720,
	542, 1720,
	-2, 2559,
	-1, 1215,
	580, 2193,
	-2, 2184,
	-1, 1216,
	580, 2194,
	-2, 2185,
	-1, 1316,
	186, 2523,
	504, 2523,
	563, 2523,
	582, 2523,
	-2, 0,
	-1, 1319,
	1, 658,
	583, 658,
	-2, 1347,
	-1, 1447,
	355, 2159,
	409, 2159,
	449, 2159,
	573, 2159,
	-2, 2149,
	-1, 1458,
	584, 2159,
	-2, 2160,
	-1, 1467,
	1, 1215,
	579, 1215,
	581, 1215,
	583, 1215,
	-2, 1480,
	-1, 1515,
	394, 1012,
	541, 1012,
	-2, 383,
	-1, 1532,
	43, 2157,
	-2, 978,
	-1, 1539,
	1, 1215,
	579, 1215,
	581, 1215,
	583, 1215,
	-2, 1480,
	-1, 1547,
	4, 1240,
	21, 1240,
	22, 1240,
	23, 1240,
	24, 1240,
	25, 1240,
	26, 1240,
	27, 1240,
	29, 1240,
	30, 1240,
	36, 1240,
	41, 1240,
	42, 1240,
	44, 1240,
	45, 1240,
	46, 1240,
	47, 1240,
	48, 1240,
	49, 1240,
	50, 1240,
	51, 1240,
	53, 1240,
	54, 1240,
	55, 1240,
	56, 1240,
	58, 1240,
	59, 1240,
	60, 1240,
	61, 1240,
	62, 1240,
	63, 1240,
	64, 1240,
	68, 1240,
	69, 1240,
	70, 1240,
	71, 1240,
	73, 1240,
	74, 1240,
	75, 1240,
	79, 1240,
	80, 1240,
	81, 1240,
	82, 1240,
	83, 1240,
	84, 1240,
	85, 1240,
	88, 1240,
	89, 1240,
	90, 1240,
	91, 1240,
	92, 1240,
	94, 1240,
	96, 1240,
	97, 1240,
	98, 1240,
	99, 1240,
	100, 1240,
	101, 1240,
	103, 1240,
	104, 1240,
	105, 1240,
	107, 1240,
	108, 1240,
	109, 1240,
	117, 1240,
	118, 1240,
	119, 1240,
	120, 1240,
	121, 1240,
	123, 1240,
	124, 1240,
	125, 1240,
	127, 1240,
	128, 1240,
	129, 1240,
	131, 1240,
	132, 1240,
	133, 1240,
	135, 1240,
	136, 1240,
	137, 1240,
	140, 1240,
	141, 1240,
	142, 1240,
	144, 1240,
	145, 1240,
	147, 1240,
	148, 1240,
	149, 1240,
	151, 1240,
	152, 1240,
	153, 1240,
	154, 1240,
	155, 1240,
	156, 1240,
	157, 1240,
	158, 1240,
	159, 1240,
	160, 1240,
	161, 1240,
	162, 1240,
	163, 1240,
	164, 1240,
	165, 1240,
	166, 1240,
	174, 1240,
	175, 1240,
	176, 1240,
	177, 1240,
	181, 1240,
	183, 1240,
	184, 1240,
	188, 1240,
	189, 1240,
	190, 1240,
	191, 1240,
	192, 1240,
	193, 1240,
	194, 1240,
	195, 1240,
	196, 1240,
	197, 1240,
	198, 1240,
	199, 1240,
	200, 1240,
	202, 1240,
	203, 1240,
	205, 1240,
	206, 1240,
	208, 1240,
	209, 1240,
	210, 1240,
	211, 1240,
	212, 1240,
	213, 1240,
	214, 1240,
	215, 1240,
	216, 1240,
	218, 1240,
	219, 1240,
	221, 1240,
	222, 1240,
	223, 1240,
	224, 1240,
	229, 1240,
	230, 1240,
	231, 1240,
	232, 1240,
	235, 1240,
	236, 1240,
	237, 1240,
	239, 1240,
	241, 1240,
	242, 1240,
	244, 1240,
	246, 1240,
	247, 1240,
	248, 1240,
	250, 1240,
	254, 1240,
	255, 1240,
	256, 1240,
	257, 1240,
	258, 1240,
	259, 1240,
	261, 1240,
	262, 1240,
	263, 1240,
	265, 1240,
	266, 1240,
	268, 1240,
	269, 1240,
	272, 1240,
	276, 1240,
	277, 1240,
	278, 1240,
	281, 1240,
	282, 1240,
	283, 1240,
	284, 1240,
	286, 1240,
	287, 1240,
	288, 1240,
	289, 1240,
	290, 1240,
	291, 1240,
	292, 1240,
	293, 1240,
	294, 1240,
	295, 1240,
	296, 1240,
	297, 1240,
	298, 1240,
	299, 1240,
	300, 1240,
	301, 1240,
	302, 1240,
	303, 1240,
	304, 1240,
	305, 1240,
	306, 1240,
	307, 1240,
	309, 1240,
	311, 1240,
	312, 1240,
	313, 1240,
	314, 1240,
	315, 1240,
	316, 1240,
	317, 1240,
	318, 1240,
	319, 1240,
	320, 1240,
	321, 1240,
	322, 1240,
	324, 1240,
	328, 1240,
	329, 1240,
	331, 1240,
	332, 1240,
	333, 1240,
	334, 1240,
	335, 1240,
	338, 1240,
	340, 1240,
	342, 1240,
	343, 1240,
	344, 1240,
	347, 1240,
	348, 1240,
	349, 1240,
	351, 1240,
	353, 1240,
	354, 1240,
	355, 1240,
	356, 1240,
	357, 1240,
	358, 1240,
	359, 1240,
	360, 1240,
	361, 1240,
	362, 1240,
	363, 1240,
	364, 1240,
	366, 1240,
	367, 1240,
	368, 1240,
	369, 1240,
	370, 1240,
	371, 1240,
	372, 1240,
	373, 1240,
	374, 1240,
	375, 1240,
	376, 1240,
	377, 1240,
	378, 1240,
	379, 1240,
	380, 1240,
	382, 1240,
	383, 1240,
	385, 1240,
	386, 1240,
	387, 1240,
	388, 1240,
	389, 1240,
	390, 1240,
	391, 1240,
	392, 1240,
	393, 1240,
	394, 1240,
	395, 1240,
	396, 1240,
	398, 1240,
	400, 1240,
	401, 1240,
	402, 1240,
	407, 1240,
	409, 1240,
	410, 1240,
	411, 1240,
	412, 1240,
	413, 1240,
	414, 1240,
	415, 1240,
	416, 1240,
	417, 1240,
	419, 1240,
	420, 1240,
	421, 1240,
	423, 1240,
	424, 1240,
	425, 1240,
	426, 1240,
	427, 1240,
	428, 1240,
	430, 1240,
	431, 1240,
	432, 1240,
	433, 1240,
	434, 1240,
	435, 1240,
	436, 1240,
	437, 1240,
	438, 1240,
	439, 1240,
	440, 1240,
	442, 1240,
	443, 1240,
	444, 1240,
	445, 1240,
	446, 1240,
	447, 1240,
	449, 1240,
	450, 1240,
	451, 1240,
	452, 1240,
	453, 1240,
	454, 1240,
	456, 1240,
	457, 1240,
	458, 1240,
	459, 1240,
	460, 1240,
	461, 1240,
	462, 1240,
	464, 1240,
	466, 1240,
	467, 1240,
	468, 1240,
	469, 1240,
	470, 1240,
	471, 1240,
	472, 1240,
	473, 1240,
	474, 1240,
	475, 1240,
	476, 1240,
	477, 1240,
	478, 1240,
	479, 1240,
	480, 1240,
	481, 1240,
	483, 1240,
	484, 1240,
	486, 1240,
	487, 1240,
	489, 1240,
	490, 1240,
	491, 1240,
	492, 1240,
	493, 1240,
	494, 1240,
	495, 1240,
	496, 1240,
	497, 1240,
	499, 1240,
	500, 1240,
	501, 1240,
	502, 1240,
	503, 1240,
	505, 1240,
	507, 1240,
	508, 1240,
	509, 1240,
	510, 1240,
	511, 1240,
	512, 1240,
	514, 1240,
	515, 1240,
	516, 1240,
	517, 1240,
	519, 1240,
	520, 1240,
	523, 1240,
	524, 1240,
	525, 1240,
	526, 1240,
	527, 1240,
	528, 1240,
	529, 1240,
	531, 1240,
	534, 1240,
	535, 1240,
	536, 1240,
	537, 1240,
	538, 1240,
	539, 1240,
	541, 1240,
	542, 1240,
	543, 1240,
	544, 1240,
	550, 1240,
	551, 1240,
	552, 1240,
	553, 1240,
	554, 1240,
	555, 1240,
	-2, 0,
	-1, 1570,
	1, 528,
	579, 528,
	581, 528,
	583, 528,
	-2, 1451,
	-1, 1573,
	4, 2599,
	11, 2599,
	12, 2599,
	14, 2599,
	15, 2599,
	16, 2599,
	17, 2599,
	18, 2599,
	19, 2599,
	21, 2599,
	22, 2599,
	23, 2599,
	24, 2599,
	25, 2599,
	26, 2599,
	27, 2599,
	29, 2599,
	30, 2599,
	33, 2599,
	34, 2599,
	36, 2599,
	38, 2599,
	41, 2599,
	42, 2599,
	44, 2599,
	45, 2599,
	46, 2599,
	47, 2599,
	48, 2599,
	49, 2599,
	50, 2599,
	51, 2599,
	53, 2599,
	54, 2599,
	55, 2599,
	56, 2599,
	58, 2599,
	59, 2599,
	60, 2599,
	61, 2599,
	62, 2599,
	63, 2599,
	64, 2599,
	68, 2599,
	69, 2599,
	70, 2599,
	71, 2599,
	73, 2599,
	74, 2599,
	75, 2599,
	76, 2599,
	79, 2599,
	80, 2599,
	81, 2599,
	82, 2599,
	83, 2599,
	84, 2599,
	85, 2599,
	86, 2599,
	88, 2599,
	89, 2599,
	90, 2599,
	91, 2599,
	92, 2599,
	94, 2599,
	95, 2599,
	96, 2599,
	97, 2599,
	98, 2599,
	99, 2599,
	100, 2599,
	101, 2599,
	103, 2599,
	104, 2599,
	105, 2599,
	106, 2599,
	107, 2599,
	108, 2599,
	109, 2599,
	117, 2599,
	118, 2599,
	119, 2599,
	120, 2599,
	121, 2599,
	123, 2599,
	124, 2599,
	125, 2599,
	127, 2599,
	128, 2599,
	129, 2599,
	131, 2599,
	132, 2599,
	133, 2599,
	135, 2599,
	136, 2599,
	137, 2599,
	140, 2599,
	141, 2599,
	142, 2599,
	144, 2599,
	145, 2599,
	147, 2599,
	148, 2599,
	149, 2599,
	151, 2599,
	152, 2599,
	153, 2599,
	154, 2599,
	155, 2599,
	156, 2599,
	157, 2599,
	158, 2599,
	159, 2599,
	160, 2599,
	161, 2599,
	162, 2599,
	163, 2599,
	164, 2599,
	165, 2599,
	166, 2599,
	170, 2599,
	171, 2599,
	172, 2599,
	173, 2599,
	174, 2599,
	175, 2599,
	176, 2599,
	177, 2599,
	180, 2599,
	181, 2599,
	183, 2599,
	184, 2599,
	187, 2599,
	188, 2599,
	189, 2599,
	190, 2599,
	191, 2599,
	192, 2599,
	193, 2599,
	194, 2599,
	195, 2599,
	196, 2599,
	197, 2599,
	198, 2599,
	199, 2599,
	200, 2599,
	202, 2599,
	203, 2599,
	205, 2599,
	206, 2599,
	208, 2599,
	209, 2599,
	210, 2599,
	211, 2599,
	212, 2599,
	213, 2599,
	214, 2599,
	215, 2599,
	216, 2599,
	217, 2599,
	218, 2599,
	219, 2599,
	220, 2599,
	221, 2599,
	222, 2599,
	223, 2599,
	224, 2599,
	226, 2599,
	227, 2599,
	229, 2599,
	230, 2599,
	231, 2599,
	232, 2599,
	234, 2599,
	235, 2599,
	236, 2599,
	237, 2599,
	239, 2599,
	241, 2599,
	242, 2599,
	243, 2599,
	244, 2599,
	245, 2599,
	246, 2599,
	247, 2599,
	248, 2599,
	249, 2599,
	250, 2599,
	252, 2599,
	253, 2599,
	254, 2599,
	255, 2599,
	256, 2599,
	257, 2599,
	258, 2599,
	259, 2599,
	261, 2599,
	262, 2599,
	263, 2599,
	265, 2599,
	266, 2599,
	267, 2599,
	268, 2599,
	269, 2599,
	270, 2599,
	272, 2599,
	276, 2599,
	277, 2599,
	278, 2599,
	281, 2599,
	282, 2599,
	283, 2599,
	284, 2599,
	285, 2599,
	286, 2599,
	287, 2599,
	288, 2599,
	289, 2599,
	290, 2599,
	291, 2599,
	292, 2599,
	293, 2599,
	294, 2599,
	295, 2599,
	296, 2599,
	297, 2599,
	298, 2599,
	299, 2599,
	300, 2599,
	301, 2599,
	302, 2599,
	303, 2599,
	304, 2599,
	305, 2599,
	306, 2599,
	307, 2599,
	309, 2599,
	310, 2599,
	311, 2599,
	312, 2599,
	313, 2599,
	314, 2599,
	315, 2599,
	316, 2599,
	317, 2599,
	318, 2599,
	319, 2599,
	320, 2599,
	321, 2599,
	322, 2599,
	324, 2599,
	327, 2599,
	328, 2599,
	329, 2599,
	331, 2599,
	332, 2599,
	333, 2599,
	334, 2599,
	335, 2599,
	338, 2599,
	342, 2599,
	343, 2599,
	344, 2599,
	345, 2599,
	347, 2599,
	348, 2599,
	349, 2599,
	351, 2599,
	353, 2599,
	354, 2599,
	355, 2599,
	356, 2599,
	357, 2599,
	358, 2599,
	359, 2599,
	360, 2599,
	361, 2599,
	362, 2599,
	363, 2599,
	364, 2599,
	366, 2599,
	367, 2599,
	368, 2599,
	369, 2599,
	370, 2599,
	371, 2599,
	372, 2599,
	373, 2599,
	374, 2599,
	375, 2599,
	376, 2599,
	377, 2599,
	378, 2599,
	379, 2599,
	380, 2599,
	382, 2599,
	383, 2599,
	385, 2599,
	386, 2599,
	387, 2599,
	388, 2599,
	389, 2599,
	390, 2599,
	391, 2599,
	392, 2599,
	393, 2599,
	394, 2599,
	395, 2599,
	396, 2599,
	398, 2599,
	400, 2599,
	401, 2599,
	402, 2599,
	407, 2599,
	408, 2599,
	409, 2599,
	410, 2599,
	411, 2599,
	412, 2599,
	413, 2599,
	414, 2599,
	415, 2599,
	416, 2599,
	417, 2599,
	419, 2599,
	420, 2599,
	421, 2599,
	422, 2599,
	423, 2599,
	424, 2599,
	425, 2599,
	426, 2599,
	427, 2599,
	428, 2599,
	429, 2599,
	430, 2599,
	431, 2599,
	432, 2599,
	433, 2599,
	434, 2599,
	435, 2599,
	436, 2599,
	437, 2599,
	438, 2599,
	439, 2599,
	440, 2599,
	442, 2599,
	443, 2599,
	444, 2599,
	445, 2599,
	446, 2599,
	447, 2599,
	449, 2599,
	450, 2599,
	451, 2599,
	452, 2599,
	453, 2599,
	454, 2599,
	455, 2599,
	456, 2599,
	457, 2599,
	458, 2599,
	459, 2599,
	460, 2599,
	461, 2599,
	462, 2599,
	464, 2599,
	466, 2599,
	467, 2599,
	468, 2599,
	469, 2599,
	470, 2599,
	471, 2599,
	472, 2599,
	473, 2599,
	474, 2599,
	475, 2599,
	476, 2599,
	477, 2599,
	478, 2599,
	479, 2599,
	480, 2599,
	481, 2599,
	483, 2599,
	484, 2599,
	486, 2599,
	487, 2599,
	489, 2599,
	490, 2599,
	491, 2599,
	492, 2599,
	493, 2599,
	494, 2599,
	495, 2599,
	496, 2599,
	497, 2599,
	499, 2599,
	500, 2599,
	501, 2599,
	502, 2599,
	503, 2599,
	505, 2599,
	507, 2599,
	508, 2599,
	509, 2599,
	510, 2599,
	511, 2599,
	512, 2599,
	514, 2599,
	515, 2599,
	516, 2599,
	517, 2599,
	519, 2599,
	520, 2599,
	523, 2599,
	524, 2599,
	525, 2599,
	526, 2599,
	527, 2599,
	528, 2599,
	529, 2599,
	531, 2599,
	534, 2599,
	535, 2599,
	536, 2599,
	537, 2599,
	538, 2599,
	539, 2599,
	541, 2599,
	542, 2599,
	543, 2599,
	544, 2599,
	550, 2599,
	551, 2599,
	552, 2599,
	553, 2599,
	554, 2599,
	555, 2599,
	556, 2599,
	558, 2599,
	561, 2599,
	562, 2599,
	563, 2599,
	564, 2599,
	565, 2599,
	566, 2599,
	568, 2599,
	569, 2599,
	570, 2599,
	571, 2599,
	572, 2599,
	573, 2599,
	574, 2599,
	575, 2599,
	576, 2599,
	578, 2599,
	581, 2599,
	582, 2599,
	584, 2599,
	585, 2599,
	-2, 0,
	-1, 1578,
	186, 2483,
	504, 2483,
	563, 2483,
	582, 2483,
	-2, 0,
	-1, 1627,
	387, 838,
	447, 838,
	487, 838,
	509, 838,
	-2, 0,
	-1, 1654,
	1, 833,
	579, 833,
	581, 833,
	583, 833,
	-2, 0,
	-1, 1655,
	1, 871,
	579, 871,
	581, 871,
	583, 871,
	-2, 0,
	-1, 1656,
	1, 879,
	579, 879,
	581, 879,
	583, 879,
	-2, 0,
	-1, 1659,
	1, 842,
	579, 842,
	581, 842,
	583, 842,
	-2, 0,
	-1, 1661,
	1, 846,
	579, 846,
	581, 846,
	583, 846,
	-2, 0,
	-1, 1667,
	1, 853,
	579, 853,
	581, 853,
	583, 853,
	-2, 0,
	-1, 1696,
	1, 2545,
	579, 2545,
	581, 2545,
	582, 2545,
	583, 2545,
	-2, 905,
	-1, 1697,
	1, 2480,
	579, 2480,
	581, 2480,
	582, 2480,
	583, 2480,
	-2, 906,
	-1, 1701,
	1, 918,
	579, 918,
	581, 918,
	583, 918,
	-2, 0,
	-1, 1715,
	1, 1342,
	583, 1342,
	-2, 1347,
	-1, 1718,
	169, 1494,
	182, 1494,
	271, 1494,
	336, 1494,
	-2, 1432,
	-1, 1812,
	150, 1453,
	169, 1453,
	182, 1453,
	238, 1453,
	271, 1453,
	336, 1453,
	346, 1453,
	521, 1453,
	-2, 1895,
	-1, 1872,
	581, 2045,
	-2, 0,
	-1, 1907,
	150, 1453,
	169, 1453,
	182, 1453,
	238, 1453,
	271, 1453,
	336, 1453,
	346, 1453,
	521, 1453,
	-2, 1581,
	-1, 1941,
	504, 2480,
	582, 2480,
	585, 2480,
	-2, 0,
	-1, 1958,
	580, 1722,
	-2, 1710,
	-1, 1989,
	186, 2480,
	582, 2480,
	585, 2480,
	-2, 0,
	-1, 2037,
	1, 660,
	583, 660,
	-2, 1347,
	-1, 2163,
	220, 242,
	-2, 2192,
	-1, 2164,
	220, 243,
	-2, 291,
	-1, 2268,
	1, 835,
	579, 835,
	581, 835,
	583, 835,
	-2, 0,
	-1, 2269,
	1, 873,
	579, 873,
	581, 873,
	583, 873,
	-2, 0,
	-1, 2270,
	1, 881,
	579, 881,
	581, 881,
	583, 881,
	-2, 0,
	-1, 2271,
	1, 920,
	579, 920,
	581, 920,
	583, 920,
	-2, 0,
	-1, 2304,
	1, 855,
	579, 855,
	581, 855,
	583, 855,
	-2, 0,
	-1, 2359,
	427, 1521,
	428, 1521,
	-2, 1755,
	-1, 2390,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1775,
	-1, 2391,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1776,
	-1, 2392,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1777,
	-1, 2393,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1778,
	-1, 2394,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1779,
	-1, 2395,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1780,
	-1, 2396,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1781,
	-1, 2397,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1782,
	-1, 2409,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1794,
	-1, 2410,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1795,
	-1, 2411,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1796,
	-1, 2414,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1801,
	-1, 2420,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1805,
	-1, 2422,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1813,
	-1, 2423,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1814,
	-1, 2424,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1815,
	-1, 2425,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1816,
	-1, 2561,
	5, 2196,
	186, 2056,
	580, 2193,
	-2, 2184,
	-1, 2562,
	186, 2057,
	-2, 2550,
	-1, 2563,
	186, 2058,
	-2, 2379,
	-1, 2564,
	186, 2059,
	-2, 2266,
	-1, 2565,
	186, 2060,
	-2, 2320,
	-1, 2566,
	186, 2061,
	-2, 2364,
	-1, 2567,
	186, 2062,
	-2, 2478,
	-1, 2568,
	186, 2063,
	-2, 1878,
	-1, 2638,
	1, 1582,
	2, 1582,
	106, 1582,
	150, 1582,
	169, 1582,
	182, 1582,
	187, 1582,
	204, 1582,
	207, 1582,
	234, 1582,
	238, 1582,
	249, 1582,
	267, 1582,
	271, 1582,
	310, 1582,
	336, 1582,
	340, 1582,
	346, 1582,
	418, 1582,
	422, 1582,
	521, 1582,
	532, 1582,
	547, 1582,
	548, 1582,
	549, 1582,
	559, 1582,
	579, 1582,
	581, 1582,
	583, 1582,
	585, 1582,
	-2, 1581,
	-1, 2651,
	580, 2165,
	-2, 2179,
	-1, 2653,
	1, 308,
	547, 308,
	-2, 1480,
	-1, 2680,
	580, 1721,
	-2, 1711,
	-1, 2854,
	1, 1215,
	579, 1215,
	581, 1215,
	583, 1215,
	-2, 1480,
	-1, 3023,
	341, 1524,
	-2, 2589,
	-1, 3024,
	341, 1525,
	-2, 2464,
	-1, 3028,
	427, 2122,
	428, 2122,
	-2, 1876,
	-1, 3029,
	427, 2126,
	428, 2126,
	-2, 1877,
	-1, 3030,
	427, 2123,
	428, 2123,
	-2, 1876,
	-1, 3031,
	427, 2127,
	428, 2127,
	-2, 1877,
	-1, 3044,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1803,
	-1, 3045,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1807,
	-1, 3051,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1809,
	-1, 3267,
	1, 657,
	579, 657,
	581, 657,
	583, 657,
	-2, 1347,
	-1, 3417,
	43, 2157,
	-2, 979,
	-1, 3422,
	1, 1215,
	579, 1215,
	581, 1215,
	583, 1215,
	-2, 1480,
	-1, 3527,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1811,
	-1, 3534,
	243, 0,
	245, 0,
	327, 0,
	-2, 1830,
	-1, 3601,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1859,
	-1, 3602,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1860,
	-1, 3603,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1861,
	-1, 3607,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1865,
	-1, 3608,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1866,
	-1, 3609,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1867,
	-1, 3655,
	580, 2166,
	-2, 2180,
	-1, 3815,
	582, 2707,
	-2, 1406,
	-1, 3873,
	243, 0,
	245, 0,
	327, 0,
	-2, 1831,
	-1, 3876,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1834,
	-1, 3877,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1836,
	-1, 3969,
	582, 2181,
	-2, 1250,
	-1, 4112,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1835,
	-1, 4113,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1837,
	-1, 4124,
	243, 0,
	-2, 1868,
	-1, 4292,
	243, 0,
	-2, 1869,
	-1, 4474,
	50, 0,
	217, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 2553,
}

const sqlPrivate = 57344

const sqlLast = 121903

var sqlAct = [...]int{
	265, 4570, 3406, 2919, 4656, 3178, 2932, 4349, 4526, 4467,
	4167, 1479, 3405, 4473, 4319, 2742, 4466, 4455, 4484, 4597,
	4214, 4442, 3965, 4370, 4406, 4423, 4327, 4485, 2085, 4345,
	2160, 4426, 4486, 4153, 2804, 2784, 4245, 2235, 4221, 3566,
	4472, 1219, 4296, 4068, 4063, 4029, 4133, 2369, 4009, 4050,
	4230, 1208, 4172, 3856, 4539, 3439, 3519, 4043, 1288, 3807,
	4052, 4101, 3743, 3950, 3347, 3289, 3966, 1281, 2593, 4259,
	2437, 3799, 1292, 3037, 2019, 790, 3433, 1727, 4073, 2816,
	3765, 3401, 3780, 1032, 3763, 2377, 2093, 2941, 1041, 3391,
	4129, 3478, 753, 3292, 2370, 1352, 2908, 2889, 2242, 3480,
	1594, 790, 3658, 3201, 2244, 3221, 1913, 2943, 2954, 2878,
	3193, 4, 1945, 2934, 3161, 3855, 2920, 1994, 2951, 3182,
	1882, 865, 2154, 2155, 2940, 2104, 3912, 1444, 4571, 3311,
	2903, 2905, 2744, 3184, 2374, 1858, 3160, 4297, 2631, 2450,
	3626, 1820, 1592, 1040, 174, 2479, 3286, 3021, 1534, 2630,
	2481, 785, 1286, 2150, 1451, 2950, 2831, 2633, 2138, 3278,
	2073, 1335, 2131, 2882, 2783, 1946, 1715, 1199, 1089, 2890,
	2611, 2077, 2470, 2017, 2590, 1883, 2434, 1260, 2063, 1635,
	2358, 2341, 1571, 1283, 2339, 259, 1274, 1094, 3403, 1271,
	3228, 787, 2195, 2913, 2664, 1537, 791, 1321, 792, 4371,
	2208, 2944, 2663, 684, 2730, 858, 2473, 670, 1202, 258,
	1853, 692, 1892, 2451, 1181, 2601, 1096, 2620, 1899, 2523,
	1902, 1805, 1729, 183, 2557, 1728, 2340, 1667, 1139, 2342,
	747, 184, 1216, 735, 1654, 1562, 1198, 174, 2221, 1569,
	1474, 2092, 4527, 2194, 1995, 2363, 1992, 1070, 687, 44,
	2006, 43, 41, 32, 30, 28, 1734, 928, 695, 3072,
	796, 1204, 1179, 1714, 1485, 710, 3640, 948, 3641, 3133,
	3134, 3068, 2008, 839, 3180, 4669, 2008, 2008, 2008, 2610,
	156, 2008, 3449, 108, 799, 1036, 796, 1085, 73, 2008,
	46, 45, 880, 4659, 4644, 4643, 3236, 3458, 2610, 2610,
	1499, 1036, 4633, 4615, 3251, 74, 2169, 4171, 151, 1478,
	799, 4613, 3448, 4558, 4515, 4171, 4508, 2169, 4516, 4506,
	2610, 78, 4503, 2610, 4500, 4470, 4504, 4469, 4501, 2169,
	4468, 2169, 67, 4463, 2029, 3250, 4462, 2029, 4453, 48,
	2029, 153, 4171, 4451, 3148, 4448, 4421, 4171, 4395, 4233,
	4171, 4388, 2671, 4387, 4382, 2610, 4381, 2610, 4171, 47,
	4171, 87, 4375, 4341, 4294, 1196, 2169, 4020, 2671, 4276,
	4273, 4270, 4223, 3842, 2169, 4171, 4224, 2026, 3458, 4187,
	4186, 1182, 1182, 2169, 2169, 4178, 4177, 50, 68, 2169,
	4171, 4170, 3933, 4140, 2169, 4171, 51, 2169, 1017, 4114,
	4092, 57, 2603, 2671, 2029, 154, 1016, 4081, 4004, 1601,
	1660, 3458, 2610, 49, 3989, 107, 1330, 1330, 2610, 3875,
	93, 104, 3823, 2671, 2691, 3817, 3475, 3778, 2169, 3475,
	3650, 3779, 3648, 3633, 3651, 3550, 3649, 2610, 3139, 2169,
	1026, 3546, 2243, 3630, 1031, 2610, 3474, 3465, 3177, 3172,
	3475, 3466, 2610, 2610, 3171, 3124, 3036, 3122, 2610, 3125,
	52, 3123, 93, 1092, 3114, 2667, 3112, 3083, 3115, 1037,
	2610, 2610, 2958, 2610, 1231, 3081, 2029, 859, 94, 3133,
	3134, 3082, 3151, 3152, 3153, 2930, 2929, 1183, 2714, 2231,
	2231, 2670, 2610, 2661, 2476, 2671, 2655, 2610, 2609, 2230,
	2169, 2169, 2610, 2231, 73, 2690, 862, 861, 1238, 1742,
	1743, 1498, 1775, 1776, 1777, 1785, 1786, 1787, 1185, 1214,
	1186, 74, 4396, 4298, 2610, 4289, 4277, 4233, 2029, 3630,
	2602, 1778, 1773, 4061, 4020, 3990, 229, 78, 3842, 1745,
	3071, 3466, 2807, 3149, 2729, 2042, 2007, 2023, 1791, 2026,
	1742, 1743, 2097, 2884, 3148, 1232, 2168, 2826, 2727, 1878,
	1473, 3728, 1742, 1743, 3522, 3498, 1900, 2143, 3450, 1637,
	2647, 2646, 2645, 1773, 1744, 2644, 2643, 87, 1187, 1184,
	1745, 1025, 2477, 231, 1764, 1773, 1024, 3451, 3928, 1487,
	1487, 1023, 1745, 1761, 257, 3133, 3134, 1022, 1021, 1020,
	1019, 1015, 2998, 4491, 1014, 3133, 3134, 1013, 1012, 229,
	1011, 1010, 1742, 1743, 1009, 1744, 1008, 863, 1007, 1006,
	1005, 97, 1004, 1003, 2009, 1764, 1091, 1744, 2009, 2009,
	2009, 107, 230, 2009, 1761, 1002, 93, 104, 53, 1001,
	1000, 2009, 1745, 999, 223, 926, 925, 924, 3139, 1742,
	1743, 923, 56, 224, 922, 921, 231, 59, 920, 919,
	918, 917, 1493, 2478, 916, 2475, 69, 915, 1767, 1768,
	1769, 1770, 58, 182, 100, 185, 103, 1744, 1750, 1745,
	54, 3448, 914, 913, 155, 912, 911, 3150, 3869, 910,
	909, 55, 1587, 908, 94, 1211, 907, 906, 905, 904,
	229, 2506, 903, 1232, 902, 230, 901, 900, 62, 1767,
	1768, 1769, 1770, 148, 1744, 1782, 899, 898, 1792, 1750,
	897, 896, 1486, 895, 1772, 1774, 894, 152, 1297, 1094,
	893, 1750, 1478, 883, 2026, 882, 878, 877, 871, 229,
	870, 1788, 229, 1789, 857, 856, 813, 231, 185, 812,
	1759, 1760, 1094, 3149, 811, 148, 1094, 810, 802, 801,
	800, 768, 759, 758, 3139, 1772, 1774, 757, 1780, 741,
	3133, 3134, 1355, 150, 3139, 253, 1355, 1772, 1774, 252,
	251, 1750, 250, 1765, 1297, 249, 231, 248, 186, 231,
	247, 1759, 1760, 2701, 246, 4075, 230, 2007, 2026, 2023,
	3887, 2602, 2690, 245, 244, 1094, 243, 1094, 223, 1094,
	2334, 2480, 242, 241, 240, 1297, 1087, 224, 1750, 2916,
	239, 238, 237, 236, 1765, 1790, 3144, 3142, 3143, 3135,
	3136, 3137, 3138, 3140, 3141, 230, 1765, 97, 230, 185,
	1334, 1297, 3, 1779, 1339, 1459, 235, 223, 229, 229,
	223, 1454, 234, 1325, 233, 1605, 224, 232, 1210, 224,
	3671, 1297, 3644, 3476, 3224, 3094, 1297, 3077, 2981, 3149,
	2865, 2675, 1487, 1492, 1094, 1861, 1094, 2652, 185, 3149,
	1297, 185, 1860, 2492, 1861, 1903, 1094, 2637, 1094, 182,
	100, 1860, 103, 3175, 2071, 231, 231, 3150, 2238, 1265,
	1268, 1477, 1487, 2028, 1864, 1926, 1771, 1232, 1741, 2490,
	1543, 1546, 1831, 1859, 1481, 1319, 229, 1341, 1218, 4471,
	1278, 1591, 4450, 4356, 864, 2474, 4301, 1766, 4286, 148,
	4165, 3176, 4128, 4280, 1297, 1465, 1822, 2898, 1348, 3139,
	1441, 1446, 4278, 4082, 230, 230, 4060, 1771, 3938, 1305,
	3910, 2684, 1094, 1783, 1662, 1094, 223, 223, 3909, 3903,
	3902, 1449, 3901, 231, 3894, 224, 224, 3893, 1766, 3891,
	3886, 3883, 3882, 1574, 1576, 3783, 3777, 1314, 3675, 796,
	1766, 3674, 2237, 3673, 3654, 3621, 3620, 185, 185, 150,
	1476, 1532, 1475, 3133, 3134, 3619, 4077, 3542, 3538, 3219,
	3168, 3159, 3132, 799, 186, 174, 174, 3129, 3128, 3126,
	3121, 1606, 230, 3150, 3120, 3119, 3116, 3113, 3093, 3076,
	3069, 2931, 2638, 3150, 223, 1829, 2463, 3133, 3134, 3145,
	3146, 3147, 1549, 224, 1741, 1822, 3144, 3142, 3143, 3135,
	3136, 3137, 3138, 3140, 3141, 1740, 3726, 1094, 1094, 1094,
	1094, 1094, 1094, 1094, 1781, 860, 1824, 1195, 4663, 1756,
	1757, 1763, 1784, 1762, 1758, 2176, 1755, 1753, 1754, 1746,
	1747, 1748, 1749, 1751, 1752, 2211, 2174, 4607, 1094, 3897,
	2812, 4606, 3784, 3896, 1094, 1039, 1294, 1823, 4572, 1821,
	1325, 4525, 1565, 1325, 4523, 1220, 3568, 4413, 4348, 4337,
	1719, 229, 4334, 4333, 1762, 1758, 4332, 1755, 1753, 1754,
	1746, 1747, 1748, 1749, 1751, 1752, 4313, 3133, 3134, 1755,
	1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 4300, 4299,
	4274, 229, 4258, 2768, 229, 1068, 1676, 4257, 2440, 1586,
	4243, 4240, 4239, 4234, 1037, 4183, 4161, 4126, 231, 4109,
	1713, 1600, 3144, 3142, 3143, 3135, 3136, 3137, 3138, 3140,
	3141, 229, 3139, 3142, 3143, 3135, 3136, 3137, 3138, 3140,
	3141, 4108, 1746, 1747, 1748, 1749, 1751, 1752, 231, 2900,
	4089, 231, 1811, 4088, 4046, 4021, 3173, 1611, 2446, 1094,
	1094, 1094, 3927, 3908, 3843, 1094, 3139, 230, 3837, 3834,
	3714, 3713, 1216, 1628, 1216, 3698, 3697, 3695, 231, 223,
	3636, 1748, 1749, 1751, 1752, 1663, 3624, 3784, 224, 1355,
	3533, 1809, 3477, 3459, 1880, 3425, 3360, 230, 1094, 3322,
	230, 790, 1929, 3291, 39, 3244, 4076, 1963, 790, 223,
	185, 1297, 223, 1942, 3098, 3242, 3097, 3092, 224, 3060,
	1990, 224, 1716, 2877, 1867, 1866, 229, 230, 1865, 1724,
	1862, 1854, 1723, 1889, 1017, 1852, 2682, 2681, 2649, 223,
	185, 2642, 1016, 2915, 2608, 2488, 1718, 1925, 224, 1863,
	2505, 1881, 1876, 1875, 1874, 1720, 3139, 1873, 1872, 1871,
	1870, 1737, 1738, 1869, 229, 1868, 1937, 1742, 1743, 1934,
	185, 3149, 1849, 231, 1563, 3216, 1848, 1297, 1847, 229,
	1886, 1887, 1846, 1845, 1094, 1844, 1843, 1842, 1297, 1841,
	1282, 1840, 1839, 1838, 1742, 1743, 1837, 1745, 1836, 1835,
	3135, 3136, 3137, 3138, 3140, 3141, 1094, 1910, 1182, 4145,
	1824, 231, 1355, 1810, 1808, 1855, 1856, 1773, 1803, 174,
	1313, 1236, 230, 1227, 1745, 4302, 231, 4049, 2087, 3934,
	229, 1037, 1744, 3879, 223, 3670, 3647, 1212, 1447, 2060,
	2899, 1458, 1282, 224, 3639, 2673, 2239, 3080, 2640, 1568,
	3936, 3669, 2035, 1823, 3240, 1806, 3454, 1921, 229, 1744,
	230, 3149, 1932, 2062, 4604, 185, 3992, 4596, 2805, 4335,
	4235, 4226, 223, 4225, 2034, 230, 4080, 231, 1930, 3133,
	3134, 224, 1908, 4023, 2062, 1338, 796, 223, 1901, 2062,
	4022, 1325, 1938, 796, 2069, 1911, 224, 3991, 1336, 1986,
	3930, 3325, 3846, 185, 3845, 231, 1331, 1282, 1282, 3844,
	799, 3642, 2011, 1879, 3787, 3150, 3461, 799, 185, 3460,
	4231, 1330, 1903, 1957, 1330, 1920, 230, 1919, 1918, 1916,
	1915, 1914, 2491, 1905, 2140, 1960, 2788, 3520, 223, 1861,
	1711, 1627, 1297, 1297, 1337, 3738, 1860, 224, 2048, 3354,
	3118, 1943, 1355, 2037, 230, 4281, 3117, 1037, 2489, 1214,
	3042, 1214, 1844, 1750, 4279, 2770, 223, 1333, 2033, 185,
	997, 3711, 3293, 1844, 1330, 224, 1833, 3408, 4164, 3407,
	1677, 1933, 1636, 3470, 4537, 2236, 2013, 4222, 4511, 2015,
	4496, 4483, 3392, 2260, 229, 2020, 2955, 185, 1637, 2022,
	2156, 2471, 3791, 3774, 2025, 3150, 2125, 3740, 2130, 1772,
	1774, 2135, 3735, 3719, 998, 3495, 3265, 4130, 3180, 3570,
	2680, 3086, 1327, 2031, 1877, 3137, 3138, 3140, 3141, 4492,
	1857, 2820, 2040, 3399, 2205, 1542, 1470, 1308, 1264, 4505,
	4502, 231, 2161, 2166, 4328, 4157, 1297, 3444, 1297, 2065,
	1297, 2055, 2818, 2823, 3690, 4064, 3143, 3135, 3136, 3137,
	3138, 3140, 3141, 4420, 4310, 3296, 1297, 1297, 1765, 3706,
	1830, 2938, 2912, 852, 3384, 4555, 4556, 1297, 2746, 2349,
	2038, 1615, 2097, 4586, 2103, 3514, 1567, 2212, 3753, 1297,
	230, 1297, 1297, 1297, 4204, 1035, 4493, 3979, 1509, 3269,
	1517, 1332, 223, 2715, 995, 1194, 993, 1674, 2158, 991,
	1471, 224, 989, 1568, 790, 4658, 986, 4197, 2310, 2123,
	2308, 4189, 4018, 4017, 2246, 3751, 2733, 2259, 3750, 796,
	3742, 3734, 2206, 185, 2201, 1211, 3733, 1211, 2347, 3731,
	1476, 2731, 1475, 2218, 978, 3730, 3718, 3135, 3136, 3137,
	3138, 3140, 3141, 799, 1612, 3752, 973, 3693, 1328, 3685,
	2049, 3684, 2122, 2733, 1675, 3388, 2134, 1329, 3387, 3057,
	3235, 3091, 3090, 3089, 2241, 3088, 853, 3046, 2731, 2829,
	1030, 2828, 2825, 1034, 2167, 1518, 2814, 2264, 2803, 2802,
	2798, 2749, 2226, 2797, 2796, 2775, 2774, 2737, 3055, 2662,
	2421, 1094, 1717, 1094, 3271, 2519, 1673, 2215, 1331, 2247,
	1094, 2518, 1766, 1963, 1963, 1355, 1338, 1094, 1094, 1094,
	1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
	1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
	1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
	1094, 1094, 2187, 1094, 2228, 1094, 1094, 1094, 1094, 2186,
	4158, 1613, 2220, 1565, 2317, 2223, 2252, 2223, 1338, 2224,
	1658, 2379, 974, 2909, 1513, 1337, 2351, 1094, 2348, 1314,
	1094, 1094, 1608, 4587, 2338, 2232, 3241, 2233, 1094, 1458,
	4591, 1036, 1094, 2327, 1094, 1094, 3324, 983, 1210, 796,
	1210, 2185, 1355, 2476, 3352, 2286, 3293, 3496, 1094, 1094,
	1094, 1094, 2332, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
	1094, 2251, 2236, 799, 1327, 2349, 1555, 1337, 1554, 1037,
	2269, 1037, 1752, 2268, 2256, 1330, 1458, 1526, 3052, 1094,
	1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 2452, 2453,
	1567, 2346, 1094, 1754, 1746, 1747, 1748, 1749, 1751, 1752,
	1250, 3053, 2452, 2468, 1216, 3058, 2722, 2304, 2054, 2053,
	1657, 1355, 2062, 2064, 1472, 2105, 2436, 2128, 2375, 2376,
	1216, 2362, 2961, 2276, 2347, 4592, 2674, 2748, 2514, 1531,
	3943, 2477, 2270, 1553, 2436, 1552, 1094, 1355, 2109, 1686,
	1609, 2326, 4321, 1332, 2792, 2760, 2654, 2560, 2560, 2574,
	4107, 2452, 682, 1320, 2594, 2596, 2337, 1572, 2343, 2336,
	2600, 2335, 1629, 2350, 2471, 2094, 2785, 2786, 1017, 1957,
	1957, 1017, 1017, 2333, 1304, 2467, 2366, 3993, 677, 2367,
	2368, 1960, 1960, 3001, 3141, 1658, 2772, 2785, 2786, 3019,
	2625, 3942, 2785, 2786, 1690, 2106, 1672, 2314, 2090, 3353,
	1328, 975, 2345, 2324, 2650, 2418, 1033, 855, 854, 1329,
	4555, 973, 2478, 2273, 2475, 2516, 4600, 2444, 4617, 3034,
	2517, 1625, 2759, 2520, 2442, 2521, 2522, 2095, 2096, 3974,
	2057, 2277, 2225, 1710, 4594, 1030, 2448, 2617, 3962, 1722,
	1297, 1297, 3504, 2267, 2480, 1655, 1182, 2465, 1312, 3503,
	1484, 2078, 1491, 1910, 1497, 2822, 2079, 2091, 2995, 4016,
	3732, 1538, 4323, 1951, 2348, 2819, 2668, 1637, 2747, 1637,
	891, 2639, 3958, 2616, 3133, 3134, 3268, 3151, 3152, 3153,
	1891, 1331, 1355, 1669, 3054, 1657, 2817, 2821, 3729, 3559,
	2736, 3004, 3715, 884, 3056, 3386, 2585, 2556, 174, 2710,
	2110, 2704, 1037, 2598, 2569, 1921, 3350, 1656, 3703, 1536,
	2676, 1037, 2606, 2607, 2824, 1037, 1963, 2618, 4489, 1585,
	2795, 1590, 2773, 1863, 2622, 2623, 3959, 974, 1908, 2732,
	2624, 1599, 2629, 1604, 2665, 2635, 2636, 2346, 4567, 2736,
	976, 2204, 3760, 2059, 850, 4575, 849, 3033, 3441, 3148,
	987, 1614, 987, 3556, 1355, 987, 1325, 4574, 988, 2660,
	2480, 1895, 987, 2309, 4620, 2307, 2111, 2112, 1297, 2080,
	3341, 4544, 2416, 3861, 1223, 2419, 2738, 1330, 2683, 2173,
	2172, 2058, 2687, 1512, 1094, 1094, 2084, 1094, 3860, 2706,
	2107, 1214, 977, 1855, 1856, 1661, 3761, 1327, 2695, 766,
	2686, 2325, 2698, 1037, 2699, 2689, 2713, 1214, 1898, 790,
	4106, 1297, 3026, 3027, 2735, 2881, 1221, 1515, 2703, 4647,
	4593, 2707, 3003, 1893, 3342, 2415, 3701, 2815, 3972, 2705,
	2008, 2108, 3280, 2432, 3557, 2097, 3759, 2480, 1687, 2777,
	3442, 1896, 1297, 3139, 2712, 4402, 2771, 4268, 3716, 2716,
	2153, 2923, 3000, 2793, 1297, 4149, 1297, 2081, 2086, 1225,
	2896, 4329, 2430, 2323, 3340, 4598, 2952, 2763, 803, 1249,
	2860, 1297, 2696, 4392, 2474, 2862, 1332, 2141, 2700, 2806,
	2776, 2778, 2718, 3155, 1894, 2787, 2789, 2790, 2791, 4490,
	2741, 2275, 2711, 2794, 2751, 2754, 3333, 2734, 2962, 2963,
	4260, 2720, 2800, 2982, 2152, 2983, 3154, 764, 1610, 2969,
	2970, 2971, 1094, 4261, 3195, 2144, 975, 678, 3441, 4322,
	2151, 2799, 3768, 984, 1224, 3954, 1538, 3363, 2888, 4343,
	3955, 3766, 1957, 1328, 2801, 2721, 3270, 1998, 885, 886,
	2082, 1684, 1329, 731, 1960, 2113, 4262, 1212, 3149, 1212,
	3334, 3002, 2927, 1234, 2956, 2719, 2959, 4457, 3048, 4458,
	4038, 2964, 2979, 2965, 796, 1094, 2129, 1211, 4599, 2937,
	2733, 1094, 1094, 2078, 1688, 1476, 2435, 2863, 2079, 3308,
	3973, 3957, 2480, 1211, 174, 2752, 2088, 4488, 799, 3312,
	3332, 4543, 2875, 679, 796, 2925, 1897, 3960, 2957, 2885,
	2886, 4601, 2426, 1998, 1850, 3238, 4103, 1685, 4264, 3006,
	2417, 3008, 2141, 4518, 1998, 2653, 2892, 2907, 799, 2088,
	2427, 2114, 872, 4519, 2928, 2428, 1094, 1094, 2918, 2433,
	3857, 4263, 1094, 2145, 3281, 3307, 3274, 4119, 2939, 3314,
	892, 680, 3769, 681, 3488, 1094, 1094, 4566, 4265, 4440,
	1917, 1094, 1094, 3481, 2443, 976, 4390, 1094, 2926, 4431,
	4001, 700, 1689, 2272, 2976, 3096, 1094, 1094, 1094, 1802,
	1624, 1626, 1094, 2978, 2856, 2066, 2067, 2986, 2984, 2988,
	2117, 2990, 1094, 2100, 3079, 2987, 2621, 2989, 1721, 2991,
	2985, 2080, 3150, 2266, 1028, 4391, 973, 1311, 4621, 1094,
	3049, 2999, 3313, 2634, 2141, 1036, 3194, 977, 2084, 2462,
	1330, 3572, 3014, 804, 805, 765, 3025, 4608, 4048, 4053,
	1030, 3962, 3956, 3851, 3009, 887, 888, 3011, 2857, 3016,
	1210, 3015, 3666, 3702, 2118, 3074, 3075, 2101, 4054, 1239,
	3078, 4102, 3862, 2362, 1282, 3020, 1210, 3070, 3516, 3483,
	3017, 1642, 4350, 3035, 2137, 3958, 4487, 4554, 4552, 3951,
	3963, 4369, 2083, 767, 3482, 4242, 1029, 763, 2855, 1951,
	1951, 4648, 3805, 4039, 2116, 1891, 3949, 2099, 2136, 2081,
	2086, 3429, 2009, 2193, 1222, 3953, 1888, 4542, 1237, 1094,
	1094, 1094, 1282, 1230, 669, 3768, 3782, 1731, 1094, 1094,
	1094, 1732, 3858, 1094, 3766, 3047, 3767, 2365, 2429, 3959,
	1726, 2132, 974, 1094, 1216, 1355, 2098, 2050, 2431, 1094,
	3906, 1094, 3187, 3188, 3145, 3146, 3147, 1731, 1282, 1282,
	1216, 3144, 3142, 3143, 3135, 3136, 3137, 3138, 3140, 3141,
	2095, 2096, 4180, 1895, 2120, 3610, 2148, 4179, 1355, 3229,
	4251, 3952, 3085, 807, 806, 4309, 1895, 4626, 3806, 3746,
	1216, 4517, 2082, 1355, 3689, 3287, 2047, 873, 874, 3430,
	2133, 3170, 1572, 2753, 1572, 3203, 3421, 4104, 3283, 2897,
	2891, 2879, 1963, 2219, 3234, 3209, 1355, 3189, 4266, 3977,
	1898, 2213, 2207, 2199, 4267, 2179, 3976, 3488, 3555, 1730,
	2146, 1297, 1297, 1898, 3318, 2619, 3481, 3248, 2088, 1506,
	2097, 3222, 808, 809, 4351, 3769, 1241, 2612, 1893, 2126,
	1447, 740, 3681, 1896, 1094, 2779, 2355, 3625, 4407, 1730,
	3517, 2736, 4372, 2315, 1037, 1731, 1896, 2043, 1094, 3808,
	2147, 2045, 4069, 3199, 3223, 2576, 4051, 1458, 1297, 2087,
	2257, 2615, 2876, 1963, 1252, 4220, 3275, 3276, 3316, 3218,
	4218, 3638, 2121, 3197, 1732, 3863, 3484, 3485, 3486, 3487,
	3204, 1094, 3165, 3166, 3167, 4160, 3299, 3297, 3295, 1894,
	3301, 2046, 3294, 2087, 3198, 1297, 3259, 3227, 3181, 3207,
	3215, 3040, 2614, 3018, 1732, 3210, 3211, 2613, 3317, 3196,
	3208, 975, 3483, 3764, 3192, 3191, 1659, 1297, 3954, 1297,
	2659, 2658, 3266, 3955, 2657, 2656, 3907, 3482, 3252, 3253,
	3202, 3773, 2883, 1802, 1561, 1355, 3272, 2140, 3298, 1559,
	1325, 3303, 3611, 3660, 3305, 2140, 1297, 1730, 3284, 1034,
	1297, 3612, 3245, 3246, 3366, 3247, 3368, 3239, 3864, 3372,
	4316, 3355, 3206, 3378, 875, 876, 890, 3327, 3231, 3232,
	3233, 4625, 2356, 1297, 3957, 3282, 4215, 1547, 4030, 3213,
	1297, 3214, 1297, 2757, 4168, 3349, 1355, 3696, 1897, 3767,
	3960, 1548, 1458, 790, 2083, 3256, 3260, 3661, 3471, 1643,
	1282, 1897, 3267, 2217, 1297, 3975, 2780, 2781, 1957, 3395,
	4563, 1214, 3330, 3404, 3361, 3479, 1297, 4347, 4352, 4147,
	1960, 3273, 4086, 3662, 2960, 3659, 3682, 1214, 3288, 2861,
	2859, 2245, 1618, 1216, 3344, 4410, 3346, 3437, 4317, 1458,
	3413, 1458, 1951, 4155, 3315, 3345, 3686, 4417, 1027, 4404,
	976, 2952, 3323, 3329, 3420, 1053, 3913, 1214, 1297, 1297,
	2952, 3627, 2487, 3374, 3435, 1706, 3255, 3380, 3205, 3257,
	3258, 3336, 3364, 3337, 3261, 3343, 3262, 3338, 3263, 1957,
	3390, 1297, 3393, 3339, 3230, 2119, 3356, 4169, 4156, 3457,
	3428, 1960, 4085, 4435, 3446, 4565, 3331, 3385, 3362, 4507,
	3375, 4336, 977, 4125, 3373, 3905, 3772, 3381, 3379, 3162,
	3351, 2129, 2319, 1708, 1705, 3956, 739, 3532, 1703, 1681,
	1679, 1355, 4411, 1653, 1355, 4318, 3497, 1651, 3493, 3484,
	3485, 3486, 3487, 3492, 1649, 3249, 2777, 1647, 1645, 2127,
	1639, 1634, 1632, 1557, 3397, 3127, 3389, 3059, 2880, 1212,
	2306, 2813, 3438, 3963, 2769, 2685, 3418, 1094, 3431, 2328,
	3417, 3455, 3456, 1094, 1094, 1212, 1928, 1094, 1094, 1094,
	3416, 1094, 1560, 1924, 1709, 1596, 3489, 1558, 796, 2124,
	1094, 1963, 3163, 3512, 3511, 1726, 2997, 1211, 3490, 1094,
	1933, 3443, 1094, 174, 174, 3445, 2996, 3469, 1355, 3510,
	3452, 3473, 799, 1211, 889, 2967, 3687, 1094, 2344, 1668,
	2128, 3467, 2281, 2198, 2178, 1355, 1991, 3436, 1834, 3509,
	3663, 1607, 1530, 3491, 2486, 1963, 1963, 1094, 1094, 4482,
	1094, 1094, 1094, 1211, 4002, 3737, 3736, 4003, 3988, 4403,
	4067, 4008, 3947, 3804, 985, 3795, 3749, 3709, 1094, 3707,
	3688, 3518, 1094, 3424, 1963, 1963, 1094, 1094, 1094, 1094,
	1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
	1094, 1094, 1094, 1094, 1094, 3506, 1094, 3544, 3545, 3584,
	3365, 3585, 3419, 1094, 1094, 1963, 3409, 3500, 3515, 3501,
	1094, 3502, 2321, 3535, 4540, 2910, 2320, 1707, 1704, 2902,
	2895, 1094, 1702, 1680, 1678, 2887, 2873, 1652, 3507, 2858,
	2702, 1650, 1216, 1216, 2697, 2177, 1094, 3513, 1648, 1037,
	1214, 1646, 1644, 2175, 1638, 1633, 1631, 1556, 3540, 2157,
	2305, 2142, 2115, 2102, 2089, 2030, 2027, 2024, 2021, 2016,
	2014, 2010, 2001, 4062, 3551, 1355, 3552, 3434, 4531, 1191,
	1210, 1735, 3656, 1936, 3567, 3558, 3560, 3561, 3622, 3574,
	3376, 4053, 4556, 3562, 3038, 2151, 1210, 3664, 3665, 2051,
	3643, 3012, 3582, 3010, 4445, 1192, 3583, 2331, 4091, 4084,
	4054, 3676, 3677, 3678, 4083, 4015, 3581, 3587, 3589, 3939,
	2375, 3575, 1094, 2953, 2070, 3614, 1210, 1957, 990, 992,
	994, 3629, 1511, 4253, 2758, 3623, 2733, 1998, 4246, 1960,
	2733, 3816, 1094, 2216, 2097, 2271, 1458, 1458, 3615, 2375,
	3590, 2731, 1272, 2329, 1273, 2755, 1700, 1701, 727, 2301,
	2300, 2278, 4444, 3980, 1742, 1743, 4010, 174, 1572, 1742,
	1743, 1957, 1957, 1094, 1094, 3634, 3635, 2767, 3631, 3632,
	3618, 1630, 4288, 1960, 1960, 3914, 3892, 3310, 2761, 3039,
	2762, 1736, 2782, 1739, 1745, 1306, 1045, 1240, 4559, 2330,
	1957, 1957, 3645, 4550, 2165, 3745, 683, 254, 3377, 4512,
	2872, 1094, 1960, 1960, 3646, 1193, 2303, 1458, 3792, 2811,
	2762, 2200, 2808, 1317, 2820, 2818, 1211, 3744, 1273, 1744,
	2827, 1957, 783, 2764, 1744, 1297, 2810, 1273, 1297, 2766,
	4397, 3720, 2204, 1960, 4363, 3672, 840, 4357, 4315, 2809,
	4237, 4213, 2765, 4148, 666, 1963, 3802, 2866, 3794, 3781,
	2869, 694, 2871, 3725, 3727, 3653, 3423, 3724, 2917, 2599,
	3739, 2036, 3692, 1944, 4595, 4166, 3237, 4437, 4624, 3741,
	3133, 3134, 4438, 4359, 3747, 1617, 1297, 1742, 1743, 4437,
	3712, 1616, 1094, 1478, 4438, 3884, 3717, 2725, 2726, 2482,
	1216, 1094, 4569, 3818, 2723, 2724, 2914, 3668, 2725, 2914,
	2723, 1297, 1297, 1297, 2923, 2777, 3825, 2515, 1683, 3809,
	3801, 1682, 4238, 4198, 4012, 4007, 4006, 3880, 1297, 1214,
	1214, 3667, 3563, 3370, 3771, 3367, 1828, 1827, 1951, 3762,
	4610, 2952, 3770, 1297, 4576, 4401, 3813, 1282, 4400, 1355,
	4399, 3829, 4303, 4216, 4193, 3757, 4146, 3679, 3810, 4144,
	4142, 3680, 4041, 4027, 3978, 3788, 3935, 3840, 3822, 3789,
	3776, 3812, 3705, 1355, 3699, 3427, 1094, 1094, 3426, 1102,
	3304, 3254, 1094, 1094, 1963, 2992, 3841, 1094, 1094, 1210,
	1094, 2994, 2975, 2974, 1094, 3796, 3756, 3793, 2973, 2972,
	2901, 2874, 3708, 2756, 3710, 1094, 2693, 2688, 2678, 1951,
	3811, 2677, 3814, 2666, 2447, 3819, 2322, 2302, 2299, 3820,
	3288, 1094, 3824, 2298, 2297, 261, 261, 261, 2296, 672,
	673, 2295, 688, 672, 688, 698, 3830, 3831, 738, 3758,
	3848, 3832, 756, 3849, 3839, 3865, 3838, 762, 3847, 1458,
	3775, 3835, 3866, 3836, 261, 2214, 2188, 2184, 3878, 2183,
	2182, 2181, 2180, 2004, 2003, 2002, 2000, 1935, 1699, 3748,
	1698, 1957, 1640, 1525, 869, 3798, 3859, 1524, 1523, 1522,
	261, 1216, 1521, 1960, 1520, 1519, 1514, 1510, 1508, 1216,
	1507, 1464, 1463, 1355, 1462, 1355, 3874, 1461, 3919, 1346,
	1345, 1344, 1216, 1343, 1342, 1211, 1211, 1310, 1309, 1259,
	1258, 1257, 1256, 1297, 1297, 1255, 1254, 1253, 1251, 1246,
	1245, 1244, 1355, 1243, 2078, 1242, 1174, 2041, 996, 2079,
	982, 4320, 3961, 2318, 1692, 3854, 92, 1516, 826, 86,
	2149, 3704, 953, 4434, 1500, 4342, 1216, 834, 1216, 4419,
	3940, 3941, 3904, 3222, 3790, 3306, 2830, 2280, 1641, 2282,
	3971, 3217, 2641, 4389, 3888, 3095, 4295, 4118, 2485, 1297,
	3970, 1832, 3922, 3981, 3174, 3983, 3984, 88, 1078, 1355,
	1124, 1297, 4037, 4036, 1297, 3948, 3911, 1214, 3691, 1212,
	2942, 4034, 4033, 1355, 3921, 1948, 3918, 3967, 1950, 3967,
	1957, 1044, 3944, 672, 672, 1212, 3925, 3926, 3916, 3917,
	3929, 261, 1960, 1358, 3915, 4011, 4456, 4013, 174, 2052,
	1084, 2068, 3920, 1297, 1297, 3982, 3946, 1998, 1998, 2061,
	2679, 2559, 1101, 1098, 1952, 1212, 1954, 1100, 1099, 1953,
	1851, 1097, 2080, 1297, 1947, 4031, 3800, 2921, 3453, 1566,
	1564, 955, 2056, 2441, 2469, 1355, 3084, 1825, 1059, 2084,
	1297, 1080, 2466, 1235, 1069, 1058, 3200, 4028, 1210, 1210,
	4014, 3179, 4005, 3440, 1998, 3652, 2354, 844, 3130, 2472,
	1226, 4025, 2582, 2575, 2571, 1216, 3987, 3264, 2911, 1712,
	4059, 4132, 1804, 4070, 2922, 1297, 1297, 1297, 3996, 4090,
	1340, 3999, 4019, 1062, 2439, 1816, 3064, 4087, 1355, 2364,
	4024, 1998, 4000, 3447, 3220, 2672, 4441, 3571, 2192, 1190,
	1094, 1094, 1094, 1189, 4026, 1233, 3986, 1951, 1188, 4425,
	2081, 2086, 4071, 1998, 4065, 1998, 3967, 4032, 1355, 3995,
	4074, 4056, 3998, 1094, 4422, 4047, 1094, 1094, 2139, 3833,
	3402, 2044, 4079, 2717, 1794, 3410, 1094, 1074, 4072, 1963,
	4055, 1457, 1998, 1211, 1094, 1094, 1998, 3185, 1214, 3472,
	1527, 1951, 1951, 761, 2628, 4173, 1214, 1086, 1793, 1355,
	2851, 1297, 3997, 2850, 4312, 4094, 1326, 1324, 1323, 1214,
	4110, 1322, 4093, 4583, 4646, 3700, 4096, 228, 4099, 3032,
	1951, 1951, 1355, 4105, 1733, 1725, 225, 4098, 227, 226,
	1094, 1282, 4042, 2082, 3657, 4115, 3226, 4510, 3722, 1094,
	3394, 23, 22, 21, 112, 42, 20, 1094, 128, 147,
	1963, 1951, 146, 1214, 120, 1214, 145, 4121, 144, 1094,
	143, 142, 1094, 149, 141, 140, 4058, 135, 139, 3319,
	3320, 138, 137, 3321, 1094, 2076, 136, 4138, 4139, 2088,
	134, 1355, 132, 1814, 2204, 4151, 133, 1819, 1297, 127,
	131, 4127, 4176, 1297, 1297, 130, 129, 126, 125, 124,
	4141, 123, 122, 121, 119, 4150, 118, 4152, 117, 116,
	115, 114, 113, 3357, 3358, 752, 749, 3359, 1212, 61,
	4159, 60, 111, 110, 19, 40, 14, 65, 66, 2074,
	4228, 18, 3404, 4203, 13, 35, 91, 102, 1355, 101,
	36, 1297, 4219, 99, 98, 34, 1210, 17, 16, 15,
	4192, 4194, 1291, 4190, 96, 95, 33, 31, 4252, 1216,
	1216, 11, 263, 9, 1211, 8, 4200, 37, 1912, 2075,
	4236, 4208, 1211, 12, 4247, 5, 4209, 179, 178, 1094,
	1094, 4271, 4272, 181, 4217, 1211, 4212, 177, 180, 90,
	4256, 176, 1214, 175, 4211, 1957, 1094, 1963, 4227, 4250,
	4275, 89, 29, 10, 171, 4206, 4229, 1960, 1467, 3786,
	3967, 3967, 81, 4248, 173, 4182, 172, 4244, 170, 4249,
	169, 4255, 168, 4232, 82, 79, 4269, 4074, 4254, 1211,
	167, 1211, 1094, 85, 166, 1094, 80, 84, 83, 1502,
	27, 6, 1216, 64, 7, 4100, 4205, 4284, 4285, 3494,
	105, 106, 4283, 38, 1216, 2083, 77, 76, 4195, 4308,
	75, 26, 63, 25, 212, 1539, 1957, 211, 210, 209,
	208, 207, 4287, 206, 1228, 205, 4331, 200, 1960, 199,
	204, 202, 4304, 201, 203, 4307, 198, 215, 214, 4207,
	1580, 1951, 220, 3967, 2087, 219, 1094, 1094, 218, 217,
	216, 4330, 4184, 4185, 1593, 3967, 1094, 1248, 4324, 4293,
	213, 1216, 222, 4346, 1216, 197, 196, 4325, 1297, 261,
	195, 261, 261, 193, 1277, 261, 1287, 1210, 1297, 1297,
	4199, 4338, 4201, 4366, 4202, 1210, 4368, 1307, 189, 188,
	192, 194, 4340, 191, 190, 1297, 756, 187, 1210, 1057,
	4358, 221, 4353, 72, 4361, 164, 165, 71, 1619, 1094,
	1094, 4385, 3967, 4386, 4360, 3967, 163, 4380, 1211, 1094,
	261, 162, 261, 261, 1277, 161, 261, 261, 160, 4374,
	4377, 4365, 1287, 159, 4354, 4355, 4378, 4379, 158, 4376,
	4373, 157, 1210, 261, 1210, 1480, 70, 1212, 1212, 2204,
	24, 2, 1, 4383, 4232, 1094, 1094, 4394, 1094, 4384,
	4412, 0, 0, 1957, 0, 4398, 1504, 1282, 4416, 0,
	1951, 0, 0, 0, 0, 1960, 0, 4393, 4439, 0,
	0, 0, 0, 0, 4443, 1529, 0, 0, 1287, 0,
	0, 0, 261, 261, 4436, 1277, 1214, 1214, 0, 4415,
	0, 4461, 4414, 0, 0, 0, 4424, 4427, 0, 4433,
	0, 1094, 1094, 1094, 756, 4464, 261, 261, 0, 0,
	0, 0, 4446, 4428, 0, 0, 4432, 4459, 4465, 0,
	0, 0, 4452, 0, 0, 0, 0, 0, 4460, 869,
	0, 1094, 0, 0, 4429, 4495, 0, 0, 0, 4494,
	0, 0, 4478, 4479, 0, 0, 0, 4481, 0, 4480,
	0, 0, 0, 0, 0, 0, 0, 4513, 4499, 0,
	0, 0, 0, 0, 4339, 0, 0, 0, 0, 1214,
	4497, 1210, 0, 0, 0, 0, 0, 4520, 4524, 4536,
	0, 1214, 0, 0, 1998, 1094, 0, 0, 4522, 0,
	4535, 0, 0, 0, 0, 4534, 4521, 0, 4541, 0,
	0, 4528, 0, 261, 0, 4529, 0, 4530, 0, 0,
	4532, 4533, 0, 0, 0, 4557, 4538, 0, 0, 0,
	0, 0, 261, 0, 4553, 0, 4549, 0, 4551, 0,
	4561, 0, 4560, 0, 1216, 0, 1216, 4562, 1214, 4578,
	2087, 1214, 4443, 4547, 4548, 0, 4564, 4579, 4573, 0,
	4584, 0, 4590, 4568, 0, 4581, 4580, 0, 4582, 4346,
	4577, 4588, 1211, 1211, 4585, 4424, 4589, 0, 4427, 0,
	0, 0, 0, 4603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3967, 4602, 3967, 0, 4605,
	0, 0, 0, 0, 4609, 1212, 0, 0, 0, 0,
	4611, 4618, 0, 0, 0, 0, 1094, 1094, 4614, 0,
	4612, 0, 0, 4616, 0, 1094, 4619, 1094, 1094, 4622,
	0, 0, 0, 0, 0, 4631, 4628, 4637, 0, 4634,
	0, 4640, 4642, 0, 4641, 4639, 0, 0, 0, 4635,
	4638, 0, 0, 2923, 0, 1211, 4649, 0, 4650, 4645,
	4636, 0, 0, 4652, 0, 0, 4654, 1211, 4655, 0,
	0, 4651, 0, 4657, 0, 0, 4660, 0, 3797, 4653,
	0, 0, 0, 0, 1094, 4665, 0, 4667, 0, 0,
	4662, 4668, 4661, 4670, 4671, 4629, 4630, 0, 4664, 4657,
	0, 0, 0, 0, 4509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1353, 0, 0, 0,
	1452, 0, 1458, 0, 1211, 0, 0, 1211, 0, 0,
	672, 0, 0, 0, 0, 1210, 1210, 3133, 3134, 0,
	3151, 3152, 3153, 0, 0, 1951, 0, 0, 3850, 0,
	0, 261, 4666, 261, 0, 0, 0, 261, 2445, 3871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1480, 1277, 261, 1814, 261, 0, 0, 0, 0, 0,
	261, 1480, 688, 1742, 1743, 0, 1212, 261, 1480, 0,
	0, 0, 0, 0, 1212, 0, 0, 0, 0, 0,
	0, 0, 2005, 0, 0, 0, 1773, 1212, 0, 0,
	0, 0, 3148, 1745, 261, 0, 1951, 0, 1210, 1282,
	0, 261, 0, 0, 0, 1998, 0, 2581, 0, 0,
	1210, 1214, 0, 1214, 0, 0, 0, 1998, 0, 0,
	1998, 0, 0, 0, 0, 0, 1742, 1743, 1744, 0,
	0, 1212, 0, 1212, 0, 0, 0, 0, 1764, 0,
	0, 756, 0, 0, 1057, 0, 0, 1761, 1057, 1773,
	0, 0, 0, 1742, 1743, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 1439, 0, 0, 1210, 1439, 0,
	1210, 0, 0, 0, 0, 0, 1773, 0, 0, 1998,
	0, 0, 0, 1745, 0, 0, 3139, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1743, 0, 1744, 0,
	0, 0, 1767, 1768, 1769, 1770, 0, 0, 1764, 0,
	0, 0, 1750, 0, 2234, 0, 0, 0, 1773, 0,
	0, 0, 0, 1951, 0, 1745, 0, 0, 0, 3154,
	1291, 2248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2250, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 2258, 0, 2261, 2262, 2263, 1772, 1774,
	1744, 0, 0, 0, 0, 0, 0, 1211, 0, 1211,
	0, 3149, 0, 0, 0, 1750, 0, 0, 0, 0,
	261, 0, 0, 261, 1759, 1760, 0, 0, 0, 0,
	0, 0, 1767, 1768, 1769, 1770, 4040, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 4057,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 1772, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4078, 0, 0, 0, 261, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 261, 0, 1772, 1774,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 2359,
	0, 0, 0, 0, 1750, 0, 0, 0, 261, 0,
	261, 0, 0, 0, 672, 0, 261, 0, 0, 0,
	1765, 0, 0, 0, 1998, 0, 0, 0, 756, 0,
	0, 0, 869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1743, 1765, 0, 0,
	1772, 1774, 0, 0, 0, 3150, 0, 261, 0, 1277,
	261, 0, 0, 1927, 0, 0, 0, 0, 1773, 0,
	1210, 0, 1210, 0, 756, 1745, 0, 0, 0, 0,
	1771, 261, 0, 0, 1079, 109, 0, 0, 2279, 0,
	3061, 3062, 0, 261, 261, 0, 261, 0, 261, 0,
	261, 1766, 261, 0, 0, 0, 0, 0, 0, 1765,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 0, 0, 2311, 0, 0, 2312, 1761,
	2313, 0, 0, 0, 0, 0, 0, 0, 2577, 0,
	0, 0, 261, 0, 1212, 1212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 738, 0, 0,
	1771, 756, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 3526, 0, 0, 2072, 3145, 3146, 3147,
	0, 1766, 0, 0, 3144, 3142, 3143, 3135, 3136, 3137,
	3138, 3140, 3141, 0, 1767, 1768, 1769, 1770, 0, 0,
	2581, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1212, 0, 0,
	0, 1439, 0, 0, 3156, 3157, 3158, 1762, 1758, 1212,
	1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 1018,
	1772, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	1038, 0, 0, 0, 0, 3133, 3134, 0, 3151, 3152,
	3153, 0, 0, 0, 0, 0, 1759, 1760, 0, 0,
	2581, 2581, 0, 0, 0, 0, 1212, 3870, 0, 1212,
	0, 0, 0, 0, 2709, 1291, 1746, 1747, 1748, 1749,
	1751, 1752, 0, 0, 0, 0, 1200, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 2170, 0, 672, 0,
	1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 1057, 0,
	3148, 0, 672, 0, 1439, 0, 0, 0, 0, 261,
	0, 672, 0, 0, 0, 0, 0, 0, 4344, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	1287, 0, 4364, 1753, 1754, 1746, 1747, 1748, 1749, 1751,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1743, 0, 0, 0,
	0, 0, 2854, 0, 2581, 2581, 2581, 261, 1287, 0,
	0, 688, 1771, 0, 3139, 0, 0, 0, 1773, 0,
	0, 2692, 0, 0, 0, 1745, 0, 261, 0, 0,
	261, 0, 0, 1766, 261, 0, 261, 0, 0, 1742,
	1743, 1277, 0, 261, 261, 0, 1287, 1287, 2708, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	1744, 0, 1773, 0, 1439, 0, 0, 0, 0, 1745,
	1764, 0, 0, 0, 0, 0, 0, 3154, 0, 1761,
	0, 0, 4447, 0, 0, 0, 0, 0, 4449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2745, 0,
	0, 0, 0, 0, 1744, 2968, 0, 0, 0, 261,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 3149,
	0, 0, 261, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3525, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1212,
	0, 1212, 0, 0, 1767, 1768, 1769, 1770, 0, 2378,
	0, 0, 261, 0, 1750, 0, 0, 0, 0, 1762,
	1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751,
	1752, 0, 0, 0, 0, 0, 0, 0, 261, 2864,
	0, 3022, 0, 0, 0, 0, 0, 0, 1767, 1768,
	1769, 1770, 0, 0, 0, 0, 0, 0, 1750, 0,
	1772, 1774, 0, 1480, 0, 0, 261, 0, 261, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2906, 1759, 1760, 0, 0,
	0, 0, 0, 0, 0, 2745, 2483, 672, 0, 2846,
	0, 0, 0, 0, 1772, 1774, 2935, 869, 0, 2745,
	2745, 0, 0, 3150, 0, 0, 0, 0, 0, 1765,
	0, 2577, 2577, 3528, 3529, 0, 261, 0, 0, 0,
	1759, 1760, 2838, 2836, 0, 0, 0, 0, 0, 2840,
	2842, 2832, 0, 0, 0, 261, 1277, 261, 0, 0,
	0, 1480, 0, 1480, 1287, 261, 0, 0, 1277, 0,
	1277, 0, 1277, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2651, 0, 261, 261, 261, 261, 1277, 0, 0,
	1277, 0, 261, 0, 261, 0, 0, 0, 0, 0,
	0, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599,
	3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609,
	0, 3613, 0, 0, 109, 261, 0, 0, 0, 0,
	0, 0, 1771, 261, 0, 3145, 3146, 3147, 0, 0,
	0, 0, 3144, 3142, 3143, 3135, 3136, 3137, 3138, 3140,
	3141, 0, 0, 1766, 1439, 2577, 2577, 2577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	109, 0, 109, 0, 109, 0, 0, 0, 2834, 0,
	0, 0, 0, 2581, 2581, 0, 0, 0, 0, 2848,
	0, 0, 1480, 1439, 0, 0, 2728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2847, 2839, 2837, 2841, 2843, 2833, 2835, 2849, 0, 1439,
	0, 0, 0, 0, 2845, 1038, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 0, 0, 2852, 0, 1762,
	1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751,
	1752, 2581, 2581, 2581, 2581, 2581, 2581, 2581, 2581, 2581,
	2581, 2581, 2581, 2581, 2581, 2581, 2581, 2581, 2581, 2581,
	0, 2581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 1758, 0, 1755, 1753, 1754, 1746,
	1747, 1748, 1749, 1751, 1752, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 3133, 3134, 0, 3151, 3152, 3153, 0, 0, 261,
	0, 0, 0, 0, 672, 0, 0, 0, 0, 672,
	0, 0, 672, 3537, 1439, 672, 672, 0, 0, 0,
	0, 672, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1018, 0, 3382, 0, 0,
	0, 0, 0, 0, 0, 1480, 3148, 0, 0, 0,
	0, 0, 0, 769, 0, 1807, 0, 261, 0, 0,
	2853, 261, 261, 0, 0, 0, 1439, 0, 3414, 2844,
	0, 0, 1812, 0, 0, 0, 1818, 0, 780, 0,
	3422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2745, 2745, 261, 0, 3279, 0, 0, 0, 0, 0,
	2745, 0, 0, 3290, 0, 0, 0, 0, 0, 0,
	0, 2745, 3290, 0, 2745, 3290, 0, 0, 3290, 0,
	0, 0, 3463, 3464, 0, 0, 0, 0, 0, 0,
	0, 261, 261, 3279, 0, 261, 0, 0, 0, 0,
	3139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3279, 0, 261, 0, 3348,
	3348, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 774, 0, 0, 0, 0, 0, 781, 2745, 0,
	2745, 0, 3371, 2745, 3279, 0, 0, 2745, 3279, 0,
	0, 779, 0, 0, 0, 0, 1904, 0, 1907, 0,
	109, 0, 0, 3154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 2577, 2577, 0, 0, 0, 0,
	0, 0, 261, 3398, 0, 0, 3400, 2745, 0, 778,
	261, 0, 0, 0, 261, 3149, 0, 1287, 0, 0,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 2906, 0, 0,
	1277, 0, 261, 0, 0, 2745, 0, 672, 0, 776,
	0, 0, 0, 0, 2745, 0, 0, 0, 0, 0,
	1890, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 2906, 0, 0, 2906,
	0, 0, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577,
	2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577,
	2577, 0, 2577, 0, 0, 0, 0, 0, 784, 0,
	0, 3499, 0, 0, 0, 0, 0, 0, 1742, 1743,
	0, 1775, 1776, 1777, 1785, 1786, 1787, 0, 3505, 3186,
	0, 1277, 261, 0, 261, 0, 0, 0, 0, 0,
	1277, 1773, 0, 0, 1126, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 3150,
	0, 0, 3212, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 3225, 0, 0,
	771, 0, 0, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 3133, 3134, 0, 3151, 3152, 3153,
	3243, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	775, 0, 0, 0, 0, 0, 3536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4124, 0, 0, 732, 0, 0, 1043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 782, 0, 0,
	0, 0, 0, 773, 0, 0, 0, 0, 0, 3148,
	0, 0, 0, 0, 0, 0, 0, 1767, 1768, 1769,
	1770, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 3145, 3146, 3147, 0, 4162, 0, 1439, 3144, 3142,
	3143, 3135, 3136, 3137, 3138, 3140, 3141, 0, 0, 770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 261, 0, 1782, 0, 0, 1792, 0, 0,
	1439, 0, 0, 1772, 1774, 0, 0, 777, 0, 3754,
	1038, 0, 1038, 672, 672, 1439, 0, 0, 0, 0,
	1788, 734, 1789, 0, 0, 0, 0, 0, 0, 1759,
	1760, 0, 772, 3139, 0, 1480, 1480, 0, 1439, 0,
	0, 0, 0, 0, 0, 0, 1217, 1780, 0, 1480,
	1480, 1480, 0, 0, 0, 0, 0, 0, 0, 0,
	3225, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 0, 0, 3826, 3827, 3828, 0, 0,
	1057, 0, 0, 0, 0, 0, 3154, 0, 0, 0,
	0, 0, 1291, 0, 1790, 0, 0, 0, 0, 0,
	0, 2581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 756, 0, 0, 0, 0, 0,
	0, 4292, 0, 0, 0, 0, 0, 0, 3149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3348, 0, 0, 0, 0,
	1742, 1743, 0, 0, 0, 2581, 261, 0, 0, 1018,
	0, 0, 1018, 1018, 0, 0, 0, 1439, 0, 0,
	0, 0, 0, 1773, 0, 1771, 3279, 0, 261, 0,
	1745, 0, 0, 0, 0, 1452, 0, 0, 1353, 261,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 261, 1744, 0, 2438, 1439, 261,
	0, 0, 1783, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 0, 1038, 1761, 0, 0, 0, 2745, 261,
	0, 0, 1812, 0, 0, 0, 1812, 0, 2935, 2935,
	0, 0, 0, 0, 869, 869, 2745, 0, 0, 0,
	2906, 2906, 3548, 0, 869, 2745, 0, 0, 0, 0,
	0, 0, 3150, 0, 0, 0, 0, 3931, 3932, 3564,
	0, 0, 0, 0, 0, 0, 261, 0, 3050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	1768, 1769, 1770, 0, 0, 0, 0, 0, 1200, 1750,
	0, 2581, 0, 1781, 0, 0, 0, 0, 1756, 1757,
	1763, 1784, 1762, 1758, 1907, 1755, 1753, 1754, 1746, 1747,
	1748, 1749, 1751, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1439, 0, 0, 1439, 0, 3889, 0,
	0, 0, 0, 0, 0, 1772, 1774, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 1759, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3145, 3146, 3147, 0, 0, 3655,
	0, 3144, 3142, 3143, 3135, 3136, 3137, 3138, 3140, 3141,
	261, 0, 0, 0, 1765, 0, 1480, 0, 261, 0,
	1439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 1439, 0, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4095,
	0, 4097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1043, 0, 2745, 2745, 1043, 3348, 2745, 0,
	0, 0, 0, 0, 0, 3969, 0, 3969, 1480, 0,
	0, 0, 0, 0, 0, 0, 0, 2745, 0, 3290,
	0, 0, 0, 1480, 1480, 261, 3279, 0, 0, 0,
	0, 0, 2577, 0, 0, 0, 0, 109, 0, 3279,
	0, 261, 3279, 0, 261, 1482, 0, 1488, 0, 1494,
	0, 0, 1217, 0, 0, 0, 0, 0, 0, 2745,
	0, 2745, 261, 0, 0, 4143, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 2577, 0, 1766, 2745,
	0, 0, 0, 0, 4044, 0, 1217, 1439, 0, 0,
	1217, 0, 0, 0, 0, 261, 0, 0, 1217, 0,
	0, 0, 0, 0, 1583, 261, 1588, 109, 0, 0,
	109, 0, 109, 0, 0, 0, 1597, 0, 1602, 0,
	0, 0, 0, 3133, 3134, 0, 3151, 3152, 3153, 1217,
	0, 0, 0, 0, 3969, 0, 0, 1480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4210, 0, 0,
	0, 0, 0, 0, 0, 1217, 109, 0, 0, 109,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1217, 0, 0, 0, 0,
	1217, 0, 1664, 0, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 0, 0, 0, 3148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 1743, 0, 0, 1762, 1758, 0, 1755, 1753, 1754,
	1746, 1747, 1748, 1749, 1751, 1752, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 109, 0, 0, 0, 0,
	1745, 0, 2577, 0, 0, 0, 0, 2745, 1217, 3290,
	0, 0, 4154, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 4174, 0, 4174,
	0, 0, 0, 0, 0, 1744, 0, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 0, 1764, 0, 0, 0, 0,
	756, 0, 3139, 0, 1761, 0, 0, 0, 0, 0,
	0, 1277, 0, 0, 73, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 1826, 0, 3279, 0, 261, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 78, 4154, 3924,
	0, 0, 0, 0, 0, 0, 2745, 0, 3043, 0,
	0, 0, 0, 0, 2438, 3154, 0, 0, 0, 0,
	0, 1439, 0, 0, 4241, 0, 3937, 0, 0, 1767,
	1768, 1769, 1770, 0, 0, 1812, 1480, 87, 0, 1750,
	0, 0, 1291, 1291, 0, 1439, 0, 0, 3969, 3969,
	0, 0, 0, 0, 0, 0, 0, 3149, 0, 1291,
	0, 0, 0, 0, 0, 0, 261, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 863, 0, 1884,
	1884, 1884, 0, 0, 0, 1772, 1774, 0, 0, 0,
	3569, 107, 0, 0, 0, 0, 93, 104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3348, 4306, 0,
	0, 1759, 1760, 0, 0, 4154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3969, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 1439, 0, 1439, 0, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 1217, 0,
	0, 0, 0, 0, 4044, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 1439, 0, 0, 0, 1200, 0,
	3969, 3150, 261, 3969, 0, 0, 0, 0, 0, 0,
	0, 1964, 1353, 3290, 1200, 1217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1480,
	0, 1480, 4116, 0, 0, 0, 0, 0, 0, 0,
	0, 1439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1439, 0, 1771, 0, 0,
	0, 0, 0, 4408, 0, 0, 0, 2669, 0, 0,
	0, 1217, 0, 4116, 0, 0, 4174, 0, 1766, 261,
	0, 0, 1217, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 2378, 0, 2745, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1439, 0, 261,
	0, 0, 0, 3145, 3146, 3147, 0, 0, 0, 0,
	3144, 3142, 3143, 3135, 3136, 3137, 3138, 3140, 3141, 182,
	100, 0, 103, 0, 0, 0, 3569, 0, 0, 109,
	109, 0, 0, 109, 0, 2378, 0, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 229, 0, 0, 0,
	1439, 0, 0, 0, 864, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 109, 109, 0, 0, 109, 0, 0,
	1439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 1762, 1758, 0, 1755, 1753, 1754,
	1746, 1747, 1748, 1749, 1751, 1752, 0, 0, 0, 0,
	0, 0, 4154, 0, 0, 0, 1217, 1217, 0, 150,
	0, 1439, 0, 0, 0, 0, 1217, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 1439, 0, 2745, 0, 0, 0,
	0, 0, 0, 3969, 223, 3969, 0, 0, 1480, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 0,
	1038, 0, 0, 0, 1057, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 109, 0, 0, 0, 0,
	0, 0, 1480, 1439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1217, 0, 1217, 0, 1217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2935, 0,
	1217, 1217, 0, 0, 0, 0, 0, 2745, 0, 0,
	0, 1217, 0, 0, 0, 0, 0, 0, 0, 0,
	1439, 0, 2935, 1217, 0, 1217, 1217, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2353, 0, 2357, 0, 0, 0, 0, 0, 0,
	2371, 0, 0, 0, 0, 0, 0, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 0, 2420, 0, 2422, 2423, 2424, 2425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 73,
	0, 0, 2464, 0, 0, 0, 0, 1964, 1964, 1217,
	0, 0, 0, 0, 0, 0, 74, 0, 2494, 2497,
	2500, 2503, 0, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	0, 0, 78, 0, 0, 0, 0, 0, 1057, 1057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2573, 0, 2584, 2586, 2591, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 1200, 1200, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 863, 0, 78, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 87, 0, 1742, 1743, 1217, 1775,
	1776, 1777, 1785, 1786, 1787, 1217, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 0, 0, 0, 1778, 1773,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 94,
	0, 1217, 0, 0, 863, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 1742, 1743, 0, 1775, 1776, 1777,
	1785, 1786, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 1773, 0, 0,
	0, 94, 0, 0, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 1217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 1744,
	0, 0, 0, 0, 0, 1767, 1768, 1769, 1770, 1764,
	0, 0, 0, 0, 0, 1750, 0, 0, 1761, 0,
	0, 0, 97, 0, 1200, 0, 1217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2867, 2868, 0, 2870, 0, 0,
	0, 0, 1782, 0, 0, 1792, 0, 0, 0, 0,
	1964, 1772, 1774, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 182, 100, 0, 103, 1788, 0,
	1789, 0, 0, 0, 0, 0, 0, 1759, 1760, 0,
	0, 0, 0, 1767, 1768, 1769, 1770, 0, 1217, 0,
	0, 229, 0, 1750, 97, 1780, 0, 0, 0, 864,
	0, 0, 1217, 0, 148, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 1792, 0, 0, 0, 0, 231, 1772,
	1774, 0, 0, 0, 0, 1217, 182, 100, 0, 103,
	0, 0, 1790, 0, 0, 0, 1788, 0, 1789, 0,
	0, 0, 2993, 0, 150, 1759, 1760, 0, 0, 0,
	1779, 0, 0, 229, 0, 0, 1217, 0, 0, 186,
	0, 864, 0, 1780, 0, 0, 148, 230, 1217, 109,
	1217, 0, 0, 0, 0, 1200, 0, 0, 1765, 223,
	0, 0, 0, 1200, 0, 1217, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 1795, 1796, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 1779, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 3044, 3045, 0, 0,
	1783, 223, 3051, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3065, 3066, 0, 0, 0, 0, 2464, 0, 0,
	0, 0, 1577, 0, 0, 0, 3073, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 109, 0, 0, 3099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 109, 0, 0, 0, 1756, 1757, 1763, 1784,
	1762, 1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749,
	1751, 1752, 0, 0, 0, 0, 3108, 0, 0, 0,
	3109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2591, 2591,
	2591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 1781,
	0, 3190, 0, 0, 1756, 1757, 1763, 1784, 1762, 1758,
	0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752,
	0, 0, 0, 0, 2460, 0, 0, 0, 2461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 1743, 0, 1775, 1776, 1777, 1785, 1786,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 1217, 1217,
	0, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1043, 0, 0, 1744, 0, 0,
	0, 0, 1217, 0, 0, 0, 0, 1764, 1043, 0,
	0, 0, 0, 0, 1217, 0, 1761, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	1217, 3309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1217, 1217, 0, 0, 0,
	0, 0, 0, 0, 0, 2438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 1768, 1769, 1770, 0, 0, 0, 0, 0,
	0, 1750, 1217, 0, 0, 1742, 1743, 1964, 1775, 1776,
	1777, 1785, 1786, 1787, 0, 0, 0, 0, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 1773, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 1782, 1217,
	0, 1792, 0, 0, 1791, 0, 0, 1772, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1217, 0, 1217, 262, 262, 262, 0, 0, 0,
	1744, 0, 0, 1759, 1760, 0, 0, 0, 0, 1217,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1217, 1780, 0, 262, 1217, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1217, 0, 262,
	0, 0, 109, 0, 1217, 0, 1217, 0, 0, 0,
	1217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1217, 0, 0, 0, 1767, 1768, 1769, 1770, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1217, 1217, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 0, 1792, 0, 0, 2371, 0, 0,
	1772, 1774, 0, 3523, 3524, 1217, 0, 3527, 0, 1771,
	0, 3530, 0, 0, 0, 0, 0, 1788, 0, 1789,
	3534, 0, 109, 0, 0, 0, 1759, 1760, 109, 3541,
	1766, 0, 3190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 1217, 0, 3553, 1217, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 3576, 3577, 0,
	3578, 3579, 3580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3586, 0,
	0, 0, 3588, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 1964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 1217, 3616, 3617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1217,
	0, 3628, 0, 0, 0, 0, 0, 0, 0, 1964,
	1964, 0, 0, 0, 0, 0, 3637, 1781, 0, 0,
	0, 0, 1756, 1757, 1763, 1784, 1762, 1758, 73, 1755,
	1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 1964, 1964,
	0, 0, 1771, 0, 0, 74, 0, 0, 0, 0,
	0, 0, 1742, 1743, 0, 0, 0, 0, 1785, 1786,
	1787, 78, 0, 1766, 0, 0, 0, 0, 0, 1964,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 0, 1783,
	0, 1791, 3683, 0, 0, 0, 1217, 1217, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3694, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 1217,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 863, 0, 0, 3721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	93, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784, 1762,
	1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751,
	1752, 1767, 1768, 1769, 1770, 0, 0, 0, 94, 3895,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 0,
	0, 1792, 1884, 0, 0, 0, 0, 1772, 1774, 0,
	0, 3821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1217,
	0, 0, 1217, 1759, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1964,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1217, 0, 0, 0, 0, 0, 3867, 3868, 0, 0,
	0, 0, 3872, 3873, 1217, 0, 0, 3876, 3877, 0,
	0, 97, 0, 0, 3881, 1217, 1217, 1217, 0, 0,
	0, 0, 0, 0, 0, 3885, 0, 0, 262, 0,
	262, 262, 1217, 0, 262, 0, 1300, 0, 0, 0,
	0, 3890, 0, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 1217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 100, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1217, 0, 262,
	1300, 262, 262, 0, 1300, 262, 262, 0, 1964, 0,
	229, 0, 1300, 0, 0, 0, 0, 0, 864, 1771,
	0, 0, 262, 148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 1300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 1300,
	0, 262, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 1300,
	0, 0, 0, 0, 1300, 262, 262, 0, 186, 0,
	0, 0, 0, 0, 0, 1217, 230, 0, 1300, 0,
	0, 0, 0, 1217, 0, 0, 0, 1217, 223, 1217,
	0, 0, 0, 0, 0, 0, 1217, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1217, 1217, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1300, 0, 0, 0, 0, 1781, 0, 0,
	1217, 0, 1217, 0, 0, 1784, 1762, 1758, 0, 1755,
	1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 0, 0,
	0, 0, 262, 1217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 0, 1217, 0, 0, 1217, 0,
	0, 262, 0, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2552,
	2553, 2554, 2555, 2548, 2549, 2550, 2551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1217, 1217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4111, 4112, 4113, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1217,
	0, 0, 0, 2371, 1217, 0, 4122, 4123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4131, 4134, 0, 0, 0, 1217,
	2528, 2529, 2530, 2531, 0, 0, 0, 0, 0, 1217,
	1217, 1217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1217, 2540, 2541, 2542, 2543, 2536, 2537, 2538,
	2539, 2544, 2545, 2546, 2547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4175,
	0, 0, 1217, 0, 0, 0, 0, 4181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4188,
	0, 0, 1043, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4196, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 0, 1217, 2524, 2525, 2526, 2527,
	2532, 2533, 2534, 2535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 0,
	0, 262, 262, 262, 1964, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1217, 0, 0, 0, 0,
	0, 0, 1217, 262, 0, 0, 0, 1217, 1217, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 0, 0, 0, 0,
	0, 0, 1217, 0, 0, 1217, 1300, 0, 0, 0,
	0, 0, 4311, 0, 0, 4314, 0, 0, 0, 0,
	0, 0, 0, 1217, 1217, 0, 0, 0, 0, 0,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1743, 0, 1775, 1776,
	1777, 1785, 1786, 1787, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 1778, 1773, 0,
	0, 0, 0, 0, 0, 1745, 1043, 1043, 0, 0,
	0, 0, 0, 0, 1791, 0, 4362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 1217, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2371, 0, 0, 0, 0, 0, 0, 0, 0, 4134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	1300, 1300, 262, 0, 0, 0, 0, 0, 0, 0,
	1300, 0, 0, 0, 0, 1217, 0, 0, 1217, 0,
	0, 1090, 1217, 0, 0, 0, 1043, 0, 0, 0,
	0, 0, 1217, 1217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 1768, 1769, 1770, 0, 1217,
	0, 0, 0, 0, 1750, 262, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 262, 0, 260, 260, 260,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4477, 4477, 4477, 0, 0, 0, 262, 0, 262,
	0, 1782, 0, 0, 1792, 262, 797, 0, 0, 0,
	1772, 1774, 0, 0, 1300, 0, 1300, 0, 1300, 0,
	0, 4498, 0, 0, 0, 0, 0, 1788, 0, 1789,
	0, 0, 797, 0, 1300, 1300, 1759, 1760, 0, 0,
	0, 0, 0, 0, 0, 1300, 262, 0, 0, 262,
	0, 0, 0, 0, 1780, 0, 0, 1300, 0, 1300,
	1300, 1300, 0, 0, 0, 0, 0, 0, 0, 1765,
	262, 0, 0, 0, 0, 4477, 0, 0, 0, 0,
	1206, 0, 262, 262, 0, 262, 0, 262, 0, 262,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 256, 668, 1779,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 0, 4477, 4623, 0, 0,
	0, 0, 0, 0, 0, 4627, 0, 0, 1217, 0,
	1217, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784, 1762,
	1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751,
	1752, 0, 262, 0, 0, 1300, 0, 0, 0, 3539,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	1743, 0, 1775, 1776, 1777, 1785, 1786, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 1773, 0, 0, 0, 262, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 262,
	0, 0, 0, 262, 0, 262, 0, 0, 0, 0,
	0, 0, 262, 262, 1744, 0, 0, 0, 1300, 1300,
	0, 0, 262, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 701, 0, 0, 0, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 703, 0, 0, 1767, 1768,
	1769, 1770, 0, 0, 0, 0, 704, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 1300, 0, 0, 0, 0, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 262, 1792, 724,
	0, 0, 0, 0, 1772, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	0, 1788, 0, 1789, 0, 262, 0, 262, 0, 1300,
	1759, 1760, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 260, 707, 260, 260, 0, 0, 260, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 0, 0, 1765, 708, 0, 0, 709, 0, 0,
	0, 0, 1300, 0, 1300, 0, 0, 0, 0, 0,
	0, 0, 0, 733, 0, 262, 0, 0, 0, 1300,
	0, 0, 260, 0, 260, 260, 0, 0, 260, 260,
	0, 0, 0, 0, 262, 1790, 262, 723, 0, 0,
	0, 0, 0, 0, 262, 797, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 262, 262, 262, 0, 0, 0, 0,
	0, 262, 0, 262, 260, 260, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 260, 260,
	1263, 0, 1263, 1263, 262, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 711, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 1456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 260, 0, 0, 0, 0, 713,
	0, 0, 0, 728, 729, 726, 0, 0, 0, 0,
	0, 721, 0, 0, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 1581, 1582, 1756,
	1757, 1763, 1784, 1762, 1758, 0, 1755, 1753, 1754, 1746,
	1747, 1748, 1749, 1751, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 3111, 0, 715, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 0, 0, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 1691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	1300, 0, 0, 1906, 0, 1213, 262, 0, 0, 260,
	262, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 1906, 260, 0, 0, 0,
	0, 0, 797, 0, 0, 0, 0, 0, 0, 797,
	0, 262, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	262, 262, 0, 1300, 262, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 262, 1300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 1300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 0, 0, 0, 1300, 0,
	701, 0, 0, 0, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1922, 0,
	0, 1300, 0, 0, 0, 0, 0, 262, 1300, 0,
	1300, 0, 0, 1931, 1300, 1456, 0, 0, 0, 0,
	0, 262, 0, 0, 703, 0, 0, 0, 0, 262,
	0, 0, 1300, 262, 0, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 1263, 705, 0, 0, 0,
	0, 0, 1456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 724, 0,
	0, 0, 0, 0, 0, 0, 1300, 1300, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	0, 0, 260, 0, 0, 797, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 708, 0, 0, 709, 0, 0, 1300,
	0, 262, 1300, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 260, 0, 723, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 260, 0, 0, 0, 789, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 0, 720, 0, 0, 0, 260,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 817,
	0, 0, 0, 0, 818, 797, 260, 0, 260, 0,
	260, 0, 260, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 711, 0, 0, 2190, 0, 0,
	0, 2197, 0, 819, 0, 836, 0, 0, 0, 0,
	0, 0, 0, 2210, 260, 0, 0, 0, 0, 0,
	0, 0, 731, 0, 712, 0, 0, 0, 0, 2222,
	820, 2222, 0, 0, 0, 821, 0, 2229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 0, 0, 0, 845, 0, 0,
	0, 732, 0, 822, 0, 0, 0, 0, 713, 0,
	0, 0, 728, 729, 726, 0, 0, 843, 2197, 0,
	721, 2254, 0, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	816, 0, 2274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2287, 0, 2289, 0, 2291,
	0, 2293, 823, 2294, 715, 824, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 847, 0, 0, 0,
	0, 733, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 2316, 0, 0, 0, 0, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 846, 1213, 1300, 262, 0, 0,
	0, 0, 0, 0, 841, 0, 0, 0, 262, 0,
	0, 1213, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 262, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 262, 0,
	0, 260, 0, 0, 1300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 825, 0, 0, 0, 0, 0, 0, 1300,
	1300, 1300, 0, 827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1300, 0, 828, 0, 262, 0, 1300, 0, 260,
	0, 0, 260, 0, 0, 0, 260, 0, 260, 0,
	0, 0, 0, 0, 0, 260, 260, 0, 0, 837,
	0, 1300, 0, 0, 0, 260, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 814, 0, 838, 0, 0, 0, 0, 0, 0,
	0, 0, 829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 835, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 830, 260, 0, 0, 831, 850, 0,
	849, 0, 0, 0, 832, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 833, 0,
	0, 0, 0, 842, 0, 0, 0, 0, 0, 851,
	0, 848, 0, 0, 260, 0, 0, 734, 0, 0,
	0, 1300, 0, 1300, 0, 0, 0, 0, 2694, 0,
	0, 1263, 0, 0, 0, 1263, 1095, 1263, 0, 0,
	797, 1300, 1300, 0, 0, 0, 0, 0, 0, 0,
	1300, 0, 0, 0, 2210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	797, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 0, 0, 0, 262, 0, 0, 1300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 1300,
	262, 0, 1300, 262, 0, 0, 0, 0, 0, 0,
	0, 1300, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 262, 0, 1356, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 260, 0, 260,
	0, 1300, 1300, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 1456, 0, 0, 0, 0, 0, 0,
	0, 1300, 0, 0, 262, 0, 1298, 0, 0, 0,
	0, 0, 0, 1300, 262, 0, 0, 0, 1300, 0,
	0, 0, 0, 0, 0, 260, 260, 260, 260, 0,
	0, 0, 1298, 0, 260, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2197, 0, 0,
	0, 0, 1298, 1300, 1300, 1300, 2210, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 260, 0, 0,
	0, 1298, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 2977, 0, 2980, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 3005, 1456, 3007, 1456, 0, 0,
	0, 0, 0, 3013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1263, 0, 0, 1300,
	0, 0, 0, 0, 3041, 0, 1300, 262, 0, 0,
	0, 1300, 1300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 262, 0, 0, 0,
	0, 1213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1906, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 1743, 0, 1775, 1776, 1777, 1785, 1786, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 1773, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 260,
	1791, 0, 0, 260, 260, 0, 0, 0, 0, 0,
	1356, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 789, 0, 0, 0, 1744, 0, 0, 789,
	0, 0, 1298, 0, 260, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 1300, 0, 0,
	0, 0, 0, 260, 260, 0, 0, 260, 0, 0,
	0, 0, 0, 1300, 1906, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 1768, 1769, 1770, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 1356, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1263, 0,
	0, 0, 1456, 1456, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 1782, 0, 0,
	1792, 0, 0, 0, 797, 0, 1772, 1774, 262, 0,
	0, 0, 260, 3277, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 1788, 1299, 1789, 0, 0, 0, 0,
	0, 0, 1759, 1760, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1213, 0, 0, 0, 0, 0,
	1780, 0, 3326, 3328, 0, 0, 2210, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 1357, 0,
	0, 0, 1357, 0, 0, 0, 0, 260, 0, 262,
	1299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 1298, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 1790, 0, 0,
	0, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 260, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 0, 0,
	0, 3411, 1299, 0, 0, 3415, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 1298, 0, 1298,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 0, 1298, 1298, 0,
	0, 0, 0, 0, 0, 0, 3468, 0, 1298, 0,
	1299, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	1298, 0, 1298, 1298, 1298, 0, 0, 0, 0, 0,
	1742, 1743, 0, 1775, 1776, 1777, 1785, 1786, 1787, 0,
	0, 0, 0, 0, 0, 789, 0, 0, 0, 0,
	0, 0, 1778, 1773, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 3508, 0, 1456, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 3521, 0, 1213, 1213, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 1781, 0, 0, 0,
	0, 1756, 1757, 1763, 1784, 1762, 1758, 0, 1755, 1753,
	1754, 1746, 1747, 1748, 1749, 1751, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 3110, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	1768, 1769, 1770, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 1782, 0, 0, 1792,
	0, 0, 0, 0, 0, 1772, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 1789, 0, 0, 0, 0, 0,
	0, 1759, 1760, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 1357, 0, 0, 0, 0,
	260, 0, 1356, 0, 1765, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 1299, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 1356, 0,
	0, 260, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1213, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1357, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 1298, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 2210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3785, 0, 0, 1356, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2210, 0, 0, 0, 0,
	3803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1213, 0, 0, 1356, 0, 0, 1299, 1299,
	1213, 0, 0, 0, 0, 0, 0, 3852, 1357, 1298,
	0, 0, 0, 1906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 0, 0, 0, 0,
	1756, 1757, 1763, 1784, 1762, 1758, 0, 1755, 1753, 1754,
	1746, 1747, 1748, 1749, 1751, 1752, 0, 0, 0, 0,
	789, 0, 1298, 0, 3107, 0, 0, 1906, 0, 1906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 1298, 260, 1298, 0, 0,
	0, 0, 1299, 0, 1299, 0, 1299, 0, 0, 0,
	0, 0, 1298, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 1299, 1299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 0, 1299, 1299, 1299,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1906, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2210, 0, 0, 0, 1742, 1743, 0, 1775,
	1776, 1777, 1785, 1786, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 1773,
	0, 1357, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2210, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 4066, 0, 0, 0,
	0, 1764, 260, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	1743, 0, 1775, 1776, 1777, 1785, 1786, 1787, 1357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 1773, 0, 0, 0, 0, 0, 0, 1745,
	260, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1768, 1769, 1770, 0,
	0, 0, 0, 0, 1744, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 1357, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1906, 1906, 1782, 1357, 0, 1792, 1356, 0, 0, 0,
	0, 1772, 1774, 0, 0, 0, 0, 0, 260, 260,
	0, 4163, 0, 0, 0, 0, 0, 0, 1788, 0,
	1789, 0, 0, 0, 0, 0, 0, 1759, 1760, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1356, 1780, 0, 0, 1767, 1768,
	1769, 1770, 0, 0, 0, 0, 0, 0, 1750, 0,
	1765, 0, 0, 0, 0, 0, 0, 1356, 0, 2210,
	0, 0, 0, 1906, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 1298, 0, 1906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 1299, 1299, 1792, 0,
	0, 0, 1790, 0, 1772, 1774, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 1788, 0, 1789, 0, 0, 0, 0, 0, 1298,
	1759, 1760, 0, 0, 0, 0, 0, 0, 1357, 0,
	0, 0, 1906, 0, 260, 1906, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 4282, 1456, 0,
	0, 0, 0, 1765, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 1298, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 1790, 1356, 0, 0, 0,
	1357, 0, 0, 0, 0, 0, 0, 1298, 0, 0,
	0, 1298, 0, 1779, 1299, 0, 0, 0, 0, 0,
	1783, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 0, 0, 0, 0, 0,
	0, 1298, 0, 1298, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 789, 0, 0, 1299, 0, 0,
	0, 260, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 1298, 0, 0,
	0, 0, 0, 4367, 0, 0, 0, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	1299, 0, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 0, 1298,
	1298, 1781, 0, 1783, 0, 0, 1756, 1757, 1763, 1784,
	1762, 1758, 260, 1755, 1753, 1754, 1746, 1747, 1748, 1749,
	1751, 1752, 1298, 0, 0, 0, 0, 0, 0, 0,
	3106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1743, 0, 1775,
	1776, 1777, 1785, 1786, 1787, 0, 0, 0, 0, 0,
	4454, 0, 0, 0, 0, 1906, 0, 1906, 1778, 1773,
	0, 0, 0, 0, 1781, 0, 1745, 0, 0, 1756,
	1757, 1763, 1784, 1762, 1758, 1791, 1755, 1753, 1754, 1746,
	1747, 1748, 1749, 1751, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 3105, 0, 0, 0, 0, 0, 1356,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 1356, 0, 0, 0,
	1761, 4514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1768, 1769, 1770, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 0, 0, 1792, 1356, 0, 0, 0,
	0, 1772, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	1789, 0, 0, 0, 0, 0, 0, 1759, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 1357, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1357,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 1357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 1298, 1298, 1298, 0, 0, 0, 0, 0,
	0, 0, 0, 1299, 0, 1299, 0, 0, 0, 1298,
	0, 1742, 1743, 0, 1775, 1776, 1777, 1785, 1786, 1787,
	0, 1357, 0, 0, 1298, 0, 0, 0, 0, 0,
	1356, 0, 1299, 1778, 1773, 0, 1299, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 1356, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 1299, 0, 1299, 0,
	0, 0, 1357, 0, 0, 0, 1744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	1299, 1781, 0, 0, 0, 1761, 1756, 1757, 1763, 1784,
	1762, 1758, 1299, 1755, 1753, 1754, 1746, 1747, 1748, 1749,
	1751, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	2461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 0, 0,
	1767, 1768, 1769, 1770, 1356, 0, 1356, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 1298, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 1357, 0, 0,
	1357, 0, 0, 0, 0, 0, 0, 1782, 0, 0,
	1792, 0, 0, 0, 0, 0, 1772, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 1789, 0, 0, 0, 0,
	1298, 0, 1759, 1760, 0, 0, 0, 0, 0, 0,
	1356, 0, 1298, 0, 0, 1298, 0, 0, 0, 0,
	1780, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1357, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1357, 0, 0, 1298, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 0, 0, 0,
	0, 1298, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 1298, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 1357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	1356, 0, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 1743, 0, 1775, 1776, 1777, 1785, 1786, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 1778, 1773, 0, 0, 0, 0, 1298,
	0, 1745, 0, 0, 1298, 1298, 1781, 0, 0, 0,
	1791, 1756, 1757, 1763, 1784, 1762, 1758, 0, 1755, 1753,
	1754, 1746, 1747, 1748, 1749, 1751, 1752, 0, 0, 0,
	0, 4409, 0, 0, 0, 0, 1744, 0, 0, 0,
	0, 1299, 0, 0, 1299, 0, 1764, 0, 0, 1356,
	0, 0, 1298, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 1299, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 1768, 1769, 1770, 1299, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 0, 1357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 0, 1357,
	1792, 0, 0, 0, 0, 0, 1772, 1774, 0, 0,
	0, 0, 0, 0, 1742, 1743, 0, 1775, 1776, 1777,
	1785, 1786, 1787, 1788, 0, 1789, 0, 0, 0, 0,
	0, 0, 1759, 1760, 0, 0, 1778, 1773, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 1298,
	1780, 0, 0, 1791, 0, 0, 0, 0, 0, 1298,
	1298, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1357,
	0, 1357, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1299,
	1299, 0, 0, 0, 0, 0, 0, 0, 1357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 1768, 1769, 1770, 0, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1357, 0, 1299, 0, 1766,
	1299, 0, 0, 0, 0, 0, 0, 0, 0, 1357,
	1782, 0, 0, 1792, 0, 0, 0, 0, 0, 1772,
	1774, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 1789, 1299,
	1299, 0, 0, 0, 0, 1759, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1299,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 1357, 0, 0, 0, 0, 1299, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1299, 1299, 1299, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 1357, 0, 1781, 0, 0, 0,
	0, 1756, 1757, 1763, 1784, 1762, 1758, 0, 1755, 1753,
	1754, 1746, 1747, 1748, 1749, 1751, 1752, 0, 0, 0,
	0, 4405, 0, 0, 1357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1357, 0, 1299, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1357, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1357, 0, 0,
	0, 0, 0, 0, 1299, 0, 0, 0, 0, 1299,
	1299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1357, 0, 0, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 0, 0, 1756, 1757, 1763, 1784, 1762, 1758,
	0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 1299, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 1359, 277, 278, 1360, 1361,
	1362, 1299, 1363, 614, 1364, 1365, 1366, 1367, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 1368, 619, 289, 290, 291, 292,
	293, 294, 1369, 1370, 0, 295, 620, 621, 622, 1371,
	296, 297, 623, 1372, 1301, 1373, 298, 299, 300, 301,
	302, 303, 304, 0, 1374, 306, 307, 308, 305, 309,
	1375, 310, 0, 311, 312, 313, 314, 315, 316, 1376,
	317, 318, 319, 1158, 320, 321, 322, 1377, 1378, 1380,
	1379, 1381, 1382, 1383, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 1384, 332, 329, 330, 1385, 333, 331,
	334, 1386, 335, 336, 337, 1387, 1388, 338, 339, 340,
	1389, 341, 342, 1390, 343, 344, 345, 1391, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 1392, 267, 1393, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 1394,
	364, 365, 1395, 1396, 1159, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1397, 377,
	632, 1398, 633, 378, 1399, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1161, 384, 385, 1400, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1401, 1160, 393, 637, 638, 1402, 639, 1403, 395, 396,
	1162, 640, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1404, 407, 409,
	408, 1405, 410, 641, 1165, 411, 412, 1166, 1406, 413,
	0, 0, 0, 414, 415, 418, 1407, 1408, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1409, 269, 1169, 457, 458, 1410, 642, 459,
	643, 461, 462, 1411, 0, 463, 0, 1412, 1413, 465,
	466, 467, 1414, 1415, 468, 469, 644, 1170, 470, 1171,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 1416, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 1417, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 1418, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 1419, 519, 520, 521, 1172,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 1420, 542,
	543, 541, 544, 545, 546, 1421, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 1422, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 1423,
	573, 574, 0, 570, 561, 1424, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 1425, 583, 655, 656, 657,
	658, 1426, 592, 1427, 584, 585, 586, 659, 587, 660,
	1428, 588, 589, 590, 591, 0, 593, 594, 1429, 1430,
	595, 596, 597, 599, 600, 598, 601, 1431, 602, 1432,
	0, 603, 604, 605, 661, 662, 663, 1433, 607, 606,
	608, 664, 1434, 1435, 1436, 1437, 1438, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 2626, 0, 0, 0, 0,
	0, 0, 0, 2627, 270, 272, 271, 273, 274, 275,
	276, 1359, 277, 278, 1360, 1361, 1362, 0, 1363, 614,
	1364, 1365, 1366, 1367, 279, 280, 1157, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	1368, 619, 289, 290, 291, 292, 293, 294, 1369, 1370,
	0, 295, 620, 621, 622, 1371, 296, 297, 623, 1372,
	1301, 1373, 298, 299, 300, 301, 302, 303, 304, 0,
	1374, 306, 307, 308, 305, 309, 1375, 310, 0, 311,
	312, 313, 314, 315, 316, 1376, 317, 318, 319, 1158,
	320, 321, 322, 1377, 1378, 1380, 1379, 1381, 1382, 1383,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 1384,
	332, 329, 330, 1385, 333, 331, 334, 1386, 335, 336,
	337, 1387, 1388, 338, 339, 340, 1389, 341, 342, 1390,
	343, 344, 345, 1391, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	1392, 267, 1393, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 1394, 364, 365, 1395, 1396,
	1159, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 1397, 377, 632, 1398, 633, 378,
	1399, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1161, 384, 385, 1400, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 1401, 1160, 393, 637,
	638, 1402, 639, 1403, 395, 396, 1162, 640, 1163, 397,
	398, 399, 1164, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1404, 407, 409, 408, 1405, 410, 641,
	1165, 411, 412, 1166, 1406, 413, 0, 0, 0, 414,
	415, 418, 1407, 1408, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1167, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1168, 447, 1409, 269,
	1169, 457, 458, 1410, 642, 459, 643, 461, 462, 1411,
	0, 463, 0, 1412, 1413, 465, 466, 467, 1414, 1415,
	468, 469, 644, 1170, 470, 1171, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 1416, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 1417, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	1418, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 1419, 519, 520, 521, 1172, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 1420, 542, 543, 541, 544, 545,
	546, 1421, 547, 548, 531, 532, 549, 550, 1173, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 1422, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 1423, 573, 574, 0, 570,
	561, 1424, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 1425, 583, 655, 656, 657, 658, 1426, 592, 1427,
	584, 585, 586, 659, 587, 660, 1428, 588, 589, 590,
	591, 0, 593, 594, 1429, 1430, 595, 596, 597, 599,
	600, 598, 601, 1431, 602, 1432, 0, 603, 604, 605,
	661, 662, 663, 1433, 607, 606, 608, 664, 1434, 1435,
	1436, 1437, 1438, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 0, 0, 0, 0, 3547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3549, 270, 272,
	271, 273, 274, 275, 276, 1359, 277, 278, 1360, 1361,
	1362, 0, 1363, 614, 1364, 1365, 1366, 1367, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 1368, 619, 289, 290, 291, 292,
	293, 294, 1369, 1370, 0, 295, 620, 621, 622, 1371,
	296, 297, 623, 1372, 1301, 1373, 298, 299, 300, 301,
	302, 303, 304, 0, 1374, 306, 307, 308, 305, 309,
	1375, 310, 0, 311, 312, 313, 314, 315, 316, 1376,
	317, 318, 319, 1158, 320, 321, 322, 1377, 1378, 1380,
	1379, 1381, 1382, 1383, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 1384, 332, 329, 330, 1385, 333, 331,
	334, 1386, 335, 336, 337, 1387, 1388, 338, 339, 340,
	1389, 341, 342, 1390, 343, 344, 345, 1391, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 1392, 267, 1393, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 1394,
	364, 365, 1395, 1396, 1159, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1397, 377,
	632, 1398, 633, 378, 1399, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1161, 384, 385, 1400, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1401, 1160, 393, 637, 638, 1402, 639, 1403, 395, 396,
	1162, 640, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1404, 407, 409,
	408, 1405, 410, 641, 1165, 411, 412, 1166, 1406, 413,
	0, 0, 0, 414, 415, 418, 1407, 1408, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1409, 269, 1169, 457, 458, 1410, 642, 459,
	643, 461, 462, 1411, 0, 463, 0, 1412, 1413, 465,
	466, 467, 1414, 1415, 468, 469, 644, 1170, 470, 1171,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 1416, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 1417, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 1418, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 1419, 519, 520, 521, 1172,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 1420, 542,
	543, 541, 544, 545, 546, 1421, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 1422, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 1423,
	573, 574, 0, 570, 561, 1424, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 1425, 583, 655, 656, 657,
	658, 1426, 592, 1427, 584, 585, 586, 659, 587, 660,
	1428, 588, 589, 590, 591, 0, 593, 594, 1429, 1430,
	595, 596, 597, 599, 600, 598, 601, 1431, 602, 1432,
	0, 603, 604, 605, 661, 662, 663, 1433, 607, 606,
	608, 664, 1434, 1435, 1436, 1437, 1438, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3923, 270, 272, 271, 273,
	274, 275, 276, 1359, 277, 278, 1360, 1361, 1362, 0,
	1363, 614, 1364, 1365, 1366, 1367, 279, 280, 1157, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 1368, 619, 289, 290, 291, 292, 293, 294,
	1369, 1370, 0, 295, 620, 621, 622, 1371, 296, 297,
	623, 1372, 1301, 1373, 298, 299, 300, 301, 302, 303,
	304, 0, 1374, 306, 307, 308, 305, 309, 1375, 310,
	0, 311, 312, 313, 314, 315, 316, 1376, 317, 318,
	319, 1158, 320, 321, 322, 1377, 1378, 1380, 1379, 1381,
	1382, 1383, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 1384, 332, 329, 330, 1385, 333, 331, 334, 1386,
	335, 336, 337, 1387, 1388, 338, 339, 340, 1389, 341,
	342, 1390, 343, 344, 345, 1391, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 1392, 267, 1393, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 1394, 364, 365,
	1395, 1396, 1159, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1397, 377, 632, 1398,
	633, 378, 1399, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1161, 384, 385, 1400, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 1401, 1160,
	393, 637, 638, 1402, 639, 1403, 395, 396, 1162, 640,
	1163, 397, 398, 399, 1164, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1404, 407, 409, 408, 1405,
	410, 641, 1165, 411, 412, 1166, 1406, 413, 0, 0,
	0, 414, 415, 418, 1407, 1408, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1167, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1168, 447,
	1409, 269, 1169, 457, 458, 1410, 642, 459, 643, 461,
	462, 1411, 0, 463, 0, 1412, 1413, 465, 466, 467,
	1414, 1415, 468, 469, 644, 1170, 470, 1171, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	1416, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 1417, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 1418, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 1419, 519, 520, 521, 1172, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 1420, 542, 543, 541,
	544, 545, 546, 1421, 547, 548, 531, 532, 549, 550,
	1173, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	1422, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 1423, 573, 574,
	0, 570, 561, 1424, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 1425, 583, 655, 656, 657, 658, 1426,
	592, 1427, 584, 585, 586, 659, 587, 660, 1428, 588,
	589, 590, 591, 0, 593, 594, 1429, 1430, 595, 596,
	597, 599, 600, 598, 601, 1431, 602, 1432, 0, 603,
	604, 605, 661, 662, 663, 1433, 607, 606, 608, 664,
	1434, 1435, 1436, 1437, 1438, 609, 610, 665, 611, 612,
	613, 0, 1354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4117, 270,
	272, 271, 273, 274, 275, 276, 1359, 277, 278, 1360,
	1361, 1362, 0, 1363, 614, 1364, 1365, 1366, 1367, 279,
	280, 1157, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 1368, 619, 289, 290, 291,
	292, 293, 294, 1369, 1370, 0, 295, 620, 621, 622,
	1371, 296, 297, 623, 1372, 1301, 1373, 298, 299, 300,
	301, 302, 303, 304, 0, 1374, 306, 307, 308, 305,
	309, 1375, 310, 0, 311, 312, 313, 314, 315, 316,
	1376, 317, 318, 319, 1158, 320, 321, 322, 1377, 1378,
	1380, 1379, 1381, 1382, 1383, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 1384, 332, 329, 330, 1385, 333,
	331, 334, 1386, 335, 336, 337, 1387, 1388, 338, 339,
	340, 1389, 341, 342, 1390, 343, 344, 345, 1391, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 1392, 267, 1393, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	1394, 364, 365, 1395, 1396, 1159, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1397,
	377, 632, 1398, 633, 378, 1399, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 1161, 384, 385, 1400, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 1401, 1160, 393, 637, 638, 1402, 639, 1403, 395,
	396, 1162, 640, 1163, 397, 398, 399, 1164, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1404, 407,
	409, 408, 1405, 410, 641, 1165, 411, 412, 1166, 1406,
	413, 0, 0, 0, 414, 415, 418, 1407, 1408, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1167, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1168, 447, 1409, 269, 1169, 457, 458, 1410, 642,
	459, 643, 461, 462, 1411, 0, 463, 0, 1412, 1413,
	465, 466, 467, 1414, 1415, 468, 469, 644, 1170, 470,
	1171, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 1416, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 1417,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 1418, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 1419, 519, 520, 521,
	1172, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 1420,
	542, 543, 541, 544, 545, 546, 1421, 547, 548, 531,
	532, 549, 550, 1173, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 1422, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	1423, 573, 574, 0, 570, 561, 1424, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 1425, 583, 655, 656,
	657, 658, 1426, 592, 1427, 584, 585, 586, 659, 587,
	660, 1428, 588, 589, 590, 591, 0, 593, 594, 1429,
	1430, 595, 596, 597, 599, 600, 598, 601, 1431, 602,
	1432, 0, 603, 604, 605, 661, 662, 663, 1433, 607,
	606, 608, 664, 1434, 1435, 1436, 1437, 1438, 609, 610,
	665, 611, 612, 613, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3994, 270, 272, 271, 273, 274, 275, 276, 1359,
	277, 278, 1360, 1361, 1362, 0, 1363, 614, 1364, 1365,
	1366, 1367, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 1368, 619,
	289, 290, 291, 292, 293, 294, 1369, 1370, 0, 295,
	620, 621, 622, 1371, 296, 297, 623, 1372, 1301, 1373,
	298, 299, 300, 301, 302, 303, 304, 0, 1374, 306,
	307, 308, 305, 309, 1375, 310, 0, 311, 312, 313,
	314, 315, 316, 1376, 317, 318, 319, 1158, 320, 321,
	322, 1377, 1378, 1380, 1379, 1381, 1382, 1383, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 1384, 332, 329,
	330, 1385, 333, 331, 334, 1386, 335, 336, 337, 1387,
	1388, 338, 339, 340, 1389, 341, 342, 1390, 343, 344,
	345, 1391, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 1392, 267,
	1393, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 1394, 364, 365, 1395, 1396, 1159, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1397, 377, 632, 1398, 633, 378, 1399, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1161, 384,
	385, 1400, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1401, 1160, 393, 637, 638, 1402,
	639, 1403, 395, 396, 1162, 640, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1404, 407, 409, 408, 1405, 410, 641, 1165, 411,
	412, 1166, 1406, 413, 0, 0, 0, 414, 415, 418,
	1407, 1408, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 1409, 269, 1169, 457,
	458, 1410, 642, 459, 643, 461, 462, 1411, 0, 463,
	0, 1412, 1413, 465, 466, 467, 1414, 1415, 468, 469,
	644, 1170, 470, 1171, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 1416, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 1417, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 1418, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 1419,
	519, 520, 521, 1172, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 1420, 542, 543, 541, 544, 545, 546, 1421,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 1422, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 1423, 573, 574, 0, 570, 561, 1424,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 1425,
	583, 655, 656, 657, 658, 1426, 592, 1427, 584, 585,
	586, 659, 587, 660, 1428, 588, 589, 590, 591, 0,
	593, 594, 1429, 1430, 595, 596, 597, 599, 600, 598,
	601, 1431, 602, 1432, 0, 603, 604, 605, 661, 662,
	663, 1433, 607, 606, 608, 664, 1434, 1435, 1436, 1437,
	1438, 609, 610, 665, 611, 612, 613, 0, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3853, 270, 272, 271, 273, 274,
	275, 276, 1359, 277, 278, 1360, 1361, 1362, 0, 1363,
	614, 1364, 1365, 1366, 1367, 279, 280, 1157, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 1368, 619, 289, 290, 291, 292, 293, 294, 1369,
	1370, 0, 295, 620, 621, 622, 1371, 296, 297, 623,
	1372, 1301, 1373, 298, 299, 300, 301, 302, 303, 304,
	0, 1374, 306, 307, 308, 305, 309, 1375, 310, 0,
	311, 312, 313, 314, 315, 316, 1376, 317, 318, 319,
	1158, 320, 321, 322, 1377, 1378, 1380, 1379, 1381, 1382,
	1383, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	1384, 332, 329, 330, 1385, 333, 331, 334, 1386, 335,
	336, 337, 1387, 1388, 338, 339, 340, 1389, 341, 342,
	1390, 343, 344, 345, 1391, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 1392, 267, 1393, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 1394, 364, 365, 1395,
	1396, 1159, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 1397, 377, 632, 1398, 633,
	378, 1399, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1161, 384, 385, 1400, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 1401, 1160, 393,
	637, 638, 1402, 639, 1403, 395, 396, 1162, 640, 1163,
	397, 398, 399, 1164, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1404, 407, 409, 408, 1405, 410,
	641, 1165, 411, 412, 1166, 1406, 413, 0, 0, 0,
	414, 415, 418, 1407, 1408, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1167, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1168, 447, 1409,
	269, 1169, 457, 458, 1410, 642, 459, 643, 461, 462,
	1411, 0, 463, 0, 1412, 1413, 465, 466, 467, 1414,
	1415, 468, 469, 644, 1170, 470, 1171, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 1416,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 1417, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 1418, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 1419, 519, 520, 521, 1172, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 1420, 542, 543, 541, 544,
	545, 546, 1421, 547, 548, 531, 532, 549, 550, 1173,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 1422,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 1423, 573, 574, 0,
	570, 561, 1424, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 1425, 583, 655, 656, 657, 658, 1426, 592,
	1427, 584, 585, 586, 659, 587, 660, 1428, 588, 589,
	590, 591, 0, 593, 594, 1429, 1430, 595, 596, 597,
	599, 600, 598, 601, 1431, 602, 1432, 0, 603, 604,
	605, 661, 662, 663, 1433, 607, 606, 608, 664, 1434,
	1435, 1436, 1437, 1438, 609, 610, 665, 611, 612, 613,
	0, 1354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3565, 270, 272,
	271, 273, 274, 275, 276, 1359, 277, 278, 1360, 1361,
	1362, 0, 1363, 614, 1364, 1365, 1366, 1367, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 1368, 619, 289, 290, 291, 292,
	293, 294, 1369, 1370, 0, 295, 620, 621, 622, 1371,
	296, 297, 623, 1372, 1301, 1373, 298, 299, 300, 301,
	302, 303, 304, 0, 1374, 306, 307, 308, 305, 309,
	1375, 310, 0, 311, 312, 313, 314, 315, 316, 1376,
	317, 318, 319, 1158, 320, 321, 322, 1377, 1378, 1380,
	1379, 1381, 1382, 1383, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 1384, 332, 329, 330, 1385, 333, 331,
	334, 1386, 335, 336, 337, 1387, 1388, 338, 339, 340,
	1389, 341, 342, 1390, 343, 344, 345, 1391, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 1392, 267, 1393, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 1394,
	364, 365, 1395, 1396, 1159, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1397, 377,
	632, 1398, 633, 378, 1399, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1161, 384, 385, 1400, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1401, 1160, 393, 637, 638, 1402, 639, 1403, 395, 396,
	1162, 640, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1404, 407, 409,
	408, 1405, 410, 641, 1165, 411, 412, 1166, 1406, 413,
	0, 0, 0, 414, 415, 418, 1407, 1408, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1409, 269, 1169, 457, 458, 1410, 642, 459,
	643, 461, 462, 1411, 0, 463, 0, 1412, 1413, 465,
	466, 467, 1414, 1415, 468, 469, 644, 1170, 470, 1171,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 1416, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 1417, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 1418, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 1419, 519, 520, 521, 1172,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 1420, 542,
	543, 541, 544, 545, 546, 1421, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 1422, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 1423,
	573, 574, 0, 570, 561, 1424, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 1425, 583, 655, 656, 657,
	658, 1426, 592, 1427, 584, 585, 586, 659, 587, 660,
	1428, 588, 589, 590, 591, 0, 593, 594, 1429, 1430,
	595, 596, 597, 599, 600, 598, 601, 1431, 602, 1432,
	0, 603, 604, 605, 661, 662, 663, 1433, 607, 606,
	608, 664, 1434, 1435, 1436, 1437, 1438, 609, 610, 665,
	611, 612, 613, 0, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3396, 270, 272, 271, 273, 274, 275, 276, 1359, 277,
	278, 1360, 1361, 1362, 0, 1363, 614, 1364, 1365, 1366,
	1367, 279, 280, 1157, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 1368, 619, 289,
	290, 291, 292, 293, 294, 1369, 1370, 0, 295, 620,
	621, 622, 1371, 296, 297, 623, 1372, 1301, 1373, 298,
	299, 300, 301, 302, 303, 304, 0, 1374, 306, 307,
	308, 305, 309, 1375, 310, 0, 311, 312, 313, 314,
	315, 316, 1376, 317, 318, 319, 1158, 320, 321, 322,
	1377, 1378, 1380, 1379, 1381, 1382, 1383, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 1384, 332, 329, 330,
	1385, 333, 331, 334, 1386, 335, 336, 337, 1387, 1388,
	338, 339, 340, 1389, 341, 342, 1390, 343, 344, 345,
	1391, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 1392, 267, 1393,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 1394, 364, 365, 1395, 1396, 1159, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 1397, 377, 632, 1398, 633, 378, 1399, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 1161, 384, 385,
	1400, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 1401, 1160, 393, 637, 638, 1402, 639,
	1403, 395, 396, 1162, 640, 1163, 397, 398, 399, 1164,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	1404, 407, 409, 408, 1405, 410, 641, 1165, 411, 412,
	1166, 1406, 413, 0, 0, 0, 414, 415, 418, 1407,
	1408, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1167, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1168, 447, 1409, 269, 1169, 457, 458,
	1410, 642, 459, 643, 461, 462, 1411, 0, 463, 0,
	1412, 1413, 465, 466, 467, 1414, 1415, 468, 469, 644,
	1170, 470, 1171, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 1416, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 1417, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 1418, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 1419, 519,
	520, 521, 1172, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 1420, 542, 543, 541, 544, 545, 546, 1421, 547,
	548, 531, 532, 549, 550, 1173, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 1422, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 1423, 573, 574, 0, 570, 561, 1424, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 1425, 583,
	655, 656, 657, 658, 1426, 592, 1427, 584, 585, 586,
	659, 587, 660, 1428, 588, 589, 590, 591, 0, 593,
	594, 1429, 1430, 595, 596, 597, 599, 600, 598, 601,
	1431, 602, 1432, 0, 603, 604, 605, 661, 662, 663,
	1433, 607, 606, 608, 664, 1434, 1435, 1436, 1437, 1438,
	609, 610, 665, 611, 612, 613, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2484, 270, 272, 271, 273, 274, 275,
	276, 1359, 277, 278, 1360, 1361, 1362, 0, 1363, 614,
	1364, 1365, 1366, 1367, 279, 280, 1157, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	1368, 619, 289, 290, 291, 292, 293, 294, 1369, 1370,
	0, 295, 620, 621, 622, 1371, 296, 297, 623, 1372,
	1301, 1373, 298, 299, 300, 301, 302, 303, 304, 0,
	1374, 306, 307, 308, 305, 309, 1375, 310, 0, 311,
	312, 313, 314, 315, 316, 1376, 317, 318, 319, 1158,
	320, 321, 322, 1377, 1378, 1380, 1379, 1381, 1382, 1383,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 1384,
	332, 329, 330, 1385, 333, 331, 334, 1386, 335, 336,
	337, 1387, 1388, 338, 339, 340, 1389, 341, 342, 1390,
	343, 344, 345, 1391, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	1392, 267, 1393, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 1394, 364, 365, 1395, 1396,
	1159, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 1397, 377, 632, 1398, 633, 378,
	1399, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1161, 384, 385, 1400, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 1401, 1160, 393, 637,
	638, 1402, 639, 1403, 395, 396, 1162, 640, 1163, 397,
	398, 399, 1164, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1404, 407, 409, 408, 1405, 410, 641,
	1165, 411, 412, 1166, 1406, 413, 0, 0, 0, 414,
	415, 418, 1407, 1408, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1167, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1168, 447, 1409, 269,
	1169, 457, 458, 1410, 642, 459, 643, 461, 462, 1411,
	0, 463, 0, 1412, 1413, 465, 466, 467, 1414, 1415,
	468, 469, 644, 1170, 470, 1171, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 1416, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 1417, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	1418, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 1419, 519, 520, 521, 1172, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 1420, 542, 543, 541, 544, 545,
	546, 1421, 547, 548, 531, 532, 549, 550, 1173, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 1422, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 1423, 573, 574, 0, 570,
	561, 1424, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 1425, 583, 655, 656, 657, 658, 1426, 592, 1427,
	584, 585, 586, 659, 587, 660, 1428, 588, 589, 590,
	591, 0, 593, 594, 1429, 1430, 595, 596, 597, 599,
	600, 598, 601, 1431, 602, 1432, 0, 603, 604, 605,
	661, 662, 663, 1433, 607, 606, 608, 664, 1434, 1435,
	1436, 1437, 1438, 609, 610, 665, 611, 612, 613, 1450,
	0, 1354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2171, 0, 270, 272,
	271, 273, 274, 275, 276, 1359, 277, 278, 1360, 1361,
	1362, 0, 1363, 614, 1364, 1365, 1366, 1367, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 1368, 619, 289, 290, 291, 292,
	293, 294, 1369, 1370, 0, 295, 620, 621, 622, 1371,
	296, 297, 623, 1372, 1301, 1373, 298, 299, 300, 301,
	302, 303, 304, 0, 1374, 306, 307, 308, 305, 309,
	1375, 310, 0, 311, 312, 313, 314, 315, 316, 1376,
	317, 318, 319, 1158, 320, 321, 322, 1377, 1378, 1380,
	1379, 1381, 1382, 1383, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 1384, 332, 329, 330, 1385, 333, 331,
	334, 1386, 335, 336, 337, 1387, 1388, 338, 339, 340,
	1389, 341, 342, 1390, 343, 344, 345, 1391, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 1392, 267, 1393, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 1394,
	364, 365, 1395, 1396, 1159, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1397, 377,
	632, 1398, 633, 378, 1399, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1161, 384, 385, 1400, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1401, 1160, 393, 637, 638, 1402, 639, 1403, 395, 396,
	1162, 640, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1404, 407, 409,
	408, 1405, 410, 641, 1165, 411, 412, 1166, 1406, 413,
	0, 0, 0, 414, 415, 418, 1407, 1408, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1409, 269, 1169, 457, 458, 1410, 642, 459,
	643, 461, 462, 1411, 0, 463, 0, 1412, 1413, 465,
	466, 467, 1414, 1415, 468, 469, 644, 1170, 470, 1171,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 1416, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 1417, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 1418, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 1419, 519, 520, 521, 1172,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 1420, 542,
	543, 541, 544, 545, 546, 1421, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 1422, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 1423,
	573, 574, 0, 570, 561, 1424, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 1425, 583, 655, 656, 657,
	658, 1426, 592, 1427, 584, 585, 586, 659, 587, 660,
	1428, 588, 589, 590, 591, 0, 593, 594, 1429, 1430,
	595, 596, 597, 599, 600, 598, 601, 1431, 602, 1432,
	0, 603, 604, 605, 661, 662, 663, 1433, 607, 606,
	608, 664, 1434, 1435, 1436, 1437, 1438, 609, 610, 665,
	611, 612, 613, 1351, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 1359,
	277, 278, 1360, 1361, 1362, 0, 1363, 614, 1364, 1365,
	1366, 1367, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 1368, 619,
	289, 290, 291, 292, 293, 294, 1369, 1370, 0, 295,
	620, 621, 622, 1371, 296, 297, 623, 1372, 1301, 1373,
	298, 299, 300, 301, 302, 303, 304, 0, 1374, 306,
	307, 308, 305, 309, 1375, 310, 0, 311, 312, 313,
	314, 315, 316, 1376, 317, 318, 319, 1158, 320, 321,
	322, 1377, 1378, 1380, 1379, 1381, 1382, 1383, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 1384, 332, 329,
	330, 1385, 333, 331, 334, 1386, 335, 336, 337, 1387,
	1388, 338, 339, 340, 1389, 341, 342, 1390, 343, 344,
	345, 1391, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 1392, 267,
	1393, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 1394, 364, 365, 1395, 1396, 1159, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1397, 377, 632, 1398, 633, 378, 1399, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1161, 384,
	385, 1400, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1401, 1160, 393, 637, 638, 1402,
	639, 1403, 395, 396, 1162, 640, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1404, 407, 409, 408, 1405, 410, 641, 1165, 411,
	412, 1166, 1406, 413, 0, 0, 0, 414, 415, 418,
	1407, 1408, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 1409, 269, 1169, 457,
	458, 1410, 642, 459, 643, 461, 462, 1411, 0, 463,
	0, 1412, 1413, 465, 466, 467, 1414, 1415, 468, 469,
	644, 1170, 470, 1171, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 1416, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 1417, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 1418, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 1419,
	519, 520, 521, 1172, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 1420, 542, 543, 541, 544, 545, 546, 1421,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 1422, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 1423, 573, 574, 0, 570, 561, 1424,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 1425,
	583, 655, 656, 657, 658, 1426, 592, 1427, 584, 585,
	586, 659, 587, 660, 1428, 588, 589, 590, 591, 0,
	593, 594, 1429, 1430, 595, 596, 597, 599, 600, 598,
	601, 1431, 602, 1432, 0, 603, 604, 605, 661, 662,
	663, 1433, 607, 606, 608, 664, 1434, 1435, 1436, 1437,
	1438, 609, 610, 665, 611, 612, 613, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 1359, 277, 278, 1360, 1361, 1362, 0, 1363, 614,
	1364, 1365, 1366, 1367, 279, 280, 1157, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	1368, 619, 289, 290, 291, 292, 293, 294, 1369, 1370,
	0, 295, 620, 621, 622, 1371, 296, 297, 623, 1372,
	1301, 1373, 298, 299, 300, 301, 302, 303, 304, 0,
	1374, 306, 307, 308, 305, 309, 1375, 310, 0, 311,
	312, 313, 314, 315, 316, 1376, 317, 318, 319, 1158,
	320, 321, 322, 1377, 1378, 1380, 1379, 1381, 1382, 1383,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 1384,
	332, 329, 330, 1385, 333, 331, 334, 1386, 335, 336,
	337, 1387, 1388, 338, 339, 340, 1389, 341, 342, 1390,
	343, 344, 345, 1391, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	1392, 267, 1393, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 1394, 364, 365, 1395, 1396,
	1159, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 1397, 377, 632, 1398, 633, 378,
	1399, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1161, 384, 385, 1400, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 1401, 1160, 393, 637,
	638, 1402, 639, 1403, 395, 396, 1162, 640, 1163, 397,
	398, 399, 1164, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1404, 407, 409, 408, 1405, 410, 641,
	1165, 411, 412, 1166, 1406, 413, 0, 0, 0, 414,
	415, 418, 1407, 1408, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1167, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1168, 447, 1409, 269,
	1169, 457, 458, 1410, 642, 459, 643, 461, 462, 1411,
	0, 463, 0, 1412, 1413, 465, 466, 467, 1414, 1415,
	468, 469, 644, 1170, 470, 1171, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 1416, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 1417, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	1418, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 1419, 519, 520, 521, 1172, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 1420, 542, 543, 541, 544, 545,
	546, 1421, 547, 548, 531, 532, 549, 550, 1173, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 1422, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 1423, 573, 574, 0, 570,
	561, 1424, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 1425, 583, 655, 656, 657, 658, 1426, 592, 1427,
	584, 585, 586, 659, 587, 660, 1428, 588, 589, 590,
	591, 0, 593, 594, 1429, 1430, 595, 596, 597, 599,
	600, 598, 601, 1431, 602, 1432, 0, 603, 604, 605,
	661, 662, 663, 1433, 607, 606, 608, 664, 1434, 1435,
	1436, 1437, 1438, 609, 610, 665, 611, 612, 613, 2459,
	0, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 2456, 277, 278, 0, 0,
	0, 0, 0, 1117, 1081, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 1130, 0,
	287, 1137, 288, 1136, 0, 1147, 289, 290, 291, 292,
	293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0,
	296, 297, 1123, 0, 1104, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 1107, 1105, 1106,
	1113, 1109, 1108, 1112, 323, 324, 325, 326, 327, 1140,
	328, 1134, 1133, 1054, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 2457, 0, 338, 1125, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1060, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1148, 1149, 359, 1072, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1132, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 1145, 1146, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1155, 0, 1082, 378, 0, 379, 380, 381, 382, 383,
	1118, 1119, 1122, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1160, 393, 1127, 1128, 0, 1088, 0, 395, 396,
	1162, 1120, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1156, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 1111, 1110, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121, 459,
	1135, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	1150, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1151, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1131,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 1061, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1114, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 1129,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1176, 564, 565, 566, 567, 1152, 571, 572, 0,
	573, 574, 1049, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1141, 1142, 1143,
	1144, 0, 592, 0, 584, 585, 586, 1153, 587, 1154,
	1071, 588, 589, 590, 591, 0, 593, 594, 0, 1055,
	595, 596, 597, 599, 600, 598, 601, 1115, 602, 0,
	0, 603, 604, 605, 661, 1138, 1175, 2455, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1052, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 1046, 1047,
	2458, 0, 0, 0, 0, 0, 0, 1077, 2454, 0,
	1039, 1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1117, 1081, 0, 0, 0, 279,
	280, 1157, 281, 282, 283, 284, 285, 286, 615, 1130,
	0, 287, 1137, 288, 1136, 0, 1147, 289, 290, 291,
	292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622,
	0, 296, 297, 1123, 0, 1104, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1158, 320, 321, 322, 1107, 1105,
	1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326, 327,
	1140, 328, 1134, 1133, 1054, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1125,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1060, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1148, 1149, 359, 1072, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1132, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1159, 366, 367, 1145, 1146,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1155, 0, 1082, 378, 0, 379, 380, 381, 382,
	383, 1118, 1119, 1122, 460, 1161, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1160, 393, 1127, 1128, 0, 1088, 0, 395,
	396, 1162, 1120, 1163, 397, 398, 399, 1164, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1156, 1165, 411, 412, 1166, 0,
	413, 0, 0, 0, 414, 415, 418, 1111, 1110, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1167, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121,
	459, 1135, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1170, 470,
	1171, 1150, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1151, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1131, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1172, 522, 523, 524, 525, 1061, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 229,
	542, 543, 541, 544, 545, 546, 1114, 547, 548, 531,
	532, 549, 550, 1173, 551, 552, 553, 554, 555, 556,
	1129, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1176, 564, 565, 566, 567, 1152, 571, 572,
	0, 573, 574, 1049, 570, 561, 231, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1141, 1142,
	1143, 1144, 0, 592, 0, 584, 585, 586, 1153, 587,
	1154, 1071, 588, 589, 590, 591, 0, 593, 594, 0,
	1055, 595, 596, 597, 599, 600, 598, 601, 1115, 602,
	0, 0, 603, 604, 605, 1573, 1138, 1175, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 223, 609, 610,
	665, 611, 612, 613, 1052, 0, 224, 0, 0, 0,
	0, 0, 1048, 0, 0, 0, 0, 0, 0, 1046,
	1047, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 1817, 1815,
	0, 0, 1075, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1117, 1081, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 1130, 0,
	287, 1137, 288, 1136, 0, 1147, 289, 290, 291, 292,
	293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0,
	296, 297, 1123, 0, 1104, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 1107, 1105, 1106,
	1113, 1109, 1108, 1112, 323, 324, 325, 326, 327, 1140,
	328, 1134, 1133, 1054, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1125, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1060, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1148, 1149, 359, 1072, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1132, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 1145, 1146, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1155, 0, 1082, 378, 0, 379, 380, 381, 382, 383,
	1118, 1119, 1122, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1160, 393, 1127, 1128, 0, 1088, 0, 395, 396,
	1162, 1120, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1156, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 1111, 1110, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121, 459,
	1135, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	1150, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1151, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1131,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 1061, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 229, 542,
	543, 541, 544, 545, 546, 1114, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 1129,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1176, 564, 565, 566, 567, 1152, 571, 572, 0,
	573, 574, 1049, 570, 561, 231, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1141, 1142, 1143,
	1144, 0, 592, 0, 584, 585, 586, 1153, 587, 1154,
	1071, 588, 589, 590, 591, 0, 593, 594, 0, 1055,
	595, 596, 597, 599, 600, 598, 601, 1115, 602, 0,
	0, 603, 604, 605, 1573, 1138, 1175, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 223, 609, 610, 665,
	611, 612, 613, 1052, 0, 224, 0, 0, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 1046, 1047,
	1093, 1065, 1066, 1067, 1063, 1064, 1076, 1817, 3063, 0,
	0, 1075, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1117, 1081, 0, 0, 0, 279, 280, 1157,
	281, 282, 283, 284, 285, 286, 615, 1130, 0, 287,
	1137, 288, 1136, 0, 1147, 289, 290, 291, 292, 293,
	294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0, 296,
	297, 1123, 0, 1104, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113,
	1109, 1108, 1112, 323, 324, 325, 326, 327, 1140, 328,
	1134, 1133, 1054, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1125, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1060,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1148, 1149, 359, 1072, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1132, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1159, 366, 367, 1145, 1146, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1155,
	0, 1082, 378, 0, 379, 380, 381, 382, 383, 1118,
	1119, 1122, 460, 1161, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1160, 393, 1127, 1128, 0, 1088, 0, 395, 396, 1162,
	1120, 1163, 397, 398, 399, 1164, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1156, 1165, 411, 412, 1166, 0, 413, 0,
	0, 0, 414, 415, 418, 1111, 1110, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1167, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1168,
	447, 1051, 269, 1169, 457, 458, 1073, 1121, 459, 1135,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1170, 470, 1171, 1150,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1151, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1131, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1172, 522,
	523, 524, 525, 1061, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 229, 542, 543,
	541, 544, 545, 546, 1114, 547, 548, 531, 532, 549,
	550, 1173, 551, 552, 553, 554, 555, 556, 1129, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1176, 564, 565, 566, 567, 1152, 571, 572, 0, 573,
	574, 1049, 570, 561, 231, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1141, 1142, 1143, 1144,
	0, 592, 0, 584, 585, 586, 1153, 587, 1154, 1071,
	588, 589, 590, 591, 0, 593, 594, 0, 1055, 595,
	596, 597, 599, 600, 598, 601, 1115, 602, 0, 0,
	603, 604, 605, 1573, 1138, 1175, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 223, 609, 610, 665, 611,
	612, 613, 1052, 0, 224, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 1046, 1047, 1093,
	1065, 1066, 1067, 1063, 1064, 1076, 1817, 1815, 0, 0,
	1075, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1117, 1081, 0, 0, 0, 279, 280, 1157, 281,
	282, 283, 284, 285, 286, 615, 1130, 0, 287, 1137,
	288, 1136, 2587, 1147, 289, 290, 291, 292, 293, 294,
	1083, 1116, 1050, 295, 1177, 1178, 622, 0, 296, 297,
	1123, 0, 1104, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113, 1109,
	1108, 1112, 323, 324, 325, 326, 327, 1140, 328, 1134,
	1133, 1054, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1125, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1060, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1148,
	1149, 359, 1072, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1132, 0, 0, 0, 363, 0, 364, 365,
	0, 2592, 1159, 366, 367, 1145, 1146, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1155, 0,
	1082, 378, 0, 379, 380, 381, 382, 383, 1118, 1119,
	1122, 460, 1161, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1160,
	393, 1127, 1128, 0, 1088, 0, 395, 396, 1162, 1120,
	1163, 397, 398, 399, 1164, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 2588,
	410, 1156, 1165, 411, 412, 1166, 0, 413, 0, 0,
	0, 414, 415, 418, 1111, 1110, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1167, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1168, 447,
	1051, 269, 1169, 457, 458, 1073, 1121, 459, 1135, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1170, 470, 1171, 1150, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1151, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1131, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1172, 522, 523,
	524, 525, 1061, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1114, 547, 548, 531, 532, 549, 550,
	1173, 551, 552, 553, 554, 555, 556, 1129, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1176,
	564, 565, 566, 567, 1152, 571, 572, 0, 573, 574,
	1049, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 1141, 1142, 1143, 1144, 0,
	592, 2589, 584, 585, 586, 1153, 587, 1154, 1071, 588,
	589, 590, 591, 0, 593, 594, 0, 1055, 595, 596,
	597, 599, 600, 598, 601, 1115, 602, 0, 0, 603,
	604, 605, 661, 1138, 1175, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1052, 0, 0, 0, 0, 0, 0, 0, 1048,
	0, 0, 0, 0, 0, 0, 1046, 1047, 0, 0,
	0, 0, 0, 0, 0, 1077, 0, 0, 2504, 1075,
	1093, 1065, 1066, 1067, 1063, 1064, 1076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1117, 1081, 0, 0, 0, 279, 280, 1157,
	281, 282, 283, 284, 285, 286, 615, 1130, 0, 287,
	1137, 288, 1136, 0, 1147, 289, 290, 291, 292, 293,
	294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0, 296,
	297, 1123, 0, 1104, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113,
	1109, 1108, 1112, 323, 324, 325, 326, 327, 1140, 328,
	1134, 1133, 1054, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1125, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1060,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1148, 1149, 359, 1072, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1132, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1159, 366, 367, 1145, 1146, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1155,
	0, 1082, 378, 0, 379, 380, 381, 382, 383, 1118,
	1119, 1122, 460, 1161, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1160, 393, 1127, 1128, 0, 1088, 0, 395, 396, 1162,
	1120, 1163, 397, 398, 399, 1164, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1156, 1165, 411, 412, 1166, 0, 413, 0,
	0, 0, 414, 415, 418, 1111, 1110, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1167, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1168,
	447, 1051, 269, 1169, 457, 458, 1073, 1121, 459, 1135,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1170, 470, 1171, 1150,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1151, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1131, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1172, 522,
	523, 524, 525, 1061, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1114, 547, 548, 531, 532, 549,
	550, 1173, 551, 552, 553, 554, 555, 556, 1129, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1176, 564, 565, 566, 567, 1152, 571, 572, 0, 573,
	574, 1049, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1141, 1142, 1143, 1144,
	0, 592, 0, 584, 585, 586, 1153, 587, 1154, 1071,
	588, 589, 590, 591, 0, 593, 594, 0, 1055, 595,
	596, 597, 599, 600, 598, 601, 1115, 602, 0, 0,
	603, 604, 605, 661, 1138, 1175, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1052, 0, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 1046, 1047, 0,
	0, 0, 0, 0, 0, 0, 1077, 2502, 0, 2501,
	1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1117, 1081, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 1130, 0,
	287, 1137, 288, 1136, 0, 1147, 289, 290, 291, 292,
	293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0,
	296, 297, 1123, 0, 1104, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 1107, 1105, 1106,
	1113, 1109, 1108, 1112, 323, 324, 325, 326, 327, 1140,
	328, 1134, 1133, 1054, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1125, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1060, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1148, 1149, 359, 1072, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1132, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 1145, 1146, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1155, 0, 1082, 378, 0, 379, 380, 381, 382, 383,
	1118, 1119, 1122, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1160, 393, 1127, 1128, 0, 1088, 0, 395, 396,
	1162, 1120, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1156, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 1111, 1110, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121, 459,
	1135, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	1150, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1151, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1131,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 1061, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1114, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 1129,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1176, 564, 565, 566, 567, 1152, 571, 572, 0,
	573, 574, 1049, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1141, 1142, 1143,
	1144, 0, 592, 0, 584, 585, 586, 1153, 587, 1154,
	1071, 588, 589, 590, 591, 0, 593, 594, 0, 1055,
	595, 596, 597, 599, 600, 598, 601, 1115, 602, 0,
	0, 603, 604, 605, 661, 1138, 1175, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1052, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 1046, 1047,
	0, 0, 0, 0, 0, 0, 0, 1077, 2499, 0,
	2498, 1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1117, 1081, 0, 0, 0, 279,
	280, 1157, 281, 282, 283, 284, 285, 286, 615, 1130,
	0, 287, 1137, 288, 1136, 0, 1147, 289, 290, 291,
	292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622,
	0, 296, 297, 1123, 0, 1104, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1158, 320, 321, 322, 1107, 1105,
	1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326, 327,
	1140, 328, 1134, 1133, 1054, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1125,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1060, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1148, 1149, 359, 1072, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1132, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1159, 366, 367, 1145, 1146,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1155, 0, 1082, 378, 0, 379, 380, 381, 382,
	383, 1118, 1119, 1122, 460, 1161, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1160, 393, 1127, 1128, 0, 1088, 0, 395,
	396, 1162, 1120, 1163, 397, 398, 399, 1164, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1156, 1165, 411, 412, 1166, 0,
	413, 0, 0, 0, 414, 415, 418, 1111, 1110, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1167, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121,
	459, 1135, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1170, 470,
	1171, 1150, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1151, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1131, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1172, 522, 523, 524, 525, 1061, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1114, 547, 548, 531,
	532, 549, 550, 1173, 551, 552, 553, 554, 555, 556,
	1129, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1176, 564, 565, 566, 567, 1152, 571, 572,
	0, 573, 574, 1049, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1141, 1142,
	1143, 1144, 0, 592, 0, 584, 585, 586, 1153, 587,
	1154, 1071, 588, 589, 590, 591, 0, 593, 594, 0,
	1055, 595, 596, 597, 599, 600, 598, 601, 1115, 602,
	0, 0, 603, 604, 605, 661, 1138, 1175, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1052, 0, 0, 0, 0, 0,
	0, 0, 1048, 0, 0, 0, 0, 0, 0, 1046,
	1047, 0, 0, 0, 0, 0, 0, 0, 1077, 2496,
	0, 2495, 1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1117, 1081, 0, 0, 0,
	279, 280, 1157, 281, 282, 283, 284, 285, 286, 615,
	1130, 0, 287, 1137, 288, 1136, 0, 1147, 289, 290,
	291, 292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178,
	622, 0, 296, 297, 1123, 0, 1104, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1158, 320, 321, 322, 1107,
	1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326,
	327, 1140, 328, 1134, 1133, 1054, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1125, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1060, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1148, 1149, 359, 1072, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1132, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1159, 366, 367, 1145,
	1146, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1155, 0, 1082, 378, 0, 379, 380, 381,
	382, 383, 1118, 1119, 1122, 460, 1161, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1160, 393, 1127, 1128, 0, 1088, 0,
	395, 396, 1162, 1120, 1163, 397, 398, 399, 1164, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1156, 1165, 411, 412, 1166,
	0, 413, 0, 0, 0, 414, 415, 418, 1111, 1110,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1167,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1168, 447, 1051, 269, 1169, 457, 458, 1073,
	1121, 459, 1135, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1170,
	470, 1171, 1150, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1151, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1131, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1172, 522, 523, 524, 525, 1061, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1114, 547, 548,
	531, 532, 549, 550, 1173, 551, 552, 553, 554, 555,
	556, 1129, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1176, 564, 565, 566, 567, 1152, 571,
	572, 0, 573, 574, 1049, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1141,
	1142, 1143, 1144, 0, 592, 0, 584, 585, 586, 1153,
	587, 1154, 1071, 588, 589, 590, 591, 0, 593, 594,
	0, 1055, 595, 596, 597, 599, 600, 598, 601, 1115,
	602, 0, 0, 603, 604, 605, 661, 1138, 1175, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1052, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	1046, 1047, 0, 0, 0, 0, 0, 0, 0, 1077,
	2493, 0, 1666, 1075, 1093, 1065, 1066, 1067, 1063, 1064,
	1076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1117, 1081, 0, 0,
	0, 279, 280, 1157, 281, 282, 283, 284, 285, 286,
	615, 1130, 0, 287, 1137, 288, 1136, 0, 1147, 289,
	290, 291, 292, 293, 294, 1083, 1116, 1050, 295, 1177,
	1178, 622, 0, 296, 297, 1123, 0, 1104, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1158, 320, 321, 322,
	1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325,
	326, 327, 1140, 328, 1134, 1133, 1054, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1125, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1060, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1148, 1149, 359, 1072, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1132, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1159, 366, 367,
	1145, 1146, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1155, 0, 1082, 378, 0, 379, 380,
	381, 382, 383, 1118, 1119, 1122, 460, 1161, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1160, 393, 1127, 1128, 0, 1088,
	0, 395, 396, 1162, 1120, 1163, 397, 398, 399, 1164,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1156, 1165, 411, 412,
	1166, 0, 413, 0, 0, 0, 414, 415, 418, 1111,
	1110, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1167, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1168, 447, 1051, 269, 1169, 457, 458,
	1073, 1121, 459, 1135, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1170, 470, 1171, 1150, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1151, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1131, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1172, 522, 523, 524, 525, 1061, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1114, 547,
	548, 531, 532, 549, 550, 1173, 551, 552, 553, 554,
	555, 556, 1129, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1176, 564, 565, 566, 567, 1152,
	571, 572, 0, 573, 574, 1049, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1141, 1142, 1143, 1144, 0, 592, 0, 584, 585, 586,
	1153, 587, 1154, 1071, 588, 589, 590, 591, 0, 593,
	594, 0, 1055, 595, 596, 597, 599, 600, 598, 601,
	1115, 602, 0, 0, 603, 604, 605, 661, 1138, 1175,
	0, 607, 606, 608, 664, 0, 1665, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1052, 0, 0, 0,
	0, 0, 0, 0, 1048, 0, 0, 0, 0, 0,
	0, 1046, 1047, 0, 0, 0, 0, 0, 0, 0,
	1077, 0, 0, 1042, 1075, 1093, 1065, 1066, 1067, 1063,
	1064, 1076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1117, 1081, 0,
	0, 0, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 1130, 0, 287, 1137, 288, 1136, 0, 1147,
	289, 290, 291, 292, 293, 294, 1083, 1116, 1050, 295,
	1177, 1178, 622, 0, 296, 297, 1123, 0, 1104, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1158, 320, 321,
	322, 1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324,
	325, 326, 327, 1140, 328, 1134, 1133, 1054, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1125, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1060, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1148, 1149, 359, 1072, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1132, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1159, 366,
	367, 1145, 1146, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1155, 0, 1082, 378, 0, 379,
	380, 381, 382, 383, 1118, 1119, 1122, 460, 1161, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1160, 393, 1127, 1128, 0,
	1088, 0, 395, 396, 1162, 1120, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1156, 1165, 411,
	412, 1166, 0, 413, 0, 0, 0, 414, 415, 418,
	1111, 1110, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 1051, 269, 1169, 457,
	458, 1073, 1121, 459, 1135, 461, 462, 0, 0, 463,
	0, 1056, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1170, 470, 1171, 1150, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1151, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1131, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1172, 522, 523, 524, 525, 1061, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1114,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 1129, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1176, 564, 565, 566, 567,
	1152, 571, 572, 0, 573, 574, 1049, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1141, 1142, 1143, 1144, 0, 592, 0, 584, 585,
	586, 1153, 587, 1154, 1071, 588, 589, 590, 591, 0,
	593, 594, 0, 1055, 595, 596, 597, 599, 600, 598,
	601, 1115, 602, 0, 0, 603, 604, 605, 661, 1138,
	1175, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1052, 0, 0,
	0, 0, 0, 0, 0, 1048, 0, 0, 0, 0,
	0, 0, 1046, 1047, 1093, 1065, 1066, 1067, 1063, 1064,
	1076, 1077, 0, 0, 0, 1075, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1117, 1081, 0, 0,
	0, 279, 280, 1157, 281, 282, 283, 284, 285, 286,
	615, 1130, 0, 287, 1137, 288, 1136, 0, 1147, 289,
	290, 291, 292, 293, 294, 1083, 1116, 1050, 295, 1177,
	1178, 622, 0, 296, 297, 1123, 0, 1104, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	4430, 316, 0, 317, 318, 319, 1158, 320, 321, 322,
	1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325,
	326, 327, 1140, 328, 1134, 1133, 1054, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1125, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1060, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1148, 1149, 359, 1072, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1132, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1159, 366, 367,
	1145, 1146, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1155, 0, 1082, 378, 0, 379, 380,
	381, 382, 383, 1118, 1119, 1122, 460, 1161, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1160, 393, 1127, 1128, 0, 1088,
	0, 395, 396, 1162, 1120, 1163, 397, 398, 399, 1164,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1156, 1165, 411, 412,
	1166, 0, 413, 0, 0, 0, 414, 415, 418, 1111,
	1110, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1167, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1168, 447, 1051, 269, 1169, 457, 458,
	1073, 1121, 459, 1135, 461, 462, 0, 0, 463, 0,
	1056, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1170, 470, 1171, 1150, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1151, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1131, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1172, 522, 523, 524, 525, 1061, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1114, 547,
	548, 531, 532, 549, 550, 1173, 551, 552, 553, 554,
	555, 556, 1129, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1176, 564, 565, 566, 567, 1152,
	571, 572, 0, 573, 574, 1049, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1141, 1142, 1143, 1144, 0, 592, 0, 584, 585, 586,
	1153, 587, 1154, 1071, 588, 589, 590, 591, 0, 593,
	594, 0, 1055, 595, 596, 597, 599, 600, 598, 601,
	1115, 602, 0, 0, 603, 604, 605, 661, 1138, 1175,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1052, 0, 0, 0,
	0, 0, 0, 0, 1048, 0, 0, 0, 0, 0,
	0, 1046, 1047, 1093, 1065, 1066, 1067, 1063, 1064, 1076,
	1077, 0, 0, 0, 1075, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1117, 1081, 0, 0, 0,
	279, 280, 1157, 281, 282, 283, 284, 285, 286, 615,
	1130, 0, 287, 1137, 288, 1136, 0, 1147, 289, 290,
	291, 292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178,
	622, 0, 296, 297, 1123, 0, 1104, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1158, 320, 321, 322, 1107,
	1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326,
	327, 1140, 328, 1134, 1133, 1054, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1125, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1060, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1148, 1149, 359, 1072, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1132, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1159, 366, 367, 1145,
	1146, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1155, 0, 1082, 378, 0, 379, 380, 381,
	382, 383, 1118, 1119, 1122, 460, 1161, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 2373, 390, 391,
	392, 394, 0, 1160, 393, 1127, 1128, 0, 1088, 0,
	395, 396, 1162, 1120, 1163, 397, 398, 399, 1164, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1156, 1165, 411, 412, 1166,
	0, 413, 0, 0, 0, 414, 415, 418, 1111, 1110,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1167,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1168, 447, 1051, 269, 1169, 457, 458, 1073,
	1121, 459, 1135, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1170,
	470, 1171, 1150, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1151, 489, 649, 490, 491,
	2372, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1131, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1172, 522, 523, 524, 525, 1061, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1114, 547, 548,
	531, 532, 549, 550, 1173, 551, 552, 553, 554, 555,
	556, 1129, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1176, 564, 565, 566, 567, 1152, 571,
	572, 0, 573, 574, 1049, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1141,
	1142, 1143, 1144, 0, 592, 0, 584, 585, 586, 1153,
	587, 1154, 1071, 588, 589, 590, 591, 0, 593, 594,
	0, 1055, 595, 596, 597, 599, 600, 598, 601, 1115,
	602, 0, 0, 603, 604, 605, 661, 1138, 1175, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1052, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	1046, 1047, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 1077,
	0, 0, 0, 1075, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1117, 1081, 0, 0, 0, 279,
	280, 1157, 281, 282, 283, 284, 285, 286, 615, 1130,
	0, 287, 1137, 288, 1136, 0, 1147, 289, 290, 291,
	292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622,
	0, 296, 297, 1123, 0, 1104, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1158, 320, 321, 322, 1107, 1105,
	1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326, 327,
	1140, 328, 1134, 1133, 1054, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1125,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1060, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1148, 1149, 359, 1072, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1132, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1159, 366, 367, 1145, 1146,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1155, 0, 1082, 378, 0, 379, 380, 381, 382,
	383, 1118, 1119, 1122, 460, 1161, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1160, 393, 1127, 1128, 0, 1088, 0, 395,
	396, 1162, 1120, 1163, 397, 398, 399, 1164, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1156, 1165, 411, 412, 1166, 0,
	413, 0, 0, 0, 414, 415, 418, 1111, 1110, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1167, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121,
	459, 1135, 461, 462, 0, 0, 463, 0, 1056, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1170, 470,
	1171, 1150, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1151, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1131, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1172, 522, 523, 524, 525, 1061, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1114, 547, 548, 531,
	532, 549, 550, 1173, 551, 552, 553, 554, 555, 556,
	1129, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1176, 564, 565, 566, 567, 1152, 571, 572,
	0, 573, 574, 1049, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1141, 1142,
	1143, 1144, 0, 592, 0, 584, 585, 586, 1153, 587,
	1154, 1071, 588, 589, 590, 591, 0, 593, 594, 0,
	1055, 595, 596, 597, 599, 600, 598, 601, 1115, 602,
	0, 0, 603, 604, 605, 661, 1138, 1175, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1052, 0, 0, 0, 0, 0,
	0, 0, 1048, 0, 0, 0, 0, 0, 0, 1046,
	1047, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 1077, 0,
	0, 0, 1075, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1117, 1081, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 1130, 0,
	287, 1137, 288, 1136, 0, 1147, 289, 290, 291, 292,
	293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0,
	296, 297, 1123, 0, 1104, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 4191, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 1107, 1105, 1106,
	1113, 1109, 1108, 1112, 323, 324, 325, 326, 327, 1140,
	328, 1134, 1133, 1054, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1125, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1060, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1148, 1149, 359, 1072, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1132, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 1145, 1146, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1155, 0, 1082, 378, 0, 379, 380, 381, 382, 383,
	1118, 1119, 1122, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1160, 393, 1127, 1128, 0, 1088, 0, 395, 396,
	1162, 1120, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1156, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 1111, 1110, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121, 459,
	1135, 461, 462, 0, 0, 463, 0, 1056, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	1150, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1151, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1131,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 1061, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1114, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 1129,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1176, 564, 565, 566, 567, 1152, 571, 572, 0,
	573, 574, 1049, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1141, 1142, 1143,
	1144, 0, 592, 0, 584, 585, 586, 1153, 587, 1154,
	1071, 588, 589, 590, 591, 0, 593, 594, 0, 1055,
	595, 596, 597, 599, 600, 598, 601, 1115, 602, 0,
	0, 603, 604, 605, 661, 1138, 1175, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1052, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 1046, 1047,
	1093, 1065, 1066, 1067, 1063, 1064, 1076, 1077, 0, 0,
	0, 1075, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1117, 1081, 0, 0, 0, 279, 280, 1157,
	281, 282, 283, 284, 285, 286, 615, 1130, 0, 287,
	1137, 288, 1136, 0, 1147, 289, 290, 291, 292, 293,
	294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0, 296,
	297, 1123, 0, 1104, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113,
	1109, 1108, 1112, 323, 324, 325, 326, 327, 1140, 328,
	1134, 1133, 1054, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1125, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1060,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1148, 1149, 359, 1072, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1132, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1159, 366, 367, 1145, 1146, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1155,
	0, 1082, 378, 0, 379, 380, 381, 382, 383, 1118,
	1119, 1122, 460, 1161, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1160, 393, 1127, 1128, 0, 1088, 0, 395, 396, 1162,
	1120, 1163, 397, 398, 399, 1164, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1156, 1165, 411, 412, 1166, 0, 413, 0,
	0, 0, 414, 415, 418, 1111, 1110, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1167, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1168,
	447, 1051, 3815, 1169, 457, 458, 1073, 1121, 459, 1135,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1170, 470, 1171, 1150,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1151, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1131, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1172, 522,
	523, 524, 525, 1061, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1114, 547, 548, 531, 532, 549,
	550, 1173, 551, 552, 553, 554, 555, 556, 1129, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1176, 564, 565, 566, 567, 1152, 571, 572, 0, 573,
	574, 1049, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1141, 1142, 1143, 1144,
	0, 592, 0, 584, 585, 586, 1153, 587, 1154, 1071,
	588, 589, 590, 591, 0, 593, 594, 0, 1055, 595,
	596, 597, 599, 600, 598, 601, 1115, 602, 0, 0,
	603, 604, 605, 661, 1138, 1175, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1052, 0, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 1046, 1047, 1885,
	0, 0, 0, 0, 0, 0, 1077, 0, 0, 0,
	1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1117, 1081, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 1130, 0,
	287, 1137, 288, 1136, 0, 1147, 289, 290, 291, 292,
	293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0,
	296, 297, 1123, 0, 1104, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 1107, 1105, 1106,
	1113, 1109, 1108, 1112, 323, 324, 325, 326, 327, 1140,
	328, 1134, 1133, 1054, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1125, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1060, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1148, 1149, 359, 1072, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1132, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 1145, 1146, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1155, 0, 1082, 378, 0, 379, 380, 381, 382, 383,
	1118, 1119, 1122, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1160, 393, 1127, 1128, 0, 1088, 0, 395, 396,
	1162, 1120, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1156, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 1111, 1110, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121, 459,
	1135, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	1150, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1151, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1131,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 1061, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1114, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 1129,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1176, 564, 565, 566, 567, 1152, 571, 572, 0,
	573, 574, 1049, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1141, 1142, 1143,
	1144, 0, 592, 0, 584, 585, 586, 1153, 587, 1154,
	1071, 588, 589, 590, 591, 0, 593, 594, 0, 1055,
	595, 596, 597, 599, 600, 598, 601, 1115, 602, 0,
	0, 603, 604, 605, 661, 1138, 1175, 3543, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1052, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 1046, 1047,
	1093, 1065, 1066, 1067, 1063, 1064, 1076, 1077, 0, 0,
	0, 1075, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1117, 1081, 0, 0, 0, 279, 280, 1157,
	281, 282, 283, 284, 285, 286, 615, 1130, 0, 287,
	1137, 288, 1136, 0, 1147, 289, 290, 291, 292, 293,
	294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0, 296,
	297, 1123, 0, 1104, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113,
	1109, 1108, 1112, 323, 324, 325, 326, 327, 1140, 328,
	1134, 1133, 1054, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1125, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1060,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1148, 1149, 359, 1072, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1132, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1159, 366, 367, 1145, 1146, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1155,
	0, 1082, 378, 0, 379, 380, 381, 382, 383, 1118,
	1119, 1122, 460, 1161, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1160, 393, 1127, 1128, 0, 1088, 0, 395, 396, 1162,
	1120, 1163, 397, 398, 399, 1164, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1156, 1165, 411, 412, 1166, 0, 413, 0,
	0, 0, 414, 415, 418, 1111, 1110, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1167, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1168,
	447, 1051, 269, 1169, 457, 458, 1073, 1121, 459, 1135,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1170, 470, 1171, 1150,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1151, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1131, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1172, 522,
	523, 524, 525, 1061, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1114, 547, 548, 531, 532, 549,
	550, 1173, 551, 552, 553, 554, 555, 556, 1129, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1176, 564, 565, 566, 567, 1152, 571, 572, 0, 573,
	574, 1049, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1141, 1142, 1143, 1144,
	0, 592, 0, 584, 585, 586, 1153, 587, 1154, 1071,
	588, 589, 590, 591, 0, 593, 594, 0, 1055, 595,
	596, 597, 599, 600, 598, 601, 1115, 602, 0, 0,
	603, 604, 605, 661, 1138, 1175, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1052, 0, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 1046, 1047, 1885,
	0, 0, 0, 0, 0, 0, 1077, 0, 0, 0,
	1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1117, 1081, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 1130, 0,
	287, 1137, 288, 1136, 0, 1147, 289, 290, 291, 292,
	293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0,
	296, 297, 1123, 0, 1104, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 1107, 1105, 1106,
	1113, 1109, 1108, 1112, 323, 324, 325, 326, 327, 1140,
	328, 1134, 1133, 1054, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1125, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1060, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1148, 1149, 359, 1072, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1132, 0, 0, 0, 363, 0,
	364, 365, 0, 2592, 1159, 366, 367, 1145, 1146, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1155, 0, 1082, 378, 0, 379, 380, 381, 382, 383,
	1118, 1119, 1122, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1160, 393, 1127, 1128, 0, 1088, 0, 395, 396,
	1162, 1120, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1156, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 1111, 1110, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121, 459,
	1135, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	1150, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1151, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1131,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 1061, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1114, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 1129,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1176, 564, 565, 566, 567, 1152, 571, 572, 0,
	573, 574, 1049, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1141, 1142, 1143,
	1144, 0, 592, 0, 584, 585, 586, 1153, 587, 1154,
	1071, 588, 589, 590, 591, 0, 593, 594, 0, 1055,
	595, 596, 597, 599, 600, 598, 601, 1115, 602, 0,
	0, 603, 604, 605, 661, 1138, 1175, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1052, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 1046, 1047,
	1093, 1065, 1066, 1067, 1063, 1064, 1076, 1077, 0, 0,
	0, 1075, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1117, 1081, 0, 0, 0, 279, 280, 1157,
	281, 282, 283, 284, 285, 286, 615, 1130, 0, 287,
	1137, 288, 1136, 0, 1147, 289, 290, 291, 292, 293,
	294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0, 296,
	297, 1123, 0, 1104, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113,
	1109, 1108, 1112, 323, 324, 325, 326, 327, 1140, 328,
	1134, 1133, 1054, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1125, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1060,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1148, 1149, 359, 1072, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1132, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1159, 366, 367, 1145, 1146, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1155,
	0, 1082, 378, 0, 379, 380, 381, 382, 383, 1118,
	1119, 1122, 460, 1161, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1160, 393, 1127, 1128, 0, 1088, 0, 395, 396, 1162,
	1120, 1163, 397, 398, 399, 1164, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1156, 1165, 411, 412, 1166, 0, 413, 0,
	0, 0, 414, 415, 418, 1111, 1110, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1167, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1168,
	447, 1051, 269, 1169, 457, 458, 1073, 1121, 459, 1135,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1170, 470, 1171, 1150,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1151, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1131, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1172, 522,
	523, 524, 525, 1061, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1114, 547, 548, 531, 532, 549,
	550, 1173, 551, 552, 553, 554, 555, 556, 1129, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1176, 564, 565, 566, 567, 1152, 571, 572, 0, 573,
	574, 1049, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1141, 1142, 1143, 1144,
	0, 592, 0, 584, 585, 586, 1153, 587, 1154, 1071,
	588, 589, 590, 591, 0, 593, 594, 0, 1055, 595,
	596, 597, 599, 600, 598, 601, 1115, 602, 0, 0,
	603, 604, 605, 661, 1138, 1175, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1052, 0, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 1046, 1047, 0,
	0, 0, 0, 0, 0, 0, 1077, 1815, 0, 2597,
	1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1117, 1081, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 1130, 0,
	287, 1137, 288, 1136, 0, 1147, 289, 290, 291, 292,
	293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0,
	296, 297, 1123, 0, 1104, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 1107, 1105, 1106,
	1113, 1109, 1108, 1112, 323, 324, 325, 326, 327, 1140,
	328, 1134, 1133, 1054, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1125, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1060, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1148, 1149, 359, 1072, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1132, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 1145, 1146, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1155, 0, 1082, 378, 0, 379, 380, 381, 382, 383,
	1118, 1119, 1122, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1160, 393, 1127, 1128, 0, 1088, 0, 395, 396,
	1162, 1120, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1156, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 1111, 1110, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121, 459,
	1135, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	1150, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1151, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1131,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 1061, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1114, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 1129,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1176, 564, 565, 566, 567, 1152, 571, 572, 0,
	573, 574, 1049, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1141, 1142, 1143,
	1144, 0, 592, 0, 584, 585, 586, 1153, 587, 1154,
	1071, 588, 589, 590, 591, 0, 593, 594, 0, 1055,
	595, 596, 597, 599, 600, 598, 601, 1115, 602, 0,
	0, 603, 604, 605, 661, 1138, 1175, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1052, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 1046, 1047,
	0, 0, 0, 0, 0, 0, 0, 1077, 0, 0,
	2595, 1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1117, 1081, 0, 0, 0, 279,
	280, 1157, 281, 282, 283, 284, 285, 286, 615, 1130,
	0, 287, 1137, 288, 1136, 0, 1147, 289, 290, 291,
	292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622,
	0, 296, 297, 1123, 0, 1104, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1158, 320, 321, 322, 1107, 1105,
	1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326, 327,
	1140, 328, 1134, 1133, 1054, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1125,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1060, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1148, 1149, 359, 1072, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1132, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1159, 366, 367, 1145, 1146,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1155, 0, 1082, 378, 0, 379, 380, 381, 382,
	383, 1118, 1119, 1122, 460, 1161, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1160, 393, 1127, 1128, 0, 1088, 0, 395,
	396, 1162, 1120, 1163, 397, 398, 399, 1164, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1156, 1165, 411, 412, 1166, 0,
	413, 0, 0, 0, 414, 415, 418, 1111, 1110, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1167, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121,
	459, 1135, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1170, 470,
	1171, 1150, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1151, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1131, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1172, 522, 523, 524, 525, 1061, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1114, 547, 548, 531,
	532, 549, 550, 1173, 551, 552, 553, 554, 555, 556,
	1129, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1176, 564, 565, 566, 567, 1152, 571, 572,
	0, 573, 574, 1049, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1141, 1142,
	1143, 1144, 0, 592, 0, 584, 585, 586, 1153, 587,
	1154, 1071, 588, 589, 590, 591, 0, 593, 594, 0,
	1055, 595, 596, 597, 599, 600, 598, 601, 1115, 602,
	0, 0, 603, 604, 605, 661, 1138, 1175, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1052, 0, 0, 0, 0, 0,
	0, 0, 1048, 0, 0, 0, 0, 0, 0, 1046,
	1047, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	0, 2583, 1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1117, 1081, 0, 0, 0,
	279, 280, 1157, 281, 282, 283, 284, 285, 286, 615,
	1130, 0, 287, 1137, 288, 1136, 0, 1147, 289, 290,
	291, 292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178,
	622, 0, 296, 297, 1123, 0, 1104, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1158, 320, 321, 322, 1107,
	1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326,
	327, 1140, 328, 1134, 1133, 1054, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1125, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1060, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1148, 1149, 359, 1072, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1132, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1159, 366, 367, 1145,
	1146, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1155, 0, 1082, 378, 0, 379, 380, 381,
	382, 383, 1118, 1119, 1122, 460, 1161, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1160, 393, 1127, 1128, 0, 1088, 0,
	395, 396, 1162, 1120, 1163, 397, 398, 399, 1164, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1156, 1165, 411, 412, 1166,
	0, 413, 0, 0, 0, 414, 415, 418, 1111, 1110,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1167,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1168, 447, 1051, 269, 1169, 457, 458, 1073,
	1121, 459, 1135, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1170,
	470, 1171, 1150, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1151, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1131, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1172, 522, 523, 524, 525, 1061, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1114, 547, 548,
	531, 532, 549, 550, 1173, 551, 552, 553, 554, 555,
	556, 1129, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1176, 564, 565, 566, 567, 1152, 571,
	572, 0, 573, 574, 1049, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1141,
	1142, 1143, 1144, 0, 592, 0, 584, 585, 586, 1153,
	587, 1154, 1071, 588, 589, 590, 591, 0, 593, 594,
	0, 1055, 595, 596, 597, 599, 600, 598, 601, 1115,
	602, 0, 0, 603, 604, 605, 661, 1138, 1175, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1052, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	1046, 1047, 0, 0, 0, 0, 0, 0, 0, 1077,
	0, 0, 2572, 1075, 1093, 1065, 1066, 1067, 1063, 1064,
	1076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1117, 1081, 0, 0,
	0, 279, 280, 1157, 281, 282, 283, 284, 285, 286,
	615, 1130, 0, 287, 1137, 288, 1136, 0, 1147, 289,
	290, 291, 292, 293, 294, 1083, 1116, 1050, 295, 1177,
	1178, 622, 0, 296, 297, 1123, 0, 1104, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1158, 320, 321, 322,
	1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325,
	326, 327, 1140, 328, 1134, 1133, 1054, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1125, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1060, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1148, 1149, 359, 1072, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1132, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1159, 366, 367,
	1145, 1146, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1155, 0, 1082, 378, 0, 379, 380,
	381, 382, 383, 1118, 1119, 1122, 460, 1161, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1160, 393, 1127, 1128, 0, 1088,
	0, 395, 396, 1162, 1120, 1163, 397, 398, 399, 1164,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1156, 1165, 411, 412,
	1166, 0, 413, 0, 0, 0, 414, 415, 418, 1111,
	1110, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1167, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1168, 447, 1051, 269, 1169, 457, 458,
	1073, 1121, 459, 1135, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1170, 470, 1171, 1150, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1151, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1131, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1172, 522, 523, 524, 525, 1061, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1114, 547,
	548, 531, 532, 549, 550, 1173, 551, 552, 553, 554,
	555, 556, 1129, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1176, 564, 565, 566, 567, 1152,
	571, 572, 0, 573, 574, 1049, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1141, 1142, 1143, 1144, 0, 592, 0, 584, 585, 586,
	1153, 587, 1154, 1071, 588, 589, 590, 591, 0, 593,
	594, 0, 1055, 595, 596, 597, 599, 600, 598, 601,
	1115, 602, 0, 0, 603, 604, 605, 661, 1138, 1175,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1052, 0, 0, 0,
	0, 0, 0, 0, 1048, 0, 0, 0, 0, 0,
	0, 1046, 1047, 0, 0, 0, 0, 0, 0, 0,
	1077, 0, 0, 2570, 1075, 2561, 2568, 1066, 1067, 1063,
	1064, 1076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1117, 1081, 0,
	0, 0, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 1130, 0, 287, 1137, 288, 1136, 0, 1147,
	289, 290, 291, 292, 293, 294, 1083, 1116, 1050, 295,
	1177, 1178, 622, 0, 296, 297, 1123, 0, 1104, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1158, 320, 321,
	322, 1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324,
	325, 326, 327, 1140, 2564, 1134, 1133, 1054, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1125, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1060, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1148, 1149, 359, 1072, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1132, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1159, 366,
	367, 1145, 1146, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1155, 0, 1082, 378, 0, 379,
	380, 381, 2565, 383, 1118, 1119, 1122, 460, 1161, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1160, 393, 1127, 1128, 0,
	1088, 0, 395, 396, 1162, 1120, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1156, 1165, 411,
	412, 1166, 0, 413, 0, 0, 0, 414, 415, 418,
	1111, 1110, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 2566, 428, 2563, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 1051, 269, 1169, 457,
	458, 1073, 1121, 459, 1135, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1170, 470, 1171, 1150, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1151, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1131, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1172, 522, 523, 524, 525, 1061, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 2567, 0, 542, 543, 541, 544, 545, 546, 1114,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 1129, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1176, 564, 565, 566, 567,
	1152, 571, 572, 0, 573, 574, 1049, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1141, 1142, 1143, 1144, 0, 592, 0, 584, 585,
	586, 1153, 587, 1154, 1071, 588, 589, 590, 591, 0,
	593, 594, 0, 1055, 595, 596, 597, 599, 600, 598,
	601, 1115, 602, 0, 0, 603, 604, 605, 661, 1138,
	1175, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 2562, 613, 1052, 0, 0,
	0, 0, 0, 0, 0, 1048, 0, 0, 0, 0,
	0, 0, 1046, 1047, 0, 0, 0, 0, 0, 0,
	0, 1077, 0, 0, 2558, 1075, 2561, 2568, 1066, 1067,
	1063, 1064, 1076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1117, 1081,
	0, 0, 0, 279, 280, 1157, 281, 282, 283, 284,
	285, 286, 615, 1130, 0, 287, 1137, 288, 1136, 0,
	1147, 289, 290, 291, 292, 293, 294, 1083, 1116, 1050,
	295, 1177, 1178, 622, 0, 296, 297, 1123, 0, 1104,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1158, 320,
	321, 322, 1107, 1105, 1106, 1113, 1109, 1108, 1112, 323,
	324, 325, 326, 327, 1140, 2564, 1134, 1133, 1054, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1125, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1060, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1148, 1149, 359, 1072,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1132,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1159,
	366, 367, 1145, 1146, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1155, 0, 1082, 378, 0,
	379, 380, 381, 2565, 383, 1118, 1119, 1122, 460, 1161,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1160, 393, 1127, 1128,
	0, 1088, 0, 395, 396, 1162, 1120, 1163, 397, 398,
	399, 1164, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1156, 1165,
	411, 412, 1166, 0, 413, 0, 0, 0, 414, 415,
	418, 1111, 1110, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 2566, 428, 2563, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1167, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1168, 447, 1051, 269, 1169,
	457, 458, 1073, 1121, 459, 1135, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1170, 470, 1171, 1150, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1151, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1131, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1172, 522, 523, 524, 525, 1061,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 2567, 0, 542, 543, 541, 544, 545, 546,
	1114, 547, 548, 531, 532, 549, 550, 1173, 551, 552,
	553, 554, 555, 556, 1129, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1176, 564, 565, 566,
	567, 1152, 571, 572, 0, 573, 574, 1049, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1141, 1142, 1143, 1144, 0, 592, 0, 584,
	585, 586, 1153, 587, 1154, 1071, 588, 589, 590, 591,
	0, 593, 594, 0, 1055, 595, 596, 597, 599, 600,
	598, 601, 1115, 602, 0, 0, 603, 604, 605, 661,
	1138, 1175, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 2562, 613, 1052, 0,
	0, 0, 0, 0, 0, 0, 1048, 0, 0, 0,
	0, 0, 0, 1046, 1047, 1093, 1065, 1066, 1067, 1063,
	1064, 1076, 1077, 0, 0, 0, 1075, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1117, 1081, 0,
	0, 0, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 1130, 0, 287, 1137, 288, 1136, 0, 1147,
	289, 290, 291, 292, 293, 294, 1083, 1116, 1050, 295,
	1177, 1178, 622, 0, 296, 297, 1123, 0, 1104, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1158, 320, 321,
	322, 1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324,
	325, 326, 327, 1140, 328, 1134, 1133, 1054, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1125, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1060, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1148, 1149, 359, 1072, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1132, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1159, 366,
	367, 1145, 1146, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1155, 0, 1082, 378, 0, 379,
	380, 381, 382, 383, 1118, 1119, 1122, 460, 1161, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1160, 393, 1127, 1128, 0,
	1088, 0, 395, 396, 1162, 1120, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1156, 1165, 411,
	412, 1166, 0, 413, 0, 0, 0, 414, 415, 418,
	1111, 1110, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 1051, 269, 1169, 457,
	458, 1073, 1121, 459, 1135, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1170, 470, 1171, 1150, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1151, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1131, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1172, 522, 523, 524, 525, 1061, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1114,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 1129, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1176, 564, 565, 566, 567,
	1152, 571, 572, 0, 573, 574, 1049, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1141, 1142, 1143, 1144, 0, 592, 0, 584, 585,
	586, 1153, 587, 1154, 1071, 588, 589, 590, 591, 0,
	593, 594, 0, 1055, 595, 596, 597, 599, 600, 598,
	601, 1115, 602, 0, 0, 603, 604, 605, 661, 1138,
	1175, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1052, 0, 0,
	0, 0, 0, 0, 0, 1048, 0, 0, 0, 0,
	0, 0, 1046, 1047, 0, 0, 0, 0, 0, 1823,
	0, 1077, 0, 0, 0, 1075, 1093, 1065, 1066, 1067,
	1063, 1064, 1076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	2352, 277, 278, 0, 0, 0, 0, 0, 1117, 1081,
	0, 0, 0, 279, 280, 1157, 281, 282, 283, 284,
	285, 286, 615, 1130, 0, 287, 1137, 288, 1136, 0,
	1147, 289, 290, 291, 292, 293, 294, 1083, 1116, 1050,
	295, 1177, 1178, 622, 0, 296, 297, 1123, 0, 1104,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1158, 320,
	321, 322, 1107, 1105, 1106, 1113, 1109, 1108, 1112, 323,
	324, 325, 326, 327, 1140, 328, 1134, 1133, 1054, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1125, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1060, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1148, 1149, 359, 1072,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1132,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1159,
	366, 367, 1145, 1146, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1155, 0, 1082, 378, 0,
	379, 380, 381, 382, 383, 1118, 1119, 1122, 460, 1161,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1160, 393, 1127, 1128,
	0, 1088, 0, 395, 396, 1162, 1120, 1163, 397, 398,
	399, 1164, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1156, 1165,
	411, 412, 1166, 0, 413, 0, 0, 0, 414, 415,
	418, 1111, 1110, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1167, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1168, 447, 1051, 269, 1169,
	457, 458, 1073, 1121, 459, 1135, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1170, 470, 1171, 1150, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1151, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1131, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1172, 522, 523, 524, 525, 1061,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1114, 547, 548, 531, 532, 549, 550, 1173, 551, 552,
	553, 554, 555, 556, 1129, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1176, 564, 565, 566,
	567, 1152, 571, 572, 0, 573, 574, 1049, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1141, 1142, 1143, 1144, 0, 592, 0, 584,
	585, 586, 1153, 587, 1154, 1071, 588, 589, 590, 591,
	0, 593, 594, 0, 1055, 595, 596, 597, 599, 600,
	598, 601, 1115, 602, 0, 0, 603, 604, 605, 661,
	1138, 1175, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1052, 0,
	0, 0, 0, 0, 0, 0, 1048, 0, 0, 0,
	0, 0, 0, 1046, 1047, 0, 0, 0, 0, 0,
	0, 0, 1077, 0, 0, 1671, 1075, 1093, 1065, 1066,
	1067, 1063, 1064, 1076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1117,
	1081, 0, 0, 0, 279, 280, 1157, 281, 282, 283,
	284, 285, 286, 615, 1130, 0, 287, 1137, 288, 1136,
	0, 1147, 289, 290, 291, 292, 293, 294, 1083, 1116,
	1050, 295, 1177, 1178, 622, 0, 296, 297, 1123, 0,
	1104, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1158,
	320, 321, 322, 1107, 1105, 1106, 1113, 1109, 1108, 1112,
	323, 324, 325, 326, 327, 1140, 328, 1134, 1133, 1054,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1125, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1060, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1148, 1149, 359,
	1072, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1132, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1159, 366, 367, 1145, 1146, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1155, 0, 1082, 378,
	0, 379, 380, 381, 382, 383, 1118, 1119, 1122, 460,
	1161, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1160, 393, 1127,
	1128, 0, 1088, 0, 395, 396, 1162, 1120, 1163, 397,
	398, 399, 1164, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1156,
	1165, 411, 412, 1166, 0, 413, 0, 0, 0, 414,
	415, 418, 1111, 1110, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1167, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1168, 447, 1051, 269,
	1169, 457, 458, 1073, 1121, 459, 1135, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1170, 470, 1171, 1150, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1151,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1131, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1172, 522, 523, 524, 525,
	1061, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1114, 547, 548, 531, 532, 549, 550, 1173, 551,
	552, 553, 554, 555, 556, 1129, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1176, 564, 565,
	566, 567, 1152, 571, 572, 0, 573, 574, 1049, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 1141, 1142, 1143, 1144, 0, 592, 0,
	584, 585, 586, 1153, 587, 1154, 1071, 588, 589, 590,
	591, 0, 593, 594, 0, 1055, 595, 596, 597, 599,
	600, 598, 601, 1115, 602, 0, 0, 603, 604, 605,
	661, 1138, 1175, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1052,
	0, 0, 0, 0, 0, 0, 0, 1048, 0, 0,
	0, 0, 0, 0, 1046, 1047, 0, 0, 0, 0,
	0, 0, 0, 1077, 0, 0, 1603, 1075, 1093, 1065,
	1066, 1067, 1063, 1064, 1076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1117, 1081, 0, 0, 0, 279, 280, 1157, 281, 282,
	283, 284, 285, 286, 615, 1130, 0, 287, 1137, 288,
	1136, 0, 1147, 289, 290, 291, 292, 293, 294, 1083,
	1116, 1050, 295, 1177, 1178, 622, 0, 296, 297, 1123,
	0, 1104, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1158, 320, 321, 322, 1107, 1105, 1106, 1113, 1109, 1108,
	1112, 323, 324, 325, 326, 327, 1140, 328, 1134, 1133,
	1054, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1125, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1060, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1148, 1149,
	359, 1072, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1132, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1159, 366, 367, 1145, 1146, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1155, 0, 1082,
	378, 0, 379, 380, 381, 382, 383, 1118, 1119, 1122,
	460, 1161, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1160, 393,
	1127, 1128, 0, 1088, 0, 395, 396, 1162, 1120, 1163,
	397, 398, 399, 1164, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1156, 1165, 411, 412, 1166, 0, 413, 0, 0, 0,
	414, 415, 418, 1111, 1110, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1167, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1168, 447, 1051,
	269, 1169, 457, 458, 1073, 1121, 459, 1135, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1170, 470, 1171, 1150, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1151, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1131, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1172, 522, 523, 524,
	525, 1061, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1114, 547, 548, 531, 532, 549, 550, 1173,
	551, 552, 553, 554, 555, 556, 1129, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1176, 564,
	565, 566, 567, 1152, 571, 572, 0, 573, 574, 1049,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 1141, 1142, 1143, 1144, 0, 592,
	0, 584, 585, 586, 1153, 587, 1154, 1071, 588, 589,
	590, 591, 0, 593, 594, 0, 1055, 595, 596, 597,
	599, 600, 598, 601, 1115, 602, 0, 0, 603, 604,
	605, 661, 1138, 1175, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1052, 0, 0, 0, 0, 0, 0, 0, 1048, 0,
	0, 0, 0, 0, 0, 1046, 1047, 0, 0, 0,
	0, 0, 0, 0, 1077, 0, 0, 1598, 1075, 1093,
	1065, 1066, 1067, 1063, 1064, 1076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1117, 1081, 0, 0, 0, 279, 280, 1157, 281,
	282, 283, 284, 285, 286, 615, 1130, 0, 287, 1137,
	288, 1136, 0, 1147, 289, 290, 291, 292, 293, 294,
	1083, 1116, 1050, 295, 1177, 1178, 622, 0, 296, 297,
	1123, 0, 1104, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113, 1109,
	1108, 1112, 323, 324, 325, 326, 327, 1140, 328, 1134,
	1133, 1054, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1125, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1060, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1148,
	1149, 359, 1072, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1132, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1159, 366, 367, 1145, 1146, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1155, 0,
	1082, 378, 0, 379, 380, 381, 382, 383, 1118, 1119,
	1122, 460, 1161, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1160,
	393, 1127, 1128, 0, 1088, 0, 395, 396, 1162, 1120,
	1163, 397, 398, 399, 1164, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1156, 1165, 411, 412, 1166, 0, 413, 0, 0,
	0, 414, 415, 418, 1111, 1110, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1167, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1168, 447,
	1051, 269, 1169, 457, 458, 1073, 1121, 459, 1135, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1170, 470, 1171, 1150, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1151, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1131, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1172, 522, 523,
	524, 525, 1061, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1114, 547, 548, 531, 532, 549, 550,
	1173, 551, 552, 553, 554, 555, 556, 1129, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1176,
	564, 565, 566, 567, 1152, 571, 572, 0, 573, 574,
	1049, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 1141, 1142, 1143, 1144, 0,
	592, 0, 584, 585, 586, 1153, 587, 1154, 1071, 588,
	589, 590, 591, 0, 593, 594, 0, 1055, 595, 596,
	597, 599, 600, 598, 601, 1115, 602, 0, 0, 603,
	604, 605, 661, 1138, 1175, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1052, 0, 0, 0, 0, 0, 0, 0, 1048,
	0, 0, 0, 0, 0, 0, 1046, 1047, 0, 0,
	0, 0, 0, 0, 0, 1077, 0, 0, 1589, 1075,
	1093, 1065, 1066, 1067, 1063, 1064, 1076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1117, 1081, 0, 0, 0, 279, 280, 1157,
	281, 282, 283, 284, 285, 286, 615, 1130, 0, 287,
	1137, 288, 1136, 0, 1147, 289, 290, 291, 292, 293,
	294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0, 296,
	297, 1123, 0, 1104, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113,
	1109, 1108, 1112, 323, 324, 325, 326, 327, 1140, 328,
	1134, 1133, 1054, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1125, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1060,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1148, 1149, 359, 1072, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1132, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1159, 366, 367, 1145, 1146, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1155,
	0, 1082, 378, 0, 379, 380, 381, 382, 383, 1118,
	1119, 1122, 460, 1161, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1160, 393, 1127, 1128, 0, 1088, 0, 395, 396, 1162,
	1120, 1163, 397, 398, 399, 1164, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1156, 1165, 411, 412, 1166, 0, 413, 0,
	0, 0, 414, 415, 418, 1111, 1110, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1167, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1168,
	447, 1051, 269, 1169, 457, 458, 1073, 1121, 459, 1135,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1170, 470, 1171, 1150,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1151, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1131, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1172, 522,
	523, 524, 525, 1061, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1114, 547, 548, 531, 532, 549,
	550, 1173, 551, 552, 553, 554, 555, 556, 1129, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1176, 564, 565, 566, 567, 1152, 571, 572, 0, 573,
	574, 1049, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1141, 1142, 1143, 1144,
	0, 592, 0, 584, 585, 586, 1153, 587, 1154, 1071,
	588, 589, 590, 591, 0, 593, 594, 0, 1055, 595,
	596, 597, 599, 600, 598, 601, 1115, 602, 0, 0,
	603, 604, 605, 661, 1138, 1175, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1052, 0, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 1046, 1047, 0,
	0, 0, 0, 0, 0, 0, 1077, 0, 0, 1584,
	1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1117, 1081, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 1130, 0,
	287, 1137, 288, 1136, 0, 1147, 289, 290, 291, 292,
	293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0,
	296, 297, 1123, 0, 1104, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 1107, 1105, 1106,
	1113, 1109, 1108, 1112, 323, 324, 325, 326, 327, 1140,
	328, 1134, 1133, 1054, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1125, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1060, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1148, 1149, 359, 1072, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1132, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 1145, 1146, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1155, 0, 1082, 378, 0, 379, 380, 381, 382, 383,
	1118, 1119, 1122, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1160, 393, 1127, 1128, 0, 1088, 0, 395, 396,
	1162, 1120, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1156, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 1111, 1110, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121, 459,
	1135, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	1150, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1151, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1131,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 1061, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1114, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 1129,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1176, 564, 565, 566, 567, 1152, 571, 572, 0,
	573, 574, 1049, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1141, 1142, 1143,
	1144, 0, 592, 0, 584, 585, 586, 1153, 587, 1154,
	1071, 588, 589, 590, 591, 0, 593, 594, 0, 1055,
	595, 596, 597, 599, 600, 598, 601, 1115, 602, 0,
	0, 603, 604, 605, 661, 1138, 1175, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1052, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 1046, 1047,
	0, 0, 0, 0, 0, 0, 0, 1077, 0, 0,
	1496, 1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1117, 1081, 0, 0, 0, 279,
	280, 1157, 281, 282, 283, 284, 285, 286, 615, 1130,
	0, 287, 1137, 288, 1136, 0, 1147, 289, 290, 291,
	292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622,
	0, 296, 297, 1123, 0, 1104, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1158, 320, 321, 322, 1107, 1105,
	1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326, 327,
	1140, 328, 1134, 1133, 1054, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1125,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1060, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1148, 1149, 359, 1072, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1132, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1159, 366, 367, 1145, 1146,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1155, 0, 1082, 378, 0, 379, 380, 381, 382,
	383, 1495, 1119, 1122, 460, 1161, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1160, 393, 1127, 1128, 0, 1088, 0, 395,
	396, 1162, 1120, 1163, 397, 398, 399, 1164, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1156, 1165, 411, 412, 1166, 0,
	413, 0, 0, 0, 414, 415, 418, 1111, 1110, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1167, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121,
	459, 1135, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1170, 470,
	1171, 1150, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1151, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1131, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1172, 522, 523, 524, 525, 1061, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1114, 547, 548, 531,
	532, 549, 550, 1173, 551, 552, 553, 554, 555, 556,
	1129, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1176, 564, 565, 566, 567, 1152, 571, 572,
	0, 573, 574, 1049, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1141, 1142,
	1143, 1144, 0, 592, 0, 584, 585, 586, 1153, 587,
	1154, 1071, 588, 589, 590, 591, 0, 593, 594, 0,
	1055, 595, 596, 597, 599, 600, 598, 601, 1115, 602,
	0, 0, 603, 604, 605, 661, 1138, 1175, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1052, 0, 0, 0, 0, 0,
	0, 0, 1048, 0, 0, 0, 0, 0, 0, 1046,
	1047, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	0, 1490, 1075, 1093, 1065, 1066, 1067, 1063, 1064, 1076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1117, 1081, 0, 0, 0,
	279, 280, 1157, 281, 282, 283, 284, 285, 286, 615,
	1130, 0, 287, 1137, 288, 1136, 0, 1147, 289, 290,
	291, 292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178,
	622, 0, 296, 297, 1123, 0, 1104, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1158, 320, 321, 322, 1107,
	1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326,
	327, 1140, 328, 1134, 1133, 1054, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1125, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1060, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1148, 1149, 359, 1072, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1132, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1159, 366, 367, 1145,
	1146, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1155, 0, 1082, 378, 0, 379, 380, 381,
	382, 383, 1489, 1119, 1122, 460, 1161, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1160, 393, 1127, 1128, 0, 1088, 0,
	395, 396, 1162, 1120, 1163, 397, 398, 399, 1164, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1156, 1165, 411, 412, 1166,
	0, 413, 0, 0, 0, 414, 415, 418, 1111, 1110,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1167,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1168, 447, 1051, 269, 1169, 457, 458, 1073,
	1121, 459, 1135, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1170,
	470, 1171, 1150, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1151, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1131, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1172, 522, 523, 524, 525, 1061, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1114, 547, 548,
	531, 532, 549, 550, 1173, 551, 552, 553, 554, 555,
	556, 1129, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1176, 564, 565, 566, 567, 1152, 571,
	572, 0, 573, 574, 1049, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1141,
	1142, 1143, 1144, 0, 592, 0, 584, 585, 586, 1153,
	587, 1154, 1071, 588, 589, 590, 591, 0, 593, 594,
	0, 1055, 595, 596, 597, 599, 600, 598, 601, 1115,
	602, 0, 0, 603, 604, 605, 661, 1138, 1175, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1052, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	1046, 1047, 0, 0, 0, 0, 0, 0, 0, 1077,
	0, 0, 1483, 1075, 1093, 1065, 1066, 1067, 1063, 1064,
	1076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1117, 1081, 0, 0,
	0, 279, 280, 1157, 281, 282, 283, 284, 285, 286,
	615, 1130, 0, 287, 1137, 288, 1136, 0, 1147, 289,
	290, 291, 292, 293, 294, 1083, 1116, 1050, 295, 1177,
	1178, 622, 0, 296, 297, 1123, 0, 1104, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1158, 320, 321, 322,
	1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325,
	326, 327, 1140, 328, 1134, 1133, 1054, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1125, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1060, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1148, 1149, 359, 1072, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1132, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1159, 366, 367,
	1145, 1146, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1155, 0, 1082, 378, 0, 379, 380,
	381, 382, 383, 1118, 1119, 1122, 460, 1161, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1160, 393, 1127, 1128, 0, 1088,
	0, 395, 396, 1162, 1120, 1163, 397, 398, 399, 1164,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1156, 1165, 411, 412,
	1166, 0, 413, 0, 0, 0, 414, 415, 418, 1111,
	1110, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1167, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1168, 447, 1051, 269, 1169, 457, 458,
	1073, 1121, 459, 1135, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1170, 470, 1171, 1150, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1151, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1131, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1172, 522, 523, 524, 525, 1061, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1114, 547,
	548, 531, 532, 549, 550, 1173, 551, 552, 553, 554,
	555, 556, 1129, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1176, 564, 565, 566, 567, 1152,
	571, 572, 0, 573, 574, 1049, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1141, 1142, 1143, 1144, 0, 592, 0, 584, 585, 586,
	1153, 587, 1154, 1071, 588, 589, 590, 591, 0, 593,
	594, 0, 1055, 595, 596, 597, 599, 600, 598, 601,
	1115, 602, 0, 0, 603, 604, 605, 661, 1138, 1175,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1052, 0, 0, 0,
	0, 0, 0, 0, 1048, 0, 0, 0, 0, 0,
	0, 1046, 1047, 0, 0, 0, 0, 0, 0, 0,
	1077, 0, 0, 1303, 1075, 1093, 1065, 1066, 1067, 1063,
	1064, 1076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1117, 1081, 0,
	0, 0, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 1130, 0, 287, 1137, 288, 1136, 0, 1147,
	289, 290, 291, 292, 293, 294, 1083, 1116, 1050, 295,
	1177, 1178, 622, 0, 296, 297, 1123, 0, 1104, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1158, 320, 321,
	322, 1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324,
	325, 326, 327, 1140, 328, 1134, 1133, 1054, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1125, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1060, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1148, 1149, 359, 1072, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1132, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1159, 366,
	367, 1145, 1146, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1155, 0, 1082, 378, 0, 379,
	380, 381, 382, 383, 1118, 1119, 1122, 460, 1161, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1160, 393, 1127, 1128, 0,
	1088, 0, 395, 396, 1162, 1120, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1156, 1165, 411,
	412, 1166, 0, 413, 0, 0, 0, 414, 415, 418,
	1111, 1110, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 1051, 269, 1169, 457,
	458, 1073, 1121, 459, 1135, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1170, 470, 1171, 1150, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1151, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1131, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1172, 522, 523, 524, 525, 1061, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1114,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 1129, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1176, 564, 565, 566, 567,
	1152, 571, 572, 0, 573, 574, 1049, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1141, 1142, 1143, 1144, 0, 592, 0, 584, 585,
	586, 1153, 587, 1154, 1071, 588, 589, 590, 591, 0,
	593, 594, 0, 1055, 595, 596, 597, 599, 600, 598,
	601, 1115, 602, 0, 0, 603, 604, 605, 661, 1138,
	1175, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1052, 0, 0,
	0, 0, 0, 0, 0, 1048, 0, 0, 0, 0,
	0, 0, 1046, 1047, 1093, 1065, 1066, 1067, 1063, 1064,
	1076, 1077, 0, 0, 0, 1075, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1117, 1081, 0, 0,
	0, 279, 280, 1157, 281, 282, 283, 284, 285, 286,
	615, 1130, 0, 287, 1137, 288, 1136, 0, 1147, 289,
	290, 291, 292, 293, 294, 1083, 1116, 1050, 295, 1177,
	1178, 622, 0, 296, 297, 1123, 0, 1104, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1158, 320, 321, 322,
	1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325,
	326, 327, 1140, 328, 1134, 1133, 1054, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1125, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1060, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1148, 1149, 359, 1072, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1132, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1159, 366, 367,
	1145, 1146, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1155, 0, 1082, 378, 0, 379, 380,
	381, 382, 383, 1118, 1119, 1122, 460, 1161, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1160, 393, 1127, 1128, 0, 1088,
	0, 395, 396, 1162, 1120, 1163, 397, 398, 399, 1164,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1156, 1165, 411, 412,
	1166, 0, 413, 0, 0, 0, 414, 415, 418, 1111,
	1110, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1167, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1168, 447, 1051, 269, 1169, 457, 458,
	1073, 1121, 459, 1135, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1170, 470, 1171, 1150, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1151, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1131, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1172, 522, 523, 524, 525, 1061, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1114, 547,
	548, 531, 532, 549, 550, 1173, 551, 552, 553, 554,
	555, 556, 1129, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1176, 564, 565, 566, 567, 1152,
	571, 572, 0, 573, 574, 1049, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1141, 1142, 1143, 1144, 0, 592, 0, 584, 585, 586,
	1153, 587, 1154, 1071, 588, 589, 590, 591, 0, 593,
	594, 0, 1055, 595, 596, 597, 599, 600, 598, 601,
	1115, 602, 0, 0, 603, 604, 605, 661, 1138, 1175,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1052, 0, 0, 0,
	0, 0, 0, 0, 1048, 0, 0, 0, 0, 0,
	0, 1046, 1047, 1093, 1065, 1066, 1067, 1063, 1064, 1076,
	1077, 0, 0, 0, 1075, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1117, 1081, 0, 0, 0,
	279, 280, 1157, 281, 282, 283, 284, 285, 286, 615,
	1130, 0, 287, 1137, 288, 1136, 0, 1147, 289, 290,
	291, 292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178,
	622, 0, 296, 297, 1123, 0, 1104, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1158, 320, 321, 4476, 1107,
	1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326,
	327, 1140, 328, 1134, 1133, 1054, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1125, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1060, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1148, 1149, 359, 1072, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1132, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1159, 366, 367, 1145,
	1146, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1155, 0, 1082, 378, 0, 379, 380, 381,
	382, 383, 1118, 1119, 1122, 460, 1161, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1160, 393, 1127, 1128, 0, 1088, 0,
	395, 396, 1162, 1120, 1163, 397, 398, 399, 1164, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1156, 1165, 411, 412, 1166,
	0, 413, 0, 0, 0, 414, 415, 418, 1111, 1110,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1167,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1168, 447, 1051, 269, 1169, 457, 458, 1073,
	1121, 459, 1135, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1170,
	470, 1171, 1150, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1151, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1131, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1172, 522, 523, 524, 525, 1061, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1114, 547, 548,
	531, 532, 549, 550, 1173, 551, 552, 553, 554, 555,
	556, 1129, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1176, 564, 565, 566, 567, 1152, 571,
	572, 0, 573, 574, 1049, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1141,
	1142, 1143, 1144, 0, 592, 0, 584, 585, 586, 1153,
	587, 1154, 1071, 588, 589, 590, 591, 0, 4475, 594,
	0, 1055, 595, 596, 597, 599, 600, 598, 601, 1115,
	602, 0, 0, 603, 604, 605, 661, 1138, 1175, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1052, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	1046, 1047, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 1077,
	0, 0, 0, 1075, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1117, 1081, 0, 0, 0, 279,
	280, 1157, 281, 282, 283, 284, 285, 286, 4474, 1130,
	0, 287, 1137, 288, 1136, 0, 1147, 289, 290, 291,
	292, 293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622,
	0, 296, 297, 1123, 0, 1104, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1158, 320, 321, 4476, 1107, 1105,
	1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326, 327,
	1140, 328, 1134, 1133, 1054, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1125,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1060, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1148, 1149, 359, 1072, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1132, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1159, 366, 367, 1145, 1146,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1155, 0, 1082, 378, 0, 379, 380, 381, 382,
	383, 1118, 1119, 1122, 460, 1161, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1160, 393, 1127, 1128, 0, 1088, 0, 395,
	396, 1162, 1120, 1163, 397, 398, 399, 1164, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1156, 1165, 411, 412, 1166, 0,
	413, 0, 0, 0, 414, 415, 418, 1111, 1110, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1167, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121,
	459, 1135, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1170, 470,
	1171, 1150, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1151, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1131, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1172, 522, 523, 524, 525, 1061, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1114, 547, 548, 531,
	532, 549, 550, 1173, 551, 552, 553, 554, 555, 556,
	1129, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1176, 564, 565, 566, 567, 1152, 571, 572,
	0, 573, 574, 1049, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1141, 1142,
	1143, 1144, 0, 592, 0, 584, 585, 586, 1153, 587,
	1154, 1071, 588, 589, 590, 591, 0, 4475, 594, 0,
	1055, 595, 596, 597, 599, 600, 598, 601, 1115, 602,
	0, 0, 603, 604, 605, 661, 1138, 1175, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1052, 0, 0, 0, 0, 0,
	0, 0, 1048, 0, 0, 0, 0, 0, 0, 1046,
	1047, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 1077, 0,
	0, 0, 1075, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1117, 1081, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 1130, 0,
	287, 1137, 288, 1136, 0, 1147, 289, 290, 291, 292,
	293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0,
	296, 297, 1123, 0, 1104, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 4136, 322, 1107, 1105, 1106,
	1113, 1109, 1108, 1112, 323, 324, 325, 326, 327, 1140,
	328, 1134, 1133, 1054, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1125, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1060, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1148, 1149, 359, 1072, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1132, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 1145, 1146, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1155, 0, 4137, 378, 0, 379, 380, 381, 382, 383,
	1118, 1119, 1122, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1160, 393, 1127, 1128, 0, 1088, 0, 395, 396,
	1162, 1120, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1156, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 1111, 1110, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1051, 269, 1169, 457, 458, 1073, 1121, 459,
	1135, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	1150, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1151, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1131,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 4135, 1061, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1114, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 1129,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1176, 564, 565, 566, 567, 1152, 571, 572, 0,
	573, 574, 1049, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1141, 1142, 1143,
	1144, 0, 592, 0, 584, 585, 586, 1153, 587, 1154,
	1071, 588, 589, 590, 591, 0, 593, 594, 0, 1055,
	595, 596, 597, 599, 600, 598, 601, 1115, 602, 0,
	0, 603, 604, 605, 661, 1138, 1175, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1052, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 1046, 1047,
	1093, 1065, 1066, 1067, 3030, 3031, 1076, 1077, 0, 0,
	0, 1075, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1117, 1081, 0, 0, 0, 279, 280, 1157,
	281, 282, 283, 284, 285, 286, 615, 1130, 0, 287,
	1137, 288, 1136, 0, 1147, 289, 290, 291, 292, 293,
	294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0, 296,
	297, 1123, 0, 1104, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113,
	1109, 1108, 1112, 323, 324, 325, 326, 327, 1140, 328,
	1134, 1133, 1054, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1125, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1060,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1148, 1149, 359, 1072, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1132, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1159, 366, 367, 1145, 1146, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1155,
	0, 1082, 378, 0, 379, 380, 381, 382, 383, 1118,
	1119, 1122, 460, 1161, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1160, 393, 1127, 1128, 0, 1088, 0, 395, 396, 1162,
	1120, 1163, 397, 398, 399, 1164, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1156, 1165, 411, 412, 1166, 0, 413, 0,
	0, 0, 414, 415, 418, 1111, 1110, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1167, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1168,
	447, 1051, 269, 1169, 457, 458, 1073, 1121, 459, 1135,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1170, 470, 1171, 1150,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1151, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1131, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1172, 522,
	523, 524, 525, 1061, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1114, 547, 548, 531, 532, 549,
	550, 1173, 551, 552, 553, 554, 555, 556, 1129, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1176, 564, 565, 566, 567, 1152, 571, 572, 0, 573,
	574, 1049, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1141, 1142, 1143, 1144,
	0, 592, 0, 584, 585, 586, 1153, 587, 1154, 1071,
	588, 589, 590, 591, 0, 593, 594, 0, 1055, 595,
	596, 597, 599, 600, 598, 601, 1115, 602, 0, 0,
	603, 604, 605, 661, 1138, 1175, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1052, 0, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 1046, 1047, 1093,
	1065, 1066, 1067, 3028, 3029, 1076, 1077, 0, 0, 0,
	1075, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1117, 1081, 0, 0, 0, 279, 280, 1157, 281,
	282, 283, 284, 285, 286, 615, 1130, 0, 287, 1137,
	288, 1136, 0, 1147, 289, 290, 291, 292, 293, 294,
	1083, 1116, 1050, 295, 1177, 1178, 622, 0, 296, 297,
	1123, 0, 1104, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113, 1109,
	1108, 1112, 323, 324, 325, 326, 327, 1140, 328, 1134,
	1133, 1054, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1125, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1060, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1148,
	1149, 359, 1072, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1132, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1159, 366, 367, 1145, 1146, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1155, 0,
	1082, 378, 0, 379, 380, 381, 382, 383, 1118, 1119,
	1122, 460, 1161, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1160,
	393, 1127, 1128, 0, 1088, 0, 395, 396, 1162, 1120,
	1163, 397, 398, 399, 1164, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1156, 1165, 411, 412, 1166, 0, 413, 0, 0,
	0, 414, 415, 418, 1111, 1110, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1167, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1168, 447,
	1051, 269, 1169, 457, 458, 1073, 1121, 459, 1135, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1170, 470, 1171, 1150, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1151, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1131, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1172, 522, 523,
	524, 525, 1061, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1114, 547, 548, 531, 532, 549, 550,
	1173, 551, 552, 553, 554, 555, 556, 1129, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1176,
	564, 565, 566, 567, 1152, 571, 572, 0, 573, 574,
	1049, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 1141, 1142, 1143, 1144, 0,
	592, 0, 584, 585, 586, 1153, 587, 1154, 1071, 588,
	589, 590, 591, 0, 593, 594, 0, 1055, 595, 596,
	597, 599, 600, 598, 601, 1115, 602, 0, 0, 603,
	604, 605, 661, 1138, 1175, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1052, 0, 0, 0, 0, 0, 0, 0, 1048,
	0, 0, 0, 0, 0, 0, 1046, 1047, 1093, 1065,
	1066, 1067, 1063, 1064, 1076, 1077, 0, 0, 0, 1075,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1117, 1081, 0, 0, 0, 279, 280, 1157, 281, 282,
	283, 284, 285, 286, 615, 1130, 0, 287, 1137, 288,
	1136, 0, 1147, 289, 290, 291, 292, 293, 294, 1083,
	1116, 1050, 295, 1177, 1178, 622, 0, 296, 297, 1123,
	0, 1104, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1158, 320, 321, 322, 1107, 1105, 1106, 1113, 1109, 1108,
	1112, 323, 324, 325, 326, 327, 1140, 328, 1134, 1133,
	1054, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1125, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1060, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1148, 1149,
	359, 1072, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1132, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1159, 366, 367, 1145, 1146, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1155, 0, 1082,
	378, 0, 379, 380, 381, 382, 383, 1118, 1119, 1122,
	460, 1161, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1160, 393,
	1127, 1128, 0, 1088, 0, 395, 396, 1162, 1120, 1163,
	397, 398, 399, 1164, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1156, 1165, 411, 412, 1166, 0, 413, 0, 0, 0,
	414, 415, 418, 1111, 1110, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1167, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1168, 447, 1051,
	269, 1169, 457, 458, 1073, 1121, 459, 1135, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1170, 470, 1171, 1150, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1151, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1131, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1172, 522, 523, 524,
	525, 1061, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1114, 547, 548, 531, 532, 549, 550, 1173,
	551, 552, 553, 554, 555, 556, 1129, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1176, 564,
	565, 566, 567, 1152, 571, 572, 0, 573, 574, 1049,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 1141, 1142, 1143, 1144, 0, 592,
	0, 584, 585, 586, 1153, 587, 1154, 1071, 588, 589,
	590, 591, 0, 593, 594, 0, 1055, 595, 596, 597,
	599, 600, 598, 601, 1115, 602, 0, 0, 603, 604,
	605, 661, 1138, 1175, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1052, 0, 0, 0, 0, 0, 0, 0, 1048, 0,
	0, 0, 0, 0, 0, 2360, 2361, 1093, 1065, 1066,
	1067, 1063, 1064, 1076, 1077, 0, 0, 0, 1075, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1117,
	1081, 0, 0, 0, 279, 280, 1157, 281, 282, 283,
	284, 285, 286, 615, 1130, 0, 287, 1137, 288, 1136,
	0, 1147, 289, 290, 291, 292, 293, 294, 1083, 1116,
	0, 295, 1177, 1178, 622, 0, 296, 297, 1123, 0,
	1104, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1158,
	320, 321, 322, 1107, 1105, 1106, 1113, 1109, 1108, 1112,
	323, 324, 325, 326, 327, 1140, 328, 1134, 1133, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1125, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1060, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1148, 1149, 359,
	1072, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1132, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1159, 366, 367, 1145, 1146, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1155, 0, 1082, 378,
	0, 379, 380, 381, 382, 383, 1118, 1119, 1122, 460,
	1161, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1160, 393, 1127,
	1128, 0, 1088, 0, 395, 396, 1162, 1120, 1163, 397,
	398, 399, 1164, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1156,
	1165, 411, 412, 1166, 0, 413, 0, 0, 0, 414,
	415, 418, 1111, 1110, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1167, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1168, 447, 0, 269,
	1169, 457, 458, 1073, 1121, 459, 1135, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1170, 470, 1171, 1150, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1151,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1131, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1172, 522, 523, 524, 525,
	1061, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1114, 547, 548, 531, 532, 549, 550, 1173, 551,
	552, 553, 554, 555, 556, 1129, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1176, 564, 565,
	566, 567, 1152, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 1141, 1142, 1143, 1144, 0, 592, 0,
	584, 585, 586, 1153, 587, 1154, 1071, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 1115, 602, 0, 0, 603, 604, 605,
	661, 1138, 1175, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1093,
	1065, 1066, 1067, 1063, 1064, 1076, 0, 2580, 0, 0,
	0, 0, 0, 0, 2578, 2579, 270, 272, 271, 273,
	274, 275, 276, 1077, 277, 278, 0, 1075, 0, 0,
	0, 1117, 1081, 0, 0, 0, 279, 280, 1157, 281,
	282, 283, 284, 285, 286, 615, 1130, 0, 287, 1137,
	288, 1136, 0, 1147, 289, 290, 291, 292, 293, 294,
	1083, 1116, 0, 295, 1177, 1178, 622, 0, 296, 297,
	1123, 0, 1104, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113, 1109,
	1108, 1112, 323, 324, 325, 326, 327, 1140, 328, 1134,
	1133, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1125, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1060, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1148,
	1149, 359, 1072, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1132, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1159, 366, 367, 1145, 1146, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1155, 0,
	1082, 378, 0, 379, 380, 381, 382, 383, 1118, 1119,
	1122, 460, 1161, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1160,
	393, 1127, 1128, 0, 1088, 0, 395, 396, 1162, 1120,
	1163, 397, 398, 399, 1164, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1156, 1165, 411, 412, 1166, 0, 413, 0, 0,
	0, 414, 415, 418, 1111, 1110, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1167, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1168, 447,
	0, 269, 1169, 457, 458, 1073, 1121, 459, 1135, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1170, 470, 1171, 1150, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1151, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1131, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1172, 522, 523,
	524, 525, 3023, 3024, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1114, 547, 548, 531, 532, 549, 550,
	1173, 551, 552, 553, 554, 555, 556, 1129, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1176,
	564, 565, 566, 567, 1152, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 1141, 1142, 1143, 1144, 0,
	592, 0, 584, 585, 586, 1153, 587, 1154, 1071, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 1115, 602, 0, 0, 603,
	604, 605, 661, 1138, 1175, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1093, 1065, 1066, 1067, 1063, 1064, 1076, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 2067, 270, 272,
	271, 273, 274, 275, 276, 1077, 277, 278, 0, 1075,
	0, 0, 0, 1117, 1081, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 0, 1130, 0,
	287, 1137, 288, 1136, 0, 1147, 289, 290, 291, 292,
	293, 294, 1083, 1116, 1050, 295, 1177, 1178, 622, 0,
	296, 297, 1123, 0, 1104, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 4476, 1107, 1105, 1106,
	1113, 1109, 1108, 1112, 323, 324, 325, 326, 327, 1140,
	328, 1134, 1133, 1054, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1125, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1060, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1148, 1149, 359, 1072, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1132, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 1145, 1146, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1155, 0, 1082, 378, 0, 379, 380, 381, 382, 383,
	1118, 1119, 1122, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1160, 393, 1127, 1128, 0, 1088, 0, 395, 396,
	0, 1120, 0, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1156, 1165, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 1111, 1110, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 1051, 269, 0, 457, 458, 1073, 1121, 459,
	1135, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	1150, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1151, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1131,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 1061, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1114, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 1129,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1176, 564, 565, 566, 567, 1152, 571, 572, 0,
	573, 574, 1049, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1141, 1142, 1143,
	1144, 0, 592, 0, 584, 585, 586, 1153, 587, 1154,
	1071, 588, 589, 590, 591, 0, 4475, 594, 0, 1055,
	595, 596, 597, 599, 600, 598, 601, 1115, 602, 0,
	0, 603, 604, 605, 661, 1138, 1175, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 1215, 0, 0, 1046, 1047,
	0, 0, 0, 0, 0, 0, 0, 1077, 0, 0,
	0, 1075, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1117, 0, 0,
	0, 0, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 1116, 0, 295,
	620, 621, 622, 0, 296, 297, 1123, 0, 1104, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1158, 320, 321,
	322, 1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1148, 1149, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1159, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1155, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1118, 1119, 1122, 460, 1161, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1160, 393, 637, 638, 0,
	639, 0, 395, 396, 1162, 1120, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1201, 407, 409, 408, 0, 410, 1156, 1165, 411,
	412, 1166, 0, 413, 0, 0, 0, 414, 415, 418,
	1111, 1110, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 0, 269, 1169, 457,
	458, 0, 1121, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 1207, 465, 466, 467, 0, 0, 468, 469,
	644, 1170, 470, 1171, 1150, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1151, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1172, 522, 523, 524, 525, 651, 1209,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 229, 542, 543, 541, 544, 545, 546, 1114,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	1152, 571, 572, 0, 573, 574, 0, 570, 561, 231,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 1153, 587, 1154, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 1115, 602, 0, 0, 603, 604, 605, 1573, 662,
	663, 0, 607, 606, 608, 664, 1215, 0, 0, 0,
	223, 609, 610, 665, 611, 612, 613, 0, 0, 224,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1117, 1205,
	0, 1909, 0, 279, 280, 1157, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 1116, 0,
	295, 620, 621, 622, 0, 296, 297, 1123, 0, 1104,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1158, 320,
	321, 322, 1107, 1105, 1106, 1113, 1109, 1108, 1112, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1148, 1149, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1159,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1155, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 1118, 1119, 1122, 460, 1161,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1160, 393, 637, 638,
	0, 639, 0, 395, 396, 1162, 1120, 1163, 397, 398,
	399, 1164, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1201, 407, 409, 408, 0, 410, 1156, 1165,
	411, 412, 1166, 0, 413, 0, 0, 0, 414, 415,
	418, 1111, 1110, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1167, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1168, 447, 0, 269, 1169,
	457, 458, 0, 1121, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 1207, 465, 466, 467, 0, 0, 468,
	469, 644, 1170, 470, 1171, 1150, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1151, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1172, 522, 523, 524, 525, 651,
	1209, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 229, 542, 543, 541, 544, 545, 546,
	1114, 547, 548, 531, 532, 549, 550, 1173, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 1152, 571, 572, 0, 573, 574, 0, 570, 561,
	231, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 1153, 587, 1154, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 1115, 602, 0, 0, 603, 604, 605, 1573,
	662, 663, 0, 607, 606, 608, 664, 3183, 0, 1215,
	0, 223, 609, 610, 665, 611, 612, 613, 0, 0,
	224, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	1205, 1117, 1909, 0, 0, 0, 279, 280, 1157, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 1116, 0, 295, 620, 621, 622, 0, 296, 297,
	1123, 0, 1104, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1158, 320, 321, 322, 1107, 1105, 1106, 1113, 1109,
	1108, 1112, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1148,
	1149, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1159, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1155, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 1118, 1119,
	1122, 460, 1161, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1160,
	393, 637, 638, 0, 639, 0, 395, 396, 1162, 1120,
	1163, 397, 398, 399, 1164, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1201, 407, 409, 408, 0,
	410, 1156, 1165, 411, 412, 1166, 0, 413, 0, 0,
	0, 414, 415, 418, 1111, 1110, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1167, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1168, 447,
	0, 269, 1169, 457, 458, 0, 1121, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 1207, 465, 466, 467,
	0, 0, 468, 469, 644, 1170, 470, 1171, 1150, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1151, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1172, 522, 523,
	524, 525, 651, 1209, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1114, 547, 548, 531, 532, 549, 550,
	1173, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 1152, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 1153, 587, 1154, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 1115, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	1197, 0, 1215, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 1205, 1117, 1203, 0, 0, 0, 279,
	280, 1157, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 1116, 0, 295, 620, 621, 622,
	0, 296, 297, 1123, 0, 1104, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1158, 320, 321, 322, 1107, 1105,
	1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1148, 1149, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1159, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1155, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1118, 1119, 1122, 460, 1161, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1160, 393, 637, 638, 0, 639, 0, 395,
	396, 1162, 1120, 1163, 397, 398, 399, 1164, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1201, 407,
	409, 408, 0, 410, 1156, 1165, 411, 412, 1166, 0,
	413, 0, 0, 0, 414, 415, 418, 1111, 1110, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1167, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1168, 447, 0, 269, 1169, 457, 458, 0, 1121,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 1207,
	465, 466, 467, 0, 0, 468, 469, 644, 1170, 470,
	1171, 1150, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1151, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1172, 522, 523, 524, 525, 651, 1209, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1114, 547, 548, 531,
	532, 549, 550, 1173, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 1152, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 1153, 587,
	1154, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 1115, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1215, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1117, 1205, 0, 1203, 0,
	279, 280, 1157, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 1116, 0, 295, 620, 621,
	622, 0, 296, 297, 1123, 0, 1104, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1158, 320, 321, 322, 1107,
	1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1148, 1149, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1159, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1155, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1118, 1119, 1122, 460, 1161, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1160, 393, 637, 638, 0, 639, 0,
	395, 396, 1162, 1120, 1163, 397, 398, 399, 1164, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1201,
	407, 409, 408, 0, 410, 1156, 1165, 411, 412, 1166,
	0, 413, 0, 0, 0, 414, 415, 418, 1111, 1110,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1167,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1168, 447, 0, 269, 1169, 457, 458, 0,
	1121, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	1207, 465, 466, 467, 0, 0, 468, 469, 644, 1170,
	470, 1171, 1150, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1151, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1172, 522, 523, 524, 525, 651, 1209, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1114, 547, 548,
	531, 532, 549, 550, 1173, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 1152, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 1153,
	587, 1154, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 1115,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1215, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1117, 1205, 0, 1203,
	0, 279, 280, 1157, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 1116, 0, 295, 620,
	621, 622, 0, 296, 297, 1123, 0, 1104, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1158, 320, 321, 322,
	1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1148, 1149, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1159, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1155, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1118, 1119, 1122, 460, 1161, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1160, 393, 637, 638, 0, 639,
	0, 395, 396, 1162, 1120, 1163, 397, 398, 399, 1164,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1156, 1165, 411, 412,
	1166, 0, 413, 0, 0, 0, 414, 415, 418, 1111,
	1110, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1167, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1168, 447, 0, 269, 1169, 457, 458,
	0, 1121, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1170, 470, 1171, 1150, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1151, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1172, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1114, 547,
	548, 531, 532, 549, 550, 1173, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 1152,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	1153, 587, 1154, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	1115, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1215, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1117, 0, 0,
	3968, 0, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 1116, 0, 295,
	620, 621, 622, 0, 296, 297, 1123, 0, 1104, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1158, 320, 321,
	322, 1107, 1105, 1106, 1113, 1109, 1108, 1112, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1148, 1149, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1159, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1155, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1118, 1119, 1122, 460, 1161, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1160, 393, 637, 638, 0,
	639, 0, 395, 396, 1162, 1120, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1156, 1165, 411,
	412, 1166, 0, 413, 0, 0, 0, 414, 415, 418,
	1111, 1110, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 0, 269, 1169, 457,
	458, 0, 1121, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1170, 470, 1171, 1150, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1151, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1172, 522, 523, 524, 525, 651, 1209,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1114,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	1152, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 1153, 587, 1154, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 1115, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1039, 0, 1296, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 1808, 0, 0, 0, 279, 280, 1157, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 1301, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1158, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1159, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1161, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1160, 393,
	637, 638, 0, 639, 0, 395, 396, 1162, 640, 1163,
	397, 398, 399, 1164, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 1165, 411, 412, 1166, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1167, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1168, 447, 0,
	0, 1169, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1170, 470, 1171, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1172, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 229, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1173,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 231, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 1573, 662, 663, 0, 607, 606, 608, 664, 1570,
	0, 1296, 0, 223, 609, 610, 665, 611, 612, 613,
	0, 0, 224, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 185, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 1301, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1160, 393, 637, 638, 0, 639, 0, 395, 396,
	1162, 640, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 0, 0, 1169, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 229, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 231, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 1573, 662, 663, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 223, 609, 610, 665,
	611, 612, 613, 1296, 1295, 224, 0, 0, 0, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 185, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 1157, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 1301, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1158, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1159, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1161, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1160, 393, 637, 638, 0, 639, 0,
	395, 396, 1162, 640, 1163, 397, 398, 399, 1164, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 1165, 411, 412, 1166,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1167,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1168, 447, 0, 0, 1169, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1170,
	470, 1171, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1172, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 1173, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1296, 1295, 0, 0, 0,
	0, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 1595,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 1301, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1158, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1159, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1161, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1160, 393, 637, 638, 0,
	639, 0, 395, 396, 1162, 640, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 1165, 411,
	412, 1166, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 0, 0, 1169, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1170, 470, 1171, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1172, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1296, 1295, 0,
	0, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 3462, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1157, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	1301, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1158,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1159, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1161, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1160, 393, 637,
	638, 0, 639, 0, 395, 396, 1162, 640, 1163, 397,
	398, 399, 1164, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1165, 411, 412, 1166, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1167, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1168, 447, 0, 0,
	1169, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1170, 470, 1171, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 2249, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1172, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1173, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1296,
	2163, 0, 0, 0, 0, 2164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 1595, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 1157, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 1301, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1158, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1159, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1161, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1160,
	393, 637, 638, 0, 639, 0, 395, 396, 1162, 640,
	1163, 397, 398, 399, 1164, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 2162, 409, 408, 0,
	410, 641, 1165, 411, 412, 1166, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1167, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1168, 447,
	0, 0, 1169, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1170, 470, 1171, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1172, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	1173, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1296, 1295, 0, 0, 0, 0, 1293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 1595, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 1301, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1160, 393, 637, 638, 0, 639, 0, 395, 396,
	1162, 640, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 0, 0, 1169, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 1215, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1117, 0, 0, 1579, 0, 279,
	280, 1157, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 1116, 0, 295, 620, 621, 622,
	0, 296, 297, 1123, 0, 1104, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1158, 320, 321, 322, 1107, 1105,
	1106, 1113, 1109, 1108, 1112, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1148, 1149, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1159, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1155, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1118, 1119, 1122, 460, 1161, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1160, 393, 637, 638, 0, 639, 0, 395,
	396, 1162, 1120, 1163, 397, 398, 399, 1164, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1156, 1165, 411, 412, 1166, 0,
	413, 0, 0, 0, 414, 415, 418, 1111, 1110, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1167, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1168, 447, 0, 269, 1169, 457, 458, 0, 1121,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1170, 470,
	1171, 1150, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1151, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1172, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1114, 547, 548, 531,
	532, 549, 550, 1173, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 1152, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 1153, 587,
	1154, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 1115, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1039, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 229, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 231,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 1573, 662,
	663, 0, 607, 606, 608, 664, 264, 0, 0, 0,
	223, 609, 610, 665, 611, 612, 613, 0, 0, 224,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 185, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 264, 2936, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 1923, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 264, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 4632, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 264,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 3412, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	264, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 1567, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 264, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 2924, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 264, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 3568, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 881, 0, 788, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 2240, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 795, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 879, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 793,
	575, 576, 577, 578, 579, 794, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 0, 786, 0,
	788, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 798, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 795, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 793, 575, 576, 577, 578, 579,
	794, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 1962, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 798,
	0, 0, 0, 279, 280, 1157, 281, 282, 283, 284,
	285, 286, 0, 1968, 0, 287, 1958, 288, 1974, 0,
	1981, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 1984, 1985, 0, 0, 296, 297, 0, 0, 1301,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1158, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 1140, 328, 1972, 1971, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1125, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 0, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 1970,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1159,
	366, 367, 1979, 1980, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 0,
	379, 380, 381, 382, 383, 0, 0, 0, 460, 1161,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1160, 393, 1965, 1966,
	0, 1961, 0, 395, 396, 1162, 0, 1163, 397, 398,
	399, 1164, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 0, 1165,
	411, 412, 1166, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1167, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1168, 447, 0, 0, 1169,
	457, 458, 0, 0, 459, 1973, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 0, 1170, 470, 1171, 0, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	1955, 483, 484, 485, 1956, 486, 487, 488, 0, 489,
	0, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1969, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1172, 522, 523, 524, 525, 0,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1173, 551, 552,
	553, 554, 555, 556, 1967, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1983, 564, 565, 566,
	567, 0, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1975, 1976, 1977, 1978, 0, 592, 0, 584,
	585, 586, 0, 587, 0, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 0,
	1959, 1982, 0, 607, 606, 608, 0, 788, 0, 0,
	0, 0, 609, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1949, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 795, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 793, 575, 576, 577, 578, 579, 794, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 788, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 798, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 795,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 2283, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 2284, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 793, 575, 576,
	577, 578, 579, 794, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 2285, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 2032, 0, 1296, 1999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 798, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1157, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	1301, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1158,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 1996,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1159, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1161, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1160, 393, 637,
	638, 0, 639, 0, 395, 396, 1162, 640, 1163, 397,
	398, 399, 1164, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1165, 411, 412, 1166, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1167, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1168, 447, 0, 0,
	1169, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1170, 470, 1171, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1172, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1997, 547, 548, 531, 532, 549, 550, 1173, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1993, 0,
	1296, 1999, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 1157,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 1301, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1158, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 1996, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1159, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 1161, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1160, 393, 637, 638, 0, 639, 0, 395, 396, 1162,
	640, 1163, 397, 398, 399, 1164, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 1165, 411, 412, 1166, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1167, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1168,
	447, 0, 0, 1169, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1170, 470, 1171, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1172, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1997, 547, 548, 531, 532, 549,
	550, 1173, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 788, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 795, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 1988, 537,
	538, 539, 540, 0, 1989, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	793, 575, 576, 577, 578, 579, 794, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 1987, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 788, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 798, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 795, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 1940, 537, 538, 539, 540, 0,
	1941, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 793, 575, 576, 577,
	578, 579, 794, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 1939, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1296, 1999, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 798, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 1157, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 1301, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1158, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 1996, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1159, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1161, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1160, 393, 637, 638, 0, 639, 0,
	395, 396, 1162, 640, 1163, 397, 398, 399, 1164, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 1165, 411, 412, 1166,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1167,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1168, 447, 0, 0, 1169, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1170,
	470, 1171, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1172, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1997, 547, 548,
	531, 532, 549, 550, 1173, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1296, 1295, 0, 0, 0,
	0, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 1301, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1158, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1159, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1161, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1160, 393, 637, 638, 0,
	639, 0, 395, 396, 1162, 640, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 1165, 411,
	412, 1166, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 0, 0, 1169, 457,
	458, 3755, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1170, 470, 1171, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1172, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1296, 1295, 0,
	0, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1157, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	1301, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1158,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1159, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1161, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1160, 393, 637,
	638, 0, 639, 0, 395, 396, 1162, 640, 1163, 397,
	398, 399, 1164, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1165, 411, 412, 1166, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1167, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1168, 447, 0, 0,
	1169, 457, 458, 3383, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1170, 470, 1171, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1172, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1173, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1623, 0, 1296, 1295, 0,
	0, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 798, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1157, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	1301, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1158,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 1622, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1159, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1161, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1160, 393, 637,
	638, 0, 639, 0, 395, 396, 1162, 640, 1163, 397,
	398, 399, 1164, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1165, 411, 412, 1166, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1167, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1168, 447, 0, 0,
	1169, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1170, 470, 1171, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 1621, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1172, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	1620, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1173, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1541,
	0, 1296, 1295, 0, 0, 0, 0, 1293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	1157, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 1301, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1158, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1159, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	1540, 635, 636, 460, 1161, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1160, 393, 637, 638, 0, 639, 0, 395, 396,
	1162, 640, 1163, 397, 398, 399, 1164, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 1165, 411, 412, 1166, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1167, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1168, 447, 0, 0, 1169, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1170, 470, 1171,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1172,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 1173, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1501, 0, 1296, 1295, 0, 0, 0,
	0, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 1301, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1158, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1159, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1161, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1160, 393, 637, 638, 0,
	639, 0, 395, 396, 1162, 640, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 1165, 411,
	412, 1166, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 0, 0, 1169, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1170, 470, 1171, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1172, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1469, 0, 1296,
	1295, 0, 0, 0, 0, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 1157, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 1301, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1158, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1159, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 1468, 635,
	636, 460, 1161, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1160,
	393, 637, 638, 0, 639, 0, 395, 396, 1162, 640,
	1163, 397, 398, 399, 1164, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 1165, 411, 412, 1166, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1167, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1168, 447,
	0, 0, 1169, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1170, 470, 1171, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1172, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	1173, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1290, 0, 1296, 1295, 0, 0, 0, 0, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 1157, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 1301, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1158, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1159, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1289, 635, 636, 460, 1161, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1160, 393, 637, 638, 0, 639, 0,
	395, 396, 1162, 640, 1163, 397, 398, 399, 1164, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 1165, 411, 412, 1166,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1167,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1168, 447, 0, 0, 1169, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1170,
	470, 1171, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1172, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 1173, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1296, 1295, 0, 0, 0,
	0, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 1157, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 1301, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1158, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1159, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1161, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1160, 393, 637, 638, 0,
	639, 0, 395, 396, 1162, 640, 1163, 397, 398, 399,
	1164, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 1165, 411,
	412, 1166, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1167, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1168, 447, 0, 0, 1169, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1170, 470, 1171, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1172, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 1173, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1296, 1999, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 1157, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 1301,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1158, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 2039, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1159,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1161,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1160, 393, 637, 638,
	0, 639, 0, 395, 396, 1162, 640, 1163, 397, 398,
	399, 1164, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1165,
	411, 412, 1166, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1167, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1168, 447, 0, 0, 1169,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1170, 470, 1171, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1172, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1173, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1296, 1295, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1157, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	1301, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1158,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1159, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1161, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1160, 393, 637,
	638, 0, 639, 0, 395, 396, 1162, 640, 1163, 397,
	398, 399, 1164, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1165, 411, 412, 1166, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1167, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1168, 447, 0, 0,
	1169, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1170, 470, 1171, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1172, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1173, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 1296, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 1157, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 1301, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1158, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1159, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1161, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1160, 393, 637, 638, 0, 639, 0,
	395, 396, 1162, 640, 1163, 397, 398, 399, 1164, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 1165, 411, 412, 1166,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1167,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1168, 447, 0, 0, 1169, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1170,
	470, 1171, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1172, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 1173, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 2746, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 2743, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 2750, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 2949, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	2749, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 2946, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 2948, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 2945, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 2748, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 2947, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 2746, 296, 297, 623, 0, 0, 2740,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 2743, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 2750, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 2749, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 2739, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 2748, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 2747, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1694, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 1693, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 1697, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 1695, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 1696, 606, 608, 664, 1443,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	1445, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 1207, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 1440, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1442, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 1207, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1347, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 1349, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 1207, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 697, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 696, 275, 276, 686, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 689, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 690, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 691, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 685, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 686, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 689, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	690, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	691, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 1207, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 3335, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 2894, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 2893, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 2255,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 2196, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 2203, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 2202,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 2189, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 2191, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 2159, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 1207, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	1545, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1544, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1460, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1453, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 1455, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 1280,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	1279, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 1270, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1269, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1267, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 1266, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1262, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 1261,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 667, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 255, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 264, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 689, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 690, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 691, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	2292, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 2290, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 2288, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 264, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 2209, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 2018, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 2012, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 868, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 867, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 866, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 2949, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	4035, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 754, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 1317, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 1315, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 755, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 751, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 1318, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 750, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 754, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 1317, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 1315, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 755, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 751, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 1318, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 750, 656, 657, 658, 0,
	592, 0, 584, 1316, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	676, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 675, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 674, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 264, 2936, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 264, 4045, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 4305, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 3945, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 264, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 3723, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 2632, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 264,
	2936, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 2933,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 2265,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 2253, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 754,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 744, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 755, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 751, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 1578, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 750, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 1551, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1550, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1535, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 1533, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1528, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 1505, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1503, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1466, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1448, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	1285, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1284, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1276, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1275, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 1229, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 760, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 754, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	744, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	742, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 743, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 755, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 745, 526, 0, 527, 528, 534, 535,
	529, 530, 751, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 746, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 750, 656, 657, 658,
	0, 592, 0, 584, 748, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 736, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 737, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 699, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 693, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	671, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 3432, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 3369,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 3302, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 264, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 3300, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 3285, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 2904, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 737, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	2227, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 0, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 264, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1247, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 1180, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 0, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 0,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 0,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 0, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1742, 1743, 0, 1775,
	1776, 1777, 1785, 1786, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 1773,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 0, 1742, 1743, 0,
	1775, 1776, 1777, 1785, 1786, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	1773, 1744, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 1764, 0, 0, 0, 0, 1791, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1768, 1769, 1770, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 1768, 1769, 1770,
	0, 0, 1782, 0, 0, 1792, 1750, 0, 0, 0,
	0, 1772, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	1789, 0, 0, 0, 0, 0, 0, 1759, 1760, 0,
	0, 0, 0, 1782, 0, 0, 1792, 0, 0, 0,
	0, 0, 1772, 1774, 0, 1780, 0, 0, 0, 1742,
	1743, 0, 1775, 1776, 1777, 1785, 1786, 1787, 0, 1788,
	1765, 1789, 0, 0, 0, 0, 0, 0, 1759, 1760,
	0, 1778, 1773, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 1780, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 1767, 1768,
	1769, 1770, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 1742, 1743, 0, 1775,
	1776, 1777, 1785, 1786, 1787, 1782, 0, 0, 1792, 0,
	0, 0, 0, 0, 1772, 1774, 0, 0, 1778, 1773,
	0, 1783, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 1788, 0, 1789, 0, 1791, 0, 0, 0, 0,
	1759, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 1765, 0, 0, 0, 0, 0, 0,
	1761, 1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784,
	1762, 1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749,
	1751, 1752, 0, 0, 0, 0, 4326, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 1756, 1757, 1763,
	1784, 1762, 1758, 1779, 1755, 1753, 1754, 1746, 1747, 1748,
	1749, 1751, 1752, 0, 0, 0, 0, 4291, 0, 0,
	0, 0, 0, 0, 0, 1767, 1768, 1769, 1770, 0,
	0, 0, 0, 0, 0, 1750, 0, 1742, 1743, 0,
	1775, 1776, 1777, 1785, 1786, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	1773, 0, 0, 0, 0, 0, 1771, 1745, 0, 0,
	0, 0, 1782, 0, 0, 1792, 1791, 0, 0, 0,
	0, 1772, 1774, 0, 0, 0, 0, 1766, 1742, 1743,
	0, 1775, 1776, 1777, 1785, 1786, 1787, 0, 1788, 0,
	1789, 0, 1744, 0, 0, 0, 0, 1759, 1760, 0,
	1778, 1773, 1764, 1783, 0, 0, 0, 0, 1745, 0,
	0, 1761, 0, 0, 0, 1780, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 1768, 1769, 1770,
	1779, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 1756,
	1757, 1763, 1784, 1762, 1758, 0, 1755, 1753, 1754, 1746,
	1747, 1748, 1749, 1751, 1752, 0, 0, 0, 0, 4290,
	0, 0, 0, 1782, 0, 0, 1792, 1767, 1768, 1769,
	1770, 0, 1772, 1774, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 1788,
	0, 1789, 0, 0, 0, 0, 0, 0, 1759, 1760,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 1780, 1792, 0, 0,
	0, 0, 0, 1772, 1774, 0, 0, 0, 0, 0,
	1783, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 1789, 0, 0, 0, 0, 0, 0, 1759,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784,
	1762, 1758, 1779, 1755, 1753, 1754, 1746, 1747, 1748, 1749,
	1751, 1752, 0, 0, 1771, 0, 4120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1766, 1775, 1776, 1777, 1785,
	1786, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 1773, 0, 0, 0,
	0, 1783, 0, 1745, 0, 1771, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 1783, 0, 0, 0, 0, 1761, 0, 0,
	0, 1742, 1743, 0, 1775, 1776, 1777, 1785, 1786, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 1773, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 0, 1781, 0, 0, 0, 0, 1756, 1757, 1763,
	1784, 1762, 1758, 0, 1755, 1753, 1754, 1746, 1747, 1748,
	1749, 1751, 1752, 0, 0, 0, 1744, 3964, 0, 0,
	0, 0, 1767, 1768, 1769, 1770, 1764, 0, 0, 0,
	0, 0, 1750, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 1756, 1757,
	1763, 1784, 1762, 1758, 0, 1755, 1753, 1754, 1746, 1747,
	1748, 1749, 1751, 1752, 0, 0, 0, 0, 3900, 1782,
	0, 0, 1792, 0, 0, 0, 0, 0, 1772, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 1789, 0, 0,
	0, 0, 0, 0, 1759, 1760, 0, 0, 0, 0,
	1767, 1768, 1769, 1770, 0, 0, 0, 0, 0, 0,
	1750, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 0, 0,
	1792, 0, 0, 0, 0, 0, 1772, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 1788, 0, 1789, 0, 0, 0, 0,
	0, 0, 1759, 1760, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 1742, 1743, 0, 1775, 1776, 1777, 1785,
	1786, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 1773, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 1771, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 1783, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 1756, 1757, 1763, 1784, 1762, 1758, 0,
	1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 0,
	0, 0, 0, 3899, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 1768, 1769, 1770, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	0, 1756, 1757, 1763, 1784, 1762, 1758, 0, 1755, 1753,
	1754, 1746, 1747, 1748, 1749, 1751, 1752, 0, 0, 1782,
	0, 3898, 1792, 0, 0, 0, 0, 0, 1772, 1774,
	0, 0, 0, 0, 0, 1742, 1743, 0, 1775, 1776,
	1777, 1785, 1786, 1787, 0, 1788, 0, 1789, 0, 0,
	0, 0, 0, 0, 1759, 1760, 0, 1778, 1773, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 1780, 0, 1791, 0, 1742, 1743, 0, 1775,
	1776, 1777, 1785, 1786, 1787, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 1773,
	1744, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	1764, 0, 0, 0, 0, 1791, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 1768, 1769, 1770, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 1767, 1768, 1769, 1770, 0,
	0, 1782, 0, 0, 1792, 1750, 0, 0, 0, 0,
	1772, 1774, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 1789,
	0, 0, 0, 0, 0, 0, 1759, 1760, 0, 0,
	0, 0, 1782, 0, 0, 1792, 0, 0, 0, 0,
	0, 1772, 1774, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 1765,
	1789, 0, 0, 0, 0, 0, 0, 1759, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 1790, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 1756, 1757, 1763, 1784, 1762, 1758, 1779,
	1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 0,
	0, 0, 0, 3573, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 1743, 0, 1775, 1776, 1777, 1785, 1786,
	1787, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1778, 1773, 0, 0, 0, 0,
	0, 0, 1745, 1771, 0, 0, 0, 0, 0, 1783,
	0, 1791, 0, 1742, 1743, 0, 1775, 1776, 1777, 1785,
	1786, 1787, 0, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 1773, 1744, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 1764, 0, 0,
	1783, 0, 1791, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784, 1762,
	1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751,
	1752, 1767, 1768, 1769, 1770, 3103, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784,
	1762, 1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749,
	1751, 1752, 1767, 1768, 1769, 1770, 3102, 0, 1782, 0,
	0, 1792, 1750, 0, 0, 0, 0, 1772, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 0, 1789, 0, 0, 0,
	0, 0, 0, 1759, 1760, 0, 0, 0, 0, 1782,
	0, 0, 1792, 0, 0, 0, 0, 0, 1772, 1774,
	0, 1780, 0, 0, 0, 1742, 1743, 0, 1775, 1776,
	1777, 1785, 1786, 1787, 0, 1788, 1765, 1789, 0, 0,
	0, 0, 0, 0, 1759, 1760, 0, 1778, 1773, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 1780, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 0, 1767, 1768, 1769, 1770, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 0, 1792, 0, 0, 0, 0, 0,
	1772, 1774, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 1789,
	0, 0, 0, 0, 0, 0, 1759, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 0,
	0, 0, 1756, 1757, 1763, 1784, 1762, 1758, 0, 1755,
	1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 0, 0,
	0, 0, 3101, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 1756, 1757, 1763, 1784, 1762, 1758, 1779,
	1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 0,
	0, 0, 0, 3100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1743, 0, 1775,
	1776, 1777, 1785, 1786, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 1773,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 1771, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 1783,
	1761, 0, 0, 0, 0, 1742, 1743, 0, 1775, 1776,
	1777, 1785, 1786, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 1773, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 1767, 1768, 1769, 1770, 0,
	1764, 0, 0, 0, 0, 1750, 4546, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784, 1762,
	1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751,
	1752, 0, 1782, 3067, 0, 1792, 0, 0, 0, 0,
	0, 1772, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	1789, 0, 0, 0, 0, 0, 0, 1759, 1760, 0,
	0, 0, 0, 0, 1767, 1768, 1769, 1770, 0, 0,
	0, 0, 0, 0, 1750, 1780, 3163, 0, 0, 0,
	3162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 0, 1792, 0, 0, 0, 0, 0,
	1772, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 1788, 0, 1789,
	0, 0, 0, 0, 0, 0, 1759, 1760, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 4545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 1742, 1743, 0, 1775,
	1776, 1777, 1785, 1786, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 1773,
	0, 0, 0, 0, 3038, 0, 1745, 0, 0, 0,
	0, 0, 1771, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 1783,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784,
	1762, 1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749,
	1751, 1752, 0, 0, 0, 0, 0, 0, 0, 3039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2605, 0,
	0, 0, 0, 0, 0, 1742, 1743, 0, 1775, 1776,
	1777, 1785, 1786, 1787, 0, 1767, 1768, 1769, 1770, 0,
	0, 0, 0, 0, 0, 1750, 0, 1778, 1773, 0,
	0, 0, 2604, 0, 0, 1745, 0, 0, 0, 0,
	1781, 0, 0, 0, 1791, 1756, 1757, 1763, 1784, 1762,
	1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751,
	1752, 0, 1782, 0, 0, 1792, 0, 0, 0, 0,
	1744, 1772, 1774, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 1788, 1761,
	1789, 0, 0, 0, 0, 0, 0, 1759, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 1768, 1769, 1770, 0, 0,
	0, 0, 1790, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 0, 1792, 0, 0, 0, 0, 0,
	1772, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 1789,
	0, 0, 0, 0, 0, 0, 1759, 1760, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 1742, 1743, 0, 1775, 1776,
	1777, 1785, 1786, 1787, 1766, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 1778, 1773, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	1783, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1771, 0, 0, 0, 1756, 1757, 1763, 1784,
	1762, 1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749,
	1751, 1752, 0, 1766, 1767, 1768, 1769, 1770, 0, 0,
	0, 0, 0, 0, 1750, 0, 1742, 1743, 0, 1775,
	1776, 1777, 1785, 1786, 1787, 0, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 1773,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 1782, 0, 0, 1792, 1791, 0, 0, 0, 0,
	1772, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 1789,
	0, 1744, 0, 0, 0, 0, 1759, 1760, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784, 1762,
	1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1768, 1769, 1770, 1779,
	1036, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 0, 1775, 1776, 1777, 1785,
	1786, 1787, 1782, 0, 0, 1792, 0, 0, 0, 0,
	0, 1772, 1774, 0, 0, 1778, 1773, 0, 0, 0,
	0, 0, 1771, 1745, 0, 0, 0, 0, 1788, 0,
	1789, 0, 1791, 0, 0, 0, 0, 1759, 1760, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 1744, 1742,
	1743, 0, 1775, 1776, 1777, 1785, 1786, 1787, 1764, 1783,
	1765, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 1778, 1773, 0, 0, 0, 3164, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 1768, 1769, 1770, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 3169, 0,
	1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784, 1762,
	1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751,
	1752, 0, 0, 1771, 0, 0, 0, 0, 0, 1782,
	0, 0, 1792, 0, 0, 0, 0, 0, 1772, 1774,
	0, 0, 0, 0, 1766, 0, 0, 0, 1767, 1768,
	1769, 1770, 0, 0, 0, 1788, 0, 1789, 1750, 0,
	0, 0, 0, 0, 1759, 1760, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 1765, 1792, 0,
	0, 0, 0, 0, 1772, 1774, 0, 0, 0, 0,
	0, 0, 0, 3554, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 1789, 0, 0, 0, 0, 0, 0,
	1759, 1760, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784,
	1762, 1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749,
	1751, 1752, 0, 0, 0, 0, 1742, 1743, 0, 1775,
	1776, 1777, 1785, 1786, 1787, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 1773,
	1771, 0, 0, 1779, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1768, 1769, 1770, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 1781, 0,
	0, 0, 0, 1756, 1757, 1763, 1784, 1762, 1758, 0,
	1755, 1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 0,
	0, 0, 1742, 1743, 0, 1775, 1776, 1777, 1785, 1786,
	1787, 0, 1782, 0, 0, 1792, 0, 0, 0, 0,
	0, 1772, 1774, 0, 1778, 1773, 0, 0, 0, 3104,
	0, 0, 1745, 0, 0, 0, 0, 0, 1788, 0,
	1789, 1791, 0, 0, 1781, 0, 0, 1759, 1760, 1756,
	1757, 1763, 1784, 1762, 1758, 0, 1755, 1753, 1754, 1746,
	1747, 1748, 1749, 1751, 1752, 1780, 0, 1744, 1742, 1743,
	0, 1775, 1776, 1777, 1785, 1786, 1787, 1764, 0, 0,
	1765, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	1778, 1773, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	3131, 1767, 1768, 1769, 1770, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 1782, 0,
	0, 1792, 0, 0, 0, 0, 0, 1772, 1774, 0,
	0, 0, 0, 0, 1766, 0, 0, 1767, 1768, 1769,
	1770, 0, 0, 0, 1788, 0, 1789, 1750, 0, 0,
	0, 0, 0, 1759, 1760, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 1765, 1792, 0, 0,
	0, 0, 0, 1772, 1774, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 1789, 0, 0, 0, 0, 0, 0, 1759,
	1760, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 1756, 1757, 1763, 1784,
	1762, 1758, 0, 1755, 1753, 1754, 1746, 1747, 1748, 1749,
	1751, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 927,
	0, 973, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 935, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 949, 0, 933, 932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 934, 0, 0, 0, 1771, 937, 0, 0, 0,
	0, 981, 0, 0, 0, 0, 0, 0, 0, 0,
	946, 947, 0, 0, 0, 0, 1766, 0, 0, 963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 974, 939, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 940, 0, 0, 0, 0,
	0, 0, 0, 0, 972, 0, 0, 1781, 0, 0,
	0, 0, 1756, 1757, 1763, 1784, 1762, 1758, 0, 1755,
	1753, 1754, 1746, 1747, 1748, 1749, 1751, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 942,
	0, 0, 0, 0, 0, 0, 0, 931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 0, 943, 944, 0, 1756, 1757,
	1763, 1784, 1762, 1758, 0, 1755, 1753, 1754, 1746, 1747,
	1748, 1749, 1751, 1752, 951, 950, 0, 0, 0, 0,
	0, 0, 945, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 978, 971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 938, 0, 0,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 936, 0, 0, 0, 967, 968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 965, 0, 0, 0, 0, 0, 0, 979, 961,
	0, 954, 952, 0, 957, 0, 0, 0, 0, 0,
	958, 0, 0, 929, 0, 976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 969, 0,
	959, 0, 0, 0, 0, 0, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 977, 0, 0,
	0, 0, 0, 0, 0, 962, 0, 0, 0, 0,
	0, 0, 0, 0, 941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 966,
}

var sqlPact = [...]int{
	259, -1000, -1000, -1000, -1000, 274, -1000, -1000, 271, 269,
	263, 240, 239, 238, 237, 231, 230, 229, 223, -1000,
	-1000, -1000, -1000, -1000, -1000, 221, -1000, -1000, 220, -1000,
	211, 207, 204, -1000, -1000, 202, -1000, 199, -1000, -1000,
	-1000, -1000, 197, 196, 192, 88912, 88369, 89448, 2244, 109428,
	95908, 1940, 79709, 108885, 79166, 108342, 2097, 12108, 107799, 2709,
	186, -1000, 107256, 184, 180, 179, -1000, 106713, -1000, 2069,
	-1000, 178, -1000, 6221, 64476, 177, 176, 175, 2256, 174,
	-1000, 171, 166, -1000, -1000, 163, -1000, 12407, 1471, -1000,
	162, 161, -1000, 475, 93743, 157, 155, 2410, 154, 153,
	63931, 152, 150, 2081, 2844, -1000, -1000, 1992, -1000, -1000,
	147, 143, 140, 138, 137, 134, 133, 124, 123, 121,
	119, -1000, 116, 115, 114, 113, 110, -1000, 107, 106,
	103, -1000, 102, -1000, 100, 99, 84, 81, 78, 77,
	76, 75, 72, 71, 68, 64, 63, 62, 121347, -1000,
	1825, 1644, 1640, 1637, 1634, 1632, 992, 60, 57, 56,
	52, 40, 39, 37, 36, 35, 33, 31, 28, 27,
	25, 24, 21, 18, 168, 17, 16, 15, 14, 8,
	3, -2, 2482, -1000, 1475, 1083, 30191, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 115324, 109964, -4, -65, -5, -1000, 3227,
	1055, 53048, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	336, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 515, 2086,
	773, -1000, -1000, -1000, 106177, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2243, -30, -1000, 1960, -1000, -1000, -1000,
	-1000, -1000, 771, -1000, 2238, 322, 2186, -1000, -1000, -1000,
	3287, 2415, 3673, 3671, 3669, 3668, 3667, 114788, 1771, 3666,
	2486, 3665, 3664, 3663, 3660, 3659, 3658, 3657, -1000, 87826,
	1027, 87283, 86740, 3300, 105641, 86197, 105098, 73209, 45201, 947,
	3285, -1000, -1000, -1000, -1000, -1000, -1000, 109964, -1000, 1026,
	-1000, -1000, 3656, 3655, 2036, 770, 95365, -1000, 1941, -1000,
	942, 31898, -1000, 1242, -1000, 31898, 335, -1000, -1000, -1000,
	-1000, -1000, -1000, 3652, 3651, 3649, 3648, 3647, -1000, -1000,
	78623, 23311, 78080, 77537, 104555, 22757, 85654, 85111, 3645, 3642,
	3640, 3639, 104012, 72655, 1025, 1400, -1000, -1000, -1000, -1000,
	-1000, -1000, -25, 70439, 3435, 109964, -1000, 332, -1000, -1000,
	-1000, -1000, -1000, -1000, 44620, 720, 44039, 660, 43458, 298,
	-1000, -1000, -1000, -1000, 72101, -1000, 103469, 2408, 3638, 3636,
	1117, 3635, 3184, 1685, 3634, 1796, 1200, 3633, 3632, 3630,
	3627, 3626, 3625, 3621, 1379, 102926, 2920, 1447, 102383, 1657,
	71547, 1024, 84568, 89448, 2629, 101840, 1432, 1365, -1000, -1000,
	-1000, -1000, 3021, 2817, 2812, 1302, -1000, -1000, -1000, -1000,
	55757, 9639, 8332, 11349, 101297, 58517, 89448, 89448, -1000, -1000,
	-1000, -1000, -1000, 42877, 690, 42296, 919, -1000, -1000, 56309,
	2869, -1000, -1000, -1000, -1000, 41715, 407, 41134, 853, 109964,
	-1000, 2919, 1810, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1682,
	1609, 3433, 2692, 70993, 2009, 1397, 3257, 3020, 3019, 1510,
	3018, 3620, 2539, 3016, 3015, 3012, 3005, 3001, 1588, 2548,
	408, 29610, 2907, 1638, 40553, 1479, 1508, 2998, 2997, 3466,
	1943, 1927, 1982, 76994, 3618, 3616, 3218, 2996, 2992, 2745,
	2991, -1000, 2868, -1000, -1000, -1000, -1000, 1468, -1000, -1000,
	-1000, -1000, 80245, -1000, -1000, 1306, -1000, -1000, 1306, -1000,
	-1000, -1000, -1000, -1000, 1228, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1475, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1997, -1000, 2027,
	-1000, -1000, 2418, 3203, 3203, 3203, 3283, 464, 453, -1000,
	168, -1000, -1000, 121017, -1000, -1000, 45770, 45770, 45770, 45770,
	45770, 45770, 45770, 2107, -1000, 768, -1000, -1000, 807, -1000,
	764, 641, -1000, -1000, -1000, -1000, -1000, -1000, 763, -1000,
	-1000, -1000, -1000, -1000, -1000, 3435, -1000, 26136, -1000, -1000,
	-1000, 509, 760, 45770, -1000, -1000, 3482, 3481, 1020, -1000,
	330, 956, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2916, 749, 748, -1000, 746, 743,
	742, 741, 739, -1000, -1000, -1000, 737, 736, 735, 733,
	732, 728, 726, 722, -1000, 2016, -1000, -1000, -1000, -1000,
	-1000, -1000, 685, 681, 681, 681, -1000, 1018, -1000, -1000,
	-1000, 333, 680, 324, 678, 675, 674, -1000, 715, 713,
	710, 709, 708, 707, 704, 703, 702, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1012, -1000, -1000, -1000, -1000, -26,
	109964, -1000, 515, -26, -1000, -1000, 701, -1000, 34186, 34186,
	34186, -1000, -1000, 2236, 45770, -1000, 2459, -1000, -18, -18,
	894, 54671, -1000, 51962, 894, 301, 814, 60142, -1000, 2867,
	-1000, -1000, 697, 323, -1000, -1000, -1000, -1000, 23863, 2860,
	109964, 109964, 89448, 89448, 89448, 3615, 3096, 45770, -1000, -1000,
	68258, 109964, 89984, -1000, -1000, 3385, 65012, 67722, 109964, 2914,
	67186, 3614, -1000, -1000, -1000, -1000, -1000, 3069, 3613, 3612,
	3611, -1000, 109964, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	212, 3068, -1000, -1000, 93200, 212, 3067, -1000, 212, 3066,
	-1000, 92664, -1000, -1000, 2156, 3065, -1000, -1000, 214, 3064,
	-1000, -1000, -1000, 213, 3063, -1000, -1000, 321, -57, 3062,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 121017, -1000, -1000, -1000, 66643, -1000, 3217, -1000,
	-1000, 109964, -1000, 45770, -1000, 3383, 1608, 74302, 3330, -40,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2458, 2447, 1137,
	2273, -1000, 3119, 1894, -1000, 31898, 3165, -1000, -1000, -1000,
	312, 23863, -1000, -1000, -1000, -1000, -1000, -1000, 3650, 3061,
	1522, -1000, 2272, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2118, 3060, -1000, 1867, 3059, 2115, -1000, -1000, 2610,
	-1000, 3204, -1000, -1000, 2135, 3058, -17, -1000, -1000, 2281,
	-1000, -1000, -1000, -1000, -1000, 1885, -1000, 981, 3056, -1000,
	84025, 57965, 56309, 70439, -29, -1000, -1000, -1000, -1000, -191,
	-1000, 22203, 121017, -1000, -1000, -1000, -1000, 1735, 121017, 923,
	-1000, -1000, 3050, -1000, 121017, 912, -1000, -1000, 3042, -1000,
	2912, -1000, -1000, 2360, -1000, -1000, 3610, -1000, -1000, 3609,
	-1000, 3608, 3607, 3605, -1000, 1643, 1949, 3604, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 83489, 2233, -1000, -1000,
	82403, 2911, -1000, 2358, 3328, -1000, 82946, 1023, -1000, 981,
	2357, -1000, 92128, 1037, 2356, -1000, 3603, 3291, 2655, 981,
	2348, -1000, -1000, -1000, -1000, -1000, 1038, -1000, 61765, -1000,
	61765, -1000, 1573, -1000, 114252, -18, 89448, 3435, -1000, -82,
	-1000, -1000, -1000, 1055, -1000, 55214, -1000, 55214, 94822, 73761,
	966, 796, 63388, 121017, -1000, -1000, -1000, -1000, 121017, -1000,
	-1000, -1000, -143, 2691, -1000, 73761, 57413, 121017, -1000, -1000,
	-1000, -1000, 121017, -1000, -1000, -1000, 73761, 82403, -1000, 100754,
	81867, -1000, -1000, 1376, 2490, -1000, -1000, -1000, 73761, 1303,
	73761, 73761, 73761, -1000, 100211, -1000, -1000, 2031, 1413, 3206,
	2001, 89448, -1000, 1793, -1000, -1000, -1000, 3231, 109964, -1000,
	-1000, 2910, -1000, 66089, 91592, -1000, 91056, -1000, 90520, -1000,
	89448, -1000, 89448, -1000, 3579, 3576, 3572, -1000, -1000, 3571,
	-1000, 3566, 3225, -1000, 121017, 3224, -1000, 3565, 3320, 2907,
	121017, -1000, 3028, 1648, 1646, 109964, -1000, -1000, 109964, -1000,
	109964, -1000, -1000, -1000, 1518, -1000, -1000, 2454, -1000, -1000,
	-1000, -1000, 89448, 1305, -1000, -1000, -1000, -1000, -1000, -1000,
	2990, 3564, 1765, -1000, 1703, -1000, 2853, 3229, -1000, 1354,
	-1000, -1000, 225, -1000, -1000, -40, -1000, 113716, -1000, 2418,
	-1000, 109964, -1000, 2448, 2883, 2906, 1601, 2255, 2556, -1000,
	39972, 2540, 49184, 2263, 168, -1000, -1000, 168, 168, 31329,
	-1000, -1000, 65012, 65012, 23863, 1301, 45770, 45770, 45770, 45770,
	45770, 45770, 45770, 45770, 45770, 45770, 45770, 45770, 45770, 45770,
	45770, 45770, 45770, 45770, 45770, 45770, 45770, 45770, 45770, 45770,
	45770, 45770, 45770, 45770, 45770, 45770, 45770, 45770, 45770, 45770,
	45770, 1945, 45770, 1226, 45770, 45770, 45770, 45770, 2085, -1000,
	-1000, 1884, 558, 1979, -1000, 3426, 3426, 3426, 601, 601,
	6507, 6507, 608, 3562, 807, -1000, 45770, -1000, 95, 45770,
	24417, -1000, 453, 8513, 2461, -1000, 445, 24998, -1000, -1000,
	-1000, 26136, 641, 39391, 45770, 985, 121017, -1000, -1000, 1710,
	3441, 21650, 2929, 2738, 695, 907, 881, 29029, 28448, 27867,
	27286, 699, 45770, 45770, 45770, 45770, 45770, 45770, 45770, 45770,
	-1000, -1000, 3459, -1000, 3441, -1000, -1000, -1000, -1000, 3441,
	1241, 1235, 3441, -1000, 3441, 3441, 10108, 10108, 38822, 38241,
	37660, 49753, 37079, 45770, 26705, 36498, 35917, -1000, 109964, -26,
	3381, 45770, 216, -1000, 119754, -1000, 216, 216, 694, -83,
	121017, 2499, 2499, 53589, 2446, 2126, 2126, 2126, -1000, 894,
	17197, 894, 99134, 2146, 894, 894, 305, 327, 441, 51421,
	2459, 99134, 799, 691, -7, -8, -11, -1000, -1000, -12,
	-13, -1000, -1000, 89448, 688, 24417, 23863, 295, 1934, -85,
	2562, 2561, 2558, -1000, 2557, -1000, 1721, -88, 1225, 89448,
	109964, 3561, -84, -1000, 7505, -90, -1000, 1338, 289, 3441,
	-1000, -1000, -1000, -1000, -1000, 3559, 3556, -1000, 1008, 687,
	686, 371, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	685, 681, 681, 681, -1000, 333, 680, 324, 678, 675,
	674, -1000, -1000, -1000, -1000, -1000, 2849, 89448, 109964, 3555,
	-191, 89984, -80, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 109964, -1000, -1000, -1000, 3554, -1000, 89448, -1000, -1000,
	89448, 212, 3041, -1000, 89448, -1000, 89448, 208, 3037, -1000,
	-1000, 109964, -1000, 89448, 89448, -1000, 109964, 109964, 109964, 73761,
	73761, 217, -1000, 89448, 911, -93, 1125, -40, -1000, -1000,
	-1000, 1306, -1000, 1881, -1000, -1000, -1000, -1000, -1000, -1000,
	1412, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1020,
	-1000, -1000, -1000, -1000, -1000, -1000, 3446, 3439, -27, -1000,
	-1000, 23863, -1000, -41, 1615, 1851, 1223, -1000, 76451, 2282,
	3212, 3551, 2633, 3191, 1563, -1000, 1466, -1000, 3310, 80245,
	3342, 3361, 868, -1000, 2848, -1000, -1000, 940, 1748, 1676,
	1222, 1221, 80245, 1867, -1000, 65012, -1000, 2597, 3282, 1411,
	1406, 1411, 1411, 1385, -1000, 80245, 1674, 1220, 1219, 1216,
	1911, 1892, -1000, -1000, 1975, -1000, 1215, 1214, 835, 1869,
	-1000, -43, 3331, 3358, 815, -1000, 2845, 1212, -1000, -1000,
	-1000, 3280, 89448, 23863, 1540, 1519, 1541, 1668, 1208, -28,
	-1000, 3338, 1207, 1205, -1000, 5696, -1000, 73761, 2109, 3036,
	2690, 892, 2689, -1000, -1000, -1000, 892, -29, 70439, 109964,
	288, -1000, 95, 45770, 45770, 95, 45770, 95, 3314, 3033,
	-1000, -1000, -1000, -1000, -1000, 3549, 1922, 2484, -1000, -1000,
	673, 2346, 2842, 109964, 2572, -32, 89448, -1000, 65553, 3032,
	68799, 1867, 2345, -1000, -1000, 81324, -1000, 3027, 515, 2344,
	-1000, 790, 3548, 3026, -1000, 113180, -1000, 3217, 1311, 3022,
	1070, 693, 3380, -1000, 693, 62306, -1000, 109964, -1000, -18,
	8250, 75379, -95, -96, 440, -1000, 99675, 109964, 1069, 75915,
	109964, 3154, 977, 56309, -1000, 56309, -109, -143, 2684, 1440,
	966, 966, 892, -1000, 892, -1000, 89448, 2903, -1000, -1000,
	73761, 966, 966, 966, -1000, -1000, -1000, -1000, 3547, 3546,
	3541, 3540, -1000, -1000, 979, 89448, 109964, 89448, -1000, 286,
	-1000, 109964, -1000, 109964, 109964, 89448, -1000, 979, 109964, 979,
	109964, 979, 109964, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	95, 45770, -1000, -1000, 3539, 1602, -1000, 2894, -1000, 2884,
	-1000, 20, -1000, -1000, -1000, -1000, -1000, -1000, 1853, -1000,
	-1000, -1000, -1000, 89448, 89448, 89448, 89448, 109964, 3133, -1000,
	109964, 3130, 89448, -1000, 80245, -1000, 2448, 2883, -1000, -1000,
	-1000, -1000, -1000, -1000, 1355, 2199, -1000, 2529, -1000, 1526,
	-1000, -1000, -1000, 121017, 50305, -1000, -1000, 121017, 1775, -1000,
	48615, 48046, -1000, -1000, 1680, 89448, 2591, -1000, 2591, -129,
	-1000, 119605, 2527, 89448, -1000, -1000, -1000, -1000, -1000, 935,
	638, 638, 1286, 1286, 1286, 1286, 3303, 1313, 4815, 4904,
	9681, 9681, 4842, 4842, 4842, 4842, 4842, 9681, 551, 601,
	601, 551, 551, 551, 551, 551, 601, 601, 601, 9681,
	9681, 9681, 6507, 16483, 7429, 45770, 45770, 1203, 1866, 558,
	6879, 45770, 5538, 5538, 5538, 5538, -1000, 1561, -1000, -1000,
	-1000, -1000, 2841, 669, 49753, 49753, -1000, -1000, -1000, -1000,
	25567, 45770, -1000, -1000, -1000, -1000, 35336, -1000, -1000, 118794,
	-317, 439, -112, -45, -1000, 45770, 45770, 45770, 438, -1000,
	285, 45770, 109964, -1000, 15285, 798, -104, -1000, -114, 1408,
	-1000, 45770, -1000, -1000, 1201, -1000, 1199, 1198, 1197, -1000,
	667, 437, -1000, 283, -1000, 2104, 666, 664, 45770, -1000,
	-1000, -1000, -1000, -1000, 118572, -1000, -1000, 118531, -1000, -1000,
	118165, -1000, -1000, 118124, -1000, -1000, -1000, 120951, 14768, 14665,
	13899, 8425, 13440, 11248, -115, 436, -117, 435, 931, 925,
	434, 433, 429, -124, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -126, 428, -1000, 2839,
	-112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 427,
	-1000, 426, -1000, 120755, -112, 421, 2053, -1000, 49753, 49753,
	49753, -1000, 420, -1000, 119244, -1000, 120448, 34767, 34767, 34767,
	419, 120382, 45770, -112, -127, -1000, -132, -1000, -1000, 606,
	-133, 1001, 34186, 52505, 23863, -1000, 1001, 1001, 45770, -1000,
	45770, 2546, -1000, -1000, -1000, -1000, 2545, 1964, 2499, 53589,
	-1000, -1000, -1000, -1000, 99134, -1000, 3435, 2626, -1000, 99134,
	-1000, -1000, 109964, 515, -1000, 99134, 99134, 23863, 894, -1000,
	894, 99134, 724, -1000, -1000, -1000, -1000, -1000, 418, 59058,
	-45, 282, 23863, 981, -1000, -1000, 2634, 2634, 2634, 2634,
	-1000, -1000, 109964, 1196, -38, -208, -1000, 3401, -1000, 2029,
	-1000, 65012, -1000, 806, 1237, 23863, -1000, -1000, -1000, 655,
	-1000, 3441, 3441, -1000, 3441, 109964, 2829, 149, -1000, 118,
	68799, 68799, 3529, -1000, -1000, 212, -1000, 89448, 212, 212,
	-1000, 89448, 89448, 2156, -1000, 214, -1000, 213, -1000, -1000,
	-57, -1000, 997, 31898, -1000, 1306, -1000, -1000, 1546, -1000,
	1935, -1000, 1234, -1000, -1000, -1000, -1000, 31898, -1000, 2017,
	109964, 109964, 89448, -1000, 109964, -1000, 2023, 68799, -1000, 2343,
	112644, 2330, 65012, 109964, -1000, -1000, 653, 951, 2518, 2514,
	1063, 109964, 109964, 2512, 112108, 111572, -1000, 3528, 109964, 2034,
	45770, 3277, 2103, 2339, 95, 95, -1000, -1000, 95, 649,
	1294, 89448, 89448, 109964, 68799, 89448, 1931, -1000, -1000, -1000,
	-1000, -1000, 80781, -1000, -1000, 3452, 3450, -1000, 1411, -1000,
	-1000, -1000, 1411, 1867, 1805, 109964, 68799, 89448, 68799, 109964,
	109964, -1000, 1660, 109964, 1434, -1000, 835, 2043, 95, 95,
	-1000, -1000, 95, 646, 23863, 1908, -1000, 2947, 109964, 3480,
	111036, 3478, 109964, 109964, 109964, 68799, 3216, 109964, 109964, 68799,
	5696, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 69903, 1076, 981, 1649, 1194, 1191, 80245, 56309,
	973, 56309, 2665, -1000, -1000, 21097, -1000, 121017, 121017, -1000,
	121017, -1000, 65553, 109964, -1000, 1022, 109964, 75915, 958, 3013,
	61224, -191, 966, 73761, 89448, -32, 2572, 109964, -1000, -1000,
	1867, 3009, 515, 2341, -1000, 73761, 3378, 2980, 645, 3526,
	3523, -1000, 89448, 2231, 2334, -1000, -1000, 110500, 3083, 835,
	109964, 1001, 53589, 1890, -1000, 59601, 1040, 109964, 1720, 96,
	-1000, -1000, -1000, 5, 109964, -1000, 813, -1000, -1000, 8250,
	8250, 966, -207, 643, -1000, 886, 883, 56861, 73761, -134,
	-1000, -1000, -1000, -1000, 2330, 89448, 109964, 1285, 2650, 109964,
	-135, -1000, 281, 642, -1000, 2551, -1000, -143, -1000, 977,
	56309, 2827, 2822, -1000, -1000, 996, -1000, 1349, 966, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-19, 109964, -191, -191, -36, -38, -1000, 979, -1000, 979,
	-1000, 979, -1000, 121017, -1000, -1000, 1593, 1586, 109964, -1000,
	23863, 109964, 89448, 23863, 89448, 2882, 2881, -1000, -1000, -1000,
	109964, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1089, -1000,
	1775, 2197, -1000, 641, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2439, -1000, -39, 31329, 910, -1000, -1000,
	89448, -20, 45770, 45770, 5494, 5114, 45770, 49753, 49753, -1000,
	45770, 4752, -1000, -1000, -1000, -1000, -1000, 2811, 640, 45770,
	65012, 6583, 6130, -1000, 417, 10644, 551, -1000, 45770, -1000,
	416, 33617, -1000, 120014, -61, -140, -1000, 17763, -112, -146,
	-1000, -1000, 805, -1000, 3080, -1000, 45770, 120185, 2394, 1932,
	1787, 1594, 3441, 3477, 20544, -1000, 62847, 1002, 2155, 117902,
	-1000, -1000, -1000, -1000, 65012, 65012, 45770, 45770, -1000, 45770,
	45770, 45770, -1000, -1000, -1000, 3441, 918, -1000, -1000, -1000,
	918, -1000, -1000, 1411, -1000, 1411, -1000, 45770, -1000, -1000,
	2803, 45770, -1000, 65012, 65012, 49753, 49753, 49753, 49753, 49753,
	49753, 49753, 49753, 49753, 49753, 49753, 49753, 49753, 49753, 49753,
	49753, 49753, 49753, 49753, 2497, 49753, 3419, 3419, 3419, -1000,
	2880, 2803, 45770, 45770, 65012, 414, 405, 404, -1000, 45770,
	-112, -1000, -1000, 8250, 636, -1000, 2430, -1000, 2737, -1000,
	45770, -1000, -142, -1000, 2459, -1000, -1000, 2737, 2737, -148,
	121017, 53589, 53589, -1000, 630, 45770, 2502, -1000, -1000, 795,
	-319, -1000, 878, -1000, -1000, -1000, -1000, -1000, 515, -1000,
	-1000, -1000, 280, 99134, 99134, 787, -1000, -149, -1000, -1000,
	-151, -1000, 3377, 403, 23863, -1000, 1001, 2770, -1000, -1000,
	-1000, -1000, -1000, -1000, -191, 109964, 109964, 2179, 3476, -1000,
	3449, 803, 786, 278, 3441, 402, 400, 397, -191, 109964,
	109964, 109964, -1000, -1000, -1000, -1000, 212, -1000, -1000, -1000,
	208, -1000, -1000, -1000, -1000, 2593, -1000, -40, -1000, -1000,
	-1000, 45770, -1000, -1000, 3208, 1187, 1185, -1000, -1000, -1000,
	-1000, 2866, -1000, 2977, -1000, 2329, -1000, 1050, -1000, 1536,
	-1000, 45770, 627, 2639, 626, 625, 3522, 2074, 3520, 1067,
	2976, 2156, 2974, 2156, -1000, -1000, -1000, 948, -1000, 121017,
	2103, -1000, 621, 620, -1000, -41, 1578, 1802, 1172, 994,
	-1000, -1000, 45770, 45770, 98598, -1000, 462, 3204, -23, -1000,
	-1000, -1000, 1642, 1171, 1165, -1000, -1000, -1000, -1000, 1867,
	1614, 1162, 1157, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	993, -1000, 2950, 2949, 920, 109964, -1000, 988, -1000, -1000,
	45770, -1000, -43, 1156, 3329, 2324, 89448, -1000, 2156, 2973,
	1154, -1000, 1151, -1000, -1000, -1000, 3333, 3332, 1169, -1000,
	-1000, -1000, -1000, -1000, 69351, -1000, 109964, 68799, 89448, 1777,
	892, -1000, 2449, 892, 973, 2800, -1000, 2571, 984, 89448,
	3518, 395, -154, -44, 65012, 3371, -1000, 2248, 637, 89448,
	895, -1000, 3435, -1000, -1000, -1000, 983, -1000, 3325, 89448,
	3370, 2972, 981, 95, 89448, 3465, -1000, -1000, 3368, 89448,
	2970, 2222, 2323, 2466, 835, 74843, 981, 2149, -56, -1000,
	1720, 33036, 3200, -156, -1000, -1000, -1000, 1001, 62306, 53589,
	45770, 3516, -159, -1000, -1000, -1000, -1000, -1000, 96449, 96449,
	73761, 73761, 73761, 966, 109964, 109964, 75915, -1000, -1000, 619,
	109964, 109964, 618, -1000, 109964, 109964, 3515, 73761, -47, 614,
	-1000, 876, 871, 869, -1000, -1000, -1000, -1000, -1000, 977,
	-1000, -143, 56309, 95, -1000, 2169, 89448, -1000, 19991, -1000,
	-1000, -1000, -1000, -1000, -1000, 979, -1000, -1000, 2061, 2258,
	2061, 1751, 1736, -1000, -1000, 2191, -1000, -1000, -1000, -1000,
	2579, 3205, 23863, 3308, 5538, 45770, 45770, 539, 5344, 4706,
	5538, 45770, 45770, 65012, 9101, -162, 45770, 45770, -1000, 45770,
	784, 121017, 3472, 45770, 391, 390, -1000, -1000, -1000, 3437,
	-1000, -1000, -1000, 121017, 45770, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 389, -1000, 218, -1000, -1000, -1000, 115860, -1000,
	45770, 388, 3276, -1000, 386, 383, 9274, 498, 117540, 117452,
	117087, 381, -1000, -1000, 379, 378, 121017, 2880, 121017, -1000,
	-1000, 982, 982, 1398, 1398, 1398, 1398, 3419, 1016, 1106,
	594, 258, 258, 258, 584, 759, 759, 258, 258, 258,
	2799, 2472, 613, 7342, -1000, -1000, 121017, 121017, 377, -1000,
	-1000, -1000, -112, 369, 8250, -1000, 2729, 3275, 121017, -1000,
	53589, 2729, 2729, -1000, -1000, 1964, 109964, 121017, 53589, -1000,
	2626, -1000, 18327, -1000, 23863, -1000, -1000, -1000, -1000, 3435,
	-1000, 59058, -1000, 612, -1000, 6, -1000, 2770, -1000, 867,
	-1000, -1000, 73761, 73761, -191, -157, -1000, -1000, 780, 3514,
	802, 23863, 367, -1000, -1000, -1000, -191, -191, -191, -1000,
	-1000, -1000, 3150, 121017, 109964, 109964, 1493, 98062, 109964, 2969,
	-1000, 2473, -1000, 1063, 117036, 54130, -1000, 54130, 109964, -1000,
	-1000, 1893, 2560, 3512, 1111, -1000, 3234, 109964, -1000, 109964,
	-1000, -1000, -1000, 109964, 109964, 89448, 109964, -1000, 68799, 2958,
	-167, 121017, -50, -1000, 864, -1000, 1394, -1000, 19438, 109964,
	68799, 89448, 109964, 68799, 89448, 2093, -1000, -1000, 2948, -1000,
	2957, -173, 23863, -1000, 3471, 3470, 2968, 3240, -1000, 109964,
	3469, 109964, 89448, 3146, -1000, -1000, -1000, -1000, -1000, 1613,
	1149, 1148, 973, -51, 605, -1000, 857, -1000, -1000, 850,
	973, -1000, 73761, 56309, 3511, 515, -1000, 2628, -1000, 94279,
	2182, 95, -1000, 3510, 96990, 604, -1000, 2164, -1000, 778,
	-1000, 2392, 68799, 1867, 95, 89448, -1000, -1000, 515, 365,
	-52, -1000, 3076, 1053, 23863, 89448, 2967, 2470, 835, 74843,
	-1000, 1311, 2556, -1000, -55, -1000, 656, 95, 2149, -1000,
	-56, 121017, -1000, 843, -1000, -174, -1000, -1000, 362, -1000,
	3145, 3140, -1000, 2750, 54130, 603, 600, 109964, 3139, -1000,
	-1000, -181, 2298, 2298, 73761, 56309, 73761, -1000, 977, 892,
	-1000, 2303, -1000, -1000, -1000, -1000, -1000, 23863, 1712, -1000,
	591, 569, -1000, -1000, -1000, -1000, 3205, 5538, 5538, 45770,
	45770, 45770, 5538, 9101, -182, -1000, 5538, 5538, -112, -1000,
	-1000, 120014, -1000, -1000, -1000, 121017, -1000, 18885, 2068, -1000,
	116865, -1000, 31329, -1000, -1000, 45770, 45770, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 49753, 2797, 567, 65012, -1000,
	-1000, 351, 999, 45770, 47477, 2459, 999, 999, -1000, -188,
	-1000, -1000, -1000, 3435, 6, -1000, -1000, 3508, 23863, -1000,
	73761, -1000, -1000, 3507, 761, -1000, 3504, -1000, -1000, -1000,
	-1000, -1000, 2679, 3365, -1000, 1845, -1000, 109964, -1000, 109964,
	-1000, 23863, 109964, 2755, 1245, -1000, 951, 2511, 566, 49753,
	89448, 928, -1000, 3395, 2734, -190, -1000, 109964, 45770, 109964,
	-195, -196, 2307, -1000, -1000, 2302, 45770, -1000, -1000, 65012,
	565, 2156, 2156, -201, -202, -1000, -1000, -1000, 45770, 1147,
	109964, 32467, -1000, 3502, 3204, -1000, -1000, -1000, -1000, -1000,
	-1000, 109964, -1000, 45770, 1143, -1000, -1000, -1000, 3468, 2156,
	23863, 2156, -1000, 2156, 3240, 1108, 109964, 68799, 89448, -1000,
	2176, 2176, 73761, 56309, -1000, -57, 973, -1000, 3363, 2624,
	3501, -1000, -1000, -1000, -1000, 2496, -1000, -1000, 109964, 2491,
	968, -1000, -209, -1000, 840, 838, 75915, 958, 945, -1000,
	-58, 563, -1000, 837, -1000, -1000, -1000, -1000, 515, 3362,
	-1000, 3467, 562, 561, 109964, 2215, 560, 23863, 3196, 835,
	74843, -1000, 3083, 1720, -1000, 2314, 109964, 3190, -1000, 2556,
	558, -1000, 966, 557, 552, 2209, 2209, -210, 54130, 54130,
	-211, 550, 966, -1000, -212, -1000, -1000, -1000, -1000, -1000,
	-59, -1000, 914, 905, -1000, -1000, 89448, 89448, 45770, 45770,
	-1000, 5538, 5538, 5538, -1000, 347, -1000, -1000, 2149, 3272,
	-1000, -60, 116668, 116446, 468, 49753, 65012, -217, -1000, -1000,
	109964, 121017, -62, -1000, 121017, 549, 548, 476, -1000, -1000,
	-1000, 776, -1000, -1000, -1000, 3500, -1000, 97526, 109964, -1000,
	-1000, 1990, -1000, -1000, -1000, 109964, 2320, -1000, -1000, -1000,
	1062, 45770, 7342, 536, 45770, -1000, 3360, -1000, 2607, 2787,
	1831, 54130, -1000, 3205, -1000, 116405, -1000, 1042, 1854, -1000,
	-1000, 121017, 3240, 54130, -1000, -1000, 526, 523, 121017, 522,
	836, 2795, -1000, -1000, -1000, -1000, 121017, 519, 3329, -1000,
	-1000, -1000, -1000, 2156, 89448, -1000, -1000, -1000, -1000, -218,
	-1000, -1000, 1924, 95, 2050, 2677, -1000, 2182, 518, -1000,
	-1000, 2202, 2585, -1000, 96990, 31898, 31898, 342, 3359, 945,
	-1000, 3424, -1000, 3124, 3124, 45770, 3356, 95, -1000, 3465,
	54130, -1000, 89448, 54130, 2211, 1975, 2451, 74843, -1000, 2466,
	-1000, -1000, -219, 109964, 1720, -1000, -1000, 73761, 73761, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1042, -225, -227, -1000, 73761, -1000, -1000, 2303, -1000, 109964,
	-1000, 109964, -1000, -1000, -228, -230, -1000, 2057, 45770, 31329,
	-1000, -1000, 468, -233, -1000, -63, -1000, 3352, 47477, 3498,
	3496, 3493, -1000, -1000, -1000, 1835, -1000, -1000, -1000, 2966,
	2721, 16260, 2432, 109964, 15750, -1000, 2784, -1000, -1000, 2624,
	517, -1000, -1000, -1000, -1000, 910, 109964, 2624, 2719, 89448,
	1061, -235, 2061, 2061, 45770, 30760, 2092, 45770, -1000, -1000,
	3240, -1000, 2786, 3434, -1000, 958, -1000, 2082, 109964, -1000,
	3230, -1000, 3135, -1000, -1000, -1000, 2628, 95, -1000, -1000,
	-1000, -236, 121017, 95, -1000, 341, -238, 1053, -243, 89448,
	1947, -1000, 835, -1000, 2470, 1001, -1000, -1000, -245, -248,
	1831, 1042, 2043, -251, -1000, -254, -256, -1000, -1000, 338,
	46908, 46908, 46908, -112, -129, -1000, 109964, 516, -1000, -1000,
	-1000, -1000, -1000, 2941, 972, -1000, 2206, 1921, 22, 1082,
	-1000, -1000, 2043, 109964, -1000, -1000, -1000, 971, 515, -1000,
	45770, 1042, -257, -1000, 1033, -259, -1000, 1032, -262, -1000,
	2793, -1000, -265, 2156, 969, 3313, -1000, -1000, -1000, 2202,
	89448, -267, -1000, -1000, 2271, -1000, 2624, 968, -1000, -1000,
	-1000, 1042, 514, 1831, 511, 1427, 835, -1000, -1000, 1411,
	3196, 3089, 966, 966, 2624, 1831, 965, -1000, 966, -1000,
	-1000, -1000, 3023, -1000, 50857, 2200, 1734, 119155, 3023, 3023,
	-1000, -1000, 109964, 3298, -1000, 2208, 2207, 1474, -1000, -1000,
	-1000, -1000, -1000, -1000, 2734, -268, 3293, 2432, 121017, 2624,
	-1000, 2061, 2670, -1000, 2061, 2789, -1000, 2080, -1000, -1000,
	-1000, 1694, 3422, 2443, 508, -1000, 109964, 1719, 1707, 3492,
	2050, 2202, 1831, 54130, 2624, 54130, -1000, -1000, 109964, -1000,
	1975, 1287, -1000, -1000, 2043, 2624, 1001, 502, -1000, -1000,
	1711, 3391, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	834, -1000, 3110, -1000, 1079, 1942, 1942, 1001, -1000, 831,
	2206, -1000, -1000, 501, -1000, 497, -1000, 2163, -1000, -1000,
	-1000, -1000, 109964, -1000, -1000, 3488, -1000, 958, -1000, 2624,
	-270, 2043, -278, -1000, -191, 1947, -1000, 1559, 965, 2043,
	-1000, 1727, -1000, -1000, 2140, 46339, 45770, -1000, 3405, -1000,
	-1000, 2521, -1000, -1000, 45770, 2734, 45770, 45770, 60683, -279,
	-1000, 2202, 2043, 1042, 965, 1831, 1427, 62306, 1001, 965,
	-1000, -1000, -1000, 121017, -1000, -1000, -1000, 121017, -1000, -286,
	-287, -207, 96449, 2145, 2443, 965, 1831, 1001, 2624, -1000,
	-273, -1000, 1001, 2043, 1141, -288, -1000, -1000, -1000, -1000,
	1001, 2624, -1000, 2043, -1000, -1000, -1000, -1000, 478, -1000,
	-1000, 2043, 965, 45770, 965, 1001, -306, 1001, -1000, 2043,
	-1000, -1000,
}

var sqlPgo = [...]int{
	0, 4332, 4331, 4330, 4326, 4321, 4318, 4313, 4308, 4305,
	4301, 4296, 4287, 4286, 4285, 4283, 4281, 4277, 4274, 4273,
	4271, 4270, 4269, 4268, 4253, 4250, 4246, 4245, 4242, 4240,
	4230, 4229, 4228, 4225, 4222, 4218, 4217, 4216, 4214, 4213,
	4211, 4210, 4209, 4207, 4205, 4203, 4201, 4200, 4199, 4198,
	4197, 4194, 4193, 4192, 4191, 4190, 4187, 4186, 4183, 4181,
	4180, 4179, 4175, 61, 4174, 4173, 4171, 4170, 4168, 4167,
	4166, 4164, 4163, 4160, 4155, 4154, 4152, 4150, 4148, 4146,
	4144, 4142, 4139, 4136, 50, 4134, 255, 4133, 4132, 4131,
	4123, 4121, 4119, 4118, 4117, 4113, 4108, 4107, 4105, 254,
	4103, 111, 4098, 4097, 4095, 4093, 4091, 253, 4087, 4086,
	4085, 4084, 264, 4079, 4078, 4077, 4075, 4074, 4073, 4070,
	4069, 4067, 4066, 4065, 100, 142, 4064, 4061, 1234, 4058,
	4057, 4056, 4055, 4054, 4053, 4052, 4051, 4049, 4046, 230,
	4045, 252, 4042, 4041, 4040, 4039, 4038, 4036, 4034, 4033,
	4032, 4031, 4029, 4028, 4027, 4026, 4025, 4020, 4019, 4016,
	4012, 4010, 4006, 4002, 4001, 3998, 3997, 3995, 3994, 3993,
	3991, 3990, 3988, 3986, 3984, 3982, 3979, 3978, 234, 257,
	190, 3976, 3975, 251, 249, 3974, 3973, 3972, 3971, 3970,
	113, 6, 37, 3968, 3967, 89, 80, 84, 108, 99,
	91, 3966, 102, 3964, 121, 57, 3962, 12, 2, 283,
	231, 5164, 223, 3959, 3958, 3956, 229, 181, 3955, 222,
	3954, 3949, 3947, 3945, 73, 56, 171, 160, 158, 162,
	250, 3944, 146, 96, 76, 59, 43, 17, 64, 199,
	23, 3943, 242, 8, 128, 1, 36, 3941, 3938, 3937,
	3936, 3529, 131, 3934, 248, 233, 156, 3933, 3930, 3928,
	1135, 3927, 3925, 48, 3923, 186, 79, 130, 15, 118,
	3920, 137, 33, 3919, 157, 65, 3917, 154, 95, 85,
	10791, 10940, 3911, 127, 67, 200, 594, 209, 185, 194,
	159, 152, 148, 183, 198, 196, 168, 287, 3907, 238,
	3905, 3357, 74, 173, 3904, 3903, 3901, 81, 188, 109,
	3900, 3899, 69, 7, 20, 4, 9, 129, 29, 28,
	16, 3898, 53, 115, 45, 25, 3894, 31, 3879, 3878,
	3875, 3873, 3869, 41, 155, 3868, 259, 3867, 83, 47,
	22, 3866, 11, 203, 3865, 215, 119, 3864, 3863, 240,
	192, 177, 3859, 68, 213, 3856, 3855, 3854, 3853, 3850,
	120, 3, 116, 3844, 3842, 140, 3841, 46, 226, 184,
	3839, 55, 3838, 3837, 169, 97, 125, 256, 179, 217,
	110, 212, 170, 224, 3834, 3833, 3832, 174, 3830, 3829,
	206, 145, 3828, 3827, 189, 267, 93, 44, 77, 225,
	78, 180, 147, 3826, 193, 3825, 3823, 263, 166, 197,
	26, 14, 87, 124, 3821, 5, 221, 139, 218, 103,
	3816, 6460, 2735, 3346, 3815, 3814, 136, 114, 70, 126,
	141, 247, 112, 3813, 3812, 2935, 3811, 3808, 3807, 3806,
	172, 3804, 3803, 3802, 138, 149, 220, 3801, 94, 66,
	52, 21, 133, 236, 261, 105, 208, 167, 235, 3800,
	3799, 3798, 175, 3797, 104, 98, 163, 182, 239, 71,
	3796, 165, 3794, 134, 816, 62, 135, 3791, 210, 3790,
	3789, 3788, 3787, 3786, 3784, 3783, 228, 219, 3782, 3781,
	3780, 35, 178, 3779, 245, 150, 164, 106, 88, 3771,
	92, 3924, 3770, 216, 1086, 72, 244, 117, 246, 3769,
	3354, 58, 3766, 0, 12956, 6544, 9298, 12281, 3763, 4092,
	3751, 3748, 3745, 201, 132, 3742, 3741, 3740, 107, 3738,
	82, 3735, 3733, 63, 3732, 24, 18, 19, 32, 27,
	626, 463, 3730, 3728, 51, 123, 143, 3727, 262, 214,
	3724, 3721, 3718, 3717, 90, 3716, 42, 3715, 39, 3714,
	3713, 40, 13, 54, 3712, 3711, 191, 3709, 202, 243,
	3708, 151, 3707, 3356, 122, 3706, 3705, 3704, 60, 49,
	241, 86, 3699, 273, 3697, 3308, 3695, 3694, 30, 3693,
	3692, 227, 161, 204, 3691, 3690, 153, 3689, 3688, 3687,
	265, 3686, 3684, 3683, 38, 3682, 10, 3681, 3680, 195,
	3124, 3678, 3677, 34, 3676, 176,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 580, 580, 22, 42, 23, 43, 16, 581,
	581, 581, 581, 35, 24, 44, 28, 28, 28, 28,
	28, 193, 193, 193, 193, 21, 21, 38, 38, 227,
	227, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 576, 576, 229, 229,
	228, 223, 223, 582, 582, 230, 230, 230, 232, 232,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	475, 475, 475, 508, 508, 507, 507, 507, 506, 506,
	595, 595, 596, 596, 596, 596, 596, 127, 127, 373,
	373, 373, 52, 52, 52, 52, 52, 571, 571, 195,
	195, 195, 197, 197, 196, 196, 196, 196, 75, 75,
	587, 587, 588, 588, 586, 589, 589, 589, 194, 194,
	194, 123, 123, 123, 123, 123, 123, 124, 124, 125,
	125, 198, 198, 198, 200, 200, 199, 199, 199, 199,
	199, 199, 199, 199, 204, 15, 15, 15, 15, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 103, 103,
	510, 510, 511, 511, 189, 189, 190, 190, 190, 190,
	191, 191, 192, 192, 192, 66, 66, 201, 201, 203,
	203, 202, 202, 202, 202, 202, 54, 54, 54, 54,
	54, 54, 54, 55, 55, 55, 55, 55, 56, 56,
	56, 56, 56, 56, 57, 57, 57, 57, 57, 57,
	64, 64, 64, 64, 64, 180, 180, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	72, 72, 72, 72, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 598, 598, 599, 599, 600, 600, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 81, 81, 335, 335, 300,
	300, 82, 82, 82, 83, 83, 84, 84, 68, 68,
	569, 569, 350, 350, 466, 466, 69, 577, 577, 577,
	579, 579, 578, 578, 86, 86, 372, 372, 87, 87,
	87, 87, 87, 87, 88, 88, 88, 88, 88, 88,
	88, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 96, 96, 96, 96, 96,
	97, 97, 97, 94, 94, 94, 91, 91, 91, 90,
	90, 90, 95, 95, 95, 568, 289, 289, 93, 93,
	93, 92, 92, 92, 351, 351, 98, 98, 98, 98,
	301, 99, 99, 99, 99, 99, 99, 99, 99, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 468, 468, 100, 100, 100, 433, 433, 104,
	104, 104, 388, 388, 105, 105, 105, 105, 105, 106,
	106, 106, 106, 106, 106, 106, 106, 126, 126, 126,
	126, 126, 126, 126, 573, 573, 343, 343, 254, 254,
	254, 254, 116, 116, 116, 116, 117, 117, 117, 118,
	118, 185, 185, 133, 133, 133, 133, 133, 132, 132,
	132, 132, 132, 132, 58, 58, 58, 59, 59, 60,
	60, 61, 61, 62, 62, 63, 63, 63, 63, 63,
	135, 135, 592, 592, 137, 134, 134, 134, 136, 136,
	136, 136, 138, 139, 139, 139, 139, 139, 139, 139,
	139, 140, 140, 500, 500, 359, 359, 498, 498, 520,
	520, 499, 499, 305, 305, 305, 305, 305, 306, 306,
	306, 509, 509, 509, 509, 509, 509, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 186, 186, 187, 188, 188,
	188, 188, 188, 164, 164, 164, 179, 179, 179, 179,
	179, 179, 179, 167, 167, 167, 151, 151, 142, 142,
	142, 142, 142, 142, 142, 146, 146, 146, 146, 146,
	146, 146, 146, 143, 143, 153, 153, 153, 153, 153,
	147, 147, 148, 148, 148, 148, 174, 174, 150, 150,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 144,
	144, 144, 144, 155, 155, 155, 155, 395, 395, 395,
	178, 178, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 177, 177, 177, 177, 177, 177, 590,
	590, 591, 591, 171, 171, 171, 171, 171, 171, 447,
	447, 165, 165, 165, 165, 170, 170, 170, 170, 173,
	173, 173, 173, 378, 378, 162, 162, 162, 163, 163,
	163, 168, 168, 169, 166, 166, 172, 172, 172, 172,
	145, 145, 145, 145, 602, 602, 602, 175, 175, 161,
	161, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 603, 603, 157, 157, 157, 156, 156, 156,
	156, 159, 159, 160, 160, 160, 160, 160, 160, 158,
	149, 570, 570, 566, 566, 566, 566, 566, 566, 566,
	566, 567, 567, 567, 567, 572, 572, 109, 109, 109,
	109, 109, 119, 119, 119, 119, 119, 110, 110, 110,
	110, 110, 112, 112, 111, 111, 111, 111, 76, 76,
	76, 76, 76, 14, 14, 14, 77, 77, 245, 245,
	207, 207, 207, 324, 324, 208, 208, 313, 313, 313,
	313, 205, 205, 206, 206, 78, 78, 604, 604, 604,
	583, 583, 583, 584, 584, 584, 584, 584, 584, 307,
	307, 308, 308, 413, 413, 413, 413, 413, 311, 311,
	311, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	314, 314, 231, 231, 231, 322, 323, 323, 315, 315,
	321, 320, 320, 319, 319, 318, 318, 316, 317, 317,
	317, 326, 326, 325, 328, 328, 327, 412, 529, 529,
	531, 531, 531, 531, 531, 531, 531, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 396,
	396, 605, 605, 527, 527, 527, 528, 523, 523, 524,
	524, 524, 524, 524, 309, 309, 310, 310, 310, 310,
	525, 526, 341, 341, 451, 530, 530, 532, 532, 534,
	606, 606, 606, 606, 606, 606, 607, 607, 607, 411,
	411, 410, 410, 333, 333, 535, 535, 535, 535, 536,
	536, 536, 536, 536, 539, 538, 537, 537, 537, 537,
	537, 80, 80, 80, 375, 375, 374, 374, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 182, 182, 257, 257, 74, 74, 74,
	12, 12, 12, 585, 585, 585, 79, 79, 79, 79,
	79, 79, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 575, 575, 574, 574, 258, 258, 609, 609,
	85, 85, 85, 85, 85, 85, 85, 85, 469, 469,
	470, 470, 73, 73, 73, 73, 73, 397, 397, 394,
	394, 393, 393, 340, 340, 449, 449, 449, 450, 262,
	262, 263, 263, 224, 224, 224, 30, 29, 20, 20,
	25, 25, 26, 26, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 27, 27, 46, 46, 46, 46, 47,
	47, 47, 47, 50, 50, 51, 51, 45, 45, 45,
	45, 48, 48, 41, 41, 593, 593, 594, 594, 115,
	115, 120, 120, 120, 120, 120, 121, 121, 121, 121,
	122, 122, 122, 122, 131, 131, 181, 181, 181, 181,
	181, 181, 181, 53, 53, 53, 53, 65, 65, 65,
	65, 129, 611, 611, 611, 130, 130, 130, 610, 610,
	255, 255, 407, 407, 408, 408, 612, 612, 409, 409,
	409, 409, 409, 248, 247, 249, 249, 250, 250, 71,
	71, 71, 240, 240, 239, 237, 237, 512, 512, 242,
	242, 242, 243, 243, 233, 233, 234, 234, 235, 235,
	236, 236, 246, 246, 613, 613, 107, 107, 107, 184,
	184, 299, 299, 299, 404, 404, 404, 334, 334, 269,
	269, 406, 406, 406, 406, 371, 371, 371, 183, 183,
	348, 348, 361, 361, 362, 362, 463, 463, 363, 113,
	113, 114, 114, 128, 128, 211, 211, 209, 209, 209,
	209, 209, 209, 209, 209, 216, 216, 217, 217, 218,
	218, 219, 220, 220, 220, 220, 352, 352, 221, 221,
	221, 210, 210, 210, 212, 212, 212, 212, 212, 212,
	212, 215, 215, 215, 215, 222, 222, 222, 214, 214,
	546, 546, 546, 548, 548, 550, 550, 549, 549, 545,
	545, 547, 547, 608, 608, 377, 377, 377, 331, 332,
	329, 329, 330, 330, 338, 338, 336, 337, 337, 339,
	339, 448, 448, 448, 225, 225, 225, 368, 368, 368,
	368, 369, 369, 400, 400, 398, 398, 398, 398, 399,
	399, 401, 401, 401, 402, 402, 403, 403, 365, 365,
	366, 366, 367, 367, 367, 367, 429, 429, 213, 213,
	213, 345, 345, 345, 346, 346, 419, 419, 419, 419,
	419, 419, 420, 420, 418, 418, 418, 418, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 453, 454, 454,
	347, 347, 455, 405, 405, 564, 564, 564, 565, 565,
	446, 446, 456, 456, 456, 456, 456, 456, 444, 444,
	445, 445, 464, 465, 465, 381, 381, 381, 381, 379,
	379, 382, 382, 382, 382, 382, 380, 380, 457, 457,
	457, 457, 370, 370, 458, 458, 458, 458, 459, 460,
	460, 461, 461, 414, 415, 415, 471, 471, 471, 471,
	473, 344, 344, 344, 344, 344, 522, 521, 521, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	488, 488, 488, 488, 488, 488, 488, 474, 474, 474,
	474, 474, 478, 478, 478, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 479, 479, 484, 484,
	485, 485, 485, 480, 481, 486, 486, 486, 486, 614,
	614, 490, 490, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 476, 476, 476, 483, 483, 483, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 389, 389, 391, 391, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 423, 423, 423, 423, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 540, 540, 540, 540, 540, 540, 540, 540, 425,
	425, 543, 543, 544, 544, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 551, 551, 552, 552, 554, 554,
	555, 555, 556, 557, 557, 557, 558, 559, 559, 553,
	553, 560, 560, 560, 560, 561, 561, 562, 562, 562,
	562, 562, 563, 563, 563, 563, 563, 435, 435, 436,
	436, 442, 442, 442, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	259, 259, 259, 259, 259, 357, 357, 355, 355, 355,
	358, 358, 356, 356, 354, 354, 353, 353, 432, 432,
	430, 430, 434, 434, 383, 383, 489, 489, 489, 489,
	489, 489, 489, 489, 384, 384, 384, 392, 385, 385,
	386, 386, 386, 386, 386, 426, 427, 387, 387, 387,
	428, 428, 437, 441, 441, 440, 439, 439, 438, 438,
	416, 416, 417, 417, 364, 364, 615, 615, 360, 360,
	462, 462, 462, 462, 303, 303, 349, 349, 302, 302,
	294, 294, 295, 295, 295, 295, 342, 342, 443, 443,
	491, 491, 492, 492, 493, 493, 494, 494, 495, 496,
	497, 431, 431, 279, 278, 266, 267, 277, 276, 275,
	265, 268, 272, 273, 274, 270, 271, 285, 284, 283,
	238, 241, 290, 291, 291, 293, 293, 292, 292, 281,
	282, 467, 264, 296, 296, 297, 297, 297, 298, 298,
	298, 298, 260, 260, 261, 261, 286, 286, 287, 288,
	288, 280, 280, 280, 251, 251, 251, 252, 252, 253,
	253, 505, 505, 502, 502, 502, 503, 503, 503, 504,
	504, 504, 504, 501, 501, 501, 501, 501, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 514, 514, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 516, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 519, 519,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 5, 5, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 6, 5,
	6, 5, 6, 4, 8, 3, 4, 2, 3, 10,
	3, 6, 4, 3, 1, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 3, 1, 1, 1, 1, 1,
	1, 3, 6, 4, 6, 7, 9, 6, 2, 2,
	3, 0, 8, 6, 8, 7, 2, 0, 1, 2,
	5, 0, 1, 3, 3, 1, 1, 3, 12, 3,
	1, 0, 1, 1, 2, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 6,
	4, 9, 7, 12, 12, 12, 9, 2, 7, 2,
	1, 1, 1, 3, 3, 0, 3, 1, 3, 1,
	1, 3, 2, 5, 0, 7, 5, 2, 0, 1,
	2, 3, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	6, 6, 6, 6, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	6, 3, 8, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 7, 2, 5, 0,
	1, 3, 3, 1, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 9, 5, 2, 6, 4, 7,
	7, 7, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 4, 3, 3, 5, 3, 4,
	3, 5, 3, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 3,
	4, 4, 5, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 4, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 4, 3, 4,
	4, 5, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 3, 2,
	5, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 13, 16, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 5, 5, 5, 2, 2,
	0, 1, 3, 11, 12, 9, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 12,
	15, 3, 1, 0, 4, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 583, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 32, 31, 100, 80, 154,
	128, 137, 201, 379, 421, 432, 393, 142, 413, 398,
	-136, -137, 449, -53, -65, -130, -129, 73, 129, 407,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -597, 102, -547, -89,
	-92, -122, -601, 161, 219, -110, -111, 362, -117, -118,
	415, -120, -121, 417, 162, -60, -59, 156, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 454, -169,
	514, 49, 468, 82, 146, 425, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -546, -90, -91, -94, -96, -97,
	-93, -95, 414, -212, -210, 580, 529, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 549, 558, -215, -213, -214, -222, 441,
	537, 488, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, -301, 2, -281, -286, -287, -288,
	-280, -251, -516, -519, 4, -513, -517, 168, 228, 326,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 128,
	129, 132, 127, 131, 133, 135, 136, 137, 140, 141,
	142, 144, 145, 147, 148, 149, 151, 152, 154, 155,
	156, 159, 157, 496, 158, 160, 161, 162, 163, 166,
	174, 175, 176, 181, 183, 184, 188, 189, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 202, 206, 208,
	209, 210, 211, 212, 218, 219, 221, 222, 223, 224,
	229, 230, 231, 235, 232, 241, 242, 246, 247, 248,
	250, 254, 255, 256, 257, 258, 259, 261, 263, 262,
	265, 268, 269, 272, 276, 277, 281, 282, 278, 283,
	284, 286, 287, 290, 288, 291, 292, 289, 293, 295,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 294, 309, 307, 311, 312, 313, 324, 322, 317,
	318, 314, 319, 315, 316, 320, 321, 328, 329, 332,
	216, 334, 335, 338, 356, 342, 343, 344, 347, 348,
	351, 354, 355, 357, 358, 359, 360, 361, 362, 363,
	364, 366, 367, 369, 370, 371, 373, 374, 375, 377,
	379, 380, 382, 383, 385, 386, 387, 388, 389, 390,
	391, 393, 395, 394, 396, 398, 400, 401, 402, 407,
	413, 409, 410, 411, 412, 414, 415, 416, 417, 419,
	420, 421, 423, 424, 425, 426, 428, 430, 431, 434,
	435, 451, 452, 470, 432, 433, 436, 437, 438, 439,
	440, 444, 442, 443, 445, 446, 447, 449, 450, 453,
	454, 456, 457, 458, 459, 460, 461, 464, 466, 467,
	468, 487, 469, 471, 475, 476, 477, 478, 472, 473,
	486, 480, 481, 483, 484, 489, 490, 491, 492, 493,
	494, 495, 497, 499, 507, 508, 509, 511, 514, 515,
	516, 517, 505, 519, 520, 523, 524, 525, 528, 526,
	527, 529, 531, 534, 535, 536, 542, 541, 543, 550,
	551, 553, 554, 555, 36, 50, 51, 54, 56, 58,
	69, 70, 71, 75, 124, 125, 153, 164, 165, 177,
	190, 191, 203, 205, 213, 214, 215, 236, 237, 239,
	244, 266, 331, 333, 349, 353, 368, 372, 376, 378,
	392, 427, 462, 474, 479, 500, 501, 502, 503, 510,
	512, 537, 538, 539, 544, 552, -301, 2, -281, 340,
	-274, 2, -251, -251, 379, 28, 2, 28, 367, 443,
	491, 493, 2, -573, -343, 2, 28, -254, -251, 102,
	201, 441, -274, 2, -573, -343, 25, 2, -251, 2,
	354, 22, 27, 66, 77, 98, 140, 163, 185, 188,
	-600, 356, 386, 430, 445, 486, 497, 511, 2, 541,
	287, 442, 488, 228, 120, 516, 436, -585, 434, 435,
	354, 384, 423, 204, 530, -255, 2, 432, -251, 287,
	2, 583, 94, 277, 74, 427, 446, -139, 508, -138,
	500, 436, -140, -500, 2, 309, -251, 583, 583, 583,
	28, -264, -251, 488, 228, 436, 120, 484, 583, 2,
	488, 359, 541, 442, 120, 389, 228, 516, 188, 140,
	27, 126, 436, -585, 287, -571, 2, -566, 4, -517,
	-513, -295, -294, 488, 494, 120, -288, -280, 573, -287,
	583, 583, 583, 2, 247, 248, 388, 387, 446, 447,
	583, 583, 583, 583, 434, 2, 163, 22, 27, 66,
	93, 98, 126, 185, 188, 345, -598, 356, 386, 445,
	486, 490, 497, 511, -584, 469, 68, 412, 436, -583,
	-585, 287, 516, 140, -393, 120, 277, 199, 524, 493,
	491, 522, 132, 235, 527, 526, 583, 583, -101, 2,
	580, 32, 31, 142, 449, -204, 488, 240, 2, -251,
	583, 583, 2, 247, 248, 434, 435, 583, 583, 186,
	-566, 2, 583, 583, 2, 247, 248, 434, 435, 240,
	2, 68, 438, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 2, -179, 446,
	469, 210, 47, 46, 74, 28, 385, 79, 360, 121,
	148, 517, 202, 228, 229, 255, 93, 94, -395, 44,
	248, 247, 435, -590, 434, -447, 489, 437, 443, 483,
	259, 432, 508, 102, 531, 424, 555, 389, 390, 481,
	402, 278, 157, 4, 120, 309, 448, 500, 277, 431,
	363, 84, -608, 2, 488, -610, 2, 508, 508, 2,
	-610, 2, -610, 2, -610, 2, -611, 508, 552, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, -210, -212, -211, 583,
	583, 583, 583, 583, 583, 583, -179, 446, 2, 74,
	28, -336, -338, 521, 238, 150, 346, -209, -211, 2,
	-546, -498, 2, -421, -520, -423, 571, 572, 564, 485,
	67, 325, 556, -435, 126, 522, 340, -519, -424, -437,
	153, 427, -358, 8, 9, 5, 6, 7, -260, -425,
	-431, 513, 167, 330, -298, 584, 10, 580, -543, -211,
	-436, 37, 205, 65, -502, -297, -261, -474, 239, -296,
	-280, -540, -541, 4, -513, -514, -503, -477, -485, -481,
	-482, -488, -251, -516, 77, 111, 112, 110, 115, 114,
	280, 279, 116, 113, 448, 530, 66, 36, 213, 214,
	244, 331, 215, 75, -542, 141, -515, 236, 237, 462,
	51, 392, 177, 125, 124, 333, 56, 54, 538, -486,
	122, 500, 501, 502, 503, 190, 191, 58, 164, 165,
	353, 376, 479, 510, 512, 203, 266, 43, 106, 187,
	234, 217, 243, 245, 249, 267, 270, 310, 323, 327,
	350, 352, 422, 455, -614, 539, 474, 69, 70, -548,
	394, -549, -274, -548, 583, 583, 585, 583, -329, -331,
	-332, 2, 28, 138, 580, 2, -452, 2, -453, -457,
	-211, 260, -456, 580, -454, 578, -281, 341, -544, 428,
	-540, -541, -260, -280, -297, 4, -513, -515, 582, -333,
	580, 120, 488, 78, 228, 163, -388, 580, -251, 28,
	340, 504, 585, -330, 383, -433, 580, 340, 186, 343,
	60, 291, 2, 2, 2, 2, 2, 213, -251, 488,
	119, 2, 258, 2, 2, 2, 2, 2, 2, 2,
	-351, 213, 2, -281, 541, -351, 213, 2, -351, 213,
	2, -394, 2, 87, -265, 213, 2, -251, -289, 213,
	2, -284, -286, -293, 213, 2, -291, -251, -511, 213,
	2, -510, -505, 10, -504, 5, 4, -513, -517, -514,
	-516, 77, -421, 2, -128, 2, 60, -251, 541, 2,
	2, 451, 2, 580, -139, 71, 508, 43, 446, -408,
	2, -409, -247, -248, -249, -464, -250, 246, 382, 391,
	559, 130, 325, 555, -498, -592, 186, 563, 504, -498,
	-359, 582, 2, 2, 2, 2, 2, 2, -457, 213,
	-281, 2, -278, -501, 4, -513, -517, -514, -518, 28,
	31, 32, 33, 35, 37, 38, 39, 40, 57, 65,
	66, 72, 76, 78, 87, 93, 102, 110, 111, 113,
	112, 114, 115, 116, 126, 130, 134, 138, 139, 143,
	146, 150, 167, 169, 182, 185, 186, 201, 204, 207,
	220, 233, 238, 240, 260, 264, 271, 279, 280, 325,
	330, 336, 340, 341, 345, 346, 365, 381, 397, 418,
	441, 448, 465, 482, 488, 498, 504, 506, 513, 521,
	522, 530, 532, 540, 545, 546, 547, 548, 549, -519,
	2, -457, 213, 2, -283, 213, -457, -286, 2, -265,
	2, -277, -501, 2, -302, 213, -281, -282, -286, -284,
	2, 2, 2, 2, 2, -291, 2, -510, 213, 2,
	541, 240, 504, 585, -349, -294, -295, -497, 8, -342,
	-251, 582, -421, 2, -128, -112, 2, 182, -421, 213,
	2, -128, 213, 2, -421, 213, 2, -128, 213, 2,
	-587, 2, -510, 213, -251, 2, 291, 2, 2, 511,
	2, 98, 488, 119, 2, 411, -599, 430, 515, 2,
	2, 2, 2, 2, 2, 2, 488, -270, 2, -251,
	182, 472, -291, 213, -292, 2, 442, -609, 394, -510,
	213, 2, 541, -284, 213, 2, -284, 228, 242, -265,
	213, 2, 493, 491, 493, 491, 186, 2, 240, 2,
	240, 2, -458, 2, -459, -453, -460, 578, 341, -468,
	2, -467, -504, 537, -101, 580, -101, 580, 446, 580,
	-510, -281, -281, -421, 2, -128, -112, 2, -421, 2,
	-128, 2, -125, -510, -124, 580, 186, -421, 2, -128,
	-112, 2, -421, 2, -128, 2, -204, 182, 2, 120,
	488, -179, 2, 182, 532, 2, 8, 2, 220, -510,
	437, 390, 174, 2, 451, 2, 452, 74, -395, 555,
	74, 186, 2, 186, 2, -378, 2, 549, 186, 2,
	2, -570, 2, 340, 186, 2, 186, 2, 186, 2,
	186, 2, 186, 2, -178, 447, 509, 487, 387, 248,
	2, -128, 546, -112, -421, 546, 2, -591, 182, 435,
	-421, 2, 507, 257, 158, 186, -378, 2, 186, 2,
	186, 2, 5, 2, 388, 470, 2, 246, 382, 470,
	2, -281, -602, 28, 2, 488, 541, 442, 2, 2,
	88, 89, 186, 2, 186, 2, 200, 186, 2, 186,
	555, 2, -370, -457, -407, -408, -407, 504, -336, -338,
	-179, 451, 2, -216, -368, -218, 182, -398, -399, -219,
	271, 169, 336, -220, -377, 28, 138, -377, -377, 60,
	581, 581, 11, 12, 76, 41, 571, 572, 573, 574,
	180, 575, 576, 569, 570, 568, 561, 562, 566, 252,
	253, 95, 565, 563, 86, 285, 429, 170, 171, 172,
	173, 408, 226, 34, 227, 14, 15, 16, 33, 345,
	270, 556, 217, 455, 564, 17, 18, 19, 243, 245,
	327, 50, 220, -259, -304, -421, -421, -421, -421, -421,
	-421, -421, 352, 580, -364, -416, 578, -211, 580, 580,
	580, -497, -211, -421, -435, 581, -356, 580, -211, -435,
	-430, 580, 427, 578, 580, -438, -421, 5, 5, 5,
	580, 582, -551, 550, 182, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	378, -479, 580, -478, 580, -478, -478, 542, -476, 580,
	558, 551, 580, -476, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 542, 585, -548,
	-333, 580, -360, -462, -421, 573, -360, -360, 340, -353,
	-421, 106, -381, 249, 310, 187, 267, 422, 234, -418,
	584, -418, -446, 558, -211, -454, -280, -211, -456, 580,
	-452, -446, -102, -497, -86, -99, -107, -128, -141, -183,
	-184, 573, -281, 580, 186, 580, 582, -501, 186, -342,
	-265, -281, -296, -297, -302, 2, 137, -353, -566, 516,
	436, 442, -342, -254, 38, -432, -471, -472, -522, 584,
	-521, -474, -484, -480, -483, 368, 372, -503, 54, 538,
	-486, 239, 4, -513, -515, 236, 237, 462, 51, 392,
	177, 125, 124, 333, 56, 500, 501, 502, 503, 190,
	191, 58, 539, 474, 69, 70, -566, 516, 436, 442,
	-342, 182, -508, 2, -507, -506, 116, 448, -504, 5,
	2, 153, 2, 2, 2, -251, -230, 585, 64, 416,
	153, -351, 213, -230, 153, -230, 153, -303, 213, -302,
	-230, 153, -230, 585, 153, -230, 585, 153, 582, 585,
	153, -508, 2, -394, -500, -353, 38, -408, 2, 126,
	-506, -612, 585, 269, -306, 284, 324, 209, 341, 553,
	334, 130, -509, 5, 4, -431, -443, 126, 277, 239,
	-491, -493, 8, -492, 9, -494, 571, 572, -499, -498,
	109, 582, -501, -227, 409, 449, 355, -226, 24, 29,
	142, 230, 313, 535, 159, -319, 231, -316, 359, 153,
	466, 525, -580, -581, 433, 495, 496, 90, 334, 449,
	355, 409, 153, -374, -376, 38, 118, 313, 354, 61,
	223, 289, 290, 468, 544, 153, 449, 355, 409, 355,
	24, 142, -242, -239, 449, -581, 99, 409, 480, 381,
	-581, -229, 466, 525, -580, -581, 433, 409, -228, -321,
	-316, 359, 153, 584, 24, 142, 409, 449, 355, -595,
	-596, 29, 409, 355, -574, -545, 549, 153, -457, 213,
	-588, -124, 261, 5, 10, -510, -124, -349, 585, 585,
	-501, 573, 435, 434, 153, 153, 153, 153, 182, 325,
	2, 2, 2, 2, 2, 188, -583, -600, 2, 2,
	-281, 213, -335, 340, -569, -350, 488, -281, 182, 325,
	43, -283, 213, 2, -286, 541, -574, 325, -285, 213,
	-281, 38, 580, 325, 2, -394, 2, 228, -545, 325,
	-458, -299, -281, -453, -299, 449, -274, 38, -418, -281,
	581, 585, -468, -468, -510, -192, 549, 186, 102, 580,
	580, -204, -465, 585, -464, 220, -511, -125, -510, 412,
	-510, -569, -265, 2, -281, 2, 488, 250, -510, -192,
	220, -510, -510, -510, -500, 28, 452, 2, -178, 447,
	509, 89, 452, 2, -281, 488, 120, 228, 80, -251,
	-572, 182, -567, 423, 436, 516, -566, -281, 120, -281,
	120, -281, 120, -281, -281, 2, 2, 2, 2, 2,
	85, 85, 2, 46, -591, 182, 2, 507, 2, 507,
	2, -251, -251, -251, 469, 269, -281, 489, -603, 2,
	186, 182, 2, 488, 228, 488, 228, 120, 186, 74,
	120, 28, 488, -230, 585, -255, -216, -368, -500, -369,
	-368, -217, -216, -219, 182, 391, 526, 313, 453, 254,
	-399, -398, 28, -421, -403, 176, 312, -421, -401, -423,
	571, 572, -492, -494, -352, 334, -210, -210, -210, -339,
	-448, -421, 381, 228, -473, -471, -471, -279, -501, 500,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, 270, 217, 455, 50, 220,
	-421, 504, -421, -421, -421, -421, 307, 325, 330, 513,
	167, 523, 138, 334, -615, 482, 40, -428, -211, -357,
	580, -442, 35, 465, 28, -435, 580, 2, -416, -421,
	-417, -354, -353, -353, 581, 540, 28, 138, 573, 2,
	581, 585, 38, 581, -421, -354, -434, -430, -353, -441,
	-440, 546, -389, -390, 554, 294, 123, 211, 292, -391,
	440, -495, 8, -501, 573, -552, 175, 204, 580, 581,
	2, 581, 2, 581, -421, 2, 581, -421, 2, 581,
	-421, 2, 581, -421, 2, 581, 2, -421, -421, -421,
	-421, -421, -421, -421, -353, 8, -495, -495, 500, 500,
	-495, -495, -495, -487, 368, 369, 370, 371, 272, 273,
	274, 275, 372, 373, 374, 375, 299, 300, 301, 302,
	295, 296, 297, 298, 303, 304, 305, 306, 195, 196,
	197, 198, 191, 192, 193, 194, -487, -383, 2, -489,
	-353, 4, 554, 294, 123, 211, 292, 440, 5, -383,
	2, -384, 2, -421, -353, -385, -422, -423, 571, 572,
	564, -435, -386, 2, -421, -354, -421, 57, 264, 506,
	-387, -421, 186, -353, -353, 2, -353, 2, -549, 38,
	-353, -345, 585, 186, 38, 4, -345, -345, 580, 581,
	585, -382, 208, 288, 283, 242, -382, -452, -381, 249,
	-379, 350, -379, -379, -446, -266, 578, 586, -501, -446,
	-445, -444, 38, -274, 347, -446, -446, 582, 581, -445,
	579, -564, 580, 583, 583, 583, 583, 583, -281, 580,
	-353, -501, 582, 471, 2, 581, 243, 243, 243, 243,
	428, 581, 504, -568, -289, -293, 2, 549, -101, 342,
	581, 585, -344, 37, 578, 582, -495, 2, 2, -490,
	542, 580, 580, -390, 580, 186, -568, -293, 2, -343,
	585, 504, -251, 2, -281, -351, -230, 153, -351, -351,
	-230, 585, 153, -265, -284, -289, -291, -293, -251, -510,
	-511, -230, -285, -592, 581, 508, -409, -305, 391, 464,
	410, 444, 484, 8, 9, 8, 9, 585, -501, 585,
	-593, 93, 504, 78, 436, -244, 278, 504, -412, 213,
	78, -523, -268, 93, -524, -251, 72, 522, 381, 185,
	151, -593, 93, 381, -593, 93, 2, 230, 93, 449,
	469, 28, 60, -457, 41, 41, 28, -128, 265, 186,
	555, 488, 228, 436, 504, 504, -457, -376, -471, 118,
	289, 290, 60, -496, -491, 571, 572, -496, 60, -496,
	-496, -496, 549, -283, -457, 436, 504, 504, 504, 400,
	400, -239, 504, 504, -613, 563, 400, 585, 41, 41,
	28, -128, 265, 186, 504, -302, -266, 536, 42, 536,
	42, 536, 504, 42, 436, 504, 585, 42, 504, 504,
	-575, -256, 105, 319, 282, 320, 97, 316, 96, 315,
	103, 317, 104, 318, 543, 328, 63, 314, 293, 321,
	-257, -258, 361, 534, -510, 449, 355, 409, 153, 220,
	-465, 220, -465, -294, -251, 582, -128, -421, -421, -128,
	-421, -128, 46, 153, 2, -609, 258, 580, -309, 325,
	186, -342, -466, 240, 585, -350, -566, 153, -507, -375,
	-374, 325, -285, 213, 2, 153, -333, 325, 147, 580,
	389, 2, 153, -267, 213, -252, -251, -394, -233, 492,
	153, -372, 532, -404, -128, 580, 126, 38, -404, -361,
	-362, -463, -363, -268, 580, -274, -418, -101, -467, 581,
	581, 581, -191, 344, -190, -251, 5, -204, 532, -308,
	-413, -412, -527, -528, -523, 270, 228, 522, 242, 168,
	-334, -269, -268, 119, -198, 549, -124, -125, 581, -465,
	220, 472, -192, -192, -465, -465, -281, 182, -510, -192,
	-192, -192, 2, 2, 2, 2, -378, -281, -265, -302,
	-281, 582, -342, -342, -293, -289, -378, -265, -378, -265,
	-378, -265, -128, -421, 2, 446, 182, 182, 582, -378,
	389, 120, 488, 359, 228, -281, -302, -281, -302, -265,
	120, -265, 121, -281, -457, -369, -217, 341, 254, 453,
	-401, -402, -423, 427, 428, -402, 427, 428, 8, 9,
	8, 9, -221, 457, 329, -351, 585, -224, 39, 134,
	254, -281, 555, 149, -421, -421, 504, -615, 482, -428,
	149, -421, 307, 330, 513, 167, 523, 138, 334, 186,
	580, -422, -422, 581, -355, -421, -421, 579, 588, 581,
	-338, 585, -336, -421, -353, -353, 581, 582, -353, -342,
	579, 579, 585, 581, -439, -440, 143, -421, 504, 504,
	504, 504, 580, 581, 582, -557, 351, 580, 580, -421,
	581, 581, 581, 581, 38, 585, 585, 585, 581, 585,
	585, 585, 581, 581, 581, 585, 581, 555, 555, 581,
	581, 581, 581, 585, 581, 585, 581, 186, 581, 581,
	-392, 365, 581, 11, 12, 571, 572, 573, 574, 180,
	575, 576, 569, 570, 568, 561, 562, 563, 86, 285,
	429, 14, 15, 16, 243, 220, -422, -422, -422, 581,
	-426, -427, 186, 182, 38, -387, -387, -387, 581, 186,
	-353, 581, 581, 580, -550, 287, 325, 581, -415, -414,
	547, -462, -346, 2, -452, -276, -501, -415, -415, -353,
	-421, 249, 249, -380, 532, 340, -382, -452, -445, -497,
	-420, -419, 184, 39, 134, 322, 216, -445, -274, -333,
	-445, -445, -501, -446, -446, -444, 581, -565, -497, 581,
	-347, -455, -544, -338, 582, -501, -201, -545, -180, 5,
	330, -180, -180, -180, -342, 504, 504, 25, 366, -471,
	578, 579, 8, -501, 580, -495, -495, -495, -342, 186,
	186, 186, -507, -507, 2, -230, -351, -230, -230, -302,
	-303, -230, -230, -230, -373, 549, -498, -408, 520, 83,
	391, 500, -498, -226, 409, -268, -268, -281, -290, -251,
	199, 401, -507, 325, -412, 213, -232, 325, -471, -275,
	-251, 580, -396, 551, 254, 254, 532, -268, -275, 254,
	213, -268, 213, -275, 2, -275, -576, 391, 335, -421,
	60, -317, 276, 389, 326, -227, 409, 449, 355, -128,
	-128, -128, 580, -592, 532, 137, -281, -302, -281, -290,
	-507, -285, 449, 355, 409, 323, -296, -496, -496, -374,
	449, 355, 409, -290, -507, -283, -507, -238, -251, -238,
	436, -265, 400, 555, 45, -613, -228, -128, -128, -128,
	580, -266, -229, 409, 5, 213, -268, 5, -268, 213,
	5, -251, -268, -290, -507, -596, 24, 142, -268, -290,
	-507, -256, -510, 330, 528, -574, 436, 504, 504, -457,
	-124, -195, 549, -124, -189, 224, 573, -571, -251, 541,
	-251, -307, -310, -308, -268, -207, -208, 551, 549, 153,
	-300, -281, 578, -192, -510, -281, -466, -291, -292, 153,
	-333, 325, -510, 38, 153, 580, 2, 2, -284, 340,
	325, -267, 213, -234, 144, -613, -265, -415, -346, -371,
	-406, 418, 340, -334, 537, -274, -371, -348, 585, 186,
	563, 582, -334, -461, 573, -101, -101, -192, 585, 580,
	563, 563, 580, -510, -510, 581, 585, -232, -281, -267,
	228, 228, -273, -252, 581, 585, 582, 580, -200, 344,
	-199, 145, 256, 241, 458, 459, 460, 461, 136, -465,
	-198, -125, 186, 186, -61, 549, 488, -192, 584, -251,
	-378, -378, -378, 446, 446, -251, -277, -265, -281, -278,
	-302, 182, 182, -265, 526, -402, 341, 281, -448, -225,
	557, -281, 584, -421, -421, 149, 149, -421, -422, -422,
	-421, 149, 186, 580, -421, -432, 33, 33, 581, 585,
	-417, -421, 581, 540, -338, -338, 581, 573, -501, 584,
	581, -430, 146, -421, 498, 294, 211, 292, -391, 292,
	-391, -391, -495, 5, -501, 573, -558, -271, 580, -251,
	547, -337, 346, 581, -473, -471, -421, -421, -421, -421,
	-421, -495, -476, -476, -491, -491, -421, -426, -421, -473,
	-471, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	138, 325, 334, -422, -427, -426, -421, -421, -471, 581,
	581, 581, -353, -101, 580, 287, -365, 204, -421, -465,
	585, -365, -365, 581, -452, -452, 580, -421, 249, 579,
	585, 587, 563, -333, 582, -444, -445, 579, 581, 585,
	581, 585, -405, 38, 581, -501, -415, -203, -202, 135,
	53, 107, 133, 330, -342, -342, 343, 5, 8, 578,
	579, 582, -495, 581, 581, 581, -342, -342, -342, -230,
	-230, 119, 313, -421, 504, 504, 60, 220, 153, 325,
	534, -529, -524, 151, -421, 580, 228, 580, 580, 2,
	-223, 142, 449, 24, -594, 2, 532, 153, -230, 153,
	-230, 553, -317, 580, 580, 504, 436, -244, 504, 549,
	-353, -421, -193, 126, -500, -581, 584, -581, 584, 436,
	504, 504, 436, 504, 504, 549, 166, 166, 555, -238,
	549, -353, 504, -475, 48, 26, 325, -284, -230, 153,
	504, 504, 516, 449, -510, 330, -290, -507, -285, 449,
	355, 409, -465, -197, 344, -196, 145, 420, 136, 256,
	-465, -195, 186, 240, 549, -285, 2, 581, 581, 585,
	-530, 38, 338, 338, 580, -281, -82, 549, -464, -497,
	-577, 549, 43, -283, 38, 153, -574, -128, -285, -469,
	-470, 5, 38, -281, 153, 340, 325, -235, 263, -613,
	-505, -545, -338, -371, -360, 326, 91, 581, -415, -362,
	-346, -421, 2, 581, -190, -191, -510, -510, -510, -192,
	-204, -204, -413, -311, 580, -267, -252, 580, -204, -269,
	2, -511, 585, 580, 563, 563, 563, -198, -465, -124,
	-128, 344, -281, 573, -378, -323, -322, 359, 334, -323,
	427, 427, 341, 176, 259, -224, -266, -421, -421, 149,
	33, 33, -421, -421, -432, 581, -421, -421, -353, 579,
	5, -421, 581, 581, 8, -421, 581, 582, -559, -251,
	-421, 581, 60, 581, 581, 585, 585, 581, 581, 581,
	581, 581, 581, 581, -427, 186, 138, 334, 580, 581,
	581, -101, -429, 207, 60, -452, -429, -429, -380, -342,
	-452, -419, -266, 578, -501, -497, -455, 580, 582, -202,
	563, -510, -510, 549, 579, 2, 578, -501, 581, 119,
	-268, -268, 488, 427, -238, 381, -412, 153, -531, 93,
	-533, 76, 168, 102, 325, 330, 522, 381, 72, 126,
	397, -605, 38, 560, 581, -340, -449, -544, 580, -251,
	-340, -342, 325, 477, 126, 325, 126, 119, 2, 516,
	79, -268, -275, -342, -342, -281, -290, -507, 160, 581,
	585, 563, 2, 573, 573, -290, -507, -285, -290, -507,
	-283, 357, 166, 160, 581, -266, 5, 5, 153, -263,
	76, -268, 5, -268, -284, 119, 436, 504, 504, -195,
	585, 580, 563, 563, -195, -511, -124, 2, -333, -324,
	230, -268, -528, -525, -526, 381, -532, -534, 168, 381,
	-128, 2, -206, -205, -251, 5, 580, -309, 344, 579,
	-579, 344, -578, 117, 136, -507, -375, -128, -285, -333,
	581, 585, 147, -397, 532, -266, -281, 153, -236, 262,
	-613, -505, -233, -400, -398, 139, 580, 340, -128, -338,
	563, 581, 581, 119, 119, 222, 152, -340, 580, 580,
	-342, 119, 581, -199, -200, -510, -124, -510, -198, -465,
	-62, -63, 228, 93, 364, -278, 488, 228, 580, 580,
	-224, -421, -421, -421, 581, -338, -501, 573, -553, 359,
	581, -448, -421, -421, -422, 186, 580, -432, 581, -554,
	548, -421, -366, -367, -421, 426, 108, 205, -554, -554,
	581, -497, 2, -510, 2, 578, 2, 220, 38, 400,
	-412, -275, -279, -272, -251, 168, 213, 330, 545, -396,
	254, 580, -422, -281, 580, 2, 30, -606, 130, 233,
	581, 585, -450, -262, -251, -421, -450, 581, 581, 330,
	330, -421, -471, 580, -230, -230, 581, 581, -421, 504,
	-500, 100, -498, 2, -581, -265, -421, 504, 5, -230,
	-279, -230, -230, -263, 516, -290, -507, -285, -196, -197,
	-510, -124, -195, 38, -314, 232, 2, -530, 254, -272,
	254, -604, 549, 581, 585, 563, 563, -307, -207, -83,
	-84, 505, -464, 585, 580, 563, -333, 38, 5, 580,
	580, -251, 340, 580, -266, -246, 92, -613, -505, -234,
	-371, 326, -342, 93, -400, -428, -192, 580, 580, -312,
	81, 94, 127, 212, 189, 229, 469, 475, 28, -312,
	581, -340, -340, 581, 580, -192, 581, 585, 28, 580,
	28, 580, -281, -302, -353, -353, 581, -338, 60, 585,
	581, 581, -422, -432, 581, -555, -556, -271, 585, 580,
	580, 450, 579, 2, -238, 381, -251, -533, -272, 325,
	532, -421, -253, 580, -421, 38, 233, 131, 218, -411,
	-607, 101, 478, 221, -449, -224, 581, -410, 532, 397,
	-263, -340, 580, 580, 580, 563, 186, 580, -475, -230,
	-284, 581, -586, 395, -128, -318, -319, 220, 580, -313,
	340, 119, 313, -205, -498, -498, 581, 38, -84, 9,
	-578, -579, -421, 38, -128, -469, -340, -281, -340, 340,
	-240, -239, 271, -505, -235, 581, -275, -371, -511, -511,
	-410, 581, 581, -511, -63, -342, -342, 581, 581, -560,
	389, 428, 206, -353, -339, 581, 585, 38, -367, 2,
	2, 2, 400, 153, 208, 581, -535, 286, -251, 581,
	131, 218, -314, 580, -225, -450, -314, 208, -281, -582,
	532, 581, -326, -325, -322, -328, -327, -322, -353, -498,
	100, 357, -353, -263, -589, 187, -588, 5, 10, -207,
	357, -341, -451, -268, 82, 119, -324, -128, 581, -128,
	581, 581, -397, 581, -281, -237, -512, 400, 402, -613,
	-236, -415, 581, 581, -411, -410, -320, -316, 581, 581,
	581, 581, -561, -562, 50, 519, 109, -421, -561, -561,
	-556, -558, 168, 549, -536, -539, -538, 340, 456, 187,
	358, 581, 477, 544, -320, -342, 549, -333, -421, -410,
	581, 585, 537, 581, 585, 537, 581, 186, 581, -230,
	-194, 549, 46, -313, -281, 581, 585, 380, 132, 142,
	-314, -604, -410, 580, -411, 580, -243, -242, -613, -491,
	-246, 139, -192, -192, -314, -411, -208, 549, -192, -563,
	151, -562, 377, 181, 427, 377, 181, -563, -563, -272,
	55, -538, 340, -539, 340, 526, 132, -606, 581, 55,
	-535, -314, -325, 220, -327, 186, 357, 434, -588, 30,
	-245, -244, 580, -451, 428, 428, 2, -318, -313, -411,
	-340, -314, -340, -241, -342, -240, 326, 526, -320, -314,
	-415, 109, 204, 499, 313, 33, 563, -537, 313, 416,
	64, 449, -537, -415, 563, -536, 580, 580, 344, -342,
	2, -207, -314, 581, -320, 581, -237, 449, -208, -320,
	427, 348, -562, -421, 23, 330, 126, -421, -606, -353,
	-353, -191, 580, 581, -313, -320, -410, -208, -411, -243,
	-361, -415, -208, 581, 581, -191, -231, 64, 416, -245,
	-208, -411, -415, -314, -415, -415, -315, -316, 504, 581,
	-415, -314, -320, 580, -320, -208, -353, -208, -415, 581,
	-415, -315,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 529, 530, 532, 533, 534, 536,
	537, 539, 541, 543, 544, 545, 547, 548, 550, 551,
	552, 553, 554, 556, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	623, 625, 0, 1316, 1318, 1320, 1322, 0, 767, 0,
	36, 37, 39, 0, -2, 316, 318, 320, 0, 347,
	349, 350, 352, 354, 355, 356, 358, -2, 0, 464,
	465, 467, 469, -2, 0, 957, 959, 0, 612, 614,
	0, 962, 964, 0, 0, 634, 635, 0, 1423, -2,
	628, 630, 632, 697, 699, 701, 703, 705, 707, 709,
	711, 713, 714, 716, 718, 720, 722, 724, 725, 727,
	729, 731, 732, 734, 735, 737, 739, 741, 743, 745,
	747, 749, 751, 753, 755, 757, 759, 761, -2, 764,
	-2, -2, 0, -2, -2, -2, 1334, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 408, 410, 412, 414,
	416, 419, 421, 423, 1481, 471, 473, 475, 477, 479,
	481, 483, 0, -2, 1495, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1454, 1456, 1458, 1460, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 531, 535, 538, 540, 542, 546,
	549, 555, 557, 559, 516, 517, 520, 2159, 2176, 2177,
	2178, 2181, 2182, 2183, 2184, 2185, 2186, 2624, 2706, 2707,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 518, 519, 1134, 0,
	583, 581, 2144, 584, 2428, 586, 588, 458, 459, 460,
	461, 462, 463, 0, 605, 596, 1493, 606, 608, 609,
	610, 611, 578, 576, 0, 605, 2212, 603, 1314, 1315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 387, 1183, 1184, 1185, 1299, 1300, 2472, 1341, 0,
	218, 624, -2, -2, -2, 2589, -2, 656, -2, 663,
	2593, 2474, 668, 0, 670, -2, 673, 1317, 1319, 1321,
	765, 766, 2162, 0, 0, 0, 0, 0, 38, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 228, -2, -2,
	-2, -2, 0, 0, 2518, 2264, 2112, 2178, 2115, 2110,
	317, 319, 321, 322, 0, 0, 0, 0, 0, 0,
	348, 351, 353, 357, -2, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 1018, 1010,
	1011, 1241, 0, 0, 0, -2, 466, 468, 521, 522,
	0, 1482, 1482, -2, 0, 0, 0, 0, 287, 274,
	958, 960, 961, 0, 0, 0, 0, 613, 615, 0,
	0, 256, 963, 965, 966, 0, 0, 0, 0, 0,
	289, 0, 0, 629, 631, 633, 698, 700, 702, 704,
	706, 708, 710, 712, 715, 717, 719, 721, 723, 726,
	728, 730, 733, 736, 738, 740, 742, 744, 746, 748,
	750, 752, 754, 756, 758, 760, 762, 763, 773, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 861, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 939, 0, 776, 778, 779, 780, 0, 839, 859,
	860, 869, 0, 1174, 1483, 1343, 1324, 1338, 1343, 1326,
	1327, 1328, 1329, 1330, 1335, 1337, 1331, 1332, 1333, 42,
	44, 46, 48, 50, 52, 54, 56, 58, 409, 411,
	413, 415, 417, 420, 422, 424, -2, 1452, 1453, 472,
	474, 476, 478, 480, 482, 484, 616, 0, 618, 0,
	777, -2, 0, 1487, 1487, 1487, 0, 0, 1453, 1451,
	0, 621, 622, 677, 678, 1755, 0, 0, 0, 0,
	0, 0, 0, 2009, 1841, 0, 679, -2, 1872, 1874,
	2564, 2589, 2008, 1876, 1877, 1878, 1879, 1880, 0, 1882,
	1883, 1884, 1885, 1886, 1887, 0, 1889, 0, 1894, 1895,
	1896, 0, 2571, 2089, 2172, -2, 0, 0, 2577, 2168,
	0, 1975, 1912, -2, -2, 2195, 2174, 1687, 1688, 1689,
	1690, 1691, -2, -2, 2607, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 0, 2552, 2572, 2573,
	2578, 2580, 2574, 2561, 1937, 2277, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1714,
	1723, -2, -2, -2, -2, -2, -2, -2, 2565, 2566,
	2583, 2586, 2592, 2597, 2598, 2570, 2579, 2606, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 1715, -2, -2, -2, -2, 1470,
	2441, 1473, 1134, 1471, 1455, 1457, 0, 1459, 0, 0,
	0, 1464, 1490, 1488, 0, 1539, 1468, 1469, 1557, 1557,
	1581, 0, 1562, 0, 1581, 1482, 1608, 0, 1568, 2464,
	1913, 1914, 0, 2178, 2173, -2, -2, 2604, 0, 0,
	0, 0, 0, 0, 0, 0, 579, 0, 585, 587,
	0, 0, 0, 604, 1492, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 2572, 0, 0,
	0, 399, 0, 401, 402, 403, 404, 405, 406, 407,
	187, 2572, 489, 514, 0, 187, 2572, 492, 187, 2572,
	495, 0, 498, 1239, 187, 2572, 501, 2140, 187, 2572,
	504, 506, 2148, 187, 2572, 510, 2155, 2153, 511, 2572,
	513, 292, 290, 291, 2191, 2192, 2199, 2200, 2201, 2202,
	2605, 2607, 1310, 1311, 1312, 1313, 0, 1340, 1240, 626,
	627, 0, 651, 0, 655, 2560, -2, 0, 2483, -2,
	659, 1344, 1348, 1349, 1350, 1351, 1352, 0, 0, 0,
	0, 1357, 0, 0, 665, 0, 0, 652, 653, 671,
	674, 0, 768, 769, 770, 771, 772, 70, 0, 2572,
	1608, 72, 0, 2134, 2203, 2204, 2205, 2206, 2207, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	76, 0, 2572, 81, 0, 2572, 0, -2, 92, 0,
	100, 0, 2137, 109, 0, 2572, 0, 2109, -2, 0,
	199, 275, 276, 277, 278, 0, 985, -2, 2572, 1182,
	0, 0, 0, 0, 948, 2106, 2111, 949, 2130, 950,
	2116, 0, 323, 324, 325, 326, 327, 0, 328, 2572,
	330, 331, 0, 333, 334, 2572, 336, 337, 0, 339,
	0, 239, 240, 2572, 361, 363, 0, 365, 366, 0,
	368, 0, 0, 0, 372, -2, 388, 0, 385, 375,
	376, 378, 379, 380, 381, 382, 0, 428, 426, 2145,
	0, 0, -2, 2572, 0, 982, 0, 0, 1219, -2,
	2572, 1179, 0, 1226, 2572, 1222, 0, -2, 0, 1480,
	2572, 1361, 1014, 1015, 1016, 1017, 1620, 455, 0, 1388,
	0, 1390, 0, 1409, 1614, 1557, 0, 0, 1619, 0,
	-2, 572, 2161, -2, 524, 0, 525, 0, -2, 0,
	304, 0, 0, 967, 968, 969, 970, 971, 974, 975,
	976, 977, 1594, 257, 259, 0, 0, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 0, 0, 636, 0,
	0, 774, 775, 0, 0, 785, 786, 787, 0, 304,
	2475, 2437, 2298, 794, 0, 797, 800, -2, 0, 0,
	0, 0, 804, 0, 809, 810, 811, 0, 0, 815,
	817, 956, 819, 0, 0, 821, 0, 825, 0, 828,
	0, 830, 0, 832, -2, -2, -2, 840, 841, -2,
	845, -2, 0, 848, 850, 0, 852, -2, 0, 861,
	857, 858, 0, 0, 0, 0, 877, 878, 0, 887,
	0, 890, 891, 892, 0, 894, 895, 0, 897, 898,
	899, 900, 0, 0, 903, 904, -2, -2, 908, 910,
	0, -2, 0, 926, 0, 930, 0, 0, 938, 0,
	781, 782, 187, 1612, 1323, -2, 1325, 0, -2, 0,
	617, 0, 620, 1512, 1438, 1435, 0, 1509, 1510, 1439,
	0, 0, 0, 1446, 0, 1485, 1486, 0, 0, 0,
	1425, 1426, 0, 0, 0, 0, 2014, 2015, 2016, 2017,
	2018, 2019, 2022, 2023, 2020, 2021, 2024, 2025, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2027, 2028, 2029, 0, 0,
	2031, 0, 2033, 0, 0, 0, 0, 0, 0, 1820,
	1822, 2097, 0, 0, 2030, 1760, 1761, 1762, 1763, 1764,
	1799, 1800, 0, 0, 1873, 2094, 2093, 1875, 0, 2045,
	0, 1888, -2, 0, 2009, 2040, 0, 0, 1897, 1898,
	1899, 0, 0, 2045, 0, 0, 2088, 1909, 1910, 1752,
	0, 0, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 1700, 0, 1702, 0, 1703, 1704, 1711, 1724, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 2069, -2, 0, 0, 0, 0, 1716, 0, 1472,
	0, 0, 1543, 2098, 2102, 2103, 1543, 1543, 0, 0,
	2046, 1605, 1605, 0, 0, 1600, 1600, 1600, 1598, 1581,
	0, 1581, 1591, 0, 1581, 1581, 0, -2, 1562, 0,
	0, 1591, 0, 1575, 560, 562, 564, 566, 567, 568,
	570, 1609, 1610, 0, 0, 0, 0, 2179, 0, 0,
	0, 0, 0, 2164, 0, 344, 0, 0, 0, 2528,
	2474, -2, 590, 607, 1482, 0, 2048, 1635, 1639, 0,
	1641, 1642, 1643, 1644, 1645, 0, 0, 1636, -2, 1712,
	1714, 1735, 2196, 2197, 2198, 1695, 1696, 1697, 1698, 1699,
	1707, 1694, 1694, 1694, 1705, 1734, 1726, 1734, 1730, 1680,
	1681, 1682, 1717, 1718, 1719, 1720, 0, 2528, 2474, -2,
	598, 0, 0, 1420, 203, 205, 206, 207, 208, 209,
	389, 0, 396, 397, 398, 0, 485, 0, 185, 186,
	0, 187, 2572, 490, 0, 493, 0, 187, 2572, 2104,
	499, 0, 502, 0, 0, 508, 0, 0, 0, 0,
	0, 187, 1422, 0, 0, 0, 0, -2, 661, 666,
	667, 0, 1346, 0, 1353, 688, 689, 690, 1355, 1356,
	0, 1358, 664, 691, 692, 693, 694, 695, 696, 0,
	2118, 2119, 2120, 2121, 2124, 2125, 0, 0, 662, 681,
	669, 0, 675, 110, 1296, 0, 0, 149, 0, 1296,
	1296, 0, 0, 0, 0, 174, 0, 1053, 0, 0,
	0, 0, 0, 134, 145, 122, 123, 0, 0, 0,
	0, 0, 0, 82, 1156, 0, 1159, 0, 0, 0,
	0, 0, 0, 0, 1172, 0, 0, 0, 0, 0,
	0, 0, 96, 97, 0, 133, 0, 0, 1385, 0,
	128, 112, 0, 0, 0, 135, 147, 0, 178, 180,
	1050, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	210, 0, 0, 0, 1180, 0, 1479, 0, 0, 2572,
	0, 1594, 2345, -2, -2, 257, 1594, 947, 0, 0,
	2179, 2114, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 367, 369, 370, 371, 0, 1218, 0, 377, 418,
	1105, 2572, 0, 0, 445, 440, 0, 442, 0, 0,
	0, 1155, 2572, 1153, 2149, 0, 1177, 0, 1134, 2572,
	2147, 0, 0, 0, 1227, 2188, 1236, 1240, 1375, 0,
	457, 0, 1391, 1393, 0, 0, 1615, 0, 1617, 1557,
	1482, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 263, 0, 1593, 0, 0, 1594, 257, 2452,
	304, 304, 1594, 638, 1594, 640, 0, 0, 788, 789,
	0, 304, 304, 304, 795, 796, 798, 799, -2, -2,
	-2, -2, 801, 802, 884, 0, 0, 0, 883, 814,
	818, 0, 941, 2460, 2474, 2528, 954, 884, 2264, 884,
	2264, 884, 2264, 829, 831, 834, 872, 880, 844, 849,
	0, 0, 854, 862, -2, 0, 864, 0, 866, 0,
	868, 884, 885, 888, 893, 896, 901, 902, 0, 917,
	922, 923, 919, 0, 0, 0, 0, 0, 0, 933,
	934, 0, 0, 1173, 0, 1336, 1512, 1438, 619, 1429,
	1511, 1430, 1437, 1440, 0, 0, 1442, 0, 1444, 0,
	1507, 1508, 1515, 1516, 0, 1526, 1527, 1519, 0, -2,
	0, 0, 1522, 1523, 1448, 0, 1465, 1466, 1467, 1496,
	1499, 1255, 0, 2706, 1756, 1630, 1757, 1758, 2133, 0,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	-2, -2, -2, -2, -2, -2, -2, -2, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, -2,
	-2, -2, 1797, 1798, -2, 2032, 2034, 0, 2097, 0,
	-2, 0, -2, -2, -2, -2, 1817, 0, 1819, 1824,
	1826, 1828, 0, 0, 0, 0, 2096, 1838, 2080, 2081,
	0, 0, 2011, 2012, 2013, 1823, 0, 1842, 2095, 2092,
	0, 0, 2044, 1495, 1901, 0, 0, 0, 0, 1908,
	1893, 2042, 0, 2041, 0, 0, 0, 2052, 0, 2087,
	2083, 0, 2131, 1751, 1738, 1739, 1740, 1741, 1742, 1743,
	1753, 0, 2128, 2165, 2171, 1985, 0, 0, 0, 1938,
	1939, 1940, 1941, 1942, 0, 1944, 1945, 0, 1947, 1948,
	0, 1950, 1951, 0, 1953, 1954, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 0, 0, 1957, 0,
	2055, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	1959, 0, 1961, 2046, 2066, 0, 0, 1843, 0, 0,
	0, 2009, 0, 1964, 2046, 2074, 0, 0, 0, 0,
	0, 2046, 0, 2079, 0, 1971, 0, 1973, 1474, 0,
	0, 1625, 0, 0, 0, 2101, 1625, 1625, 0, 1538,
	0, 0, 1601, 1602, 1603, 1604, 0, 0, 1605, 0,
	1595, 1599, 1596, 1597, 1591, 1554, 0, 0, 2135, 1591,
	1560, 1590, 0, 1134, 1580, 1591, 1591, 0, -2, 1564,
	1581, 0, 0, 561, 563, 565, 569, 571, 0, 0,
	1495, -2, 0, -2, 306, 1133, 0, 0, 0, 0,
	580, 582, 0, 0, 505, 0, 595, 0, 574, 0,
	577, 0, 1626, 1629, 0, 0, 1640, 1646, 1647, 0,
	-2, 0, 0, 1736, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 400, 515, 187, 487, 0, 187, 187,
	496, 0, 0, 187, 507, 187, 2156, 187, 2154, 293,
	512, 1421, 221, 0, 654, 0, 1345, 1354, 0, 685,
	0, 687, 0, 2122, 2126, 2123, 2127, 0, 676, 0,
	0, 0, 0, 1295, 0, 1262, 0, 0, 153, 2572,
	0, 189, 0, 0, 1098, 2141, 0, 1090, 0, 0,
	2284, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 1158, 1160,
	1167, 1169, 0, 1163, 2129, 0, 0, 1164, 0, 1166,
	1168, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 98, 0, 0, 0, 1384, 1385, 0, 0, 0,
	121, 125, 0, 0, 0, 0, 2108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 1212, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 0, 0, -2, 0, 0, 0, 0, 0,
	231, 0, 295, 2107, 2117, 0, 972, 973, 329, 332,
	335, 338, 227, 0, 373, 0, 0, 1020, 995, 0,
	0, 427, 304, 0, 0, 441, 445, 2158, 980, 1151,
	1154, 0, 1134, 2572, 1191, 0, 0, 0, 0, 0,
	0, 1225, 0, 0, 2572, 2136, 2187, 2188, 1377, 1385,
	0, 1625, 0, 1407, 1394, 0, 0, 0, 1407, 1411,
	1412, 1414, 1415, 0, 0, 1616, 1622, 523, 573, 1482,
	1482, 304, 302, 2405, 300, 297, 299, 0, 0, 0,
	1021, 1023, 1024, 1025, 189, 0, 2188, 1090, 2334, 2188,
	0, 1397, 1399, 0, 251, 0, 260, 1594, 258, 263,
	0, 0, 0, 439, 637, 642, 783, 0, 304, 791,
	792, 793, 836, 874, 882, 921, 803, 805, 806, 807,
	0, 0, 955, 951, 952, 953, 820, 884, 823, 884,
	826, 884, 847, 851, 856, 863, 0, 0, 0, 876,
	0, 0, 0, 0, 0, 0, 0, 927, 928, 929,
	931, 936, 935, 940, 1613, 1433, 1434, 1436, 0, 1445,
	0, 0, 1521, -2, -2, 1520, 1524, 1525, -2, -2,
	-2, -2, 1441, 0, 1450, 1447, 0, 1506, 1253, 1254,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1839,
	0, -2, 1818, 1821, 1825, 1827, 1829, 0, 0, 0,
	0, 0, 0, 2035, 0, 2037, 1840, 2090, 2093, 2007,
	0, 0, 1494, 1495, 1495, 0, 1907, 0, 2043, 0,
	2050, 2051, 0, 1900, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1911, 0, 0, 0, 0,
	1943, 1946, 1949, 1952, 0, 0, 0, 0, 1932, 0,
	0, 0, 1936, 1706, 1692, 0, 1734, 1732, 1733, 1727,
	1734, 1731, 1684, 0, 1683, 0, 1956, 0, 1958, 1960,
	0, 0, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1847, 1848, 1963,
	2072, 2073, 0, 0, 0, 0, 0, 0, 1969, 0,
	2078, 1970, 1972, 1482, 0, 1475, 0, 1540, 1529, 1624,
	0, 2099, 1594, 1542, 1544, 2100, 2138, 1529, 1529, 0,
	2047, 0, 0, 1585, 0, 0, 0, 1587, 1558, 0,
	0, 1552, 0, 1548, 1549, 1550, 1551, 1559, 1134, 1589,
	1561, 1565, 2165, 0, 1591, 0, 1576, 0, 1578, 1611,
	0, 1570, 1573, 0, 0, 2180, 1625, 0, 340, 345,
	346, 341, 342, 343, 589, 0, 0, 0, 0, 2049,
	0, 1631, 0, 1637, 0, 0, 0, 0, 597, 0,
	0, 0, 204, 1419, 395, 486, 187, 491, 494, 2105,
	187, 500, 503, 509, 217, 0, 650, -2, 683, 684,
	686, 0, 682, 150, 1296, 0, 0, 1258, 1260, 2152,
	1264, 1270, 1273, 0, 155, 2572, 165, 0, 1069, 0,
	2139, 0, 0, 0, 0, 0, 0, 1298, 0, 0,
	2572, 187, 2572, 187, 168, 170, 173, 0, 177, 175,
	0, 1057, 0, 0, 1060, 111, 1296, 0, 0, 114,
	118, 126, 0, 0, 0, 132, 0, 0, 0, 1275,
	1279, 1287, 0, 0, 0, 1161, 1162, 1165, 1171, 83,
	0, 0, 0, 1283, 1285, 1291, 93, 94, 2150, 95,
	0, 1257, 0, 0, 0, 0, 179, 116, 120, 127,
	0, 1293, 113, 0, 202, 0, 0, 192, 187, 2572,
	0, 194, 0, 195, 196, 211, 0, 0, 0, 983,
	984, 1213, 1175, 1176, 0, 1181, 0, 0, 0, 0,
	1594, 223, 0, 1594, 231, 0, 2113, 0, 360, 0,
	0, 0, 0, 1019, 1116, 0, 990, 0, 0, 0,
	433, 429, 0, 438, 444, 443, 449, -2, 0, 0,
	0, 0, -2, 0, 0, 1229, 1223, 1224, 0, 0,
	0, 0, 2572, 1379, 1385, 0, 1480, 1495, 456, 1386,
	1407, 0, 0, 0, 1396, 1392, 1389, 1625, 0, 0,
	0, 0, 0, 1618, 1621, 526, 527, 279, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 1026, 1030, 0,
	2188, 2188, 0, 2143, 0, 0, 0, 0, 261, 0,
	264, 0, 0, 0, 269, 270, 271, 272, 273, 263,
	253, 1594, 0, 0, 639, 0, 0, 790, 0, 813,
	822, 824, 827, 865, 867, 884, 911, 912, 1047, 0,
	1047, 0, 0, 932, 1443, 0, 1518, 1449, 1500, 1501,
	0, 1255, 0, 1759, 1802, 0, 0, -2, 0, 0,
	1806, 0, 0, 0, -2, 0, 0, 0, 2036, 2038,
	0, 2092, 1902, 0, 0, 0, 1906, 1890, 1891, 0,
	2010, 2053, 2082, 2086, 0, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 0, 2132, 2166, 2170, 1983, 1984, 1988, 2146,
	0, 0, 0, 1915, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 1729, 0, 0, 2054, 2065, 2067, 1844,
	1845, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, -2, -2, -2, 1862, 1863, 1864, -2, -2, -2,
	0, 0, 0, 2068, 2070, 2071, 2075, 2076, 0, 1966,
	1967, 1968, 2077, 0, 1482, 1476, 1537, 0, 1623, 1541,
	0, 1537, 1537, 1489, 1583, 0, 0, 1607, 0, 1555,
	0, 1556, 0, 1588, 0, 1563, 1566, 1567, 1577, 0,
	1569, 0, 1572, 0, 1902, -2, 305, 307, 309, 0,
	312, 313, 0, 0, 592, 593, 591, 575, 0, 0,
	1633, 0, 0, 1709, 1713, 1737, 600, 601, 599, 488,
	497, 219, 0, 1592, 0, 0, 0, 0, 0, 0,
	188, 1067, 1097, 0, 0, 0, 1089, 0, 0, 1103,
	157, 0, 0, 0, 0, 166, 0, 0, 163, 0,
	172, 176, 1054, 0, 0, 0, 0, 1263, 0, 0,
	0, 129, 130, 131, 0, 136, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 1369, 1370, 0, 1364,
	0, 0, 0, 190, 0, 0, 0, 1252, 213, 0,
	0, 0, 0, 0, 1216, 1217, 1276, 1280, 1288, 0,
	0, 0, 231, 229, 0, 232, 0, 235, 236, 0,
	231, 225, 0, 0, 0, 1134, 374, 993, 1104, 0,
	1106, 0, 991, 0, 0, 1105, 425, 0, 432, 0,
	446, 0, 0, 1155, 0, 0, 1178, 1189, 1134, 0,
	1228, 1230, 0, 1238, 0, 0, 0, 1381, 1385, 0,
	1374, 1375, 1514, 1387, 1405, -2, 0, 0, 1495, 1413,
	1410, 1416, 1417, 0, 301, 0, 296, 298, 0, 282,
	0, 0, 1022, 1027, 0, 0, 0, 0, 0, 1398,
	1400, 0, 0, 0, 0, 0, 0, 252, 263, 1594,
	288, 0, 784, 808, 875, 913, 1046, 0, 0, 915,
	0, 0, 1517, 1504, 1505, 1502, 1255, 1804, 1808, 0,
	0, 0, 1810, -2, 0, 1832, -2, -2, 2039, 2091,
	1881, 1495, 1903, 1905, 1892, 2085, 1754, 0, 1990, 1987,
	0, 1974, 0, 1927, 1928, 0, 0, 1931, 1933, 1934,
	1935, 1693, 1686, 1685, 2064, 0, 0, 0, 0, 1965,
	1477, 0, 1979, 0, 0, 1545, 1979, 1979, 1584, 0,
	1586, 1553, 1546, 0, 2166, 1579, 1571, 0, 0, 310,
	0, 314, 315, 0, 1627, 1632, 0, 1638, 1708, 220,
	151, 152, 1267, 1271, 1268, 0, 154, 0, 1068, 0,
	1071, 0, 0, 0, 0, 1078, 1090, 0, 0, 0,
	0, 0, 1091, 0, 1120, 0, 1243, 1250, 0, -2,
	0, 0, 0, 159, 182, 0, 0, 1297, 161, 0,
	0, 187, 187, 0, 0, 1259, 1261, 1274, 0, 0,
	0, 0, 139, 0, 0, 1277, 1281, 1289, 1284, 1286,
	1292, 0, 1371, 0, 0, 1294, 200, 201, 0, 187,
	0, 187, 193, 187, 1252, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 224, 294, 231, 362, 0, 1041,
	0, 1116, 1108, 1109, 1110, 0, 1115, 1117, 0, 0,
	1007, 992, 0, 1003, 0, 0, 1020, 995, 0, 430,
	447, 0, 450, 0, 453, 981, 1152, 1186, 1134, 0,
	1220, 0, 0, 0, 0, 0, 0, 0, 1383, 1385,
	0, 1376, 1377, 1407, 1513, 0, 0, 0, 1395, 1514,
	0, 303, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 265, 0, 266, 267, 268, 254, 255,
	641, 643, 0, 0, 649, 1045, 0, 0, 0, 0,
	1503, 1812, -2, -2, 1833, 0, 2167, 2169, 1495, 0,
	1976, 1497, 0, 0, -2, 0, 0, 0, 1478, 1461,
	0, 1536, 1528, 1530, 1532, 2463, 2259, 2571, 1462, 1463,
	1606, 0, 1574, 311, 594, 0, 1634, 0, 0, 1269,
	156, 0, 1072, 1073, 2142, 1075, 0, 1077, 1079, 1080,
	1081, 0, 1084, 2190, 0, 1088, 0, 1099, 1121, 0,
	1130, 0, 1245, 1255, 1249, 0, 1247, 1132, 0, 158,
	160, 181, 1252, 0, 162, 171, 0, 0, 115, 0,
	0, 2253, 142, 140, 138, 1256, 117, 0, 202, 212,
	1251, 214, 197, 187, 0, 1278, 1282, 1290, 233, 0,
	234, 237, 0, 0, 1056, 0, 994, 1107, 0, 1118,
	1119, 997, 0, 996, 0, 0, 0, 0, 0, 431,
	434, 0, 437, 0, 0, 0, 0, 0, 1231, 1229,
	0, 1237, 0, 0, 0, 1363, 0, 0, 1378, 1379,
	454, 1401, 0, 0, 1407, 1418, 281, 0, 0, 1028,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1029,
	1132, 0, 0, 1096, 0, 286, 262, 0, 645, 0,
	647, 0, 914, 916, 0, 0, 1904, 1994, 0, 0,
	1929, 1930, -2, 0, 1870, 1978, 1980, 0, 0, 0,
	0, 0, 1547, 1628, 1265, 0, 1272, 1070, 1074, 0,
	0, 0, 1138, 0, 0, 1092, 0, 1124, 1125, 1041,
	0, 1126, 1127, 1128, 1244, 1506, 1250, 1041, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 191, 215,
	1252, 230, 247, 0, 1187, 995, 1055, 0, 0, 1005,
	0, 1008, 0, 1004, 1001, 1002, 993, 0, 435, 436,
	451, 0, 452, 0, 1190, 0, 0, 1238, 0, 0,
	1366, 1362, 1385, 1380, 1381, 1625, 1404, 1408, 0, 0,
	1130, 1132, 1052, 0, 644, 0, 0, 924, 925, 0,
	0, 0, 0, 1989, 1498, 1871, 0, 0, 1531, 1533,
	1534, 1535, 1266, 0, 0, 1083, 1143, 0, 0, 0,
	1122, 1123, 1052, 0, 1248, 1246, 1101, 0, 1134, 164,
	0, 1132, 0, 1061, 0, 0, 1064, 0, 0, 143,
	2253, 141, 0, 187, 250, 0, 244, 242, 243, 997,
	0, 0, 1112, 1114, 0, 1009, 1041, 1007, 448, 1188,
	1221, 1132, 0, 1130, 0, 1373, 1385, 1367, 1368, 0,
	1383, 0, 304, 304, 1041, 1130, 995, 1051, 304, 646,
	648, 1986, 2006, 1995, -2, 2531, 2260, 0, 2006, 2006,
	1981, 1982, 0, 0, 1085, 1139, 1140, 0, 1135, 1136,
	1137, 2189, 1086, 1087, 1120, 0, 0, 1138, 183, 1041,
	1058, 0, 0, 1059, 0, 0, 146, 0, 148, 216,
	238, 0, 0, 989, 0, 1111, 0, 0, 0, 0,
	1056, 997, 1130, 0, 1041, 0, 1359, 1372, 0, 1382,
	1363, 0, 283, 284, 1052, 1041, 1625, 0, 285, 1991,
	0, 0, 1997, 1998, 1999, 2000, 2001, 1992, 1993, 1076,
	0, 1141, 0, 1142, 0, 0, 0, 1625, 1129, 0,
	1143, 169, 1062, 0, 1065, 0, 144, 0, 245, 246,
	986, 988, 0, 1113, 998, 0, 1000, 995, 1006, 1041,
	0, 1052, 0, 1365, 2151, 1366, 1402, 0, 995, 1052,
	1095, 0, 2003, 2004, 0, 0, 0, 1144, 0, 1147,
	1148, 0, 1145, 1100, 0, 1120, 0, 0, 0, 0,
	999, 997, 1052, 1132, 995, 1130, 1373, 0, 1625, 995,
	2002, 2005, 1996, 1082, 1146, 1149, 1150, 1131, 1102, 0,
	0, 248, 0, 1044, 989, 995, 1130, 1625, 1041, 1360,
	1625, 1093, 1625, 1049, 0, 0, 1040, 1042, 1043, 987,
	1625, 1041, 1234, 1052, 1403, 1094, 1063, 1048, 0, 249,
	1232, 1052, 995, 0, 995, 1625, 0, 1625, 1235, 1049,
	1233, 1066,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 569, 3, 575, 570, 3,
	580, 581, 573, 571, 585, 572, 582, 574, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 588, 3,
	561, 563, 562, 566, 584, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 578, 3, 579, 576, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 586, 568, 587, 564,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 565, 57904, 567,
	57905, 577, 57906, 583, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1302
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1450
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1546
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1665
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1689
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1700
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1743
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1793
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1813
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1819
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1931
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1945
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1977
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1983
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 169:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2035
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = nil
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = nil
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 190:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2198
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2202
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2205
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2240
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2245
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2252
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2260
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2374
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2382
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2409
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2521
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = nil
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2538
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = nil
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2654
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2698
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2747
		{
			return unimplemented(sqllex, "alter function")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2755
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2759
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2797
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2806
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2812
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2817
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2822
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2827
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2832
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2836
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2855
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2863
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = nil
		}
	case 305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2939
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2953
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3006
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3007
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3008
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3062
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3119
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3139
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3162
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3163
		{
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3164
		{
			return helpWith(sqllex, "CREATE")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3181
		{
			return unimplemented(sqllex, "create access method")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			return unimplemented(sqllex, "create cast")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3184
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3185
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3186
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3187
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3188
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3190
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3191
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			return unimplemented(sqllex, "create operator")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			return unimplemented(sqllex, "create publication")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			return unimplemented(sqllex, "create rule")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return unimplemented(sqllex, "create server")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3203
		{
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3206
		{
		}
	case 386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3207
		{
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3210
		{
		}
	case 388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3211
		{
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3214
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3215
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3220
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3221
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3222
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3223
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3225
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3226
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3227
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3228
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			return unimplemented(sqllex, "drop server")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3230
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3232
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3241
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3242
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3243
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3244
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3262
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3312
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3323
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3358
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3393
		{

			sqlVAL.union.val = nil
		}
	case 446:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3453
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "DELETE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3480
		{
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3504
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3506
		{
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "DROP")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3511
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3604
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3649
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3702
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3706
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3772
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3796
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3804
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "DELETE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "INSERT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3841
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			return helpWith(sqllex, "DELETE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "INSERT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3881
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3914
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3922
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4003
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4007
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			return helpWith(sqllex, "GRANT")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4058
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4061
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4070
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4098
		{
			return helpWith(sqllex, "RESET")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "RESET")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "USE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4144
		{
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4145
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4146
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "USE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4168
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4186
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4266
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4323
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4328
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4332
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4351
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4363
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4368
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			return unimplemented(sqllex, "set from current")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = tree.Low
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = tree.Normal
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = tree.High
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4519
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4531
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4532
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4538
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4542
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4543
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4548
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4550
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4564
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.str = "client_encoding"
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.str = "timezone"
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4633
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4648
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4696
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4705
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4730
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4744
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4842
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4861
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = true
		}
	case 838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = true
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = false
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4947
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4948
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5003
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5050
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = true
		}
	case 870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = false
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5074
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5120
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = true
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = false
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5167
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5180
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5188
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5198
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5216
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5240
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5269
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5277
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5303
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5312
		{
		}
	case 924:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5321
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5344
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5425
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5432
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5565
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5608
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5617
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5666
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5678
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "RESUME")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5698
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5707
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5810
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5849
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5865
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5894
		{

			sqlVAL.union.val = nil
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5900
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.str = ""
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5910
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = nil
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5933
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5937
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5963
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5977
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5992
		{
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5993
		{
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5994
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6027
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6049
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6075
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6089
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6092
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6093
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6099
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6120
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.str = ""
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6263
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6363
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = true
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = false
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6398
		{
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6399
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6500
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6511
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6528
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6538
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6618
		{
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6619
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6620
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6621
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6622
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6623
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6695
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6779
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6788
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6796
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6807
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6812
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6822
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6825
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6827
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6829
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6835
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6875
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6890
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = true
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6900
		{

			sqlVAL.union.val = true
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = false
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6915
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6929
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6941
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6953
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6963
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = nil
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7083
		{
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7084
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7109
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7111
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7113
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7115
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7119
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7157
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7175
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7194
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7211
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7228
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7232
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = false
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = true
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = false
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = true
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = false
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7286
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7292
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.str = ""
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.str = ""
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7365
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7371
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7596
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7602
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7614
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7620
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7634
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7640
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7657
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7658
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7661
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7662
		{
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7673
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7691
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7700
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7721
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7729
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7750
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7758
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7769
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7773
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7774
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7775
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7799
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7812
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7826
		{
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7827
		{
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7828
		{
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7845
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7849
		{
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7877
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7890
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7892
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7896
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7983
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.str = ""
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8009
		{

		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8024
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.str = ""
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.str = ""
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.str = ""
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.str = ""
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8079
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8092
		{
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8093
		{
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8122
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8140
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8144
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8202
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8229
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8233
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8271
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8303
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8324
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8339
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8483
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8518
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8520
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = true
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = false
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8694
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8695
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = nil
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8708
		{
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8709
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = true
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = false
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = false
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = true
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8738
		{
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8739
		{
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8742
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8743
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8784
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8805
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8810
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8872
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8927
		{
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8967
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8998
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9000
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9015
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9037
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9042
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9047
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9058
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9089
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9128
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9138
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9173
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9184
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9214
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9247
		{
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9249
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = nil
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = true
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = false
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.str = tree.AstFull
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.str = tree.AstRight
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.str = tree.AstInner
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9366
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9367
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.str = tree.AstHash
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.str = ""
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9441
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9459
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9465
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9471
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9481
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = true
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = false
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = true
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = false
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9530
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9543
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9551
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9552
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9570
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9580
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9593
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9600
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9609
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9649
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9661
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9662
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = types.Geography
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9711
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9719
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9745
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9753
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = nil
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = types.Int2
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = types.Int
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = types.Float4
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = types.Float
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9796
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9804
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = types.Bool
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = types.Float
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9845
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9851
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9873
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = types.String
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = true
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = false
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = types.Date
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9922
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9930
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9944
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9953
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9961
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9978
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = true
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = false
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = false
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = types.Interval
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10002
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10086
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10101
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = nil
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10131
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10191
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10443
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10509
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10531
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10725
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10730
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10756
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10765
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10780
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10810
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10821
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10822
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10837
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10846
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10912
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11060
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11098
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11108
		{
			return unimplemented(sqllex, "treat")
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11134
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.str = ""
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11270
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11283
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11351
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11380
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = tree.Any
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = tree.Some
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = tree.All
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = tree.Div
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = tree.LT
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = tree.GT
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = tree.LE
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = tree.GE
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = tree.NE
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = tree.Like
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11741
		{
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11742
		{
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11814
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11822
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11895
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11911
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11920
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11931
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11940
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11948
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11960
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12173
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12186
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12193
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.str = ""
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
