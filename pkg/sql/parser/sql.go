// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:873
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13627

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1578,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	261, 410,
	-2, 0,
	-1, 74,
	243, 243,
	516, 243,
	-2, 0,
	-1, 87,
	231, 1314,
	245, 1314,
	261, 406,
	390, 406,
	401, 1068,
	440, 406,
	453, 1068,
	500, 1068,
	527, 406,
	553, 1068,
	-2, 0,
	-1, 93,
	133, 1578,
	238, 1578,
	538, 1578,
	539, 1578,
	-2, 0,
	-1, 109,
	151, 1549,
	170, 1549,
	183, 1549,
	241, 1549,
	274, 1549,
	341, 1549,
	351, 1549,
	533, 1549,
	-2, 1520,
	-1, 150,
	159, 917,
	260, 917,
	393, 878,
	458, 878,
	499, 878,
	519, 917,
	521, 878,
	-2, 0,
	-1, 154,
	4, 1580,
	21, 1580,
	22, 1580,
	23, 1580,
	24, 1580,
	25, 1580,
	26, 1580,
	27, 1580,
	29, 1580,
	30, 1580,
	36, 1580,
	41, 1580,
	42, 1580,
	44, 1580,
	45, 1580,
	46, 1580,
	47, 1580,
	48, 1580,
	49, 1580,
	50, 1580,
	51, 1580,
	53, 1580,
	54, 1580,
	55, 1580,
	56, 1580,
	58, 1580,
	59, 1580,
	60, 1580,
	61, 1580,
	62, 1580,
	63, 1580,
	64, 1580,
	68, 1580,
	69, 1580,
	70, 1580,
	71, 1580,
	73, 1580,
	74, 1580,
	75, 1580,
	79, 1580,
	80, 1580,
	81, 1580,
	82, 1580,
	83, 1580,
	84, 1580,
	85, 1580,
	88, 1580,
	89, 1580,
	90, 1580,
	91, 1580,
	92, 1580,
	94, 1580,
	96, 1580,
	97, 1580,
	98, 1580,
	99, 1580,
	100, 1580,
	101, 1580,
	103, 1580,
	104, 1580,
	105, 1580,
	107, 1580,
	108, 1580,
	109, 1580,
	117, 1580,
	118, 1580,
	119, 1580,
	120, 1580,
	121, 1580,
	123, 1580,
	124, 1580,
	125, 1580,
	126, 1580,
	128, 1580,
	129, 1580,
	130, 1580,
	132, 1580,
	133, 1580,
	134, 1580,
	136, 1580,
	137, 1580,
	138, 1580,
	141, 1580,
	142, 1580,
	143, 1580,
	145, 1580,
	146, 1580,
	148, 1580,
	149, 1580,
	150, 1580,
	152, 1580,
	153, 1580,
	154, 1580,
	155, 1580,
	156, 1580,
	157, 1580,
	158, 1580,
	159, 1580,
	160, 1580,
	161, 1580,
	162, 1580,
	163, 1580,
	164, 1580,
	165, 1580,
	166, 1580,
	167, 1580,
	169, 1580,
	175, 1580,
	176, 1580,
	177, 1580,
	178, 1580,
	182, 1580,
	184, 1580,
	185, 1580,
	189, 1580,
	190, 1580,
	191, 1580,
	192, 1580,
	193, 1580,
	194, 1580,
	195, 1580,
	196, 1580,
	197, 1580,
	198, 1580,
	199, 1580,
	200, 1580,
	201, 1580,
	202, 1580,
	204, 1580,
	205, 1580,
	207, 1580,
	208, 1580,
	210, 1580,
	211, 1580,
	212, 1580,
	213, 1580,
	214, 1580,
	215, 1580,
	216, 1580,
	217, 1580,
	218, 1580,
	220, 1580,
	221, 1580,
	223, 1580,
	224, 1580,
	225, 1580,
	226, 1580,
	227, 1580,
	231, 1580,
	232, 1580,
	233, 1580,
	234, 1580,
	235, 1580,
	238, 1580,
	239, 1580,
	240, 1580,
	242, 1580,
	244, 1580,
	245, 1580,
	247, 1580,
	249, 1580,
	250, 1580,
	251, 1580,
	253, 1580,
	257, 1580,
	258, 1580,
	259, 1580,
	260, 1580,
	261, 1580,
	262, 1580,
	264, 1580,
	265, 1580,
	266, 1580,
	268, 1580,
	269, 1580,
	271, 1580,
	272, 1580,
	275, 1580,
	279, 1580,
	280, 1580,
	281, 1580,
	284, 1580,
	285, 1580,
	286, 1580,
	287, 1580,
	289, 1580,
	290, 1580,
	291, 1580,
	292, 1580,
	293, 1580,
	294, 1580,
	295, 1580,
	296, 1580,
	297, 1580,
	298, 1580,
	299, 1580,
	300, 1580,
	301, 1580,
	302, 1580,
	303, 1580,
	304, 1580,
	305, 1580,
	306, 1580,
	307, 1580,
	308, 1580,
	309, 1580,
	310, 1580,
	312, 1580,
	314, 1580,
	315, 1580,
	316, 1580,
	317, 1580,
	318, 1580,
	319, 1580,
	320, 1580,
	321, 1580,
	322, 1580,
	323, 1580,
	324, 1580,
	325, 1580,
	326, 1580,
	328, 1580,
	329, 1580,
	331, 1580,
	333, 1580,
	334, 1580,
	336, 1580,
	337, 1580,
	338, 1580,
	339, 1580,
	340, 1580,
	343, 1580,
	346, 1580,
	347, 1580,
	348, 1580,
	349, 1580,
	352, 1580,
	353, 1580,
	354, 1580,
	356, 1580,
	358, 1580,
	359, 1580,
	360, 1580,
	361, 1580,
	362, 1580,
	363, 1580,
	364, 1580,
	365, 1580,
	366, 1580,
	367, 1580,
	368, 1580,
	369, 1580,
	370, 1580,
	372, 1580,
	373, 1580,
	374, 1580,
	375, 1580,
	376, 1580,
	377, 1580,
	378, 1580,
	379, 1580,
	380, 1580,
	381, 1580,
	382, 1580,
	383, 1580,
	384, 1580,
	385, 1580,
	386, 1580,
	388, 1580,
	389, 1580,
	391, 1580,
	392, 1580,
	393, 1580,
	394, 1580,
	395, 1580,
	396, 1580,
	397, 1580,
	398, 1580,
	399, 1580,
	400, 1580,
	401, 1580,
	402, 1580,
	403, 1580,
	405, 1580,
	407, 1580,
	408, 1580,
	409, 1580,
	415, 1580,
	417, 1580,
	418, 1580,
	419, 1580,
	420, 1580,
	421, 1580,
	422, 1580,
	423, 1580,
	424, 1580,
	425, 1580,
	426, 1580,
	428, 1580,
	429, 1580,
	430, 1580,
	432, 1580,
	433, 1580,
	434, 1580,
	435, 1580,
	436, 1580,
	437, 1580,
	438, 1580,
	440, 1580,
	441, 1580,
	442, 1580,
	443, 1580,
	444, 1580,
	445, 1580,
	446, 1580,
	447, 1580,
	448, 1580,
	449, 1580,
	450, 1580,
	451, 1580,
	453, 1580,
	454, 1580,
	455, 1580,
	456, 1580,
	457, 1580,
	458, 1580,
	460, 1580,
	461, 1580,
	462, 1580,
	463, 1580,
	464, 1580,
	465, 1580,
	467, 1580,
	468, 1580,
	469, 1580,
	470, 1580,
	471, 1580,
	472, 1580,
	473, 1580,
	474, 1580,
	476, 1580,
	478, 1580,
	479, 1580,
	480, 1580,
	481, 1580,
	482, 1580,
	483, 1580,
	484, 1580,
	485, 1580,
	486, 1580,
	487, 1580,
	488, 1580,
	489, 1580,
	490, 1580,
	491, 1580,
	492, 1580,
	493, 1580,
	495, 1580,
	496, 1580,
	498, 1580,
	499, 1580,
	501, 1580,
	502, 1580,
	503, 1580,
	504, 1580,
	505, 1580,
	506, 1580,
	507, 1580,
	508, 1580,
	509, 1580,
	511, 1580,
	512, 1580,
	513, 1580,
	514, 1580,
	515, 1580,
	517, 1580,
	519, 1580,
	520, 1580,
	521, 1580,
	522, 1580,
	523, 1580,
	524, 1580,
	526, 1580,
	527, 1580,
	528, 1580,
	529, 1580,
	531, 1580,
	532, 1580,
	535, 1580,
	536, 1580,
	537, 1580,
	538, 1580,
	539, 1580,
	540, 1580,
	541, 1580,
	543, 1580,
	546, 1580,
	547, 1580,
	548, 1580,
	549, 1580,
	550, 1580,
	551, 1580,
	553, 1580,
	554, 1580,
	555, 1580,
	556, 1580,
	558, 1580,
	563, 1580,
	564, 1580,
	565, 1580,
	566, 1580,
	567, 1580,
	568, 1580,
	-2, 0,
	-1, 155,
	1, 1431,
	131, 1431,
	249, 1431,
	330, 1431,
	388, 1431,
	397, 1431,
	572, 1431,
	601, 1431,
	-2, 0,
	-1, 157,
	1, 1431,
	601, 1431,
	-2, 0,
	-1, 158,
	1, 1431,
	601, 1431,
	-2, 0,
	-1, 159,
	1, 1431,
	516, 1431,
	601, 1431,
	-2, 0,
	-1, 188,
	151, 1548,
	170, 1548,
	183, 1548,
	241, 1548,
	274, 1548,
	341, 1548,
	351, 1548,
	533, 1548,
	-2, 1523,
	-1, 236,
	4, 1587,
	5, 1587,
	6, 1587,
	7, 1587,
	8, 1587,
	9, 1587,
	10, 1587,
	21, 1587,
	22, 1587,
	23, 1587,
	24, 1587,
	25, 1587,
	26, 1587,
	27, 1587,
	29, 1587,
	30, 1587,
	36, 1587,
	37, 1587,
	41, 1587,
	42, 1587,
	43, 1587,
	44, 1587,
	45, 1587,
	46, 1587,
	47, 1587,
	48, 1587,
	49, 1587,
	50, 1587,
	51, 1587,
	53, 1587,
	54, 1587,
	55, 1587,
	56, 1587,
	58, 1587,
	59, 1587,
	60, 1587,
	61, 1587,
	62, 1587,
	63, 1587,
	64, 1587,
	65, 1587,
	66, 1587,
	67, 1587,
	68, 1587,
	69, 1587,
	70, 1587,
	71, 1587,
	73, 1587,
	74, 1587,
	75, 1587,
	77, 1587,
	79, 1587,
	80, 1587,
	81, 1587,
	82, 1587,
	83, 1587,
	84, 1587,
	85, 1587,
	88, 1587,
	89, 1587,
	90, 1587,
	91, 1587,
	92, 1587,
	94, 1587,
	96, 1587,
	97, 1587,
	98, 1587,
	99, 1587,
	100, 1587,
	101, 1587,
	103, 1587,
	104, 1587,
	105, 1587,
	106, 1587,
	107, 1587,
	108, 1587,
	109, 1587,
	110, 1587,
	111, 1587,
	112, 1587,
	113, 1587,
	114, 1587,
	115, 1587,
	116, 1587,
	117, 1587,
	118, 1587,
	119, 1587,
	120, 1587,
	121, 1587,
	122, 1587,
	123, 1587,
	124, 1587,
	125, 1587,
	126, 1587,
	127, 1587,
	128, 1587,
	129, 1587,
	130, 1587,
	132, 1587,
	133, 1587,
	134, 1587,
	136, 1587,
	137, 1587,
	138, 1587,
	141, 1587,
	142, 1587,
	143, 1587,
	145, 1587,
	146, 1587,
	148, 1587,
	149, 1587,
	150, 1587,
	152, 1587,
	153, 1587,
	154, 1587,
	155, 1587,
	156, 1587,
	157, 1587,
	158, 1587,
	159, 1587,
	160, 1587,
	161, 1587,
	162, 1587,
	163, 1587,
	164, 1587,
	165, 1587,
	166, 1587,
	167, 1587,
	168, 1587,
	169, 1587,
	175, 1587,
	176, 1587,
	177, 1587,
	178, 1587,
	182, 1587,
	184, 1587,
	185, 1587,
	188, 1587,
	189, 1587,
	190, 1587,
	191, 1587,
	192, 1587,
	193, 1587,
	194, 1587,
	195, 1587,
	196, 1587,
	197, 1587,
	198, 1587,
	199, 1587,
	200, 1587,
	201, 1587,
	202, 1587,
	204, 1587,
	205, 1587,
	207, 1587,
	208, 1587,
	210, 1587,
	211, 1587,
	212, 1587,
	213, 1587,
	214, 1587,
	215, 1587,
	216, 1587,
	217, 1587,
	218, 1587,
	219, 1587,
	220, 1587,
	221, 1587,
	223, 1587,
	224, 1587,
	225, 1587,
	226, 1587,
	227, 1587,
	231, 1587,
	232, 1587,
	233, 1587,
	234, 1587,
	235, 1587,
	237, 1587,
	238, 1587,
	239, 1587,
	240, 1587,
	242, 1587,
	244, 1587,
	245, 1587,
	246, 1587,
	247, 1587,
	248, 1587,
	249, 1587,
	250, 1587,
	251, 1587,
	252, 1587,
	253, 1587,
	257, 1587,
	258, 1587,
	259, 1587,
	260, 1587,
	261, 1587,
	262, 1587,
	264, 1587,
	265, 1587,
	266, 1587,
	268, 1587,
	269, 1587,
	270, 1587,
	271, 1587,
	272, 1587,
	273, 1587,
	275, 1587,
	279, 1587,
	280, 1587,
	281, 1587,
	282, 1587,
	283, 1587,
	284, 1587,
	285, 1587,
	286, 1587,
	287, 1587,
	289, 1587,
	290, 1587,
	291, 1587,
	292, 1587,
	293, 1587,
	294, 1587,
	295, 1587,
	296, 1587,
	297, 1587,
	298, 1587,
	299, 1587,
	300, 1587,
	301, 1587,
	302, 1587,
	303, 1587,
	304, 1587,
	305, 1587,
	306, 1587,
	307, 1587,
	308, 1587,
	309, 1587,
	310, 1587,
	312, 1587,
	313, 1587,
	314, 1587,
	315, 1587,
	316, 1587,
	317, 1587,
	318, 1587,
	319, 1587,
	320, 1587,
	321, 1587,
	322, 1587,
	323, 1587,
	324, 1587,
	325, 1587,
	326, 1587,
	327, 1587,
	328, 1587,
	329, 1587,
	330, 1587,
	331, 1587,
	332, 1587,
	333, 1587,
	334, 1587,
	335, 1587,
	336, 1587,
	337, 1587,
	338, 1587,
	339, 1587,
	340, 1587,
	343, 1587,
	347, 1587,
	348, 1587,
	349, 1587,
	352, 1587,
	353, 1587,
	354, 1587,
	355, 1587,
	356, 1587,
	357, 1587,
	358, 1587,
	359, 1587,
	360, 1587,
	361, 1587,
	362, 1587,
	363, 1587,
	364, 1587,
	365, 1587,
	366, 1587,
	367, 1587,
	368, 1587,
	369, 1587,
	370, 1587,
	372, 1587,
	373, 1587,
	374, 1587,
	375, 1587,
	376, 1587,
	377, 1587,
	378, 1587,
	379, 1587,
	380, 1587,
	381, 1587,
	382, 1587,
	383, 1587,
	384, 1587,
	385, 1587,
	386, 1587,
	388, 1587,
	389, 1587,
	391, 1587,
	392, 1587,
	393, 1587,
	394, 1587,
	395, 1587,
	396, 1587,
	397, 1587,
	398, 1587,
	399, 1587,
	400, 1587,
	401, 1587,
	402, 1587,
	403, 1587,
	405, 1587,
	407, 1587,
	408, 1587,
	409, 1587,
	415, 1587,
	417, 1587,
	418, 1587,
	419, 1587,
	420, 1587,
	421, 1587,
	422, 1587,
	423, 1587,
	424, 1587,
	425, 1587,
	426, 1587,
	428, 1587,
	429, 1587,
	430, 1587,
	431, 1587,
	432, 1587,
	433, 1587,
	434, 1587,
	435, 1587,
	436, 1587,
	437, 1587,
	438, 1587,
	440, 1587,
	441, 1587,
	442, 1587,
	443, 1587,
	444, 1587,
	445, 1587,
	446, 1587,
	447, 1587,
	448, 1587,
	449, 1587,
	450, 1587,
	451, 1587,
	453, 1587,
	454, 1587,
	455, 1587,
	456, 1587,
	457, 1587,
	458, 1587,
	459, 1587,
	460, 1587,
	461, 1587,
	462, 1587,
	463, 1587,
	464, 1587,
	465, 1587,
	466, 1587,
	467, 1587,
	468, 1587,
	469, 1587,
	470, 1587,
	471, 1587,
	472, 1587,
	473, 1587,
	474, 1587,
	476, 1587,
	478, 1587,
	479, 1587,
	480, 1587,
	481, 1587,
	482, 1587,
	483, 1587,
	484, 1587,
	485, 1587,
	486, 1587,
	487, 1587,
	488, 1587,
	489, 1587,
	490, 1587,
	491, 1587,
	492, 1587,
	493, 1587,
	495, 1587,
	496, 1587,
	497, 1587,
	498, 1587,
	499, 1587,
	501, 1587,
	502, 1587,
	503, 1587,
	504, 1587,
	505, 1587,
	506, 1587,
	507, 1587,
	508, 1587,
	509, 1587,
	511, 1587,
	512, 1587,
	513, 1587,
	514, 1587,
	515, 1587,
	517, 1587,
	519, 1587,
	520, 1587,
	521, 1587,
	522, 1587,
	523, 1587,
	524, 1587,
	525, 1587,
	526, 1587,
	527, 1587,
	528, 1587,
	529, 1587,
	531, 1587,
	532, 1587,
	534, 1587,
	535, 1587,
	536, 1587,
	537, 1587,
	538, 1587,
	539, 1587,
	540, 1587,
	541, 1587,
	542, 1587,
	543, 1587,
	546, 1587,
	547, 1587,
	548, 1587,
	549, 1587,
	550, 1587,
	551, 1587,
	553, 1587,
	554, 1587,
	555, 1587,
	556, 1587,
	558, 1587,
	563, 1587,
	564, 1587,
	565, 1587,
	566, 1587,
	567, 1587,
	568, 1587,
	569, 1587,
	582, 1587,
	589, 1587,
	590, 1587,
	591, 1587,
	598, 1587,
	602, 1587,
	-2, 0,
	-1, 742,
	4, 1312,
	21, 1312,
	22, 1312,
	23, 1312,
	24, 1312,
	25, 1312,
	26, 1312,
	27, 1312,
	29, 1312,
	30, 1312,
	36, 1312,
	41, 1312,
	42, 1312,
	44, 1312,
	45, 1312,
	46, 1312,
	47, 1312,
	48, 1312,
	49, 1312,
	50, 1312,
	51, 1312,
	53, 1312,
	54, 1312,
	55, 1312,
	56, 1312,
	58, 1312,
	59, 1312,
	60, 1312,
	61, 1312,
	62, 1312,
	63, 1312,
	64, 1312,
	68, 1312,
	69, 1312,
	70, 1312,
	71, 1312,
	73, 1312,
	74, 1312,
	75, 1312,
	79, 1312,
	80, 1312,
	81, 1312,
	82, 1312,
	83, 1312,
	84, 1312,
	85, 1312,
	88, 1312,
	89, 1312,
	90, 1312,
	91, 1312,
	92, 1312,
	94, 1312,
	96, 1312,
	97, 1312,
	98, 1312,
	99, 1312,
	100, 1312,
	101, 1312,
	103, 1312,
	104, 1312,
	105, 1312,
	107, 1312,
	108, 1312,
	109, 1312,
	117, 1312,
	118, 1312,
	119, 1312,
	120, 1312,
	121, 1312,
	123, 1312,
	124, 1312,
	125, 1312,
	126, 1312,
	128, 1312,
	129, 1312,
	130, 1312,
	132, 1312,
	133, 1312,
	134, 1312,
	136, 1312,
	137, 1312,
	138, 1312,
	141, 1312,
	142, 1312,
	143, 1312,
	145, 1312,
	146, 1312,
	148, 1312,
	149, 1312,
	150, 1312,
	152, 1312,
	153, 1312,
	154, 1312,
	155, 1312,
	156, 1312,
	157, 1312,
	158, 1312,
	159, 1312,
	160, 1312,
	161, 1312,
	162, 1312,
	163, 1312,
	164, 1312,
	165, 1312,
	166, 1312,
	167, 1312,
	169, 1312,
	175, 1312,
	176, 1312,
	177, 1312,
	178, 1312,
	182, 1312,
	184, 1312,
	185, 1312,
	189, 1312,
	190, 1312,
	191, 1312,
	192, 1312,
	193, 1312,
	194, 1312,
	195, 1312,
	196, 1312,
	197, 1312,
	198, 1312,
	199, 1312,
	200, 1312,
	201, 1312,
	202, 1312,
	204, 1312,
	205, 1312,
	207, 1312,
	208, 1312,
	210, 1312,
	211, 1312,
	212, 1312,
	213, 1312,
	214, 1312,
	215, 1312,
	216, 1312,
	217, 1312,
	218, 1312,
	220, 1312,
	221, 1312,
	223, 1312,
	224, 1312,
	225, 1312,
	226, 1312,
	227, 1312,
	231, 1312,
	232, 1312,
	233, 1312,
	234, 1312,
	235, 1312,
	238, 1312,
	239, 1312,
	240, 1312,
	242, 1312,
	244, 1312,
	245, 1312,
	247, 1312,
	249, 1312,
	250, 1312,
	251, 1312,
	253, 1312,
	257, 1312,
	258, 1312,
	259, 1312,
	260, 1312,
	261, 1312,
	262, 1312,
	264, 1312,
	265, 1312,
	266, 1312,
	268, 1312,
	269, 1312,
	271, 1312,
	272, 1312,
	275, 1312,
	279, 1312,
	280, 1312,
	281, 1312,
	284, 1312,
	285, 1312,
	286, 1312,
	287, 1312,
	289, 1312,
	290, 1312,
	291, 1312,
	292, 1312,
	293, 1312,
	294, 1312,
	295, 1312,
	296, 1312,
	297, 1312,
	298, 1312,
	299, 1312,
	300, 1312,
	301, 1312,
	302, 1312,
	303, 1312,
	304, 1312,
	305, 1312,
	306, 1312,
	307, 1312,
	308, 1312,
	309, 1312,
	310, 1312,
	312, 1312,
	314, 1312,
	315, 1312,
	316, 1312,
	317, 1312,
	318, 1312,
	319, 1312,
	320, 1312,
	321, 1312,
	322, 1312,
	323, 1312,
	324, 1312,
	325, 1312,
	326, 1312,
	328, 1312,
	329, 1312,
	331, 1312,
	333, 1312,
	334, 1312,
	336, 1312,
	337, 1312,
	338, 1312,
	339, 1312,
	340, 1312,
	343, 1312,
	347, 1312,
	348, 1312,
	349, 1312,
	352, 1312,
	353, 1312,
	354, 1312,
	356, 1312,
	358, 1312,
	359, 1312,
	360, 1312,
	361, 1312,
	362, 1312,
	363, 1312,
	364, 1312,
	365, 1312,
	366, 1312,
	367, 1312,
	368, 1312,
	369, 1312,
	370, 1312,
	372, 1312,
	373, 1312,
	374, 1312,
	375, 1312,
	376, 1312,
	377, 1312,
	378, 1312,
	379, 1312,
	380, 1312,
	381, 1312,
	382, 1312,
	383, 1312,
	384, 1312,
	385, 1312,
	386, 1312,
	388, 1312,
	389, 1312,
	391, 1312,
	392, 1312,
	393, 1312,
	394, 1312,
	395, 1312,
	396, 1312,
	397, 1312,
	398, 1312,
	399, 1312,
	400, 1312,
	401, 1312,
	402, 1312,
	403, 1312,
	405, 1312,
	407, 1312,
	408, 1312,
	409, 1312,
	415, 1312,
	417, 1312,
	418, 1312,
	419, 1312,
	420, 1312,
	421, 1312,
	422, 1312,
	423, 1312,
	424, 1312,
	425, 1312,
	426, 1312,
	428, 1312,
	429, 1312,
	430, 1312,
	432, 1312,
	433, 1312,
	434, 1312,
	435, 1312,
	436, 1312,
	437, 1312,
	438, 1312,
	440, 1312,
	441, 1312,
	442, 1312,
	443, 1312,
	444, 1312,
	445, 1312,
	446, 1312,
	447, 1312,
	448, 1312,
	449, 1312,
	450, 1312,
	451, 1312,
	453, 1312,
	454, 1312,
	455, 1312,
	456, 1312,
	457, 1312,
	458, 1312,
	460, 1312,
	461, 1312,
	462, 1312,
	463, 1312,
	464, 1312,
	465, 1312,
	467, 1312,
	468, 1312,
	469, 1312,
	470, 1312,
	471, 1312,
	472, 1312,
	473, 1312,
	474, 1312,
	476, 1312,
	478, 1312,
	479, 1312,
	480, 1312,
	481, 1312,
	482, 1312,
	483, 1312,
	484, 1312,
	485, 1312,
	486, 1312,
	487, 1312,
	488, 1312,
	489, 1312,
	490, 1312,
	491, 1312,
	492, 1312,
	493, 1312,
	495, 1312,
	496, 1312,
	498, 1312,
	499, 1312,
	501, 1312,
	502, 1312,
	503, 1312,
	504, 1312,
	505, 1312,
	506, 1312,
	507, 1312,
	508, 1312,
	509, 1312,
	511, 1312,
	512, 1312,
	513, 1312,
	514, 1312,
	515, 1312,
	517, 1312,
	519, 1312,
	520, 1312,
	521, 1312,
	522, 1312,
	523, 1312,
	524, 1312,
	526, 1312,
	527, 1312,
	528, 1312,
	529, 1312,
	531, 1312,
	532, 1312,
	535, 1312,
	536, 1312,
	537, 1312,
	538, 1312,
	539, 1312,
	540, 1312,
	541, 1312,
	543, 1312,
	546, 1312,
	547, 1312,
	548, 1312,
	549, 1312,
	550, 1312,
	551, 1312,
	553, 1312,
	554, 1312,
	555, 1312,
	556, 1312,
	558, 1312,
	563, 1312,
	564, 1312,
	565, 1312,
	566, 1312,
	567, 1312,
	568, 1312,
	-2, 0,
	-1, 761,
	187, 2375,
	516, 2375,
	581, 2375,
	600, 2375,
	-2, 0,
	-1, 762,
	187, 2362,
	516, 2362,
	581, 2362,
	600, 2362,
	-2, 0,
	-1, 764,
	187, 2620,
	516, 2620,
	581, 2620,
	600, 2620,
	-2, 0,
	-1, 767,
	187, 2483,
	516, 2483,
	581, 2483,
	600, 2483,
	-2, 0,
	-1, 768,
	187, 2661,
	516, 2661,
	581, 2661,
	600, 2661,
	-2, 0,
	-1, 776,
	187, 2510,
	516, 2510,
	581, 2510,
	600, 2510,
	-2, 704,
	-1, 811,
	600, 2311,
	603, 2311,
	-2, 997,
	-1, 812,
	600, 2313,
	603, 2313,
	-2, 998,
	-1, 813,
	600, 2312,
	603, 2312,
	-2, 999,
	-1, 814,
	603, 2237,
	-2, 1000,
	-1, 837,
	183, 264,
	-2, 0,
	-1, 861,
	43, 2284,
	-2, 0,
	-1, 862,
	553, 1290,
	-2, 1069,
	-1, 878,
	4, 1717,
	21, 1717,
	22, 1717,
	23, 1717,
	24, 1717,
	25, 1717,
	26, 1717,
	27, 1717,
	29, 1717,
	30, 1717,
	36, 1717,
	41, 1717,
	42, 1717,
	44, 1717,
	45, 1717,
	46, 1717,
	47, 1717,
	48, 1717,
	49, 1717,
	50, 1717,
	51, 1717,
	53, 1717,
	54, 1717,
	55, 1717,
	56, 1717,
	58, 1717,
	59, 1717,
	60, 1717,
	61, 1717,
	62, 1717,
	63, 1717,
	64, 1717,
	68, 1717,
	69, 1717,
	70, 1717,
	71, 1717,
	73, 1717,
	74, 1717,
	75, 1717,
	79, 1717,
	80, 1717,
	81, 1717,
	82, 1717,
	83, 1717,
	84, 1717,
	85, 1717,
	88, 1717,
	89, 1717,
	90, 1717,
	91, 1717,
	92, 1717,
	94, 1717,
	96, 1717,
	97, 1717,
	98, 1717,
	99, 1717,
	100, 1717,
	101, 1717,
	103, 1717,
	104, 1717,
	105, 1717,
	107, 1717,
	108, 1717,
	109, 1717,
	117, 1717,
	118, 1717,
	119, 1717,
	120, 1717,
	121, 1717,
	123, 1717,
	124, 1717,
	125, 1717,
	126, 1717,
	128, 1717,
	129, 1717,
	130, 1717,
	132, 1717,
	133, 1717,
	134, 1717,
	136, 1717,
	137, 1717,
	138, 1717,
	141, 1717,
	142, 1717,
	143, 1717,
	145, 1717,
	146, 1717,
	148, 1717,
	149, 1717,
	150, 1717,
	152, 1717,
	153, 1717,
	154, 1717,
	155, 1717,
	156, 1717,
	157, 1717,
	158, 1717,
	159, 1717,
	160, 1717,
	161, 1717,
	162, 1717,
	163, 1717,
	164, 1717,
	165, 1717,
	166, 1717,
	167, 1717,
	169, 1717,
	175, 1717,
	176, 1717,
	177, 1717,
	178, 1717,
	182, 1717,
	184, 1717,
	185, 1717,
	189, 1717,
	190, 1717,
	191, 1717,
	192, 1717,
	193, 1717,
	194, 1717,
	195, 1717,
	196, 1717,
	197, 1717,
	198, 1717,
	199, 1717,
	200, 1717,
	201, 1717,
	202, 1717,
	204, 1717,
	205, 1717,
	207, 1717,
	208, 1717,
	210, 1717,
	211, 1717,
	212, 1717,
	213, 1717,
	214, 1717,
	215, 1717,
	216, 1717,
	217, 1717,
	218, 1717,
	220, 1717,
	221, 1717,
	223, 1717,
	224, 1717,
	225, 1717,
	226, 1717,
	227, 1717,
	231, 1717,
	232, 1717,
	233, 1717,
	234, 1717,
	235, 1717,
	238, 1717,
	239, 1717,
	240, 1717,
	242, 1717,
	244, 1717,
	245, 1717,
	247, 1717,
	249, 1717,
	250, 1717,
	251, 1717,
	253, 1717,
	257, 1717,
	258, 1717,
	259, 1717,
	260, 1717,
	261, 1717,
	262, 1717,
	264, 1717,
	265, 1717,
	266, 1717,
	268, 1717,
	269, 1717,
	271, 1717,
	272, 1717,
	275, 1717,
	279, 1717,
	280, 1717,
	281, 1717,
	284, 1717,
	285, 1717,
	286, 1717,
	287, 1717,
	289, 1717,
	290, 1717,
	291, 1717,
	292, 1717,
	293, 1717,
	294, 1717,
	295, 1717,
	296, 1717,
	297, 1717,
	298, 1717,
	299, 1717,
	300, 1717,
	301, 1717,
	302, 1717,
	303, 1717,
	304, 1717,
	305, 1717,
	306, 1717,
	307, 1717,
	308, 1717,
	309, 1717,
	310, 1717,
	312, 1717,
	314, 1717,
	315, 1717,
	316, 1717,
	317, 1717,
	318, 1717,
	319, 1717,
	320, 1717,
	321, 1717,
	322, 1717,
	323, 1717,
	324, 1717,
	325, 1717,
	326, 1717,
	328, 1717,
	329, 1717,
	331, 1717,
	333, 1717,
	334, 1717,
	336, 1717,
	337, 1717,
	338, 1717,
	339, 1717,
	340, 1717,
	343, 1717,
	347, 1717,
	348, 1717,
	349, 1717,
	352, 1717,
	353, 1717,
	354, 1717,
	356, 1717,
	358, 1717,
	359, 1717,
	360, 1717,
	361, 1717,
	362, 1717,
	363, 1717,
	364, 1717,
	365, 1717,
	366, 1717,
	367, 1717,
	368, 1717,
	369, 1717,
	370, 1717,
	372, 1717,
	373, 1717,
	374, 1717,
	375, 1717,
	376, 1717,
	377, 1717,
	378, 1717,
	379, 1717,
	380, 1717,
	381, 1717,
	382, 1717,
	383, 1717,
	384, 1717,
	385, 1717,
	386, 1717,
	388, 1717,
	389, 1717,
	391, 1717,
	392, 1717,
	393, 1717,
	394, 1717,
	395, 1717,
	396, 1717,
	397, 1717,
	398, 1717,
	399, 1717,
	400, 1717,
	401, 1717,
	402, 1717,
	403, 1717,
	405, 1717,
	407, 1717,
	408, 1717,
	409, 1717,
	415, 1717,
	417, 1717,
	418, 1717,
	419, 1717,
	420, 1717,
	421, 1717,
	422, 1717,
	423, 1717,
	424, 1717,
	425, 1717,
	426, 1717,
	428, 1717,
	429, 1717,
	430, 1717,
	432, 1717,
	433, 1717,
	434, 1717,
	435, 1717,
	436, 1717,
	437, 1717,
	438, 1717,
	440, 1717,
	441, 1717,
	442, 1717,
	443, 1717,
	444, 1717,
	445, 1717,
	446, 1717,
	447, 1717,
	448, 1717,
	449, 1717,
	450, 1717,
	451, 1717,
	453, 1717,
	454, 1717,
	455, 1717,
	456, 1717,
	457, 1717,
	458, 1717,
	460, 1717,
	461, 1717,
	462, 1717,
	463, 1717,
	464, 1717,
	465, 1717,
	467, 1717,
	468, 1717,
	469, 1717,
	470, 1717,
	471, 1717,
	472, 1717,
	473, 1717,
	474, 1717,
	476, 1717,
	478, 1717,
	479, 1717,
	480, 1717,
	481, 1717,
	482, 1717,
	483, 1717,
	484, 1717,
	485, 1717,
	486, 1717,
	487, 1717,
	488, 1717,
	489, 1717,
	490, 1717,
	491, 1717,
	492, 1717,
	493, 1717,
	495, 1717,
	496, 1717,
	498, 1717,
	499, 1717,
	501, 1717,
	502, 1717,
	503, 1717,
	504, 1717,
	505, 1717,
	506, 1717,
	507, 1717,
	508, 1717,
	509, 1717,
	511, 1717,
	512, 1717,
	513, 1717,
	514, 1717,
	515, 1717,
	517, 1717,
	519, 1717,
	520, 1717,
	521, 1717,
	522, 1717,
	523, 1717,
	524, 1717,
	526, 1717,
	527, 1717,
	528, 1717,
	529, 1717,
	531, 1717,
	532, 1717,
	535, 1717,
	536, 1717,
	537, 1717,
	538, 1717,
	539, 1717,
	540, 1717,
	541, 1717,
	543, 1717,
	546, 1717,
	547, 1717,
	548, 1717,
	549, 1717,
	550, 1717,
	551, 1717,
	553, 1717,
	554, 1717,
	555, 1717,
	556, 1717,
	558, 1717,
	563, 1717,
	564, 1717,
	565, 1717,
	566, 1717,
	567, 1717,
	568, 1717,
	-2, 0,
	-1, 888,
	261, 410,
	-2, 0,
	-1, 961,
	393, 879,
	458, 879,
	499, 879,
	521, 879,
	-2, 0,
	-1, 962,
	393, 878,
	458, 878,
	499, 878,
	521, 878,
	-2, 814,
	-1, 966,
	1, 931,
	597, 931,
	599, 931,
	601, 931,
	-2, 0,
	-1, 968,
	1, 853,
	597, 853,
	599, 853,
	601, 853,
	-2, 0,
	-1, 969,
	1, 857,
	597, 857,
	599, 857,
	601, 857,
	-2, 0,
	-1, 970,
	1, 996,
	183, 996,
	597, 996,
	599, 996,
	601, 996,
	-2, 0,
	-1, 978,
	1, 884,
	597, 884,
	599, 884,
	601, 884,
	-2, 0,
	-1, 985,
	1, 931,
	597, 931,
	599, 931,
	601, 931,
	-2, 0,
	-1, 986,
	1, 933,
	597, 933,
	599, 933,
	601, 933,
	-2, 0,
	-1, 987,
	1, 936,
	597, 936,
	599, 936,
	601, 936,
	-2, 0,
	-1, 993,
	1, 960,
	597, 960,
	599, 960,
	601, 960,
	-2, 0,
	-1, 994,
	1, 962,
	597, 962,
	599, 962,
	601, 962,
	-2, 0,
	-1, 999,
	1, 990,
	597, 990,
	599, 990,
	601, 990,
	-2, 0,
	-1, 1049,
	170, 1591,
	183, 1591,
	274, 1591,
	341, 1591,
	-2, 1527,
	-1, 1064,
	170, 1590,
	183, 1590,
	274, 1590,
	341, 1590,
	-2, 1524,
	-1, 1091,
	600, 2310,
	-2, 712,
	-1, 1120,
	5, 2302,
	598, 2300,
	-2, 2291,
	-1, 1128,
	5, 2323,
	598, 2320,
	-2, 2311,
	-1, 1129,
	5, 2324,
	598, 2321,
	-2, 2312,
	-1, 1137,
	600, 2308,
	-2, 2290,
	-1, 1138,
	598, 2744,
	-2, 2309,
	-1, 1161,
	598, 2743,
	-2, 2325,
	-1, 1162,
	5, 1792,
	-2, 2714,
	-1, 1163,
	5, 1793,
	-2, 2715,
	-1, 1164,
	5, 1794,
	-2, 2729,
	-1, 1165,
	5, 1795,
	-2, 2693,
	-1, 1166,
	5, 1796,
	-2, 2727,
	-1, 1167,
	5, 1804,
	-2, 2706,
	-1, 1168,
	5, 1791,
	-2, 2702,
	-1, 1169,
	5, 1791,
	-2, 2701,
	-1, 1170,
	5, 1791,
	-2, 2720,
	-1, 1171,
	5, 1802,
	-2, 2695,
	-1, 1172,
	5, 1807,
	-2, 2694,
	-1, 1173,
	5, 1809,
	-2, 2739,
	-1, 1176,
	5, 1831,
	-2, 2732,
	-1, 1177,
	5, 1823,
	-2, 2733,
	-1, 1178,
	5, 1831,
	-2, 2734,
	-1, 1179,
	5, 1827,
	-2, 2735,
	-1, 1180,
	5, 1777,
	-2, 2707,
	-1, 1181,
	5, 1778,
	-2, 2708,
	-1, 1182,
	5, 1779,
	-2, 2696,
	-1, 1210,
	5, 1814,
	-2, 2740,
	-1, 1211,
	5, 1815,
	-2, 2730,
	-1, 1212,
	5, 1816,
	554, 1816,
	-2, 2697,
	-1, 1213,
	5, 1817,
	554, 1817,
	-2, 2698,
	-1, 1250,
	598, 2320,
	-2, 2311,
	-1, 1251,
	598, 2321,
	-2, 2312,
	-1, 1352,
	187, 2661,
	516, 2661,
	581, 2661,
	600, 2661,
	-2, 0,
	-1, 1357,
	1, 689,
	601, 689,
	-2, 1439,
	-1, 1486,
	360, 2285,
	417, 2285,
	460, 2285,
	591, 2285,
	-2, 2275,
	-1, 1497,
	602, 2285,
	-2, 2287,
	-1, 1505,
	1, 1287,
	422, 1251,
	460, 1251,
	575, 1251,
	597, 1287,
	599, 1287,
	601, 1287,
	-2, 1576,
	-1, 1511,
	203, 1384,
	222, 1384,
	430, 1384,
	-2, 0,
	-1, 1557,
	401, 1068,
	553, 1068,
	-2, 405,
	-1, 1574,
	43, 2283,
	-2, 1034,
	-1, 1581,
	1, 1287,
	597, 1287,
	599, 1287,
	601, 1287,
	-2, 1576,
	-1, 1589,
	4, 1312,
	21, 1312,
	22, 1312,
	23, 1312,
	24, 1312,
	25, 1312,
	26, 1312,
	27, 1312,
	29, 1312,
	30, 1312,
	36, 1312,
	41, 1312,
	42, 1312,
	44, 1312,
	45, 1312,
	46, 1312,
	47, 1312,
	48, 1312,
	49, 1312,
	50, 1312,
	51, 1312,
	53, 1312,
	54, 1312,
	55, 1312,
	56, 1312,
	58, 1312,
	59, 1312,
	60, 1312,
	61, 1312,
	62, 1312,
	63, 1312,
	64, 1312,
	68, 1312,
	69, 1312,
	70, 1312,
	71, 1312,
	73, 1312,
	74, 1312,
	75, 1312,
	79, 1312,
	80, 1312,
	81, 1312,
	82, 1312,
	83, 1312,
	84, 1312,
	85, 1312,
	88, 1312,
	89, 1312,
	90, 1312,
	91, 1312,
	92, 1312,
	94, 1312,
	96, 1312,
	97, 1312,
	98, 1312,
	99, 1312,
	100, 1312,
	101, 1312,
	103, 1312,
	104, 1312,
	105, 1312,
	107, 1312,
	108, 1312,
	109, 1312,
	117, 1312,
	118, 1312,
	119, 1312,
	120, 1312,
	121, 1312,
	123, 1312,
	124, 1312,
	125, 1312,
	126, 1312,
	128, 1312,
	129, 1312,
	130, 1312,
	132, 1312,
	133, 1312,
	134, 1312,
	136, 1312,
	137, 1312,
	138, 1312,
	141, 1312,
	142, 1312,
	143, 1312,
	145, 1312,
	146, 1312,
	148, 1312,
	149, 1312,
	150, 1312,
	152, 1312,
	153, 1312,
	154, 1312,
	155, 1312,
	156, 1312,
	157, 1312,
	158, 1312,
	159, 1312,
	160, 1312,
	161, 1312,
	162, 1312,
	163, 1312,
	164, 1312,
	165, 1312,
	166, 1312,
	167, 1312,
	175, 1312,
	176, 1312,
	177, 1312,
	178, 1312,
	182, 1312,
	184, 1312,
	185, 1312,
	189, 1312,
	190, 1312,
	191, 1312,
	192, 1312,
	193, 1312,
	194, 1312,
	195, 1312,
	196, 1312,
	197, 1312,
	198, 1312,
	199, 1312,
	200, 1312,
	201, 1312,
	202, 1312,
	204, 1312,
	205, 1312,
	207, 1312,
	208, 1312,
	210, 1312,
	211, 1312,
	212, 1312,
	213, 1312,
	214, 1312,
	215, 1312,
	216, 1312,
	217, 1312,
	218, 1312,
	220, 1312,
	221, 1312,
	223, 1312,
	224, 1312,
	225, 1312,
	226, 1312,
	227, 1312,
	232, 1312,
	233, 1312,
	234, 1312,
	235, 1312,
	238, 1312,
	239, 1312,
	240, 1312,
	242, 1312,
	244, 1312,
	245, 1312,
	247, 1312,
	249, 1312,
	250, 1312,
	251, 1312,
	253, 1312,
	257, 1312,
	258, 1312,
	259, 1312,
	260, 1312,
	261, 1312,
	262, 1312,
	264, 1312,
	265, 1312,
	266, 1312,
	268, 1312,
	269, 1312,
	271, 1312,
	272, 1312,
	275, 1312,
	279, 1312,
	280, 1312,
	281, 1312,
	284, 1312,
	285, 1312,
	286, 1312,
	287, 1312,
	289, 1312,
	290, 1312,
	291, 1312,
	292, 1312,
	293, 1312,
	294, 1312,
	295, 1312,
	296, 1312,
	297, 1312,
	298, 1312,
	299, 1312,
	300, 1312,
	301, 1312,
	302, 1312,
	303, 1312,
	304, 1312,
	305, 1312,
	306, 1312,
	307, 1312,
	308, 1312,
	309, 1312,
	310, 1312,
	312, 1312,
	314, 1312,
	315, 1312,
	316, 1312,
	317, 1312,
	318, 1312,
	319, 1312,
	320, 1312,
	321, 1312,
	322, 1312,
	323, 1312,
	324, 1312,
	325, 1312,
	326, 1312,
	328, 1312,
	329, 1312,
	333, 1312,
	334, 1312,
	336, 1312,
	337, 1312,
	338, 1312,
	339, 1312,
	340, 1312,
	343, 1312,
	345, 1312,
	347, 1312,
	348, 1312,
	349, 1312,
	352, 1312,
	353, 1312,
	354, 1312,
	356, 1312,
	358, 1312,
	359, 1312,
	360, 1312,
	361, 1312,
	362, 1312,
	363, 1312,
	364, 1312,
	365, 1312,
	366, 1312,
	367, 1312,
	368, 1312,
	369, 1312,
	370, 1312,
	372, 1312,
	373, 1312,
	374, 1312,
	375, 1312,
	376, 1312,
	377, 1312,
	378, 1312,
	379, 1312,
	380, 1312,
	381, 1312,
	382, 1312,
	383, 1312,
	384, 1312,
	385, 1312,
	386, 1312,
	388, 1312,
	389, 1312,
	391, 1312,
	392, 1312,
	393, 1312,
	394, 1312,
	395, 1312,
	396, 1312,
	397, 1312,
	398, 1312,
	399, 1312,
	400, 1312,
	401, 1312,
	402, 1312,
	403, 1312,
	405, 1312,
	407, 1312,
	408, 1312,
	409, 1312,
	415, 1312,
	417, 1312,
	418, 1312,
	419, 1312,
	420, 1312,
	421, 1312,
	422, 1312,
	423, 1312,
	424, 1312,
	425, 1312,
	426, 1312,
	428, 1312,
	429, 1312,
	430, 1312,
	432, 1312,
	433, 1312,
	434, 1312,
	435, 1312,
	436, 1312,
	437, 1312,
	438, 1312,
	440, 1312,
	441, 1312,
	442, 1312,
	443, 1312,
	444, 1312,
	445, 1312,
	446, 1312,
	447, 1312,
	448, 1312,
	449, 1312,
	450, 1312,
	451, 1312,
	453, 1312,
	454, 1312,
	455, 1312,
	456, 1312,
	457, 1312,
	458, 1312,
	460, 1312,
	461, 1312,
	462, 1312,
	463, 1312,
	464, 1312,
	465, 1312,
	467, 1312,
	468, 1312,
	469, 1312,
	470, 1312,
	471, 1312,
	472, 1312,
	473, 1312,
	474, 1312,
	476, 1312,
	478, 1312,
	479, 1312,
	480, 1312,
	481, 1312,
	482, 1312,
	483, 1312,
	484, 1312,
	485, 1312,
	486, 1312,
	487, 1312,
	488, 1312,
	489, 1312,
	490, 1312,
	491, 1312,
	492, 1312,
	493, 1312,
	495, 1312,
	496, 1312,
	498, 1312,
	499, 1312,
	501, 1312,
	502, 1312,
	503, 1312,
	504, 1312,
	505, 1312,
	506, 1312,
	507, 1312,
	508, 1312,
	509, 1312,
	511, 1312,
	512, 1312,
	513, 1312,
	514, 1312,
	515, 1312,
	517, 1312,
	519, 1312,
	520, 1312,
	521, 1312,
	522, 1312,
	523, 1312,
	524, 1312,
	526, 1312,
	527, 1312,
	528, 1312,
	529, 1312,
	531, 1312,
	532, 1312,
	535, 1312,
	536, 1312,
	537, 1312,
	538, 1312,
	539, 1312,
	540, 1312,
	541, 1312,
	543, 1312,
	546, 1312,
	547, 1312,
	548, 1312,
	549, 1312,
	550, 1312,
	551, 1312,
	553, 1312,
	554, 1312,
	555, 1312,
	556, 1312,
	558, 1312,
	563, 1312,
	564, 1312,
	565, 1312,
	566, 1312,
	567, 1312,
	568, 1312,
	-2, 0,
	-1, 1612,
	1, 550,
	597, 550,
	599, 550,
	601, 550,
	-2, 1547,
	-1, 1615,
	4, 2738,
	11, 2738,
	12, 2738,
	14, 2738,
	15, 2738,
	16, 2738,
	17, 2738,
	18, 2738,
	19, 2738,
	21, 2738,
	22, 2738,
	23, 2738,
	24, 2738,
	25, 2738,
	26, 2738,
	27, 2738,
	29, 2738,
	30, 2738,
	33, 2738,
	34, 2738,
	36, 2738,
	38, 2738,
	41, 2738,
	42, 2738,
	44, 2738,
	45, 2738,
	46, 2738,
	47, 2738,
	48, 2738,
	49, 2738,
	50, 2738,
	51, 2738,
	53, 2738,
	54, 2738,
	55, 2738,
	56, 2738,
	58, 2738,
	59, 2738,
	60, 2738,
	61, 2738,
	62, 2738,
	63, 2738,
	64, 2738,
	67, 2738,
	68, 2738,
	69, 2738,
	70, 2738,
	71, 2738,
	73, 2738,
	74, 2738,
	75, 2738,
	76, 2738,
	79, 2738,
	80, 2738,
	81, 2738,
	82, 2738,
	83, 2738,
	84, 2738,
	85, 2738,
	86, 2738,
	88, 2738,
	89, 2738,
	90, 2738,
	91, 2738,
	92, 2738,
	94, 2738,
	95, 2738,
	96, 2738,
	97, 2738,
	98, 2738,
	99, 2738,
	100, 2738,
	101, 2738,
	103, 2738,
	104, 2738,
	105, 2738,
	106, 2738,
	107, 2738,
	108, 2738,
	109, 2738,
	117, 2738,
	118, 2738,
	119, 2738,
	120, 2738,
	121, 2738,
	123, 2738,
	124, 2738,
	125, 2738,
	126, 2738,
	128, 2738,
	129, 2738,
	130, 2738,
	132, 2738,
	133, 2738,
	134, 2738,
	136, 2738,
	137, 2738,
	138, 2738,
	141, 2738,
	142, 2738,
	143, 2738,
	145, 2738,
	146, 2738,
	148, 2738,
	149, 2738,
	150, 2738,
	152, 2738,
	153, 2738,
	154, 2738,
	155, 2738,
	156, 2738,
	157, 2738,
	158, 2738,
	159, 2738,
	160, 2738,
	161, 2738,
	162, 2738,
	163, 2738,
	164, 2738,
	165, 2738,
	166, 2738,
	167, 2738,
	171, 2738,
	172, 2738,
	173, 2738,
	174, 2738,
	175, 2738,
	176, 2738,
	177, 2738,
	178, 2738,
	181, 2738,
	182, 2738,
	184, 2738,
	185, 2738,
	188, 2738,
	189, 2738,
	190, 2738,
	191, 2738,
	192, 2738,
	193, 2738,
	194, 2738,
	195, 2738,
	196, 2738,
	197, 2738,
	198, 2738,
	199, 2738,
	200, 2738,
	201, 2738,
	202, 2738,
	204, 2738,
	205, 2738,
	207, 2738,
	208, 2738,
	210, 2738,
	211, 2738,
	212, 2738,
	213, 2738,
	214, 2738,
	215, 2738,
	216, 2738,
	217, 2738,
	218, 2738,
	219, 2738,
	220, 2738,
	221, 2738,
	222, 2738,
	223, 2738,
	224, 2738,
	225, 2738,
	226, 2738,
	227, 2738,
	229, 2738,
	230, 2738,
	232, 2738,
	233, 2738,
	234, 2738,
	235, 2738,
	237, 2738,
	238, 2738,
	239, 2738,
	240, 2738,
	242, 2738,
	244, 2738,
	245, 2738,
	246, 2738,
	247, 2738,
	248, 2738,
	249, 2738,
	250, 2738,
	251, 2738,
	252, 2738,
	253, 2738,
	255, 2738,
	256, 2738,
	257, 2738,
	258, 2738,
	259, 2738,
	260, 2738,
	261, 2738,
	262, 2738,
	264, 2738,
	265, 2738,
	266, 2738,
	268, 2738,
	269, 2738,
	270, 2738,
	271, 2738,
	272, 2738,
	273, 2738,
	275, 2738,
	279, 2738,
	280, 2738,
	281, 2738,
	284, 2738,
	285, 2738,
	286, 2738,
	287, 2738,
	288, 2738,
	289, 2738,
	290, 2738,
	291, 2738,
	292, 2738,
	293, 2738,
	294, 2738,
	295, 2738,
	296, 2738,
	297, 2738,
	298, 2738,
	299, 2738,
	300, 2738,
	301, 2738,
	302, 2738,
	303, 2738,
	304, 2738,
	305, 2738,
	306, 2738,
	307, 2738,
	308, 2738,
	309, 2738,
	310, 2738,
	312, 2738,
	313, 2738,
	314, 2738,
	315, 2738,
	316, 2738,
	317, 2738,
	318, 2738,
	319, 2738,
	320, 2738,
	321, 2738,
	322, 2738,
	323, 2738,
	324, 2738,
	325, 2738,
	326, 2738,
	328, 2738,
	329, 2738,
	332, 2738,
	333, 2738,
	334, 2738,
	336, 2738,
	337, 2738,
	338, 2738,
	339, 2738,
	340, 2738,
	343, 2738,
	347, 2738,
	348, 2738,
	349, 2738,
	350, 2738,
	352, 2738,
	353, 2738,
	354, 2738,
	356, 2738,
	358, 2738,
	359, 2738,
	360, 2738,
	361, 2738,
	362, 2738,
	363, 2738,
	364, 2738,
	365, 2738,
	366, 2738,
	367, 2738,
	368, 2738,
	369, 2738,
	370, 2738,
	372, 2738,
	373, 2738,
	374, 2738,
	375, 2738,
	376, 2738,
	377, 2738,
	378, 2738,
	379, 2738,
	380, 2738,
	381, 2738,
	382, 2738,
	383, 2738,
	384, 2738,
	385, 2738,
	386, 2738,
	388, 2738,
	389, 2738,
	391, 2738,
	392, 2738,
	393, 2738,
	394, 2738,
	395, 2738,
	396, 2738,
	397, 2738,
	398, 2738,
	399, 2738,
	400, 2738,
	401, 2738,
	402, 2738,
	403, 2738,
	405, 2738,
	407, 2738,
	408, 2738,
	409, 2738,
	415, 2738,
	416, 2738,
	417, 2738,
	418, 2738,
	419, 2738,
	420, 2738,
	421, 2738,
	422, 2738,
	423, 2738,
	424, 2738,
	425, 2738,
	426, 2738,
	428, 2738,
	429, 2738,
	430, 2738,
	431, 2738,
	432, 2738,
	433, 2738,
	434, 2738,
	435, 2738,
	436, 2738,
	437, 2738,
	438, 2738,
	439, 2738,
	440, 2738,
	441, 2738,
	442, 2738,
	443, 2738,
	444, 2738,
	445, 2738,
	446, 2738,
	447, 2738,
	448, 2738,
	449, 2738,
	450, 2738,
	451, 2738,
	453, 2738,
	454, 2738,
	455, 2738,
	456, 2738,
	457, 2738,
	458, 2738,
	460, 2738,
	461, 2738,
	462, 2738,
	463, 2738,
	464, 2738,
	465, 2738,
	466, 2738,
	467, 2738,
	468, 2738,
	469, 2738,
	470, 2738,
	471, 2738,
	472, 2738,
	473, 2738,
	474, 2738,
	476, 2738,
	478, 2738,
	479, 2738,
	480, 2738,
	481, 2738,
	482, 2738,
	483, 2738,
	484, 2738,
	485, 2738,
	486, 2738,
	487, 2738,
	488, 2738,
	489, 2738,
	490, 2738,
	491, 2738,
	492, 2738,
	493, 2738,
	495, 2738,
	496, 2738,
	497, 2738,
	498, 2738,
	499, 2738,
	501, 2738,
	502, 2738,
	503, 2738,
	504, 2738,
	505, 2738,
	506, 2738,
	507, 2738,
	508, 2738,
	509, 2738,
	511, 2738,
	512, 2738,
	513, 2738,
	514, 2738,
	515, 2738,
	517, 2738,
	519, 2738,
	520, 2738,
	521, 2738,
	522, 2738,
	523, 2738,
	524, 2738,
	526, 2738,
	527, 2738,
	528, 2738,
	529, 2738,
	531, 2738,
	532, 2738,
	535, 2738,
	536, 2738,
	537, 2738,
	538, 2738,
	539, 2738,
	540, 2738,
	541, 2738,
	543, 2738,
	546, 2738,
	547, 2738,
	548, 2738,
	549, 2738,
	550, 2738,
	551, 2738,
	553, 2738,
	554, 2738,
	555, 2738,
	556, 2738,
	558, 2738,
	563, 2738,
	564, 2738,
	565, 2738,
	566, 2738,
	567, 2738,
	568, 2738,
	569, 2738,
	571, 2738,
	579, 2738,
	580, 2738,
	581, 2738,
	582, 2738,
	583, 2738,
	584, 2738,
	586, 2738,
	587, 2738,
	588, 2738,
	589, 2738,
	590, 2738,
	591, 2738,
	592, 2738,
	593, 2738,
	594, 2738,
	596, 2738,
	599, 2738,
	600, 2738,
	602, 2738,
	603, 2738,
	-2, 0,
	-1, 1620,
	187, 2620,
	516, 2620,
	581, 2620,
	600, 2620,
	-2, 0,
	-1, 1669,
	393, 879,
	458, 879,
	499, 879,
	521, 879,
	-2, 0,
	-1, 1680,
	1, 1384,
	597, 1384,
	599, 1384,
	601, 1384,
	-2, 0,
	-1, 1697,
	1, 874,
	597, 874,
	599, 874,
	601, 874,
	-2, 0,
	-1, 1698,
	1, 918,
	597, 918,
	599, 918,
	601, 918,
	-2, 0,
	-1, 1699,
	1, 926,
	597, 926,
	599, 926,
	601, 926,
	-2, 0,
	-1, 1702,
	1, 883,
	597, 883,
	599, 883,
	601, 883,
	-2, 0,
	-1, 1704,
	1, 889,
	597, 889,
	599, 889,
	601, 889,
	-2, 0,
	-1, 1707,
	1, 885,
	597, 885,
	599, 885,
	601, 885,
	-2, 0,
	-1, 1712,
	1, 899,
	597, 899,
	599, 899,
	601, 899,
	-2, 0,
	-1, 1743,
	1, 2603,
	597, 2603,
	599, 2603,
	600, 2603,
	601, 2603,
	-2, 0,
	-1, 1747,
	1, 971,
	597, 971,
	599, 971,
	601, 971,
	-2, 0,
	-1, 1762,
	1, 1434,
	601, 1434,
	-2, 1439,
	-1, 1765,
	170, 1590,
	183, 1590,
	274, 1590,
	341, 1590,
	-2, 1528,
	-1, 1865,
	151, 1549,
	170, 1549,
	183, 1549,
	241, 1549,
	274, 1549,
	341, 1549,
	351, 1549,
	533, 1549,
	-2, 1996,
	-1, 1926,
	599, 2171,
	-2, 0,
	-1, 1961,
	151, 1549,
	170, 1549,
	183, 1549,
	241, 1549,
	274, 1549,
	341, 1549,
	351, 1549,
	533, 1549,
	-2, 1678,
	-1, 1998,
	516, 2617,
	600, 2617,
	603, 2617,
	-2, 0,
	-1, 2015,
	598, 1819,
	-2, 1807,
	-1, 2047,
	187, 2617,
	600, 2617,
	603, 2617,
	-2, 0,
	-1, 2089,
	1, 691,
	601, 691,
	-2, 1439,
	-1, 2229,
	222, 259,
	-2, 2319,
	-1, 2230,
	222, 260,
	-2, 312,
	-1, 2337,
	1, 876,
	597, 876,
	599, 876,
	601, 876,
	-2, 0,
	-1, 2338,
	1, 920,
	597, 920,
	599, 920,
	601, 920,
	-2, 0,
	-1, 2339,
	1, 928,
	597, 928,
	599, 928,
	601, 928,
	-2, 0,
	-1, 2340,
	1, 973,
	597, 973,
	599, 973,
	601, 973,
	-2, 0,
	-1, 2381,
	1, 901,
	597, 901,
	599, 901,
	601, 901,
	-2, 0,
	-1, 2399,
	1, 956,
	597, 956,
	599, 956,
	601, 956,
	-2, 0,
	-1, 2444,
	437, 1617,
	438, 1617,
	-2, 1852,
	-1, 2475,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1872,
	-1, 2476,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1873,
	-1, 2477,
	95, 0,
	255, 0,
	256, 0,
	583, 0,
	584, 0,
	-2, 1874,
	-1, 2478,
	95, 0,
	255, 0,
	256, 0,
	583, 0,
	584, 0,
	-2, 1875,
	-1, 2479,
	95, 0,
	255, 0,
	256, 0,
	583, 0,
	584, 0,
	-2, 1876,
	-1, 2480,
	95, 0,
	255, 0,
	256, 0,
	583, 0,
	584, 0,
	-2, 1877,
	-1, 2481,
	95, 0,
	255, 0,
	256, 0,
	583, 0,
	584, 0,
	-2, 1878,
	-1, 2482,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1879,
	-1, 2494,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1891,
	-1, 2495,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1892,
	-1, 2496,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1893,
	-1, 2500,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1900,
	-1, 2506,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1904,
	-1, 2508,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1912,
	-1, 2509,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1913,
	-1, 2510,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1914,
	-1, 2511,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1915,
	-1, 2685,
	5, 2323,
	187, 2182,
	598, 2320,
	-2, 2311,
	-1, 2686,
	187, 2183,
	-2, 2689,
	-1, 2687,
	187, 2184,
	-2, 2509,
	-1, 2688,
	187, 2185,
	-2, 2393,
	-1, 2689,
	187, 2186,
	-2, 2449,
	-1, 2690,
	187, 2187,
	-2, 2494,
	-1, 2691,
	187, 2188,
	-2, 2615,
	-1, 2692,
	187, 2189,
	-2, 1979,
	-1, 2763,
	1, 1679,
	2, 1679,
	106, 1679,
	151, 1679,
	170, 1679,
	183, 1679,
	188, 1679,
	206, 1679,
	209, 1679,
	237, 1679,
	241, 1679,
	252, 1679,
	270, 1679,
	274, 1679,
	313, 1679,
	341, 1679,
	345, 1679,
	351, 1679,
	427, 1679,
	431, 1679,
	533, 1679,
	544, 1679,
	560, 1679,
	561, 1679,
	562, 1679,
	572, 1679,
	597, 1679,
	599, 1679,
	601, 1679,
	603, 1679,
	-2, 1678,
	-1, 2776,
	598, 2292,
	-2, 2306,
	-1, 2778,
	1, 329,
	560, 329,
	-2, 1576,
	-1, 2807,
	598, 1818,
	-2, 1808,
	-1, 2992,
	1, 1287,
	422, 1251,
	460, 1251,
	575, 1251,
	597, 1287,
	599, 1287,
	601, 1287,
	-2, 1576,
	-1, 3178,
	346, 1620,
	-2, 2728,
	-1, 3179,
	346, 1621,
	-2, 2600,
	-1, 3183,
	437, 2248,
	438, 2248,
	-2, 1977,
	-1, 3184,
	437, 2252,
	438, 2252,
	-2, 1978,
	-1, 3185,
	437, 2249,
	438, 2249,
	-2, 1977,
	-1, 3186,
	437, 2253,
	438, 2253,
	-2, 1978,
	-1, 3199,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1902,
	-1, 3200,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1906,
	-1, 3206,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1908,
	-1, 3429,
	1, 686,
	597, 686,
	599, 686,
	601, 686,
	-2, 1439,
	-1, 3594,
	43, 2283,
	-2, 1035,
	-1, 3599,
	1, 1287,
	597, 1287,
	599, 1287,
	601, 1287,
	-2, 1576,
	-1, 3710,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1910,
	-1, 3717,
	246, 0,
	248, 0,
	332, 0,
	-2, 1929,
	-1, 3785,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1958,
	-1, 3786,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1959,
	-1, 3787,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1960,
	-1, 3791,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1964,
	-1, 3792,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1965,
	-1, 3793,
	14, 0,
	15, 0,
	16, 0,
	579, 0,
	580, 0,
	581, 0,
	-2, 1966,
	-1, 3840,
	598, 2293,
	-2, 2307,
	-1, 4014,
	600, 2846,
	-2, 1502,
	-1, 4075,
	246, 0,
	248, 0,
	332, 0,
	-2, 1930,
	-1, 4078,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1933,
	-1, 4079,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1935,
	-1, 4177,
	600, 2308,
	-2, 1322,
	-1, 4331,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1934,
	-1, 4332,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	219, 0,
	222, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 1936,
	-1, 4343,
	246, 0,
	-2, 1969,
	-1, 4530,
	246, 0,
	-2, 1970,
	-1, 4730,
	50, 0,
	219, 0,
	273, 0,
	466, 0,
	569, 0,
	582, 0,
	-2, 2692,
}

const sqlPrivate = 57344

const sqlLast = 132667

var sqlAct = [...]int{
	272, 4847, 3583, 3067, 4926, 3337, 4723, 4834, 2869, 4392,
	4722, 3080, 4788, 4571, 4729, 4452, 4563, 4711, 3582, 4599,
	4740, 4863, 4620, 2139, 2226, 2058, 4595, 4679, 4656, 4698,
	1243, 4676, 4741, 2938, 4742, 4801, 4173, 2913, 4374, 4459,
	4483, 1254, 4437, 3750, 4286, 4534, 4281, 4728, 4247, 2302,
	4397, 4058, 4352, 3702, 2454, 4320, 1324, 3998, 3450, 1074,
	4222, 3616, 3037, 4006, 4270, 4468, 4268, 4261, 3192, 1328,
	702, 3934, 4174, 1317, 4154, 813, 4497, 3510, 2071, 1774,
	2313, 2523, 3610, 3578, 4291, 3979, 3961, 2462, 3963, 773,
	3453, 1391, 1636, 2147, 4348, 2718, 3567, 3104, 2455, 3657,
	3091, 813, 3659, 3056, 3023, 2002, 1483, 1967, 3560, 2951,
	3843, 3559, 3360, 3089, 2311, 4114, 3320, 3381, 3352, 886,
	4, 3082, 890, 4057, 3099, 713, 3341, 3088, 3051, 3053,
	2275, 1936, 3343, 3068, 1319, 1677, 2999, 2215, 2174, 2158,
	3472, 2213, 2871, 3319, 2756, 4835, 3811, 1912, 2755, 2459,
	4535, 1873, 1843, 2536, 2601, 1065, 3176, 1490, 3447, 808,
	2758, 881, 1576, 1985, 3098, 3027, 2190, 2214, 1322, 2127,
	769, 2968, 2197, 266, 3038, 1234, 2003, 1762, 2209, 2131,
	2736, 1124, 2592, 265, 1372, 2603, 1296, 1937, 1956, 2069,
	2117, 2520, 1129, 2443, 2426, 746, 2424, 2790, 1120, 3388,
	2912, 1613, 3580, 1307, 3033, 1634, 2715, 2262, 1073, 179,
	689, 1579, 3061, 1131, 711, 814, 815, 2894, 810, 4621,
	955, 2857, 1359, 3955, 3092, 2789, 1907, 1237, 1946, 1953,
	2726, 2595, 2745, 1216, 2681, 2647, 2573, 1775, 1776, 1251,
	1857, 2425, 2427, 1697, 765, 754, 1712, 188, 819, 1611,
	1233, 2223, 2146, 2288, 189, 1604, 2261, 1515, 822, 4789,
	4848, 2448, 108, 1174, 1105, 3034, 706, 44, 1239, 803,
	1127, 729, 1214, 1781, 819, 43, 703, 41, 714, 32,
	862, 1122, 3229, 863, 822, 30, 28, 1526, 1761, 976,
	3825, 3223, 3826, 4939, 3339, 4929, 4913, 2735, 2060, 3635,
	2735, 4912, 179, 2060, 2060, 2735, 2060, 2060, 4902, 2060,
	4769, 4367, 2235, 4883, 1540, 3290, 3291, 4396, 1703, 905,
	882, 4881, 4820, 4777, 4766, 4396, 2235, 4778, 2735, 4764,
	4761, 4758, 4726, 2735, 4762, 4759, 2235, 3625, 4725, 4724,
	3635, 4719, 2235, 2081, 1126, 2081, 4364, 73, 4718, 885,
	884, 2235, 2081, 1789, 1790, 1643, 4709, 4707, 4704, 4674,
	4396, 4396, 4471, 4396, 74, 4645, 4638, 3397, 4637, 2798,
	2735, 1231, 2735, 4632, 4631, 4625, 1820, 4396, 4396, 2235,
	78, 4591, 4135, 1792, 4532, 4238, 1103, 1069, 2798, 4514,
	4511, 1217, 1217, 4043, 2235, 4508, 1310, 4461, 4415, 4396,
	4414, 4462, 2235, 4403, 2235, 3626, 4402, 2235, 1059, 1845,
	4396, 1519, 4395, 4359, 2235, 4333, 4396, 2235, 1791, 2798,
	87, 4310, 4299, 2235, 4217, 2081, 3635, 1050, 2735, 1368,
	1069, 3414, 3191, 2078, 1049, 1789, 1790, 1249, 1822, 1823,
	1824, 1833, 1834, 1835, 4200, 4077, 4022, 1368, 2735, 2798,
	3652, 39, 4016, 1070, 2078, 3977, 3652, 1826, 1820, 3978,
	2312, 888, 3835, 3833, 3818, 1792, 3836, 3834, 2735, 3412,
	3238, 2818, 1064, 49, 1839, 107, 3239, 2735, 3815, 3734,
	93, 104, 3730, 2235, 3651, 3296, 2735, 1267, 3652, 4646,
	2728, 1845, 2549, 2550, 2551, 2568, 2569, 2570, 3642, 1528,
	1791, 3336, 3643, 3331, 1218, 2735, 2794, 2735, 4536, 1246,
	1811, 3330, 2571, 3281, 3279, 2735, 3271, 3282, 3280, 1808,
	3272, 3269, 3240, 1797, 3108, 2735, 2735, 1539, 2081, 3078,
	1629, 3077, 1274, 2298, 2841, 2298, 1528, 2797, 2735, 94,
	2787, 2798, 2780, 4527, 2735, 1845, 2235, 2235, 2734, 2297,
	4515, 4471, 2735, 2298, 1789, 1790, 2081, 1220, 2235, 1221,
	3815, 2727, 4279, 4238, 2561, 93, 2078, 1268, 4201, 4043,
	3643, 1819, 1821, 2557, 1268, 2941, 2151, 1820, 2856, 2096,
	236, 1330, 2059, 1245, 1792, 2075, 3029, 2234, 2961, 2854,
	1932, 1514, 3306, 3290, 3291, 1814, 1815, 1816, 1817, 3917,
	3705, 3679, 1954, 2202, 3627, 1797, 1679, 2772, 2771, 2770,
	1845, 2769, 2768, 1222, 1219, 1058, 1057, 1056, 1055, 1791,
	1054, 1053, 1052, 3628, 4130, 1247, 1048, 1047, 238, 1046,
	1812, 1045, 1044, 1043, 1042, 1041, 1040, 1519, 1039, 2735,
	236, 1038, 1527, 1830, 3150, 2598, 1840, 1534, 1037, 2562,
	2563, 2564, 2565, 1819, 1821, 1036, 1035, 1034, 2061, 2556,
	1033, 1032, 1031, 2061, 2061, 1842, 2061, 2061, 3305, 2061,
	1836, 1013, 1837, 953, 952, 951, 950, 237, 949, 1806,
	1807, 73, 3228, 948, 947, 97, 946, 945, 238, 944,
	230, 943, 942, 941, 940, 939, 938, 1828, 74, 231,
	937, 936, 935, 1842, 934, 933, 932, 931, 2373, 930,
	1647, 1528, 1812, 929, 78, 928, 927, 926, 925, 924,
	923, 922, 921, 920, 1797, 4089, 190, 2078, 919, 3046,
	918, 908, 907, 2566, 2567, 2599, 903, 237, 902, 896,
	187, 100, 895, 3307, 103, 880, 879, 1333, 1129, 836,
	835, 834, 833, 825, 87, 824, 1838, 823, 789, 780,
	779, 778, 760, 3296, 236, 260, 2559, 259, 236, 258,
	236, 257, 1819, 1821, 1827, 1129, 1129, 1129, 889, 256,
	255, 1813, 1520, 150, 254, 1842, 190, 253, 252, 2630,
	251, 250, 249, 1394, 248, 888, 247, 1394, 246, 245,
	244, 243, 242, 241, 1333, 236, 240, 49, 239, 107,
	3857, 3829, 238, 3653, 93, 104, 238, 2600, 238, 2597,
	4293, 3625, 1633, 1528, 3384, 3064, 3251, 3234, 1129, 3225,
	1129, 1812, 1129, 1341, 1376, 1377, 1378, 2235, 1333, 1844,
	1818, 3334, 2828, 2059, 154, 2078, 2075, 1268, 2419, 1363,
	3132, 3009, 2802, 238, 2777, 236, 2762, 2628, 1957, 191,
	1533, 237, 2614, 1813, 1333, 237, 2612, 237, 150, 2125,
	3306, 2080, 1498, 94, 230, 1705, 1493, 1980, 230, 1072,
	230, 3335, 1875, 231, 1333, 2078, 1788, 231, 1884, 231,
	1831, 1333, 3300, 3292, 3293, 3294, 3295, 3297, 3298, 1129,
	1522, 1129, 237, 238, 1842, 1333, 2727, 2305, 1380, 1253,
	190, 1129, 4751, 1129, 190, 230, 883, 2560, 4750, 1915,
	4747, 1844, 4727, 4706, 231, 1518, 1914, 1301, 1304, 1800,
	1801, 1793, 1794, 1795, 1796, 1798, 1799, 4606, 1355, 1585,
	1588, 4518, 1314, 1842, 2278, 4524, 1357, 4516, 1268, 1915,
	4387, 190, 237, 1918, 4539, 4347, 1914, 1789, 1790, 4300,
	4278, 1333, 4141, 4112, 4111, 230, 4105, 1387, 4104, 1480,
	1485, 1503, 4103, 2602, 231, 1844, 3048, 4096, 4095, 4093,
	236, 1129, 1813, 1913, 1129, 3290, 3291, 1792, 4088, 4085,
	819, 4084, 2304, 1829, 3290, 3291, 3982, 3976, 3861, 3860,
	822, 190, 1882, 1803, 1804, 1810, 1832, 1809, 1805, 1349,
	1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 97,
	3859, 3307, 1791, 4099, 3839, 4295, 3806, 4098, 238, 3805,
	1574, 3804, 1517, 1516, 3290, 3291, 3726, 1648, 3721, 3379,
	1844, 1876, 3327, 1874, 1230, 3318, 1616, 1618, 3289, 1789,
	1790, 3286, 3285, 3283, 3278, 3277, 3276, 2546, 2547, 2548,
	2572, 2558, 2552, 3273, 2554, 2555, 2553, 2540, 2541, 2542,
	2543, 2544, 2545, 3270, 187, 100, 3250, 237, 103, 1792,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 3915, 2596,
	230, 1877, 236, 179, 179, 3233, 3226, 236, 1363, 231,
	3224, 1363, 3079, 2763, 236, 2585, 1788, 2242, 2240, 1787,
	4933, 4873, 889, 1129, 1791, 1875, 4872, 150, 3983, 1129,
	2811, 1721, 3290, 3291, 4836, 4787, 190, 1797, 4785, 1607,
	1255, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 3752, 4666,
	238, 4870, 4598, 4582, 4579, 238, 1070, 4578, 4577, 3332,
	236, 4557, 238, 3290, 3291, 3296, 4556, 4554, 236, 4538,
	236, 4537, 4512, 4496, 3296, 4495, 2526, 4481, 3301, 3299,
	3300, 3292, 3293, 3294, 3295, 3297, 3298, 1653, 154, 3047,
	3404, 4478, 4477, 4472, 4411, 4382, 4345, 1628, 4328, 237,
	1760, 4327, 1488, 191, 237, 4307, 4306, 4264, 238, 1642,
	1340, 237, 230, 4239, 3296, 1766, 238, 230, 238, 4129,
	4110, 231, 4044, 4036, 230, 4033, 231, 3903, 1864, 1797,
	3902, 3885, 3884, 231, 1129, 1129, 1129, 4540, 3376, 3882,
	1129, 3821, 3809, 3716, 1862, 3654, 3636, 1251, 190, 1251,
	3602, 3527, 3485, 190, 3452, 3406, 3255, 237, 3254, 3249,
	190, 3983, 1670, 3215, 1394, 237, 3022, 237, 1921, 1934,
	230, 1920, 3306, 1919, 1129, 1591, 1706, 813, 230, 231,
	230, 3306, 236, 2020, 813, 1916, 2532, 231, 4294, 231,
	1525, 1767, 1532, 236, 1538, 1789, 1790, 1908, 1906, 2809,
	2808, 2774, 3296, 2767, 2733, 2610, 3063, 1861, 1979, 1935,
	1930, 1929, 1928, 1927, 190, 1926, 190, 1771, 1770, 1763,
	1925, 3306, 1924, 1923, 1922, 1792, 1903, 1902, 1901, 1900,
	238, 1050, 1899, 3296, 1898, 1943, 1917, 2065, 1049, 236,
	2067, 238, 1765, 1897, 1896, 1842, 2072, 1895, 1894, 1990,
	2074, 1784, 1785, 1893, 1842, 2077, 1892, 1891, 1890, 1129,
	1791, 1627, 1889, 1632, 1333, 1888, 1940, 1941, 1877, 1993,
	1863, 1860, 1855, 1641, 1348, 1646, 1605, 1272, 1263, 237,
	4267, 1964, 4137, 1129, 4081, 1070, 1217, 238, 3856, 3832,
	237, 1394, 230, 3824, 1842, 3237, 2629, 2800, 2765, 4365,
	4139, 231, 1610, 230, 2141, 3855, 1909, 1910, 1876, 1842,
	3290, 3291, 231, 2306, 3402, 1858, 2108, 2107, 2116, 2114,
	2116, 2118, 3631, 3307, 1975, 2116, 4203, 1375, 190, 2116,
	4862, 2939, 3307, 4580, 4473, 4464, 237, 4463, 1965, 190,
	1704, 4298, 2123, 1363, 4241, 1249, 2086, 1249, 4240, 230,
	819, 1988, 4202, 4132, 2087, 1373, 4048, 819, 231, 179,
	822, 4047, 4046, 4045, 2627, 3827, 3656, 822, 1989, 2613,
	3655, 3638, 3307, 2611, 1955, 1614, 1962, 2917, 3637, 4743,
	3488, 4816, 1842, 4814, 3986, 190, 4469, 1368, 1957, 3703,
	1758, 2185, 1374, 3519, 1368, 1994, 2014, 2063, 1933, 1915,
	1669, 3929, 2043, 2151, 3275, 3274, 1914, 3197, 2899, 1371,
	2199, 1070, 2102, 3900, 2279, 1959, 3454, 1246, 1974, 1246,
	1029, 4519, 2216, 1333, 1333, 1886, 1973, 4517, 1972, 2966,
	1970, 1722, 3585, 1394, 3584, 1678, 1969, 1968, 3647, 2111,
	2089, 1368, 2329, 4799, 2303, 2000, 2017, 1795, 1796, 1798,
	1799, 4460, 4773, 4754, 4739, 4349, 4386, 3568, 2085, 3105,
	1679, 1898, 1898, 2217, 2008, 1030, 3990, 3973, 3931, 3339,
	3301, 3299, 3300, 3292, 3293, 3294, 3295, 3297, 3298, 3926,
	3299, 3300, 3292, 3293, 3294, 3295, 3297, 3298, 3908, 2598,
	3676, 1245, 2181, 1245, 2189, 3754, 3427, 2194, 2310, 2593,
	4748, 2807, 3243, 1931, 2947, 1883, 2896, 1911, 3576, 3877,
	2272, 1584, 1510, 1344, 1300, 2227, 2232, 4763, 4572, 4760,
	4406, 3621, 3292, 3293, 3294, 3295, 3297, 3298, 1333, 2092,
	1333, 4378, 1333, 1247, 2958, 1247, 2955, 1793, 1794, 1795,
	1796, 1798, 1799, 2119, 2184, 2953, 2109, 4282, 1333, 1333,
	1229, 4673, 1609, 4550, 2113, 3551, 3457, 3895, 3086, 1333,
	3060, 4818, 4817, 1984, 2946, 875, 2895, 4749, 2157, 4409,
	1657, 1333, 4188, 1333, 1333, 1333, 4405, 4852, 4384, 2599,
	4185, 3697, 2873, 3944, 4433, 3431, 2219, 2220, 4190, 1559,
	1551, 2842, 2112, 1068, 1512, 2268, 2221, 813, 819, 4928,
	2387, 4586, 1971, 4426, 2315, 1027, 1009, 4417, 822, 4231,
	3292, 3293, 3294, 3295, 3297, 3298, 1720, 1025, 2179, 1129,
	1610, 2328, 2434, 2860, 4230, 3942, 3941, 1023, 3131, 1021,
	3933, 2090, 2103, 2273, 1018, 3923, 3922, 2385, 2858, 2285,
	1517, 1516, 3920, 3294, 3295, 3297, 3298, 3919, 3907, 3872,
	3871, 3943, 3557, 2860, 1129, 3556, 2193, 2308, 2178, 2175,
	3396, 2600, 3880, 2597, 3248, 3057, 2333, 3247, 2858, 3246,
	876, 3245, 3201, 2964, 3001, 2963, 1560, 2293, 2960, 3403,
	2949, 2432, 2233, 1067, 1375, 2933, 2932, 2927, 1129, 2926,
	1129, 2434, 2925, 2904, 2903, 2418, 2876, 1129, 2864, 2788,
	2020, 2020, 1394, 2282, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	2254, 1129, 4407, 1129, 1129, 1129, 1129, 2295, 2253, 1374,
	2432, 1655, 3433, 4379, 2316, 3517, 1719, 2148, 1375, 1607,
	1369, 2290, 2217, 2290, 2287, 2436, 2291, 1701, 2423, 1129,
	819, 3454, 2507, 1129, 1129, 1349, 2643, 2299, 1799, 2300,
	822, 1129, 2303, 4184, 4853, 1129, 3487, 1129, 1129, 1764,
	1070, 2144, 1070, 1069, 2897, 1394, 2897, 2642, 4186, 1701,
	2464, 1129, 1129, 1129, 1129, 2399, 752, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 2358, 2320, 2602, 4147, 2815,
	2149, 2150, 1015, 1374, 2337, 1597, 1595, 1596, 1594, 2433,
	2792, 2430, 2338, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 2348, 3677, 787, 2093, 1129, 1650, 2849, 2416,
	2145, 4169, 752, 1555, 2252, 1286, 2801, 1718, 1251, 1358,
	2398, 1369, 4326, 2325, 1698, 1394, 3111, 1513, 2574, 2575,
	1609, 2381, 2921, 1700, 1251, 1756, 2460, 2461, 1365, 1568,
	2447, 4146, 2574, 2590, 2522, 4162, 2901, 2187, 2522, 1573,
	1129, 1394, 2408, 3298, 1671, 2339, 4565, 2875, 2433, 2914,
	2915, 2120, 2121, 2431, 1975, 1700, 2914, 2915, 1731, 2638,
	2914, 2915, 4182, 2014, 2014, 4204, 3518, 2593, 2422, 2421,
	2420, 2428, 2435, 3174, 2538, 4857, 3145, 1699, 2684, 2684,
	2698, 2887, 2574, 2596, 2379, 2719, 2721, 2391, 2589, 1050,
	4163, 2725, 1050, 1050, 4885, 2779, 2451, 2886, 1983, 2452,
	2453, 2411, 2345, 2292, 2530, 785, 1757, 1945, 2321, 1370,
	1999, 2528, 4745, 2017, 2017, 1651, 4817, 2048, 3686, 2050,
	878, 877, 2431, 3189, 2750, 1066, 3685, 3147, 3156, 1365,
	4866, 2008, 2008, 2602, 1735, 2775, 1769, 2342, 1369, 2132,
	2742, 1679, 1333, 1333, 2133, 1679, 1347, 2336, 3952, 2823,
	4229, 3921, 1667, 1217, 2640, 2827, 1964, 2534, 2957, 2641,
	4187, 3918, 2644, 1580, 2645, 2646, 3743, 1366, 4567, 2838,
	3864, 3851, 4858, 2587, 2764, 2845, 1367, 2863, 3563, 2863,
	3555, 2795, 751, 1070, 3430, 2083, 1394, 2741, 3515, 1949,
	2956, 2791, 2954, 1070, 2874, 1714, 2847, 1070, 2959, 2837,
	3892, 2952, 2749, 2924, 2754, 3953, 1249, 2760, 2761, 2831,
	1370, 3904, 2410, 2346, 2902, 1578, 2504, 2680, 2693, 2374,
	2020, 264, 1249, 2710, 4839, 4831, 2723, 4642, 751, 2239,
	2238, 2731, 2732, 2848, 2417, 4838, 1363, 2743, 1952, 3159,
	2814, 2859, 1917, 2747, 2748, 916, 3181, 3182, 3951, 2159,
	2786, 1962, 2803, 1947, 2846, 4888, 1365, 3188, 2134, 1614,
	4806, 1614, 1656, 1394, 2132, 4180, 1717, 2386, 1366, 2133,
	179, 1950, 2163, 1019, 2834, 2138, 2839, 1367, 1246, 1333,
	4183, 4325, 4860, 3740, 4063, 1019, 1070, 4746, 4442, 2176,
	2231, 2151, 753, 4158, 1246, 1019, 4062, 1020, 4159, 3504,
	1129, 1129, 1019, 1129, 2384, 2900, 2865, 2833, 4164, 2822,
	2810, 2407, 3496, 2825, 1948, 2826, 1909, 1910, 873, 3890,
	872, 786, 2602, 3680, 1789, 1790, 813, 701, 1333, 2160,
	2813, 2840, 3564, 2817, 2832, 2862, 2922, 1370, 753, 3618,
	2950, 3619, 3153, 3905, 2996, 2861, 3354, 1820, 2135, 2140,
	4161, 1368, 1245, 696, 1792, 2151, 3505, 2906, 3212, 1333,
	1557, 3071, 3561, 2937, 2182, 3741, 4916, 4165, 1245, 3497,
	788, 2060, 3158, 1333, 784, 1333, 3100, 3044, 2843, 2890,
	1845, 1732, 4864, 2134, 1554, 2502, 1285, 3210, 2505, 1791,
	1333, 4744, 2905, 2203, 1247, 1366, 2907, 2200, 2210, 3503,
	2138, 2997, 3004, 3155, 1367, 2923, 4652, 3006, 2177, 2753,
	1247, 2931, 3495, 2965, 4640, 2878, 2881, 2868, 2993, 2994,
	2518, 3441, 4370, 3618, 4181, 2916, 2918, 2919, 2920, 3112,
	3113, 2136, 1951, 2014, 4713, 4566, 4714, 2164, 1129, 2501,
	3119, 3120, 3121, 2940, 2995, 2212, 2929, 2928, 4573, 2516,
	3530, 4593, 1368, 1580, 3103, 3432, 3102, 4641, 1729, 2132,
	2930, 2171, 750, 3040, 2133, 3106, 2935, 1654, 819, 1003,
	1016, 2945, 1680, 2135, 2140, 3479, 1511, 4859, 822, 2142,
	3002, 2409, 2344, 2017, 1270, 3129, 2188, 3085, 3203, 4256,
	4865, 3109, 2521, 1063, 1797, 1652, 3114, 4160, 3115, 819,
	1129, 2008, 2211, 2165, 2166, 4805, 1129, 1129, 3157, 822,
	1517, 3007, 2204, 1904, 3469, 3073, 2186, 2380, 2172, 3075,
	1733, 2602, 2200, 3400, 2142, 3020, 4867, 2161, 4059, 3207,
	2830, 3030, 3477, 2154, 4443, 4338, 4170, 4171, 1730, 3126,
	4780, 4506, 1819, 1821, 3031, 3353, 4441, 3161, 3055, 3163,
	4781, 3135, 4439, 2529, 3208, 3137, 2136, 3139, 3213, 3141,
	3076, 2170, 1129, 1129, 3066, 2200, 179, 1259, 1129, 3087,
	2162, 3468, 3473, 719, 4322, 3478, 2778, 4828, 2134, 1368,
	3107, 1129, 1129, 3966, 3151, 1004, 3074, 1129, 1129, 3562,
	2155, 2512, 3964, 1129, 4498, 2138, 1768, 3669, 2341, 4438,
	2130, 1812, 1949, 4696, 2142, 3002, 1346, 4499, 2335, 1256,
	3667, 2513, 1666, 1668, 1734, 3136, 2514, 4684, 2196, 3660,
	2519, 4214, 2746, 1854, 3475, 2173, 917, 4440, 3442, 3253,
	4889, 2759, 2503, 2153, 2584, 2186, 3891, 1945, 1129, 1129,
	1129, 4500, 1069, 3756, 1129, 2195, 4876, 3204, 4266, 3966,
	4053, 1952, 2188, 1261, 1129, 3169, 4271, 2128, 3964, 4874,
	3180, 2936, 2137, 4234, 3852, 909, 2744, 1275, 2135, 2140,
	3968, 1129, 4064, 897, 1842, 3699, 4272, 3171, 3170, 2191,
	3172, 2860, 2183, 1685, 1950, 4600, 4689, 2185, 3474, 4619,
	2447, 2167, 4480, 3175, 4233, 4232, 2879, 3190, 697, 4004,
	2129, 3606, 2260, 1942, 4502, 3967, 4804, 4257, 2149, 2150,
	1273, 1266, 4321, 688, 3981, 1779, 1778, 3662, 1078, 1949,
	1260, 4060, 2450, 2152, 2104, 2180, 4917, 4501, 1778, 2207,
	3389, 2061, 3661, 4108, 3231, 3232, 3968, 4404, 2192, 3235,
	4489, 1773, 4549, 4894, 3209, 4503, 4005, 3937, 2101, 3924,
	3010, 2136, 1813, 3013, 3211, 3015, 3202, 2187, 3876, 3448,
	3607, 3795, 3598, 1129, 1129, 1129, 1129, 2168, 1952, 3444,
	3045, 3967, 3039, 1129, 1129, 1129, 4601, 1005, 1129, 698,
	3024, 2286, 2280, 1947, 1003, 2274, 2205, 2137, 1129, 1251,
	1394, 3227, 2266, 4779, 1129, 3962, 1129, 3346, 3347, 2142,
	3062, 1950, 3128, 3062, 2246, 1251, 2515, 2245, 1063, 1548,
	1844, 3739, 3868, 826, 3669, 3845, 2517, 3138, 2440, 3140,
	1777, 3142, 3658, 1394, 2099, 759, 1277, 3667, 699, 2206,
	700, 2908, 1777, 3810, 3242, 1251, 3660, 4657, 1394, 3700,
	2184, 2863, 4622, 2392, 1948, 1951, 2097, 4007, 4287, 1070,
	4323, 3021, 3436, 3290, 3291, 1778, 3308, 3309, 3310, 2020,
	3369, 1288, 4458, 1394, 4456, 3382, 2100, 4381, 3164, 3846,
	3460, 3166, 3456, 3329, 3455, 3965, 3195, 3173, 2326, 1333,
	4065, 3823, 3351, 3350, 3143, 1708, 1707, 1779, 4269, 3348,
	2700, 1702, 2785, 2784, 2783, 2782, 3847, 1006, 3844, 1779,
	1004, 1129, 1793, 1794, 1795, 1796, 1798, 1799, 3417, 2093,
	2781, 3419, 3420, 910, 911, 1129, 3423, 1589, 3424, 3358,
	3425, 898, 899, 2141, 1007, 1333, 3437, 3438, 3305, 1067,
	2020, 1590, 1603, 4109, 3662, 3378, 1257, 3356, 3972, 1601,
	1614, 3965, 3668, 3663, 3664, 3665, 3666, 3458, 1129, 3661,
	3462, 4893, 3796, 1854, 3028, 3362, 2441, 2141, 3357, 1777,
	3428, 3797, 1951, 3367, 1333, 4066, 1318, 3421, 915, 3370,
	3371, 3375, 4560, 4602, 3434, 3340, 3387, 1008, 3368, 3324,
	3325, 3326, 2137, 1363, 3355, 4393, 1333, 1249, 1333, 1258,
	2880, 3383, 4453, 2737, 4504, 4825, 4248, 2884, 3459, 3883,
	4505, 3464, 3648, 1249, 3466, 2909, 2910, 2284, 2199, 3869,
	1394, 3571, 3373, 4597, 3374, 4368, 1486, 2199, 3000, 1497,
	1318, 1333, 3533, 3296, 3535, 1333, 1686, 3539, 2740, 3413,
	4304, 3545, 3398, 1249, 3520, 3401, 3110, 1327, 3005, 3873,
	3490, 3445, 3391, 3392, 3393, 3394, 3003, 2314, 2216, 1660,
	1333, 3363, 4376, 4389, 3407, 3408, 4670, 3409, 4388, 1246,
	3390, 827, 828, 3531, 1333, 4654, 1333, 3513, 4115, 2739,
	1394, 3418, 2014, 3812, 2738, 1246, 4663, 813, 1333, 3422,
	3429, 4561, 2609, 3415, 4829, 3440, 1752, 1318, 1318, 1333,
	4394, 3581, 1005, 3508, 1505, 3494, 3435, 3848, 4377, 4691,
	1754, 3361, 4303, 3026, 1333, 1246, 3449, 4830, 912, 913,
	4827, 1751, 4765, 758, 4589, 4581, 900, 901, 1749, 3528,
	3476, 1251, 2017, 1726, 2403, 3614, 3492, 4344, 1543, 3443,
	3306, 1724, 3100, 1245, 3366, 1696, 1694, 3590, 4107, 3971,
	2008, 3100, 3597, 2014, 3486, 1692, 1333, 1333, 3506, 1245,
	1690, 3612, 1688, 3499, 1581, 1682, 3566, 3502, 3569, 3668,
	3663, 3664, 3665, 3666, 4664, 3321, 4445, 3715, 3493, 4562,
	1989, 1333, 3674, 1602, 3521, 1247, 3673, 3529, 3500, 1245,
	1600, 1622, 3501, 3540, 3605, 3411, 3284, 3546, 3623, 3634,
	3507, 1247, 3509, 2017, 3553, 1635, 3133, 2931, 3134, 3548,
	3542, 3874, 1392, 1842, 830, 829, 1491, 3214, 1676, 914,
	1674, 2008, 1006, 1599, 3025, 2948, 1394, 2898, 2812, 1394,
	3554, 1247, 2412, 1982, 1978, 3541, 1755, 1638, 3678, 3547,
	3322, 3695, 2383, 2350, 3558, 3694, 3573, 1773, 2906, 1007,
	3149, 3364, 3365, 2225, 3608, 3148, 3117, 3615, 2429, 1713,
	819, 1661, 1129, 2353, 2265, 3595, 2244, 3593, 1129, 1129,
	822, 3594, 1129, 1129, 1129, 2049, 1129, 3671, 831, 832,
	1887, 1649, 1572, 3532, 4738, 1129, 2020, 2608, 4215, 3928,
	3927, 3307, 3670, 3646, 1129, 1753, 3622, 3650, 3620, 1129,
	4653, 4216, 1008, 4199, 4285, 1394, 1750, 3629, 3693, 3632,
	3633, 4221, 4280, 1748, 1129, 2405, 4212, 4802, 1725, 2404,
	3692, 3644, 1394, 4151, 1017, 4003, 1723, 3994, 3940, 1249,
	1695, 1693, 2020, 2020, 1129, 1129, 3925, 1129, 1129, 1129,
	1691, 3898, 3896, 3875, 3682, 1689, 3683, 1687, 3684, 3601,
	1681, 3596, 3586, 3058, 3050, 1129, 179, 179, 3043, 1129,
	3701, 2020, 2020, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 3689, 1129, 3032, 3672, 3018, 3768, 3017,
	3769, 3718, 1129, 1129, 2020, 3736, 1070, 2998, 2829, 1129,
	3516, 1246, 3698, 1675, 2824, 1673, 2243, 2241, 1598, 2218,
	1129, 2201, 2169, 3480, 3481, 2156, 3482, 3483, 3484, 2143,
	2082, 1251, 1251, 2382, 2349, 1129, 1061, 2079, 1003, 2076,
	2073, 3302, 3303, 3304, 2224, 2068, 2066, 3236, 3301, 3299,
	3300, 3292, 3293, 3294, 3295, 3297, 3298, 3723, 3725, 2062,
	2053, 3611, 1063, 1226, 3543, 1394, 3728, 3729, 3552, 2210,
	4793, 3735, 3841, 1992, 3522, 3523, 4271, 3524, 3525, 3526,
	2093, 3742, 3744, 3745, 3751, 1245, 1782, 4818, 2105, 1227,
	3828, 3758, 1022, 1024, 1026, 3193, 4272, 4559, 3167, 3165,
	2415, 3766, 1497, 2991, 3807, 3767, 4701, 4309, 1062, 2014,
	4302, 3771, 4301, 4228, 1129, 3746, 3799, 4143, 2460, 3759,
	3773, 3101, 2124, 1553, 3866, 2860, 2093, 1247, 3867, 4491,
	2860, 2885, 3808, 1129, 4484, 3613, 3814, 4015, 3765, 2151,
	2858, 1746, 1747, 2340, 3800, 2882, 2413, 2460, 3774, 1497,
	1309, 2283, 2377, 1308, 1004, 2014, 2014, 4700, 2372, 2017,
	2347, 4191, 4223, 3819, 3820, 2093, 1129, 1129, 3897, 1672,
	3899, 4526, 2888, 3816, 3817, 1789, 1790, 2008, 4391, 4116,
	3803, 1789, 1790, 3544, 2014, 2014, 4094, 2093, 3471, 2093,
	2889, 3194, 2414, 2911, 1786, 1342, 1276, 1783, 3830, 4774,
	1228, 4821, 4812, 3831, 2889, 2017, 2017, 261, 1129, 3936,
	3991, 1792, 3016, 4662, 2267, 1353, 2955, 2014, 2953, 2962,
	2942, 179, 2093, 2008, 2008, 2891, 2093, 4647, 4613, 1249,
	1249, 3935, 1333, 3690, 2017, 2017, 1309, 1333, 1309, 4607,
	1791, 3939, 3696, 2944, 4558, 2893, 1791, 4475, 4451, 4369,
	4001, 3395, 2008, 2008, 685, 4390, 2943, 3913, 2892, 3993,
	3980, 3909, 2020, 3914, 3916, 3838, 3600, 2017, 3065, 2724,
	2088, 2001, 3858, 3879, 4861, 3410, 2934, 1509, 3930, 1508,
	3399, 4693, 4892, 1981, 4609, 2008, 4694, 3938, 3290, 3291,
	1789, 1790, 3901, 1333, 1519, 4693, 2852, 2853, 4000, 1129,
	4694, 1246, 1246, 3932, 3906, 1659, 4833, 1251, 1129, 4086,
	4017, 1658, 3954, 3956, 3071, 2850, 2851, 2604, 1333, 1333,
	1333, 3854, 2906, 2852, 2850, 4008, 2639, 1728, 4024, 4476,
	1727, 4427, 4225, 4220, 4219, 1333, 1333, 1333, 4082, 3853,
	3747, 3100, 3537, 3534, 1881, 1880, 1005, 3970, 3987, 4878,
	4840, 4651, 4650, 4649, 1333, 4588, 4587, 4542, 4454, 4012,
	1394, 3960, 4009, 4421, 3969, 4366, 4363, 4361, 3950, 4259,
	4028, 4245, 4189, 3947, 4138, 1245, 1245, 3988, 3958, 4039,
	4021, 3959, 3975, 3992, 3894, 3886, 1394, 3974, 3604, 1129,
	1129, 4040, 3603, 3465, 3416, 1129, 1129, 2020, 3154, 3948,
	1129, 1129, 1087, 1129, 3146, 3125, 3124, 3123, 1129, 3122,
	2126, 3049, 3997, 3019, 2883, 2820, 2816, 1247, 1247, 1129,
	2271, 3995, 2805, 2804, 2793, 2533, 1137, 2406, 2378, 2371,
	4013, 4010, 2370, 4019, 2369, 1129, 2368, 4023, 3449, 4018,
	2367, 3949, 2281, 2255, 4029, 4030, 4051, 2251, 4049, 2250,
	4011, 4031, 2249, 4067, 4037, 2248, 4034, 4038, 4035, 2247,
	2056, 2055, 2054, 2052, 1991, 3565, 1006, 4050, 1745, 1744,
	1683, 1567, 268, 268, 268, 2014, 691, 692, 1566, 707,
	691, 707, 717, 1565, 1564, 757, 1563, 1562, 1561, 777,
	1556, 1060, 1552, 1007, 783, 4068, 1251, 4061, 4080, 1550,
	1549, 268, 4076, 4056, 1251, 1249, 1502, 1501, 1394, 1500,
	1394, 1385, 1384, 1383, 1382, 1381, 1345, 1251, 1295, 1294,
	1293, 894, 1292, 1291, 1290, 2017, 1289, 268, 1333, 1333,
	1287, 1282, 2301, 1281, 1280, 1279, 1278, 1209, 1394, 887,
	8, 2095, 1028, 2008, 1014, 4564, 1008, 3382, 1327, 2317,
	4168, 4167, 2236, 4166, 2402, 92, 1558, 849, 86, 2319,
	4144, 4145, 2208, 1251, 3893, 1251, 4768, 982, 4106, 4690,
	4592, 2327, 1541, 2330, 2331, 2332, 857, 1246, 4672, 3989,
	3467, 2967, 2397, 2352, 1684, 4192, 2354, 3377, 1333, 2766,
	4639, 4090, 3252, 4175, 4533, 4175, 4337, 2607, 1394, 1885,
	1333, 4178, 3333, 1333, 88, 1113, 1159, 4255, 4254, 4113,
	2014, 4152, 4118, 4119, 1394, 3878, 3688, 4124, 4123, 4120,
	3090, 4252, 4127, 4251, 2005, 2007, 1077, 1397, 4117, 4224,
	4712, 4226, 4148, 4131, 4128, 2106, 4122, 4193, 1119, 2122,
	2115, 2806, 2683, 1136, 1133, 2009, 2011, 1135, 1134, 2010,
	1905, 1245, 1333, 1333, 1132, 2004, 3999, 691, 691, 3069,
	2017, 3630, 1608, 1606, 984, 268, 4136, 4249, 2110, 4150,
	2527, 2591, 1333, 3241, 1878, 1093, 1115, 2588, 2008, 4142,
	1271, 1104, 1092, 4213, 1394, 3359, 3338, 3617, 3837, 1333,
	2439, 867, 3287, 1247, 1249, 2594, 4246, 4227, 179, 1262,
	2707, 2699, 1249, 2695, 3426, 3059, 1759, 4351, 4243, 1856,
	4211, 3070, 1379, 1097, 1251, 1249, 2525, 1869, 3219, 4277,
	2449, 4288, 3624, 4218, 3380, 2799, 1333, 1333, 1333, 1333,
	4697, 4208, 3996, 3755, 3152, 4274, 2259, 4237, 1225, 1224,
	1394, 1269, 1223, 4678, 4175, 4244, 4242, 4675, 4236, 4197,
	4305, 4235, 1129, 1129, 1129, 2198, 4032, 3579, 4289, 4250,
	2098, 1249, 4206, 1249, 2844, 4209, 1246, 2537, 3587, 4265,
	1394, 4292, 1109, 1496, 1246, 1129, 2396, 3344, 1129, 1129,
	3649, 1569, 782, 4398, 1121, 1841, 2988, 1246, 1129, 2987,
	4553, 2020, 4198, 4283, 4290, 1364, 1129, 1129, 1362, 1361,
	1360, 4849, 4915, 3889, 4207, 4276, 4052, 4210, 3888, 3887,
	235, 1394, 3187, 1333, 1780, 1772, 232, 4329, 2093, 4314,
	234, 2463, 233, 4260, 4312, 3842, 4311, 3386, 4317, 4772,
	3911, 4324, 3570, 1246, 23, 1246, 1394, 1318, 22, 21,
	1245, 113, 42, 20, 1129, 152, 4318, 130, 1245, 149,
	148, 122, 147, 4297, 146, 145, 144, 1129, 151, 3849,
	3850, 1245, 143, 142, 137, 141, 1129, 140, 139, 138,
	136, 2020, 134, 4340, 3862, 3863, 4273, 3865, 135, 129,
	1129, 133, 1247, 1129, 132, 131, 1318, 128, 127, 126,
	1247, 125, 4372, 4357, 4358, 124, 4346, 1129, 4412, 4413,
	123, 121, 153, 1247, 1394, 120, 119, 1245, 4401, 1245,
	118, 1333, 1249, 4360, 2605, 117, 116, 1318, 1318, 4334,
	115, 1333, 1333, 4373, 114, 770, 771, 61, 4428, 60,
	4430, 4380, 4431, 112, 110, 111, 19, 40, 14, 65,
	66, 18, 4420, 13, 35, 4371, 91, 102, 101, 1247,
	36, 1247, 99, 3581, 98, 34, 4444, 17, 16, 15,
	96, 95, 33, 31, 4466, 11, 1394, 9, 4432, 1333,
	4423, 4418, 37, 1966, 12, 4457, 5, 184, 183, 4422,
	186, 182, 185, 90, 1246, 181, 180, 1251, 1251, 89,
	29, 4429, 2836, 1327, 10, 176, 4467, 3985, 4474, 81,
	178, 4485, 177, 175, 2014, 174, 4447, 4446, 1129, 1129,
	2776, 1486, 173, 82, 4449, 4455, 79, 4175, 4175, 172,
	85, 4450, 171, 4509, 4510, 1129, 2020, 4470, 4465, 80,
	4494, 84, 83, 4488, 27, 6, 64, 7, 4486, 4319,
	4513, 3675, 4436, 1497, 105, 106, 38, 4410, 77, 76,
	75, 26, 63, 4487, 2017, 25, 170, 4292, 1245, 217,
	4493, 4507, 4492, 1129, 216, 1129, 215, 1129, 214, 213,
	212, 211, 2008, 4434, 210, 4482, 205, 1251, 204, 209,
	207, 206, 208, 203, 2014, 4521, 227, 226, 220, 219,
	1129, 225, 1251, 224, 223, 4548, 222, 221, 218, 229,
	1247, 202, 201, 4522, 4523, 200, 198, 4175, 194, 193,
	197, 199, 4258, 196, 195, 4435, 192, 228, 2444, 72,
	1264, 168, 4175, 169, 71, 4275, 4544, 4547, 4576, 2992,
	167, 4531, 166, 165, 2017, 164, 163, 162, 4584, 2141,
	161, 70, 24, 2, 1129, 1129, 1, 4569, 4296, 4568,
	0, 4575, 2008, 1284, 1129, 2855, 4596, 0, 0, 1251,
	0, 0, 1251, 0, 0, 268, 1333, 268, 268, 2093,
	1313, 268, 1323, 4525, 0, 0, 1333, 1333, 0, 4583,
	0, 2093, 0, 1343, 2093, 1249, 1249, 4585, 1497, 4175,
	0, 777, 4175, 1333, 777, 4616, 4590, 0, 4618, 1318,
	0, 0, 4630, 4604, 4605, 0, 0, 1129, 1129, 0,
	4603, 0, 0, 4608, 0, 4615, 4610, 1129, 268, 4611,
	268, 268, 1313, 0, 268, 268, 0, 0, 4470, 1323,
	4626, 4624, 4628, 4629, 4627, 4623, 0, 0, 0, 2014,
	3118, 0, 0, 268, 0, 1521, 0, 0, 0, 4633,
	1497, 4634, 1497, 2093, 0, 0, 0, 1246, 1246, 4665,
	1129, 1129, 4644, 1129, 2701, 0, 1546, 4669, 0, 4648,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 4121, 1571, 0, 4699, 1323, 2017,
	1249, 4424, 268, 268, 4695, 1313, 0, 0, 4692, 4660,
	4661, 4668, 4643, 4667, 0, 0, 0, 2008, 0, 4677,
	4680, 4717, 0, 0, 0, 0, 777, 0, 268, 268,
	4682, 1129, 1129, 1129, 0, 4721, 4686, 4720, 0, 0,
	0, 1245, 1245, 0, 0, 4702, 4715, 0, 0, 0,
	0, 894, 0, 0, 4708, 0, 0, 1246, 4179, 4716,
	0, 0, 0, 0, 1129, 4681, 4752, 1249, 4685, 0,
	1249, 0, 1246, 0, 0, 4194, 4195, 0, 4757, 4734,
	4735, 4737, 4736, 1247, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4767, 4755, 4770, 4775, 0, 0, 4782, 0,
	0, 4784, 0, 0, 0, 4798, 4786, 0, 0, 0,
	0, 1129, 4771, 0, 0, 0, 4796, 0, 4797, 268,
	0, 1245, 0, 4783, 0, 4803, 4790, 0, 0, 1246,
	0, 0, 1246, 4791, 0, 0, 1245, 4792, 0, 0,
	0, 268, 4819, 0, 0, 0, 0, 0, 4794, 4795,
	4809, 4810, 0, 4823, 4800, 4815, 4813, 4811, 0, 0,
	0, 0, 0, 1247, 4822, 0, 1251, 4699, 1251, 2141,
	4826, 4824, 0, 0, 0, 0, 0, 0, 1247, 4832,
	0, 4843, 4845, 4842, 4856, 0, 4596, 4854, 4837, 4841,
	0, 4677, 2093, 4855, 4680, 4851, 4175, 0, 4175, 4308,
	0, 0, 4844, 1245, 4846, 4869, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 1872,
	4868, 0, 0, 4871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4882, 4886, 0, 4880,
	4879, 0, 1129, 1129, 0, 1247, 4887, 0, 1247, 4884,
	0, 1129, 0, 1129, 1129, 0, 4890, 0, 0, 0,
	0, 4896, 0, 0, 0, 4906, 0, 0, 4900, 4909,
	4911, 4904, 4910, 0, 3071, 4905, 0, 4908, 0, 4903,
	4907, 4899, 0, 4594, 0, 0, 0, 4919, 0, 0,
	4923, 4918, 4921, 4914, 0, 4924, 0, 4925, 0, 4927,
	0, 0, 4920, 4922, 0, 4930, 0, 4614, 0, 0,
	0, 2983, 0, 4932, 1129, 4935, 4931, 4937, 0, 0,
	0, 4938, 4934, 4940, 4941, 0, 4927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 691, 0, 2975, 2973, 0, 0, 4897, 4898,
	0, 2977, 2979, 2969, 3290, 3291, 0, 3308, 3309, 3310,
	0, 0, 0, 268, 1249, 268, 1249, 0, 0, 268,
	1497, 1497, 0, 0, 0, 0, 4073, 0, 0, 0,
	0, 0, 1521, 1313, 1986, 268, 0, 268, 0, 0,
	0, 0, 0, 268, 1521, 707, 0, 0, 0, 0,
	268, 1521, 0, 1521, 0, 0, 0, 0, 0, 4936,
	0, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 1790, 268, 0, 3305,
	0, 1833, 1834, 1835, 268, 0, 1246, 0, 1246, 4703,
	1789, 1790, 0, 1497, 0, 4705, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 1792, 0, 4490, 0, 3345,
	270, 0, 0, 1820, 1839, 0, 0, 0, 2271, 1521,
	1792, 0, 0, 777, 0, 0, 0, 0, 3177, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 4169, 3372, 0, 0, 0, 1845, 0, 0, 0,
	1811, 0, 0, 0, 0, 1791, 0, 3385, 0, 1808,
	1245, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3296, 4162, 0, 4541, 0, 4155,
	4543, 0, 3405, 2971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2985, 0, 4153, 0, 0, 0,
	0, 0, 1247, 0, 1247, 4157, 0, 0, 0, 2701,
	2701, 0, 0, 0, 0, 2984, 2976, 2974, 2978, 2980,
	2970, 2972, 2986, 0, 0, 0, 0, 0, 0, 0,
	4163, 2982, 0, 0, 0, 1814, 1815, 1816, 1817, 3312,
	0, 0, 1318, 0, 0, 1797, 0, 0, 0, 0,
	3549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 2989, 0, 0, 0, 0, 0,
	0, 0, 4156, 0, 0, 0, 0, 0, 3574, 0,
	0, 3306, 0, 1830, 0, 0, 1840, 268, 0, 3591,
	73, 268, 0, 1819, 1821, 0, 0, 0, 0, 0,
	0, 0, 1091, 0, 3599, 0, 0, 74, 1819, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	1807, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	4635, 0, 4636, 0, 0, 0, 0, 1828, 0, 737,
	0, 0, 0, 0, 0, 268, 3640, 3641, 0, 268,
	0, 1497, 1812, 0, 1842, 268, 0, 0, 0, 720,
	0, 268, 0, 87, 721, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 268,
	0, 3216, 3217, 691, 0, 268, 1789, 1790, 0, 3385,
	0, 2701, 2701, 2701, 2701, 0, 0, 777, 0, 4687,
	0, 894, 4688, 722, 888, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 723, 0, 1792, 0, 107, 0,
	0, 0, 0, 93, 104, 1842, 268, 0, 1313, 268,
	0, 0, 3307, 4158, 0, 724, 0, 0, 4159, 0,
	1842, 0, 1845, 777, 2990, 0, 0, 0, 4164, 0,
	268, 1791, 0, 2981, 0, 0, 0, 743, 2351, 0,
	0, 1811, 0, 268, 268, 0, 268, 0, 268, 0,
	268, 0, 268, 0, 0, 0, 0, 0, 725, 4753,
	1818, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	4161, 0, 0, 0, 0, 0, 0, 2388, 0, 0,
	2389, 726, 2390, 1813, 0, 1114, 109, 4165, 0, 0,
	0, 0, 0, 0, 268, 268, 268, 268, 1813, 0,
	0, 0, 0, 727, 0, 0, 728, 0, 0, 0,
	1831, 0, 0, 0, 0, 1491, 0, 0, 1392, 0,
	0, 757, 0, 752, 0, 777, 1814, 1815, 1816, 1817,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 1844, 0, 3314, 3315, 3316, 3317, 0, 742, 0,
	0, 0, 3302, 3303, 3304, 0, 1844, 0, 0, 3301,
	3299, 3300, 3292, 3293, 3294, 3295, 3297, 3298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 4850, 1819, 1821, 0, 2531, 2796, 0,
	0, 0, 0, 0, 3732, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 739, 97, 0,
	0, 3748, 0, 1829, 0, 0, 0, 4160, 2539, 0,
	0, 0, 0, 4875, 0, 0, 1832, 1809, 1805, 4877,
	1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 0,
	0, 0, 0, 1812, 0, 1802, 1800, 1801, 1793, 1794,
	1795, 1796, 1798, 1799, 0, 0, 4170, 4171, 2706, 0,
	0, 0, 0, 187, 100, 1051, 0, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 1071, 0, 730, 0,
	3290, 3291, 0, 3308, 3309, 3310, 0, 0, 0, 691,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 889, 4072, 0, 268, 1318, 150, 750, 0, 731,
	0, 0, 0, 691, 0, 0, 1842, 0, 0, 0,
	268, 0, 691, 0, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 3840, 0, 0, 0, 0, 751,
	0, 0, 268, 1323, 0, 3305, 0, 732, 0, 0,
	0, 0, 747, 748, 745, 0, 0, 154, 2271, 0,
	740, 1818, 0, 733, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 3945, 0, 1813, 0, 0, 0, 0, 0,
	0, 268, 1323, 230, 0, 0, 707, 0, 0, 0,
	2819, 0, 231, 0, 0, 734, 268, 741, 0, 268,
	0, 0, 0, 268, 0, 268, 735, 0, 0, 0,
	1313, 0, 268, 268, 0, 1323, 1323, 2835, 0, 190,
	736, 0, 268, 0, 0, 744, 0, 0, 0, 0,
	3296, 0, 1844, 0, 0, 0, 0, 0, 0, 753,
	0, 0, 0, 0, 0, 1091, 1091, 1091, 0, 0,
	738, 2701, 2701, 0, 0, 0, 0, 0, 4025, 4026,
	4027, 0, 0, 1478, 0, 0, 0, 1478, 0, 2872,
	0, 0, 0, 0, 0, 1327, 4041, 4042, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 3312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 777, 0, 0,
	0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799,
	0, 0, 0, 0, 0, 0, 0, 3306, 268, 0,
	0, 2701, 2701, 2701, 2701, 2701, 2701, 2701, 2701, 2701,
	2701, 2701, 2701, 2701, 2701, 2701, 2701, 2701, 2701, 2701,
	2701, 0, 2701, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 3008, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	268, 0, 268, 0, 0, 0, 0, 0, 0, 268,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 3054,
	0, 0, 0, 3711, 3712, 0, 0, 0, 0, 2872,
	0, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	3083, 894, 0, 2872, 2872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 4133, 4134,
	0, 0, 0, 0, 0, 2271, 0, 0, 0, 0,
	0, 268, 1313, 268, 0, 0, 0, 0, 3307, 0,
	1521, 0, 1521, 1323, 268, 1318, 0, 1313, 0, 1313,
	0, 1313, 0, 0, 0, 0, 0, 0, 1084, 0,
	0, 0, 0, 3775, 3776, 3777, 3778, 3779, 3780, 3781,
	3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791,
	3792, 3793, 3794, 0, 3798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 268, 268, 268, 1313, 0,
	0, 1313, 2706, 268, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4126,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 1327, 0, 74, 268, 0, 4140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3302, 3303,
	3304, 0, 0, 2706, 2706, 3301, 3299, 3300, 3292, 3293,
	3294, 3295, 3297, 3298, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4313, 0, 4315, 4316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 888, 0, 0, 109, 0, 109, 0, 109, 0,
	0, 0, 0, 49, 0, 107, 0, 0, 0, 0,
	93, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 1478, 0, 0, 0, 0, 3290,
	3291, 0, 3308, 3309, 3310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1071,
	109, 109, 0, 4362, 0, 0, 0, 0, 1789, 1790,
	0, 0, 0, 0, 0, 109, 0, 109, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 109,
	0, 1820, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 3290, 3291, 0, 3308, 3309, 3310, 0, 1392,
	0, 0, 0, 0, 3305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 2706, 2706, 2706, 2706, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 4335,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 1091, 109, 0, 0, 0, 0, 0,
	0, 1478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4448, 0, 0, 0, 268, 0, 3305, 0, 0,
	4335, 0, 0, 0, 0, 0, 0, 0, 1497, 0,
	0, 268, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 691, 0, 0, 691, 2463, 0, 691, 691, 3296,
	0, 0, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 97, 0, 0, 1814, 1815,
	1816, 1817, 0, 0, 0, 1521, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1051,
	3313, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 268, 3296, 2463, 3312, 268, 268, 0, 0, 0,
	187, 100, 0, 0, 103, 0, 1819, 1821, 1865, 0,
	0, 0, 1871, 0, 0, 1318, 0, 0, 0, 0,
	0, 0, 0, 1478, 2872, 2872, 268, 0, 1986, 0,
	236, 0, 1806, 1807, 2872, 0, 3306, 3451, 889, 0,
	0, 0, 0, 150, 0, 2872, 3451, 0, 2872, 3451,
	0, 0, 3451, 0, 0, 0, 0, 3312, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 268, 268, 1986,
	0, 268, 0, 0, 0, 0, 0, 0, 238, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 268, 0, 3512, 3512, 74, 0, 3306,
	1313, 0, 0, 0, 154, 0, 0, 0, 0, 1842,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 191,
	2872, 0, 2872, 0, 3538, 2872, 1986, 237, 0, 2872,
	1986, 0, 1958, 777, 1961, 0, 109, 0, 1842, 0,
	230, 0, 0, 0, 0, 0, 1327, 1327, 0, 231,
	0, 0, 0, 87, 0, 0, 0, 0, 1313, 0,
	0, 0, 73, 1327, 0, 268, 0, 0, 0, 1521,
	0, 0, 1842, 0, 0, 0, 1619, 0, 0, 74,
	0, 0, 0, 268, 0, 3575, 2701, 3307, 3577, 2872,
	0, 0, 268, 1818, 888, 78, 268, 0, 0, 1323,
	0, 0, 0, 0, 0, 0, 49, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 1813, 268, 0, 0,
	0, 0, 3054, 0, 0, 1313, 0, 268, 0, 0,
	2872, 0, 691, 0, 0, 87, 0, 0, 0, 2872,
	0, 0, 2701, 0, 0, 0, 0, 0, 0, 0,
	3307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 3054, 0, 0, 3054, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 1844, 0, 888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	107, 0, 1478, 0, 0, 93, 104, 0, 0, 3681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3687, 0, 0,
	1521, 0, 0, 1313, 268, 0, 268, 3302, 3303, 3304,
	0, 0, 1313, 0, 3301, 3299, 3300, 3292, 3293, 3294,
	3295, 3297, 3298, 0, 0, 2706, 2706, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 4343, 0,
	1809, 1805, 268, 1802, 1800, 1801, 1793, 1794, 1795, 1796,
	1798, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 0,
	3302, 3303, 3304, 0, 0, 0, 0, 3301, 3299, 3300,
	3292, 3293, 3294, 3295, 3297, 3298, 0, 0, 0, 0,
	0, 0, 0, 0, 4383, 0, 0, 0, 97, 0,
	3753, 0, 0, 2701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2706, 2706, 2706, 2706, 2706,
	2706, 2706, 2706, 2706, 2706, 2706, 2706, 2706, 2706, 2706,
	2706, 2706, 2706, 2706, 2706, 1478, 2706, 0, 0, 0,
	0, 0, 0, 2701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 100, 0, 0, 103, 0, 0,
	0, 1478, 0, 0, 0, 0, 0, 0, 2701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 889, 0, 1071, 0, 1071, 150, 268, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	691, 691, 0, 0, 0, 0, 1789, 1790, 0, 0,
	0, 238, 0, 0, 0, 187, 100, 0, 0, 103,
	0, 0, 0, 1521, 1521, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 1792, 154, 1521, 1521,
	0, 1521, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 191, 889, 0, 4530, 0, 0, 150, 0,
	237, 0, 1845, 109, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 230, 0, 1825, 0, 0, 0, 0,
	0, 1811, 231, 0, 0, 0, 1478, 0, 0, 0,
	1808, 0, 0, 238, 0, 4552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 0, 0, 777, 0, 0, 0, 0, 154,
	4574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 1051, 0, 0,
	1051, 1051, 237, 0, 0, 4071, 0, 3512, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	268, 0, 0, 1478, 231, 0, 1814, 1815, 1816, 1817,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 1986, 0, 268, 0, 0, 0, 707, 707,
	1323, 190, 0, 0, 0, 0, 2524, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 1071, 0, 0, 0,
	0, 0, 0, 268, 1819, 1821, 1865, 0, 268, 0,
	1865, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 1807, 2872, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 3083, 3083, 0, 0, 0, 0, 894, 894,
	2872, 0, 0, 0, 3054, 3054, 0, 0, 894, 2872,
	0, 0, 0, 1812, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 46, 45, 0, 0,
	0, 0, 0, 1235, 268, 0, 0, 0, 0, 0,
	0, 74, 0, 0, 155, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 67, 0,
	0, 0, 0, 0, 0, 48, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 109, 0, 0,
	0, 0, 0, 0, 0, 47, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 68, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 0, 0, 0, 57, 0,
	0, 1818, 158, 0, 0, 0, 0, 0, 0, 0,
	49, 0, 107, 0, 0, 0, 0, 93, 104, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 1521, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 3290, 3291, 52, 3308,
	3309, 3310, 0, 0, 0, 0, 0, 0, 1323, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 3720, 0,
	0, 1323, 1844, 0, 0, 0, 0, 0, 2872, 2872,
	0, 3512, 2872, 0, 0, 0, 0, 0, 0, 4177,
	0, 4177, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 2872, 0, 3451, 0, 0, 1825, 1521,
	1521, 268, 1986, 0, 1825, 0, 0, 0, 0, 0,
	0, 3305, 0, 0, 0, 1986, 0, 268, 1986, 0,
	268, 0, 3512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2872, 0, 2872,
	268, 0, 0, 0, 0, 0, 0, 0, 1809, 1805,
	0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799,
	0, 0, 0, 0, 109, 0, 0, 109, 0, 109,
	0, 0, 0, 0, 0, 2872, 0, 0, 0, 0,
	4262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 1825, 0, 0, 0, 0, 1825,
	0, 268, 97, 0, 0, 0, 3296, 0, 1825, 0,
	0, 0, 0, 1825, 109, 0, 0, 109, 0, 0,
	53, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	4177, 0, 0, 1521, 0, 56, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 1944, 0, 0, 58, 187, 100, 0,
	1478, 103, 0, 0, 0, 54, 0, 0, 0, 159,
	0, 3312, 0, 0, 0, 0, 0, 55, 1825, 0,
	2706, 0, 0, 0, 1825, 0, 0, 236, 0, 0,
	0, 0, 0, 1478, 0, 62, 0, 0, 109, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 3306, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 1790, 0, 0,
	0, 0, 0, 1478, 0, 238, 2706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2872, 1820,
	3451, 0, 0, 4375, 0, 0, 1792, 0, 0, 0,
	0, 154, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 4399, 0, 4399, 0, 191, 0, 0, 0,
	0, 0, 1845, 0, 237, 1091, 1842, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 0, 230, 777, 0,
	0, 1811, 0, 0, 0, 0, 231, 0, 0, 3512,
	1808, 1313, 0, 0, 0, 1825, 1825, 1825, 1825, 1825,
	1825, 1825, 1825, 0, 0, 0, 1986, 0, 268, 0,
	0, 2524, 0, 190, 0, 1825, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 1076, 0, 0, 1825, 0,
	0, 0, 1865, 4375, 0, 0, 0, 0, 0, 0,
	0, 2872, 0, 0, 3307, 3714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4479,
	1478, 0, 0, 0, 0, 0, 1814, 1815, 1816, 1817,
	0, 1521, 0, 0, 2705, 0, 1797, 0, 0, 0,
	0, 0, 0, 4177, 4177, 0, 0, 1825, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 2706, 0, 0,
	0, 0, 268, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 1819, 1821, 3753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2706, 0, 0,
	0, 1521, 0, 0, 1521, 3512, 4546, 0, 0, 0,
	1806, 1807, 0, 4375, 0, 0, 0, 0, 0, 0,
	0, 0, 2706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 3302, 3303, 3304, 0, 4177, 0,
	0, 3301, 3299, 3300, 3292, 3293, 3294, 3295, 3297, 3298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 3290, 3291, 0, 3308, 3309, 3310, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 4262,
	0, 0, 0, 0, 0, 3719, 0, 0, 0, 0,
	1235, 0, 0, 0, 0, 4177, 1842, 268, 4177, 0,
	0, 0, 0, 0, 0, 0, 1478, 0, 3451, 1478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 1521, 0, 3305, 0,
	0, 0, 1789, 1790, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 4658, 1792, 0, 1813, 0, 0, 0, 0, 0,
	801, 0, 0, 0, 0, 1478, 0, 4399, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 1478, 1521, 0, 0, 1521, 1791, 0, 0,
	0, 0, 0, 0, 0, 2872, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 0, 1844, 3296, 0, 0, 268, 109, 109, 0,
	109, 109, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 795, 0, 0, 0, 0, 0, 0,
	807, 3709, 0, 1521, 0, 0, 0, 0, 109, 109,
	0, 109, 109, 109, 800, 0, 0, 0, 3312, 0,
	0, 0, 1814, 1815, 1816, 1817, 0, 0, 0, 0,
	0, 0, 1797, 268, 0, 0, 0, 0, 1809, 1805,
	0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 0,
	3306, 0, 799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4375, 0, 0, 0, 752,
	1819, 1821, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 797, 0, 1806, 1807, 0, 1825,
	0, 0, 0, 0, 0, 2872, 0, 0, 0, 0,
	0, 0, 4177, 0, 4177, 0, 1235, 1521, 0, 1071,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 1812,
	0, 1338, 0, 109, 109, 0, 0, 1825, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 806, 0, 1825, 0, 1521, 1076, 1076,
	1076, 0, 0, 1521, 1825, 1825, 1825, 1825, 1825, 1825,
	1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825,
	1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825,
	1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825,
	0, 3307, 1842, 3083, 0, 1825, 0, 1825, 1825, 1825,
	1825, 1523, 2872, 1529, 0, 1535, 0, 0, 0, 2705,
	2705, 0, 0, 0, 0, 0, 0, 792, 3083, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 1625, 0, 1630, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 751, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	802, 0, 0, 0, 0, 1825, 794, 0, 1825, 0,
	0, 1825, 0, 0, 1825, 0, 0, 0, 0, 0,
	1825, 1825, 1825, 1825, 1825, 1825, 1825, 0, 1844, 0,
	1478, 3302, 3303, 3304, 0, 0, 0, 0, 3301, 3299,
	3300, 3292, 3293, 3294, 3295, 3297, 3298, 0, 0, 0,
	0, 0, 0, 791, 1709, 0, 1478, 1715, 2676, 2677,
	2678, 2679, 2672, 2673, 2674, 2675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 798, 0, 0, 0, 0, 1825, 0, 0, 3311,
	0, 2705, 2705, 2705, 2705, 753, 1235, 1235, 1825, 0,
	1825, 0, 0, 0, 0, 1825, 793, 0, 0, 0,
	0, 0, 0, 0, 1809, 1805, 0, 1802, 1800, 1801,
	1793, 1794, 1795, 1796, 1798, 1799, 0, 0, 0, 804,
	805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2652, 2653, 2654, 2655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 0, 0, 2664, 2665, 2666, 2667, 2660, 2661, 2662,
	2663, 2668, 2669, 2670, 2671, 0, 0, 0, 1478, 0,
	1478, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 1790, 0, 1822, 1823,
	1824, 1833, 1834, 1835, 0, 0, 0, 0, 0, 2648,
	2649, 2650, 2651, 2656, 2657, 2658, 2659, 1826, 1820, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 1478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 1478, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 1938, 1938, 1938,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 1478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 1815, 1816, 1817, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	1825, 1825, 0, 1825, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 1840, 1161, 0, 0,
	1478, 0, 0, 1819, 1821, 0, 1076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 1837, 0, 0, 0, 0, 0, 0, 1806,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1478, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 1478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 1091, 0, 109, 0, 0, 0, 0,
	0, 1235, 0, 0, 1827, 0, 0, 0, 0, 1235,
	0, 0, 0, 0, 1478, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1825,
	0, 2705, 2705, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3311, 3311, 0, 0, 1825,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 1825, 0, 0, 1478, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1252, 0, 0, 0,
	1831, 2705, 2705, 2705, 2705, 2705, 2705, 2705, 2705, 2705,
	2705, 2705, 2705, 2705, 2705, 2705, 2705, 2705, 2705, 2705,
	2705, 0, 2705, 3311, 3311, 3311, 3311, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2375, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 1804, 1810, 1832, 1809, 1805, 0,
	1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 0,
	0, 0, 0, 4659, 1091, 1091, 0, 2400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2438, 0, 2442, 0, 0, 0, 0, 0, 1825,
	2456, 0, 0, 0, 0, 0, 0, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 0, 2506, 0, 2508, 2509, 2510, 2511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 2535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 2586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2616, 2619, 2622, 2625, 0, 0,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2697, 0,
	2709, 2711, 2716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2524, 0, 0, 1789, 1790, 0,
	1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1820, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1825, 0, 0, 1825,
	3311, 3311, 1825, 1845, 0, 0, 1825, 0, 0, 0,
	0, 0, 1791, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 1825, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	1825, 1825, 1825, 1825, 0, 0, 0, 0, 0, 1825,
	0, 1825, 0, 0, 3311, 3311, 3311, 3311, 3311, 3311,
	3311, 3311, 3311, 3311, 3311, 3311, 3311, 3311, 3311, 3311,
	3311, 3311, 3311, 3311, 1252, 0, 0, 3311, 0, 0,
	1825, 1825, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 1814, 1815, 1816,
	1817, 1825, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	1252, 0, 0, 0, 1252, 0, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 1840, 1825,
	0, 0, 0, 0, 0, 1819, 1821, 0, 0, 0,
	1825, 0, 0, 0, 0, 1252, 0, 0, 0, 0,
	0, 0, 1836, 0, 1837, 0, 0, 0, 0, 0,
	0, 1806, 1807, 0, 0, 0, 0, 0, 0, 1825,
	0, 1252, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 3011, 3012, 0, 3014, 0, 0, 0,
	0, 1252, 0, 0, 1812, 0, 0, 0, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3144, 1818, 0, 0, 0, 0, 0, 1825, 1825,
	0, 0, 0, 1825, 1825, 0, 0, 1825, 1825, 0,
	0, 0, 1825, 0, 0, 1813, 1825, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2705, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3199, 3200, 0, 0, 0,
	0, 3206, 0, 0, 1789, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3220, 3221, 0, 0, 0, 1829, 2586, 1820, 0, 0,
	0, 0, 0, 0, 1792, 1803, 1804, 1810, 1832, 1809,
	1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798,
	1799, 0, 0, 0, 0, 3265, 0, 0, 0, 3266,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 3230, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 3244, 1808, 0,
	0, 0, 0, 0, 1252, 0, 1252, 0, 0, 0,
	0, 0, 0, 0, 3256, 0, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	1825, 1825, 0, 3708, 0, 0, 0, 0, 0, 0,
	1825, 1825, 3311, 2705, 0, 0, 0, 0, 0, 1825,
	0, 0, 1825, 0, 1814, 1815, 1816, 1817, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3311, 2705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2716, 2716, 2716, 1825,
	0, 1252, 0, 0, 0, 0, 0, 1825, 2705, 0,
	0, 1938, 1819, 1821, 0, 1825, 0, 0, 0, 3349,
	0, 0, 0, 0, 1825, 0, 0, 0, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 1790, 0, 1822, 1823, 1824, 1833, 1834, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1820, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 1076, 0, 0, 0, 0, 3311,
	0, 0, 0, 0, 0, 0, 0, 1845, 1076, 0,
	0, 0, 0, 0, 1842, 0, 1791, 0, 0, 0,
	1825, 3311, 0, 0, 1825, 0, 1811, 0, 0, 0,
	1252, 1252, 0, 0, 0, 1808, 0, 0, 0, 0,
	1252, 3470, 0, 3311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1815, 1816, 1817, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 0, 1252, 0, 1252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 1252, 1252, 0, 0, 1830,
	0, 0, 1840, 0, 0, 0, 1252, 0, 0, 1819,
	1821, 0, 0, 0, 0, 0, 0, 0, 1252, 0,
	1252, 1252, 1252, 0, 0, 0, 1836, 0, 1837, 0,
	0, 0, 0, 0, 0, 1806, 1807, 0, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 1809, 1805, 0, 1802,
	1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 1789, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 1842, 0, 1792, 0, 0, 0, 2021, 2021, 1252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 2456, 0, 0, 1811, 0,
	0, 3706, 3707, 0, 0, 3710, 1818, 1808, 0, 3713,
	1825, 0, 0, 0, 1825, 0, 0, 0, 3717, 0,
	0, 0, 0, 0, 0, 0, 0, 3724, 0, 1813,
	0, 0, 3349, 0, 0, 1789, 1790, 0, 1822, 1823,
	1824, 1833, 1834, 1835, 0, 0, 0, 3737, 0, 0,
	0, 0, 1252, 0, 0, 0, 1831, 1826, 1820, 0,
	0, 0, 3205, 0, 0, 1792, 0, 3760, 3761, 0,
	3762, 3763, 3764, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1815, 1816, 1817, 1844, 3770, 0,
	0, 1845, 3772, 1797, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 1252, 0, 0, 0, 1808,
	0, 0, 1252, 0, 0, 3801, 3802, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1821, 3813, 0, 0, 0, 0, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3822, 1829,
	0, 0, 0, 0, 0, 0, 0, 1806, 1807, 1803,
	1804, 1810, 1832, 1809, 1805, 0, 1802, 1800, 1801, 1793,
	1794, 1795, 1796, 1798, 1799, 0, 0, 0, 0, 2582,
	0, 0, 0, 2583, 0, 1814, 1815, 1816, 1817, 0,
	1812, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3870, 0, 0,
	0, 0, 0, 1830, 0, 0, 1840, 0, 0, 1252,
	1252, 0, 0, 1819, 1821, 0, 3881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 1837, 1842, 0, 0, 0, 0, 0, 1806,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3910, 0, 0, 1252, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2021, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 1125, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1252, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 1252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 267, 267, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	820, 4020, 0, 0, 0, 1252, 0, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 820, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 1252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1252, 0, 1252, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 1809, 1805, 1252, 1802, 1800,
	1801, 1793, 1794, 1795, 1796, 1798, 1799, 0, 0, 0,
	0, 0, 4069, 4070, 0, 0, 0, 0, 4074, 4075,
	0, 1844, 0, 4078, 4079, 0, 0, 0, 0, 0,
	0, 4083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1248, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 1804, 1810, 1832, 1809, 1805, 0,
	1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 4097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 1790, 0,
	1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1820, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 1789, 1790,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 0, 1814, 1815, 1816,
	1817, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 3198, 1840, 0,
	0, 0, 0, 0, 0, 1819, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1815,
	1816, 1817, 1836, 0, 1837, 4330, 4331, 4332, 1797, 0,
	0, 1806, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1252, 1252, 2456, 1828,
	0, 4341, 4342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1252, 0, 1812, 737, 0, 0, 0, 4350,
	4353, 0, 0, 0, 0, 0, 1819, 1821, 0, 0,
	1252, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	721, 0, 1252, 0, 0, 1252, 0, 0, 0, 0,
	0, 0, 1806, 1807, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 0, 0,
	1252, 0, 0, 0, 0, 0, 1827, 0, 0, 722,
	4400, 0, 0, 0, 0, 1812, 1252, 1842, 0, 4408,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4416, 0, 0, 1076, 0, 0, 0,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	4425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1252, 743, 0, 0, 0, 2021, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 725, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1252, 267, 1252, 267, 267, 0, 727,
	267, 0, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 1252, 0, 752,
	0, 0, 0, 1844, 0, 0, 0, 0, 1252, 0,
	0, 0, 1252, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 742, 0, 0, 267, 0, 267,
	267, 0, 0, 267, 267, 0, 0, 1252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 820, 1252, 0, 0, 0, 1252, 0, 0,
	0, 0, 0, 0, 0, 1252, 4551, 0, 0, 0,
	4555, 0, 0, 0, 1844, 1829, 1252, 0, 0, 0,
	0, 0, 0, 739, 0, 1803, 1804, 1810, 1832, 1809,
	1805, 1252, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798,
	1799, 267, 267, 0, 0, 0, 0, 0, 1252, 3722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 267, 0,
	0, 0, 0, 1252, 1252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1076, 1076, 0,
	0, 0, 749, 0, 730, 0, 0, 4612, 1252, 0,
	1809, 1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796,
	1798, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 750, 0, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 1252, 0, 0, 0,
	0, 2456, 0, 0, 0, 0, 0, 0, 0, 0,
	4353, 0, 838, 0, 0, 751, 0, 0, 267, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 747, 748,
	745, 0, 840, 0, 0, 0, 740, 841, 0, 733,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2021, 1076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1252, 0, 0, 0, 842, 0, 859, 0,
	0, 734, 0, 741, 0, 0, 0, 0, 0, 1252,
	0, 0, 735, 0, 0, 0, 0, 0, 0, 2021,
	2021, 0, 0, 843, 0, 0, 736, 0, 844, 0,
	0, 744, 0, 0, 4733, 4733, 4733, 0, 0, 0,
	0, 0, 0, 0, 0, 753, 0, 0, 2021, 2021,
	868, 0, 0, 0, 0, 0, 738, 845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4756, 0, 0,
	0, 866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2021, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1252, 1252,
	0, 0, 0, 0, 0, 0, 846, 0, 0, 847,
	0, 0, 0, 0, 4733, 0, 0, 0, 0, 0,
	0, 870, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 0, 1252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 1248, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 1960, 267, 0, 0, 0,
	869, 0, 820, 0, 0, 0, 0, 0, 0, 820,
	864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 267, 0, 4733, 4891, 0, 0, 0,
	0, 0, 0, 0, 4895, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1252,
	0, 0, 0, 0, 1252, 0, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2021,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 751, 0, 0, 0, 0, 0, 0, 0,
	1252, 0, 0, 0, 0, 837, 0, 861, 0, 0,
	0, 0, 0, 0, 1252, 0, 852, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 1252, 1252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 858, 1252, 1252, 1252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 853, 0,
	0, 1252, 854, 873, 0, 872, 0, 1252, 0, 855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 856, 0, 0, 267, 0, 865, 0,
	820, 0, 0, 1252, 874, 0, 871, 0, 0, 0,
	0, 0, 753, 0, 2021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 267, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 1252, 0, 1252, 0, 0,
	0, 0, 0, 0, 1252, 267, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 1252, 1252, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 820, 267, 0, 267, 0, 267, 0, 267,
	1252, 267, 1252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 0, 0, 0, 1138,
	0, 0, 0, 0, 0, 1252, 0, 1252, 0, 0,
	1252, 0, 0, 267, 267, 267, 267, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 269, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1252,
	1252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 1252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 1252, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 1252, 1252, 1252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	0, 0, 0, 0, 0, 1789, 1790, 0, 1822, 1823,
	1824, 1833, 1834, 1835, 0, 0, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1820, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 1252, 0,
	1252, 0, 0, 1248, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1248,
	0, 1845, 0, 1252, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	0, 267, 0, 0, 0, 0, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 1252, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 1252, 1252,
	0, 0, 0, 0, 0, 267, 0, 0, 267, 0,
	0, 0, 267, 0, 267, 1814, 1815, 1816, 1817, 0,
	0, 267, 267, 0, 0, 1797, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 1252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 1252, 1252, 1840, 0, 0, 0,
	0, 0, 0, 1819, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	1836, 0, 1837, 0, 0, 0, 0, 0, 0, 1806,
	1807, 0, 267, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 1252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1252,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 267,
	0, 820, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1252, 0, 0, 1252,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 1252, 0, 0, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1252, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	267, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 267, 267, 267, 0, 0, 0,
	0, 0, 267, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 269, 0,
	269, 269, 0, 1829, 269, 0, 1336, 0, 0, 0,
	0, 0, 0, 1803, 1804, 1810, 1832, 1809, 1805, 0,
	1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 3268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 1336, 269, 269, 0, 1336, 269, 269, 0,
	0, 0, 0, 1336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 1790, 0,
	1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 1336, 0, 269, 269, 0, 0, 1826,
	1820, 0, 0, 1252, 0, 1252, 0, 1792, 0, 0,
	0, 0, 0, 1336, 0, 0, 1839, 0, 0, 0,
	1336, 269, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 1845, 1336, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 263,
	687, 0, 954, 0, 1003, 0, 0, 0, 0, 0,
	1336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 977, 0, 960, 959, 0, 0,
	0, 0, 0, 0, 1248, 0, 0, 1814, 1815, 1816,
	1817, 0, 0, 0, 269, 0, 0, 1797, 979, 0,
	1248, 0, 0, 0, 961, 0, 0, 0, 0, 964,
	0, 0, 0, 0, 1012, 0, 0, 0, 0, 0,
	0, 0, 0, 974, 975, 0, 0, 0, 0, 0,
	1960, 0, 992, 0, 0, 1830, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 1819, 1821, 0, 0, 0,
	1004, 966, 0, 0, 0, 0, 0, 967, 0, 0,
	0, 0, 1836, 0, 1837, 0, 0, 0, 0, 0,
	0, 1806, 1807, 0, 0, 0, 0, 0, 0, 968,
	267, 0, 0, 0, 267, 267, 0, 0, 1001, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 970, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 267, 267, 0, 0,
	267, 971, 972, 0, 0, 0, 1827, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	980, 978, 267, 0, 0, 0, 0, 0, 973, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1009, 1000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 1336, 0, 0, 0, 0, 269, 269,
	269, 0, 1005, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 269, 267, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 820, 0, 0, 0, 0, 0, 0, 0,
	269, 267, 1831, 0, 0, 267, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 965, 0, 0, 1011, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 1248, 0, 0, 0,
	0, 963, 0, 0, 0, 996, 997, 0, 0, 0,
	0, 0, 0, 1336, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 1006, 994, 0, 0, 0, 0, 0, 0,
	0, 1010, 990, 0, 0, 983, 981, 0, 986, 0,
	0, 0, 0, 0, 987, 1829, 0, 956, 0, 1007,
	0, 0, 0, 0, 0, 1803, 1804, 1810, 1832, 1809,
	1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798,
	1799, 957, 0, 267, 0, 267, 0, 0, 0, 3267,
	0, 0, 0, 998, 0, 988, 0, 0, 0, 0,
	0, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1008, 0, 0, 0, 0, 0, 0, 0,
	991, 267, 0, 0, 0, 0, 0, 0, 0, 969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 1336, 1336, 269, 0, 0, 0, 995, 0,
	0, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 269, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 1336,
	0, 1336, 0, 0, 0, 0, 1248, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 1336, 0,
	0, 1299, 0, 1299, 1299, 0, 0, 0, 1336, 269,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 1336, 1336, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 269, 0, 269,
	0, 269, 0, 269, 1389, 269, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 269, 269,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1336, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 812, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 812, 0, 0, 267, 0, 0,
	0, 0, 267, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 1248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	1336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 269, 0, 0, 0, 269, 0, 269, 0,
	0, 0, 0, 0, 0, 269, 269, 0, 0, 0,
	0, 1336, 1336, 0, 0, 269, 0, 0, 0, 0,
	0, 1248, 0, 0, 0, 0, 0, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 1790, 1336, 1822, 1823, 1824, 1833,
	1834, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 1976, 1820, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 269, 0, 1960, 0,
	1960, 1987, 1839, 1495, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	267, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 1811, 267,
	0, 269, 1336, 1299, 0, 0, 0, 1808, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 1336, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 269, 0, 1336, 0, 0,
	267, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 1814, 1815, 1816, 1817, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 1336, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 1336,
	0, 1830, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 1819, 1821, 0, 269, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 1836, 0,
	1837, 0, 0, 0, 0, 0, 0, 1806, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 269, 269, 269,
	269, 0, 0, 0, 0, 0, 269, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 1838, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2257, 0, 1842, 0, 2264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2289, 0, 2289, 0, 267, 0, 0,
	0, 2296, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 2264, 0, 0, 2323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1395, 0, 0, 0,
	1395, 0, 0, 0, 0, 0, 2343, 1334, 1831, 0,
	0, 0, 1960, 1960, 0, 0, 0, 0, 0, 0,
	2359, 0, 2361, 0, 2363, 0, 2365, 0, 2366, 0,
	0, 267, 267, 0, 0, 0, 0, 0, 0, 1844,
	0, 1334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	2393, 2394, 2395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 1334, 0,
	0, 1829, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 1803, 1804, 1810, 1832, 1809, 1805, 0, 1802, 1800,
	1801, 1793, 1794, 1795, 1796, 1798, 1799, 0, 0, 267,
	0, 0, 0, 0, 1130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1336,
	0, 0, 0, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 267, 1960, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 269, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	269, 269, 0, 1336, 269, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1336, 269, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 2821, 0, 1336, 1299, 0, 0, 0, 1299,
	0, 1299, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2277, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 1336, 0, 1336, 0, 0, 0, 1336,
	0, 0, 0, 0, 0, 0, 269, 1336, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 1395, 1336, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	812, 0, 0, 1336, 0, 0, 0, 812, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1336, 1336, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	1336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 1790,
	0, 1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0,
	0, 0, 0, 0, 1395, 1336, 0, 269, 1336, 269,
	1826, 1820, 0, 0, 0, 0, 2264, 0, 1792, 0,
	0, 0, 0, 0, 0, 2277, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 269, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 0, 0, 3116, 0,
	0, 0, 0, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3127, 0, 3130,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 1395, 0, 1814, 1815,
	1816, 1817, 0, 0, 0, 0, 0, 0, 1797, 0,
	3160, 1495, 3162, 1495, 0, 0, 0, 0, 0, 3168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 1840,
	0, 0, 0, 1299, 0, 0, 1819, 1821, 0, 0,
	0, 3196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 1837, 0, 0, 0, 0,
	0, 0, 1806, 1807, 1336, 0, 0, 0, 0, 0,
	0, 1334, 0, 1334, 0, 1334, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 1334, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 1334, 1334, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	812, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1396, 0, 0,
	0, 1396, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 1336, 1335, 0, 0, 0, 1336, 269, 0, 0,
	0, 0, 0, 0, 0, 1395, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 269, 0, 1335, 0,
	0, 269, 0, 0, 0, 1335, 269, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 1336, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1336, 1336, 1336, 0, 1395, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1336, 0, 1335, 0, 269, 0, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1336, 1803, 1804, 1810, 1832,
	1809, 1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796,
	1798, 1799, 0, 0, 0, 0, 0, 1299, 1395, 0,
	3264, 1495, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1395, 0, 0, 0, 0, 0,
	0, 0, 3439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3489, 3491, 0, 0, 2277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 1336, 0,
	0, 0, 0, 0, 0, 1334, 1334, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1395,
	0, 0, 0, 0, 269, 0, 0, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 1336,
	269, 0, 1336, 269, 0, 0, 0, 0, 3588, 0,
	0, 0, 3592, 1336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1396, 0,
	0, 1336, 1336, 0, 0, 0, 1395, 1789, 1790, 0,
	1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 1336, 1334, 0, 269, 0, 3645, 0, 0, 1826,
	1820, 0, 0, 1336, 269, 0, 0, 1792, 1336, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 812,
	0, 1334, 1791, 0, 0, 1336, 1336, 1336, 1336, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 1336,
	3691, 1808, 1495, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 1334, 1336,
	0, 0, 0, 0, 0, 1396, 0, 0, 3704, 0,
	0, 0, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 1336, 0, 0, 0, 0, 1814, 1815, 1816,
	1817, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 1336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 1819, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 1837, 0, 0, 0, 0, 0,
	0, 1806, 1807, 1336, 0, 0, 0, 1335, 1335, 0,
	1336, 269, 0, 0, 0, 0, 0, 1396, 0, 1828,
	1336, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 1789, 1790, 0, 1822,
	1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 1820,
	0, 0, 0, 0, 0, 1336, 1792, 0, 1336, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 1827, 0, 0, 0,
	0, 1791, 0, 0, 0, 269, 269, 1842, 0, 0,
	0, 1811, 1335, 0, 1335, 0, 1335, 0, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1335, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 1335, 1335, 1335,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1815, 1816, 1817,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 1831, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2277, 0, 0, 1844, 1830, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 1819, 1821, 0, 0, 0, 2277,
	269, 0, 0, 0, 0, 1336, 0, 0, 0, 3984,
	0, 1836, 0, 1837, 0, 1336, 1336, 0, 0, 0,
	1806, 1807, 0, 1395, 2277, 0, 1396, 0, 0, 4002,
	0, 0, 1336, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 1829, 1395, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 1804, 1810, 1832, 1809,
	1805, 1395, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 3263,
	0, 0, 0, 269, 0, 0, 1395, 1838, 0, 0,
	4054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 1827, 0, 0, 0, 1396,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 1396,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1396, 269, 0, 0, 1334,
	0, 1334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 0, 0, 1334, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 1334,
	0, 0, 0, 1395, 0, 0, 0, 0, 0, 0,
	812, 1334, 0, 0, 0, 0, 1335, 1335, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 4196, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 1334, 0, 0,
	0, 0, 0, 2277, 1803, 1804, 1810, 1832, 1809, 1805,
	0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799,
	1396, 0, 0, 0, 0, 0, 0, 0, 3262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 0, 0, 1789, 1790,
	0, 1822, 1823, 1824, 1833, 1834, 1835, 2277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4284, 0, 0,
	1826, 1820, 0, 0, 0, 0, 0, 1396, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 1395,
	0, 0, 1395, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1395, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1395, 0, 1335, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 1814, 1815,
	1816, 1817, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 1819, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 1837, 0, 0, 0, 0,
	0, 0, 1806, 1807, 2277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 1395, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 4520, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 4617, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 1334, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 1334,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1396, 0, 1829, 1334, 0, 0,
	0, 0, 0, 1395, 0, 0, 1803, 1804, 1810, 1832,
	1809, 1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796,
	1798, 1799, 0, 0, 0, 0, 4671, 1396, 0, 1395,
	2583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1396, 0, 0,
	0, 0, 4710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 1790, 0, 1822, 1823, 1824, 1833, 1834, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1820, 0, 0, 0, 0, 1335,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 4776,
	0, 1395, 0, 1395, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 1335, 0,
	0, 1334, 1334, 0, 0, 0, 1811, 0, 0, 0,
	0, 1395, 0, 0, 0, 1808, 0, 0, 0, 0,
	1335, 0, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 1335,
	0, 1334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1395, 0, 1334, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 1395, 0, 0,
	0, 1814, 1815, 1816, 1817, 0, 0, 0, 1335, 0,
	1335, 1797, 0, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 1335, 1789, 1790, 0, 1822, 1823, 1824, 1833,
	1834, 1835, 0, 1335, 0, 1334, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 1820, 0, 1335, 1830,
	0, 0, 1840, 1792, 0, 1334, 0, 0, 0, 1819,
	1821, 0, 1839, 0, 0, 0, 0, 1395, 0, 0,
	0, 0, 1334, 0, 0, 0, 1836, 0, 1837, 1845,
	0, 0, 0, 0, 0, 1806, 1807, 0, 1791, 0,
	1335, 1335, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 1828, 0, 0, 0, 1808, 0, 1334,
	1334, 1334, 1334, 0, 0, 1335, 0, 0, 1812, 0,
	0, 0, 0, 1395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1395, 0, 0, 0, 0, 0, 0,
	1396, 0, 1838, 1396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 1814, 1815, 1816, 1817, 0, 0, 0,
	0, 1842, 0, 1797, 1395, 0, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 1840, 0, 0, 0, 0, 1396,
	0, 1819, 1821, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1396, 0, 1836, 0,
	1837, 0, 0, 0, 0, 0, 0, 1806, 1807, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 1395, 0, 0,
	0, 0, 0, 0, 1334, 0, 1831, 0, 0, 0,
	1812, 0, 0, 0, 1334, 1334, 0, 1789, 1790, 0,
	1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 0, 1826,
	1820, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 1838, 0, 1839, 0, 0, 1395,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 1396,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	1804, 1810, 1832, 1809, 1805, 0, 1802, 1800, 1801, 1793,
	1794, 1795, 1796, 1798, 1799, 0, 0, 0, 1818, 4655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 1815, 1816,
	1817, 0, 0, 0, 0, 0, 0, 1797, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 1830, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 1819, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 1837, 0, 0, 0, 0, 1334,
	0, 1806, 1807, 0, 0, 0, 1335, 0, 0, 1334,
	1334, 1335, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 1829, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 1803, 1804, 1810, 1832, 1809, 1805, 0, 1802, 1800,
	1801, 1793, 1794, 1795, 1796, 1798, 1799, 0, 0, 0,
	0, 4570, 0, 0, 0, 0, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1335, 1335, 1335, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 1335,
	1335, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 1396, 0, 1789, 1790, 0, 1822,
	1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 1820,
	1396, 0, 1818, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 1831, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1396, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1815, 1816, 1817,
	0, 0, 1335, 1335, 0, 0, 1797, 0, 0, 0,
	0, 0, 1396, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 1804, 1810, 1832, 1809,
	1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798,
	1799, 0, 0, 0, 1830, 4529, 0, 1840, 0, 0,
	0, 0, 0, 0, 1819, 1821, 0, 0, 0, 0,
	0, 0, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 1396, 1837, 1335, 0, 0, 1335, 0, 0,
	1806, 1807, 0, 0, 0, 0, 0, 0, 1396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1396, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 1335, 1335, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1396, 0, 1335, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1396, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1335, 1335, 0, 0, 0,
	0, 0, 0, 0, 1803, 1804, 1810, 1832, 1809, 1805,
	0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799,
	0, 0, 0, 0, 4528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1396, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1393, 0, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 1335, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 1398, 284, 285, 1399, 1400, 1401, 1335, 1402, 633,
	1403, 1404, 1405, 1406, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	1407, 638, 296, 297, 298, 299, 300, 301, 1408, 1409,
	0, 302, 639, 640, 641, 1410, 303, 304, 642, 1411,
	1337, 1412, 305, 306, 307, 308, 309, 310, 311, 0,
	1413, 313, 314, 315, 312, 316, 1414, 317, 0, 318,
	319, 320, 321, 322, 323, 1415, 324, 325, 326, 1193,
	327, 328, 329, 1416, 1417, 1419, 1418, 1420, 1421, 1422,
	330, 331, 332, 333, 334, 0, 335, 337, 643, 644,
	1423, 340, 336, 338, 1424, 341, 339, 342, 1425, 343,
	344, 345, 1426, 1427, 346, 347, 348, 1428, 349, 350,
	1429, 351, 352, 353, 1430, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 1431, 274, 1432, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 1433, 372, 373, 1434,
	1435, 1194, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 1436, 386, 651, 1437,
	652, 387, 1438, 388, 389, 390, 391, 392, 653, 654,
	655, 472, 1196, 393, 394, 1439, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 1440,
	1195, 403, 656, 657, 1441, 658, 1442, 405, 406, 1197,
	659, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 1443, 417, 419, 418,
	1444, 420, 660, 1200, 421, 422, 1201, 1445, 423, 0,
	0, 0, 424, 425, 428, 1446, 1447, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1448, 276, 1204, 469, 470, 1449, 661,
	471, 662, 473, 474, 1450, 0, 475, 0, 1451, 1452,
	477, 478, 479, 1453, 1454, 480, 481, 663, 1205, 482,
	1206, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 1455, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 503, 504,
	1456, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 1457, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	1458, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	670, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 1459, 559, 560, 558, 561,
	562, 563, 1460, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	1461, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 1462, 591, 592,
	0, 588, 579, 1463, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 1464, 601, 674, 675, 676, 677, 1465,
	610, 1466, 602, 603, 604, 678, 605, 679, 1467, 606,
	607, 608, 609, 0, 611, 612, 1468, 1469, 613, 614,
	615, 617, 618, 616, 619, 1470, 620, 1471, 0, 621,
	622, 623, 680, 681, 682, 1472, 625, 624, 626, 683,
	1473, 627, 1474, 1475, 1476, 1477, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1393, 0, 0, 0, 0, 0, 0, 0, 2751,
	0, 0, 0, 0, 0, 0, 0, 2752, 277, 279,
	278, 280, 281, 282, 283, 1398, 284, 285, 1399, 1400,
	1401, 0, 1402, 633, 1403, 1404, 1405, 1406, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 1407, 638, 296, 297, 298, 299,
	300, 301, 1408, 1409, 0, 302, 639, 640, 641, 1410,
	303, 304, 642, 1411, 1337, 1412, 305, 306, 307, 308,
	309, 310, 311, 0, 1413, 313, 314, 315, 312, 316,
	1414, 317, 0, 318, 319, 320, 321, 322, 323, 1415,
	324, 325, 326, 1193, 327, 328, 329, 1416, 1417, 1419,
	1418, 1420, 1421, 1422, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 1423, 340, 336, 338, 1424, 341,
	339, 342, 1425, 343, 344, 345, 1426, 1427, 346, 347,
	348, 1428, 349, 350, 1429, 351, 352, 353, 1430, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 1431, 274, 1432, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	1433, 372, 373, 1434, 1435, 1194, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	1436, 386, 651, 1437, 652, 387, 1438, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 1196, 393, 394, 1439,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 1440, 1195, 403, 656, 657, 1441, 658,
	1442, 405, 406, 1197, 659, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	1443, 417, 419, 418, 1444, 420, 660, 1200, 421, 422,
	1201, 1445, 423, 0, 0, 0, 424, 425, 428, 1446,
	1447, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 1448, 276, 1204,
	469, 470, 1449, 661, 471, 662, 473, 474, 1450, 0,
	475, 0, 1451, 1452, 477, 478, 479, 1453, 1454, 480,
	481, 663, 1205, 482, 1206, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 1455, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 1456, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 1457, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 1458, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 1459,
	559, 560, 558, 561, 562, 563, 1460, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 1461, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 1462, 591, 592, 0, 588, 579, 1463, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 1464, 601, 674,
	675, 676, 677, 1465, 610, 1466, 602, 603, 604, 678,
	605, 679, 1467, 606, 607, 608, 609, 0, 611, 612,
	1468, 1469, 613, 614, 615, 617, 618, 616, 619, 1470,
	620, 1471, 0, 621, 622, 623, 680, 681, 682, 1472,
	625, 624, 626, 683, 1473, 627, 1474, 1475, 1476, 1477,
	628, 629, 684, 630, 631, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1393, 0, 0, 0, 0, 3731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3733,
	277, 279, 278, 280, 281, 282, 283, 1398, 284, 285,
	1399, 1400, 1401, 0, 1402, 633, 1403, 1404, 1405, 1406,
	286, 287, 1192, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 1407, 638, 296, 297,
	298, 299, 300, 301, 1408, 1409, 0, 302, 639, 640,
	641, 1410, 303, 304, 642, 1411, 1337, 1412, 305, 306,
	307, 308, 309, 310, 311, 0, 1413, 313, 314, 315,
	312, 316, 1414, 317, 0, 318, 319, 320, 321, 322,
	323, 1415, 324, 325, 326, 1193, 327, 328, 329, 1416,
	1417, 1419, 1418, 1420, 1421, 1422, 330, 331, 332, 333,
	334, 0, 335, 337, 643, 644, 1423, 340, 336, 338,
	1424, 341, 339, 342, 1425, 343, 344, 345, 1426, 1427,
	346, 347, 348, 1428, 349, 350, 1429, 351, 352, 353,
	1430, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 1431, 274, 1432,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 1433, 372, 373, 1434, 1435, 1194, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 1436, 386, 651, 1437, 652, 387, 1438, 388,
	389, 390, 391, 392, 653, 654, 655, 472, 1196, 393,
	394, 1439, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 1440, 1195, 403, 656, 657,
	1441, 658, 1442, 405, 406, 1197, 659, 1198, 407, 408,
	409, 1199, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 1443, 417, 419, 418, 1444, 420, 660, 1200,
	421, 422, 1201, 1445, 423, 0, 0, 0, 424, 425,
	428, 1446, 1447, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1202, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 1203, 468, 457, 1448,
	276, 1204, 469, 470, 1449, 661, 471, 662, 473, 474,
	1450, 0, 475, 0, 1451, 1452, 477, 478, 479, 1453,
	1454, 480, 481, 663, 1205, 482, 1206, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	1455, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 1456, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 1457, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 1458, 534, 535, 536,
	1207, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 1459, 559, 560, 558, 561, 562, 563, 1460, 564,
	565, 547, 548, 566, 567, 1208, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 1461, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 1462, 591, 592, 0, 588, 579, 1463,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 1464,
	601, 674, 675, 676, 677, 1465, 610, 1466, 602, 603,
	604, 678, 605, 679, 1467, 606, 607, 608, 609, 0,
	611, 612, 1468, 1469, 613, 614, 615, 617, 618, 616,
	619, 1470, 620, 1471, 0, 621, 622, 623, 680, 681,
	682, 1472, 625, 624, 626, 683, 1473, 627, 1474, 1475,
	1476, 1477, 628, 629, 684, 630, 631, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4125, 277, 279, 278, 280,
	281, 282, 283, 1398, 284, 285, 1399, 1400, 1401, 0,
	1402, 633, 1403, 1404, 1405, 1406, 286, 287, 1192, 288,
	289, 290, 291, 292, 293, 634, 635, 0, 294, 636,
	295, 637, 1407, 638, 296, 297, 298, 299, 300, 301,
	1408, 1409, 0, 302, 639, 640, 641, 1410, 303, 304,
	642, 1411, 1337, 1412, 305, 306, 307, 308, 309, 310,
	311, 0, 1413, 313, 314, 315, 312, 316, 1414, 317,
	0, 318, 319, 320, 321, 322, 323, 1415, 324, 325,
	326, 1193, 327, 328, 329, 1416, 1417, 1419, 1418, 1420,
	1421, 1422, 330, 331, 332, 333, 334, 0, 335, 337,
	643, 644, 1423, 340, 336, 338, 1424, 341, 339, 342,
	1425, 343, 344, 345, 1426, 1427, 346, 347, 348, 1428,
	349, 350, 1429, 351, 352, 353, 1430, 354, 355, 645,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	646, 647, 367, 1431, 274, 1432, 0, 0, 0, 0,
	368, 369, 370, 648, 0, 0, 0, 371, 1433, 372,
	373, 1434, 1435, 1194, 374, 375, 376, 649, 650, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 1436, 386,
	651, 1437, 652, 387, 1438, 388, 389, 390, 391, 392,
	653, 654, 655, 472, 1196, 393, 394, 1439, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 1440, 1195, 403, 656, 657, 1441, 658, 1442, 405,
	406, 1197, 659, 1198, 407, 408, 409, 1199, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 1443, 417,
	419, 418, 1444, 420, 660, 1200, 421, 422, 1201, 1445,
	423, 0, 0, 0, 424, 425, 428, 1446, 1447, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1202, 454,
	455, 456, 462, 464, 465, 460, 461, 463, 466, 467,
	458, 459, 1203, 468, 457, 1448, 276, 1204, 469, 470,
	1449, 661, 471, 662, 473, 474, 1450, 0, 475, 0,
	1451, 1452, 477, 478, 479, 1453, 1454, 480, 481, 663,
	1205, 482, 1206, 664, 483, 484, 476, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 1455, 494, 495, 665,
	496, 497, 498, 666, 499, 500, 501, 667, 502, 668,
	503, 504, 1456, 505, 506, 0, 507, 508, 509, 510,
	511, 512, 513, 669, 514, 515, 517, 516, 518, 1457,
	519, 0, 520, 521, 522, 0, 0, 0, 0, 0,
	523, 0, 525, 526, 527, 528, 524, 529, 530, 531,
	532, 533, 1458, 534, 535, 536, 1207, 537, 538, 539,
	540, 541, 670, 542, 0, 543, 544, 550, 551, 552,
	545, 546, 553, 554, 555, 556, 557, 1459, 559, 560,
	558, 561, 562, 563, 1460, 564, 565, 547, 548, 566,
	567, 1208, 568, 569, 570, 571, 572, 573, 574, 671,
	0, 575, 1461, 576, 577, 578, 580, 549, 581, 586,
	587, 672, 582, 583, 584, 585, 673, 589, 590, 1462,
	591, 592, 0, 588, 579, 1463, 593, 594, 595, 596,
	597, 598, 599, 361, 600, 1464, 601, 674, 675, 676,
	677, 1465, 610, 1466, 602, 603, 604, 678, 605, 679,
	1467, 606, 607, 608, 609, 0, 611, 612, 1468, 1469,
	613, 614, 615, 617, 618, 616, 619, 1470, 620, 1471,
	0, 621, 622, 623, 680, 681, 682, 1472, 625, 624,
	626, 683, 1473, 627, 1474, 1475, 1476, 1477, 628, 629,
	684, 630, 631, 632, 0, 0, 0, 0, 0, 0,
	1393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4336, 277, 279, 278,
	280, 281, 282, 283, 1398, 284, 285, 1399, 1400, 1401,
	0, 1402, 633, 1403, 1404, 1405, 1406, 286, 287, 1192,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 1407, 638, 296, 297, 298, 299, 300,
	301, 1408, 1409, 0, 302, 639, 640, 641, 1410, 303,
	304, 642, 1411, 1337, 1412, 305, 306, 307, 308, 309,
	310, 311, 0, 1413, 313, 314, 315, 312, 316, 1414,
	317, 0, 318, 319, 320, 321, 322, 323, 1415, 324,
	325, 326, 1193, 327, 328, 329, 1416, 1417, 1419, 1418,
	1420, 1421, 1422, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 1423, 340, 336, 338, 1424, 341, 339,
	342, 1425, 343, 344, 345, 1426, 1427, 346, 347, 348,
	1428, 349, 350, 1429, 351, 352, 353, 1430, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 1431, 274, 1432, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 1433,
	372, 373, 1434, 1435, 1194, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 1436,
	386, 651, 1437, 652, 387, 1438, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 1196, 393, 394, 1439, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 1440, 1195, 403, 656, 657, 1441, 658, 1442,
	405, 406, 1197, 659, 1198, 407, 408, 409, 1199, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 1443,
	417, 419, 418, 1444, 420, 660, 1200, 421, 422, 1201,
	1445, 423, 0, 0, 0, 424, 425, 428, 1446, 1447,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1202,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 1203, 468, 457, 1448, 276, 1204, 469,
	470, 1449, 661, 471, 662, 473, 474, 1450, 0, 475,
	0, 1451, 1452, 477, 478, 479, 1453, 1454, 480, 481,
	663, 1205, 482, 1206, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 1455, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 1456, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	1457, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 1458, 534, 535, 536, 1207, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 1459, 559,
	560, 558, 561, 562, 563, 1460, 564, 565, 547, 548,
	566, 567, 1208, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 1461, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	1462, 591, 592, 0, 588, 579, 1463, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 1464, 601, 674, 675,
	676, 677, 1465, 610, 1466, 602, 603, 604, 678, 605,
	679, 1467, 606, 607, 608, 609, 0, 611, 612, 1468,
	1469, 613, 614, 615, 617, 618, 616, 619, 1470, 620,
	1471, 0, 621, 622, 623, 680, 681, 682, 1472, 625,
	624, 626, 683, 1473, 627, 1474, 1475, 1476, 1477, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 1393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4205, 277, 279,
	278, 280, 281, 282, 283, 1398, 284, 285, 1399, 1400,
	1401, 0, 1402, 633, 1403, 1404, 1405, 1406, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 1407, 638, 296, 297, 298, 299,
	300, 301, 1408, 1409, 0, 302, 639, 640, 641, 1410,
	303, 304, 642, 1411, 1337, 1412, 305, 306, 307, 308,
	309, 310, 311, 0, 1413, 313, 314, 315, 312, 316,
	1414, 317, 0, 318, 319, 320, 321, 322, 323, 1415,
	324, 325, 326, 1193, 327, 328, 329, 1416, 1417, 1419,
	1418, 1420, 1421, 1422, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 1423, 340, 336, 338, 1424, 341,
	339, 342, 1425, 343, 344, 345, 1426, 1427, 346, 347,
	348, 1428, 349, 350, 1429, 351, 352, 353, 1430, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 1431, 274, 1432, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	1433, 372, 373, 1434, 1435, 1194, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	1436, 386, 651, 1437, 652, 387, 1438, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 1196, 393, 394, 1439,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 1440, 1195, 403, 656, 657, 1441, 658,
	1442, 405, 406, 1197, 659, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	1443, 417, 419, 418, 1444, 420, 660, 1200, 421, 422,
	1201, 1445, 423, 0, 0, 0, 424, 425, 428, 1446,
	1447, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 1448, 276, 1204,
	469, 470, 1449, 661, 471, 662, 473, 474, 1450, 0,
	475, 0, 1451, 1452, 477, 478, 479, 1453, 1454, 480,
	481, 663, 1205, 482, 1206, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 1455, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 1456, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 1457, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 1458, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 1459,
	559, 560, 558, 561, 562, 563, 1460, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 1461, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 1462, 591, 592, 0, 588, 579, 1463, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 1464, 601, 674,
	675, 676, 677, 1465, 610, 1466, 602, 603, 604, 678,
	605, 679, 1467, 606, 607, 608, 609, 0, 611, 612,
	1468, 1469, 613, 614, 615, 617, 618, 616, 619, 1470,
	620, 1471, 0, 621, 622, 623, 680, 681, 682, 1472,
	625, 624, 626, 683, 1473, 627, 1474, 1475, 1476, 1477,
	628, 629, 684, 630, 631, 632, 0, 0, 0, 0,
	0, 0, 1393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4055, 277,
	279, 278, 280, 281, 282, 283, 1398, 284, 285, 1399,
	1400, 1401, 0, 1402, 633, 1403, 1404, 1405, 1406, 286,
	287, 1192, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 1407, 638, 296, 297, 298,
	299, 300, 301, 1408, 1409, 0, 302, 639, 640, 641,
	1410, 303, 304, 642, 1411, 1337, 1412, 305, 306, 307,
	308, 309, 310, 311, 0, 1413, 313, 314, 315, 312,
	316, 1414, 317, 0, 318, 319, 320, 321, 322, 323,
	1415, 324, 325, 326, 1193, 327, 328, 329, 1416, 1417,
	1419, 1418, 1420, 1421, 1422, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 1423, 340, 336, 338, 1424,
	341, 339, 342, 1425, 343, 344, 345, 1426, 1427, 346,
	347, 348, 1428, 349, 350, 1429, 351, 352, 353, 1430,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 1431, 274, 1432, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 1433, 372, 373, 1434, 1435, 1194, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 1436, 386, 651, 1437, 652, 387, 1438, 388, 389,
	390, 391, 392, 653, 654, 655, 472, 1196, 393, 394,
	1439, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 1440, 1195, 403, 656, 657, 1441,
	658, 1442, 405, 406, 1197, 659, 1198, 407, 408, 409,
	1199, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 1443, 417, 419, 418, 1444, 420, 660, 1200, 421,
	422, 1201, 1445, 423, 0, 0, 0, 424, 425, 428,
	1446, 1447, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1202, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 1203, 468, 457, 1448, 276,
	1204, 469, 470, 1449, 661, 471, 662, 473, 474, 1450,
	0, 475, 0, 1451, 1452, 477, 478, 479, 1453, 1454,
	480, 481, 663, 1205, 482, 1206, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 1455,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 1456, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 1457, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 1458, 534, 535, 536, 1207,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	1459, 559, 560, 558, 561, 562, 563, 1460, 564, 565,
	547, 548, 566, 567, 1208, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 1461, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 1462, 591, 592, 0, 588, 579, 1463, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 1464, 601,
	674, 675, 676, 677, 1465, 610, 1466, 602, 603, 604,
	678, 605, 679, 1467, 606, 607, 608, 609, 0, 611,
	612, 1468, 1469, 613, 614, 615, 617, 618, 616, 619,
	1470, 620, 1471, 0, 621, 622, 623, 680, 681, 682,
	1472, 625, 624, 626, 683, 1473, 627, 1474, 1475, 1476,
	1477, 628, 629, 684, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 1393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3749,
	277, 279, 278, 280, 281, 282, 283, 1398, 284, 285,
	1399, 1400, 1401, 0, 1402, 633, 1403, 1404, 1405, 1406,
	286, 287, 1192, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 1407, 638, 296, 297,
	298, 299, 300, 301, 1408, 1409, 0, 302, 639, 640,
	641, 1410, 303, 304, 642, 1411, 1337, 1412, 305, 306,
	307, 308, 309, 310, 311, 0, 1413, 313, 314, 315,
	312, 316, 1414, 317, 0, 318, 319, 320, 321, 322,
	323, 1415, 324, 325, 326, 1193, 327, 328, 329, 1416,
	1417, 1419, 1418, 1420, 1421, 1422, 330, 331, 332, 333,
	334, 0, 335, 337, 643, 644, 1423, 340, 336, 338,
	1424, 341, 339, 342, 1425, 343, 344, 345, 1426, 1427,
	346, 347, 348, 1428, 349, 350, 1429, 351, 352, 353,
	1430, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 1431, 274, 1432,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 1433, 372, 373, 1434, 1435, 1194, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 1436, 386, 651, 1437, 652, 387, 1438, 388,
	389, 390, 391, 392, 653, 654, 655, 472, 1196, 393,
	394, 1439, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 1440, 1195, 403, 656, 657,
	1441, 658, 1442, 405, 406, 1197, 659, 1198, 407, 408,
	409, 1199, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 1443, 417, 419, 418, 1444, 420, 660, 1200,
	421, 422, 1201, 1445, 423, 0, 0, 0, 424, 425,
	428, 1446, 1447, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1202, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 1203, 468, 457, 1448,
	276, 1204, 469, 470, 1449, 661, 471, 662, 473, 474,
	1450, 0, 475, 0, 1451, 1452, 477, 478, 479, 1453,
	1454, 480, 481, 663, 1205, 482, 1206, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	1455, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 1456, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 1457, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 1458, 534, 535, 536,
	1207, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 1459, 559, 560, 558, 561, 562, 563, 1460, 564,
	565, 547, 548, 566, 567, 1208, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 1461, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 1462, 591, 592, 0, 588, 579, 1463,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 1464,
	601, 674, 675, 676, 677, 1465, 610, 1466, 602, 603,
	604, 678, 605, 679, 1467, 606, 607, 608, 609, 0,
	611, 612, 1468, 1469, 613, 614, 615, 617, 618, 616,
	619, 1470, 620, 1471, 0, 621, 622, 623, 680, 681,
	682, 1472, 625, 624, 626, 683, 1473, 627, 1474, 1475,
	1476, 1477, 628, 629, 684, 630, 631, 632, 0, 0,
	0, 0, 0, 0, 1393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3572, 277, 279, 278, 280, 281, 282, 283, 1398, 284,
	285, 1399, 1400, 1401, 0, 1402, 633, 1403, 1404, 1405,
	1406, 286, 287, 1192, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 1407, 638, 296,
	297, 298, 299, 300, 301, 1408, 1409, 0, 302, 639,
	640, 641, 1410, 303, 304, 642, 1411, 1337, 1412, 305,
	306, 307, 308, 309, 310, 311, 0, 1413, 313, 314,
	315, 312, 316, 1414, 317, 0, 318, 319, 320, 321,
	322, 323, 1415, 324, 325, 326, 1193, 327, 328, 329,
	1416, 1417, 1419, 1418, 1420, 1421, 1422, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 1423, 340, 336,
	338, 1424, 341, 339, 342, 1425, 343, 344, 345, 1426,
	1427, 346, 347, 348, 1428, 349, 350, 1429, 351, 352,
	353, 1430, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 1431, 274,
	1432, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 1433, 372, 373, 1434, 1435, 1194, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 1436, 386, 651, 1437, 652, 387, 1438,
	388, 389, 390, 391, 392, 653, 654, 655, 472, 1196,
	393, 394, 1439, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 1440, 1195, 403, 656,
	657, 1441, 658, 1442, 405, 406, 1197, 659, 1198, 407,
	408, 409, 1199, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 1443, 417, 419, 418, 1444, 420, 660,
	1200, 421, 422, 1201, 1445, 423, 0, 0, 0, 424,
	425, 428, 1446, 1447, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1202, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 1203, 468, 457,
	1448, 276, 1204, 469, 470, 1449, 661, 471, 662, 473,
	474, 1450, 0, 475, 0, 1451, 1452, 477, 478, 479,
	1453, 1454, 480, 481, 663, 1205, 482, 1206, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 1455, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 1456, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 1457, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 1458, 534, 535,
	536, 1207, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 1459, 559, 560, 558, 561, 562, 563, 1460,
	564, 565, 547, 548, 566, 567, 1208, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 1461, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 1462, 591, 592, 0, 588, 579,
	1463, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	1464, 601, 674, 675, 676, 677, 1465, 610, 1466, 602,
	603, 604, 678, 605, 679, 1467, 606, 607, 608, 609,
	0, 611, 612, 1468, 1469, 613, 614, 615, 617, 618,
	616, 619, 1470, 620, 1471, 0, 621, 622, 623, 680,
	681, 682, 1472, 625, 624, 626, 683, 1473, 627, 1474,
	1475, 1476, 1477, 628, 629, 684, 630, 631, 632, 0,
	0, 0, 0, 0, 0, 1393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2606, 277, 279, 278, 280, 281, 282, 283, 1398,
	284, 285, 1399, 1400, 1401, 0, 1402, 633, 1403, 1404,
	1405, 1406, 286, 287, 1192, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 1407, 638,
	296, 297, 298, 299, 300, 301, 1408, 1409, 0, 302,
	639, 640, 641, 1410, 303, 304, 642, 1411, 1337, 1412,
	305, 306, 307, 308, 309, 310, 311, 0, 1413, 313,
	314, 315, 312, 316, 1414, 317, 0, 318, 319, 320,
	321, 322, 323, 1415, 324, 325, 326, 1193, 327, 328,
	329, 1416, 1417, 1419, 1418, 1420, 1421, 1422, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 1423, 340,
	336, 338, 1424, 341, 339, 342, 1425, 343, 344, 345,
	1426, 1427, 346, 347, 348, 1428, 349, 350, 1429, 351,
	352, 353, 1430, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 1431,
	274, 1432, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 1433, 372, 373, 1434, 1435, 1194,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 1436, 386, 651, 1437, 652, 387,
	1438, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	1196, 393, 394, 1439, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 1440, 1195, 403,
	656, 657, 1441, 658, 1442, 405, 406, 1197, 659, 1198,
	407, 408, 409, 1199, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 1443, 417, 419, 418, 1444, 420,
	660, 1200, 421, 422, 1201, 1445, 423, 0, 0, 0,
	424, 425, 428, 1446, 1447, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1202, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 1203, 468,
	457, 1448, 276, 1204, 469, 470, 1449, 661, 471, 662,
	473, 474, 1450, 0, 475, 0, 1451, 1452, 477, 478,
	479, 1453, 1454, 480, 481, 663, 1205, 482, 1206, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 1455, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 1456, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 1457, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 1458, 534,
	535, 536, 1207, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 1459, 559, 560, 558, 561, 562, 563,
	1460, 564, 565, 547, 548, 566, 567, 1208, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 1461, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 1462, 591, 592, 0, 588,
	579, 1463, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 1464, 601, 674, 675, 676, 677, 1465, 610, 1466,
	602, 603, 604, 678, 605, 679, 1467, 606, 607, 608,
	609, 0, 611, 612, 1468, 1469, 613, 614, 615, 617,
	618, 616, 619, 1470, 620, 1471, 0, 621, 622, 623,
	680, 681, 682, 1472, 625, 624, 626, 683, 1473, 627,
	1474, 1475, 1476, 1477, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 1489, 0, 1393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2237, 277, 279, 278, 280, 281, 282, 283,
	1398, 284, 285, 1399, 1400, 1401, 0, 1402, 633, 1403,
	1404, 1405, 1406, 286, 287, 1192, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 1407,
	638, 296, 297, 298, 299, 300, 301, 1408, 1409, 0,
	302, 639, 640, 641, 1410, 303, 304, 642, 1411, 1337,
	1412, 305, 306, 307, 308, 309, 310, 311, 0, 1413,
	313, 314, 315, 312, 316, 1414, 317, 0, 318, 319,
	320, 321, 322, 323, 1415, 324, 325, 326, 1193, 327,
	328, 329, 1416, 1417, 1419, 1418, 1420, 1421, 1422, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 1423,
	340, 336, 338, 1424, 341, 339, 342, 1425, 343, 344,
	345, 1426, 1427, 346, 347, 348, 1428, 349, 350, 1429,
	351, 352, 353, 1430, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	1431, 274, 1432, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 1433, 372, 373, 1434, 1435,
	1194, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 1436, 386, 651, 1437, 652,
	387, 1438, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 1196, 393, 394, 1439, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 1440, 1195,
	403, 656, 657, 1441, 658, 1442, 405, 406, 1197, 659,
	1198, 407, 408, 409, 1199, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 1443, 417, 419, 418, 1444,
	420, 660, 1200, 421, 422, 1201, 1445, 423, 0, 0,
	0, 424, 425, 428, 1446, 1447, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1202, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 1203,
	468, 457, 1448, 276, 1204, 469, 470, 1449, 661, 471,
	662, 473, 474, 1450, 0, 475, 0, 1451, 1452, 477,
	478, 479, 1453, 1454, 480, 481, 663, 1205, 482, 1206,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 1455, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 1456,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 1457, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 1458,
	534, 535, 536, 1207, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 1459, 559, 560, 558, 561, 562,
	563, 1460, 564, 565, 547, 548, 566, 567, 1208, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 1461,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 1462, 591, 592, 0,
	588, 579, 1463, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 1464, 601, 674, 675, 676, 677, 1465, 610,
	1466, 602, 603, 604, 678, 605, 679, 1467, 606, 607,
	608, 609, 0, 611, 612, 1468, 1469, 613, 614, 615,
	617, 618, 616, 619, 1470, 620, 1471, 0, 621, 622,
	623, 680, 681, 682, 1472, 625, 624, 626, 683, 1473,
	627, 1474, 1475, 1476, 1477, 628, 629, 684, 630, 631,
	632, 1390, 0, 1393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 1398, 284, 285,
	1399, 1400, 1401, 0, 1402, 633, 1403, 1404, 1405, 1406,
	286, 287, 1192, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 1407, 638, 296, 297,
	298, 299, 300, 301, 1408, 1409, 0, 302, 639, 640,
	641, 1410, 303, 304, 642, 1411, 1337, 1412, 305, 306,
	307, 308, 309, 310, 311, 0, 1413, 313, 314, 315,
	312, 316, 1414, 317, 0, 318, 319, 320, 321, 322,
	323, 1415, 324, 325, 326, 1193, 327, 328, 329, 1416,
	1417, 1419, 1418, 1420, 1421, 1422, 330, 331, 332, 333,
	334, 0, 335, 337, 643, 644, 1423, 340, 336, 338,
	1424, 341, 339, 342, 1425, 343, 344, 345, 1426, 1427,
	346, 347, 348, 1428, 349, 350, 1429, 351, 352, 353,
	1430, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 1431, 274, 1432,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 1433, 372, 373, 1434, 1435, 1194, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 1436, 386, 651, 1437, 652, 387, 1438, 388,
	389, 390, 391, 392, 653, 654, 655, 472, 1196, 393,
	394, 1439, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 1440, 1195, 403, 656, 657,
	1441, 658, 1442, 405, 406, 1197, 659, 1198, 407, 408,
	409, 1199, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 1443, 417, 419, 418, 1444, 420, 660, 1200,
	421, 422, 1201, 1445, 423, 0, 0, 0, 424, 425,
	428, 1446, 1447, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1202, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 1203, 468, 457, 1448,
	276, 1204, 469, 470, 1449, 661, 471, 662, 473, 474,
	1450, 0, 475, 0, 1451, 1452, 477, 478, 479, 1453,
	1454, 480, 481, 663, 1205, 482, 1206, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	1455, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 1456, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 1457, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 1458, 534, 535, 536,
	1207, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 1459, 559, 560, 558, 561, 562, 563, 1460, 564,
	565, 547, 548, 566, 567, 1208, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 1461, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 1462, 591, 592, 0, 588, 579, 1463,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 1464,
	601, 674, 675, 676, 677, 1465, 610, 1466, 602, 603,
	604, 678, 605, 679, 1467, 606, 607, 608, 609, 0,
	611, 612, 1468, 1469, 613, 614, 615, 617, 618, 616,
	619, 1470, 620, 1471, 0, 621, 622, 623, 680, 681,
	682, 1472, 625, 624, 626, 683, 1473, 627, 1474, 1475,
	1476, 1477, 628, 629, 684, 630, 631, 632, 1393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 1398, 284, 285, 1399, 1400, 1401, 0, 1402,
	633, 1403, 1404, 1405, 1406, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 1407, 638, 296, 297, 298, 299, 300, 301, 1408,
	1409, 0, 302, 639, 640, 641, 1410, 303, 304, 642,
	1411, 1337, 1412, 305, 306, 307, 308, 309, 310, 311,
	0, 1413, 313, 314, 315, 312, 316, 1414, 317, 0,
	318, 319, 320, 321, 322, 323, 1415, 324, 325, 326,
	1193, 327, 328, 329, 1416, 1417, 1419, 1418, 1420, 1421,
	1422, 330, 331, 332, 333, 334, 0, 335, 337, 643,
	644, 1423, 340, 336, 338, 1424, 341, 339, 342, 1425,
	343, 344, 345, 1426, 1427, 346, 347, 348, 1428, 349,
	350, 1429, 351, 352, 353, 1430, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 646,
	647, 367, 1431, 274, 1432, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 1433, 372, 373,
	1434, 1435, 1194, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 1436, 386, 651,
	1437, 652, 387, 1438, 388, 389, 390, 391, 392, 653,
	654, 655, 472, 1196, 393, 394, 1439, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	1440, 1195, 403, 656, 657, 1441, 658, 1442, 405, 406,
	1197, 659, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 1443, 417, 419,
	418, 1444, 420, 660, 1200, 421, 422, 1201, 1445, 423,
	0, 0, 0, 424, 425, 428, 1446, 1447, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 1448, 276, 1204, 469, 470, 1449,
	661, 471, 662, 473, 474, 1450, 0, 475, 0, 1451,
	1452, 477, 478, 479, 1453, 1454, 480, 481, 663, 1205,
	482, 1206, 664, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 1455, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 667, 502, 668, 503,
	504, 1456, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 517, 516, 518, 1457, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 1458, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 670, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 1459, 559, 560, 558,
	561, 562, 563, 1460, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 1461, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 673, 589, 590, 1462, 591,
	592, 0, 588, 579, 1463, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 1464, 601, 674, 675, 676, 677,
	1465, 610, 1466, 602, 603, 604, 678, 605, 679, 1467,
	606, 607, 608, 609, 0, 611, 612, 1468, 1469, 613,
	614, 615, 617, 618, 616, 619, 1470, 620, 1471, 0,
	621, 622, 623, 680, 681, 682, 1472, 625, 624, 626,
	683, 1473, 627, 1474, 1475, 1476, 1477, 628, 629, 684,
	630, 631, 632, 2581, 0, 1128, 1100, 1101, 1102, 1098,
	1099, 1111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 2578,
	284, 285, 0, 0, 0, 0, 0, 1152, 1116, 0,
	0, 0, 286, 287, 1192, 288, 289, 290, 291, 292,
	293, 634, 1165, 0, 294, 1172, 295, 1171, 0, 1182,
	296, 297, 298, 299, 300, 301, 1118, 1151, 1083, 302,
	1212, 1213, 641, 0, 303, 304, 1158, 0, 1139, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1193, 327, 328,
	329, 1142, 1140, 1141, 1148, 1144, 1143, 1147, 330, 331,
	332, 333, 334, 1175, 335, 337, 1169, 1168, 1088, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	2579, 0, 346, 1160, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1094, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1183, 1184, 367, 1107,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1167,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1194,
	374, 375, 376, 1180, 1181, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1190, 0, 1117, 387,
	0, 388, 389, 390, 391, 392, 1153, 1154, 1157, 472,
	1196, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1195, 403,
	1162, 1163, 0, 1123, 0, 405, 406, 1197, 1155, 1198,
	407, 408, 409, 1199, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1191, 1200, 421, 422, 1201, 0, 423, 0, 0, 0,
	424, 425, 428, 1146, 1145, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1202, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 1203, 468,
	457, 1085, 276, 1204, 469, 470, 1108, 1156, 471, 1170,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 1205, 482, 1206, 1185,
	483, 484, 1095, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 1186, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 1166,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 1207, 537, 538, 539, 540, 541, 1096, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	1149, 564, 565, 547, 548, 566, 567, 1208, 568, 569,
	570, 571, 572, 573, 574, 1164, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 1211, 582, 583,
	584, 585, 1187, 589, 590, 0, 591, 592, 1082, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 1176, 1177, 1178, 1179, 0, 610, 0,
	602, 603, 604, 1188, 605, 1189, 1106, 606, 607, 608,
	609, 0, 611, 612, 0, 1089, 613, 614, 615, 617,
	618, 616, 619, 1150, 620, 0, 0, 621, 622, 623,
	680, 1173, 1210, 2577, 625, 624, 626, 683, 0, 627,
	0, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 0,
	1079, 1080, 2580, 0, 0, 0, 0, 0, 0, 1112,
	2576, 0, 1072, 1110, 1128, 1100, 1101, 1102, 1098, 1099,
	1111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1152, 1116, 0, 0,
	0, 286, 287, 1192, 288, 289, 290, 291, 292, 293,
	634, 1165, 0, 294, 1172, 295, 1171, 0, 1182, 296,
	297, 298, 299, 300, 301, 1118, 1151, 1083, 302, 1212,
	1213, 641, 0, 303, 304, 1158, 0, 1139, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1193, 327, 328, 329,
	1142, 1140, 1141, 1148, 1144, 1143, 1147, 330, 331, 332,
	333, 334, 1175, 335, 337, 1169, 1168, 1088, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1160, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1094, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1183, 1184, 367, 1107, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1167, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1194, 374,
	375, 376, 1180, 1181, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1190, 0, 1117, 387, 0,
	388, 389, 390, 391, 392, 1153, 1154, 1157, 472, 1196,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1195, 403, 1162,
	1163, 0, 1123, 0, 405, 406, 1197, 1155, 1198, 407,
	408, 409, 1199, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1191,
	1200, 421, 422, 1201, 0, 423, 0, 0, 0, 424,
	425, 428, 1146, 1145, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1202, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 1203, 468, 457,
	1085, 276, 1204, 469, 470, 1108, 1156, 471, 1170, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 1205, 482, 1206, 1185, 483,
	484, 1095, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 1186, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 1166, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 1207, 537, 538, 539, 540, 541, 1096, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 236, 559, 560, 558, 561, 562, 563, 1149,
	564, 565, 547, 548, 566, 567, 1208, 568, 569, 570,
	571, 572, 573, 574, 1164, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 1211, 582, 583, 584,
	585, 1187, 589, 590, 0, 591, 592, 1082, 588, 579,
	238, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 1176, 1177, 1178, 1179, 0, 610, 0, 602,
	603, 604, 1188, 605, 1189, 1106, 606, 607, 608, 609,
	0, 611, 612, 0, 1089, 613, 614, 615, 617, 618,
	616, 619, 1150, 620, 0, 0, 621, 622, 623, 1615,
	1173, 1210, 0, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 230, 628, 629, 684, 630, 631, 632, 1086,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 0, 1079,
	1080, 1128, 1100, 1101, 1102, 1098, 1099, 1111, 1870, 1868,
	0, 0, 1110, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1152, 1116, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 1165, 0,
	294, 1172, 295, 1171, 0, 1182, 296, 297, 298, 299,
	300, 301, 1118, 1151, 1083, 302, 1212, 1213, 641, 0,
	303, 304, 1158, 0, 1139, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 1142, 1140, 1141,
	1148, 1144, 1143, 1147, 330, 331, 332, 333, 334, 1175,
	335, 337, 1169, 1168, 1088, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1160,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1094, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1183, 1184, 367, 1107, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1167, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 1180,
	1181, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1190, 0, 1117, 387, 0, 388, 389, 390,
	391, 392, 1153, 1154, 1157, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1195, 403, 1162, 1163, 0, 1123,
	0, 405, 406, 1197, 1155, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1191, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 1146,
	1145, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 1085, 276, 1204,
	469, 470, 1108, 1156, 471, 1170, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 1185, 483, 484, 1095, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 1186,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 1166, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 1096, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 236,
	559, 560, 558, 561, 562, 563, 1149, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 1164, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 1211, 582, 583, 584, 585, 1187, 589,
	590, 0, 591, 592, 1082, 588, 579, 238, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 1176,
	1177, 1178, 1179, 0, 610, 0, 602, 603, 604, 1188,
	605, 1189, 1106, 606, 607, 608, 609, 0, 611, 612,
	0, 1089, 613, 614, 615, 617, 618, 616, 619, 1150,
	620, 0, 0, 621, 622, 623, 1615, 1173, 1210, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 230,
	628, 629, 684, 630, 631, 632, 1086, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1081,
	0, 0, 0, 0, 0, 0, 1079, 1080, 1128, 1100,
	1101, 1102, 1098, 1099, 1111, 1870, 3218, 0, 0, 1110,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1152, 1116, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 1165, 0, 294, 1172, 295,
	1171, 0, 1182, 296, 297, 298, 299, 300, 301, 1118,
	1151, 1083, 302, 1212, 1213, 641, 0, 303, 304, 1158,
	0, 1139, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143,
	1147, 330, 331, 332, 333, 334, 1175, 335, 337, 1169,
	1168, 1088, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1160, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1094, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1183,
	1184, 367, 1107, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1167, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 1180, 1181, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1190,
	0, 1117, 387, 0, 388, 389, 390, 391, 392, 1153,
	1154, 1157, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1195, 403, 1162, 1163, 0, 1123, 0, 405, 406,
	1197, 1155, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1191, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 1146, 1145, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 1085, 276, 1204, 469, 470, 1108,
	1156, 471, 1170, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 1185, 483, 484, 1095, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 1186, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 1166, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 1096, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 236, 559, 560, 558,
	561, 562, 563, 1149, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 1164, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	1211, 582, 583, 584, 585, 1187, 589, 590, 0, 591,
	592, 1082, 588, 579, 238, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 1176, 1177, 1178, 1179,
	0, 610, 0, 602, 603, 604, 1188, 605, 1189, 1106,
	606, 607, 608, 609, 0, 611, 612, 0, 1089, 613,
	614, 615, 617, 618, 616, 619, 1150, 620, 0, 0,
	621, 622, 623, 1615, 1173, 1210, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 230, 628, 629, 684,
	630, 631, 632, 1086, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1081, 0, 0, 0,
	0, 0, 0, 1079, 1080, 1128, 1100, 1101, 1102, 1098,
	1099, 1111, 1870, 1868, 0, 0, 1110, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1152, 1116, 0,
	0, 0, 286, 287, 1192, 288, 289, 290, 291, 292,
	293, 634, 1165, 0, 294, 1172, 295, 1171, 2712, 1182,
	296, 297, 298, 299, 300, 301, 1118, 1151, 1083, 302,
	1212, 1213, 641, 0, 303, 304, 1158, 0, 1139, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1193, 327, 328,
	329, 1142, 1140, 1141, 1148, 1144, 1143, 1147, 330, 331,
	332, 333, 334, 1175, 335, 337, 1169, 1168, 1088, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1160, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1094, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1183, 1184, 367, 1107,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1167,
	0, 0, 0, 371, 0, 372, 373, 0, 2717, 1194,
	374, 375, 376, 1180, 1181, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1190, 0, 1117, 387,
	0, 388, 389, 390, 391, 392, 1153, 1154, 1157, 472,
	1196, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1195, 403,
	1162, 1163, 0, 1123, 0, 405, 406, 1197, 1155, 1198,
	407, 408, 409, 1199, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 2713, 420,
	1191, 1200, 421, 422, 1201, 0, 423, 0, 0, 0,
	424, 425, 428, 1146, 1145, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1202, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 1203, 468,
	457, 1085, 276, 1204, 469, 470, 1108, 1156, 471, 1170,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 1205, 482, 1206, 1185,
	483, 484, 1095, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 1186, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 1166,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 1207, 537, 538, 539, 540, 541, 1096, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	1149, 564, 565, 547, 548, 566, 567, 1208, 568, 569,
	570, 571, 572, 573, 574, 1164, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 1211, 582, 583,
	584, 585, 1187, 589, 590, 0, 591, 592, 1082, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 1176, 1177, 1178, 1179, 0, 610, 2714,
	602, 603, 604, 1188, 605, 1189, 1106, 606, 607, 608,
	609, 0, 611, 612, 0, 1089, 613, 614, 615, 617,
	618, 616, 619, 1150, 620, 0, 0, 621, 622, 623,
	680, 1173, 1210, 0, 625, 624, 626, 683, 0, 627,
	0, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	1086, 0, 0, 2626, 0, 1128, 1100, 1101, 1102, 1098,
	1099, 1111, 0, 1081, 0, 0, 0, 0, 0, 0,
	1079, 1080, 277, 279, 278, 280, 281, 282, 283, 1112,
	284, 285, 0, 1110, 0, 0, 0, 1152, 1116, 0,
	0, 0, 286, 287, 1192, 288, 289, 290, 291, 292,
	293, 634, 1165, 0, 294, 1172, 295, 1171, 0, 1182,
	296, 297, 298, 299, 300, 301, 1118, 1151, 1083, 302,
	1212, 1213, 641, 0, 303, 304, 1158, 0, 1139, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1193, 327, 328,
	329, 1142, 1140, 1141, 1148, 1144, 1143, 1147, 330, 331,
	332, 333, 334, 1175, 335, 337, 1169, 1168, 1088, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1160, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 1094, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 1183, 1184, 367, 1107,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 1167,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1194,
	374, 375, 376, 1180, 1181, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 1190, 0, 1117, 387,
	0, 388, 389, 390, 391, 392, 1153, 1154, 1157, 472,
	1196, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 1195, 403,
	1162, 1163, 0, 1123, 0, 405, 406, 1197, 1155, 1198,
	407, 408, 409, 1199, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	1191, 1200, 421, 422, 1201, 0, 423, 0, 0, 0,
	424, 425, 428, 1146, 1145, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1202, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 1203, 468,
	457, 1085, 276, 1204, 469, 470, 1108, 1156, 471, 1170,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 1205, 482, 1206, 1185,
	483, 484, 1095, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 1186, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 1166,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 1207, 537, 538, 539, 540, 541, 1096, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	1149, 564, 565, 547, 548, 566, 567, 1208, 568, 569,
	570, 571, 572, 573, 574, 1164, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 1211, 582, 583,
	584, 585, 1187, 589, 590, 0, 591, 592, 1082, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 1176, 1177, 1178, 1179, 0, 610, 0,
	602, 603, 604, 1188, 605, 1189, 1106, 606, 607, 608,
	609, 0, 611, 612, 0, 1089, 613, 614, 615, 617,
	618, 616, 619, 1150, 620, 0, 0, 621, 622, 623,
	680, 1173, 1210, 0, 625, 624, 626, 683, 0, 627,
	0, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 0,
	1079, 1080, 0, 0, 0, 0, 0, 0, 0, 1112,
	2624, 0, 2623, 1110, 1128, 1100, 1101, 1102, 1098, 1099,
	1111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1152, 1116, 0, 0,
	0, 286, 287, 1192, 288, 289, 290, 291, 292, 293,
	634, 1165, 0, 294, 1172, 295, 1171, 0, 1182, 296,
	297, 298, 299, 300, 301, 1118, 1151, 1083, 302, 1212,
	1213, 641, 0, 303, 304, 1158, 0, 1139, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1193, 327, 328, 329,
	1142, 1140, 1141, 1148, 1144, 1143, 1147, 330, 331, 332,
	333, 334, 1175, 335, 337, 1169, 1168, 1088, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1160, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 1094, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1183, 1184, 367, 1107, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 1167, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1194, 374,
	375, 376, 1180, 1181, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1190, 0, 1117, 387, 0,
	388, 389, 390, 391, 392, 1153, 1154, 1157, 472, 1196,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1195, 403, 1162,
	1163, 0, 1123, 0, 405, 406, 1197, 1155, 1198, 407,
	408, 409, 1199, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1191,
	1200, 421, 422, 1201, 0, 423, 0, 0, 0, 424,
	425, 428, 1146, 1145, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1202, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 1203, 468, 457,
	1085, 276, 1204, 469, 470, 1108, 1156, 471, 1170, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 1205, 482, 1206, 1185, 483,
	484, 1095, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 1186, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 1166, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 1207, 537, 538, 539, 540, 541, 1096, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 1149,
	564, 565, 547, 548, 566, 567, 1208, 568, 569, 570,
	571, 572, 573, 574, 1164, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 1211, 582, 583, 584,
	585, 1187, 589, 590, 0, 591, 592, 1082, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 1176, 1177, 1178, 1179, 0, 610, 0, 602,
	603, 604, 1188, 605, 1189, 1106, 606, 607, 608, 609,
	0, 611, 612, 0, 1089, 613, 614, 615, 617, 618,
	616, 619, 1150, 620, 0, 0, 621, 622, 623, 680,
	1173, 1210, 0, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 1086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 0, 1079,
	1080, 0, 0, 0, 0, 0, 0, 0, 1112, 2621,
	0, 2620, 1110, 1128, 1100, 1101, 1102, 1098, 1099, 1111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 1152, 1116, 0, 0, 0,
	286, 287, 1192, 288, 289, 290, 291, 292, 293, 634,
	1165, 0, 294, 1172, 295, 1171, 0, 1182, 296, 297,
	298, 299, 300, 301, 1118, 1151, 1083, 302, 1212, 1213,
	641, 0, 303, 304, 1158, 0, 1139, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1193, 327, 328, 329, 1142,
	1140, 1141, 1148, 1144, 1143, 1147, 330, 331, 332, 333,
	334, 1175, 335, 337, 1169, 1168, 1088, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1160, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 1094, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 1183, 1184, 367, 1107, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 1167, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1194, 374, 375,
	376, 1180, 1181, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 1190, 0, 1117, 387, 0, 388,
	389, 390, 391, 392, 1153, 1154, 1157, 472, 1196, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 1195, 403, 1162, 1163,
	0, 1123, 0, 405, 406, 1197, 1155, 1198, 407, 408,
	409, 1199, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 1191, 1200,
	421, 422, 1201, 0, 423, 0, 0, 0, 424, 425,
	428, 1146, 1145, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1202, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 1203, 468, 457, 1085,
	276, 1204, 469, 470, 1108, 1156, 471, 1170, 473, 474,
	0, 0, 475, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 481, 663, 1205, 482, 1206, 1185, 483, 484,
	1095, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	0, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 1186, 502, 668, 503, 504, 0, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 1166, 514, 515,
	517, 516, 518, 0, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 0, 534, 535, 536,
	1207, 537, 538, 539, 540, 541, 1096, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 0, 559, 560, 558, 561, 562, 563, 1149, 564,
	565, 547, 548, 566, 567, 1208, 568, 569, 570, 571,
	572, 573, 574, 1164, 0, 575, 0, 576, 577, 578,
	580, 549, 581, 586, 587, 1211, 582, 583, 584, 585,
	1187, 589, 590, 0, 591, 592, 1082, 588, 579, 0,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 0,
	601, 1176, 1177, 1178, 1179, 0, 610, 0, 602, 603,
	604, 1188, 605, 1189, 1106, 606, 607, 608, 609, 0,
	611, 612, 0, 1089, 613, 614, 615, 617, 618, 616,
	619, 1150, 620, 0, 0, 621, 622, 623, 680, 1173,
	1210, 0, 625, 624, 626, 683, 0, 627, 0, 0,
	0, 0, 628, 629, 684, 630, 631, 632, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1081, 0, 0, 0, 0, 0, 0, 1079, 1080,
	0, 0, 0, 0, 0, 0, 0, 1112, 2618, 0,
	2617, 1110, 1128, 1100, 1101, 1102, 1098, 1099, 1111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1152, 1116, 0, 0, 0, 286,
	287, 1192, 288, 289, 290, 291, 292, 293, 634, 1165,
	0, 294, 1172, 295, 1171, 0, 1182, 296, 297, 298,
	299, 300, 301, 1118, 1151, 1083, 302, 1212, 1213, 641,
	0, 303, 304, 1158, 0, 1139, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1193, 327, 328, 329, 1142, 1140,
	1141, 1148, 1144, 1143, 1147, 330, 331, 332, 333, 334,
	1175, 335, 337, 1169, 1168, 1088, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1160, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 1094, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1183, 1184, 367, 1107, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 1167, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1194, 374, 375, 376,
	1180, 1181, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1190, 0, 1117, 387, 0, 388, 389,
	390, 391, 392, 1153, 1154, 1157, 472, 1196, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1195, 403, 1162, 1163, 0,
	1123, 0, 405, 406, 1197, 1155, 1198, 407, 408, 409,
	1199, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1191, 1200, 421,
	422, 1201, 0, 423, 0, 0, 0, 424, 425, 428,
	1146, 1145, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1202, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 1203, 468, 457, 1085, 276,
	1204, 469, 470, 1108, 1156, 471, 1170, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 1205, 482, 1206, 1185, 483, 484, 1095,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	1186, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 1166, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 1207,
	537, 538, 539, 540, 541, 1096, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 1149, 564, 565,
	547, 548, 566, 567, 1208, 568, 569, 570, 571, 572,
	573, 574, 1164, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 1211, 582, 583, 584, 585, 1187,
	589, 590, 0, 591, 592, 1082, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	1176, 1177, 1178, 1179, 0, 610, 0, 602, 603, 604,
	1188, 605, 1189, 1106, 606, 607, 608, 609, 0, 611,
	612, 0, 1089, 613, 614, 615, 617, 618, 616, 619,
	1150, 620, 0, 0, 621, 622, 623, 680, 1173, 1210,
	0, 625, 624, 626, 683, 0, 627, 0, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1081, 0, 0, 0, 0, 0, 0, 1079, 1080, 0,
	0, 0, 0, 0, 0, 0, 1112, 2615, 0, 1711,
	1110, 1128, 1100, 1101, 1102, 1098, 1099, 1111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1152, 1116, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 1165, 0,
	294, 1172, 295, 1171, 0, 1182, 296, 297, 298, 299,
	300, 301, 1118, 1151, 1083, 302, 1212, 1213, 641, 0,
	303, 304, 1158, 0, 1139, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 1142, 1140, 1141,
	1148, 1144, 1143, 1147, 330, 331, 332, 333, 334, 1175,
	335, 337, 1169, 1168, 1088, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1160,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1094, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1183, 1184, 367, 1107, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1167, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 1180,
	1181, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1190, 0, 1117, 387, 0, 388, 389, 390,
	391, 392, 1153, 1154, 1157, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1195, 403, 1162, 1163, 0, 1123,
	0, 405, 406, 1197, 1155, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1191, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 1146,
	1145, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 1085, 276, 1204,
	469, 470, 1108, 1156, 471, 1170, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 1185, 483, 484, 1095, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 1186,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 1166, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 1096, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 1149, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 1164, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 1211, 582, 583, 584, 585, 1187, 589,
	590, 0, 591, 592, 1082, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 1176,
	1177, 1178, 1179, 0, 610, 0, 602, 603, 604, 1188,
	605, 1189, 1106, 606, 607, 608, 609, 0, 611, 612,
	0, 1089, 613, 614, 615, 617, 618, 616, 619, 1150,
	620, 0, 0, 621, 622, 623, 680, 1173, 1210, 0,
	625, 624, 626, 683, 0, 627, 1710, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 1086, 0, 0, 1075,
	0, 1128, 1100, 1101, 1102, 1098, 1099, 1111, 0, 1081,
	0, 0, 0, 0, 0, 0, 1079, 1080, 277, 279,
	278, 280, 281, 282, 283, 1112, 284, 285, 0, 1110,
	0, 0, 0, 1152, 1116, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 1165, 0,
	294, 1172, 295, 1171, 0, 1182, 296, 297, 298, 299,
	300, 301, 1118, 1151, 1083, 302, 1212, 1213, 641, 0,
	303, 304, 1158, 0, 1139, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 1142, 1140, 1141,
	1148, 1144, 1143, 1147, 330, 331, 332, 333, 334, 1175,
	335, 337, 1169, 1168, 1088, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1160,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1094, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1183, 1184, 367, 1107, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1167, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 1180,
	1181, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1190, 0, 1117, 387, 0, 388, 389, 390,
	391, 392, 1153, 1154, 1157, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1195, 403, 1162, 1163, 0, 1123,
	0, 405, 406, 1197, 1155, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1191, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 1146,
	1145, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 1085, 276, 1204,
	469, 470, 1108, 1156, 471, 1170, 473, 474, 0, 0,
	475, 0, 1090, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 1185, 483, 484, 1095, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 1186,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 1166, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 1096, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 1149, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 1164, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 1211, 582, 583, 584, 585, 1187, 589,
	590, 0, 591, 592, 1082, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 1176,
	1177, 1178, 1179, 0, 610, 0, 602, 603, 604, 1188,
	605, 1189, 1106, 606, 607, 608, 609, 0, 611, 612,
	0, 1089, 613, 614, 615, 617, 618, 616, 619, 1150,
	620, 0, 0, 621, 622, 623, 680, 1173, 1210, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 1086, 0, 0, 0,
	0, 1128, 1100, 1101, 1102, 1098, 1099, 1111, 0, 1081,
	0, 0, 0, 0, 0, 0, 1079, 1080, 277, 279,
	278, 280, 281, 282, 283, 1112, 284, 285, 0, 1110,
	0, 0, 0, 1152, 1116, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 1165, 0,
	294, 1172, 295, 1171, 0, 1182, 296, 297, 298, 299,
	300, 301, 1118, 1151, 1083, 302, 1212, 1213, 641, 0,
	303, 304, 1158, 0, 1139, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 4683, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 1142, 1140, 1141,
	1148, 1144, 1143, 1147, 330, 331, 332, 333, 334, 1175,
	335, 337, 1169, 1168, 1088, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1160,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1094, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1183, 1184, 367, 1107, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1167, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 1180,
	1181, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1190, 0, 1117, 387, 0, 388, 389, 390,
	391, 392, 1153, 1154, 1157, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1195, 403, 1162, 1163, 0, 1123,
	0, 405, 406, 1197, 1155, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1191, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 1146,
	1145, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 1085, 276, 1204,
	469, 470, 1108, 1156, 471, 1170, 473, 474, 0, 0,
	475, 0, 1090, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 1185, 483, 484, 1095, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 1186,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 1166, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 1096, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 1149, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 1164, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 1211, 582, 583, 584, 585, 1187, 589,
	590, 0, 591, 592, 1082, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 1176,
	1177, 1178, 1179, 0, 610, 0, 602, 603, 604, 1188,
	605, 1189, 1106, 606, 607, 608, 609, 0, 611, 612,
	0, 1089, 613, 614, 615, 617, 618, 616, 619, 1150,
	620, 0, 0, 621, 622, 623, 680, 1173, 1210, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 1086, 0, 0, 0,
	0, 1128, 1100, 1101, 1102, 1098, 1099, 1111, 0, 1081,
	0, 0, 0, 0, 0, 0, 1079, 1080, 277, 279,
	278, 280, 281, 282, 283, 1112, 284, 285, 0, 1110,
	0, 0, 0, 1152, 1116, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 1165, 0,
	294, 1172, 295, 1171, 0, 1182, 296, 297, 298, 299,
	300, 301, 1118, 1151, 1083, 302, 1212, 1213, 641, 0,
	303, 304, 1158, 0, 1139, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 1142, 1140, 1141,
	1148, 1144, 1143, 1147, 330, 331, 332, 333, 334, 1175,
	335, 337, 1169, 1168, 1088, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1160,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1094, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1183, 1184, 367, 1107, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1167, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 1180,
	1181, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1190, 0, 1117, 387, 0, 388, 389, 390,
	391, 392, 1153, 1154, 1157, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 2458, 400,
	401, 402, 404, 0, 1195, 403, 1162, 1163, 0, 1123,
	0, 405, 406, 1197, 1155, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1191, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 1146,
	1145, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 1085, 276, 1204,
	469, 470, 1108, 1156, 471, 1170, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 1185, 483, 484, 1095, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 1186,
	502, 668, 503, 504, 2457, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 1166, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 1096, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 1149, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 1164, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 1211, 582, 583, 584, 585, 1187, 589,
	590, 0, 591, 592, 1082, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 1176,
	1177, 1178, 1179, 0, 610, 0, 602, 603, 604, 1188,
	605, 1189, 1106, 606, 607, 608, 609, 0, 611, 612,
	0, 1089, 613, 614, 615, 617, 618, 616, 619, 1150,
	620, 0, 0, 621, 622, 623, 680, 1173, 1210, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 1086, 0, 0, 0,
	0, 1128, 1100, 1101, 1102, 1098, 1099, 1111, 0, 1081,
	0, 0, 0, 0, 0, 0, 1079, 1080, 277, 279,
	278, 280, 281, 282, 283, 1112, 284, 285, 0, 1110,
	0, 0, 0, 1152, 1116, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 1165, 0,
	294, 1172, 295, 1171, 0, 1182, 296, 297, 298, 299,
	300, 301, 1118, 1151, 1083, 302, 1212, 1213, 641, 0,
	303, 304, 1158, 0, 1139, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 1142, 1140, 1141,
	1148, 1144, 1143, 1147, 330, 331, 332, 333, 334, 1175,
	335, 337, 1169, 1168, 1088, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1160,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1094, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1183, 1184, 367, 1107, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1167, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 1180,
	1181, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1190, 0, 1117, 387, 0, 388, 389, 390,
	391, 392, 1153, 1154, 1157, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1195, 403, 1162, 1163, 0, 1123,
	0, 405, 406, 1197, 1155, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1191, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 1146,
	1145, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 1085, 276, 1204,
	469, 470, 1108, 1156, 471, 1170, 473, 474, 0, 0,
	475, 0, 1090, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 1185, 483, 484, 1095, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 1186,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 1166, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 1096, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 1149, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 1164, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 1211, 582, 583, 584, 585, 1187, 589,
	590, 0, 591, 592, 1082, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 1176,
	1177, 1178, 1179, 0, 610, 0, 602, 603, 604, 1188,
	605, 1189, 1106, 606, 607, 608, 609, 0, 611, 612,
	0, 1089, 613, 614, 615, 617, 618, 616, 619, 1150,
	620, 0, 0, 621, 622, 623, 680, 1173, 1210, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 1086, 0, 0, 0,
	0, 1128, 1100, 1101, 1102, 1098, 1099, 1111, 0, 1081,
	0, 0, 0, 0, 0, 0, 1079, 1080, 277, 279,
	278, 280, 281, 282, 283, 1112, 284, 285, 0, 1110,
	0, 0, 0, 1152, 1116, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 1165, 0,
	294, 1172, 295, 1171, 0, 1182, 296, 297, 298, 299,
	300, 301, 1118, 1151, 1083, 302, 1212, 1213, 641, 0,
	303, 304, 1158, 0, 1139, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 4419, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 1142, 1140, 1141,
	1148, 1144, 1143, 1147, 330, 331, 332, 333, 334, 1175,
	335, 337, 1169, 1168, 1088, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1160,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1094, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1183, 1184, 367, 1107, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1167, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 1180,
	1181, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1190, 0, 1117, 387, 0, 388, 389, 390,
	391, 392, 1153, 1154, 1157, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1195, 403, 1162, 1163, 0, 1123,
	0, 405, 406, 1197, 1155, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1191, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 1146,
	1145, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 1085, 276, 1204,
	469, 470, 1108, 1156, 471, 1170, 473, 474, 0, 0,
	475, 0, 1090, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 1185, 483, 484, 1095, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 1186,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 1166, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 1096, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 1149, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 1164, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 1211, 582, 583, 584, 585, 1187, 589,
	590, 0, 591, 592, 1082, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 1176,
	1177, 1178, 1179, 0, 610, 0, 602, 603, 604, 1188,
	605, 1189, 1106, 606, 607, 608, 609, 0, 611, 612,
	0, 1089, 613, 614, 615, 617, 618, 616, 619, 1150,
	620, 0, 0, 621, 622, 623, 680, 1173, 1210, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 1086, 0, 0, 0,
	0, 1128, 1100, 1101, 1102, 1098, 1099, 1111, 0, 1081,
	0, 0, 0, 0, 0, 0, 1079, 1080, 277, 279,
	278, 280, 281, 282, 283, 1112, 284, 285, 0, 1110,
	0, 0, 0, 1152, 1116, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 1165, 0,
	294, 1172, 295, 1171, 0, 1182, 296, 297, 298, 299,
	300, 301, 1118, 1151, 1083, 302, 1212, 1213, 641, 0,
	303, 304, 1158, 0, 1139, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 1142, 1140, 1141,
	1148, 1144, 1143, 1147, 330, 331, 332, 333, 334, 1175,
	335, 337, 1169, 1168, 1088, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1160,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 1094, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 1183, 1184, 367, 1107, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 1167, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 1180,
	1181, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 1190, 0, 1117, 387, 0, 388, 389, 390,
	391, 392, 1153, 1154, 1157, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 1195, 403, 1162, 1163, 0, 1123,
	0, 405, 406, 1197, 1155, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 1191, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 1146,
	1145, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 1085, 4014, 1204,
	469, 470, 1108, 1156, 471, 1170, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 1185, 483, 484, 1095, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 1186,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 1166, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 1096, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 1149, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 1164, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 1211, 582, 583, 584, 585, 1187, 589,
	590, 0, 591, 592, 1082, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 1176,
	1177, 1178, 1179, 0, 610, 0, 602, 603, 604, 1188,
	605, 1189, 1106, 606, 607, 608, 609, 0, 611, 612,
	0, 1089, 613, 614, 615, 617, 618, 616, 619, 1150,
	620, 0, 0, 621, 622, 623, 680, 1173, 1210, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 1086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1081,
	0, 0, 0, 0, 0, 0, 1079, 1080, 1939, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 1110,
	1128, 1100, 1101, 1102, 1098, 1099, 1111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1152, 1116, 0, 0, 0, 286, 287, 1192,
	288, 289, 290, 291, 292, 293, 634, 1165, 0, 294,
	1172, 295, 1171, 0, 1182, 296, 297, 298, 299, 300,
	301, 1118, 1151, 1083, 302, 1212, 1213, 641, 0, 303,
	304, 1158, 0, 1139, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1193, 327, 328, 329, 1142, 1140, 1141, 1148,
	1144, 1143, 1147, 330, 331, 332, 333, 334, 1175, 335,
	337, 1169, 1168, 1088, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1160, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1094, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1183, 1184, 367, 1107, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1167, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1194, 374, 375, 376, 1180, 1181,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1190, 0, 1117, 387, 0, 388, 389, 390, 391,
	392, 1153, 1154, 1157, 472, 1196, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1195, 403, 1162, 1163, 0, 1123, 0,
	405, 406, 1197, 1155, 1198, 407, 408, 409, 1199, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 1191, 1200, 421, 422, 1201,
	0, 423, 0, 0, 0, 424, 425, 428, 1146, 1145,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1202,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 1203, 468, 457, 1085, 276, 1204, 469,
	470, 1108, 1156, 471, 1170, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 1205, 482, 1206, 1185, 483, 484, 1095, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 1186, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 1166, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 1207, 537, 538,
	539, 540, 541, 1096, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 1149, 564, 565, 547, 548,
	566, 567, 1208, 568, 569, 570, 571, 572, 573, 574,
	1164, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 1211, 582, 583, 584, 585, 1187, 589, 590,
	0, 591, 592, 1082, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 1176, 1177,
	1178, 1179, 0, 610, 0, 602, 603, 604, 1188, 605,
	1189, 1106, 606, 607, 608, 609, 0, 611, 612, 0,
	1089, 613, 614, 615, 617, 618, 616, 619, 1150, 620,
	0, 0, 621, 622, 623, 680, 1173, 1210, 3727, 625,
	624, 626, 683, 0, 627, 0, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 1086, 0, 0, 0, 0,
	1128, 1100, 1101, 1102, 1098, 1099, 1111, 0, 1081, 0,
	0, 0, 0, 0, 0, 1079, 1080, 277, 279, 278,
	280, 281, 282, 283, 1112, 284, 285, 0, 1110, 0,
	0, 0, 1152, 1116, 0, 0, 0, 286, 287, 1192,
	288, 289, 290, 291, 292, 293, 634, 1165, 0, 294,
	1172, 295, 1171, 0, 1182, 296, 297, 298, 299, 300,
	301, 1118, 1151, 1083, 302, 1212, 1213, 641, 0, 303,
	304, 1158, 0, 1139, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1193, 327, 328, 329, 1142, 1140, 1141, 1148,
	1144, 1143, 1147, 330, 331, 332, 333, 334, 1175, 335,
	337, 1169, 1168, 1088, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1160, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	1094, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1183, 1184, 367, 1107, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 1167, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1194, 374, 375, 376, 1180, 1181,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1190, 0, 1117, 387, 0, 388, 389, 390, 391,
	392, 1153, 1154, 1157, 472, 1196, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1195, 403, 1162, 1163, 0, 1123, 0,
	405, 406, 1197, 1155, 1198, 407, 408, 409, 1199, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 1191, 1200, 421, 422, 1201,
	0, 423, 0, 0, 0, 424, 425, 428, 1146, 1145,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1202,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 1203, 468, 457, 1085, 276, 1204, 469,
	470, 1108, 1156, 471, 1170, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 1205, 482, 1206, 1185, 483, 484, 1095, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 1186, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 1166, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 1207, 537, 538,
	539, 540, 541, 1096, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 1149, 564, 565, 547, 548,
	566, 567, 1208, 568, 569, 570, 571, 572, 573, 574,
	1164, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 1211, 582, 583, 584, 585, 1187, 589, 590,
	0, 591, 592, 1082, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 1176, 1177,
	1178, 1179, 0, 610, 0, 602, 603, 604, 1188, 605,
	1189, 1106, 606, 607, 608, 609, 0, 611, 612, 0,
	1089, 613, 614, 615, 617, 618, 616, 619, 1150, 620,
	0, 0, 621, 622, 623, 680, 1173, 1210, 0, 625,
	624, 626, 683, 0, 627, 0, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1081, 0,
	0, 0, 0, 0, 0, 1079, 1080, 1939, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 1110, 1128,
	1100, 1101, 1102, 1098, 1099, 1111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 1152, 1116, 0, 0, 0, 286, 287, 1192, 288,
	289, 290, 291, 292, 293, 634, 1165, 0, 294, 1172,
	295, 1171, 0, 1182, 296, 297, 298, 299, 300, 301,
	1118, 1151, 1083, 302, 1212, 1213, 641, 0, 303, 304,
	1158, 0, 1139, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144,
	1143, 1147, 330, 331, 332, 333, 334, 1175, 335, 337,
	1169, 1168, 1088, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1160, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 1094,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1183, 1184, 367, 1107, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 1167, 0, 0, 0, 371, 0, 372,
	373, 0, 2717, 1194, 374, 375, 376, 1180, 1181, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1190, 0, 1117, 387, 0, 388, 389, 390, 391, 392,
	1153, 1154, 1157, 472, 1196, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1195, 403, 1162, 1163, 0, 1123, 0, 405,
	406, 1197, 1155, 1198, 407, 408, 409, 1199, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1191, 1200, 421, 422, 1201, 0,
	423, 0, 0, 0, 424, 425, 428, 1146, 1145, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1202, 454,
	455, 456, 462, 464, 465, 460, 461, 463, 466, 467,
	458, 459, 1203, 468, 457, 1085, 276, 1204, 469, 470,
	1108, 1156, 471, 1170, 473, 474, 0, 0, 475, 0,
	0, 0, 477, 478, 479, 0, 0, 480, 481, 663,
	1205, 482, 1206, 1185, 483, 484, 1095, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 494, 495, 665,
	496, 497, 498, 666, 499, 500, 501, 1186, 502, 668,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 510,
	511, 512, 513, 1166, 514, 515, 517, 516, 518, 0,
	519, 0, 520, 521, 522, 0, 0, 0, 0, 0,
	523, 0, 525, 526, 527, 528, 524, 529, 530, 531,
	532, 533, 0, 534, 535, 536, 1207, 537, 538, 539,
	540, 541, 1096, 542, 0, 543, 544, 550, 551, 552,
	545, 546, 553, 554, 555, 556, 557, 0, 559, 560,
	558, 561, 562, 563, 1149, 564, 565, 547, 548, 566,
	567, 1208, 568, 569, 570, 571, 572, 573, 574, 1164,
	0, 575, 0, 576, 577, 578, 580, 549, 581, 586,
	587, 1211, 582, 583, 584, 585, 1187, 589, 590, 0,
	591, 592, 1082, 588, 579, 0, 593, 594, 595, 596,
	597, 598, 599, 361, 600, 0, 601, 1176, 1177, 1178,
	1179, 0, 610, 0, 602, 603, 604, 1188, 605, 1189,
	1106, 606, 607, 608, 609, 0, 611, 612, 0, 1089,
	613, 614, 615, 617, 618, 616, 619, 1150, 620, 0,
	0, 621, 622, 623, 680, 1173, 1210, 0, 625, 624,
	626, 683, 0, 627, 0, 0, 0, 0, 628, 629,
	684, 630, 631, 632, 1086, 0, 0, 0, 0, 1128,
	1100, 1101, 1102, 1098, 1099, 1111, 0, 1081, 0, 0,
	0, 0, 0, 0, 1079, 1080, 277, 279, 278, 280,
	281, 282, 283, 1112, 284, 285, 0, 1110, 0, 0,
	0, 1152, 1116, 0, 0, 0, 286, 287, 1192, 288,
	289, 290, 291, 292, 293, 634, 1165, 0, 294, 1172,
	295, 1171, 0, 1182, 296, 297, 298, 299, 300, 301,
	1118, 1151, 1083, 302, 1212, 1213, 641, 0, 303, 304,
	1158, 0, 1139, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144,
	1143, 1147, 330, 331, 332, 333, 334, 1175, 335, 337,
	1169, 1168, 1088, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1160, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 1094,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	1183, 1184, 367, 1107, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 1167, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1194, 374, 375, 376, 1180, 1181, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	1190, 0, 1117, 387, 0, 388, 389, 390, 391, 392,
	1153, 1154, 1157, 472, 1196, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 1195, 403, 1162, 1163, 0, 1123, 0, 405,
	406, 1197, 1155, 1198, 407, 408, 409, 1199, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 1191, 1200, 421, 422, 1201, 0,
	423, 0, 0, 0, 424, 425, 428, 1146, 1145, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1202, 454,
	455, 456, 462, 464, 465, 460, 461, 463, 466, 467,
	458, 459, 1203, 468, 457, 1085, 276, 1204, 469, 470,
	1108, 1156, 471, 1170, 473, 474, 0, 0, 475, 0,
	0, 0, 477, 478, 479, 0, 0, 480, 481, 663,
	1205, 482, 1206, 1185, 483, 484, 1095, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 494, 495, 665,
	496, 497, 498, 666, 499, 500, 501, 1186, 502, 668,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 510,
	511, 512, 513, 1166, 514, 515, 517, 516, 518, 0,
	519, 0, 520, 521, 522, 0, 0, 0, 0, 0,
	523, 0, 525, 526, 527, 528, 524, 529, 530, 531,
	532, 533, 0, 534, 535, 536, 1207, 537, 538, 539,
	540, 541, 1096, 542, 0, 543, 544, 550, 551, 552,
	545, 546, 553, 554, 555, 556, 557, 0, 559, 560,
	558, 561, 562, 563, 1149, 564, 565, 547, 548, 566,
	567, 1208, 568, 569, 570, 571, 572, 573, 574, 1164,
	0, 575, 0, 576, 577, 578, 580, 549, 581, 586,
	587, 1211, 582, 583, 584, 585, 1187, 589, 590, 0,
	591, 592, 1082, 588, 579, 0, 593, 594, 595, 596,
	597, 598, 599, 361, 600, 0, 601, 1176, 1177, 1178,
	1179, 0, 610, 0, 602, 603, 604, 1188, 605, 1189,
	1106, 606, 607, 608, 609, 0, 611, 612, 0, 1089,
	613, 614, 615, 617, 618, 616, 619, 1150, 620, 0,
	0, 621, 622, 623, 680, 1173, 1210, 0, 625, 624,
	626, 683, 0, 627, 0, 0, 0, 0, 628, 629,
	684, 630, 631, 632, 1086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 0, 1079, 1080, 0, 0, 0, 0,
	0, 0, 0, 1112, 1868, 0, 2722, 1110, 1128, 1100,
	1101, 1102, 1098, 1099, 1111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1152, 1116, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 1165, 0, 294, 1172, 295,
	1171, 0, 1182, 296, 297, 298, 299, 300, 301, 1118,
	1151, 1083, 302, 1212, 1213, 641, 0, 303, 304, 1158,
	0, 1139, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143,
	1147, 330, 331, 332, 333, 334, 1175, 335, 337, 1169,
	1168, 1088, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1160, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1094, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1183,
	1184, 367, 1107, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1167, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 1180, 1181, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1190,
	0, 1117, 387, 0, 388, 389, 390, 391, 392, 1153,
	1154, 1157, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1195, 403, 1162, 1163, 0, 1123, 0, 405, 406,
	1197, 1155, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1191, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 1146, 1145, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 1085, 276, 1204, 469, 470, 1108,
	1156, 471, 1170, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 1185, 483, 484, 1095, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 1186, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 1166, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 1096, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 1149, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 1164, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	1211, 582, 583, 584, 585, 1187, 589, 590, 0, 591,
	592, 1082, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 1176, 1177, 1178, 1179,
	0, 610, 0, 602, 603, 604, 1188, 605, 1189, 1106,
	606, 607, 608, 609, 0, 611, 612, 0, 1089, 613,
	614, 615, 617, 618, 616, 619, 1150, 620, 0, 0,
	621, 622, 623, 680, 1173, 1210, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 1086, 0, 0, 2720, 0, 1128, 1100,
	1101, 1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0,
	0, 0, 0, 1079, 1080, 277, 279, 278, 280, 281,
	282, 283, 1112, 284, 285, 0, 1110, 0, 0, 0,
	1152, 1116, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 1165, 0, 294, 1172, 295,
	1171, 0, 1182, 296, 297, 298, 299, 300, 301, 1118,
	1151, 1083, 302, 1212, 1213, 641, 0, 303, 304, 1158,
	0, 1139, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143,
	1147, 330, 331, 332, 333, 334, 1175, 335, 337, 1169,
	1168, 1088, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1160, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1094, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1183,
	1184, 367, 1107, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1167, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 1180, 1181, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1190,
	0, 1117, 387, 0, 388, 389, 390, 391, 392, 1153,
	1154, 1157, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1195, 403, 1162, 1163, 0, 1123, 0, 405, 406,
	1197, 1155, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1191, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 1146, 1145, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 1085, 276, 1204, 469, 470, 1108,
	1156, 471, 1170, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 1185, 483, 484, 1095, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 1186, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 1166, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 1096, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 1149, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 1164, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	1211, 582, 583, 584, 585, 1187, 589, 590, 0, 591,
	592, 1082, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 1176, 1177, 1178, 1179,
	0, 610, 0, 602, 603, 604, 1188, 605, 1189, 1106,
	606, 607, 608, 609, 0, 611, 612, 0, 1089, 613,
	614, 615, 617, 618, 616, 619, 1150, 620, 0, 0,
	621, 622, 623, 680, 1173, 1210, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 1086, 0, 0, 2708, 0, 1128, 1100,
	1101, 1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0,
	0, 0, 0, 1079, 1080, 277, 279, 278, 280, 281,
	282, 283, 1112, 284, 285, 0, 1110, 0, 0, 0,
	1152, 1116, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 1165, 0, 294, 1172, 295,
	1171, 0, 1182, 296, 297, 298, 299, 300, 301, 1118,
	1151, 1083, 302, 1212, 1213, 641, 0, 303, 304, 1158,
	0, 1139, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143,
	1147, 330, 331, 332, 333, 334, 1175, 335, 337, 1169,
	1168, 1088, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1160, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1094, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1183,
	1184, 367, 1107, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1167, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 1180, 1181, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1190,
	0, 1117, 387, 0, 388, 389, 390, 391, 392, 1153,
	1154, 1157, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1195, 403, 1162, 1163, 0, 1123, 0, 405, 406,
	1197, 1155, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1191, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 1146, 1145, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 1085, 276, 1204, 469, 470, 1108,
	1156, 471, 1170, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 1185, 483, 484, 1095, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 1186, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 1166, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 1096, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 1149, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 1164, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	1211, 582, 583, 584, 585, 1187, 589, 590, 0, 591,
	592, 1082, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 1176, 1177, 1178, 1179,
	0, 610, 0, 602, 603, 604, 1188, 605, 1189, 1106,
	606, 607, 608, 609, 0, 611, 612, 0, 1089, 613,
	614, 615, 617, 618, 616, 619, 1150, 620, 0, 0,
	621, 622, 623, 680, 1173, 1210, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 1086, 0, 0, 2696, 0, 1128, 1100,
	1101, 1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0,
	0, 0, 0, 1079, 1080, 277, 279, 278, 280, 281,
	282, 283, 1112, 284, 285, 0, 1110, 0, 0, 0,
	1152, 1116, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 1165, 0, 294, 1172, 295,
	1171, 0, 1182, 296, 297, 298, 299, 300, 301, 1118,
	1151, 1083, 302, 1212, 1213, 641, 0, 303, 304, 1158,
	0, 1139, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143,
	1147, 330, 331, 332, 333, 334, 1175, 335, 337, 1169,
	1168, 1088, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1160, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1094, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1183,
	1184, 367, 1107, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1167, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 1180, 1181, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1190,
	0, 1117, 387, 0, 388, 389, 390, 391, 392, 1153,
	1154, 1157, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1195, 403, 1162, 1163, 0, 1123, 0, 405, 406,
	1197, 1155, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1191, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 1146, 1145, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 1085, 276, 1204, 469, 470, 1108,
	1156, 471, 1170, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 1185, 483, 484, 1095, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 1186, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 1166, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 1096, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 1149, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 1164, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	1211, 582, 583, 584, 585, 1187, 589, 590, 0, 591,
	592, 1082, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 1176, 1177, 1178, 1179,
	0, 610, 0, 602, 603, 604, 1188, 605, 1189, 1106,
	606, 607, 608, 609, 0, 611, 612, 0, 1089, 613,
	614, 615, 617, 618, 616, 619, 1150, 620, 0, 0,
	621, 622, 623, 680, 1173, 1210, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 1086, 0, 0, 2694, 0, 2685, 2692,
	1101, 1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0,
	0, 0, 0, 1079, 1080, 277, 279, 278, 280, 281,
	282, 283, 1112, 284, 285, 0, 1110, 0, 0, 0,
	1152, 1116, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 1165, 0, 294, 1172, 295,
	1171, 0, 1182, 296, 297, 298, 299, 300, 301, 1118,
	1151, 1083, 302, 1212, 1213, 641, 0, 303, 304, 1158,
	0, 1139, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143,
	1147, 330, 331, 332, 333, 334, 1175, 2688, 337, 1169,
	1168, 1088, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1160, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1094, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1183,
	1184, 367, 1107, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1167, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 1180, 1181, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1190,
	0, 1117, 387, 0, 388, 389, 390, 2689, 392, 1153,
	1154, 1157, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1195, 403, 1162, 1163, 0, 1123, 0, 405, 406,
	1197, 1155, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1191, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 1146, 1145, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 2690,
	438, 2687, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 1085, 276, 1204, 469, 470, 1108,
	1156, 471, 1170, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 1185, 483, 484, 1095, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 1186, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 1166, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 1096, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 2691, 0, 559, 560, 558,
	561, 562, 563, 1149, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 1164, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	1211, 582, 583, 584, 585, 1187, 589, 590, 0, 591,
	592, 1082, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 1176, 1177, 1178, 1179,
	0, 610, 0, 602, 603, 604, 1188, 605, 1189, 1106,
	606, 607, 608, 609, 0, 611, 612, 0, 1089, 613,
	614, 615, 617, 618, 616, 619, 1150, 620, 0, 0,
	621, 622, 623, 680, 1173, 1210, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 2686, 632, 1086, 0, 0, 2682, 0, 2685, 2692,
	1101, 1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0,
	0, 0, 0, 1079, 1080, 277, 279, 278, 280, 281,
	282, 283, 1112, 284, 285, 0, 1110, 0, 0, 0,
	1152, 1116, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 1165, 0, 294, 1172, 295,
	1171, 0, 1182, 296, 297, 298, 299, 300, 301, 1118,
	1151, 1083, 302, 1212, 1213, 641, 0, 303, 304, 1158,
	0, 1139, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143,
	1147, 330, 331, 332, 333, 334, 1175, 2688, 337, 1169,
	1168, 1088, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1160, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1094, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1183,
	1184, 367, 1107, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1167, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 1180, 1181, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1190,
	0, 1117, 387, 0, 388, 389, 390, 2689, 392, 1153,
	1154, 1157, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1195, 403, 1162, 1163, 0, 1123, 0, 405, 406,
	1197, 1155, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1191, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 1146, 1145, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 2690,
	438, 2687, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 1085, 276, 1204, 469, 470, 1108,
	1156, 471, 1170, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 1185, 483, 484, 1095, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 1186, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 1166, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 1096, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 2691, 0, 559, 560, 558,
	561, 562, 563, 1149, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 1164, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	1211, 582, 583, 584, 585, 1187, 589, 590, 0, 591,
	592, 1082, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 1176, 1177, 1178, 1179,
	0, 610, 0, 602, 603, 604, 1188, 605, 1189, 1106,
	606, 607, 608, 609, 0, 611, 612, 0, 1089, 613,
	614, 615, 617, 618, 616, 619, 1150, 620, 0, 0,
	621, 622, 623, 680, 1173, 1210, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 2686, 632, 1086, 0, 0, 0, 0, 1128, 1100,
	1101, 1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0,
	0, 0, 0, 1079, 1080, 277, 279, 278, 280, 281,
	282, 283, 1112, 284, 285, 0, 1110, 0, 0, 0,
	1152, 1116, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 1165, 0, 294, 1172, 295,
	1171, 0, 1182, 296, 297, 298, 299, 300, 301, 1118,
	1151, 1083, 302, 1212, 1213, 641, 0, 303, 304, 1158,
	0, 1139, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143,
	1147, 330, 331, 332, 333, 334, 1175, 335, 337, 1169,
	1168, 1088, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1160, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 1094, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1183,
	1184, 367, 1107, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 1167, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 1180, 1181, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1190,
	0, 1117, 387, 0, 388, 389, 390, 391, 392, 1153,
	1154, 1157, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1195, 403, 1162, 1163, 0, 1123, 0, 405, 406,
	1197, 1155, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 1191, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 1146, 1145, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 1085, 276, 1204, 469, 470, 1108,
	1156, 471, 1170, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 1185, 483, 484, 1095, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 1186, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 1166, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 1096, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 1149, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 1164, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	1211, 582, 583, 584, 585, 1187, 589, 590, 0, 591,
	592, 1082, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 1176, 1177, 1178, 1179,
	0, 610, 0, 602, 603, 604, 1188, 605, 1189, 1106,
	606, 607, 608, 609, 0, 611, 612, 0, 1089, 613,
	614, 615, 617, 618, 616, 619, 1150, 620, 0, 0,
	621, 622, 623, 680, 1173, 1210, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1081, 0, 0, 0,
	0, 0, 0, 1079, 1080, 0, 0, 0, 0, 0,
	1876, 0, 1112, 0, 0, 0, 1110, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 2437, 284, 285, 0, 0, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 2401, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 2376, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 1716, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 1645, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 1640, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 1631, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 1626, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 1537, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1536, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 1531, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1530, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 1524, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 1339, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 0, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 0, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 4732, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 4731, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 0, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 4730, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 4732, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 4731, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 0, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 4355, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	4356, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 4354, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 0, 0, 1128, 1100, 1101,
	1102, 3185, 3186, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 0, 0, 1128, 1100, 1101,
	1102, 3183, 3184, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 0, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 1086, 0, 0, 0, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 1081, 0, 0, 0, 0,
	0, 0, 2445, 2446, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	0, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 0, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	0, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 2704, 0, 0, 0, 0,
	0, 0, 2702, 2703, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	0, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 0, 276, 1204, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	3178, 3179, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	0, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 1128, 1100, 1101,
	1102, 1098, 1099, 1111, 0, 0, 0, 0, 0, 0,
	0, 0, 2120, 2121, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	1116, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 0, 1165, 0, 294, 1172, 295, 1171,
	0, 1182, 296, 297, 298, 299, 300, 301, 1118, 1151,
	1083, 302, 1212, 1213, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 4732, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 1175, 335, 337, 1169, 1168,
	1088, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1160, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 1094, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 1107, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 1167, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 1180, 1181, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	1117, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 1162, 1163, 0, 1123, 0, 405, 406, 0,
	1155, 0, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 1085, 276, 0, 469, 470, 1108, 1156,
	471, 1170, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 1095, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 1166, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	1096, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 1164, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 1211,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	1082, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 1176, 1177, 1178, 1179, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 1106, 606,
	607, 608, 609, 0, 4731, 612, 0, 1089, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 680, 1173, 1210, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 1072, 0, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1079, 1080, 277, 279, 278, 280, 281, 282,
	283, 1112, 284, 285, 0, 1110, 0, 0, 0, 1152,
	0, 0, 0, 0, 286, 287, 1192, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 1151,
	0, 302, 639, 640, 641, 0, 303, 304, 1158, 0,
	1139, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1193,
	327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147,
	330, 331, 332, 333, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 1183, 1184,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 1194, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 1190, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 1153, 1154,
	1157, 472, 1196, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	1195, 403, 656, 657, 0, 658, 0, 405, 406, 1197,
	1155, 1198, 407, 408, 409, 1199, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 1236, 417, 419, 418,
	0, 420, 1191, 1200, 421, 422, 1201, 0, 423, 0,
	0, 0, 424, 425, 428, 1146, 1145, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 1202, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	1203, 468, 457, 0, 276, 1204, 469, 470, 0, 1156,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 1242,
	477, 478, 479, 0, 0, 480, 481, 663, 1205, 482,
	1206, 1185, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 1186, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 1207, 537, 538, 539, 540, 541,
	670, 1244, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 236, 559, 560, 558, 561,
	562, 563, 1149, 564, 565, 547, 548, 566, 567, 1208,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 1187, 589, 590, 0, 591, 592,
	0, 588, 579, 238, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 674, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 1188, 605, 1189, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 1150, 620, 0, 0, 621,
	622, 623, 1615, 681, 682, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 230, 628, 629, 684, 630,
	631, 632, 1250, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 1240,
	0, 1963, 0, 0, 1152, 0, 0, 0, 0, 286,
	287, 1192, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 1151, 0, 302, 639, 640, 641,
	0, 303, 304, 1158, 0, 1139, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1193, 327, 328, 329, 1142, 1140,
	1141, 1148, 1144, 1143, 1147, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1183, 1184, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1194, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1190, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 1153, 1154, 1157, 472, 1196, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1195, 403, 656, 657, 0,
	658, 0, 405, 406, 1197, 1155, 1198, 407, 408, 409,
	1199, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 1236, 417, 419, 418, 0, 420, 1191, 1200, 421,
	422, 1201, 0, 423, 0, 0, 0, 424, 425, 428,
	1146, 1145, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1202, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 1203, 468, 457, 0, 276,
	1204, 469, 470, 0, 1156, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 1242, 477, 478, 479, 0, 0,
	480, 481, 663, 1205, 482, 1206, 1185, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	1186, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 1207,
	537, 538, 539, 540, 541, 670, 1244, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	236, 559, 560, 558, 561, 562, 563, 1149, 564, 565,
	547, 548, 566, 567, 1208, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 1187,
	589, 590, 0, 591, 592, 0, 588, 579, 238, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	1188, 605, 1189, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	1150, 620, 0, 0, 621, 622, 623, 1615, 681, 682,
	0, 625, 624, 626, 683, 0, 627, 0, 0, 0,
	230, 628, 629, 684, 630, 631, 632, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 3342, 0,
	1250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 0, 1963, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1152, 0, 0, 0, 0, 286, 287, 1192,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 1151, 0, 302, 639, 640, 641, 0, 303,
	304, 1158, 0, 1139, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1193, 327, 328, 329, 1142, 1140, 1141, 1148,
	1144, 1143, 1147, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 1183, 1184, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 1194, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 1190, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 1153, 1154, 1157, 472, 1196, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 1195, 403, 656, 657, 0, 658, 0,
	405, 406, 1197, 1155, 1198, 407, 408, 409, 1199, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 1236,
	417, 419, 418, 0, 420, 1191, 1200, 421, 422, 1201,
	0, 423, 0, 0, 0, 424, 425, 428, 1146, 1145,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 1202,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 1203, 468, 457, 0, 276, 1204, 469,
	470, 0, 1156, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 1242, 477, 478, 479, 0, 0, 480, 481,
	663, 1205, 482, 1206, 1185, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 1186, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 1207, 537, 538,
	539, 540, 541, 670, 1244, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 1149, 564, 565, 547, 548,
	566, 567, 1208, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 1187, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 1188, 605,
	1189, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 1150, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 0, 627, 0, 1232, 0, 1250, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1152, 0, 1240, 0, 1238, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 0, 638, 296, 297, 298, 299, 300, 301, 0,
	1151, 0, 302, 639, 640, 641, 0, 303, 304, 1158,
	0, 1139, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 1142, 1140, 1141, 1148, 1144, 1143,
	1147, 330, 331, 332, 333, 334, 0, 335, 337, 643,
	644, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 1183,
	1184, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 1190,
	0, 652, 387, 0, 388, 389, 390, 391, 392, 1153,
	1154, 1157, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 1195, 403, 656, 657, 0, 658, 0, 405, 406,
	1197, 1155, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 1236, 417, 419,
	418, 0, 420, 1191, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 1146, 1145, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 0, 276, 1204, 469, 470, 0,
	1156, 471, 662, 473, 474, 0, 0, 475, 0, 0,
	1242, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 1185, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 1186, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 670, 1244, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 1149, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 1187, 589, 590, 0, 591,
	592, 0, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 674, 675, 676, 677,
	0, 610, 0, 602, 603, 604, 1188, 605, 1189, 0,
	606, 607, 608, 609, 0, 611, 612, 0, 0, 613,
	614, 615, 617, 618, 616, 619, 1150, 620, 0, 0,
	621, 622, 623, 680, 681, 682, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 1250, 628, 629, 684,
	630, 631, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 1152, 0,
	1240, 0, 1238, 286, 287, 1192, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 1151, 0,
	302, 639, 640, 641, 0, 303, 304, 1158, 0, 1139,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1193, 327,
	328, 329, 1142, 1140, 1141, 1148, 1144, 1143, 1147, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 1183, 1184, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1194, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 1190, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 1153, 1154, 1157,
	472, 1196, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 1195,
	403, 656, 657, 0, 658, 0, 405, 406, 1197, 1155,
	1198, 407, 408, 409, 1199, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 1236, 417, 419, 418, 0,
	420, 1191, 1200, 421, 422, 1201, 0, 423, 0, 0,
	0, 424, 425, 428, 1146, 1145, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1202, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 1203,
	468, 457, 0, 276, 1204, 469, 470, 0, 1156, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 1242, 477,
	478, 479, 0, 0, 480, 481, 663, 1205, 482, 1206,
	1185, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 1186, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 1207, 537, 538, 539, 540, 541, 670,
	1244, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 1149, 564, 565, 547, 548, 566, 567, 1208, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 1187, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 1188, 605, 1189, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 1150, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 0, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 1250, 628, 629, 684, 630, 631,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1152, 0, 1240, 0,
	1238, 286, 287, 1192, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 1151, 0, 302, 639,
	640, 641, 0, 303, 304, 1158, 0, 1139, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1193, 327, 328, 329,
	1142, 1140, 1141, 1148, 1144, 1143, 1147, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1183, 1184, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1194, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1190, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 1153, 1154, 1157, 472, 1196,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1195, 403, 656,
	657, 0, 658, 0, 405, 406, 1197, 1155, 1198, 407,
	408, 409, 1199, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1191,
	1200, 421, 422, 1201, 0, 423, 0, 0, 0, 424,
	425, 428, 1146, 1145, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1202, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 1203, 468, 457,
	0, 276, 1204, 469, 470, 0, 1156, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 1205, 482, 1206, 1185, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 1186, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 1207, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 1149,
	564, 565, 547, 548, 566, 567, 1208, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 1187, 589, 590, 0, 591, 592, 0, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 1188, 605, 1189, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 1150, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 0, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 1250, 628, 629, 684, 630, 631, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1152, 0, 0, 0, 4176, 286,
	287, 1192, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 1151, 0, 302, 639, 640, 641,
	0, 303, 304, 1158, 0, 1139, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1193, 327, 328, 329, 1142, 1140,
	1141, 1148, 1144, 1143, 1147, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 1183, 1184, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1194, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 1190, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 1153, 1154, 1157, 472, 1196, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 1195, 403, 656, 657, 0,
	658, 0, 405, 406, 1197, 1155, 1198, 407, 408, 409,
	1199, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 1191, 1200, 421,
	422, 1201, 0, 423, 0, 0, 0, 424, 425, 428,
	1146, 1145, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1202, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 1203, 468, 457, 0, 276,
	1204, 469, 470, 0, 1156, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 1205, 482, 1206, 1185, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	1186, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 1207,
	537, 538, 539, 540, 541, 670, 1244, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 1149, 564, 565,
	547, 548, 566, 567, 1208, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 1187,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	1188, 605, 1189, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	1150, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	0, 625, 624, 626, 683, 0, 627, 271, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 2549, 2550, 2551,
	2568, 2569, 2570, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 2571, 0, 633,
	0, 0, 0, 0, 286, 287, 1860, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 0,
	1845, 302, 639, 640, 641, 0, 303, 304, 642, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 2561,
	0, 313, 314, 315, 312, 316, 0, 317, 2557, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 0, 0, 0, 2562, 2563, 2564, 2565, 368, 369,
	370, 648, 0, 0, 2556, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 651, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 653, 654,
	655, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 656, 657, 0, 658, 0, 405, 406, 0,
	659, 0, 407, 408, 409, 0, 410, 0, 2566, 2567,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 660, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 2559, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	0, 468, 457, 0, 0, 0, 469, 470, 0, 661,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 0, 482,
	0, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 540, 541,
	670, 542, 2560, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 0, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 0, 591, 592,
	1844, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 674, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 678, 605, 679, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 0, 620, 0, 0, 621,
	622, 623, 680, 681, 682, 0, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 1072,
	0, 1332, 2546, 2547, 2548, 2572, 2558, 2552, 0, 2554,
	2555, 2553, 2540, 2541, 2542, 2543, 2544, 2545, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 1337, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 1195, 403, 656, 657, 0, 658,
	0, 405, 406, 1197, 659, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 0, 0, 1204,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 236,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 238, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 1615, 681, 682, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 230,
	628, 629, 684, 630, 631, 632, 0, 0, 231, 1612,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 190, 284, 285, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 1337, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 1195, 403, 656, 657, 0, 658,
	0, 405, 406, 1197, 659, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 0, 0, 1204,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 236,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 238, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 1615, 681, 682, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 230,
	628, 629, 684, 630, 631, 632, 1332, 1331, 231, 0,
	0, 0, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 190, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 1192, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 1337,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1193, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1194, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 1196, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1195,
	403, 656, 657, 0, 658, 0, 405, 406, 1197, 659,
	1198, 407, 408, 409, 1199, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 1200, 421, 422, 1201, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1202, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 1203,
	468, 457, 0, 0, 1204, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 1205, 482, 1206,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 1207, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 1208, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 0, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 1332, 1331, 0, 0, 0, 0, 1329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	1637, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 1337, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 1195, 403, 656, 657, 0, 658,
	0, 405, 406, 1197, 659, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 0, 0, 1204,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 680, 681, 682, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 1332, 1331, 0, 0,
	0, 0, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 3639, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 1192, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 1337,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1193, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1194, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 1196, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1195,
	403, 656, 657, 0, 658, 0, 405, 406, 1197, 659,
	1198, 407, 408, 409, 1199, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 1200, 421, 422, 1201, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1202, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 1203,
	468, 457, 0, 0, 1204, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 1205, 482, 1206,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 2318, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 1207, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 1208, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 0, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 1332, 2229, 0, 0, 0, 0, 2230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	1637, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 1337, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 1195, 403, 656, 657, 0, 658,
	0, 405, 406, 1197, 659, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 2228, 419, 418, 0, 420, 660, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 0, 0, 1204,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 1205, 482, 1206, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 680, 681, 682, 0,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 1332, 1331, 0, 0,
	0, 0, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 1637, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 1192, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 1337,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1193, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1194, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 1196, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1195,
	403, 656, 657, 0, 658, 0, 405, 406, 1197, 659,
	1198, 407, 408, 409, 1199, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 1200, 421, 422, 1201, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1202, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 1203,
	468, 457, 0, 0, 1204, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 1205, 482, 1206,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 1207, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 1208, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 0, 625, 624, 626, 683, 1072,
	627, 271, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	1621, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 656, 657, 0, 658,
	0, 405, 406, 0, 659, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 0, 468, 457, 0, 0, 0,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 0, 482, 0, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 0, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 236,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 238, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 1615, 681, 682, 0,
	625, 624, 626, 683, 0, 627, 271, 0, 0, 230,
	628, 629, 684, 630, 631, 632, 0, 0, 231, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 190, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 0,
	403, 656, 657, 0, 658, 0, 405, 406, 0, 659,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 0,
	468, 457, 0, 276, 0, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 0, 482, 0,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 0, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 0, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 1250, 628, 629, 684, 630, 631,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1152, 0, 0, 0,
	1977, 286, 287, 1192, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 1151, 0, 302, 639,
	640, 641, 0, 303, 304, 1158, 0, 1139, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1193, 327, 328, 329,
	1142, 1140, 1141, 1148, 1144, 1143, 1147, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 1183, 1184, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 1194, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 1190, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 1153, 1154, 1157, 472, 1196,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 1195, 403, 656,
	657, 0, 658, 0, 405, 406, 1197, 1155, 1198, 407,
	408, 409, 1199, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 1191,
	1200, 421, 422, 1201, 0, 423, 0, 0, 0, 424,
	425, 428, 1146, 1145, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 1202, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 1203, 468, 457,
	0, 276, 1204, 469, 470, 0, 1156, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 1205, 482, 1206, 1185, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 1186, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 1207, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 1149,
	564, 565, 547, 548, 566, 567, 1208, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 1187, 589, 590, 0, 591, 592, 0, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 1188, 605, 1189, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 1150, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 0, 625, 624, 626, 683, 0, 627, 271,
	3084, 0, 0, 628, 629, 684, 630, 631, 632, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 634, 635, 0, 294, 636,
	295, 637, 0, 638, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 639, 640, 641, 0, 303, 304,
	642, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	643, 644, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 645,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	646, 647, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 648, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 649, 650, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	651, 0, 652, 387, 0, 388, 389, 390, 391, 392,
	653, 654, 655, 472, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 656, 657, 0, 658, 0, 405,
	406, 0, 659, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 660, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 462, 464, 465, 460, 461, 463, 466, 467,
	458, 459, 0, 468, 457, 0, 0, 0, 469, 470,
	0, 661, 471, 662, 473, 474, 0, 0, 475, 0,
	0, 0, 477, 478, 479, 0, 0, 480, 481, 663,
	0, 482, 0, 664, 483, 484, 476, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 494, 495, 665,
	496, 497, 498, 666, 499, 500, 501, 667, 502, 668,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 510,
	511, 512, 513, 669, 514, 515, 517, 516, 518, 0,
	519, 0, 520, 521, 522, 0, 0, 0, 0, 0,
	523, 0, 525, 526, 527, 528, 524, 529, 530, 531,
	532, 533, 0, 534, 535, 536, 0, 537, 538, 539,
	540, 541, 670, 542, 0, 543, 544, 550, 551, 552,
	545, 546, 553, 554, 555, 556, 557, 0, 559, 560,
	558, 561, 562, 563, 0, 564, 565, 547, 548, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 671,
	0, 575, 0, 576, 577, 578, 580, 549, 581, 586,
	587, 672, 582, 583, 584, 585, 673, 589, 590, 0,
	591, 592, 0, 588, 579, 0, 593, 594, 595, 596,
	597, 598, 599, 361, 600, 0, 601, 674, 675, 676,
	677, 0, 610, 0, 602, 603, 604, 678, 605, 679,
	0, 606, 607, 608, 609, 0, 611, 612, 0, 0,
	613, 614, 615, 617, 618, 616, 619, 0, 620, 0,
	0, 621, 622, 623, 680, 681, 682, 0, 625, 624,
	626, 683, 0, 627, 271, 0, 0, 0, 628, 629,
	684, 630, 631, 632, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 286, 287, 4901, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 639,
	640, 641, 0, 303, 304, 642, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 651, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 653, 654, 655, 472, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 0, 403, 656,
	657, 0, 658, 0, 405, 406, 0, 659, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 660,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 0, 468, 457,
	0, 276, 0, 469, 470, 0, 661, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 0, 482, 0, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 0,
	564, 565, 547, 548, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 0, 591, 592, 0, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 678, 605, 679, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 0, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 0, 625, 624, 626, 683, 271, 627, 0,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 286, 287, 3589, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 639, 640, 641, 0, 303, 304, 642, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 651, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 653, 654,
	655, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 656, 657, 0, 658, 0, 405, 406, 0,
	659, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 660, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	0, 468, 457, 0, 276, 0, 469, 470, 0, 661,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 0, 482,
	0, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 540, 541,
	670, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 0, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 0, 591, 592,
	0, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 674, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 678, 605, 679, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 0, 620, 0, 0, 621,
	622, 623, 680, 681, 682, 0, 625, 624, 626, 683,
	271, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 1609,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 0, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 3072, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 0, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 0, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 3752,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 906, 627, 811, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 2307, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 818, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 904, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 276, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 816, 593, 594, 595, 596, 597, 817, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 811, 625, 624, 626, 683, 0, 627,
	0, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	277, 279, 278, 280, 281, 282, 283, 2046, 284, 285,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	286, 287, 821, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 0, 638, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 639, 640,
	641, 0, 303, 304, 642, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 818,
	334, 0, 335, 337, 643, 644, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 651, 0, 652, 387, 0, 388,
	389, 390, 391, 392, 653, 654, 655, 472, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 656, 657,
	0, 658, 0, 405, 406, 0, 659, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 660, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 0, 468, 457, 0,
	276, 0, 469, 470, 0, 661, 471, 662, 473, 474,
	0, 0, 475, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 481, 663, 0, 482, 0, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	0, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 0, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 0, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 0, 534, 535, 536,
	0, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 2045, 554, 555, 556,
	557, 0, 2047, 560, 558, 561, 562, 563, 0, 564,
	565, 547, 548, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 0, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 0, 591, 592, 0, 588, 579, 816,
	593, 594, 595, 596, 597, 817, 599, 361, 600, 0,
	601, 674, 675, 676, 677, 0, 610, 0, 602, 603,
	604, 678, 605, 679, 0, 606, 607, 2044, 609, 0,
	611, 612, 0, 0, 613, 614, 615, 617, 618, 616,
	619, 0, 620, 0, 0, 621, 622, 623, 680, 681,
	682, 811, 625, 624, 626, 683, 0, 627, 0, 0,
	0, 0, 628, 629, 684, 630, 631, 632, 277, 279,
	278, 280, 281, 282, 283, 1997, 284, 285, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	821, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 818, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 656, 657, 0, 658,
	0, 405, 406, 0, 659, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 0, 468, 457, 0, 276, 0,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 0, 482, 0, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 0, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 1996, 554, 555, 556, 557, 0,
	1998, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 816, 593, 594,
	595, 596, 597, 817, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 1995, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 680, 681, 682, 0,
	625, 624, 626, 683, 0, 627, 809, 0, 811, 0,
	628, 629, 684, 630, 631, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 821, 0,
	633, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 0, 638, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 639, 640, 641, 0, 303, 304, 642,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 818, 334, 0, 335, 337, 643,
	644, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 646,
	647, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 651,
	0, 652, 387, 0, 388, 389, 390, 391, 392, 653,
	654, 655, 472, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 275, 400, 401, 402, 404,
	0, 0, 403, 656, 657, 0, 658, 0, 405, 406,
	0, 659, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 660, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 0, 468, 457, 0, 276, 0, 469, 470, 0,
	661, 471, 662, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 0,
	482, 0, 664, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 667, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 0, 537, 538, 539, 540,
	541, 670, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 0, 564, 565, 547, 548, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 673, 589, 590, 0, 591,
	592, 0, 588, 579, 816, 593, 594, 595, 596, 597,
	817, 599, 361, 600, 0, 601, 674, 675, 676, 677,
	0, 610, 0, 602, 603, 604, 678, 605, 679, 0,
	606, 607, 608, 609, 0, 611, 612, 0, 0, 613,
	614, 615, 617, 618, 616, 619, 0, 620, 0, 0,
	621, 622, 623, 680, 681, 682, 0, 625, 624, 626,
	683, 2019, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 0, 0, 821, 0, 0, 286, 287,
	1192, 288, 289, 290, 291, 292, 293, 0, 2025, 0,
	294, 2015, 295, 2031, 0, 2038, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 2041, 2042, 0, 0,
	303, 304, 0, 0, 1337, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1193, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 1175,
	335, 337, 2029, 2028, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1160,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 0, 0, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 2027, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 1194, 374, 375, 376, 2036,
	2037, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 0, 0, 0, 387, 0, 388, 389, 390,
	391, 392, 0, 0, 0, 472, 1196, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 1195, 403, 2022, 2023, 0, 2018,
	0, 405, 406, 1197, 0, 1198, 407, 408, 409, 1199,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 0, 1200, 421, 422,
	1201, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	1202, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 1203, 468, 457, 0, 0, 1204,
	469, 470, 0, 0, 471, 2030, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 0, 1205, 482, 1206, 0, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 2012, 496, 497, 498, 2013, 499, 500, 501, 0,
	502, 0, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 2026, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 1207, 537,
	538, 539, 540, 541, 0, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 1208, 568, 569, 570, 571, 572, 573,
	574, 2024, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 2040, 582, 583, 584, 585, 0, 589,
	590, 0, 591, 592, 0, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 2032,
	2033, 2034, 2035, 0, 610, 0, 602, 603, 604, 0,
	605, 0, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 0, 2016, 2039, 0,
	625, 624, 626, 0, 0, 627, 0, 0, 0, 0,
	628, 629, 0, 630, 631, 632, 811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 2006,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 818, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 0,
	403, 656, 657, 0, 658, 0, 405, 406, 0, 659,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 0,
	468, 457, 0, 276, 0, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 0, 482, 0,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 0, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 816, 593, 594, 595, 596, 597, 817, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 811, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 286, 287, 821, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 639,
	640, 641, 0, 303, 304, 642, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	818, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 651, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 653, 654, 655, 472, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 0, 403, 656,
	657, 0, 658, 0, 405, 406, 0, 659, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 660,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 0, 468, 457,
	0, 276, 0, 469, 470, 0, 661, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 0, 482, 0, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 0, 2355, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 2356, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 0,
	564, 565, 547, 548, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 0, 591, 592, 0, 588, 579,
	816, 593, 594, 595, 596, 597, 817, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 678, 605, 679, 0, 606, 607, 2357, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 0, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 271, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 821, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 653, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 276,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	0, 625, 624, 626, 683, 0, 627, 0, 1332, 2094,
	0, 628, 629, 684, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 821,
	633, 0, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 0, 638, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 639, 640, 641, 0, 303, 304, 642,
	0, 1337, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	3035, 330, 331, 332, 333, 334, 0, 335, 337, 643,
	644, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 646,
	647, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 651,
	0, 652, 387, 0, 388, 389, 390, 391, 392, 653,
	654, 655, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 1195, 403, 656, 657, 0, 658, 0, 405, 406,
	1197, 659, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 660, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 0, 0, 1204, 469, 470, 0,
	661, 471, 662, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 664, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 667, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 670, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 3036, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 673, 589, 590, 0, 591,
	592, 0, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 674, 675, 676, 677,
	0, 610, 0, 602, 603, 604, 678, 605, 679, 0,
	606, 607, 608, 609, 0, 611, 612, 0, 0, 613,
	614, 615, 617, 618, 616, 619, 0, 620, 0, 0,
	621, 622, 623, 680, 681, 682, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 1332, 1331, 0, 0, 0, 0, 1329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	286, 287, 1192, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 0, 638, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 639, 640,
	641, 0, 303, 304, 642, 0, 1337, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1193, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 643, 644, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1194, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 651, 0, 652, 387, 0, 388,
	389, 390, 391, 392, 653, 654, 655, 472, 1196, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 1195, 403, 656, 657,
	0, 658, 0, 405, 406, 1197, 659, 1198, 407, 408,
	409, 1199, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 660, 1200,
	421, 422, 1201, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1202, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 1203, 468, 457, 0,
	0, 1204, 469, 470, 3946, 661, 471, 662, 473, 474,
	0, 0, 475, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 481, 663, 1205, 482, 1206, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	0, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 0, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 0, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 0, 534, 535, 536,
	1207, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 0, 559, 560, 558, 561, 562, 563, 0, 564,
	565, 547, 548, 566, 567, 1208, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 0, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 0, 591, 592, 0, 588, 579, 0,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 0,
	601, 674, 675, 676, 677, 0, 610, 0, 602, 603,
	604, 678, 605, 679, 0, 606, 607, 608, 609, 0,
	611, 612, 0, 0, 613, 614, 615, 617, 618, 616,
	619, 0, 620, 0, 0, 621, 622, 623, 680, 681,
	682, 0, 625, 624, 626, 683, 0, 627, 0, 0,
	0, 0, 628, 629, 684, 630, 631, 632, 1332, 1331,
	0, 0, 0, 0, 1329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 0, 638, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 639, 640, 641, 0, 303, 304, 642,
	0, 1337, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 643,
	644, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 646,
	647, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 651,
	0, 652, 387, 0, 388, 389, 390, 391, 392, 653,
	654, 655, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 1195, 403, 656, 657, 0, 658, 0, 405, 406,
	1197, 659, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 660, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 0, 0, 1204, 469, 470, 3550,
	661, 471, 662, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 664, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 667, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 670, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 0, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 673, 589, 590, 0, 591,
	592, 0, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 674, 675, 676, 677,
	0, 610, 0, 602, 603, 604, 678, 605, 679, 0,
	606, 607, 608, 609, 0, 611, 612, 0, 0, 613,
	614, 615, 617, 618, 616, 619, 0, 620, 0, 0,
	621, 622, 623, 680, 681, 682, 0, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 1665, 0, 1332, 1331, 0, 0, 0,
	0, 1329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 1192, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 1337, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1193, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	274, 0, 0, 0, 0, 0, 1664, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 1194,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	1196, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 1195, 403,
	656, 657, 0, 658, 0, 405, 406, 1197, 659, 1198,
	407, 408, 409, 1199, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 1200, 421, 422, 1201, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 1202, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 1203, 468,
	457, 0, 0, 1204, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 1205, 482, 1206, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 1663, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 1207, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 1662,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 1208, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 0, 627,
	0, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	1583, 0, 1332, 1331, 0, 0, 0, 0, 1329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 1192, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 1337, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1193, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 1194, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 1582, 654, 655, 472, 1196, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 1195, 403, 656, 657, 0,
	658, 0, 405, 406, 1197, 659, 1198, 407, 408, 409,
	1199, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 1200, 421,
	422, 1201, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 1202, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 1203, 468, 457, 0, 0,
	1204, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 1205, 482, 1206, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 1207,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 1208, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	0, 625, 624, 626, 683, 0, 627, 0, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 1542, 0, 1332,
	1331, 0, 0, 0, 0, 1329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 286, 287, 1192, 288,
	289, 290, 291, 292, 293, 634, 635, 0, 294, 636,
	295, 637, 0, 638, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 639, 640, 641, 0, 303, 304,
	642, 0, 1337, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1193, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	643, 644, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 645,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	646, 647, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 648, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 1194, 374, 375, 376, 649, 650, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	651, 0, 652, 387, 0, 388, 389, 390, 391, 392,
	1544, 654, 655, 472, 1196, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 1195, 403, 656, 657, 0, 658, 0, 405,
	406, 1197, 659, 1198, 407, 408, 409, 1199, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 660, 1200, 421, 422, 1201, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 1202, 454,
	455, 456, 462, 464, 465, 460, 461, 463, 466, 467,
	458, 459, 1203, 468, 457, 0, 0, 1204, 469, 470,
	0, 661, 471, 662, 473, 474, 0, 0, 475, 0,
	0, 0, 477, 478, 479, 0, 0, 480, 481, 663,
	1205, 482, 1206, 664, 483, 484, 476, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 494, 495, 665,
	496, 497, 498, 666, 499, 500, 501, 667, 502, 668,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 510,
	511, 512, 513, 669, 514, 515, 517, 516, 518, 0,
	519, 0, 520, 521, 522, 0, 0, 0, 0, 0,
	523, 0, 525, 526, 527, 528, 524, 529, 530, 531,
	532, 533, 0, 534, 535, 536, 1207, 537, 538, 539,
	540, 541, 670, 542, 0, 543, 544, 550, 551, 552,
	545, 546, 553, 554, 555, 556, 557, 0, 559, 560,
	558, 561, 562, 563, 0, 564, 565, 547, 548, 566,
	567, 1208, 568, 569, 570, 571, 572, 573, 574, 671,
	0, 575, 0, 576, 577, 578, 580, 549, 581, 586,
	587, 672, 582, 583, 584, 585, 673, 589, 590, 0,
	591, 592, 0, 588, 579, 0, 593, 594, 595, 596,
	597, 598, 599, 361, 600, 0, 601, 674, 675, 676,
	677, 0, 610, 0, 602, 603, 604, 678, 605, 679,
	0, 606, 607, 608, 609, 0, 611, 612, 0, 0,
	613, 614, 615, 617, 618, 616, 619, 0, 620, 0,
	0, 621, 622, 623, 680, 681, 682, 0, 625, 624,
	626, 683, 0, 627, 0, 0, 0, 0, 628, 629,
	684, 630, 631, 632, 1507, 0, 1332, 1331, 0, 0,
	0, 0, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 1192, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 1337,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1193, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1194, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 1506, 654, 655,
	472, 1196, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1195,
	403, 656, 657, 0, 658, 0, 405, 406, 1197, 659,
	1198, 407, 408, 409, 1199, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 1200, 421, 422, 1201, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1202, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 1203,
	468, 457, 0, 0, 1204, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 1205, 482, 1206,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 1207, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 1208, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 0, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 1326, 0, 1332, 1331, 0, 0, 0, 0, 1329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	286, 287, 1192, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 0, 638, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 639, 640,
	641, 0, 303, 304, 642, 0, 1337, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1193, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 643, 644, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1194, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 651, 0, 652, 387, 0, 388,
	389, 390, 391, 392, 1325, 654, 655, 472, 1196, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 1195, 403, 656, 657,
	0, 658, 0, 405, 406, 1197, 659, 1198, 407, 408,
	409, 1199, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 660, 1200,
	421, 422, 1201, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1202, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 1203, 468, 457, 0,
	0, 1204, 469, 470, 0, 661, 471, 662, 473, 474,
	0, 0, 475, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 481, 663, 1205, 482, 1206, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	0, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 0, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 0, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 0, 534, 535, 536,
	1207, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 0, 559, 560, 558, 561, 562, 563, 0, 564,
	565, 547, 548, 566, 567, 1208, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 0, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 0, 591, 592, 0, 588, 579, 0,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 0,
	601, 674, 675, 676, 677, 0, 610, 0, 602, 603,
	604, 678, 605, 679, 0, 606, 607, 608, 609, 0,
	611, 612, 0, 0, 613, 614, 615, 617, 618, 616,
	619, 0, 620, 0, 0, 621, 622, 623, 680, 681,
	682, 0, 625, 624, 626, 683, 0, 627, 0, 0,
	0, 0, 628, 629, 684, 630, 631, 632, 1332, 1331,
	0, 0, 0, 0, 1329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 0, 638, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 639, 640, 641, 0, 303, 304, 642,
	0, 1337, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 643,
	644, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 646,
	647, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 651,
	0, 652, 387, 0, 388, 389, 390, 391, 392, 653,
	654, 655, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 1195, 403, 656, 657, 0, 658, 0, 405, 406,
	1197, 659, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 660, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 0, 0, 1204, 469, 470, 0,
	661, 471, 662, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 664, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 667, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 670, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 0, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 673, 589, 590, 0, 591,
	592, 0, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 674, 675, 676, 677,
	0, 610, 0, 602, 603, 604, 678, 605, 679, 0,
	606, 607, 608, 609, 0, 611, 612, 0, 0, 613,
	614, 615, 617, 618, 616, 619, 0, 620, 0, 0,
	621, 622, 623, 680, 681, 682, 0, 625, 624, 626,
	683, 0, 627, 1332, 2094, 0, 0, 628, 629, 684,
	630, 631, 632, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	286, 287, 1192, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 0, 638, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 639, 640,
	641, 0, 303, 304, 642, 0, 1337, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1193, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 643, 644, 2091, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 1194, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 651, 0, 652, 387, 0, 388,
	389, 390, 391, 392, 653, 654, 655, 472, 1196, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 1195, 403, 656, 657,
	0, 658, 0, 405, 406, 1197, 659, 1198, 407, 408,
	409, 1199, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 660, 1200,
	421, 422, 1201, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 1202, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 1203, 468, 457, 0,
	0, 1204, 469, 470, 0, 661, 471, 662, 473, 474,
	0, 0, 475, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 481, 663, 1205, 482, 1206, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	0, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 0, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 0, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 0, 534, 535, 536,
	1207, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 0, 559, 560, 558, 561, 562, 563, 0, 564,
	565, 547, 548, 566, 567, 1208, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 0, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 0, 591, 592, 0, 588, 579, 0,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 0,
	601, 674, 675, 676, 677, 0, 610, 0, 602, 603,
	604, 678, 605, 679, 0, 606, 607, 608, 609, 0,
	611, 612, 0, 0, 613, 614, 615, 617, 618, 616,
	619, 0, 620, 0, 0, 621, 622, 623, 680, 681,
	682, 0, 625, 624, 626, 683, 0, 627, 1332, 1331,
	0, 0, 628, 629, 684, 630, 631, 632, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 286, 287, 1192, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 0, 638, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 639, 640, 641, 0, 303, 304, 642,
	0, 1337, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1193, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 643,
	644, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 646,
	647, 367, 0, 274, 0, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 1194, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 651,
	0, 652, 387, 0, 388, 389, 390, 391, 392, 653,
	654, 655, 472, 1196, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 1195, 403, 656, 657, 0, 658, 0, 405, 406,
	1197, 659, 1198, 407, 408, 409, 1199, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 660, 1200, 421, 422, 1201, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 1202, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 1203, 468, 457, 0, 0, 1204, 469, 470, 0,
	661, 471, 662, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 1205,
	482, 1206, 664, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 667, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 1207, 537, 538, 539, 540,
	541, 670, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 0, 564, 565, 547, 548, 566, 567,
	1208, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 673, 589, 590, 0, 591,
	592, 0, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 674, 675, 676, 677,
	0, 610, 0, 602, 603, 604, 678, 605, 679, 0,
	606, 607, 608, 609, 0, 611, 612, 0, 0, 613,
	614, 615, 617, 618, 616, 619, 0, 620, 0, 0,
	621, 622, 623, 680, 681, 682, 1332, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 1192, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 1337,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1193, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	1194, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 1196, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 1195,
	403, 656, 657, 0, 658, 0, 405, 406, 1197, 659,
	1198, 407, 408, 409, 1199, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 1200, 421, 422, 1201, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 1202, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 1203,
	468, 457, 0, 0, 1204, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 1205, 482, 1206,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 1207, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 1208, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 271, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 639,
	640, 641, 2873, 303, 304, 642, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 2870, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 2877, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 0, 3097,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 2876, 0, 0, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 651, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 653, 654, 655, 472, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 3094, 400, 401, 402, 404, 0, 0, 403, 656,
	657, 0, 658, 0, 405, 3096, 0, 659, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 660,
	0, 421, 422, 3093, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 0, 468, 457,
	0, 0, 0, 469, 470, 0, 661, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 0, 482, 0, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 2875, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 0,
	564, 565, 547, 548, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 0, 591, 592, 0, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 678, 605, 679, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 3095, 613, 614, 615, 617, 618,
	616, 619, 0, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 271, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	2873, 303, 304, 642, 0, 0, 2867, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 2870, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	2877, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 2876, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 2866, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 0,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 2875, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 2874, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	0, 625, 624, 626, 683, 1742, 627, 271, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 1741, 284, 285, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 639, 640, 641, 0, 303, 304, 642, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 1740, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 651, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 653, 654,
	655, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 656, 657, 0, 658, 0, 405, 406, 0,
	659, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 660, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	0, 468, 457, 0, 276, 0, 469, 470, 0, 661,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 0, 482,
	0, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 540, 541,
	670, 542, 0, 543, 544, 550, 551, 552, 1743, 546,
	553, 554, 555, 556, 557, 0, 1739, 560, 558, 561,
	562, 563, 0, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 0, 591, 592,
	0, 588, 579, 1737, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 674, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 678, 605, 679, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 0, 620, 0, 0, 621,
	622, 623, 680, 681, 682, 0, 1738, 624, 626, 683,
	1482, 627, 271, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 1484, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 276,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 1242, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	0, 625, 624, 626, 683, 1479, 627, 271, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 639, 640, 641, 0, 303, 304, 642, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 651, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 1481, 654,
	655, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 656, 657, 0, 658, 0, 405, 406, 0,
	659, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 660, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	0, 468, 457, 0, 276, 0, 469, 470, 0, 661,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 1242,
	477, 478, 479, 0, 0, 480, 481, 663, 0, 482,
	0, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 540, 541,
	670, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 0, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 0, 591, 592,
	0, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 674, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 678, 605, 679, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 0, 620, 0, 0, 621,
	622, 623, 680, 681, 682, 0, 625, 624, 626, 683,
	1386, 627, 271, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 1388, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 276,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 1242, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	0, 625, 624, 626, 683, 716, 627, 271, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 715, 282,
	283, 705, 284, 285, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 639, 640, 641, 0, 303, 304, 642, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 708, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 709, 386, 651, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 653, 654,
	655, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 656, 657, 0, 658, 0, 405, 406, 0,
	659, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 660, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	0, 468, 457, 0, 0, 0, 469, 470, 0, 661,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 0, 482,
	0, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 540, 541,
	670, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 710, 559, 560, 558, 561,
	562, 563, 0, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 0, 591, 592,
	0, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 674, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 678, 605, 679, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 0, 620, 0, 0, 621,
	622, 623, 680, 681, 682, 0, 625, 624, 626, 683,
	704, 627, 271, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 705, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	708, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 709, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 653, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 0,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	710, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	271, 625, 624, 626, 683, 0, 627, 0, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 277, 279, 278,
	280, 281, 282, 283, 705, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 708, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 709,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 710, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 271, 625,
	624, 626, 683, 0, 627, 0, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 277, 279, 278, 280, 281,
	282, 283, 705, 284, 285, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 0, 638, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 639, 640, 641, 0, 303, 304, 642,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 708, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 643,
	644, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 646,
	647, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 3957, 386, 651,
	0, 652, 387, 0, 388, 389, 390, 391, 392, 653,
	654, 655, 472, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 656, 657, 0, 658, 0, 405, 406,
	0, 659, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 660, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 0, 468, 457, 0, 0, 0, 469, 470, 0,
	661, 471, 662, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 0,
	482, 0, 664, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 667, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 0, 537, 538, 539, 540,
	541, 670, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 710, 559, 560, 558,
	561, 562, 563, 0, 564, 565, 547, 548, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 673, 589, 590, 0, 591,
	592, 0, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 674, 675, 676, 677,
	0, 610, 0, 602, 603, 604, 678, 605, 679, 0,
	606, 607, 608, 609, 0, 611, 612, 0, 0, 613,
	614, 615, 617, 618, 616, 619, 0, 620, 0, 0,
	621, 622, 623, 680, 681, 682, 271, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 274, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 275, 400, 401, 402, 404, 0, 0,
	403, 656, 657, 0, 658, 0, 405, 406, 0, 659,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 0,
	468, 457, 0, 276, 0, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 1242, 477,
	478, 479, 0, 0, 480, 481, 663, 0, 482, 0,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 0, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 271, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 639,
	640, 641, 0, 303, 304, 642, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 651, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 653, 654, 655, 472, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 0, 403, 656,
	657, 0, 658, 0, 405, 406, 0, 659, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 660,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 3498, 468, 457,
	0, 276, 0, 469, 470, 0, 661, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 0, 482, 0, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 0,
	564, 565, 547, 548, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 0, 591, 592, 0, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 678, 605, 679, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 0, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 0, 625, 624, 626, 683, 3042, 627, 271,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 634, 635, 0, 294, 636,
	295, 637, 0, 638, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 639, 640, 641, 0, 303, 304,
	642, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	643, 644, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 645,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	646, 647, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 648, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 649, 650, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	651, 0, 652, 387, 0, 388, 389, 390, 391, 392,
	3041, 654, 655, 472, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 656, 657, 0, 658, 0, 405,
	406, 0, 659, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 660, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 462, 464, 465, 460, 461, 463, 466, 467,
	458, 459, 0, 468, 457, 0, 276, 0, 469, 470,
	0, 661, 471, 662, 473, 474, 0, 0, 475, 0,
	0, 0, 477, 478, 479, 0, 0, 480, 481, 663,
	0, 482, 0, 664, 483, 484, 476, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 494, 495, 665,
	496, 497, 498, 666, 499, 500, 501, 667, 502, 668,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 510,
	511, 512, 513, 669, 514, 515, 517, 516, 518, 0,
	519, 0, 520, 521, 522, 0, 0, 0, 0, 0,
	523, 0, 525, 526, 527, 528, 524, 529, 530, 531,
	532, 533, 0, 534, 535, 536, 0, 537, 538, 539,
	540, 541, 670, 542, 0, 543, 544, 550, 551, 552,
	545, 546, 553, 554, 555, 556, 557, 0, 559, 560,
	558, 561, 562, 563, 0, 564, 565, 547, 548, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 671,
	0, 575, 0, 576, 577, 578, 580, 549, 581, 586,
	587, 672, 582, 583, 584, 585, 673, 589, 590, 0,
	591, 592, 0, 588, 579, 0, 593, 594, 595, 596,
	597, 598, 599, 361, 600, 0, 601, 674, 675, 676,
	677, 0, 610, 0, 602, 603, 604, 678, 605, 679,
	0, 606, 607, 608, 609, 0, 611, 612, 0, 0,
	613, 614, 615, 617, 618, 616, 619, 0, 620, 0,
	0, 621, 622, 623, 680, 681, 682, 0, 625, 624,
	626, 683, 2324, 627, 271, 0, 0, 0, 628, 629,
	684, 630, 631, 632, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 639,
	640, 641, 0, 303, 304, 642, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 0, 274,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 651, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 653, 654, 655, 472, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 275, 400, 401, 402, 404, 0, 0, 403, 656,
	657, 0, 658, 0, 405, 406, 0, 659, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 660,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 0, 468, 457,
	0, 276, 0, 469, 470, 0, 661, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 0, 482, 0, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 0,
	564, 565, 547, 548, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 0, 591, 592, 0, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 678, 605, 679, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 0, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 271, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 653, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 276,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 2263, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	0, 625, 624, 626, 683, 2270, 627, 271, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 639, 640, 641, 0, 303, 304, 642, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 651, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 2269, 654,
	655, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 656, 657, 0, 658, 0, 405, 406, 0,
	659, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 660, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	0, 468, 457, 0, 276, 0, 469, 470, 0, 661,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 0, 482,
	0, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 540, 541,
	670, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 0, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 0, 591, 592,
	0, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 674, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 678, 605, 679, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 0, 620, 0, 0, 621,
	622, 623, 680, 681, 682, 0, 625, 624, 626, 683,
	2256, 627, 271, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 274, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 2258, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 275,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 276,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	271, 625, 624, 626, 683, 0, 627, 0, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 2222, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 276, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 1242, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 1587, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 1586, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 276, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 1499, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 276, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 1492, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 1494, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 276, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 1316, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 1315, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 276, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 1306, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 1305, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 276, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 1303, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 1302, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 276, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 1298, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 1297, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 276, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 686, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 274, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 275, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 276, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 262, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 276, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 271, 625, 624, 626, 683, 0, 627,
	0, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 0, 638, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 639, 640,
	641, 0, 303, 304, 642, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 643, 644, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 651, 0, 652, 387, 0, 388,
	389, 390, 391, 392, 653, 654, 655, 472, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 656, 657,
	0, 658, 0, 405, 406, 0, 659, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 660, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 0, 468, 457, 0,
	276, 0, 469, 470, 0, 661, 471, 662, 473, 474,
	0, 0, 475, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 481, 663, 0, 482, 0, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	0, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 0, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 0, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 0, 534, 535, 536,
	0, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 0, 559, 560, 558, 561, 562, 563, 0, 564,
	565, 547, 548, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 0, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 0, 591, 592, 0, 588, 579, 0,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 0,
	601, 674, 675, 676, 677, 0, 610, 0, 602, 603,
	604, 678, 605, 679, 0, 606, 607, 608, 609, 0,
	611, 612, 0, 0, 613, 614, 615, 617, 618, 616,
	619, 0, 620, 0, 0, 621, 622, 623, 680, 681,
	682, 271, 625, 624, 626, 683, 0, 627, 0, 0,
	0, 0, 628, 629, 684, 630, 631, 632, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 708,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	709, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 656, 657, 0, 658,
	0, 405, 406, 0, 659, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 0, 468, 457, 0, 0, 0,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 0, 482, 0, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 0, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 710,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 680, 681, 682, 271,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 634, 635, 0, 294, 636,
	295, 637, 0, 638, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 639, 640, 641, 0, 303, 304,
	642, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 2364, 334, 0, 335, 337,
	643, 644, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 645,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	646, 647, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 648, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 649, 650, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	651, 0, 652, 387, 0, 388, 389, 390, 391, 392,
	653, 654, 655, 472, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 656, 657, 0, 658, 0, 405,
	406, 0, 659, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 660, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 462, 464, 465, 460, 461, 463, 466, 467,
	458, 459, 0, 468, 457, 0, 276, 0, 469, 470,
	0, 661, 471, 662, 473, 474, 0, 0, 475, 0,
	0, 0, 477, 478, 479, 0, 0, 480, 481, 663,
	0, 482, 0, 664, 483, 484, 476, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 494, 495, 665,
	496, 497, 498, 666, 499, 500, 501, 667, 502, 668,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 510,
	511, 512, 513, 669, 514, 515, 517, 516, 518, 0,
	519, 0, 520, 521, 522, 0, 0, 0, 0, 0,
	523, 0, 525, 526, 527, 528, 524, 529, 530, 531,
	532, 533, 0, 534, 535, 536, 0, 537, 538, 539,
	540, 541, 670, 542, 0, 543, 544, 550, 551, 552,
	545, 546, 553, 554, 555, 556, 557, 0, 559, 560,
	558, 561, 562, 563, 0, 564, 565, 547, 548, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 671,
	0, 575, 0, 576, 577, 578, 580, 549, 581, 586,
	587, 672, 582, 583, 584, 585, 673, 589, 590, 0,
	591, 592, 0, 588, 579, 0, 593, 594, 595, 596,
	597, 598, 599, 361, 600, 0, 601, 674, 675, 676,
	677, 0, 610, 0, 602, 603, 604, 678, 605, 679,
	0, 606, 607, 608, 609, 0, 611, 612, 0, 0,
	613, 614, 615, 617, 618, 616, 619, 0, 620, 0,
	0, 621, 622, 623, 680, 681, 682, 271, 625, 624,
	626, 683, 0, 627, 0, 0, 0, 0, 628, 629,
	684, 630, 631, 632, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 639, 640, 641, 0, 303, 304, 642, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 2362, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 0, 274, 0, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 651, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 653, 654,
	655, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 275, 400, 401, 402, 404, 0,
	0, 403, 656, 657, 0, 658, 0, 405, 406, 0,
	659, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 660, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	0, 468, 457, 0, 276, 0, 469, 470, 0, 661,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 0, 482,
	0, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 540, 541,
	670, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 0, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 0, 591, 592,
	0, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 674, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 678, 605, 679, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 0, 620, 0, 0, 621,
	622, 623, 680, 681, 682, 271, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 2360, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	274, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 275, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 276, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 271, 625, 624, 626, 683, 0, 627,
	0, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 0, 638, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 639, 640,
	641, 0, 303, 304, 642, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 643, 644, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 0, 274, 0,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 651, 0, 652, 387, 0, 388,
	389, 390, 391, 392, 2276, 654, 655, 472, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	275, 400, 401, 402, 404, 0, 0, 403, 656, 657,
	0, 658, 0, 405, 406, 0, 659, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 660, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 0, 468, 457, 0,
	276, 0, 469, 470, 0, 661, 471, 662, 473, 474,
	0, 0, 475, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 481, 663, 0, 482, 0, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	0, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 0, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 0, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 0, 534, 535, 536,
	0, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 0, 559, 560, 558, 561, 562, 563, 0, 564,
	565, 547, 548, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 0, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 0, 591, 592, 0, 588, 579, 0,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 0,
	601, 674, 675, 676, 677, 0, 610, 0, 602, 603,
	604, 678, 605, 679, 0, 606, 607, 608, 609, 0,
	611, 612, 0, 0, 613, 614, 615, 617, 618, 616,
	619, 0, 620, 0, 0, 621, 622, 623, 680, 681,
	682, 271, 625, 624, 626, 683, 0, 627, 0, 0,
	0, 0, 628, 629, 684, 630, 631, 632, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 274, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 2070, 654, 655, 472, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 275, 400,
	401, 402, 404, 0, 0, 403, 656, 657, 0, 658,
	0, 405, 406, 0, 659, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 0, 468, 457, 0, 276, 0,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 0, 482, 0, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 0, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 680, 681, 682, 271,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 634, 635, 0, 294, 636,
	295, 637, 0, 638, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 639, 640, 641, 0, 303, 304,
	642, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	643, 644, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 645,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	646, 647, 367, 0, 274, 0, 0, 0, 0, 0,
	368, 369, 370, 648, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 649, 650, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	651, 0, 652, 387, 0, 388, 389, 390, 391, 392,
	2064, 654, 655, 472, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 275, 400, 401, 402,
	404, 0, 0, 403, 656, 657, 0, 658, 0, 405,
	406, 0, 659, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 660, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 462, 464, 465, 460, 461, 463, 466, 467,
	458, 459, 0, 468, 457, 0, 276, 0, 469, 470,
	0, 661, 471, 662, 473, 474, 0, 0, 475, 0,
	0, 0, 477, 478, 479, 0, 0, 480, 481, 663,
	0, 482, 0, 664, 483, 484, 476, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 494, 495, 665,
	496, 497, 498, 666, 499, 500, 501, 667, 502, 668,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 510,
	511, 512, 513, 669, 514, 515, 517, 516, 518, 0,
	519, 0, 520, 521, 522, 0, 0, 0, 0, 0,
	523, 0, 525, 526, 527, 528, 524, 529, 530, 531,
	532, 533, 0, 534, 535, 536, 0, 537, 538, 539,
	540, 541, 670, 542, 0, 543, 544, 550, 551, 552,
	545, 546, 553, 554, 555, 556, 557, 0, 559, 560,
	558, 561, 562, 563, 0, 564, 565, 547, 548, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 671,
	0, 575, 0, 576, 577, 578, 580, 549, 581, 586,
	587, 672, 582, 583, 584, 585, 673, 589, 590, 0,
	591, 592, 0, 588, 579, 0, 593, 594, 595, 596,
	597, 598, 599, 361, 600, 0, 601, 674, 675, 676,
	677, 0, 610, 0, 602, 603, 604, 678, 605, 679,
	0, 606, 607, 608, 609, 0, 611, 612, 0, 0,
	613, 614, 615, 617, 618, 616, 619, 0, 620, 0,
	0, 621, 622, 623, 680, 681, 682, 0, 625, 624,
	626, 683, 893, 627, 271, 0, 0, 0, 628, 629,
	684, 630, 631, 632, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 639,
	640, 641, 0, 303, 304, 642, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 651, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 653, 654, 655, 472, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 656,
	657, 0, 658, 892, 405, 406, 0, 659, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 660,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 0, 468, 457,
	0, 0, 0, 469, 470, 0, 661, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 0, 482, 0, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 0,
	564, 565, 547, 548, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 0, 591, 592, 0, 588, 579,
	891, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 678, 605, 679, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 0, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 271, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 3097, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 653, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 0,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 4253, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	0, 625, 624, 626, 683, 1350, 627, 271, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 286, 287, 1353, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 639, 640, 1351, 0, 303, 304, 642, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 651, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 653, 654,
	655, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 656, 657, 0, 658, 0, 405, 406, 0,
	659, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 660, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 776, 0, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	0, 468, 457, 0, 0, 0, 469, 470, 0, 661,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 0, 482,
	0, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 0, 775, 538, 539, 540, 541,
	670, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	774, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	1354, 563, 0, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 0, 591, 592,
	0, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 772, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 678, 605, 679, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 0, 620, 0, 0, 621,
	622, 623, 680, 681, 682, 0, 625, 624, 626, 683,
	1350, 627, 271, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 1353, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 1351,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 653, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	776, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 0,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	775, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 774, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 1354, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	772, 675, 676, 677, 0, 610, 0, 602, 1352, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	0, 625, 624, 626, 683, 695, 627, 271, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 694, 284, 285, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 639, 640, 641, 0, 303, 304, 642, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 651, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 653, 654,
	655, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 656, 657, 0, 658, 0, 405, 406, 0,
	659, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 660, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	0, 468, 457, 0, 0, 0, 469, 470, 0, 661,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 0, 482,
	0, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 693, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 540, 541,
	670, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 0, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 0, 591, 592,
	0, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 674, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 678, 605, 679, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 0, 620, 0, 0, 621,
	622, 623, 680, 681, 682, 0, 625, 624, 626, 683,
	0, 627, 271, 3084, 0, 0, 628, 629, 684, 630,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 653, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 0,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	0, 625, 624, 626, 683, 0, 627, 271, 4263, 0,
	0, 628, 629, 684, 630, 631, 632, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 634, 635, 0, 294, 636, 295, 637,
	0, 638, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 639, 640, 641, 0, 303, 304, 642, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 643, 644,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 645, 356, 357,
	358, 360, 362, 359, 363, 364, 365, 366, 646, 647,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 648, 0, 0, 0, 371, 0, 372, 373, 0,
	0, 0, 374, 375, 376, 649, 650, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 651, 0,
	652, 387, 0, 388, 389, 390, 391, 392, 653, 654,
	655, 472, 0, 393, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 0, 400, 401, 402, 404, 0,
	0, 403, 656, 657, 0, 658, 0, 405, 406, 0,
	659, 0, 407, 408, 409, 0, 410, 0, 0, 0,
	411, 412, 413, 414, 415, 416, 0, 417, 419, 418,
	0, 420, 660, 0, 421, 422, 0, 0, 423, 0,
	0, 0, 424, 425, 428, 0, 0, 426, 427, 429,
	430, 0, 431, 432, 434, 437, 433, 435, 436, 438,
	451, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 453, 0, 452, 0, 454, 455, 456,
	462, 464, 465, 460, 461, 463, 466, 467, 458, 459,
	0, 468, 457, 0, 0, 0, 469, 470, 0, 661,
	471, 662, 473, 474, 0, 0, 475, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 481, 663, 0, 482,
	0, 664, 483, 484, 476, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 0, 494, 495, 665, 496, 497,
	498, 666, 499, 500, 501, 667, 502, 668, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 510, 511, 512,
	513, 669, 514, 515, 517, 516, 518, 0, 519, 0,
	520, 521, 522, 0, 0, 0, 0, 0, 523, 0,
	525, 526, 527, 528, 524, 529, 530, 531, 532, 533,
	0, 534, 535, 536, 0, 537, 538, 539, 540, 541,
	670, 542, 0, 543, 544, 550, 551, 552, 545, 546,
	553, 554, 555, 556, 557, 0, 559, 560, 558, 561,
	562, 563, 0, 564, 565, 547, 548, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 671, 0, 575,
	0, 576, 577, 578, 580, 549, 581, 586, 587, 672,
	582, 583, 584, 585, 673, 589, 590, 0, 591, 592,
	0, 588, 579, 0, 593, 594, 595, 596, 597, 598,
	599, 361, 600, 0, 601, 674, 675, 676, 677, 0,
	610, 0, 602, 603, 604, 678, 605, 679, 0, 606,
	607, 608, 609, 0, 611, 612, 0, 0, 613, 614,
	615, 617, 618, 616, 619, 0, 620, 0, 0, 621,
	622, 623, 680, 681, 682, 271, 625, 624, 626, 683,
	0, 627, 0, 0, 0, 0, 628, 629, 684, 630,
	631, 632, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 0, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 4545, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 271, 625, 624, 626, 683, 0, 627,
	0, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 0, 638, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 639, 640,
	641, 0, 303, 304, 642, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 643, 644, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 651, 0, 652, 387, 0, 388,
	389, 390, 391, 392, 653, 654, 655, 472, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 656, 657,
	0, 658, 0, 405, 406, 0, 659, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 660, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 0, 468, 457, 0,
	0, 0, 469, 470, 0, 661, 471, 662, 473, 474,
	0, 0, 475, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 481, 663, 0, 482, 0, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	0, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 4149, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 0, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 0, 534, 535, 536,
	0, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 0, 559, 560, 558, 561, 562, 563, 0, 564,
	565, 547, 548, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 0, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 0, 591, 592, 0, 588, 579, 0,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 0,
	601, 674, 675, 676, 677, 0, 610, 0, 602, 603,
	604, 678, 605, 679, 0, 606, 607, 608, 609, 0,
	611, 612, 0, 0, 613, 614, 615, 617, 618, 616,
	619, 0, 620, 0, 0, 621, 622, 623, 680, 681,
	682, 271, 625, 624, 626, 683, 0, 627, 0, 0,
	0, 0, 628, 629, 684, 630, 631, 632, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 3912, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 656, 657, 0, 658,
	0, 405, 406, 0, 659, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 0, 468, 457, 0, 0, 0,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 0, 482, 0, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 0, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 680, 681, 682, 271,
	625, 624, 626, 683, 0, 627, 0, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 633, 0, 2757, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 634, 635, 0, 294, 636,
	295, 637, 0, 638, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 639, 640, 641, 0, 303, 304,
	642, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	643, 644, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 645,
	356, 357, 358, 360, 362, 359, 363, 364, 365, 366,
	646, 647, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 648, 0, 0, 0, 371, 0, 372,
	373, 0, 0, 0, 374, 375, 376, 649, 650, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	651, 0, 652, 387, 0, 388, 389, 390, 391, 392,
	653, 654, 655, 472, 0, 393, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 0, 400, 401, 402,
	404, 0, 0, 403, 656, 657, 0, 658, 0, 405,
	406, 0, 659, 0, 407, 408, 409, 0, 410, 0,
	0, 0, 411, 412, 413, 414, 415, 416, 0, 417,
	419, 418, 0, 420, 660, 0, 421, 422, 0, 0,
	423, 0, 0, 0, 424, 425, 428, 0, 0, 426,
	427, 429, 430, 0, 431, 432, 434, 437, 433, 435,
	436, 438, 451, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 453, 0, 452, 0, 454,
	455, 456, 462, 464, 465, 460, 461, 463, 466, 467,
	458, 459, 0, 468, 457, 0, 0, 0, 469, 470,
	0, 661, 471, 662, 473, 474, 0, 0, 475, 0,
	0, 0, 477, 478, 479, 0, 0, 480, 481, 663,
	0, 482, 0, 664, 483, 484, 476, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 494, 495, 665,
	496, 497, 498, 666, 499, 500, 501, 667, 502, 668,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 510,
	511, 512, 513, 669, 514, 515, 517, 516, 518, 0,
	519, 0, 520, 521, 522, 0, 0, 0, 0, 0,
	523, 0, 525, 526, 527, 528, 524, 529, 530, 531,
	532, 533, 0, 534, 535, 536, 0, 537, 538, 539,
	540, 541, 670, 542, 0, 543, 544, 550, 551, 552,
	545, 546, 553, 554, 555, 556, 557, 0, 559, 560,
	558, 561, 562, 563, 0, 564, 565, 547, 548, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 671,
	0, 575, 0, 576, 577, 578, 580, 549, 581, 586,
	587, 672, 582, 583, 584, 585, 673, 589, 590, 0,
	591, 592, 0, 588, 579, 0, 593, 594, 595, 596,
	597, 598, 599, 361, 600, 0, 601, 674, 675, 676,
	677, 0, 610, 0, 602, 603, 604, 678, 605, 679,
	0, 606, 607, 608, 609, 0, 611, 612, 0, 0,
	613, 614, 615, 617, 618, 616, 619, 0, 620, 0,
	0, 621, 622, 623, 680, 681, 682, 0, 625, 624,
	626, 683, 0, 627, 271, 3084, 0, 0, 628, 629,
	684, 630, 631, 632, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 639,
	640, 641, 0, 303, 304, 642, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 651, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 653, 654, 655, 472, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 656,
	657, 0, 658, 0, 405, 406, 0, 659, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 660,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 0, 468, 457,
	0, 0, 0, 469, 470, 0, 661, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 3081,
	0, 0, 480, 481, 663, 0, 482, 0, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 0,
	564, 565, 547, 548, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 0, 591, 592, 0, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 678, 605, 679, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 0, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 271, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 653, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 0,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 2188, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	775, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 774, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	772, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	271, 625, 624, 626, 683, 0, 627, 0, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 277, 279, 278,
	280, 281, 282, 283, 2334, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 2322, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 0, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 2084, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 2051, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 0, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 766, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	762, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 767, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 776, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 775, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 774, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 1620, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 772, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 1593, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 1592, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 0, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 1577, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 1575, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 1570, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 0, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 1547, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 1545, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 1504, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 0, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 1487, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 1356, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 653, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 0, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 775, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 774, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 772, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 0, 625, 624, 626, 683, 1321, 627,
	271, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 1320, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 0, 625,
	624, 626, 683, 1312, 627, 271, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 634, 635, 0, 294, 636, 295, 637, 0, 638,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	639, 640, 641, 0, 303, 304, 642, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 643, 644, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 645, 356, 357, 358, 360,
	362, 359, 363, 364, 365, 366, 646, 647, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 648,
	0, 0, 0, 371, 0, 372, 373, 0, 0, 0,
	374, 375, 376, 649, 650, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 651, 0, 652, 387,
	0, 388, 389, 390, 391, 392, 1311, 654, 655, 472,
	0, 393, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 0, 400, 401, 402, 404, 0, 0, 403,
	656, 657, 0, 658, 0, 405, 406, 0, 659, 0,
	407, 408, 409, 0, 410, 0, 0, 0, 411, 412,
	413, 414, 415, 416, 0, 417, 419, 418, 0, 420,
	660, 0, 421, 422, 0, 0, 423, 0, 0, 0,
	424, 425, 428, 0, 0, 426, 427, 429, 430, 0,
	431, 432, 434, 437, 433, 435, 436, 438, 451, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 453, 0, 452, 0, 454, 455, 456, 462, 464,
	465, 460, 461, 463, 466, 467, 458, 459, 0, 468,
	457, 0, 0, 0, 469, 470, 0, 661, 471, 662,
	473, 474, 0, 0, 475, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 481, 663, 0, 482, 0, 664,
	483, 484, 476, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 0, 494, 495, 665, 496, 497, 498, 666,
	499, 500, 501, 667, 502, 668, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 510, 511, 512, 513, 669,
	514, 515, 517, 516, 518, 0, 519, 0, 520, 521,
	522, 0, 0, 0, 0, 0, 523, 0, 525, 526,
	527, 528, 524, 529, 530, 531, 532, 533, 0, 534,
	535, 536, 0, 537, 538, 539, 540, 541, 670, 542,
	0, 543, 544, 550, 551, 552, 545, 546, 553, 554,
	555, 556, 557, 0, 559, 560, 558, 561, 562, 563,
	0, 564, 565, 547, 548, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 671, 0, 575, 0, 576,
	577, 578, 580, 549, 581, 586, 587, 672, 582, 583,
	584, 585, 673, 589, 590, 0, 591, 592, 0, 588,
	579, 0, 593, 594, 595, 596, 597, 598, 599, 361,
	600, 0, 601, 674, 675, 676, 677, 0, 610, 0,
	602, 603, 604, 678, 605, 679, 0, 606, 607, 608,
	609, 0, 611, 612, 0, 0, 613, 614, 615, 617,
	618, 616, 619, 0, 620, 0, 0, 621, 622, 623,
	680, 681, 682, 271, 625, 624, 626, 683, 0, 627,
	0, 0, 0, 0, 628, 629, 684, 630, 631, 632,
	277, 279, 278, 280, 281, 282, 283, 1265, 284, 285,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 634,
	635, 0, 294, 636, 295, 637, 0, 638, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 639, 640,
	641, 0, 303, 304, 642, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 643, 644, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 645, 356, 357, 358, 360, 362, 359,
	363, 364, 365, 366, 646, 647, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 648, 0, 0,
	0, 371, 0, 372, 373, 0, 0, 0, 374, 375,
	376, 649, 650, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 651, 0, 652, 387, 0, 388,
	389, 390, 391, 392, 653, 654, 655, 472, 0, 393,
	394, 0, 395, 396, 397, 398, 399, 0, 0, 0,
	0, 400, 401, 402, 404, 0, 0, 403, 656, 657,
	0, 658, 0, 405, 406, 0, 659, 0, 407, 408,
	409, 0, 410, 0, 0, 0, 411, 412, 413, 414,
	415, 416, 0, 417, 419, 418, 0, 420, 660, 0,
	421, 422, 0, 0, 423, 0, 0, 0, 424, 425,
	428, 0, 0, 426, 427, 429, 430, 0, 431, 432,
	434, 437, 433, 435, 436, 438, 451, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 453,
	0, 452, 0, 454, 455, 456, 462, 464, 465, 460,
	461, 463, 466, 467, 458, 459, 0, 468, 457, 0,
	0, 0, 469, 470, 0, 661, 471, 662, 473, 474,
	0, 0, 475, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 481, 663, 0, 482, 0, 664, 483, 484,
	476, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	0, 494, 495, 665, 496, 497, 498, 666, 499, 500,
	501, 667, 502, 668, 503, 504, 0, 505, 506, 0,
	507, 508, 509, 510, 511, 512, 513, 669, 514, 515,
	517, 516, 518, 0, 519, 0, 520, 521, 522, 0,
	0, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	524, 529, 530, 531, 532, 533, 0, 534, 535, 536,
	0, 537, 538, 539, 540, 541, 670, 542, 0, 543,
	544, 550, 551, 552, 545, 546, 553, 554, 555, 556,
	557, 0, 559, 560, 558, 561, 562, 563, 0, 564,
	565, 547, 548, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 671, 0, 575, 0, 576, 577, 578,
	580, 549, 581, 586, 587, 672, 582, 583, 584, 585,
	673, 589, 590, 0, 591, 592, 0, 588, 579, 0,
	593, 594, 595, 596, 597, 598, 599, 361, 600, 0,
	601, 674, 675, 676, 677, 0, 610, 0, 602, 603,
	604, 678, 605, 679, 0, 606, 607, 608, 609, 0,
	611, 612, 0, 0, 613, 614, 615, 617, 618, 616,
	619, 0, 620, 0, 0, 621, 622, 623, 680, 681,
	682, 271, 625, 624, 626, 683, 0, 627, 0, 0,
	0, 0, 628, 629, 684, 630, 631, 632, 277, 279,
	278, 280, 281, 282, 283, 781, 284, 285, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 656, 657, 0, 658,
	0, 405, 406, 0, 659, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 0, 468, 457, 0, 0, 0,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 0, 482, 0, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 0, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 680, 681, 682, 0,
	625, 624, 626, 683, 766, 627, 271, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 762, 642, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 761, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 656, 657, 0, 658, 0, 405, 406, 0, 659,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 767, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 776, 0, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 0,
	468, 457, 0, 0, 0, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 0, 482, 0,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 0, 775, 538, 539, 540, 541, 763,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 774,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 764,
	563, 0, 564, 565, 547, 548, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 772, 675, 676, 677, 0, 610,
	0, 602, 768, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 0, 625, 624, 626, 683, 755,
	627, 271, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 656, 657, 0, 658,
	0, 405, 406, 0, 659, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 0, 468, 457, 0, 0, 0,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 0, 482, 0, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 0, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 756,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 680, 681, 682, 0,
	625, 624, 626, 683, 718, 627, 271, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 656, 657, 0, 658, 0, 405, 406, 0, 659,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 0,
	468, 457, 0, 0, 0, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 0, 482, 0,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 0, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 0, 625, 624, 626, 683, 712,
	627, 271, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 634, 635, 0,
	294, 636, 295, 637, 0, 638, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 639, 640, 641, 0,
	303, 304, 642, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 643, 644, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 645, 356, 357, 358, 360, 362, 359, 363, 364,
	365, 366, 646, 647, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 648, 0, 0, 0, 371,
	0, 372, 373, 0, 0, 0, 374, 375, 376, 649,
	650, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 651, 0, 652, 387, 0, 388, 389, 390,
	391, 392, 653, 654, 655, 472, 0, 393, 394, 0,
	395, 396, 397, 398, 399, 0, 0, 0, 0, 400,
	401, 402, 404, 0, 0, 403, 656, 657, 0, 658,
	0, 405, 406, 0, 659, 0, 407, 408, 409, 0,
	410, 0, 0, 0, 411, 412, 413, 414, 415, 416,
	0, 417, 419, 418, 0, 420, 660, 0, 421, 422,
	0, 0, 423, 0, 0, 0, 424, 425, 428, 0,
	0, 426, 427, 429, 430, 0, 431, 432, 434, 437,
	433, 435, 436, 438, 451, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 453, 0, 452,
	0, 454, 455, 456, 462, 464, 465, 460, 461, 463,
	466, 467, 458, 459, 0, 468, 457, 0, 0, 0,
	469, 470, 0, 661, 471, 662, 473, 474, 0, 0,
	475, 0, 0, 0, 477, 478, 479, 0, 0, 480,
	481, 663, 0, 482, 0, 664, 483, 484, 476, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 494,
	495, 665, 496, 497, 498, 666, 499, 500, 501, 667,
	502, 668, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 510, 511, 512, 513, 669, 514, 515, 517, 516,
	518, 0, 519, 0, 520, 521, 522, 0, 0, 0,
	0, 0, 523, 0, 525, 526, 527, 528, 524, 529,
	530, 531, 532, 533, 0, 534, 535, 536, 0, 537,
	538, 539, 540, 541, 670, 542, 0, 543, 544, 550,
	551, 552, 545, 546, 553, 554, 555, 556, 557, 0,
	559, 560, 558, 561, 562, 563, 0, 564, 565, 547,
	548, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 671, 0, 575, 0, 576, 577, 578, 580, 549,
	581, 586, 587, 672, 582, 583, 584, 585, 673, 589,
	590, 0, 591, 592, 0, 588, 579, 0, 593, 594,
	595, 596, 597, 598, 599, 361, 600, 0, 601, 674,
	675, 676, 677, 0, 610, 0, 602, 603, 604, 678,
	605, 679, 0, 606, 607, 608, 609, 0, 611, 612,
	0, 0, 613, 614, 615, 617, 618, 616, 619, 0,
	620, 0, 0, 621, 622, 623, 680, 681, 682, 0,
	625, 624, 626, 683, 690, 627, 271, 0, 0, 0,
	628, 629, 684, 630, 631, 632, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 656, 657, 0, 658, 0, 405, 406, 0, 659,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 0,
	468, 457, 0, 0, 0, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 0, 482, 0,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 0, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 271, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 639,
	640, 641, 0, 303, 304, 642, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 651, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 653, 654, 655, 472, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 656,
	657, 0, 658, 0, 405, 406, 0, 659, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 660,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 0, 468, 457,
	0, 0, 0, 469, 470, 0, 661, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 0, 482, 0, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 0,
	564, 565, 547, 548, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 0, 591, 592, 0, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 678, 605, 679, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 0, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 271, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 3609, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 0,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	271, 625, 624, 626, 683, 0, 627, 0, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 653, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 775, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 774, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 772, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 271, 625,
	624, 626, 683, 0, 627, 0, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 0, 638, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 639, 640, 641, 0, 303, 304, 642,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 643,
	644, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 646,
	647, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 651,
	0, 652, 387, 0, 388, 389, 390, 391, 392, 3536,
	654, 655, 472, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 656, 657, 0, 658, 0, 405, 406,
	0, 659, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 660, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 0, 468, 457, 0, 0, 0, 469, 470, 0,
	661, 471, 662, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 0,
	482, 0, 664, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 667, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 0, 537, 538, 539, 540,
	541, 670, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 0, 564, 565, 547, 548, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 673, 589, 590, 0, 591,
	592, 0, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 674, 675, 676, 677,
	0, 610, 0, 602, 603, 604, 678, 605, 679, 0,
	606, 607, 608, 609, 0, 611, 612, 0, 0, 613,
	614, 615, 617, 618, 616, 619, 0, 620, 0, 0,
	621, 622, 623, 680, 681, 682, 271, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 3514, 654, 655,
	472, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 656, 657, 0, 658, 0, 405, 406, 0, 659,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 0,
	468, 457, 0, 0, 0, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 0, 482, 0,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 0, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 271, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 639,
	640, 641, 0, 303, 304, 642, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 651, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 3511, 654, 655, 472, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 656,
	657, 0, 658, 0, 405, 406, 0, 659, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 660,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 0, 468, 457,
	0, 0, 0, 469, 470, 0, 661, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 0, 482, 0, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 550, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 0,
	564, 565, 547, 548, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 0, 591, 592, 0, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 678, 605, 679, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 0, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 271, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 3463, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 0,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 564, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	271, 625, 624, 626, 683, 0, 627, 0, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 3461, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 271, 625,
	624, 626, 683, 0, 627, 0, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 0, 638, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 639, 640, 641, 0, 303, 304, 642,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 643,
	644, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 646,
	647, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 651,
	0, 652, 387, 0, 388, 389, 390, 391, 392, 3446,
	654, 655, 472, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 656, 657, 0, 658, 0, 405, 406,
	0, 659, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 660, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 0, 468, 457, 0, 0, 0, 469, 470, 0,
	661, 471, 662, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 0,
	482, 0, 664, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 667, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 517, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 0, 537, 538, 539, 540,
	541, 670, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 0, 564, 565, 547, 548, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 673, 589, 590, 0, 591,
	592, 0, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 674, 675, 676, 677,
	0, 610, 0, 602, 603, 604, 678, 605, 679, 0,
	606, 607, 608, 609, 0, 611, 612, 0, 0, 613,
	614, 615, 617, 618, 616, 619, 0, 620, 0, 0,
	621, 622, 623, 680, 681, 682, 271, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	387, 0, 388, 389, 390, 391, 392, 3052, 654, 655,
	472, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 656, 657, 0, 658, 0, 405, 406, 0, 659,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 0,
	468, 457, 0, 0, 0, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 0, 482, 0,
	664, 483, 484, 476, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 511, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 0, 537, 538, 539, 540, 541, 670,
	542, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 271, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	634, 635, 0, 294, 636, 295, 637, 0, 638, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 639,
	640, 641, 0, 303, 304, 642, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 643, 644, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 645, 356, 357, 358, 360, 362,
	359, 363, 364, 365, 366, 646, 647, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 648, 0,
	0, 0, 371, 0, 372, 373, 0, 0, 0, 374,
	375, 376, 649, 650, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 651, 0, 652, 387, 0,
	388, 389, 390, 391, 392, 653, 654, 655, 472, 0,
	393, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 0, 400, 401, 402, 404, 0, 0, 403, 656,
	657, 0, 658, 0, 405, 406, 0, 659, 0, 407,
	408, 409, 0, 410, 0, 0, 0, 411, 412, 413,
	414, 415, 416, 0, 417, 419, 418, 0, 420, 660,
	0, 421, 422, 0, 0, 423, 0, 0, 0, 424,
	425, 428, 0, 0, 426, 427, 429, 430, 0, 431,
	432, 434, 437, 433, 435, 436, 438, 451, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	453, 0, 452, 0, 454, 455, 456, 462, 464, 465,
	460, 461, 463, 466, 467, 458, 459, 0, 468, 457,
	0, 0, 0, 469, 470, 0, 661, 471, 662, 473,
	474, 0, 0, 475, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 481, 663, 0, 482, 0, 664, 483,
	484, 476, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 494, 495, 665, 496, 497, 498, 666, 499,
	500, 501, 667, 502, 668, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 510, 511, 512, 513, 669, 514,
	515, 517, 516, 518, 0, 519, 0, 520, 521, 522,
	0, 0, 0, 0, 0, 523, 0, 525, 526, 527,
	528, 524, 529, 530, 531, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 540, 541, 670, 542, 0,
	543, 544, 756, 551, 552, 545, 546, 553, 554, 555,
	556, 557, 0, 559, 560, 558, 561, 562, 563, 0,
	564, 565, 547, 548, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 671, 0, 575, 0, 576, 577,
	578, 580, 549, 581, 586, 587, 672, 582, 583, 584,
	585, 673, 589, 590, 0, 591, 592, 0, 588, 579,
	0, 593, 594, 595, 596, 597, 598, 599, 361, 600,
	0, 601, 674, 675, 676, 677, 0, 610, 0, 602,
	603, 604, 678, 605, 679, 0, 606, 607, 608, 609,
	0, 611, 612, 0, 0, 613, 614, 615, 617, 618,
	616, 619, 0, 620, 0, 0, 621, 622, 623, 680,
	681, 682, 271, 625, 624, 626, 683, 0, 627, 0,
	0, 0, 0, 628, 629, 684, 630, 631, 632, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 633, 0, 2294, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 634, 635,
	0, 294, 636, 295, 637, 0, 638, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 639, 640, 641,
	0, 303, 304, 642, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 643, 644, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 645, 356, 357, 358, 360, 362, 359, 363,
	364, 365, 366, 646, 647, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 648, 0, 0, 0,
	371, 0, 372, 373, 0, 0, 0, 374, 375, 376,
	649, 650, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 651, 0, 652, 387, 0, 388, 389,
	390, 391, 392, 653, 654, 655, 472, 0, 393, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 0,
	400, 401, 402, 404, 0, 0, 403, 656, 657, 0,
	658, 0, 405, 406, 0, 659, 0, 407, 408, 409,
	0, 410, 0, 0, 0, 411, 412, 413, 414, 415,
	416, 0, 417, 419, 418, 0, 420, 660, 0, 421,
	422, 0, 0, 423, 0, 0, 0, 424, 425, 428,
	0, 0, 426, 427, 429, 430, 0, 431, 432, 434,
	437, 433, 435, 436, 438, 451, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 453, 0,
	452, 0, 454, 455, 456, 462, 464, 465, 460, 461,
	463, 466, 467, 458, 459, 0, 468, 457, 0, 0,
	0, 469, 470, 0, 661, 471, 662, 473, 474, 0,
	0, 475, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 481, 663, 0, 482, 0, 664, 483, 484, 476,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	494, 495, 665, 496, 497, 498, 666, 499, 500, 501,
	667, 502, 668, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 510, 511, 512, 513, 669, 514, 515, 517,
	516, 518, 0, 519, 0, 520, 521, 522, 0, 0,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 524,
	529, 530, 531, 532, 533, 0, 534, 535, 536, 0,
	537, 538, 539, 540, 541, 670, 542, 0, 543, 544,
	550, 551, 552, 545, 546, 553, 554, 555, 556, 557,
	0, 559, 560, 558, 561, 562, 563, 0, 0, 565,
	547, 548, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 671, 0, 575, 0, 576, 577, 578, 580,
	549, 581, 586, 587, 672, 582, 583, 584, 585, 673,
	589, 590, 0, 591, 592, 0, 588, 579, 0, 593,
	594, 595, 596, 597, 598, 599, 361, 600, 0, 601,
	674, 675, 676, 677, 0, 610, 0, 602, 603, 604,
	678, 605, 679, 0, 606, 607, 608, 609, 0, 611,
	612, 0, 0, 613, 614, 615, 617, 618, 616, 619,
	0, 620, 0, 0, 621, 622, 623, 680, 681, 682,
	271, 625, 624, 626, 683, 0, 627, 0, 0, 0,
	0, 628, 629, 684, 630, 631, 632, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 634, 635, 0, 294,
	636, 295, 637, 0, 638, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 639, 640, 641, 0, 303,
	304, 642, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 643, 644, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	645, 356, 357, 358, 360, 362, 359, 363, 364, 365,
	366, 646, 647, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 648, 0, 0, 0, 371, 0,
	372, 373, 0, 0, 0, 374, 375, 376, 649, 650,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 651, 0, 652, 387, 0, 388, 389, 390, 391,
	392, 1283, 654, 655, 472, 0, 393, 394, 0, 395,
	396, 397, 398, 399, 0, 0, 0, 0, 400, 401,
	402, 404, 0, 0, 403, 656, 657, 0, 658, 0,
	405, 406, 0, 659, 0, 407, 408, 409, 0, 410,
	0, 0, 0, 411, 412, 413, 414, 415, 416, 0,
	417, 419, 418, 0, 420, 660, 0, 421, 422, 0,
	0, 423, 0, 0, 0, 424, 425, 428, 0, 0,
	426, 427, 429, 430, 0, 431, 432, 434, 437, 433,
	435, 436, 438, 451, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 453, 0, 452, 0,
	454, 455, 456, 462, 464, 465, 460, 461, 463, 466,
	467, 458, 459, 0, 468, 457, 0, 0, 0, 469,
	470, 0, 661, 471, 662, 473, 474, 0, 0, 475,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 481,
	663, 0, 482, 0, 664, 483, 484, 476, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 494, 495,
	665, 496, 497, 498, 666, 499, 500, 501, 667, 502,
	668, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	510, 511, 512, 513, 669, 514, 515, 517, 516, 518,
	0, 519, 0, 520, 521, 522, 0, 0, 0, 0,
	0, 523, 0, 525, 526, 527, 528, 524, 529, 530,
	531, 532, 533, 0, 534, 535, 536, 0, 537, 538,
	539, 540, 541, 670, 542, 0, 543, 544, 550, 551,
	552, 545, 546, 553, 554, 555, 556, 557, 0, 559,
	560, 558, 561, 562, 563, 0, 564, 565, 547, 548,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	671, 0, 575, 0, 576, 577, 578, 580, 549, 581,
	586, 587, 672, 582, 583, 584, 585, 673, 589, 590,
	0, 591, 592, 0, 588, 579, 0, 593, 594, 595,
	596, 597, 598, 599, 361, 600, 0, 601, 674, 675,
	676, 677, 0, 610, 0, 602, 603, 604, 678, 605,
	679, 0, 606, 607, 608, 609, 0, 611, 612, 0,
	0, 613, 614, 615, 617, 618, 616, 619, 0, 620,
	0, 0, 621, 622, 623, 680, 681, 682, 271, 625,
	624, 626, 683, 0, 627, 0, 0, 0, 0, 628,
	629, 684, 630, 631, 632, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 634, 635, 0, 294, 636, 295,
	637, 0, 638, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 639, 640, 641, 0, 303, 304, 642,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 643,
	644, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 645, 356,
	357, 358, 360, 362, 359, 363, 364, 365, 366, 646,
	647, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 648, 0, 0, 0, 371, 0, 372, 373,
	0, 0, 0, 374, 375, 376, 649, 650, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 651,
	0, 652, 387, 0, 388, 389, 390, 391, 392, 653,
	654, 655, 472, 0, 393, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 0, 400, 401, 402, 404,
	0, 0, 403, 656, 657, 0, 658, 0, 405, 406,
	0, 659, 0, 407, 408, 409, 0, 410, 0, 0,
	0, 411, 412, 413, 414, 415, 416, 0, 417, 419,
	418, 0, 420, 660, 0, 421, 422, 0, 0, 423,
	0, 0, 0, 424, 425, 428, 0, 0, 426, 427,
	429, 430, 0, 431, 432, 434, 437, 433, 435, 436,
	438, 451, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 453, 0, 452, 0, 454, 455,
	456, 462, 464, 465, 460, 461, 463, 466, 467, 458,
	459, 0, 468, 457, 0, 0, 0, 469, 470, 0,
	661, 471, 662, 473, 474, 0, 0, 475, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 481, 663, 0,
	482, 0, 664, 483, 484, 476, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 494, 495, 665, 496,
	497, 498, 666, 499, 500, 501, 667, 502, 668, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 510, 511,
	512, 513, 669, 514, 515, 1215, 516, 518, 0, 519,
	0, 520, 521, 522, 0, 0, 0, 0, 0, 523,
	0, 525, 526, 527, 528, 524, 529, 530, 531, 532,
	533, 0, 534, 535, 536, 0, 537, 538, 539, 540,
	541, 670, 542, 0, 543, 544, 550, 551, 552, 545,
	546, 553, 554, 555, 556, 557, 0, 559, 560, 558,
	561, 562, 563, 0, 564, 565, 547, 548, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 671, 0,
	575, 0, 576, 577, 578, 580, 549, 581, 586, 587,
	672, 582, 583, 584, 585, 673, 589, 590, 0, 591,
	592, 0, 588, 579, 0, 593, 594, 595, 596, 597,
	598, 599, 361, 600, 0, 601, 674, 675, 676, 677,
	0, 610, 0, 602, 603, 604, 678, 605, 679, 0,
	606, 607, 608, 609, 0, 611, 612, 0, 0, 613,
	614, 615, 617, 618, 616, 619, 0, 620, 0, 0,
	621, 622, 623, 680, 681, 682, 271, 625, 624, 626,
	683, 0, 627, 0, 0, 0, 0, 628, 629, 684,
	630, 631, 632, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 634, 635, 0, 294, 636, 295, 637, 0,
	638, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 639, 640, 641, 0, 303, 304, 642, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 643, 644, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 645, 356, 357, 358,
	360, 362, 359, 363, 364, 365, 366, 646, 647, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	648, 0, 0, 0, 371, 0, 372, 373, 0, 0,
	0, 374, 375, 376, 649, 650, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 651, 0, 652,
	0, 0, 388, 389, 390, 391, 392, 653, 654, 655,
	472, 0, 393, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 0, 400, 401, 402, 404, 0, 0,
	403, 656, 657, 0, 658, 0, 405, 406, 0, 659,
	0, 407, 408, 409, 0, 410, 0, 0, 0, 411,
	412, 413, 414, 415, 416, 0, 417, 419, 418, 0,
	420, 660, 0, 421, 422, 0, 0, 423, 0, 0,
	0, 424, 425, 428, 0, 0, 426, 427, 429, 430,
	0, 431, 432, 434, 437, 433, 435, 436, 438, 451,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 453, 0, 452, 0, 454, 455, 456, 462,
	464, 465, 460, 461, 463, 466, 467, 458, 459, 0,
	468, 457, 0, 0, 0, 469, 470, 0, 661, 471,
	662, 473, 474, 0, 0, 475, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 481, 663, 0, 482, 0,
	664, 483, 484, 476, 485, 486, 0, 488, 489, 490,
	491, 492, 493, 0, 494, 495, 665, 496, 497, 498,
	666, 499, 500, 501, 667, 502, 668, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 510, 0, 512, 513,
	669, 514, 515, 517, 516, 518, 0, 519, 0, 520,
	521, 522, 0, 0, 0, 0, 0, 523, 0, 525,
	526, 527, 528, 524, 529, 530, 531, 532, 533, 0,
	534, 535, 536, 0, 537, 538, 539, 540, 541, 670,
	0, 0, 543, 544, 550, 551, 552, 545, 546, 553,
	554, 555, 556, 557, 0, 559, 560, 558, 561, 562,
	563, 0, 564, 565, 547, 548, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 671, 0, 575, 0,
	576, 577, 578, 580, 549, 581, 586, 587, 672, 582,
	583, 584, 585, 673, 589, 590, 0, 591, 592, 0,
	588, 579, 0, 593, 594, 595, 596, 597, 598, 599,
	361, 600, 0, 601, 674, 675, 676, 677, 0, 610,
	0, 602, 603, 604, 678, 605, 679, 0, 606, 607,
	608, 609, 0, 611, 612, 0, 0, 613, 614, 615,
	617, 618, 616, 619, 0, 620, 0, 0, 621, 622,
	623, 680, 681, 682, 0, 625, 624, 626, 683, 0,
	627, 0, 0, 0, 0, 628, 629, 684, 630, 631,
	632, 1789, 1790, 0, 1822, 1823, 1824, 1833, 1834, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1820, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 1789, 1790, 1791, 1822, 1823, 1824,
	1833, 1834, 1835, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 1826, 1820, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1815, 1816, 1817, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 1790, 0, 1822, 1823, 1824, 1833,
	1834, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 1820, 0, 0, 1830,
	0, 0, 1840, 1792, 0, 0, 0, 0, 0, 1819,
	1821, 0, 1839, 0, 1814, 1815, 1816, 1817, 0, 0,
	0, 0, 0, 0, 1797, 0, 1836, 0, 1837, 1845,
	0, 0, 0, 0, 0, 1806, 1807, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 1828, 0, 0, 0, 1808, 0, 0,
	0, 0, 1830, 0, 0, 1840, 0, 0, 1812, 0,
	0, 0, 1819, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 1837, 0, 0, 0, 0, 0, 0, 1806, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1812, 0, 1814, 1815, 1816, 1817, 0, 0, 0,
	0, 1842, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 1830, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 1819, 1821, 1827, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 1836, 0,
	1837, 0, 0, 0, 0, 0, 0, 1806, 1807, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	1804, 1810, 1832, 1809, 1805, 0, 1802, 1800, 1801, 1793,
	1794, 1795, 1796, 1798, 1799, 0, 0, 0, 1818, 4339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 1804, 1810, 1832, 1809, 1805, 1831, 1802,
	1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 0, 0,
	1789, 1790, 4172, 1822, 1823, 1824, 1833, 1834, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 1826, 1820, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1803, 1804, 1810, 1832, 1809, 1805, 0, 1802, 1800,
	1801, 1793, 1794, 1795, 1796, 1798, 1799, 0, 0, 1789,
	1790, 4102, 1822, 1823, 1824, 1833, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1820, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	1814, 1815, 1816, 1817, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 1789, 1790, 1791, 1822, 1823, 1824, 1833, 1834,
	1835, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 1826, 1820, 0, 0, 1830, 0,
	0, 1840, 1792, 0, 0, 0, 0, 0, 1819, 1821,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 1837, 1845, 0,
	0, 0, 0, 0, 1806, 1807, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 1828, 0, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 1814,
	1815, 1816, 1817, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 1830, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 1819, 1821, 1827,
	0, 0, 1814, 1815, 1816, 1817, 0, 0, 0, 0,
	1842, 0, 1797, 0, 1836, 0, 1837, 0, 0, 0,
	0, 0, 0, 1806, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 1840, 0, 0, 1812, 0, 0, 0,
	1819, 1821, 0, 0, 0, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 1837,
	0, 0, 0, 0, 0, 0, 1806, 1807, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 1827, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 1804,
	1810, 1832, 1809, 1805, 1831, 1802, 1800, 1801, 1793, 1794,
	1795, 1796, 1798, 1799, 0, 0, 0, 1818, 4101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 1790,
	0, 1822, 1823, 1824, 1833, 1834, 1835, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1820, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 1803, 1804, 1810,
	1832, 1809, 1805, 1791, 1802, 1800, 1801, 1793, 1794, 1795,
	1796, 1798, 1799, 1811, 0, 0, 0, 4100, 0, 0,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 1804, 1810, 1832, 1809, 1805, 0, 1802, 1800, 1801,
	1793, 1794, 1795, 1796, 1798, 1799, 0, 0, 0, 0,
	3757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1815,
	1816, 1817, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 1790, 0, 1822, 1823, 1824, 1833, 1834, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 1820, 0, 0, 1830, 0, 0, 1840,
	1792, 0, 0, 0, 0, 0, 1819, 1821, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 1837, 1845, 0, 0, 0,
	0, 0, 1806, 1807, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	1828, 0, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 1790,
	0, 1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1820, 0, 0, 0, 0, 0, 0, 1792, 1838,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	1814, 1815, 1816, 1817, 1845, 0, 0, 0, 1842, 0,
	1797, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 1819, 1821,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 1837, 0, 0,
	0, 0, 0, 0, 1806, 1807, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 1814, 1815,
	1816, 1817, 0, 1831, 0, 0, 0, 1812, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 1790, 0, 1822, 1823, 1824, 1833, 1834, 1835, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 1826, 1820, 0, 0, 1830, 0, 0, 1840,
	1792, 1838, 0, 0, 0, 0, 1819, 1821, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 1836, 0, 1837, 1845, 0, 0, 0,
	1842, 0, 1806, 1807, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	1828, 0, 0, 0, 1808, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 1803, 1804, 1810, 1832,
	1809, 1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796,
	1798, 1799, 0, 0, 0, 1818, 3260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	1814, 1815, 1816, 1817, 0, 1831, 0, 0, 1842, 0,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 1819, 1821,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 1837, 0, 0,
	0, 0, 0, 0, 1806, 1807, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 1831, 0, 0, 0, 1812, 1803, 1804,
	1810, 1832, 1809, 1805, 0, 1802, 1800, 1801, 1793, 1794,
	1795, 1796, 1798, 1799, 0, 0, 0, 0, 3259, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1803, 1804, 1810, 1832,
	1809, 1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796,
	1798, 1799, 0, 0, 0, 1818, 3258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 1789,
	1790, 0, 1822, 1823, 1824, 1833, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1820, 0, 0, 1831, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 1844, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 1804,
	1810, 1832, 1809, 1805, 0, 1802, 1800, 1801, 1793, 1794,
	1795, 1796, 1798, 1799, 0, 0, 0, 0, 3257, 1814,
	1815, 1816, 1817, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 1790, 0, 1822, 1823, 1824, 1833, 1834, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1820, 0, 0, 1830, 0, 0,
	1840, 1792, 0, 0, 0, 0, 0, 1819, 1821, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 1837, 1845, 0, 0,
	0, 0, 0, 1806, 1807, 0, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 1828, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	1790, 0, 1822, 1823, 1824, 1833, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1820, 0, 0, 0, 0, 0, 0, 1792,
	1838, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 1814, 1815, 1816, 1817, 1845, 0, 0, 0, 1842,
	0, 1797, 4808, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 1819,
	1821, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 1837, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 1814,
	1815, 1816, 1817, 0, 1831, 0, 0, 0, 1812, 1797,
	0, 3322, 0, 0, 0, 3321, 0, 0, 0, 0,
	0, 1789, 1790, 0, 1822, 1823, 1824, 1833, 1834, 1835,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 1826, 1820, 0, 0, 1830, 0, 3193,
	1840, 1792, 1838, 0, 0, 0, 0, 1819, 1821, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 1836, 0, 1837, 1845, 0, 0,
	0, 1842, 0, 1806, 1807, 0, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 1828, 0, 4807, 0, 1808, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 1803, 1804, 1810,
	1832, 1809, 1805, 0, 1802, 1800, 1801, 1793, 1794, 1795,
	1796, 1798, 1799, 0, 0, 3222, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 3194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 1814, 1815, 1816, 1817, 0, 1831, 0, 0, 1842,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 1819,
	1821, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 1837, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 1831, 0, 0, 0, 1812, 1803,
	1804, 1810, 1832, 1809, 1805, 0, 1802, 1800, 1801, 1793,
	1794, 1795, 1796, 1798, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1803, 1804, 1810,
	1832, 1809, 1805, 0, 1802, 1800, 1801, 1793, 1794, 1795,
	1796, 1798, 1799, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2730, 0, 0, 0, 0, 0, 0, 1789, 1790, 1813,
	1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1820, 0, 0, 0, 2729, 0, 1831, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 1844, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	1804, 1810, 1832, 1809, 1805, 0, 1802, 1800, 1801, 1793,
	1794, 1795, 1796, 1798, 1799, 0, 0, 1814, 1815, 1816,
	1817, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	1790, 0, 1822, 1823, 1824, 1833, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1820, 0, 0, 1830, 0, 0, 1840, 1792,
	0, 0, 0, 0, 0, 1819, 1821, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 1837, 1845, 0, 0, 0, 0,
	0, 1806, 1807, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 1828,
	0, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 1790, 0,
	1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1820, 0, 0, 0, 0, 0, 0, 1792, 1838, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 1814,
	1815, 1816, 1817, 1845, 0, 0, 0, 1842, 0, 1797,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 1819, 1821, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 1837, 0, 0, 0,
	0, 0, 0, 1806, 1807, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 1814, 1815, 1816,
	1817, 0, 1831, 0, 0, 0, 1812, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	1790, 0, 1822, 1823, 1824, 1833, 1834, 1835, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 1826, 1820, 0, 0, 1830, 0, 0, 1840, 1792,
	1838, 0, 0, 0, 0, 1819, 1821, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1069,
	0, 0, 1836, 0, 1837, 1845, 0, 0, 0, 1842,
	0, 1806, 1807, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 1828,
	0, 0, 0, 1808, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 1803, 1804, 1810, 1832, 1809,
	1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798,
	1799, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 1814,
	1815, 1816, 1817, 0, 1831, 0, 0, 1842, 0, 1797,
	0, 0, 0, 0, 0, 3328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 1819, 1821, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 1837, 0, 0, 0,
	0, 0, 0, 1806, 1807, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 1831, 0, 0, 0, 1812, 1803, 1804, 1810,
	1832, 1809, 1805, 0, 1802, 1800, 1801, 1793, 1794, 1795,
	1796, 1798, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3738, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 1804, 1810, 1832, 1809,
	1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798,
	1799, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 1790, 1813, 1822, 1823,
	1824, 1833, 1834, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1820, 0,
	0, 0, 3323, 0, 1831, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 1844, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1803, 1804, 1810,
	1832, 1809, 1805, 0, 1802, 1800, 1801, 1793, 1794, 1795,
	1796, 1798, 1799, 0, 0, 1814, 1815, 1816, 1817, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 1790, 0,
	1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1820, 0, 0, 1830, 0, 0, 1840, 1792, 0, 0,
	0, 0, 0, 1819, 1821, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 1837, 1845, 0, 0, 0, 0, 0, 1806,
	1807, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 1828, 0, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 1790, 0, 1822, 1823,
	1824, 1833, 1834, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1820, 0,
	0, 0, 3261, 0, 0, 1792, 1838, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 1814, 1815, 1816,
	1817, 1845, 0, 0, 0, 1842, 0, 1797, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 1819, 1821, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 1837, 0, 0, 0, 0, 0,
	0, 1806, 1807, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 1814, 1815, 1816, 1817, 0,
	1831, 0, 0, 0, 1812, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 1790, 0,
	1822, 1823, 1824, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 1826,
	1820, 0, 0, 1830, 0, 0, 1840, 1792, 1838, 0,
	0, 0, 0, 1819, 1821, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	1836, 0, 1837, 1845, 0, 0, 0, 1842, 0, 1806,
	1807, 0, 1791, 0, 0, 0, 0, 3288, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 1828, 0, 0,
	0, 1808, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 1803, 1804, 1810, 1832, 1809, 1805, 0,
	1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 1814, 1815, 1816,
	1817, 0, 1831, 0, 0, 1842, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 1819, 1821, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 1837, 0, 0, 0, 0, 0,
	0, 1806, 1807, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	1831, 0, 0, 0, 1812, 1803, 1804, 1810, 1832, 1809,
	1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 1804, 1810, 1832, 1809, 1805, 0,
	1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 1790, 1813, 1822, 1823, 1824, 1833,
	1834, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 1820, 0, 0, 0,
	0, 0, 1831, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 1844, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2309, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 1804, 1810, 1832, 1809,
	1805, 0, 1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798,
	1799, 0, 0, 1814, 1815, 1816, 1817, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 1790, 0, 1822, 1823,
	1824, 1833, 1834, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1820, 0,
	0, 1830, 0, 0, 1840, 1792, 0, 0, 0, 0,
	0, 1819, 1821, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	1837, 1845, 0, 0, 0, 0, 0, 1806, 1807, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 1828, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 1790, 0, 1822, 1823, 1824, 1833,
	1834, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 1792, 1838, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 1814, 1815, 1816, 1817, 1845,
	0, 0, 0, 1842, 0, 1797, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 1819, 1821, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 1837, 0, 0, 0, 0, 0, 0, 1806,
	1807, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 1814, 1815, 1816, 1817, 0, 1831, 0,
	0, 0, 1812, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 1840, 0, 1838, 0, 0, 0,
	0, 1819, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 1806, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 1803, 1804, 1810, 1832, 1809, 1805, 0, 1802, 1800,
	1801, 1793, 1794, 1795, 1796, 1798, 1799, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 1803, 1804, 1810, 1832, 1809, 1805, 0,
	1802, 1800, 1801, 1793, 1794, 1795, 1796, 1798, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1803, 1804, 1810, 1832, 1809, 1805, 0, 1802, 1800,
	1801, 1793, 1794, 1795, 1796, 1798, 1799,
}

var sqlPact = [...]int{
	7385, -1000, -1000, -1000, -1000, 207, -1000, -1000, 205, 202,
	201, 200, 199, 198, 197, 195, 193, 191, 190, -1000,
	-1000, -1000, -1000, -1000, -1000, 189, -1000, -1000, 187, -1000,
	186, 183, 179, -1000, -1000, 178, -1000, 170, -1000, -1000,
	-1000, -1000, 168, 166, 164, 94941, 94386, 95489, 2308, 118132,
	102093, 2265, 84438, 117577, 83883, 117022, 2154, 11913, 116467, 2763,
	161, -1000, 115912, 160, 159, 158, -1000, 115357, -1000, 1814,
	-1000, 157, -1000, 8283, 71054, 156, 154, 152, 2751, 151,
	-1000, 150, 149, -1000, -1000, 148, -1000, 12340, 1522, -1000,
	145, 144, -1000, 318, 99880, 141, 138, 2611, 137, 135,
	69401, 131, 130, 2603, 2906, -1000, -1000, 2117, -1000, -1000,
	129, 127, 122, 121, 120, 119, 118, 117, 116, 115,
	114, 112, 108, -1000, 106, 105, 104, 103, 101, -1000,
	100, 99, 95, -1000, 94, -1000, 93, 92, 91, 90,
	88, 86, 85, 83, 82, 77, 75, 74, 73, 72,
	14030, -1000, -1000, 70, 1910, 1722, 1717, 1715, 1705, 1693,
	990, 61, 60, 59, 56, 55, 54, 47, 40, 37,
	35, 34, 33, 32, 31, 30, 28, 26, 25, 188,
	21, 20, 19, 17, 16, 15, 14, 3354, -1000, 1532,
	877, 33607, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	125804, 118680, 13, -44, 12, -1000, 3381, 1042, 57654, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 309, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 532, 2429, 770,
	-1000, -1000, -1000, 114809, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2306, -29, -1000, 2035, -1000, -1000, -1000, -1000,
	-1000, 769, -1000, 2305, 345, 2259, -1000, -1000, -1000, 3456,
	2472, 3854, 3853, 3852, 3851, 3849, 125256, 1826, 3848, 2540,
	3844, 3842, 3841, 3840, 3838, 3837, 3836, -1000, 93831, 1051,
	93276, 92721, 3471, 114261, 92166, 113706, 77789, 49683, 831, 3455,
	-1000, -1000, -1000, -1000, -1000, -1000, 118680, -1000, 1050, -1000,
	-1000, 3834, 2084, 766, 101538, -1000, -1000, 113151, 1947, -1000,
	-1000, -1000, 931, 1258, 35317, 35317, 35317, 308, -1000, -1000,
	-1000, -1000, -1000, -1000, 3833, 3832, 3831, 3830, 3829, -1000,
	-1000, 83328, 26579, 82773, 82218, 112596, 26012, 91611, 91056, 3827,
	3825, 3824, 112041, 77222, 3571, 3569, 1049, 2027, 1441, -1000,
	-1000, -1000, -1000, -1000, -1000, -12, 73268, 3606, 118680, -1000,
	300, -1000, -1000, -1000, -1000, -1000, -1000, 49113, 640, 48543,
	645, 47973, 312, -1000, -1000, -1000, -1000, 76655, -1000, 111486,
	2455, 3818, 3817, 1157, 3810, 3345, 1824, 3808, 1881, 1239,
	3806, 3805, 3804, 3802, 3801, 3796, 3789, 1469, 110931, 3029,
	1495, 110376, 1702, 76088, 1048, 90501, 95489, 2626, 109821, 1413,
	1412, -1000, -1000, -1000, -1000, 3151, 2877, 2870, 1364, -1000,
	-1000, -1000, -1000, 61027, 6631, 6158, -1000, -1000, 5307, 109266,
	63852, 95489, 95489, -1000, -1000, -1000, -1000, -1000, 47403, 528,
	46833, 820, -1000, -1000, 61592, 2980, -1000, -1000, -1000, -1000,
	46263, 353, 45693, 708, 118680, -1000, 3028, 1935, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2405, 1658, 3623, 2767,
	75521, 2090, 1416, 3415, 3148, 3146, 1523, 2023, 3093, 3788,
	2621, 3090, 3088, 3083, 3074, 3073, 1496, 2580, 316, 2575,
	33037, 3006, 1689, 45123, 1687, 1519, 3069, 3061, 3645, 2004,
	1996, 2072, 81663, 3787, 3786, 3373, 3056, 3049, 2824, 3038,
	-1000, 2979, 1465, -1000, -1000, -1000, -1000, -1000, 1478, -1000,
	-1000, -1000, -1000, -1000, 86082, -1000, -1000, 1820, -1000, -1000,
	1820, -1000, -1000, -1000, -1000, -1000, 1363, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1532,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2720, -1000, 2074, -1000, -1000, 2498, 3378, 3378, 3378, 3454,
	510, 507, -1000, 188, -1000, -1000, 131782, -1000, -1000, 50253,
	50253, 50253, 50253, 50253, 50253, 50253, 50253, 2206, -1000, 764,
	-1000, -1000, 809, -1000, 763, 699, 636, -1000, -1000, -1000,
	-1000, -1000, -1000, 762, -1000, -1000, -1000, -1000, -1000, -1000,
	3606, -1000, 29484, -1000, -1000, -1000, 445, 760, 50253, -1000,
	-1000, 3660, 3659, 997, -1000, 288, 952, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3027,
	757, 754, -1000, 750, 749, 748, 745, 740, -1000, 739,
	-1000, 736, 735, 726, 724, 721, 720, 719, 718, -1000,
	2069, -1000, -1000, -1000, -1000, -1000, -1000, 690, 689, 689,
	689, -1000, 1043, -1000, -1000, -1000, 385, 677, 355, 665,
	663, 660, -1000, 716, 715, 714, 712, 707, 705, 704,
	703, 702, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1039,
	-1000, -1000, -1000, -1000, -13, 118680, -1000, 532, -13, -1000,
	-1000, 701, -1000, 37626, 37626, 37626, -1000, -1000, 2298, 50253,
	-1000, 2471, -1000, 0, 0, 907, 59328, -1000, 56518, 907,
	403, 823, 64962, -1000, 2977, -1000, -1000, 700, 277, -1000,
	-1000, -1000, -1000, 27144, 2976, 118680, 118680, 118680, 95489, 95489,
	95489, 3782, 3255, 50253, -1000, -1000, 70497, 118680, 96037, -1000,
	-1000, 3553, 71607, 69949, 118680, 3022, 108711, 3781, -1000, -1000,
	-1000, -1000, -1000, 3226, 3780, 3779, 3778, -1000, 118680, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 240, 3225, -1000, -1000,
	99325, 240, 3212, -1000, 240, 3211, -1000, 98777, -1000, -1000,
	2247, 3206, -1000, -1000, 243, 3205, -1000, -1000, -1000, 242,
	3203, -1000, -1000, 271, -47, 3196, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 131782, -1000,
	-1000, -1000, 108156, -1000, 3383, -1000, 118680, -1000, 50253, -1000,
	-1000, 3552, 1719, 78909, 3492, -1000, -1000, -24, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2514, 2477, 1156, 2325, -1000,
	3277, 1402, 35317, 3333, -1000, -1000, -1000, -1000, -1000, 269,
	27144, -1000, -1000, -1000, -1000, -1000, -1000, 2180, 3195, 1403,
	-1000, 2324, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2113, 3191, -1000, 2151, 3188, 2041, -1000, -1000, 2205, -1000,
	3369, -1000, -1000, 2141, 3187, 1, -1000, -1000, 2309, -1000,
	-1000, -1000, -1000, 2025, -1000, 1290, 3185, -1000, 2766, 2766,
	89946, 3181, 63287, 61592, 73268, -16, -1000, -1000, -1000, -1000,
	-189, -1000, 25441, 131782, -1000, -1000, -1000, -1000, 1724, 131782,
	954, -1000, -1000, 3183, -1000, 131782, 953, -1000, -1000, 3182,
	-1000, 3013, -1000, -1000, 2417, 2414, -1000, -1000, 3777, -1000,
	-1000, 3773, -1000, 3770, 3767, 3765, -1000, 1755, 2012, 3761,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 89398, 2297,
	-1000, -1000, 88288, 3011, -1000, 2402, 3491, -1000, 88843, 1047,
	-1000, 991, 2395, -1000, 98229, 906, 2392, -1000, 3760, 3469,
	2716, 991, 2391, -1000, -1000, -1000, -1000, -1000, 1046, -1000,
	67183, -1000, 67183, -1000, 1583, -1000, 124708, 0, 95489, 3606,
	-1000, -50, -1000, -1000, -1000, 1042, -1000, 60457, -1000, 60457,
	100983, 78354, 972, 805, 68846, 131356, -1000, 1026, -1000, -1000,
	131782, -1000, -1000, -1000, -143, 2765, -1000, 78354, 62722, 131782,
	-1000, -1000, -1000, -1000, 131782, -1000, -1000, -1000, 78354, 88288,
	-1000, 107601, 87740, -1000, -1000, 1453, 2565, -1000, -1000, -1000,
	78354, 1310, 78354, 78354, 78354, -1000, 107046, -1000, -1000, 2085,
	1464, 3374, 2075, 95489, -1000, 1922, -1000, -1000, -1000, 3400,
	3171, 118680, -1000, -1000, 3010, -1000, 72720, 97681, -1000, 97133,
	-1000, 96585, -1000, 95489, -1000, 95489, -1000, 3758, 3754, 3752,
	-1000, -1000, 3750, -1000, 3747, 3393, -1000, 706, 44553, 131782,
	3387, -1000, 3746, 1978, 3006, 131782, -1000, 3170, 1725, 1688,
	118680, -1000, -1000, 118680, -1000, 118680, -1000, -1000, -1000, 1546,
	-1000, -1000, 2511, -1000, -1000, -1000, -1000, 95489, 95489, 95489,
	95489, 1449, -1000, 43983, -1000, -1000, 3062, 3745, 1751, -1000,
	1921, -1000, 2975, 3392, -1000, 1439, 1731, -1000, -1000, 245,
	-1000, -1000, -24, -1000, 124160, -1000, 2498, -1000, 118680, -1000,
	2486, 2994, 3005, 1524, 2314, 2625, -1000, 43413, 2581, 53673,
	2323, 188, -1000, -1000, 188, 188, 34747, -1000, -1000, 71607,
	71607, 27144, 1378, 50253, 50253, 50253, 50253, 50253, 50253, 50253,
	50253, 50253, 50253, 50253, 50253, 50253, 50253, 50253, 50253, 50253,
	50253, 50253, 50253, 50253, 50253, 50253, 50253, 50253, 50253, 50253,
	50253, 50253, 50253, 50253, 50253, 50253, 50253, 50253, 50253, 2106,
	50253, 1346, 50253, 50253, 50253, 50253, 2221, -1000, -1000, 1938,
	568, 2016, 699, -1000, -1000, -1000, 3599, 3599, 3599, 1038,
	1038, 1038, 15192, 15192, 678, 3743, 809, -1000, 50253, -1000,
	128, 59883, 50253, 27711, -1000, 507, 10590, 2536, -1000, 506,
	28310, -1000, -1000, -1000, 29484, 636, 42814, 50253, 1030, 131782,
	-1000, -1000, 1456, 3629, 24870, 3041, 2816, 697, 864, 860,
	32438, 31839, 31240, 30641, 855, 787, 50253, 50253, 50253, 50253,
	50253, 50253, 50253, 50253, -1000, -1000, 3638, -1000, 3629, -1000,
	-1000, -1000, -1000, 3629, 1375, 1354, 3629, -1000, 3629, 3629,
	8595, 8595, 42244, 41674, 41104, 54243, 40534, 50253, 30071, 39964,
	39394, -1000, 118680, -13, 3551, 50253, 303, -1000, 129986, -1000,
	303, 303, 696, -51, 131782, 2723, 2723, 58212, 2354, 2207,
	2207, 2207, -1000, 907, 20273, 907, 105395, 2219, 907, 907,
	256, 287, 504, 55953, 2471, 105395, 791, 695, 11, 10,
	8, -1000, -1000, 7, 6, -1000, -1000, 95489, 693, 27711,
	27144, 254, 2033, -57, 2604, 2589, -1000, 2588, 2587, -1000,
	2586, -1000, 1752, -59, 1273, 95489, 118680, 1419, 3742, -56,
	-1000, 5231, -62, -1000, 1350, 252, 3629, -1000, -1000, -1000,
	-1000, -1000, 3741, 3740, -1000, 1037, 692, 691, 522, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 690, 689, 689,
	689, -1000, 385, 677, 355, 665, 663, 660, -1000, -1000,
	-1000, -1000, -1000, 2971, 95489, 118680, 1408, 3734, -189, 96037,
	-45, -1000, -1000, 118680, -1000, -1000, -1000, 3733, -1000, 95489,
	-1000, -1000, 95489, 240, 3180, -1000, 95489, -1000, 95489, 239,
	3174, -1000, -1000, 118680, -1000, 95489, 95489, -1000, 118680, 118680,
	118680, 78354, 78354, 234, -1000, 95489, 901, -65, 1161, -24,
	-1000, -1000, -1000, -1000, -1000, 1820, -1000, 1718, -1000, -1000,
	-1000, -1000, -1000, -1000, 1442, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 997, -1000, -1000, -1000, -1000, -1000, -1000,
	3627, 3608, -14, -1000, -1000, 27144, -1000, -25, 1665, 1838,
	1272, -1000, 81108, 2543, 3372, 3732, 2704, 3358, 1577, -1000,
	1540, -1000, 3464, 86082, 3504, 3537, 1328, -1000, 2970, -1000,
	-1000, 930, 1745, 1707, 1268, 1267, 86082, 2151, -1000, 71607,
	-1000, 2653, 3453, 1411, 1407, 1411, 1411, 1400, -1000, 86082,
	1696, 1266, 1263, 1261, -1000, -1000, 1980, 1979, -1000, -1000,
	106498, -1000, 1260, 1259, 3568, 2720, 2176, 840, 1976, -1000,
	-28, 3499, 3535, 1326, -1000, 2968, 1254, -1000, -1000, -1000,
	3450, 95489, 27144, 1593, 1584, 1582, 1691, 1252, -15, -1000,
	3497, 1249, 1247, -1000, 1059, 4868, 3303, -1000, 78354, 1059,
	1059, 1924, 3173, 2736, 1736, -1000, 2764, 905, 2756, -1000,
	-1000, -1000, 905, -16, 73268, 118680, 251, -1000, 128, 50253,
	50253, 128, 50253, 128, 3486, 3165, 3163, -1000, -1000, -1000,
	-1000, -1000, 3731, 1992, 2530, -1000, -1000, 658, 2390, 2967,
	118680, 2651, -17, 95489, -1000, 72172, 3161, 73824, 2151, 2382,
	-1000, -1000, 87185, -1000, 3134, 532, 2380, -1000, 581, 3729,
	3130, -1000, 123612, -1000, 3383, 1251, 3129, 1106, 698, 3550,
	-1000, 698, 67736, -1000, 118680, -1000, 0, 652, 80012, -68,
	-70, 503, -1000, 105950, 118680, 1104, 80560, 118680, 3322, 1997,
	1995, 987, 61592, -1000, 61592, -75, -143, 2754, 1472, 972,
	972, 905, -1000, 905, -1000, 95489, 3003, -1000, -1000, 78354,
	972, 972, 972, -1000, -1000, -1000, -1000, 3727, 3725, 3724,
	3723, -1000, -1000, 988, 95489, 118680, 95489, -1000, -1000, 1690,
	-1000, 250, -1000, 118680, -1000, 118680, 118680, 95489, -1000, 988,
	118680, 988, 118680, 988, 118680, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 128, -1000, -1000, 131782, -1000, 50253, -1000, -1000,
	1535, 3722, 1610, -1000, 3002, -1000, 2997, -1000, 44, -1000,
	-1000, 1855, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3716,
	131782, -1000, 1948, -1000, -1000, -1000, -1000, 95489, 95489, 95489,
	95489, 118680, 3299, -1000, 118680, 3297, 95489, -1000, -1000, 86082,
	-1000, 2486, 2994, -1000, -1000, -1000, -1000, -1000, -1000, 1455,
	2274, -1000, 2560, -1000, 1549, -1000, -1000, -1000, 131782, 54813,
	-1000, -1000, 131782, 1749, -1000, 53103, 52533, -1000, -1000, 1729,
	95489, 2628, -1000, 2628, -171, -1000, 129560, 2559, 95489, -1000,
	-1000, -1000, -1000, -1000, 929, 946, 946, 1274, 1274, 1274,
	1274, 3490, 543, 2253, 342, 5034, 5034, 5345, 5345, 5345,
	5345, 5345, 5034, 5049, 1038, 1038, 5049, 5049, 5049, 5049,
	5049, 1038, 1038, 1038, 5034, 5034, 5034, 1038, 15192, 131964,
	11697, 50253, 50253, 1246, 1934, 568, 10912, 50253, 6357, 6357,
	6357, 6357, -1000, 2159, -1000, -1000, -1000, -1000, 2960, 655,
	54243, 54243, -1000, -1000, -1000, -1000, 28897, 50253, -1000, -1000,
	-1000, -1000, 38795, -1000, -1000, 129088, -315, 501, -1000, 229,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 497, -126, 79, -1000, 50253, 50253, 50253,
	496, -1000, 227, 50253, 118680, -1000, 17957, 788, -127, -1000,
	-77, 1448, -1000, 50253, -1000, -1000, 1245, -1000, 1243, 1241,
	1238, -1000, 651, 477, -1000, 226, -1000, 2213, 650, 648,
	50253, -1000, -1000, -1000, -1000, -1000, 128659, -1000, -1000, 128477,
	-1000, -1000, 128369, -1000, -1000, 128187, -1000, -1000, -1000, -1000,
	-1000, 131174, 17325, 17046, 16207, 9766, 13916, 13254, -78, 474,
	-83, 464, 927, 926, 457, 456, 455, -85, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-86, 454, -1000, 2939, -126, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 453, -1000, 452, -1000, 131066, -126, 449,
	6328, -1000, 54243, 54243, 54243, 54243, -1000, 446, -1000, 129378,
	-1000, 130884, 38225, 38225, 38225, 443, 130458, 50253, -126, -88,
	-1000, -96, -1000, -1000, 551, -98, 999, 37626, 57096, 27144,
	-1000, 999, 999, 50253, -1000, 50253, 2571, -1000, -1000, -1000,
	-1000, 2570, 1941, 2723, 58212, -1000, -1000, -1000, -1000, 105395,
	-1000, 3606, 2856, -1000, 105395, -1000, -1000, 118680, 532, -1000,
	105395, 105395, 27144, 907, -1000, 907, 105395, 629, -1000, -1000,
	-1000, -1000, -1000, 440, 65520, 79, 224, 27144, 991, -1000,
	-1000, 2665, 2665, 2665, 2665, 2665, -1000, -1000, 118680, 1234,
	-18, -149, 2750, -1000, 3575, -1000, 2091, -1000, 71607, -1000,
	808, 1172, 27144, -1000, -1000, -1000, 647, -1000, 3629, 3629,
	-1000, 3629, 118680, 2938, 282, 2747, -1000, 244, 73824, 3712,
	-1000, -1000, 240, -1000, 95489, 240, 240, -1000, 95489, 95489,
	2247, -1000, 243, -1000, 242, -1000, -1000, -47, -1000, 1024,
	35317, -1000, 1820, -1000, -1000, 1592, -1000, 1998, -1000, 1330,
	-1000, -1000, -1000, -1000, 35317, -1000, 2375, 118680, 118680, 95489,
	-1000, 118680, -1000, 2160, 73824, -1000, 2379, 123064, 2369, 71607,
	118680, -1000, -1000, 646, 942, 2557, 2555, 1102, 118680, 118680,
	2553, 122516, 121968, -1000, 3711, 118680, 2114, 50253, 3448, 2233,
	2055, 128, 128, -1000, 128, 128, 128, -1000, 644, 1332,
	95489, 95489, 118680, 73824, 95489, 1892, -1000, -1000, -1000, -1000,
	-1000, 86630, -1000, -1000, 3636, 3635, -1000, 1411, -1000, -1000,
	-1000, 1411, 2151, 1879, 118680, 73824, 95489, 73824, 121420, 120872,
	-1000, -1000, 1681, 118680, -1000, -1000, -1000, -1000, 1438, -1000,
	840, 2098, 128, 128, -1000, 128, 128, 128, 643, 27144,
	1973, -1000, 2998, 118680, 3658, 120324, 3657, 118680, 118680, 118680,
	73824, 3360, 118680, 118680, 73824, -1000, 119776, 4868, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 74954,
	1105, 118680, 1290, -1000, -1000, 1673, 1229, 1226, 86082, 2099,
	1671, 1839, 118680, 61592, 985, 61592, 2724, -1000, -1000, 24299,
	-1000, 131782, 131782, -1000, 131782, -1000, 72172, 78354, 118680, -1000,
	1045, 118680, 80560, 960, 3128, 66630, -189, 972, 78354, 95489,
	-17, 2651, 118680, -1000, -1000, -1000, -1000, -1000, 2151, 3127,
	532, 2372, -1000, 78354, 3548, 3125, 642, 3710, 3706, -1000,
	95489, 2296, 2370, -1000, -1000, 119228, 3236, 840, 118680, 999,
	58212, 1936, -1000, 64407, 1062, 118680, 1852, 218, -1000, -1000,
	-1000, 23, 118680, -1000, 821, -1000, -1000, 652, 652, 972,
	-263, 638, -1000, 887, 880, 62157, 78354, -101, -1000, -1000,
	-1000, -1000, 2369, 95489, 118680, 1297, 2711, 118680, -115, -1000,
	213, 637, 879, 875, -1000, 2413, -1000, -143, -1000, 987,
	61592, 2929, 2925, -1000, -1000, 1018, -1000, 1433, 972, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1, 1830, 118680, -189, -189, -37, -18, -1000, 988, -1000,
	988, -1000, 988, -1000, 131782, -1000, -1000, -1000, 1609, 1601,
	118680, -1000, -1000, 118680, -1000, 27144, 118680, 95489, 27144, 95489,
	2992, 2988, -1000, -1000, -1000, 118680, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1133, -1000, 1749, 2269, -1000, 636, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2495, -1000,
	-21, 34747, 909, -1000, -1000, 95489, -2, 50253, 50253, 10303,
	8261, 50253, 54243, 54243, -1000, 50253, 7865, -1000, -1000, -1000,
	-1000, -1000, 2920, 635, 50253, 71607, 8182, 7575, -1000, 439,
	11626, 5049, -1000, 50253, -1000, 478, -1000, 437, 37056, -1000,
	130168, 36, -117, -1000, 20857, -126, -120, -1000, -1000, 802,
	-1000, 3178, -1000, 50253, 130276, 2454, 2010, 1811, 1622, 3629,
	3655, 23728, -1000, 68291, 1025, 2232, 127741, -1000, -1000, -1000,
	-1000, 71607, 71607, 50253, 50253, -1000, 50253, 50253, 50253, -1000,
	-1000, -1000, 3629, 925, -1000, -1000, -1000, 925, -1000, -1000,
	1411, -1000, 1411, -1000, 50253, -1000, -1000, 2918, 50253, -1000,
	71607, 71607, 54243, 54243, 54243, 54243, 54243, 54243, 54243, 54243,
	54243, 54243, 54243, 54243, 54243, 54243, 54243, 54243, 54243, 54243,
	54243, 54243, 2562, 54243, 3597, 3597, 3597, 1111, -1000, 2987,
	2918, 50253, 50253, 71607, 432, 430, 427, -1000, 50253, -126,
	-1000, -1000, 6713, 634, -1000, 2483, -1000, 2807, -1000, 50253,
	-1000, -125, -1000, 2471, -1000, -1000, 2807, 2807, -135, 131782,
	58212, 58212, -1000, 633, 50253, 2569, -1000, -1000, 786, -313,
	-1000, 874, -1000, -1000, -1000, -1000, -1000, -1000, 532, -1000,
	-1000, -1000, 211, 105395, 105395, 782, -1000, -136, -1000, -1000,
	-137, -1000, 3547, 425, 27144, -1000, 999, 2702, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -189, 118680, 118680, 1664, 2256,
	3654, -1000, 3633, 799, 781, 210, 3629, 421, 400, 399,
	-189, 118680, 118680, 1663, 118680, -1000, -1000, -1000, 240, -1000,
	-1000, -1000, 239, -1000, -1000, -1000, -1000, 2633, -1000, -24,
	-1000, -1000, -1000, 50253, -1000, -1000, 3367, 1224, 1223, -1000,
	-1000, -1000, 2919, -1000, 3119, -1000, 2368, -1000, 1053, -1000,
	1600, -1000, 50253, 631, 2708, 624, 623, 3703, 2116, 3702,
	1103, 3118, 2247, 3117, 2247, -1000, -1000, -1000, 937, -1000,
	131782, 2233, -1000, 622, 619, -1000, -25, 1635, 1836, 1222,
	1016, -1000, -1000, -1000, -1000, 50253, 50253, 104847, -1000, 486,
	3369, -3, -1000, -1000, -1000, 1654, 1221, 1216, -1000, -1000,
	-1000, -1000, 2151, 1644, 1210, 1209, -1000, -1000, -1000, -1000,
	-1000, 2359, -1000, -1000, 3112, 1007, -1000, 3053, 3052, 923,
	118680, -1000, 996, -1000, -1000, -1000, -1000, 50253, -1000, -28,
	1204, 3503, 2357, 95489, -1000, 2247, 3104, 1200, -1000, 1199,
	-1000, -1000, -1000, 3496, 3494, 1213, -1000, -1000, -1000, -1000,
	-1000, 74389, -1000, -1000, 1059, 118680, 73824, 95489, 1728, -1000,
	-1000, 84986, 85534, 118680, 2736, -189, 905, -1000, 2386, 905,
	985, 2892, -1000, 2635, -1000, 995, 95489, 3700, 398, -144,
	-33, 71607, 3542, -1000, 2311, 653, 95489, 912, -1000, 3606,
	-1000, -1000, -1000, 994, -1000, 3487, 95489, 3541, 3103, 991,
	128, 95489, 3613, -1000, -1000, 3532, 95489, 3101, 2294, 2356,
	2521, 840, 79464, 991, 2231, -43, -1000, 1852, 36457, 3366,
	-147, -1000, -1000, -1000, 999, 67736, 58212, 50253, 3698, -153,
	-1000, -1000, -1000, -1000, -1000, 102648, 102648, 78354, 78354, 78354,
	972, 118680, 118680, 80560, -1000, -1000, 617, 118680, 118680, 615,
	-1000, 118680, 118680, 3697, 78354, 78354, 78354, -34, 614, -1000,
	872, 871, 870, -1000, -1000, -1000, -1000, -1000, -1000, 865,
	987, -1000, -143, 61592, 128, -1000, 2241, 95489, -1000, 23157,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 988, -189, -1000,
	-1000, 2104, 2322, 2104, 1799, 1787, -1000, -1000, 2266, -1000,
	-1000, -1000, -1000, 2643, 3376, 27144, 3484, 6357, 50253, 50253,
	7115, 5659, 4963, 6357, 50253, 50253, 71607, 132072, -154, 50253,
	50253, -1000, 50253, 777, 131782, -1000, 3653, 50253, 392, 390,
	-1000, -1000, -1000, 3621, -1000, -1000, -1000, 131782, 50253, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 389, -1000, 125, -1000,
	-1000, -1000, 126352, -1000, 50253, 380, 3446, -1000, 379, 378,
	11024, 424, 127678, 127559, 127092, 373, -1000, -1000, 369, 367,
	131782, 2987, 131782, -1000, -1000, 1142, 1142, 1389, 1389, 1389,
	1389, 3597, 304, 1023, 983, 582, 582, 582, 974, 1111,
	1111, 582, 582, 582, 1111, 2891, 2534, 612, 6391, -1000,
	-1000, 131782, 131782, 365, -1000, -1000, -1000, -126, 364, 6713,
	-1000, 2799, 3439, 131782, -1000, 58212, 2799, 2799, -1000, -1000,
	1941, 118680, 131782, 58212, -1000, 2856, -1000, 21439, -1000, 27144,
	-1000, -1000, -1000, -1000, 3606, -1000, 65520, -1000, 611, -1000,
	24, -1000, 2702, -1000, 862, -1000, -1000, 78354, 78354, -189,
	-180, 118680, -1000, -1000, 775, 3692, 794, 27144, 363, -1000,
	-1000, -1000, -189, -189, 118680, -189, -1000, -1000, -1000, 3318,
	131782, 118680, 118680, 1471, 104299, 118680, 3099, -1000, 5073, -1000,
	1102, 126973, 58770, -1000, 58770, 118680, -1000, -1000, -1000, -1000,
	1875, 1543, 3690, 1150, -1000, 3402, 118680, -1000, 118680, -1000,
	-1000, -1000, 118680, 118680, 95489, 118680, -1000, 73824, 3072, -155,
	131782, -35, -1000, 861, -1000, 1414, -1000, 22586, 118680, 73824,
	95489, 118680, 73824, 95489, 3092, 118680, 2199, -1000, -1000, 3051,
	-1000, 3070, -175, 27144, -1000, 3649, 3648, 3087, 3406, -1000,
	118680, 3647, 118680, 95489, 3314, -1000, -1000, -1000, -1000, -1000,
	-1000, 1643, 1198, 1183, 2290, -36, 2289, 2255, -37, 2099,
	985, -40, 605, -1000, 857, -1000, -1000, 853, -1000, 985,
	-1000, 78354, 61592, 3689, 532, -1000, 2703, -1000, 100428, 2260,
	128, -1000, 3687, 103203, 599, -1000, 2239, -1000, 773, -1000,
	2479, 73824, 2151, 128, 95489, -1000, -1000, 532, 361, -41,
	-1000, 3094, 1093, 27144, 95489, 3080, 2523, 840, 79464, -1000,
	1251, 2625, -1000, -42, -1000, 680, 128, 2231, -1000, -43,
	131782, -1000, 850, -1000, -177, -1000, -1000, 360, -1000, 3313,
	3311, -1000, 2817, 58770, 598, 597, 118680, 3308, -1000, -1000,
	-178, -1000, -1000, 2630, 2630, 78354, 61592, 78354, 78354, -1000,
	987, 905, -1000, 2421, -1000, -1000, -1000, -1000, -1000, 27144,
	1721, -1000, 593, 590, -1000, -1000, -1000, -1000, 3376, 6357,
	6357, 50253, 50253, 50253, 6357, 132072, -184, -1000, 6357, 6357,
	-126, -1000, -1000, 130168, -1000, -1000, -1000, 131782, -1000, 22015,
	2111, -1000, 126910, -1000, 34747, -1000, -1000, 50253, 50253, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 54243, 2880, 588,
	71607, -1000, -1000, 356, 984, 50253, 51963, 2471, 984, 984,
	-1000, -186, -1000, -1000, -1000, 3606, 24, -1000, -1000, 3685,
	27144, -1000, 78354, -1000, -1000, 3684, -170, 793, -1000, 3683,
	-1000, -1000, 124, -1000, -1000, -1000, 2733, 3531, -1000, 1955,
	-1000, 118680, -1000, 118680, -1000, 27144, 118680, 2823, 1286, -1000,
	942, 2550, 587, 54243, 1130, 95489, 948, 2784, 2779, -1000,
	3545, 3438, 2794, -187, -1000, 118680, 50253, 118680, -193, -196,
	2342, -1000, -1000, 1128, 1275, 50253, 1121, -1000, -1000, -1000,
	71607, 586, 2247, 2247, -199, -201, -1000, -1000, -1000, 50253,
	1181, 118680, 35887, -1000, 3681, 3369, -1000, -1000, -1000, -1000,
	-1000, -1000, 118680, -1000, 118680, -1000, 50253, 1177, -1000, -1000,
	-1000, 3646, 2247, 27144, 2247, -1000, 2247, 3406, 1146, 118680,
	73824, 95489, 2038, 2038, 2923, -1000, -1000, -1000, 2452, 2452,
	78354, 61592, -1000, -47, 985, -1000, 3530, 2697, 3676, -1000,
	-1000, -1000, -1000, 2547, -1000, -1000, 118680, 2545, 979, -1000,
	-202, -1000, 846, 844, 80560, 960, 959, -1000, -52, 585,
	-1000, 843, -1000, -1000, -1000, -1000, 532, 3529, -1000, 3644,
	584, 583, 118680, 2287, 569, 27144, 3362, 840, 79464, -1000,
	3236, 1852, -1000, 2349, 118680, 3356, -1000, 2625, 568, -1000,
	972, 567, 565, 2453, 2453, -204, 58770, 58770, -209, 564,
	972, -1000, -210, -1000, -1000, -1000, -1000, -1000, -1000, -53,
	-1000, 919, 913, -1000, -1000, 95489, 95489, 50253, 50253, -1000,
	6357, 6357, 6357, -1000, 346, -1000, -1000, 2231, 3431, -1000,
	-60, 19465, 19086, 2782, 54243, 71607, -215, -1000, -1000, 118680,
	131782, -95, -1000, 131782, 563, 561, 493, -1000, -1000, -1000,
	630, -1000, -1000, -1000, 118680, 3675, -1000, 118680, 103751, 118680,
	-1000, -1000, 1903, -1000, -1000, -1000, 118680, 2352, -1000, -1000,
	-1000, 1099, 50253, 6391, 54243, 559, 50253, -1000, 558, 553,
	3526, 3290, -1000, 2676, 2889, 1885, 58770, -1000, 3376, -1000,
	18802, -1000, 1064, 1984, -1000, -1000, -1000, -1000, 131782, 54243,
	3406, 58770, -1000, -1000, 550, 549, 131782, 546, 842, 2868,
	-1000, -1000, -1000, -1000, -1000, 131782, 545, 3503, -1000, -1000,
	-1000, -1000, 2247, 95489, -1000, -1000, -1000, 1175, -1000, -1000,
	-1000, -1000, 3674, 3673, 2867, 84986, -1000, -218, -1000, -1000,
	1989, 128, 2100, 2731, -1000, 2260, 544, -1000, -1000, 2280,
	2597, -1000, 103203, 35317, 35317, 338, 3521, 959, -1000, 3595,
	-1000, 3279, 3279, 50253, 3510, 128, -1000, 3613, 58770, -1000,
	95489, 58770, 2284, 2039, 2508, 79464, -1000, 2521, -1000, -1000,
	-224, 118680, 1852, -1000, -1000, 78354, 78354, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1064, -225,
	-226, -1000, 78354, -1000, -1000, 2421, -1000, 118680, -1000, 118680,
	-1000, -1000, -231, -233, -1000, 1959, 50253, 34747, -1000, -1000,
	2782, -234, -1000, -114, -1000, 3509, 51963, 3671, 3670, 3669,
	-1000, -189, -1000, -189, -1000, 1939, -1000, -1000, -1000, 3076,
	2795, 18620, 6391, 2488, 118680, 8944, 2151, 2151, -1000, 3495,
	2884, -1000, -1000, 2697, 541, -1000, -1000, -1000, -1000, 909,
	118680, 2697, 2786, 95489, 6391, 1097, -240, 2104, 2104, 50253,
	34177, 2195, 50253, -1000, -1000, 3406, 118680, -1000, -1000, 118680,
	2281, -1000, 2851, 3610, -1000, 960, -1000, 2181, 118680, -1000,
	3395, -1000, 3307, -1000, -1000, -1000, 2703, 128, -1000, -1000,
	-1000, -241, 131782, 128, -1000, 324, -242, 1093, -243, 95489,
	1967, -1000, 840, -1000, 2523, 999, -1000, -1000, -251, -258,
	1885, 1064, 2098, -260, -1000, -261, -267, -1000, -1000, 323,
	51393, 51393, 51393, -126, -171, -1000, 118680, 540, -1000, -1000,
	-1000, -1000, -1000, 3045, 982, -1000, 891, 1864, 321, 1101,
	319, 313, -1000, -1000, -1000, 2098, 118680, -1000, -1000, -1000,
	981, 532, -1000, 50253, 1064, -268, -1000, 1060, -269, -1000,
	1058, -270, -1000, 2865, -1000, -275, 2247, -252, 234, 2038,
	980, 3473, -1000, -1000, -1000, 2280, 95489, -276, -1000, -1000,
	2347, -1000, 2697, 979, -1000, -1000, -1000, 1064, 530, 1885,
	527, 1485, 840, -1000, -1000, 1411, 3362, 3250, 972, 972,
	2697, 1885, 971, -1000, 972, -1000, -1000, -1000, 3095, -1000,
	55383, 2263, 1763, 129270, 3095, 3095, -1000, -1000, 118680, 3467,
	-1000, 895, 893, 1518, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2794, -277, 3466, 2488, 131782, 2697, -1000, 2104,
	2713, -1000, 2104, 2863, -1000, 2155, -1000, -1000, -1000, 2821,
	-1000, 2860, -1000, 1720, 3596, 2500, 526, -1000, 118680, 1737,
	1726, 3668, 2100, 2280, 1885, 58770, 2697, 58770, 2086, -1000,
	118680, -1000, 2039, 1336, -1000, -1000, 2098, 2697, 999, 520,
	-1000, -1000, 1906, 3561, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 839, -1000, 3274, -1000, 1114, 2006, 2006, 999,
	-1000, 560, 891, -1000, -1000, 518, -1000, 513, -1000, 2251,
	118680, 2237, -1000, -1000, -1000, -1000, 118680, -1000, -1000, 3667,
	-1000, 960, -1000, 2697, -278, 2098, -286, -1000, -1000, -1000,
	-189, 1967, -1000, 1574, 971, 2098, -1000, 1758, -1000, -1000,
	2217, 50823, 50253, -1000, 3579, -1000, -1000, 2556, -1000, -1000,
	50253, 2794, 50253, 50253, -1000, 234, 66075, -291, -1000, 2280,
	2098, 1064, 971, 1885, 1485, 67736, 999, 971, -1000, -1000,
	-1000, 131782, -1000, -1000, -1000, 131782, -1000, -298, -303, -1000,
	-263, 102648, 2242, 2500, 971, 1885, 999, 2697, 2086, -266,
	-1000, 999, 2098, 1173, -304, -1000, -1000, -1000, -1000, 999,
	2697, -1000, 2098, -1000, -1000, -1000, -1000, -1000, 512, -1000,
	-1000, 2098, 971, 50253, 971, 999, -306, 999, -1000, 2098,
	-1000, -1000,
}

var sqlPgo = [...]int{
	0, 4466, 4463, 4462, 4461, 4460, 4457, 4456, 4455, 4453,
	4452, 4450, 4444, 138, 4443, 4441, 4439, 4437, 4436, 4434,
	4433, 4431, 4430, 4429, 4428, 4426, 4425, 4422, 4421, 4419,
	4418, 4417, 4416, 4414, 4413, 4411, 4409, 4408, 4407, 4406,
	4403, 4402, 4401, 4400, 4399, 4398, 4396, 4394, 4391, 4390,
	4389, 4388, 4386, 4384, 4379, 4376, 4375, 4372, 4371, 4370,
	4369, 4368, 4366, 4365, 4364, 4361, 4359, 55, 4357, 4356,
	4355, 4354, 4352, 4351, 4349, 4342, 4340, 4339, 4336, 4333,
	4332, 4325, 4323, 4322, 4320, 4319, 4317, 4316, 65, 4315,
	286, 4314, 4310, 4309, 4306, 4305, 4303, 4302, 4301, 4300,
	4298, 4297, 4296, 285, 4294, 119, 161, 4293, 4292, 3859,
	4287, 4285, 279, 4283, 4282, 4281, 4280, 287, 4279, 4278,
	4277, 4275, 4274, 4272, 4270, 4268, 4267, 4266, 4264, 92,
	205, 4263, 4261, 451, 4260, 4259, 4258, 4257, 4256, 4255,
	4254, 4253, 4249, 4247, 4246, 244, 170, 4245, 277, 4244,
	4240, 4236, 4235, 4230, 4226, 4225, 4222, 4221, 4220, 4215,
	4211, 4209, 4208, 4207, 4205, 4204, 4201, 4199, 4198, 4192,
	4190, 4189, 4188, 4187, 4185, 4184, 4183, 4182, 4178, 4176,
	4175, 4174, 4172, 4171, 4170, 4169, 4167, 4165, 243, 220,
	199, 4163, 4162, 275, 267, 4161, 4159, 4158, 4154, 4152,
	121, 11, 49, 4150, 4149, 96, 88, 86, 97, 102,
	99, 4147, 110, 4145, 122, 67, 4143, 18, 2, 262,
	254, 5475, 247, 4142, 4140, 4136, 242, 194, 4135, 238,
	4134, 4132, 4130, 4129, 4128, 4123, 68, 53, 179, 169,
	172, 166, 25, 4122, 158, 103, 82, 63, 44, 17,
	77, 219, 22, 1, 260, 4121, 259, 12, 145, 7,
	40, 4120, 4119, 4118, 4115, 3746, 129, 4110, 266, 245,
	171, 4109, 4106, 4105, 386, 4104, 4103, 60, 4102, 396,
	109, 128, 8, 124, 4101, 150, 167, 38, 4100, 160,
	58, 4097, 157, 91, 87, 11355, 13982, 4096, 4093, 106,
	73, 130, 2161, 183, 173, 197, 163, 168, 162, 134,
	216, 215, 181, 198, 4092, 253, 4088, 3527, 78, 189,
	152, 6118, 4087, 4084, 4080, 83, 202, 104, 4077, 4076,
	76, 19, 15, 4, 6, 140, 26, 23, 10, 4075,
	51, 123, 48, 31, 4067, 27, 4063, 4062, 4061, 4059,
	4058, 41, 164, 4056, 4054, 282, 4053, 155, 54, 36,
	4050, 782, 223, 4045, 230, 126, 4044, 4042, 257, 207,
	186, 4040, 95, 236, 4038, 4037, 4036, 4033, 4032, 131,
	3, 133, 4031, 4029, 146, 4027, 52, 241, 196, 4026,
	61, 4025, 4024, 174, 62, 139, 273, 135, 232, 118,
	228, 180, 234, 4023, 4021, 4020, 206, 4019, 4015, 231,
	154, 4012, 4011, 203, 289, 90, 46, 79, 237, 84,
	193, 156, 4010, 212, 4008, 4007, 288, 177, 222, 13,
	16, 113, 127, 4006, 5, 240, 153, 229, 112, 4005,
	7803, 2830, 2658, 4002, 4001, 143, 116, 81, 115, 151,
	264, 105, 4000, 3997, 3722, 3996, 3995, 3994, 3993, 182,
	3991, 3990, 3988, 144, 148, 188, 3984, 98, 72, 50,
	29, 132, 250, 268, 117, 227, 175, 255, 3983, 3982,
	3981, 187, 3979, 80, 114, 165, 201, 249, 57, 3976,
	176, 3975, 149, 281, 71, 147, 3974, 226, 3970, 3969,
	3968, 3967, 3966, 3965, 3964, 263, 235, 3963, 3962, 3961,
	37, 190, 3960, 261, 185, 200, 107, 59, 3959, 89,
	2349, 3958, 213, 581, 69, 265, 204, 3955, 2230, 56,
	3950, 0, 15794, 9167, 13079, 14853, 3947, 5080, 3946, 3945,
	3944, 224, 142, 3943, 3941, 3940, 100, 3935, 85, 3931,
	3928, 74, 3927, 28, 20, 21, 34, 32, 344, 270,
	3926, 3925, 30, 137, 208, 3924, 272, 233, 3922, 3919,
	3917, 3916, 94, 3914, 45, 3912, 43, 3911, 3910, 47,
	14, 35, 3909, 3907, 218, 3906, 225, 256, 3904, 159,
	3903, 70, 141, 3901, 3900, 3899, 64, 66, 252, 93,
	3898, 280, 3896, 195, 3892, 3890, 3890, 24, 3889, 3887,
	246, 111, 108, 3886, 251, 136, 42, 217, 184, 221,
	3884, 3882, 178, 3878, 3877, 3876, 271, 3875, 3874, 39,
	3873, 3871, 3870, 9, 3865, 3864, 211, 3254, 3862, 3861,
	33, 3857, 191,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	598, 598, 617, 617, 23, 23, 45, 45, 24, 46,
	17, 599, 599, 599, 599, 36, 25, 47, 29, 29,
	29, 29, 29, 203, 203, 203, 203, 22, 22, 41,
	41, 239, 239, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	594, 594, 241, 241, 240, 233, 233, 234, 234, 235,
	235, 600, 600, 242, 242, 242, 244, 244, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 494, 494,
	494, 526, 526, 526, 525, 525, 621, 621, 622, 622,
	622, 622, 622, 132, 132, 392, 392, 392, 56, 56,
	56, 56, 56, 589, 589, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 79, 79, 606, 606, 607,
	607, 605, 604, 604, 604, 608, 608, 608, 204, 204,
	204, 128, 128, 128, 128, 128, 128, 129, 129, 130,
	130, 208, 208, 208, 210, 210, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 214, 16, 16, 16,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 108,
	108, 528, 528, 529, 529, 199, 199, 200, 200, 200,
	200, 201, 201, 202, 202, 202, 70, 70, 211, 211,
	213, 213, 212, 212, 212, 212, 212, 58, 58, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 60,
	60, 60, 60, 60, 60, 61, 61, 61, 61, 61,
	61, 68, 68, 68, 68, 68, 68, 190, 190, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 76, 76, 76, 76, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 624, 624, 625, 625, 626,
	626, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 85, 85, 353,
	353, 316, 316, 86, 86, 86, 87, 87, 88, 88,
	72, 72, 587, 587, 369, 369, 485, 485, 73, 595,
	595, 595, 597, 597, 596, 596, 90, 90, 391, 391,
	91, 91, 91, 91, 91, 91, 92, 92, 92, 92,
	92, 92, 92, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 100, 100, 100,
	100, 100, 101, 101, 101, 98, 98, 98, 95, 95,
	95, 94, 94, 94, 99, 99, 99, 586, 305, 305,
	97, 97, 97, 96, 96, 96, 370, 370, 102, 102,
	102, 102, 317, 103, 103, 103, 103, 103, 103, 103,
	103, 106, 106, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 487, 487, 104, 104,
	104, 452, 452, 109, 109, 109, 407, 407, 110, 110,
	110, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 131, 131, 131, 131, 131, 131, 131, 131,
	591, 591, 362, 362, 268, 268, 268, 268, 121, 121,
	121, 121, 122, 122, 122, 123, 123, 195, 195, 138,
	138, 138, 138, 137, 137, 137, 137, 137, 137, 137,
	137, 62, 62, 62, 63, 63, 64, 64, 65, 65,
	66, 66, 67, 67, 67, 67, 67, 141, 141, 618,
	618, 143, 140, 140, 140, 140, 140, 139, 139, 142,
	142, 142, 142, 144, 146, 146, 146, 146, 146, 145,
	145, 145, 145, 147, 147, 519, 519, 378, 378, 517,
	517, 538, 538, 518, 518, 323, 323, 323, 323, 323,
	324, 324, 324, 527, 527, 527, 527, 527, 527, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 196, 196, 197, 198, 198, 198, 198, 198,
	173, 173, 173, 189, 189, 189, 189, 189, 189, 189,
	189, 176, 176, 176, 160, 160, 149, 149, 149, 149,
	149, 149, 149, 154, 154, 154, 154, 154, 154, 154,
	154, 150, 150, 162, 162, 162, 162, 162, 155, 155,
	156, 156, 156, 157, 157, 157, 157, 183, 183, 159,
	159, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	151, 151, 151, 151, 164, 164, 164, 164, 414, 414,
	414, 188, 188, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 186,
	186, 186, 186, 186, 186, 609, 609, 610, 610, 610,
	180, 180, 180, 180, 180, 180, 466, 466, 174, 174,
	174, 174, 179, 179, 179, 179, 182, 182, 182, 182,
	397, 397, 171, 171, 171, 172, 172, 172, 177, 177,
	178, 354, 354, 175, 175, 181, 181, 181, 181, 152,
	152, 152, 152, 152, 152, 152, 153, 153, 153, 153,
	184, 184, 170, 170, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 628, 628, 166, 166, 166,
	165, 165, 165, 165, 168, 168, 169, 169, 169, 169,
	169, 169, 167, 158, 187, 588, 588, 584, 584, 584,
	584, 584, 584, 584, 584, 585, 585, 585, 585, 590,
	590, 114, 114, 114, 114, 114, 124, 124, 124, 124,
	124, 115, 115, 115, 115, 115, 115, 115, 117, 117,
	116, 116, 116, 116, 80, 80, 80, 80, 80, 15,
	15, 15, 81, 81, 259, 259, 217, 217, 217, 342,
	342, 218, 218, 331, 331, 331, 331, 215, 215, 216,
	216, 82, 82, 629, 629, 629, 601, 601, 601, 602,
	602, 602, 602, 602, 602, 325, 325, 326, 326, 432,
	432, 432, 432, 432, 329, 329, 329, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 332, 332, 243, 243,
	243, 340, 341, 341, 333, 333, 339, 338, 338, 337,
	337, 336, 336, 334, 335, 335, 335, 344, 344, 343,
	346, 346, 345, 431, 547, 547, 549, 549, 549, 549,
	549, 549, 549, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	415, 415, 630, 630, 631, 632, 545, 545, 545, 546,
	541, 541, 542, 542, 542, 542, 542, 327, 327, 328,
	328, 328, 328, 543, 544, 360, 360, 470, 548, 548,
	550, 550, 552, 633, 633, 633, 633, 633, 633, 634,
	634, 634, 430, 430, 429, 429, 351, 351, 553, 553,
	553, 553, 554, 554, 554, 554, 554, 557, 556, 555,
	555, 555, 555, 555, 84, 84, 84, 394, 394, 393,
	393, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 192, 192, 271, 271,
	78, 78, 78, 12, 12, 12, 12, 12, 12, 12,
	286, 286, 13, 13, 13, 603, 603, 603, 83, 83,
	83, 83, 83, 83, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 593, 593, 592, 592, 272, 272,
	636, 636, 89, 89, 89, 89, 89, 89, 89, 89,
	488, 488, 489, 489, 77, 77, 77, 77, 77, 416,
	416, 413, 413, 412, 412, 359, 359, 468, 468, 468,
	469, 276, 276, 277, 277, 236, 236, 236, 31, 30,
	21, 21, 26, 26, 27, 27, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 28, 28, 49, 49, 49,
	49, 50, 50, 50, 50, 53, 53, 54, 54, 48,
	48, 48, 48, 51, 51, 44, 44, 55, 55, 55,
	55, 55, 611, 613, 613, 612, 612, 616, 616, 616,
	616, 616, 616, 614, 614, 615, 615, 619, 619, 620,
	620, 120, 120, 125, 125, 125, 125, 125, 126, 126,
	126, 126, 127, 127, 127, 127, 136, 136, 191, 191,
	191, 191, 191, 191, 191, 57, 57, 57, 57, 69,
	69, 69, 69, 134, 638, 638, 638, 135, 135, 135,
	637, 637, 269, 269, 426, 426, 427, 427, 639, 639,
	428, 428, 428, 428, 428, 262, 261, 263, 263, 264,
	264, 75, 75, 75, 252, 252, 251, 253, 253, 254,
	254, 249, 249, 530, 530, 256, 256, 256, 257, 257,
	245, 245, 246, 246, 247, 247, 248, 248, 260, 260,
	640, 640, 112, 112, 112, 194, 194, 315, 315, 315,
	423, 423, 423, 352, 352, 283, 283, 425, 425, 425,
	425, 390, 390, 390, 193, 193, 367, 367, 380, 380,
	381, 381, 482, 482, 382, 118, 118, 119, 119, 133,
	133, 221, 221, 219, 219, 219, 219, 219, 219, 219,
	219, 226, 226, 227, 227, 228, 228, 229, 230, 230,
	230, 230, 371, 371, 231, 231, 231, 220, 220, 220,
	222, 222, 222, 222, 222, 222, 222, 225, 225, 225,
	225, 232, 232, 232, 224, 224, 564, 564, 564, 566,
	566, 568, 568, 567, 567, 563, 563, 565, 565, 635,
	635, 396, 396, 396, 349, 350, 347, 347, 348, 348,
	357, 357, 355, 356, 356, 358, 358, 467, 467, 467,
	237, 237, 237, 387, 387, 387, 387, 388, 388, 419,
	419, 417, 417, 417, 417, 418, 418, 420, 420, 420,
	421, 421, 422, 422, 384, 384, 385, 385, 386, 386,
	386, 386, 448, 448, 223, 223, 223, 364, 364, 364,
	365, 365, 438, 438, 438, 438, 438, 438, 438, 439,
	439, 437, 437, 437, 437, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 472, 473, 473, 366, 366, 474,
	424, 424, 582, 582, 582, 583, 583, 465, 465, 475,
	475, 475, 475, 475, 475, 463, 463, 464, 464, 483,
	484, 484, 400, 400, 400, 400, 398, 398, 401, 401,
	401, 401, 401, 399, 399, 476, 476, 476, 476, 389,
	389, 477, 477, 477, 477, 478, 479, 479, 480, 480,
	433, 434, 434, 490, 490, 490, 490, 492, 363, 363,
	363, 363, 363, 540, 539, 539, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 507, 507, 507,
	507, 507, 507, 507, 493, 493, 493, 493, 493, 497,
	497, 497, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 498, 498, 503, 503, 504, 504, 504,
	499, 500, 505, 505, 505, 505, 641, 641, 509, 509,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 495,
	495, 495, 502, 502, 502, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 408, 408,
	410, 410, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 442, 442, 442, 442, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 558, 558, 558, 558, 558, 558, 558, 558,
	444, 444, 561, 561, 562, 562, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 569, 569, 570,
	570, 572, 572, 573, 573, 574, 575, 575, 575, 576,
	577, 577, 571, 571, 578, 578, 578, 578, 579, 579,
	580, 580, 580, 580, 580, 581, 581, 581, 581, 581,
	454, 454, 455, 455, 461, 461, 461, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 322, 322, 321, 273, 273, 273, 273, 273,
	273, 376, 376, 374, 374, 374, 377, 377, 375, 375,
	373, 373, 372, 372, 451, 451, 449, 449, 453, 453,
	402, 402, 508, 508, 508, 508, 508, 508, 508, 508,
	403, 403, 403, 411, 404, 404, 405, 405, 405, 405,
	405, 445, 446, 406, 406, 406, 447, 447, 456, 460,
	460, 459, 458, 458, 457, 457, 435, 435, 436, 436,
	383, 383, 642, 642, 379, 379, 481, 481, 481, 481,
	319, 319, 368, 368, 318, 318, 310, 310, 311, 311,
	311, 311, 361, 361, 462, 462, 510, 510, 511, 511,
	512, 512, 513, 513, 514, 515, 516, 450, 450, 294,
	293, 280, 281, 292, 291, 290, 279, 282, 287, 288,
	289, 284, 285, 301, 300, 299, 250, 255, 306, 307,
	307, 309, 309, 308, 308, 296, 297, 298, 486, 278,
	312, 312, 313, 313, 313, 314, 314, 314, 314, 274,
	274, 275, 275, 302, 302, 303, 304, 304, 295, 295,
	295, 265, 265, 265, 266, 266, 267, 267, 524, 524,
	521, 521, 521, 522, 522, 522, 523, 523, 523, 523,
	520, 520, 520, 520, 520, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 532, 532, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 534, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 537, 537,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	4, 6, 4, 2, 6, 4, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	4, 3, 4, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 3, 4, 3, 4, 3,
	5, 3, 4, 4, 3, 4, 5, 3, 4, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 3,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 7, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 13, 16, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 8, 0, 1, 1,
	0, 2, 1, 0, 1, 0, 1, 1, 0, 1,
	4, 1, 0, 3, 7, 7, 1, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 2, 8, 4,
	2, 3, 5, 5, 5, 2, 5, 5, 2, 2,
	2, 0, 1, 1, 3, 4, 11, 12, 9, 5,
	3, 1, 5, 10, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 5, 7, 5, 5, 3,
	3, 0, 2, 2, 2, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 13, 16, 3, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	5, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 601, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-191, -196, -197, -198, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -148, -192, -193, -194, 32, 31, 100, 80, 155,
	129, 138, 203, 385, 430, 442, 400, 143, 421, 405,
	-142, -143, 460, -57, -69, -135, -134, 73, 130, 415,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -623, 102, -565, -93,
	-96, -127, -627, 162, 221, -115, -116, 367, -122, -123,
	423, -125, -126, 426, 163, -64, -63, 157, -219, -221,
	-140, -139, -141, -195, -149, -150, -151, -152, -153, -154,
	-155, -157, -183, -158, -159, -160, -161, -162, -163, -167,
	-186, -164, -165, -166, -169, -168, -170, -175, -171, -172,
	-173, -174, -176, -177, -179, -180, -181, -182, -184, -185,
	465, -178, -187, -156, 526, 49, 480, 82, 147, 434,
	21, -5, -6, -7, -8, -9, -10, -11, -15, -14,
	-55, -75, -77, -80, -81, -82, -89, -83, -84, -564,
	-94, -95, -98, -100, -101, -97, -99, 422, -222, -220,
	598, 541, -18, -23, -24, -19, -20, -22, -25, -21,
	-26, -27, -28, -40, -45, -46, -42, -43, -41, -44,
	-47, -48, -49, -50, -51, -52, -53, -54, -30, -36,
	-37, -31, -32, -33, -34, -35, -38, -39, -17, -29,
	562, 571, -225, -223, -224, -232, 452, 549, 500, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, -317, 2, -296, -302, -303, -304, -295, -265, -534,
	-537, 4, -531, -535, 169, 231, 331, 21, 23, 22,
	24, 25, 26, 27, 29, 30, 41, 42, 44, 45,
	46, 47, 48, 49, 53, 55, 59, 60, 61, 62,
	63, 64, 68, 73, 74, 79, 80, 81, 82, 83,
	84, 85, 91, 88, 89, 90, 92, 94, 96, 97,
	98, 99, 100, 101, 103, 104, 105, 107, 108, 109,
	117, 118, 119, 120, 121, 123, 129, 124, 130, 133,
	128, 132, 134, 136, 137, 138, 141, 142, 143, 145,
	146, 148, 149, 150, 152, 153, 155, 156, 157, 160,
	158, 508, 159, 161, 162, 163, 164, 167, 175, 176,
	177, 182, 184, 185, 189, 190, 191, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 204, 208, 210, 211,
	212, 213, 214, 220, 221, 223, 224, 225, 226, 227,
	232, 233, 234, 238, 235, 244, 245, 249, 250, 251,
	253, 257, 258, 259, 260, 261, 262, 264, 266, 265,
	268, 271, 272, 275, 279, 280, 284, 285, 281, 286,
	287, 289, 290, 293, 291, 294, 295, 292, 296, 298,
	299, 300, 301, 302, 303, 304, 305, 306, 307, 308,
	309, 297, 312, 310, 314, 315, 316, 329, 325, 326,
	320, 321, 317, 322, 318, 319, 323, 324, 328, 333,
	334, 337, 218, 339, 340, 343, 361, 347, 348, 349,
	352, 353, 356, 359, 360, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 372, 373, 375, 376, 377, 379,
	380, 381, 383, 385, 386, 388, 389, 391, 392, 393,
	394, 395, 396, 397, 399, 400, 402, 401, 403, 405,
	407, 408, 409, 415, 421, 417, 418, 419, 420, 422,
	423, 424, 425, 426, 428, 429, 430, 432, 433, 434,
	435, 436, 438, 440, 441, 445, 446, 462, 463, 482,
	442, 443, 444, 447, 448, 449, 450, 451, 455, 453,
	454, 456, 457, 458, 460, 461, 464, 465, 467, 468,
	469, 470, 471, 472, 473, 476, 478, 479, 480, 499,
	481, 483, 487, 488, 489, 490, 484, 485, 498, 492,
	493, 495, 496, 501, 502, 503, 504, 505, 506, 507,
	509, 511, 519, 520, 521, 523, 526, 527, 528, 529,
	517, 531, 532, 535, 536, 537, 540, 538, 539, 541,
	543, 546, 547, 548, 554, 553, 555, 558, 563, 564,
	566, 567, 568, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 125, 126, 154, 165, 166, 178, 192,
	193, 205, 207, 215, 216, 217, 239, 240, 242, 247,
	269, 336, 338, 354, 358, 374, 378, 382, 384, 398,
	437, 474, 486, 491, 512, 513, 514, 515, 522, 524,
	549, 550, 551, 556, 565, -317, 2, -296, 345, -289,
	2, -265, -265, 385, 28, 2, 28, 373, 454, 503,
	505, 2, -591, -362, 2, 28, -268, -265, 102, 203,
	452, -289, 2, -591, -362, 25, 2, -265, 2, 359,
	22, 27, 66, 77, 98, 141, 164, 186, 189, -626,
	361, 392, 440, 456, 498, 509, 523, 2, 553, 290,
	453, 500, 231, 120, 528, 447, -603, 445, 446, 359,
	390, 432, 206, 542, -269, 2, 442, -265, 290, 2,
	601, 94, 74, 437, 457, -145, 2, 280, 520, -146,
	-147, -144, 512, -519, 447, 432, 312, -265, 601, 601,
	601, 28, -278, -265, 500, 231, 447, 120, 496, 601,
	2, 500, 364, 553, 453, 120, 395, 231, 528, 189,
	141, 27, 447, -603, 576, 577, 290, 127, -589, 2,
	-584, 4, -535, -531, -311, -310, 500, 506, 120, -304,
	-295, 591, -303, 601, 601, 601, 2, 250, 251, 394,
	393, 457, 458, 601, 601, 601, 601, 445, 2, 164,
	22, 27, 66, 93, 98, 127, 186, 189, 350, -624,
	361, 392, 456, 498, 502, 509, 523, -602, 481, 68,
	420, 447, -601, -603, 290, 528, 141, -412, 120, 280,
	201, 536, 505, 503, 534, 133, 238, 539, 538, 601,
	601, -106, 2, 598, 32, 31, -105, -109, 143, 460,
	-214, 500, 243, 2, -265, 601, 601, 2, 250, 251,
	445, 446, 601, 601, 187, -584, 2, 601, 601, 2,
	250, 251, 445, 446, 243, 2, 68, 449, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 2, -189, 457, 481, 212, 47,
	46, 74, 28, 391, 79, 365, 121, 127, 149, 529,
	204, 231, 232, 258, 93, 94, -414, 44, 251, 68,
	250, 446, -609, 445, -466, 501, 448, 454, 495, 262,
	442, 520, 102, 543, 433, 568, 395, 396, 493, 409,
	281, 158, 188, 4, 120, 312, 432, 459, 512, 280,
	441, 368, 84, 601, -635, 2, 500, -637, 2, 520,
	520, 2, -637, 2, -637, 2, -637, 2, -638, 520,
	565, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, -220,
	-222, -221, 601, 601, 601, 601, 601, 601, 601, -189,
	457, 2, 74, 28, -355, -357, 533, 241, 151, 351,
	-219, -221, 2, -564, -517, 2, -440, -538, -442, 589,
	590, 582, 497, 67, -321, 330, 569, -454, 127, 534,
	345, -537, -443, -456, 154, 361, 437, -377, 8, 9,
	5, 6, 7, -274, -444, -450, 525, 168, 335, -314,
	602, 10, 598, -561, -221, -455, 37, 207, 65, -521,
	-313, -275, -493, 242, -312, -295, -558, -559, 4, -531,
	-532, -522, -496, -504, -500, -501, -507, -265, -534, 77,
	111, 112, 110, 115, 114, 283, 282, 116, 113, 459,
	542, 66, 36, 215, 216, 247, 336, 217, 75, -560,
	142, -533, 239, 240, 474, 51, 398, 178, 126, 125,
	338, 56, 54, 550, -505, 122, 512, 513, 514, 515,
	192, 193, 58, 165, 166, 358, 382, 491, 522, 524,
	205, 269, 43, 106, 188, 237, 219, 246, 248, 252,
	270, 273, 313, 327, 332, 355, 357, 431, 466, -641,
	551, 486, 69, 70, -566, 401, -567, -289, -566, 601,
	601, 603, 601, -347, -349, -350, 2, 28, 139, 598,
	2, -471, 2, -472, -476, -221, 263, -475, 598, -473,
	596, -296, 346, -562, 438, -558, -559, -274, -295, -313,
	4, -531, -533, 600, -351, 598, 120, 447, 500, 78,
	231, 164, -407, 598, -265, 28, 345, 516, 603, -348,
	389, -452, 598, 345, 187, 348, 60, 294, 2, 2,
	2, 2, 2, 215, -265, 500, 119, 2, 261, 2,
	2, 2, 2, 2, 2, 2, -370, 215, 2, -296,
	553, -370, 215, 2, -370, 215, 2, -413, 2, 87,
	-279, 215, 2, -265, -305, 215, 2, -300, -302, -309,
	215, 2, -307, -265, -529, 215, 2, -528, -524, 10,
	-523, 5, 4, -531, -535, -532, -534, 77, -440, 2,
	-133, 2, 60, -265, 553, 2, 462, 2, 598, -145,
	2, 71, 520, 43, 457, -146, 2, -427, 2, -428,
	-261, -262, -263, -483, -264, 249, 388, 397, 572, 131,
	330, 568, -618, 187, 581, 516, -517, -517, -517, -378,
	600, 2, 2, 2, 2, 2, 2, -476, 215, -296,
	2, -293, -520, 4, -531, -535, -532, -536, 28, 31,
	32, 33, 35, 37, 38, 39, 40, 57, 65, 66,
	72, 76, 78, 87, 93, 102, 110, 111, 113, 112,
	114, 115, 116, 127, 131, 135, 139, 140, 144, 147,
	151, 168, 170, 183, 186, 187, 203, 206, 209, 222,
	236, 241, 243, 263, 267, 274, 282, 283, 330, 335,
	341, 345, 346, 350, 351, 371, 387, 404, 427, 452,
	459, 477, 494, 500, 510, 516, 518, 525, 533, 534,
	542, 544, 552, 557, 559, 560, 561, 562, -537, 2,
	-476, 215, 2, -299, 215, -476, -302, 2, -279, 2,
	-292, -520, 2, -318, 215, -296, -298, -302, -300, 2,
	2, 2, 2, -307, 2, -528, 215, 2, 28, 28,
	553, 389, 243, 516, 603, -368, -310, -311, -516, 8,
	-361, -265, 600, -440, 2, -133, -117, 2, 183, -440,
	215, 2, -133, 215, 2, -440, 215, 2, -133, 215,
	2, -604, 2, -528, 215, 215, -265, 2, 294, 2,
	2, 523, 2, 98, 500, 119, 2, 419, -625, 440,
	527, 2, 2, 2, 2, 2, 2, 2, 500, -284,
	2, -265, 183, 484, -307, 215, -308, 2, 453, -636,
	401, -528, 215, 2, 553, -300, 215, 2, -300, 231,
	245, -279, 215, 2, 505, 503, 505, 503, 187, 2,
	243, 2, 243, 2, -477, 2, -478, -472, -479, 596,
	346, -487, 2, -486, -523, 549, -106, 598, -106, 598,
	457, 598, -528, -296, -296, -440, 2, -133, -117, 2,
	-440, 2, -133, 2, -130, -528, -129, 598, 187, -440,
	2, -133, -117, 2, -440, 2, -133, 2, -214, 183,
	2, 120, 500, -189, 2, 183, 544, 2, 8, 2,
	222, -528, 448, 396, 175, 2, 462, 2, 463, 74,
	-414, 568, 74, 187, 2, 187, 2, -397, 2, 562,
	389, 187, 2, 2, -588, 2, 345, 187, 2, 187,
	2, 187, 2, 187, 2, 187, 2, -188, 458, 521,
	499, 393, 251, 2, -133, 559, -117, 251, 250, -440,
	559, 2, -610, 183, 446, -440, 2, 519, 260, 159,
	187, -397, 2, 187, 2, 187, 2, 5, 2, 394,
	482, 2, 249, 388, 482, 2, -296, 500, 553, 453,
	120, 28, 2, 445, 2, 2, 88, 89, 187, 2,
	187, 2, 202, 187, 2, 187, 500, 568, 2, -389,
	-476, -426, -427, -426, 516, -355, -357, -189, 462, 2,
	-226, -387, -228, 183, -417, -418, -229, 274, 170, 341,
	-230, -396, 28, 139, -396, -396, 60, 599, 599, 11,
	12, 76, 41, 589, 590, 591, 592, 181, 593, 594,
	587, 588, 586, 579, 580, 584, 255, 256, 95, 583,
	581, 86, 288, 439, 171, 172, 173, 174, 416, 229,
	34, 230, 14, 15, 16, -321, 33, 350, 273, 569,
	219, 466, 582, 17, 18, 19, 246, 248, 332, 50,
	222, -273, 361, -320, 497, 67, -440, -440, -440, -440,
	-440, -440, -440, -440, 357, 598, -383, -435, 596, -221,
	598, 598, 598, 598, -516, -221, -440, -454, 599, -375,
	598, -221, -454, -449, 598, 437, 596, 598, -457, -440,
	5, 5, 5, 598, 600, -569, 563, 183, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 384, -498, 598, -497, 598, -497,
	-497, 554, -495, 598, 571, 564, 598, -495, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 554, 603, -566, -351, 598, -379, -481, -440, 591,
	-379, -379, 345, -372, -440, 106, -400, 252, 313, 188,
	270, 431, 237, -437, 602, -437, -465, 571, -221, -473,
	-295, -221, -475, 598, -471, -465, -107, -516, -90, -103,
	-112, -133, -148, -193, -194, 591, -296, 598, 187, 598,
	600, -520, 187, -361, -279, -306, -265, -296, -312, -313,
	-318, 2, 138, -372, -584, 528, 447, 28, 453, -361,
	-268, 38, -451, -490, -491, -540, 602, -539, -493, -503,
	-499, -502, 374, 378, -522, 54, 550, -505, 242, 4,
	-531, -533, 239, 240, 474, 51, 398, 178, 126, 125,
	338, 56, 512, 513, 514, 515, 192, 193, 58, 551,
	486, 69, 70, -584, 528, 447, 28, 453, -361, 183,
	-361, 2, 2, 154, 2, 2, 2, -265, -242, 603,
	64, 424, 154, -370, 215, -242, 154, -242, 154, -319,
	215, -318, -242, 154, -242, 603, 154, -242, 603, 154,
	600, 603, 154, -361, 2, -413, -519, -372, 38, -427,
	2, 127, -525, -523, 5, -639, 603, 272, -324, 287,
	329, 211, 346, 566, 339, 131, -527, 5, 4, -450,
	-462, 127, 280, 242, -510, -512, 8, -511, 9, -513,
	589, 590, -518, -517, 109, 600, -520, -239, 417, 460,
	360, -238, 24, 29, 143, 233, 316, 547, 160, -337,
	234, -334, 364, 154, 478, 537, -598, -599, 444, 507,
	508, 90, 339, 460, 360, 417, 154, -393, -395, 38,
	118, 316, 359, 61, 226, 292, 293, 480, 556, 154,
	460, 360, 417, 360, -13, -254, 24, 143, -256, -251,
	460, -599, 99, 417, 575, 422, 370, 492, 387, -599,
	-241, 478, 537, -598, -599, 444, 417, -240, -339, -334,
	364, 154, 602, 24, 143, 417, 460, 360, -621, -622,
	29, 417, 360, -592, -286, -563, 222, 562, 154, -286,
	-286, -476, 215, -614, 183, 2, -607, -129, 264, 5,
	10, -528, -129, -368, 603, 603, -520, 591, 446, 445,
	154, 154, 154, 154, 183, 330, 330, 2, 2, 2,
	2, 2, 189, -601, -626, 2, 2, -296, 215, -353,
	345, -587, -369, 500, -296, 183, 330, 43, -299, 215,
	2, -302, 553, -592, 330, -301, 215, -296, 38, 598,
	330, 2, -413, 2, 231, -563, 330, -477, -315, -296,
	-472, -315, 460, -289, 38, -437, -296, 599, 603, -487,
	-487, -528, -202, 562, 187, 102, 598, 598, -214, 562,
	562, -484, 603, -483, 222, -529, -130, -528, 420, -528,
	-587, -279, 2, -296, 2, 500, 253, -528, -202, 222,
	-528, -528, -528, -519, 28, 463, 2, -188, 458, 521,
	89, 463, 2, -296, 500, 120, 231, 80, -614, 183,
	2, -265, -590, 183, -585, 432, 447, 528, -584, -296,
	120, -296, 120, -296, 120, -296, -296, 2, 2, 2,
	2, 2, 85, 2, -133, -440, 2, 85, 2, 46,
	479, -610, 183, 2, 519, 2, 519, 2, -265, -265,
	-265, 481, 272, -296, -296, -296, -297, -302, 501, 446,
	-440, 2, -628, 2, 187, 183, 2, 500, 231, 500,
	231, 120, 187, 74, 120, 28, 500, 443, -242, 603,
	-269, -226, -387, -519, -388, -387, -227, -226, -229, 183,
	397, 538, 316, 464, 257, -418, -417, 28, -440, -422,
	177, 315, -440, -420, -442, 589, 590, -511, -513, -371,
	339, -220, -220, -220, -358, -467, -440, 387, 231, -492,
	-490, -490, -294, -520, 512, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, 273, 219, 466, 50, 222, -440, 516, -440, -440,
	-440, -440, 310, 330, 335, 525, 168, 535, 139, 339,
	-642, 494, 40, -447, -221, -376, 598, -461, 35, 477,
	28, -454, 598, 2, -435, -440, -436, -322, -320, -265,
	589, 590, 591, 592, 593, 594, 579, 580, 581, 14,
	15, 16, 584, 588, 586, 587, 181, 95, 583, 288,
	439, 86, 171, 172, 173, 174, 255, 256, 17, 18,
	19, 34, 582, -373, -372, -372, 599, 552, 28, 139,
	591, 2, 599, 603, 38, 599, -440, -373, -453, -449,
	-372, -460, -459, 559, -408, -409, 567, 297, 123, 213,
	295, -410, 451, -514, 8, -520, 591, -570, 176, 206,
	598, 599, 2, 599, 2, 599, -440, 2, 599, -440,
	2, 599, -440, 2, 599, -440, 2, 599, 2, 599,
	2, -440, -440, -440, -440, -440, -440, -440, -372, 8,
	-514, -514, 512, 512, -514, -514, -514, -506, 374, 375,
	376, 377, 275, 276, 277, 278, 378, 379, 380, 381,
	302, 303, 304, 305, 298, 299, 300, 301, 306, 307,
	308, 309, 197, 198, 199, 200, 193, 194, 195, 196,
	-506, -402, 2, -508, -372, 4, 567, 297, 123, 213,
	295, 451, 5, -402, 2, -403, 2, -440, -372, -404,
	-441, -442, 589, 590, 582, -321, -454, -405, 2, -440,
	-373, -440, 57, 267, 518, -406, -440, 187, -372, -372,
	2, -372, 2, -567, 38, -372, -364, 603, 187, 38,
	4, -364, -364, 598, 599, 603, -401, 210, 291, 286,
	245, -401, -471, -400, 252, -398, 355, -398, -398, -465,
	-280, 596, 604, -520, -465, -464, -463, 38, -289, 352,
	-465, -465, 600, 599, -464, 597, -582, 598, 601, 601,
	601, 601, 601, -296, 598, -372, -520, 600, 483, 2,
	599, 246, 246, 246, 246, 246, 438, 599, 516, -586,
	-305, -309, 501, 2, 562, -105, 347, 599, 603, -363,
	37, 596, 600, -514, 2, 2, -509, 554, 598, 598,
	-409, 598, 187, -586, -309, 501, 2, -362, 516, -265,
	2, -296, -370, -242, 154, -370, -370, -242, 603, 154,
	-279, -300, -305, -307, -309, -265, -528, -529, -242, -301,
	-618, 599, 520, -428, -323, 397, 476, 418, 455, 496,
	8, 9, 8, 9, 603, -520, 603, -619, 93, 516,
	78, 447, -258, 281, 516, -431, 215, 78, -541, -282,
	93, -542, -265, 72, 534, 387, 186, 152, -619, 93,
	387, -619, 93, 2, 233, 93, 460, 481, 28, 60,
	-476, 41, 41, 28, -617, 328, 268, 558, 187, 568,
	500, 231, 447, 516, 516, -476, -395, -490, 118, 292,
	293, 60, -515, -510, 589, 590, -515, 60, -515, -515,
	-515, 562, -299, -476, 447, 516, 516, 516, 407, 407,
	-251, -146, 516, 516, 28, -189, 425, 127, -640, 581,
	407, 603, 41, 41, 28, -617, 328, 268, 187, 516,
	-318, -280, 548, 42, 548, 42, 548, 516, 42, 447,
	516, 603, 42, 516, 516, -13, 460, -593, -270, 105,
	322, 285, 323, 97, 319, 96, 318, 103, 320, 104,
	321, 555, 333, 63, 317, 296, 324, -271, -272, 366,
	546, 120, -528, -13, -13, 460, 360, 417, 154, -615,
	222, 28, -603, 222, -484, 222, -484, -310, -265, 600,
	-133, -440, -440, -133, -440, -133, 46, 154, 154, 2,
	-636, 261, 598, -327, 330, 187, -361, -485, 243, 603,
	-369, -584, 154, -526, -525, 116, 459, -394, -393, 330,
	-301, 215, 2, 154, -351, 330, 148, 598, 395, 2,
	154, -281, 215, -266, -265, -413, -245, 504, 154, -391,
	544, -423, -133, 598, 127, 38, -423, -380, -381, -482,
	-382, -282, 598, -289, -437, -106, -486, 599, 599, 599,
	-201, 349, -200, -265, 5, -214, 544, -326, -432, -431,
	-545, -546, -541, 273, 231, 534, 245, 169, -352, -283,
	-282, 119, 399, 399, -208, 562, -129, -130, 599, -484,
	222, 484, -202, -202, -484, -484, -296, 183, -528, -202,
	-202, -202, 2, 2, 2, 2, -397, -296, -279, -318,
	-296, 28, 600, -361, -361, -309, -305, -397, -279, -397,
	-279, -397, -279, -133, -440, 481, 2, 457, 183, 183,
	600, -397, -354, 427, 2, 395, 120, 500, 364, 231,
	-296, -318, -296, -318, -279, 120, -279, 121, -296, -476,
	-388, -227, 346, 257, 464, -420, -421, -442, 437, 438,
	-421, 437, 438, 8, 9, 8, 9, -231, 468, 334,
	-370, 603, -236, 39, 135, 257, -296, 568, 150, -440,
	-440, 516, -642, 494, -447, 150, -440, 310, 335, 525,
	168, 535, 139, 339, 187, 598, -441, -441, 599, -374,
	-440, -440, 597, 606, 599, 600, 599, -357, 603, -355,
	-440, -372, -372, 599, 600, -372, -361, 597, 597, 603,
	599, -458, -459, 144, -440, 516, 516, 516, 516, 598,
	599, 600, -575, 356, 598, 598, -440, 599, 599, 599,
	599, 38, 603, 603, 603, 599, 603, 603, 603, 599,
	599, 599, 603, 599, 568, 568, 599, 599, 599, 599,
	603, 599, 603, 599, 187, 599, 599, -411, 371, 599,
	11, 12, 589, 590, 591, 592, 181, 593, 594, 587,
	588, 586, 579, 580, 581, 86, 288, 439, 14, 15,
	16, -321, 246, 222, -441, -441, -441, -441, 599, -445,
	-446, 187, 183, 38, -406, -406, -406, 599, 187, -372,
	599, 599, 598, -568, 290, 330, 599, -434, -433, 560,
	-481, -365, 2, -471, -291, -520, -434, -434, -372, -440,
	252, 252, -399, 544, 345, -401, -471, -464, -516, -439,
	-438, 185, 39, 135, 325, 326, 218, -464, -289, -351,
	-464, -464, -520, -465, -465, -463, 599, -583, -516, 599,
	-366, -474, -562, -357, 600, -520, -211, -563, -190, 5,
	335, -190, -190, -190, -190, -361, 516, 516, 222, 25,
	372, -490, 596, 597, 8, -520, 598, -514, -514, -514,
	-361, 187, 187, 222, 187, -526, 2, -242, -370, -242,
	-242, -318, -319, -242, -242, -242, -392, 562, -517, -427,
	532, 83, 397, 512, -517, -238, 417, -282, -282, -296,
	-306, 201, 408, -526, 330, -431, 215, -244, 330, -490,
	-290, -265, 598, -415, 564, 257, 257, 544, -282, -290,
	257, 215, -282, 215, -290, 2, -290, -594, 397, 340,
	-440, 60, -335, 279, 395, 331, -239, 417, 460, 360,
	-133, -133, -133, -133, -133, 598, -618, 544, 138, -296,
	-318, -296, -306, -526, -301, 460, 360, 417, 327, -312,
	-515, -515, -393, 460, 360, 417, -306, -526, -299, -526,
	-250, 215, -265, -250, 215, 447, -279, 407, 568, 45,
	-640, -240, -133, -133, -133, -133, -133, 598, -280, -241,
	417, 5, 215, -282, 5, -282, 215, 5, -265, -282,
	-306, -526, -622, 24, 143, -282, -306, -526, -270, -528,
	335, 540, -279, -592, -286, 447, 516, 516, -476, -611,
	-612, 203, 430, 447, 433, -361, -129, -205, 562, -129,
	-199, 227, 591, -589, -528, -265, 553, -265, -325, -328,
	-326, -282, -217, -218, 564, 562, 154, -316, -296, 596,
	-202, -528, -296, -485, -307, -308, 154, -351, 330, -528,
	38, 154, 598, 2, 2, -300, 345, 330, -281, 215,
	-246, 145, -640, -279, -434, -365, -390, -425, 427, 345,
	-352, 549, -289, -390, -367, 603, 187, 581, 600, -352,
	-480, 591, -106, -106, -202, 603, 598, 581, 581, 598,
	-528, -528, 599, 603, -244, -296, -281, 231, 231, -288,
	-266, 599, 603, 600, 598, 581, 581, -210, 349, -209,
	146, 259, 244, 470, 471, 472, 473, 137, 469, 124,
	-484, -208, -130, 187, 187, -65, 562, 500, -202, 602,
	433, -265, -397, -397, -397, 457, 457, -265, -361, -292,
	-279, -296, -293, -318, 183, 183, -279, 538, -421, 346,
	284, -467, -237, 570, -296, 602, -440, -440, 150, 150,
	-440, -441, -441, -440, 150, 187, 598, -440, -451, 33,
	33, 599, 603, -436, -440, -320, 599, 552, -357, -357,
	599, 591, -520, 602, 599, -449, 147, -440, 510, 297,
	213, 295, -410, 295, -410, -410, -514, 5, -520, 591,
	-576, -285, 598, -265, 560, -356, 351, 599, -492, -490,
	-440, -440, -440, -440, -440, -514, -495, -495, -510, -510,
	-440, -445, -440, -492, -490, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, 139, 330, 339, -441, -446,
	-445, -440, -440, -490, 599, 599, 599, -372, -105, 598,
	290, -384, 206, -440, -484, 603, -384, -384, 599, -471,
	-471, 598, -440, 252, 597, 603, 605, 581, -351, 600,
	-463, -464, 597, 599, 603, 599, 603, -424, 38, 599,
	-520, -434, -213, -212, 136, 53, 107, 134, 335, -361,
	-361, 447, 348, 5, 8, 596, 597, 600, -514, 599,
	599, 599, -361, -361, 447, -361, -242, -242, 119, 316,
	-440, 516, 516, 60, 222, 154, 330, 546, -547, -542,
	152, -440, 598, 231, 598, 598, 2, -233, -234, -235,
	143, 460, 24, -620, 2, 544, 154, -242, 154, -242,
	566, -335, 598, 598, 516, 447, -258, 516, 562, -372,
	-440, -203, 127, -519, -599, 602, -599, 602, 447, 516,
	516, 447, 516, 516, 330, 154, 562, 167, 167, 568,
	-250, 562, -372, 516, -494, 48, 26, 330, -300, -242,
	154, 516, 516, 528, 460, -528, 335, -13, -306, -526,
	-301, 460, 360, 417, -591, -362, -591, 203, -309, -615,
	-484, -207, 349, -206, 146, 429, 137, 259, 224, -484,
	-205, 187, 243, 562, -301, 2, 599, 599, 603, -548,
	38, 343, 343, 598, -296, -86, 562, -483, -516, -595,
	562, 43, -299, 38, 154, -592, -133, -301, -488, -489,
	5, 38, -296, 154, 345, 330, -247, 266, -640, -524,
	-563, -357, -390, -379, 331, 91, 599, -434, -381, -365,
	-440, 2, 599, -200, -201, -528, -528, -528, -202, -214,
	-214, -432, -329, 598, -281, -266, 598, -214, -283, 2,
	-529, -528, -528, 603, 598, 581, 581, 581, 581, -208,
	-484, -129, -133, 349, -296, 591, -397, -341, -340, 364,
	339, -341, 437, 437, 346, 177, 262, -236, -280, -440,
	-440, 150, 33, 33, -440, -440, -451, 599, -440, -440,
	-372, 597, 5, -440, 599, 599, 8, -440, 599, 600,
	-577, -265, -440, 599, 60, 599, 599, 603, 603, 599,
	599, 599, 599, 599, 599, 599, -446, 187, 139, 339,
	598, 599, 599, -105, -448, 209, 60, -471, -448, -448,
	-399, -361, -471, -438, -280, 596, -520, -516, -474, 598,
	600, -212, 581, -528, -528, 562, -309, 597, 2, 596,
	-520, 599, -309, 119, -282, -282, 500, 437, -250, 387,
	-431, 154, -549, 93, -551, 76, 169, 102, 330, 335,
	534, 387, 72, 127, 345, 404, -630, -631, -632, 38,
	573, 574, 599, -359, -468, -562, 598, -265, -359, -361,
	330, 489, 127, 345, 330, 127, 345, 557, 119, 2,
	528, 79, -282, -290, -361, -361, -296, -306, -526, 161,
	599, 603, 581, 2, 591, 591, -306, -526, -301, -306,
	-526, -299, 154, -250, 362, 167, 161, 599, -280, 5,
	5, 154, -277, 76, -282, 5, -282, -300, 119, 447,
	516, 516, 345, 345, 348, -611, -612, -205, 603, 598,
	581, 581, -205, -529, -129, 2, -351, -342, 233, -282,
	-546, -543, -544, 387, -550, -552, 169, 387, -133, 2,
	-216, -215, -265, 5, 598, -327, 349, 597, -597, 349,
	-596, 117, 137, -526, -394, -133, -301, -351, 599, 603,
	148, -416, 544, -280, -296, 154, -248, 265, -640, -524,
	-245, -419, -417, 140, 598, 345, -133, -357, 581, 599,
	599, 119, 119, 225, 153, -359, 598, 598, -361, 119,
	599, -209, -210, -528, -129, -528, -528, -208, -484, -66,
	-67, 231, 93, 369, -293, 500, 231, 598, 598, -236,
	-440, -440, -440, 599, -357, -520, 591, -571, 364, 599,
	-467, -440, -440, -441, 187, 598, -451, 599, -572, 561,
	-440, -385, -386, -440, 435, 108, 207, -572, -572, 599,
	-516, 2, -528, 2, 516, 596, 2, 187, 222, 38,
	407, -431, -290, -294, -287, -265, 169, 215, 335, 557,
	-415, 257, 598, -441, 538, -296, 598, 2, 214, 214,
	30, 60, -633, 131, 236, 599, 603, -469, -276, -265,
	-440, -469, 599, 599, 335, 538, 335, 557, -440, 538,
	-490, 598, -242, -242, 599, 599, -440, 516, -519, 100,
	-517, 2, -599, -250, -279, -440, 516, 5, -242, -294,
	-242, -242, -277, 528, -306, -526, -301, -616, 501, 454,
	529, 448, 190, 436, -616, 183, -206, -207, -528, -129,
	-205, 38, -332, 235, 2, -548, 257, -287, 257, -629,
	562, 599, 603, 581, 581, -325, -217, -87, -88, 517,
	-483, 603, 598, 581, -351, 38, 5, 598, 598, -265,
	345, 598, -280, -260, 92, -640, -524, -246, -390, 331,
	-361, 93, -419, -447, -202, 598, 598, -330, 81, 94,
	128, 214, 191, 232, 481, 487, 28, -330, 599, -359,
	-359, 599, 598, -202, 599, 603, 28, 598, 28, 598,
	-296, -318, -372, -372, 599, -357, 60, 603, 599, 599,
	-441, -451, 599, -573, -574, -285, 603, 598, 598, 461,
	597, -361, 2, -361, -250, 387, -265, -551, -287, 330,
	544, -440, -441, -267, 598, -440, 598, 598, 38, 127,
	236, 132, 220, -430, -634, 101, 490, 223, -468, -236,
	599, -429, 544, 404, -441, -277, -359, 598, 598, 598,
	581, 187, 598, -494, -242, -300, 516, 2, 2, 187,
	-591, 599, -605, 402, -133, -336, -337, 222, 598, -331,
	345, 119, 316, -215, -517, -517, 599, 38, -88, 9,
	-596, -597, -440, 38, -133, -488, -359, -296, -359, 345,
	-252, -251, 274, -524, -247, 599, -290, -390, -529, -529,
	-429, 599, 599, -529, -67, -361, -361, 599, 599, -578,
	395, 438, 208, -372, -358, 599, 603, 38, -386, 2,
	2, 2, 407, 154, 210, 599, -553, 289, -265, 599,
	-394, -394, 38, 132, 220, -332, 598, -237, -469, -332,
	210, -296, -600, 544, 599, -344, -343, -340, -346, -345,
	-340, -372, -517, 100, 362, -372, -277, -361, -361, 345,
	-608, 188, -607, 5, 10, -217, 362, -360, -470, -282,
	82, 119, -342, -133, 599, -133, 599, 599, -416, 599,
	-296, -249, -530, 407, 409, -640, -248, -434, 599, 599,
	-430, -429, -338, -334, 599, 599, 599, 599, -579, -580,
	50, 531, 109, -440, -579, -579, -574, -576, 169, 562,
	-554, -557, -556, 578, 467, 188, 363, 599, 489, 556,
	599, 599, -338, -361, 562, -351, -440, -429, 599, 603,
	549, 599, 603, 549, 599, 187, 599, -242, -613, 562,
	-242, -616, -204, 562, 46, -331, -296, 599, 603, 386,
	133, 143, -332, -629, -429, 598, -430, 598, -257, -256,
	-640, -510, -260, 140, -202, -202, -332, -430, -218, 562,
	-202, -581, 152, -580, 383, 182, 437, 383, 182, -581,
	-581, -287, 55, -556, 578, -557, 578, 538, 133, -633,
	599, 55, -553, -332, -343, 222, -345, 187, 362, 203,
	187, 445, -607, 30, -259, -258, 598, -470, 438, 438,
	2, -336, -331, -430, -359, -332, -359, -253, -254, -255,
	-361, -252, 331, 538, -338, -332, -434, 109, 206, 511,
	316, 33, 581, -555, 316, 424, 64, 460, -555, -434,
	581, -554, 598, 598, 348, -361, 349, -361, 2, -217,
	-332, 599, -338, 599, -249, 460, -218, -338, 437, 353,
	-580, -440, 23, 335, 127, -440, -633, -372, -372, -242,
	-201, 598, 599, -331, -338, -429, -218, -430, -257, -380,
	-434, -218, 599, 599, -201, -243, 64, 424, -259, -218,
	-430, -434, -332, -253, -434, -434, -333, -334, 516, 599,
	-434, -332, -338, 598, -338, -218, -372, -218, -434, 599,
	-434, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 553, 554, 556, 557, 558, 560,
	561, 563, 565, 567, 568, 569, 571, 572, 574, 575,
	576, 577, 578, 580, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	649, 651, 0, 1408, 1410, 1412, 1414, 0, 804, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 0, 369,
	371, 372, 374, 376, 377, 378, 380, -2, 0, 486,
	487, 489, 491, -2, 0, 1011, 1013, 0, 638, 640,
	0, 1016, 1018, 0, 0, 661, 662, 0, 1519, -2,
	653, 655, 657, 659, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 748, 750, 752, 754, 756, 758,
	759, 761, 763, 765, 766, 768, 769, 771, 773, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	-2, 798, 799, 800, -2, -2, 0, -2, -2, -2,
	1426, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	59, 430, 432, 434, 436, 438, 441, 443, 445, 1577,
	493, 495, 497, 499, 501, 503, 505, 0, -2, 1591,
	0, 0, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 109, 110, 111, 112, 113, 114, 115,
	116, 75, 76, 77, 79, 80, 81, 82, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 107, 73,
	0, 0, 1550, 1552, 1554, 1556, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 25, 27,
	29, 555, 559, 562, 564, 566, 570, 573, 579, 581,
	583, 538, 539, 542, 2285, 2303, 2304, 2305, 2308, 2309,
	2310, 2311, 2312, 2313, 2763, 2845, 2846, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 540, 541, 1197, 0, 607,
	605, 2270, 608, 2561, 610, 612, 480, 481, 482, 483,
	484, 485, 0, 631, 621, 1589, 632, 634, 635, 636,
	637, 602, 600, 0, 631, 2339, 629, 1406, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	409, 1255, 1256, 1257, 1391, 1392, 2608, 1433, 0, 234,
	650, -2, -2, 2728, -2, 684, 685, -2, -2, 699,
	702, 694, 2732, 0, 2611, 2595, -2, 705, 1409, 1411,
	1413, 802, 803, 2289, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	244, -2, -2, -2, -2, 0, 0, 2656, 2391, 2238,
	2305, 2241, 2236, 338, 340, 342, 343, 0, 0, 0,
	0, 0, 0, 370, 373, 375, 379, -2, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1074, 1066, 1067, 1313, 0, 0, 0, -2, 488,
	490, 543, 544, 0, 1578, 1578, 551, 552, -2, 0,
	0, 0, 0, 308, 296, 1012, 1014, 1015, 0, 0,
	0, 0, 639, 641, 0, 0, 276, 1017, 1019, 1020,
	0, 0, 0, 0, 0, 310, 0, 0, 654, 656,
	658, 660, 730, 732, 734, 736, 738, 740, 742, 744,
	746, 749, 751, 753, 755, 757, 760, 762, 764, 767,
	770, 772, 774, 776, 778, 780, 782, 784, 786, 788,
	790, 792, 794, 796, 797, 810, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 907, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	992, 0, 0, 813, 815, 816, 817, 818, 0, 880,
	905, 906, 916, 801, 0, 1237, 1579, 1435, 1416, 1430,
	1435, 1418, 1419, 1420, 1421, 1422, 1427, 1429, 1423, 1424,
	1425, 42, 44, 46, 48, 50, 52, 54, 56, 58,
	60, 431, 433, 435, 437, 439, 442, 444, 446, -2,
	1548, 1549, 494, 496, 498, 500, 502, 504, 506, 642,
	0, 644, 0, 814, -2, 0, 1583, 1583, 1583, 0,
	0, 1549, 1547, 0, 647, 648, 709, 710, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 2112, 1940, 0,
	711, -2, 1973, 1975, 2703, 2534, 2728, 2111, 1977, 1978,
	1979, 1980, 1981, 0, 1983, 1984, 1985, 1986, 1987, 1988,
	0, 1990, 0, 1995, 1996, 1997, 0, 2710, 2215, 2299,
	-2, 0, 0, 2716, 2295, 0, 2078, 2013, -2, -2,
	2322, 2301, 1784, 1785, 1786, 1787, 1788, -2, -2, 2746,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 0, 2691, 2711, 2712, 2717, 2719, 2713, 2700, 2038,
	2405, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1811, 1820, -2, -2, -2, -2,
	-2, -2, -2, 2704, 2705, 2722, 2725, 2731, 2736, 2737,
	2709, 2718, 2745, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 1812,
	-2, -2, -2, -2, 1566, 2575, 1569, 1197, 1567, 1551,
	1553, 0, 1555, 0, 0, 0, 1560, 1586, 1584, 0,
	1635, 1564, 1565, 1654, 1654, 1678, 0, 1659, 0, 1678,
	1578, 1705, 0, 1665, 2600, 2014, 2015, 0, 2305, 2300,
	-2, -2, 2743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 609, 611, 0, 0, 0, 630,
	1588, 0, 0, 0, 0, 0, 0, 0, 412, 413,
	414, 415, 416, 2711, 0, 0, 0, 421, 0, 423,
	424, 425, 426, 427, 428, 429, 205, 2711, 511, 536,
	0, 205, 2711, 514, 205, 2711, 517, 0, 520, 1311,
	205, 2711, 523, 2266, 205, 2711, 526, 528, 2274, 205,
	2711, 532, 2281, 2279, 533, 2711, 535, 313, 311, 312,
	2318, 2319, 2326, 2327, 2328, 2329, 2744, 2746, 1402, 1403,
	1404, 1405, 0, 1432, 1312, 652, 0, 678, 0, 682,
	683, 2699, -2, 0, 2620, 687, 688, -2, 690, 1436,
	1440, 1441, 1442, 1443, 1444, 0, 0, 0, 0, 1449,
	0, 0, 0, 0, 679, 680, 697, 698, 703, 706,
	0, 805, 806, 807, 808, 809, 72, 0, 2711, 1705,
	74, 0, 2260, 2330, 2331, 2332, 2333, 2334, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775,
	2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785,
	2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795,
	2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 78,
	0, 2711, 83, 0, 2711, 0, -2, 96, 0, 108,
	0, 2263, 117, 0, 2711, 0, 2235, -2, 0, 217,
	297, 298, 299, 0, 1041, -2, 2711, 1249, 1251, 1251,
	0, -2, 0, 0, 0, 1002, 2232, 2237, 1003, 2256,
	1004, 2242, 0, 344, 345, 346, 347, 348, 0, 349,
	2711, 351, 352, 0, 354, 355, 2711, 357, 358, 0,
	360, 0, 256, 262, 2711, 2711, 383, 385, 0, 387,
	388, 0, 390, 0, 0, 0, 394, -2, 410, 0,
	407, 397, 398, 400, 401, 402, 403, 404, 0, 450,
	448, 2271, 0, 0, -2, 2711, 0, 1038, 0, 0,
	1291, -2, 2711, 1242, 0, 1298, 2711, 1294, 0, -2,
	0, 1576, 2711, 1453, 1070, 1071, 1072, 1073, 1717, 477,
	0, 1484, 0, 1486, 0, 1505, 1711, 1654, 0, 0,
	1716, 0, -2, 596, 2288, -2, 546, 0, 547, 0,
	-2, 0, 325, 0, 0, 1021, 1023, 1024, 1026, 1027,
	1030, 1031, 1032, 1033, 1691, 277, 279, 0, 0, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 0, 0,
	663, 0, 0, 811, 812, 0, 0, 823, 824, 825,
	0, 325, 2612, 2570, 2426, 832, 0, 835, 838, -2,
	0, 0, 0, 0, 842, 0, 847, 848, 849, 0,
	-2, 0, 856, 858, 1010, 860, 0, 0, 862, 0,
	866, 0, 869, 0, 871, 0, 873, -2, -2, -2,
	881, 882, -2, 887, -2, 0, 891, -2, 0, 894,
	0, 897, -2, 0, 907, 903, 904, 0, 0, 0,
	0, 924, 925, 0, 934, 0, 937, 938, 939, 0,
	943, 944, 0, 946, 947, 948, 949, 0, 2683, 2617,
	2391, 0, 955, -2, 961, 963, 0, -2, 0, 979,
	0, 983, 0, 0, 991, 0, 0, 819, 820, 205,
	1709, 1415, -2, 1417, 0, -2, 0, 643, 0, 646,
	1608, 1534, 1531, 0, 1605, 1606, 1535, 0, 0, 0,
	1542, 0, 1581, 1582, 0, 0, 0, 1521, 1522, 0,
	0, 0, 0, 2117, 2118, 2119, 2120, 2133, 2121, 2122,
	2132, 2130, 2131, 2123, 2124, 2129, 2143, 2144, 2134, 2135,
	2125, 2138, 2136, 2137, 2139, 2140, 2141, 2142, 0, 0,
	2148, 0, 2126, 2127, 2128, 2156, 0, 0, 2157, 0,
	2159, 0, 2149, 2145, 2146, 2147, 0, 1919, 1921, 2223,
	0, 0, 0, 2155, 2150, 2151, 1857, 1858, 1859, 1860,
	1861, 1894, 1898, 1899, 0, 0, 1974, 2220, 2219, 1976,
	0, 0, 2171, 0, 1989, -2, 0, 2112, 2166, 0,
	0, 1998, 1999, 2000, 0, 0, 2171, 0, 0, 2214,
	2010, 2011, 1849, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1797, 0, 1799, 0, 1800,
	1801, 1808, 1821, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 2195, -2, 0, 0, 0,
	0, 1813, 0, 1568, 0, 0, 1639, 2224, 2228, 2229,
	1639, 1639, 0, 0, 2172, 1702, 1702, 0, 0, 1697,
	1697, 1697, 1695, 1678, 0, 1678, 1688, 0, 1678, 1678,
	0, -2, 1659, 0, 0, 1688, 0, 1672, 584, 586,
	588, 590, 591, 592, 594, 1706, 1707, 0, 0, 0,
	0, 2306, 0, 0, 0, 0, 2278, 0, 0, 2291,
	0, 366, 0, 0, 0, 2666, 2611, 0, -2, 614,
	633, 1578, 0, 2174, 1732, 1736, 0, 1738, 1739, 1740,
	1741, 1742, 0, 0, 1733, -2, 1809, 1811, 1832, 2323,
	2324, 2325, 1792, 1793, 1794, 1795, 1796, 1804, 1791, 1791,
	1791, 1802, 1831, 1823, 1831, 1827, 1777, 1778, 1779, 1814,
	1815, 1816, 1817, 0, 2666, 2611, 0, -2, 623, 0,
	0, 1516, 411, 0, 418, 419, 420, 0, 507, 0,
	203, 204, 0, 205, 2711, 512, 0, 515, 0, 205,
	2711, 2230, 521, 0, 524, 0, 0, 530, 0, 0,
	0, 0, 0, 205, 1518, 0, 0, 0, 0, -2,
	692, 700, 701, 224, 225, 0, 1438, 0, 1445, 720,
	721, 722, 1447, 1448, 0, 1450, 695, 723, 724, 725,
	726, 727, 728, 0, 2244, 2245, 2246, 2247, 2250, 2251,
	0, 0, 693, 713, 696, 0, 707, 118, 1388, 0,
	0, 161, 0, 1388, 1388, 0, 0, 0, 0, 188,
	0, 1109, 0, 0, 0, 0, 133, 146, 157, 130,
	131, 0, 0, 0, 0, 0, 0, 84, 1219, 0,
	1222, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 0, 98, 99, 0, 0, 104, 105,
	0, 145, 0, 0, 0, 0, 0, 1481, 0, 140,
	120, 0, 0, 133, 147, 159, 0, 192, 194, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 226,
	0, 0, 0, 1243, 0, 0, 0, 1575, 0, 0,
	0, 0, 2711, 1386, 0, 1371, 0, 1691, 2475, -2,
	-2, 277, 1691, 1001, 0, 0, 2306, 2240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 389, 391,
	392, 393, 0, 1290, 0, 399, 440, 1168, 2711, 0,
	0, 467, 462, 0, 464, 0, 0, 0, 1218, 2711,
	1216, 2275, 0, 1240, 0, 1197, 2711, 2273, 0, 0,
	0, 1299, 2315, 1308, 1312, 1471, 0, 479, 0, 1487,
	1489, 0, 0, 1712, 0, 1714, 1654, 1578, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 1690, 0, 0, 1691, 277, 2586, 325,
	325, 1691, 665, 1691, 667, 0, 0, 826, 827, 0,
	325, 325, 325, 833, 834, 836, 837, -2, -2, -2,
	-2, 839, 840, 931, 0, 0, 0, 930, 850, 0,
	852, 855, 859, 0, 995, 2595, 2611, 2666, 1008, 931,
	2391, 931, 2391, 931, 2391, 870, 872, 875, 919, 927,
	886, 893, 0, 888, 892, 895, 898, 0, 900, 908,
	0, -2, 0, 911, 0, 913, 0, 915, 931, 932,
	935, 942, 945, 950, 951, 952, 953, 2286, 954, -2,
	958, 959, 0, 970, 975, 976, 972, 0, 0, 0,
	0, 0, 0, 986, 987, 0, 0, 994, 1236, 0,
	1428, 1608, 1534, 645, 1525, 1607, 1526, 1533, 1536, 0,
	0, 1538, 0, 1540, 0, 1603, 1604, 1611, 1612, 0,
	1622, 1623, 1615, 0, -2, 0, 0, 1618, 1619, 1544,
	0, 1561, 1562, 1563, 1592, 1595, 1327, 0, 2845, 1853,
	1727, 1854, 1855, 2259, 0, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, -2, -2, -2, -2, -2,
	-2, -2, -2, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, -2, -2, -2, 1895, 1896, 1897,
	-2, 2158, 2160, 0, 2223, 0, -2, 0, -2, -2,
	-2, -2, 1916, 0, 1918, 1923, 1925, 1927, 0, 0,
	0, 0, 2222, 1937, 2206, 2207, 0, 0, 2114, 2115,
	2116, 1922, 0, 1941, 2221, 2218, 0, 0, 2152, 0,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 0, 2170, 1591, 2002, 0, 0, 0,
	0, 2009, 1994, 2168, 0, 2167, 0, 0, 0, 2178,
	0, 2213, 2209, 0, 2257, 1848, 1835, 1836, 1837, 1838,
	1839, 1840, 1850, 0, 2254, 2292, 2298, 2088, 0, 0,
	0, 2039, 2040, 2041, 2042, 2043, 0, 2045, 2046, 0,
	2048, 2049, 0, 2051, 2052, 0, 2054, 2055, 2056, 2057,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	0, 0, 2060, 0, 2181, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2062, 0, 2064, 2172, 2192, 0,
	0, 1942, 0, 0, 0, 0, 2112, 0, 2067, 2172,
	2200, 0, 0, 0, 0, 0, 2172, 0, 2205, 0,
	2074, 0, 2076, 1570, 0, 0, 1722, 0, 0, 0,
	2227, 1722, 1722, 0, 1634, 0, 0, 1698, 1699, 1700,
	1701, 0, 0, 1702, 0, 1692, 1696, 1693, 1694, 1688,
	1651, 0, 0, 2261, 1688, 1657, 1687, 0, 1197, 1677,
	1688, 1688, 0, -2, 1661, 1678, 0, 0, 585, 587,
	589, 593, 595, 0, 0, 1591, -2, 0, -2, 327,
	1196, 0, 0, 0, 0, 0, 604, 606, 0, 0,
	527, 0, 0, 620, 0, 598, 0, 601, 0, 1723,
	1726, 0, 0, 1737, 1743, 1744, 0, -2, 0, 0,
	1833, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	422, 537, 205, 509, 0, 205, 205, 518, 0, 0,
	205, 529, 205, 2282, 205, 2280, 314, 534, 1517, 237,
	0, 681, 0, 1437, 1446, 0, 717, 0, 719, 0,
	2248, 2252, 2249, 2253, 0, 708, 0, 0, 0, 0,
	1387, 0, 1334, 0, 0, 165, 2711, 0, 207, 0,
	0, 1161, 2267, 0, 1151, 0, 0, 2412, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 1221, 1223, 1230,
	1232, 0, 1226, 2255, 0, 0, 1227, 0, 1229, 1231,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 1252, 0, 0, 1253, 1254, 1459, 1460, 0, 1480,
	1481, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 2234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 1286, 1284, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 0,
	0, 0, -2, 1247, 1248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 316, 2233, 2243, 0,
	1028, 1029, 350, 353, 356, 359, 243, 0, 0, 395,
	0, 0, 1076, 1051, 0, 0, 449, 325, 0, 0,
	463, 467, 2284, 1036, 221, 222, 223, 1214, 1217, 0,
	1197, 2711, 1263, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 2711, 2262, 2314, 2315, 1473, 1481, 0, 1722,
	0, 1503, 1490, 0, 0, 0, 1503, 1507, 1508, 1510,
	1511, 0, 0, 1713, 1719, 545, 597, 1578, 1578, 325,
	323, 2537, 321, 318, 320, 0, 0, 0, 1077, 1079,
	1080, 1081, 207, 0, 2315, 1151, 2464, 2315, 0, 1493,
	1495, 0, 0, 0, 271, 0, 280, 1691, 278, 283,
	0, 0, 0, 461, 664, 669, 821, 0, 325, 829,
	830, 831, 877, 921, 929, 974, 841, 843, 844, 845,
	0, 0, 0, 1009, 1005, 1006, 1007, 861, 931, 864,
	931, 867, 931, 890, 896, 909, 902, 910, 0, 0,
	0, 923, 940, 0, 957, 0, 0, 0, 0, 0,
	0, 0, 980, 981, 982, 984, 989, 988, 993, 1710,
	1529, 1530, 1532, 0, 1541, 0, 0, 1617, -2, -2,
	1616, 1620, 1621, -2, -2, -2, -2, 1537, 0, 1546,
	1543, 0, 1602, 1325, 1326, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1938, 0, -2, 1917, 1920, 1924,
	1926, 1928, 0, 0, 0, 0, 0, 0, 2161, 0,
	2163, 1939, 2216, 2219, 2154, 0, 2110, 0, 0, 1590,
	1591, 1591, 0, 2008, 0, 2169, 0, 2176, 2177, 0,
	2001, 0, 2210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2012, 0, 0, 0, 0, 2044, 2047, 2050,
	2053, 0, 0, 0, 0, 2033, 0, 0, 0, 2037,
	1803, 1789, 0, 1831, 1829, 1830, 1824, 1831, 1828, 1781,
	0, 1780, 0, 2059, 0, 2061, 2063, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 1946, 1947, 1967, 2066, 2198,
	2199, 0, 0, 0, 0, 0, 0, 2072, 0, 2204,
	2073, 2075, 1578, 0, 1571, 0, 1636, 1625, 1721, 0,
	2225, 1691, 1638, 1640, 2226, 2264, 1625, 1625, 0, 2173,
	0, 0, 1682, 0, 0, 0, 1684, 1655, 0, 0,
	1649, 0, 1644, 1645, 1646, 1647, 1648, 1656, 1197, 1686,
	1658, 1662, 2292, 0, 1688, 0, 1673, 0, 1675, 1708,
	0, 1667, 1670, 0, 0, 2307, 1722, 0, 361, 367,
	368, 362, 363, 364, 365, 613, 0, 0, 0, 0,
	0, 2175, 0, 1728, 0, 1734, 0, 0, 0, 0,
	622, 0, 0, 0, 0, 1515, 417, 508, 205, 513,
	516, 2231, 205, 522, 525, 531, 233, 0, 677, -2,
	715, 716, 718, 0, 714, 162, 1388, 0, 0, 1330,
	1332, 1336, 1342, 1345, 0, 167, 2711, 179, 0, 1125,
	0, 2265, 0, 0, 0, 0, 0, 0, 1390, 0,
	0, 2711, 205, 2711, 205, 182, 184, 187, 0, 191,
	189, 0, 1113, 0, 0, 1116, 119, 1388, 0, 0,
	122, 126, 134, 135, 138, 0, 0, 0, 144, 0,
	0, 0, 1347, 1351, 1359, 0, 0, 0, 1224, 1225,
	1228, 1234, 85, 0, 0, 0, 1355, 1357, 1363, 97,
	100, 2711, 2276, 102, 2711, 0, 1329, 0, 0, 0,
	0, 193, 124, 128, 136, 137, 139, 0, 1365, 121,
	0, 220, 0, 0, 210, 205, 2711, 0, 212, 0,
	213, 214, 227, 0, 0, 0, 1039, 1040, 1285, 1238,
	1239, 0, 1250, 1244, 0, 0, 0, 0, 0, 1367,
	1368, 0, 0, 0, 1386, 1383, 1691, 239, 0, 1691,
	247, 0, 2239, 0, 263, 382, 0, 0, 0, 0,
	1075, 1179, 0, 1046, 0, 0, 0, 455, 451, 0,
	460, 466, 465, 471, -2, 0, 0, 0, 0, -2,
	0, 0, 1301, 1295, 1296, 0, 0, 0, 0, 2711,
	1475, 1481, 0, 1576, 1591, 478, 1482, 1503, 0, 0,
	0, 1492, 1488, 1485, 1722, 0, 0, 0, 0, 0,
	1715, 1718, 548, 549, 300, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 1082, 1086, 0, 2315, 2315, 0,
	2269, 0, 0, 0, 0, 0, 0, 281, 0, 284,
	0, 0, 0, 289, 290, 291, 292, 293, 294, 0,
	283, 273, 1691, 0, 0, 666, 0, 0, 828, 0,
	851, 854, 863, 865, 868, 912, 914, 931, 941, 964,
	965, 1103, 0, 1103, 0, 0, 985, 1539, 0, 1614,
	1545, 1596, 1597, 0, 1327, 0, 1856, 1901, 0, 0,
	-2, 0, 0, 1905, 0, 0, 0, -2, 0, 0,
	0, 2162, 2164, 0, 2218, 2153, 2003, 0, 0, 0,
	2007, 1991, 1992, 0, 2113, 2179, 2208, 2212, 0, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 0, 2258, 2293, 2297,
	2086, 2087, 2091, 2272, 0, 0, 0, 2016, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 1826, 0, 0,
	2180, 2191, 2193, 1943, 1944, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, -2, -2, -2, 1961, 1962,
	1963, -2, -2, -2, 1968, 0, 0, 0, 2194, 2196,
	2197, 2201, 2202, 0, 2069, 2070, 2071, 2203, 0, 1578,
	1572, 1633, 0, 1720, 1637, 0, 1633, 1633, 1585, 1680,
	0, 0, 1704, 0, 1652, 0, 1653, 0, 1685, 0,
	1660, 1663, 1664, 1674, 0, 1666, 0, 1669, 0, 2003,
	-2, 326, 328, 330, 0, 333, 334, 0, 0, 616,
	617, 0, 615, 599, 0, 0, 1730, 0, 0, 1806,
	1810, 1834, 625, 626, 0, 624, 510, 519, 235, 0,
	1689, 0, 0, 0, 0, 0, 0, 206, 1123, 1160,
	0, 0, 0, 1150, 0, 0, 1166, 169, 170, 171,
	0, 0, 0, 0, 180, 0, 0, 177, 0, 186,
	190, 1110, 0, 0, 0, 0, 1335, 0, 0, 0,
	141, 142, 143, 0, 148, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1465, 1466, 0,
	1456, 0, 0, 0, 208, 0, 0, 0, 1324, 229,
	0, 0, 0, 0, 0, 1288, 1289, 1246, 1348, 1352,
	1360, 0, 0, 0, 0, 631, 0, 636, 1385, 0,
	247, 245, 0, 248, 0, 251, 252, 0, 254, 247,
	241, 0, 0, 0, 1197, 396, 1049, 1167, 0, 1169,
	0, 1047, 0, 0, 1168, 447, 0, 454, 0, 468,
	0, 0, 1218, 0, 0, 1241, 1261, 1197, 0, 1300,
	1302, 0, 1310, 0, 0, 0, 1477, 1481, 0, 1470,
	1471, 1610, 1483, 1501, -2, 0, 0, 1591, 1509, 1506,
	1512, 1513, 0, 322, 0, 317, 319, 0, 303, 0,
	0, 1078, 1083, 0, 0, 0, 0, 0, 1494, 1496,
	0, 1022, 1025, 0, 0, 0, 0, 0, 0, 272,
	283, 1691, 309, 0, 822, 846, 922, 966, 1102, 0,
	0, 968, 0, 0, 1613, 1600, 1601, 1598, 1327, 1903,
	1907, 0, 0, 0, 1909, -2, 0, 1931, -2, -2,
	2165, 2217, 1982, 1591, 2004, 2006, 1993, 2211, 1851, 0,
	2093, 2090, 0, 2077, 0, 2028, 2029, 0, 0, 2032,
	2034, 2035, 2036, 1790, 1783, 1782, 2190, 0, 0, 0,
	0, 2068, 1573, 0, 2082, 0, 0, 1641, 2082, 2082,
	1681, 0, 1683, 1650, 1642, 0, 2293, 1676, 1668, 0,
	0, 331, 0, 335, 336, 0, 0, 1724, 1729, 0,
	1735, 1805, 0, 236, 163, 164, 1339, 1343, 1340, 0,
	166, 0, 1124, 0, 1127, 0, 0, 0, 0, 1134,
	1151, 0, 0, 0, 0, 0, 0, 1153, 0, 1152,
	0, 0, 1183, 0, 1315, 1322, 0, -2, 0, 0,
	0, 173, 196, 0, 0, 0, 0, 199, 1389, 175,
	0, 0, 205, 205, 0, 0, 1331, 1333, 1346, 0,
	0, 0, 0, 151, 0, 0, 1349, 1353, 1361, 1356,
	1358, 1364, 0, 103, 0, 1467, 0, 0, 1366, 218,
	219, 0, 205, 0, 205, 211, 205, 1324, 0, 0,
	0, 0, 0, 0, 0, 1369, 1370, 238, 0, 0,
	0, 0, 240, 315, 247, 384, 0, 1097, 0, 1179,
	1171, 1172, 1173, 0, 1178, 1180, 0, 0, 1063, 1048,
	0, 1059, 0, 0, 1076, 1051, 0, 452, 469, 0,
	472, 0, 475, 1037, 1215, 1258, 1197, 0, 1292, 0,
	0, 0, 0, 0, 0, 0, 1479, 1481, 0, 1472,
	1473, 1503, 1609, 0, 0, 0, 1491, 1610, 0, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 285, 0, 286, 287, 288, 295, 274, 275, 668,
	670, 0, 0, 676, 1101, 0, 0, 0, 0, 1599,
	1911, -2, -2, 1932, 0, 2294, 2296, 1591, 0, 2079,
	1593, 0, 0, -2, 0, 0, 0, 1574, 1557, 0,
	1632, 1624, 1626, 1628, 2598, 2386, 2710, 1558, 1559, 1703,
	0, 1671, 332, 618, 0, 0, 1731, 0, 0, 0,
	1341, 168, 0, 1128, 1129, 2268, 1131, 0, 1133, 1135,
	1136, 1137, 0, 1140, 0, 2317, 0, 1145, 1148, 1149,
	0, 0, 1162, 1184, 0, 1193, 0, 1317, 1327, 1321,
	0, 1319, 1195, 0, 172, 198, 174, 200, 195, 0,
	1324, 0, 176, 185, 0, 0, 123, 0, 0, 2380,
	154, 152, 150, 101, 1328, 125, 0, 220, 228, 1323,
	230, 215, 205, 0, 1350, 1354, 1362, 0, 1377, 1378,
	1379, 1380, 0, 0, 0, 0, 249, 0, 250, 253,
	0, 0, 1112, 0, 1050, 1170, 0, 1181, 1182, 1053,
	0, 1052, 0, 0, 0, 0, 0, 453, 456, 0,
	459, 0, 0, 0, 0, 0, 1303, 1301, 0, 1309,
	0, 0, 0, 1455, 0, 0, 1474, 1475, 476, 1497,
	0, 0, 1503, 1514, 302, 0, 0, 1084, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1085, 1195, 0,
	0, 1159, 0, 307, 282, 0, 672, 0, 674, 0,
	967, 969, 0, 0, 2005, 2097, 0, 0, 2030, 2031,
	-2, 0, 1971, 2081, 2083, 0, 0, 0, 0, 0,
	1643, 619, 1725, 627, 1337, 0, 1344, 1126, 1130, 0,
	0, 0, 1141, 1201, 0, 0, 1218, 1218, 1154, 0,
	0, 1187, 1188, 1097, 0, 1189, 1190, 1191, 1316, 1602,
	1322, 1097, 0, 0, 197, 202, 0, 0, 0, 0,
	0, 0, 0, 209, 231, 1324, 0, 1381, 1382, 0,
	0, 246, 267, 0, 1259, 1051, 1111, 0, 0, 1061,
	0, 1064, 0, 1060, 1057, 1058, 1049, 0, 457, 458,
	473, 0, 474, 0, 1262, 0, 0, 1310, 0, 0,
	1462, 1454, 1481, 1476, 1477, 1722, 1500, 1504, 0, 0,
	1193, 1195, 1108, 0, 671, 0, 0, 977, 978, 0,
	0, 0, 0, 2092, 1594, 1972, 0, 0, 1627, 1629,
	1630, 1631, 1338, 0, 0, 1139, 1206, 0, 0, 0,
	0, 0, 1155, 1185, 1186, 1108, 0, 1320, 1318, 1164,
	0, 1197, 178, 0, 1195, 0, 1117, 0, 0, 1120,
	0, 0, 155, 2380, 153, 0, 205, 1374, 205, 0,
	270, 0, 261, 259, 260, 1053, 0, 0, 1175, 1177,
	0, 1065, 1097, 1063, 470, 1260, 1293, 1195, 0, 1193,
	0, 1469, 1481, 1463, 1464, 0, 1479, 0, 325, 325,
	1097, 1193, 1051, 1107, 325, 673, 675, 2089, 2109, 2098,
	-2, 2669, 2387, 0, 2109, 2109, 2084, 2085, 0, 0,
	1142, 1202, 1203, 0, 1198, 1199, 1200, 2316, 1143, 1144,
	1146, 1147, 1183, 0, 0, 1201, 201, 1097, 1114, 0,
	0, 1115, 0, 0, 158, 0, 160, 232, 1372, 0,
	1375, 0, 255, 0, 0, 1045, 0, 1174, 0, 0,
	0, 0, 1112, 1053, 1193, 0, 1097, 0, 1458, 1468,
	0, 1478, 1455, 0, 304, 305, 1108, 1097, 1722, 0,
	306, 2094, 0, 0, 2100, 2101, 2102, 2103, 2104, 2095,
	2096, 1132, 0, 1204, 0, 1205, 0, 0, 0, 1722,
	1192, 0, 1206, 183, 1118, 0, 1121, 0, 156, 0,
	0, 0, 265, 266, 1042, 1044, 0, 1176, 1054, 0,
	1056, 1051, 1062, 1097, 0, 1108, 0, 1451, 1457, 1461,
	2277, 1462, 1498, 0, 1051, 1108, 1158, 0, 2106, 2107,
	0, 0, 0, 1207, 0, 1210, 1211, 0, 1208, 1163,
	0, 1183, 0, 0, 1373, 205, 0, 0, 1055, 1053,
	1108, 1195, 1051, 1193, 1469, 0, 1722, 1051, 2105, 2108,
	2099, 1138, 1209, 1212, 1213, 1194, 1165, 0, 0, 1376,
	268, 0, 1100, 1045, 1051, 1193, 1722, 1097, 1458, 1722,
	1156, 1722, 1105, 0, 0, 1096, 1098, 1099, 1043, 1722,
	1097, 1306, 1108, 1452, 1499, 1157, 1119, 1104, 0, 269,
	1304, 1108, 1051, 0, 1051, 1722, 0, 1722, 1307, 1105,
	1305, 1122,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 587, 3, 593, 588, 3,
	598, 599, 591, 589, 603, 590, 600, 592, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 606, 3,
	579, 581, 580, 584, 602, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 596, 3, 597, 594, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 604, 586, 605, 582,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 583, 57922, 585, 57923, 595, 57924, 601,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1502
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1624
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1642
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1691
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1787
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1819
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1843
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1852
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1873
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1881
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1904
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1905
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1909
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1918
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1935
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1942
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1954
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1961
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1969
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1989
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1997
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2008
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2018
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2028
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2037
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2048
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2054
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2080
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2085
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2176
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2219
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2222
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2228
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2463
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2467
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2470
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2495
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2545
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2629
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2637
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2664
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2976
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3033
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3041
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3078
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3087
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3093
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3098
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3103
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3108
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3113
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3117
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3172
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3208
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3220
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3234
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3307
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3404
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3424
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3429
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3443
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3448
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "CREATE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplemented(sqllex, "create access method")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			return unimplemented(sqllex, "create cast")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3469
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplemented(sqllex, "create publication")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplemented(sqllex, "create rule")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplemented(sqllex, "create server")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3488
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3491
		{
		}
	case 408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3492
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3495
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3496
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplemented(sqllex, "drop server")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3565
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3643
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3678
		{

			sqlVAL.union.val = nil
		}
	case 468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "DELETE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3764
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3765
		{
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3791
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "DROP")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3797
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3991
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4025
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4057
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4073
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4081
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4089
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "DELETE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "INSERT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "DELETE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "INSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4170
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4178
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4203
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4293
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4308
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			return helpWith(sqllex, "GRANT")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4371
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4383
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "RESET")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "USE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4458
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4462
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4481
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4660
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4664
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4683
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4687
		{
			return unimplemented(sqllex, "set from current")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4691
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4696
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4710
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4722
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4727
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = tree.Low
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.Normal
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.High
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4907
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4921
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.str = "client_encoding"
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.str = "timezone"
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4959
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4977
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4992
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5031
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5040
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5049
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5057
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5074
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5099
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5122
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5139
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5149
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5179
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5202
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5210
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5270
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5275
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = true
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = true
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5425
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5430
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5432
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5436
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = true
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = false
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5451
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5456
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5487
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5497
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5502
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = true
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = false
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5520
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5534
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5545
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5549
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5560
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5574
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5582
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5592
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5596
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5610
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5615
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5620
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5625
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5633
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5643
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5647
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5649
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5653
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5664
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5675
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5693
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5701
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5722
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5732
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5736
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5745
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5768
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5780
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5849
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5856
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5863
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5996
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6039
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6048
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6097
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6110
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6139
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6152
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6184
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6227
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6255
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6294
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6310
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{

			sqlVAL.union.val = nil
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6345
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.str = ""
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6355
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = nil
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6378
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6382
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6408
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6422
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6437
		{
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6439
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6494
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6520
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6531
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6534
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6544
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6560
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6565
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.str = ""
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6708
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6812
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6857
		{

			sqlVAL.union.val = true
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = false
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6867
		{
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6871
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6874
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6974
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6985
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7002
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7012
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7027
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7092
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7093
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7094
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7095
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7096
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7097
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7169
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7253
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7262
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7270
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7281
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7296
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7300
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7302
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7310
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7382
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.str = ""
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = true
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7416
		{

			sqlVAL.union.val = true
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = false
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7431
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7445
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7457
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7469
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7479
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7489
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = nil
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7599
		{
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7625
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7627
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7629
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7631
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7633
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7635
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7673
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7691
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7710
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7727
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7744
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7748
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = false
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = true
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = false
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = true
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = false
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7802
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7808
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7814
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7822
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.str = ""
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.str = ""
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7881
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7887
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8112
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8118
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8130
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8136
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8150
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8156
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8215
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = true
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = false
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.Types
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8275
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8279
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8303
		{
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8304
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8307
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8308
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8319
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8337
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8346
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8367
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8375
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8396
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8419
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8420
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8421
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8440
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8445
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8463
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8472
		{
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8474
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8495
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8536
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8538
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.str = ""
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8654
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8659
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8676
		{

		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8691
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.str = ""
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.str = ""
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.str = ""
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.str = ""
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8746
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8759
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8760
		{
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8789
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8820
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8869
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8896
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8900
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8938
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8970
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8991
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9006
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9150
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9185
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9248
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9292
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9308
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = true
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = false
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9361
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9362
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = nil
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9375
		{
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9376
		{
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = true
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = false
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = false
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = true
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9405
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9406
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9409
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9410
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9451
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9472
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9477
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9503
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9536
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9595
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9596
		{
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9662
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9664
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9679
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9701
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9727
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9758
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9798
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9808
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9854
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9884
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9917
		{
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9919
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = nil
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = true
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = false
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.str = tree.AstFull
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.str = tree.AstRight
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.str = tree.AstInner
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10036
		{
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10037
		{
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.str = tree.AstHash
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.str = ""
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10106
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10129
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10135
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10141
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10151
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = true
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = false
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = true
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = false
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10200
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10213
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10221
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10222
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10240
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10250
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10270
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10319
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10331
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10332
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = types.Geography
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10381
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10389
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10415
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10423
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = nil
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = types.Int2
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = types.Int
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = types.Float4
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = types.Float
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10466
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10474
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = types.Bool
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = types.Float
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10515
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10521
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10543
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = types.String
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = true
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = false
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = types.Date
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10592
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10600
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10614
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10623
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10631
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10648
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = true
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = false
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = false
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = types.Interval
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10672
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10756
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10771
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = nil
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10801
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10861
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11010
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11197
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11219
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11327
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11335
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11431
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11436
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11462
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11486
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11516
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11527
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11528
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11543
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11552
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11618
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11743
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11748
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11789
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11794
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11809
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11819
		{
			return unimplemented(sqllex, "treat")
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11892
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.str = ""
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11981
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11994
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12062
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12091
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12167
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12296
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12507
		{
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12508
		{
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12522
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12580
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12588
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12661
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12673
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12677
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12686
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12697
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12706
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12714
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12731
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12873
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12902
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12910
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12950
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12963
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12970
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.str = ""
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
