// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12830

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1480,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	258, 386,
	-2, 0,
	-1, 74,
	240, 227,
	504, 227,
	-2, 0,
	-1, 87,
	228, 1240,
	242, 1240,
	258, 382,
	384, 382,
	394, 1010,
	430, 382,
	442, 1010,
	488, 1010,
	515, 382,
	541, 1010,
	-2, 0,
	-1, 93,
	132, 1480,
	235, 1480,
	526, 1480,
	527, 1480,
	-2, 0,
	-1, 109,
	150, 1451,
	169, 1451,
	182, 1451,
	238, 1451,
	271, 1451,
	336, 1451,
	346, 1451,
	521, 1451,
	-2, 1422,
	-1, 148,
	158, 868,
	257, 868,
	387, 835,
	447, 835,
	487, 835,
	507, 868,
	509, 835,
	-2, 0,
	-1, 150,
	4, 1482,
	21, 1482,
	22, 1482,
	23, 1482,
	24, 1482,
	25, 1482,
	26, 1482,
	27, 1482,
	29, 1482,
	30, 1482,
	36, 1482,
	41, 1482,
	42, 1482,
	44, 1482,
	45, 1482,
	46, 1482,
	47, 1482,
	48, 1482,
	49, 1482,
	50, 1482,
	51, 1482,
	53, 1482,
	54, 1482,
	55, 1482,
	56, 1482,
	58, 1482,
	59, 1482,
	60, 1482,
	61, 1482,
	62, 1482,
	63, 1482,
	64, 1482,
	68, 1482,
	69, 1482,
	70, 1482,
	71, 1482,
	73, 1482,
	74, 1482,
	75, 1482,
	79, 1482,
	80, 1482,
	81, 1482,
	82, 1482,
	83, 1482,
	84, 1482,
	85, 1482,
	88, 1482,
	89, 1482,
	90, 1482,
	91, 1482,
	92, 1482,
	94, 1482,
	96, 1482,
	97, 1482,
	98, 1482,
	99, 1482,
	100, 1482,
	101, 1482,
	103, 1482,
	104, 1482,
	105, 1482,
	107, 1482,
	108, 1482,
	109, 1482,
	117, 1482,
	118, 1482,
	119, 1482,
	120, 1482,
	121, 1482,
	123, 1482,
	124, 1482,
	125, 1482,
	127, 1482,
	128, 1482,
	129, 1482,
	131, 1482,
	132, 1482,
	133, 1482,
	135, 1482,
	136, 1482,
	137, 1482,
	140, 1482,
	141, 1482,
	142, 1482,
	144, 1482,
	145, 1482,
	147, 1482,
	148, 1482,
	149, 1482,
	151, 1482,
	152, 1482,
	153, 1482,
	154, 1482,
	155, 1482,
	156, 1482,
	157, 1482,
	158, 1482,
	159, 1482,
	160, 1482,
	161, 1482,
	162, 1482,
	163, 1482,
	164, 1482,
	165, 1482,
	166, 1482,
	168, 1482,
	174, 1482,
	175, 1482,
	176, 1482,
	177, 1482,
	181, 1482,
	183, 1482,
	184, 1482,
	188, 1482,
	189, 1482,
	190, 1482,
	191, 1482,
	192, 1482,
	193, 1482,
	194, 1482,
	195, 1482,
	196, 1482,
	197, 1482,
	198, 1482,
	199, 1482,
	200, 1482,
	202, 1482,
	203, 1482,
	205, 1482,
	206, 1482,
	208, 1482,
	209, 1482,
	210, 1482,
	211, 1482,
	212, 1482,
	213, 1482,
	214, 1482,
	215, 1482,
	216, 1482,
	218, 1482,
	219, 1482,
	221, 1482,
	222, 1482,
	223, 1482,
	224, 1482,
	228, 1482,
	229, 1482,
	230, 1482,
	231, 1482,
	232, 1482,
	235, 1482,
	236, 1482,
	237, 1482,
	239, 1482,
	241, 1482,
	242, 1482,
	244, 1482,
	246, 1482,
	247, 1482,
	248, 1482,
	250, 1482,
	254, 1482,
	255, 1482,
	256, 1482,
	257, 1482,
	258, 1482,
	259, 1482,
	261, 1482,
	262, 1482,
	263, 1482,
	265, 1482,
	266, 1482,
	268, 1482,
	269, 1482,
	272, 1482,
	276, 1482,
	277, 1482,
	278, 1482,
	281, 1482,
	282, 1482,
	283, 1482,
	284, 1482,
	286, 1482,
	287, 1482,
	288, 1482,
	289, 1482,
	290, 1482,
	291, 1482,
	292, 1482,
	293, 1482,
	294, 1482,
	295, 1482,
	296, 1482,
	297, 1482,
	298, 1482,
	299, 1482,
	300, 1482,
	301, 1482,
	302, 1482,
	303, 1482,
	304, 1482,
	305, 1482,
	306, 1482,
	307, 1482,
	309, 1482,
	311, 1482,
	312, 1482,
	313, 1482,
	314, 1482,
	315, 1482,
	316, 1482,
	317, 1482,
	318, 1482,
	319, 1482,
	320, 1482,
	321, 1482,
	322, 1482,
	324, 1482,
	326, 1482,
	328, 1482,
	329, 1482,
	331, 1482,
	332, 1482,
	333, 1482,
	334, 1482,
	335, 1482,
	338, 1482,
	341, 1482,
	342, 1482,
	343, 1482,
	344, 1482,
	347, 1482,
	348, 1482,
	349, 1482,
	351, 1482,
	353, 1482,
	354, 1482,
	355, 1482,
	356, 1482,
	357, 1482,
	358, 1482,
	359, 1482,
	360, 1482,
	361, 1482,
	362, 1482,
	363, 1482,
	364, 1482,
	366, 1482,
	367, 1482,
	368, 1482,
	369, 1482,
	370, 1482,
	371, 1482,
	372, 1482,
	373, 1482,
	374, 1482,
	375, 1482,
	376, 1482,
	377, 1482,
	378, 1482,
	379, 1482,
	380, 1482,
	382, 1482,
	383, 1482,
	385, 1482,
	386, 1482,
	387, 1482,
	388, 1482,
	389, 1482,
	390, 1482,
	391, 1482,
	392, 1482,
	393, 1482,
	394, 1482,
	395, 1482,
	396, 1482,
	398, 1482,
	400, 1482,
	401, 1482,
	402, 1482,
	407, 1482,
	409, 1482,
	410, 1482,
	411, 1482,
	412, 1482,
	413, 1482,
	414, 1482,
	415, 1482,
	416, 1482,
	417, 1482,
	419, 1482,
	420, 1482,
	421, 1482,
	423, 1482,
	424, 1482,
	425, 1482,
	426, 1482,
	427, 1482,
	428, 1482,
	430, 1482,
	431, 1482,
	432, 1482,
	433, 1482,
	434, 1482,
	435, 1482,
	436, 1482,
	437, 1482,
	438, 1482,
	439, 1482,
	440, 1482,
	442, 1482,
	443, 1482,
	444, 1482,
	445, 1482,
	446, 1482,
	447, 1482,
	449, 1482,
	450, 1482,
	451, 1482,
	452, 1482,
	453, 1482,
	454, 1482,
	456, 1482,
	457, 1482,
	458, 1482,
	459, 1482,
	460, 1482,
	461, 1482,
	462, 1482,
	464, 1482,
	466, 1482,
	467, 1482,
	468, 1482,
	469, 1482,
	470, 1482,
	471, 1482,
	472, 1482,
	473, 1482,
	474, 1482,
	475, 1482,
	476, 1482,
	477, 1482,
	478, 1482,
	479, 1482,
	480, 1482,
	481, 1482,
	483, 1482,
	484, 1482,
	486, 1482,
	487, 1482,
	489, 1482,
	490, 1482,
	491, 1482,
	492, 1482,
	493, 1482,
	494, 1482,
	495, 1482,
	496, 1482,
	497, 1482,
	499, 1482,
	500, 1482,
	501, 1482,
	502, 1482,
	503, 1482,
	505, 1482,
	507, 1482,
	508, 1482,
	509, 1482,
	510, 1482,
	511, 1482,
	512, 1482,
	514, 1482,
	515, 1482,
	516, 1482,
	517, 1482,
	519, 1482,
	520, 1482,
	523, 1482,
	524, 1482,
	525, 1482,
	526, 1482,
	527, 1482,
	528, 1482,
	529, 1482,
	531, 1482,
	534, 1482,
	535, 1482,
	536, 1482,
	537, 1482,
	538, 1482,
	539, 1482,
	541, 1482,
	542, 1482,
	543, 1482,
	544, 1482,
	550, 1482,
	551, 1482,
	552, 1482,
	553, 1482,
	554, 1482,
	555, 1482,
	-2, 0,
	-1, 151,
	1, 1337,
	130, 1337,
	246, 1337,
	325, 1337,
	382, 1337,
	391, 1337,
	559, 1337,
	583, 1337,
	-2, 0,
	-1, 153,
	1, 1337,
	583, 1337,
	-2, 0,
	-1, 154,
	1, 1337,
	583, 1337,
	-2, 0,
	-1, 155,
	1, 1337,
	504, 1337,
	583, 1337,
	-2, 0,
	-1, 183,
	150, 1450,
	169, 1450,
	182, 1450,
	238, 1450,
	271, 1450,
	336, 1450,
	346, 1450,
	521, 1450,
	-2, 1425,
	-1, 229,
	4, 1489,
	5, 1489,
	6, 1489,
	7, 1489,
	8, 1489,
	9, 1489,
	10, 1489,
	21, 1489,
	22, 1489,
	23, 1489,
	24, 1489,
	25, 1489,
	26, 1489,
	27, 1489,
	29, 1489,
	30, 1489,
	36, 1489,
	37, 1489,
	41, 1489,
	42, 1489,
	43, 1489,
	44, 1489,
	45, 1489,
	46, 1489,
	47, 1489,
	48, 1489,
	49, 1489,
	50, 1489,
	51, 1489,
	53, 1489,
	54, 1489,
	55, 1489,
	56, 1489,
	58, 1489,
	59, 1489,
	60, 1489,
	61, 1489,
	62, 1489,
	63, 1489,
	64, 1489,
	65, 1489,
	66, 1489,
	67, 1489,
	68, 1489,
	69, 1489,
	70, 1489,
	71, 1489,
	73, 1489,
	74, 1489,
	75, 1489,
	77, 1489,
	79, 1489,
	80, 1489,
	81, 1489,
	82, 1489,
	83, 1489,
	84, 1489,
	85, 1489,
	88, 1489,
	89, 1489,
	90, 1489,
	91, 1489,
	92, 1489,
	94, 1489,
	96, 1489,
	97, 1489,
	98, 1489,
	99, 1489,
	100, 1489,
	101, 1489,
	103, 1489,
	104, 1489,
	105, 1489,
	106, 1489,
	107, 1489,
	108, 1489,
	109, 1489,
	110, 1489,
	111, 1489,
	112, 1489,
	113, 1489,
	114, 1489,
	115, 1489,
	116, 1489,
	117, 1489,
	118, 1489,
	119, 1489,
	120, 1489,
	121, 1489,
	122, 1489,
	123, 1489,
	124, 1489,
	125, 1489,
	126, 1489,
	127, 1489,
	128, 1489,
	129, 1489,
	131, 1489,
	132, 1489,
	133, 1489,
	135, 1489,
	136, 1489,
	137, 1489,
	140, 1489,
	141, 1489,
	142, 1489,
	144, 1489,
	145, 1489,
	147, 1489,
	148, 1489,
	149, 1489,
	151, 1489,
	152, 1489,
	153, 1489,
	154, 1489,
	155, 1489,
	156, 1489,
	157, 1489,
	158, 1489,
	159, 1489,
	160, 1489,
	161, 1489,
	162, 1489,
	163, 1489,
	164, 1489,
	165, 1489,
	166, 1489,
	167, 1489,
	168, 1489,
	174, 1489,
	175, 1489,
	176, 1489,
	177, 1489,
	181, 1489,
	183, 1489,
	184, 1489,
	187, 1489,
	188, 1489,
	189, 1489,
	190, 1489,
	191, 1489,
	192, 1489,
	193, 1489,
	194, 1489,
	195, 1489,
	196, 1489,
	197, 1489,
	198, 1489,
	199, 1489,
	200, 1489,
	202, 1489,
	203, 1489,
	205, 1489,
	206, 1489,
	208, 1489,
	209, 1489,
	210, 1489,
	211, 1489,
	212, 1489,
	213, 1489,
	214, 1489,
	215, 1489,
	216, 1489,
	217, 1489,
	218, 1489,
	219, 1489,
	221, 1489,
	222, 1489,
	223, 1489,
	224, 1489,
	228, 1489,
	229, 1489,
	230, 1489,
	231, 1489,
	232, 1489,
	234, 1489,
	235, 1489,
	236, 1489,
	237, 1489,
	239, 1489,
	241, 1489,
	242, 1489,
	243, 1489,
	244, 1489,
	245, 1489,
	246, 1489,
	247, 1489,
	248, 1489,
	249, 1489,
	250, 1489,
	254, 1489,
	255, 1489,
	256, 1489,
	257, 1489,
	258, 1489,
	259, 1489,
	261, 1489,
	262, 1489,
	263, 1489,
	265, 1489,
	266, 1489,
	267, 1489,
	268, 1489,
	269, 1489,
	270, 1489,
	272, 1489,
	276, 1489,
	277, 1489,
	278, 1489,
	279, 1489,
	280, 1489,
	281, 1489,
	282, 1489,
	283, 1489,
	284, 1489,
	286, 1489,
	287, 1489,
	288, 1489,
	289, 1489,
	290, 1489,
	291, 1489,
	292, 1489,
	293, 1489,
	294, 1489,
	295, 1489,
	296, 1489,
	297, 1489,
	298, 1489,
	299, 1489,
	300, 1489,
	301, 1489,
	302, 1489,
	303, 1489,
	304, 1489,
	305, 1489,
	306, 1489,
	307, 1489,
	309, 1489,
	310, 1489,
	311, 1489,
	312, 1489,
	313, 1489,
	314, 1489,
	315, 1489,
	316, 1489,
	317, 1489,
	318, 1489,
	319, 1489,
	320, 1489,
	321, 1489,
	322, 1489,
	323, 1489,
	324, 1489,
	325, 1489,
	326, 1489,
	327, 1489,
	328, 1489,
	329, 1489,
	330, 1489,
	331, 1489,
	332, 1489,
	333, 1489,
	334, 1489,
	335, 1489,
	338, 1489,
	342, 1489,
	343, 1489,
	344, 1489,
	347, 1489,
	348, 1489,
	349, 1489,
	350, 1489,
	351, 1489,
	352, 1489,
	353, 1489,
	354, 1489,
	355, 1489,
	356, 1489,
	357, 1489,
	358, 1489,
	359, 1489,
	360, 1489,
	361, 1489,
	362, 1489,
	363, 1489,
	364, 1489,
	366, 1489,
	367, 1489,
	368, 1489,
	369, 1489,
	370, 1489,
	371, 1489,
	372, 1489,
	373, 1489,
	374, 1489,
	375, 1489,
	376, 1489,
	377, 1489,
	378, 1489,
	379, 1489,
	380, 1489,
	382, 1489,
	383, 1489,
	385, 1489,
	386, 1489,
	387, 1489,
	388, 1489,
	389, 1489,
	390, 1489,
	391, 1489,
	392, 1489,
	393, 1489,
	394, 1489,
	395, 1489,
	396, 1489,
	398, 1489,
	400, 1489,
	401, 1489,
	402, 1489,
	407, 1489,
	409, 1489,
	410, 1489,
	411, 1489,
	412, 1489,
	413, 1489,
	414, 1489,
	415, 1489,
	416, 1489,
	417, 1489,
	419, 1489,
	420, 1489,
	421, 1489,
	422, 1489,
	423, 1489,
	424, 1489,
	425, 1489,
	426, 1489,
	427, 1489,
	428, 1489,
	430, 1489,
	431, 1489,
	432, 1489,
	433, 1489,
	434, 1489,
	435, 1489,
	436, 1489,
	437, 1489,
	438, 1489,
	439, 1489,
	440, 1489,
	442, 1489,
	443, 1489,
	444, 1489,
	445, 1489,
	446, 1489,
	447, 1489,
	448, 1489,
	449, 1489,
	450, 1489,
	451, 1489,
	452, 1489,
	453, 1489,
	454, 1489,
	455, 1489,
	456, 1489,
	457, 1489,
	458, 1489,
	459, 1489,
	460, 1489,
	461, 1489,
	462, 1489,
	464, 1489,
	466, 1489,
	467, 1489,
	468, 1489,
	469, 1489,
	470, 1489,
	471, 1489,
	472, 1489,
	473, 1489,
	474, 1489,
	475, 1489,
	476, 1489,
	477, 1489,
	478, 1489,
	479, 1489,
	480, 1489,
	481, 1489,
	483, 1489,
	484, 1489,
	485, 1489,
	486, 1489,
	487, 1489,
	489, 1489,
	490, 1489,
	491, 1489,
	492, 1489,
	493, 1489,
	494, 1489,
	495, 1489,
	496, 1489,
	497, 1489,
	499, 1489,
	500, 1489,
	501, 1489,
	502, 1489,
	503, 1489,
	505, 1489,
	507, 1489,
	508, 1489,
	509, 1489,
	510, 1489,
	511, 1489,
	512, 1489,
	513, 1489,
	514, 1489,
	515, 1489,
	516, 1489,
	517, 1489,
	519, 1489,
	520, 1489,
	522, 1489,
	523, 1489,
	524, 1489,
	525, 1489,
	526, 1489,
	527, 1489,
	528, 1489,
	529, 1489,
	530, 1489,
	531, 1489,
	534, 1489,
	535, 1489,
	536, 1489,
	537, 1489,
	538, 1489,
	539, 1489,
	541, 1489,
	542, 1489,
	543, 1489,
	544, 1489,
	550, 1489,
	551, 1489,
	552, 1489,
	553, 1489,
	554, 1489,
	555, 1489,
	556, 1489,
	564, 1489,
	571, 1489,
	572, 1489,
	573, 1489,
	580, 1489,
	584, 1489,
	-2, 0,
	-1, 723,
	4, 1238,
	21, 1238,
	22, 1238,
	23, 1238,
	24, 1238,
	25, 1238,
	26, 1238,
	27, 1238,
	29, 1238,
	30, 1238,
	36, 1238,
	41, 1238,
	42, 1238,
	44, 1238,
	45, 1238,
	46, 1238,
	47, 1238,
	48, 1238,
	49, 1238,
	50, 1238,
	51, 1238,
	53, 1238,
	54, 1238,
	55, 1238,
	56, 1238,
	58, 1238,
	59, 1238,
	60, 1238,
	61, 1238,
	62, 1238,
	63, 1238,
	64, 1238,
	68, 1238,
	69, 1238,
	70, 1238,
	71, 1238,
	73, 1238,
	74, 1238,
	75, 1238,
	79, 1238,
	80, 1238,
	81, 1238,
	82, 1238,
	83, 1238,
	84, 1238,
	85, 1238,
	88, 1238,
	89, 1238,
	90, 1238,
	91, 1238,
	92, 1238,
	94, 1238,
	96, 1238,
	97, 1238,
	98, 1238,
	99, 1238,
	100, 1238,
	101, 1238,
	103, 1238,
	104, 1238,
	105, 1238,
	107, 1238,
	108, 1238,
	109, 1238,
	117, 1238,
	118, 1238,
	119, 1238,
	120, 1238,
	121, 1238,
	123, 1238,
	124, 1238,
	125, 1238,
	127, 1238,
	128, 1238,
	129, 1238,
	131, 1238,
	132, 1238,
	133, 1238,
	135, 1238,
	136, 1238,
	137, 1238,
	140, 1238,
	141, 1238,
	142, 1238,
	144, 1238,
	145, 1238,
	147, 1238,
	148, 1238,
	149, 1238,
	151, 1238,
	152, 1238,
	153, 1238,
	154, 1238,
	155, 1238,
	156, 1238,
	157, 1238,
	158, 1238,
	159, 1238,
	160, 1238,
	161, 1238,
	162, 1238,
	163, 1238,
	164, 1238,
	165, 1238,
	166, 1238,
	168, 1238,
	174, 1238,
	175, 1238,
	176, 1238,
	177, 1238,
	181, 1238,
	183, 1238,
	184, 1238,
	188, 1238,
	189, 1238,
	190, 1238,
	191, 1238,
	192, 1238,
	193, 1238,
	194, 1238,
	195, 1238,
	196, 1238,
	197, 1238,
	198, 1238,
	199, 1238,
	200, 1238,
	202, 1238,
	203, 1238,
	205, 1238,
	206, 1238,
	208, 1238,
	209, 1238,
	210, 1238,
	211, 1238,
	212, 1238,
	213, 1238,
	214, 1238,
	215, 1238,
	216, 1238,
	218, 1238,
	219, 1238,
	221, 1238,
	222, 1238,
	223, 1238,
	224, 1238,
	228, 1238,
	229, 1238,
	230, 1238,
	231, 1238,
	232, 1238,
	235, 1238,
	236, 1238,
	237, 1238,
	239, 1238,
	241, 1238,
	242, 1238,
	244, 1238,
	246, 1238,
	247, 1238,
	248, 1238,
	250, 1238,
	254, 1238,
	255, 1238,
	256, 1238,
	257, 1238,
	258, 1238,
	259, 1238,
	261, 1238,
	262, 1238,
	263, 1238,
	265, 1238,
	266, 1238,
	268, 1238,
	269, 1238,
	272, 1238,
	276, 1238,
	277, 1238,
	278, 1238,
	281, 1238,
	282, 1238,
	283, 1238,
	284, 1238,
	286, 1238,
	287, 1238,
	288, 1238,
	289, 1238,
	290, 1238,
	291, 1238,
	292, 1238,
	293, 1238,
	294, 1238,
	295, 1238,
	296, 1238,
	297, 1238,
	298, 1238,
	299, 1238,
	300, 1238,
	301, 1238,
	302, 1238,
	303, 1238,
	304, 1238,
	305, 1238,
	306, 1238,
	307, 1238,
	309, 1238,
	311, 1238,
	312, 1238,
	313, 1238,
	314, 1238,
	315, 1238,
	316, 1238,
	317, 1238,
	318, 1238,
	319, 1238,
	320, 1238,
	321, 1238,
	322, 1238,
	324, 1238,
	326, 1238,
	328, 1238,
	329, 1238,
	331, 1238,
	332, 1238,
	333, 1238,
	334, 1238,
	335, 1238,
	338, 1238,
	342, 1238,
	343, 1238,
	344, 1238,
	347, 1238,
	348, 1238,
	349, 1238,
	351, 1238,
	353, 1238,
	354, 1238,
	355, 1238,
	356, 1238,
	357, 1238,
	358, 1238,
	359, 1238,
	360, 1238,
	361, 1238,
	362, 1238,
	363, 1238,
	364, 1238,
	366, 1238,
	367, 1238,
	368, 1238,
	369, 1238,
	370, 1238,
	371, 1238,
	372, 1238,
	373, 1238,
	374, 1238,
	375, 1238,
	376, 1238,
	377, 1238,
	378, 1238,
	379, 1238,
	380, 1238,
	382, 1238,
	383, 1238,
	385, 1238,
	386, 1238,
	387, 1238,
	388, 1238,
	389, 1238,
	390, 1238,
	391, 1238,
	392, 1238,
	393, 1238,
	394, 1238,
	395, 1238,
	396, 1238,
	398, 1238,
	400, 1238,
	401, 1238,
	402, 1238,
	407, 1238,
	409, 1238,
	410, 1238,
	411, 1238,
	412, 1238,
	413, 1238,
	414, 1238,
	415, 1238,
	416, 1238,
	417, 1238,
	419, 1238,
	420, 1238,
	421, 1238,
	423, 1238,
	424, 1238,
	425, 1238,
	426, 1238,
	427, 1238,
	428, 1238,
	430, 1238,
	431, 1238,
	432, 1238,
	433, 1238,
	434, 1238,
	435, 1238,
	436, 1238,
	437, 1238,
	438, 1238,
	439, 1238,
	440, 1238,
	442, 1238,
	443, 1238,
	444, 1238,
	445, 1238,
	446, 1238,
	447, 1238,
	449, 1238,
	450, 1238,
	451, 1238,
	452, 1238,
	453, 1238,
	454, 1238,
	456, 1238,
	457, 1238,
	458, 1238,
	459, 1238,
	460, 1238,
	461, 1238,
	462, 1238,
	464, 1238,
	466, 1238,
	467, 1238,
	468, 1238,
	469, 1238,
	470, 1238,
	471, 1238,
	472, 1238,
	473, 1238,
	474, 1238,
	475, 1238,
	476, 1238,
	477, 1238,
	478, 1238,
	479, 1238,
	480, 1238,
	481, 1238,
	483, 1238,
	484, 1238,
	486, 1238,
	487, 1238,
	489, 1238,
	490, 1238,
	491, 1238,
	492, 1238,
	493, 1238,
	494, 1238,
	495, 1238,
	496, 1238,
	497, 1238,
	499, 1238,
	500, 1238,
	501, 1238,
	502, 1238,
	503, 1238,
	505, 1238,
	507, 1238,
	508, 1238,
	509, 1238,
	510, 1238,
	511, 1238,
	512, 1238,
	514, 1238,
	515, 1238,
	516, 1238,
	517, 1238,
	519, 1238,
	520, 1238,
	523, 1238,
	524, 1238,
	525, 1238,
	526, 1238,
	527, 1238,
	528, 1238,
	529, 1238,
	531, 1238,
	534, 1238,
	535, 1238,
	536, 1238,
	537, 1238,
	538, 1238,
	539, 1238,
	541, 1238,
	542, 1238,
	543, 1238,
	544, 1238,
	550, 1238,
	551, 1238,
	552, 1238,
	553, 1238,
	554, 1238,
	555, 1238,
	-2, 0,
	-1, 742,
	186, 2246,
	504, 2246,
	563, 2246,
	582, 2246,
	-2, 0,
	-1, 743,
	186, 2351,
	504, 2351,
	563, 2351,
	582, 2351,
	-2, 0,
	-1, 744,
	186, 2233,
	504, 2233,
	563, 2233,
	582, 2233,
	-2, 0,
	-1, 746,
	186, 2481,
	504, 2481,
	563, 2481,
	582, 2481,
	-2, 0,
	-1, 748,
	186, 2521,
	504, 2521,
	563, 2521,
	582, 2521,
	-2, 0,
	-1, 755,
	186, 2378,
	504, 2378,
	563, 2378,
	582, 2378,
	-2, 670,
	-1, 786,
	582, 2182,
	585, 2182,
	-2, 941,
	-1, 787,
	582, 2184,
	585, 2184,
	-2, 942,
	-1, 788,
	582, 2183,
	585, 2183,
	-2, 943,
	-1, 789,
	585, 2109,
	-2, 944,
	-1, 812,
	182, 241,
	-2, 0,
	-1, 836,
	43, 2156,
	-2, 0,
	-1, 837,
	541, 1216,
	-2, 1011,
	-1, 853,
	4, 1618,
	21, 1618,
	22, 1618,
	23, 1618,
	24, 1618,
	25, 1618,
	26, 1618,
	27, 1618,
	29, 1618,
	30, 1618,
	36, 1618,
	41, 1618,
	42, 1618,
	44, 1618,
	45, 1618,
	46, 1618,
	47, 1618,
	48, 1618,
	49, 1618,
	50, 1618,
	51, 1618,
	53, 1618,
	54, 1618,
	55, 1618,
	56, 1618,
	58, 1618,
	59, 1618,
	60, 1618,
	61, 1618,
	62, 1618,
	63, 1618,
	64, 1618,
	68, 1618,
	69, 1618,
	70, 1618,
	71, 1618,
	73, 1618,
	74, 1618,
	75, 1618,
	79, 1618,
	80, 1618,
	81, 1618,
	82, 1618,
	83, 1618,
	84, 1618,
	85, 1618,
	88, 1618,
	89, 1618,
	90, 1618,
	91, 1618,
	92, 1618,
	94, 1618,
	96, 1618,
	97, 1618,
	98, 1618,
	99, 1618,
	100, 1618,
	101, 1618,
	103, 1618,
	104, 1618,
	105, 1618,
	107, 1618,
	108, 1618,
	109, 1618,
	117, 1618,
	118, 1618,
	119, 1618,
	120, 1618,
	121, 1618,
	123, 1618,
	124, 1618,
	125, 1618,
	127, 1618,
	128, 1618,
	129, 1618,
	131, 1618,
	132, 1618,
	133, 1618,
	135, 1618,
	136, 1618,
	137, 1618,
	140, 1618,
	141, 1618,
	142, 1618,
	144, 1618,
	145, 1618,
	147, 1618,
	148, 1618,
	149, 1618,
	151, 1618,
	152, 1618,
	153, 1618,
	154, 1618,
	155, 1618,
	156, 1618,
	157, 1618,
	158, 1618,
	159, 1618,
	160, 1618,
	161, 1618,
	162, 1618,
	163, 1618,
	164, 1618,
	165, 1618,
	166, 1618,
	168, 1618,
	174, 1618,
	175, 1618,
	176, 1618,
	177, 1618,
	181, 1618,
	183, 1618,
	184, 1618,
	188, 1618,
	189, 1618,
	190, 1618,
	191, 1618,
	192, 1618,
	193, 1618,
	194, 1618,
	195, 1618,
	196, 1618,
	197, 1618,
	198, 1618,
	199, 1618,
	200, 1618,
	202, 1618,
	203, 1618,
	205, 1618,
	206, 1618,
	208, 1618,
	209, 1618,
	210, 1618,
	211, 1618,
	212, 1618,
	213, 1618,
	214, 1618,
	215, 1618,
	216, 1618,
	218, 1618,
	219, 1618,
	221, 1618,
	222, 1618,
	223, 1618,
	224, 1618,
	228, 1618,
	229, 1618,
	230, 1618,
	231, 1618,
	232, 1618,
	235, 1618,
	236, 1618,
	237, 1618,
	239, 1618,
	241, 1618,
	242, 1618,
	244, 1618,
	246, 1618,
	247, 1618,
	248, 1618,
	250, 1618,
	254, 1618,
	255, 1618,
	256, 1618,
	257, 1618,
	258, 1618,
	259, 1618,
	261, 1618,
	262, 1618,
	263, 1618,
	265, 1618,
	266, 1618,
	268, 1618,
	269, 1618,
	272, 1618,
	276, 1618,
	277, 1618,
	278, 1618,
	281, 1618,
	282, 1618,
	283, 1618,
	284, 1618,
	286, 1618,
	287, 1618,
	288, 1618,
	289, 1618,
	290, 1618,
	291, 1618,
	292, 1618,
	293, 1618,
	294, 1618,
	295, 1618,
	296, 1618,
	297, 1618,
	298, 1618,
	299, 1618,
	300, 1618,
	301, 1618,
	302, 1618,
	303, 1618,
	304, 1618,
	305, 1618,
	306, 1618,
	307, 1618,
	309, 1618,
	311, 1618,
	312, 1618,
	313, 1618,
	314, 1618,
	315, 1618,
	316, 1618,
	317, 1618,
	318, 1618,
	319, 1618,
	320, 1618,
	321, 1618,
	322, 1618,
	324, 1618,
	326, 1618,
	328, 1618,
	329, 1618,
	331, 1618,
	332, 1618,
	333, 1618,
	334, 1618,
	335, 1618,
	338, 1618,
	342, 1618,
	343, 1618,
	344, 1618,
	347, 1618,
	348, 1618,
	349, 1618,
	351, 1618,
	353, 1618,
	354, 1618,
	355, 1618,
	356, 1618,
	357, 1618,
	358, 1618,
	359, 1618,
	360, 1618,
	361, 1618,
	362, 1618,
	363, 1618,
	364, 1618,
	366, 1618,
	367, 1618,
	368, 1618,
	369, 1618,
	370, 1618,
	371, 1618,
	372, 1618,
	373, 1618,
	374, 1618,
	375, 1618,
	376, 1618,
	377, 1618,
	378, 1618,
	379, 1618,
	380, 1618,
	382, 1618,
	383, 1618,
	385, 1618,
	386, 1618,
	387, 1618,
	388, 1618,
	389, 1618,
	390, 1618,
	391, 1618,
	392, 1618,
	393, 1618,
	394, 1618,
	395, 1618,
	396, 1618,
	398, 1618,
	400, 1618,
	401, 1618,
	402, 1618,
	407, 1618,
	409, 1618,
	410, 1618,
	411, 1618,
	412, 1618,
	413, 1618,
	414, 1618,
	415, 1618,
	416, 1618,
	417, 1618,
	419, 1618,
	420, 1618,
	421, 1618,
	423, 1618,
	424, 1618,
	425, 1618,
	426, 1618,
	427, 1618,
	428, 1618,
	430, 1618,
	431, 1618,
	432, 1618,
	433, 1618,
	434, 1618,
	435, 1618,
	436, 1618,
	437, 1618,
	438, 1618,
	439, 1618,
	440, 1618,
	442, 1618,
	443, 1618,
	444, 1618,
	445, 1618,
	446, 1618,
	447, 1618,
	449, 1618,
	450, 1618,
	451, 1618,
	452, 1618,
	453, 1618,
	454, 1618,
	456, 1618,
	457, 1618,
	458, 1618,
	459, 1618,
	460, 1618,
	461, 1618,
	462, 1618,
	464, 1618,
	466, 1618,
	467, 1618,
	468, 1618,
	469, 1618,
	470, 1618,
	471, 1618,
	472, 1618,
	473, 1618,
	474, 1618,
	475, 1618,
	476, 1618,
	477, 1618,
	478, 1618,
	479, 1618,
	480, 1618,
	481, 1618,
	483, 1618,
	484, 1618,
	486, 1618,
	487, 1618,
	489, 1618,
	490, 1618,
	491, 1618,
	492, 1618,
	493, 1618,
	494, 1618,
	495, 1618,
	496, 1618,
	497, 1618,
	499, 1618,
	500, 1618,
	501, 1618,
	502, 1618,
	503, 1618,
	505, 1618,
	507, 1618,
	508, 1618,
	509, 1618,
	510, 1618,
	511, 1618,
	512, 1618,
	514, 1618,
	515, 1618,
	516, 1618,
	517, 1618,
	519, 1618,
	520, 1618,
	523, 1618,
	524, 1618,
	525, 1618,
	526, 1618,
	527, 1618,
	528, 1618,
	529, 1618,
	531, 1618,
	534, 1618,
	535, 1618,
	536, 1618,
	537, 1618,
	538, 1618,
	539, 1618,
	541, 1618,
	542, 1618,
	543, 1618,
	544, 1618,
	550, 1618,
	551, 1618,
	552, 1618,
	553, 1618,
	554, 1618,
	555, 1618,
	-2, 0,
	-1, 861,
	258, 386,
	-2, 0,
	-1, 932,
	387, 836,
	447, 836,
	487, 836,
	509, 836,
	-2, 0,
	-1, 933,
	387, 835,
	447, 835,
	487, 835,
	509, 835,
	-2, 775,
	-1, 937,
	1, 882,
	579, 882,
	581, 882,
	583, 882,
	-2, 0,
	-1, 938,
	1, 810,
	579, 810,
	581, 810,
	583, 810,
	-2, 0,
	-1, 939,
	1, 814,
	579, 814,
	581, 814,
	583, 814,
	-2, 0,
	-1, 940,
	1, 940,
	182, 940,
	579, 940,
	581, 940,
	583, 940,
	-2, 0,
	-1, 948,
	1, 841,
	579, 841,
	581, 841,
	583, 841,
	-2, 0,
	-1, 954,
	1, 882,
	579, 882,
	581, 882,
	583, 882,
	-2, 0,
	-1, 955,
	1, 884,
	579, 884,
	581, 884,
	583, 884,
	-2, 0,
	-1, 956,
	1, 887,
	579, 887,
	581, 887,
	583, 887,
	-2, 0,
	-1, 962,
	1, 905,
	579, 905,
	581, 905,
	583, 905,
	-2, 0,
	-1, 963,
	1, 907,
	579, 907,
	581, 907,
	583, 907,
	-2, 0,
	-1, 968,
	1, 935,
	579, 935,
	581, 935,
	583, 935,
	-2, 0,
	-1, 1014,
	169, 1493,
	182, 1493,
	271, 1493,
	336, 1493,
	-2, 1429,
	-1, 1029,
	169, 1492,
	182, 1492,
	271, 1492,
	336, 1492,
	-2, 1426,
	-1, 1055,
	582, 2181,
	-2, 678,
	-1, 1083,
	5, 2173,
	580, 2171,
	-2, 2162,
	-1, 1091,
	5, 2194,
	580, 2191,
	-2, 2182,
	-1, 1092,
	5, 2195,
	580, 2192,
	-2, 2183,
	-1, 1100,
	582, 2179,
	-2, 2161,
	-1, 1101,
	580, 2603,
	-2, 2180,
	-1, 1124,
	580, 2602,
	-2, 2196,
	-1, 1125,
	5, 1693,
	-2, 2573,
	-1, 1126,
	5, 1694,
	-2, 2574,
	-1, 1127,
	5, 1695,
	-2, 2588,
	-1, 1128,
	5, 1696,
	-2, 2552,
	-1, 1129,
	5, 1697,
	-2, 2586,
	-1, 1130,
	5, 1705,
	-2, 2565,
	-1, 1131,
	5, 1692,
	-2, 2561,
	-1, 1132,
	5, 1692,
	-2, 2560,
	-1, 1133,
	5, 1692,
	-2, 2579,
	-1, 1134,
	5, 1703,
	-2, 2554,
	-1, 1135,
	5, 1708,
	-2, 2553,
	-1, 1136,
	5, 1710,
	-2, 2598,
	-1, 1139,
	5, 1732,
	-2, 2591,
	-1, 1140,
	5, 1724,
	-2, 2592,
	-1, 1141,
	5, 1732,
	-2, 2593,
	-1, 1142,
	5, 1728,
	-2, 2594,
	-1, 1143,
	5, 1678,
	-2, 2566,
	-1, 1144,
	5, 1679,
	-2, 2567,
	-1, 1145,
	5, 1680,
	-2, 2555,
	-1, 1173,
	5, 1715,
	-2, 2599,
	-1, 1174,
	5, 1716,
	-2, 2589,
	-1, 1175,
	5, 1717,
	542, 1717,
	-2, 2556,
	-1, 1176,
	5, 1718,
	542, 1718,
	-2, 2557,
	-1, 1213,
	580, 2191,
	-2, 2182,
	-1, 1214,
	580, 2192,
	-2, 2183,
	-1, 1314,
	186, 2521,
	504, 2521,
	563, 2521,
	582, 2521,
	-2, 0,
	-1, 1317,
	1, 656,
	583, 656,
	-2, 1345,
	-1, 1445,
	355, 2157,
	409, 2157,
	449, 2157,
	573, 2157,
	-2, 2147,
	-1, 1456,
	584, 2157,
	-2, 2158,
	-1, 1463,
	1, 1213,
	579, 1213,
	581, 1213,
	583, 1213,
	-2, 1478,
	-1, 1511,
	394, 1010,
	541, 1010,
	-2, 381,
	-1, 1528,
	43, 2155,
	-2, 976,
	-1, 1535,
	1, 1213,
	579, 1213,
	581, 1213,
	583, 1213,
	-2, 1478,
	-1, 1543,
	4, 1238,
	21, 1238,
	22, 1238,
	23, 1238,
	24, 1238,
	25, 1238,
	26, 1238,
	27, 1238,
	29, 1238,
	30, 1238,
	36, 1238,
	41, 1238,
	42, 1238,
	44, 1238,
	45, 1238,
	46, 1238,
	47, 1238,
	48, 1238,
	49, 1238,
	50, 1238,
	51, 1238,
	53, 1238,
	54, 1238,
	55, 1238,
	56, 1238,
	58, 1238,
	59, 1238,
	60, 1238,
	61, 1238,
	62, 1238,
	63, 1238,
	64, 1238,
	68, 1238,
	69, 1238,
	70, 1238,
	71, 1238,
	73, 1238,
	74, 1238,
	75, 1238,
	79, 1238,
	80, 1238,
	81, 1238,
	82, 1238,
	83, 1238,
	84, 1238,
	85, 1238,
	88, 1238,
	89, 1238,
	90, 1238,
	91, 1238,
	92, 1238,
	94, 1238,
	96, 1238,
	97, 1238,
	98, 1238,
	99, 1238,
	100, 1238,
	101, 1238,
	103, 1238,
	104, 1238,
	105, 1238,
	107, 1238,
	108, 1238,
	109, 1238,
	117, 1238,
	118, 1238,
	119, 1238,
	120, 1238,
	121, 1238,
	123, 1238,
	124, 1238,
	125, 1238,
	127, 1238,
	128, 1238,
	129, 1238,
	131, 1238,
	132, 1238,
	133, 1238,
	135, 1238,
	136, 1238,
	137, 1238,
	140, 1238,
	141, 1238,
	142, 1238,
	144, 1238,
	145, 1238,
	147, 1238,
	148, 1238,
	149, 1238,
	151, 1238,
	152, 1238,
	153, 1238,
	154, 1238,
	155, 1238,
	156, 1238,
	157, 1238,
	158, 1238,
	159, 1238,
	160, 1238,
	161, 1238,
	162, 1238,
	163, 1238,
	164, 1238,
	165, 1238,
	166, 1238,
	174, 1238,
	175, 1238,
	176, 1238,
	177, 1238,
	181, 1238,
	183, 1238,
	184, 1238,
	188, 1238,
	189, 1238,
	190, 1238,
	191, 1238,
	192, 1238,
	193, 1238,
	194, 1238,
	195, 1238,
	196, 1238,
	197, 1238,
	198, 1238,
	199, 1238,
	200, 1238,
	202, 1238,
	203, 1238,
	205, 1238,
	206, 1238,
	208, 1238,
	209, 1238,
	210, 1238,
	211, 1238,
	212, 1238,
	213, 1238,
	214, 1238,
	215, 1238,
	216, 1238,
	218, 1238,
	219, 1238,
	221, 1238,
	222, 1238,
	223, 1238,
	224, 1238,
	229, 1238,
	230, 1238,
	231, 1238,
	232, 1238,
	235, 1238,
	236, 1238,
	237, 1238,
	239, 1238,
	241, 1238,
	242, 1238,
	244, 1238,
	246, 1238,
	247, 1238,
	248, 1238,
	250, 1238,
	254, 1238,
	255, 1238,
	256, 1238,
	257, 1238,
	258, 1238,
	259, 1238,
	261, 1238,
	262, 1238,
	263, 1238,
	265, 1238,
	266, 1238,
	268, 1238,
	269, 1238,
	272, 1238,
	276, 1238,
	277, 1238,
	278, 1238,
	281, 1238,
	282, 1238,
	283, 1238,
	284, 1238,
	286, 1238,
	287, 1238,
	288, 1238,
	289, 1238,
	290, 1238,
	291, 1238,
	292, 1238,
	293, 1238,
	294, 1238,
	295, 1238,
	296, 1238,
	297, 1238,
	298, 1238,
	299, 1238,
	300, 1238,
	301, 1238,
	302, 1238,
	303, 1238,
	304, 1238,
	305, 1238,
	306, 1238,
	307, 1238,
	309, 1238,
	311, 1238,
	312, 1238,
	313, 1238,
	314, 1238,
	315, 1238,
	316, 1238,
	317, 1238,
	318, 1238,
	319, 1238,
	320, 1238,
	321, 1238,
	322, 1238,
	324, 1238,
	328, 1238,
	329, 1238,
	331, 1238,
	332, 1238,
	333, 1238,
	334, 1238,
	335, 1238,
	338, 1238,
	340, 1238,
	342, 1238,
	343, 1238,
	344, 1238,
	347, 1238,
	348, 1238,
	349, 1238,
	351, 1238,
	353, 1238,
	354, 1238,
	355, 1238,
	356, 1238,
	357, 1238,
	358, 1238,
	359, 1238,
	360, 1238,
	361, 1238,
	362, 1238,
	363, 1238,
	364, 1238,
	366, 1238,
	367, 1238,
	368, 1238,
	369, 1238,
	370, 1238,
	371, 1238,
	372, 1238,
	373, 1238,
	374, 1238,
	375, 1238,
	376, 1238,
	377, 1238,
	378, 1238,
	379, 1238,
	380, 1238,
	382, 1238,
	383, 1238,
	385, 1238,
	386, 1238,
	387, 1238,
	388, 1238,
	389, 1238,
	390, 1238,
	391, 1238,
	392, 1238,
	393, 1238,
	394, 1238,
	395, 1238,
	396, 1238,
	398, 1238,
	400, 1238,
	401, 1238,
	402, 1238,
	407, 1238,
	409, 1238,
	410, 1238,
	411, 1238,
	412, 1238,
	413, 1238,
	414, 1238,
	415, 1238,
	416, 1238,
	417, 1238,
	419, 1238,
	420, 1238,
	421, 1238,
	423, 1238,
	424, 1238,
	425, 1238,
	426, 1238,
	427, 1238,
	428, 1238,
	430, 1238,
	431, 1238,
	432, 1238,
	433, 1238,
	434, 1238,
	435, 1238,
	436, 1238,
	437, 1238,
	438, 1238,
	439, 1238,
	440, 1238,
	442, 1238,
	443, 1238,
	444, 1238,
	445, 1238,
	446, 1238,
	447, 1238,
	449, 1238,
	450, 1238,
	451, 1238,
	452, 1238,
	453, 1238,
	454, 1238,
	456, 1238,
	457, 1238,
	458, 1238,
	459, 1238,
	460, 1238,
	461, 1238,
	462, 1238,
	464, 1238,
	466, 1238,
	467, 1238,
	468, 1238,
	469, 1238,
	470, 1238,
	471, 1238,
	472, 1238,
	473, 1238,
	474, 1238,
	475, 1238,
	476, 1238,
	477, 1238,
	478, 1238,
	479, 1238,
	480, 1238,
	481, 1238,
	483, 1238,
	484, 1238,
	486, 1238,
	487, 1238,
	489, 1238,
	490, 1238,
	491, 1238,
	492, 1238,
	493, 1238,
	494, 1238,
	495, 1238,
	496, 1238,
	497, 1238,
	499, 1238,
	500, 1238,
	501, 1238,
	502, 1238,
	503, 1238,
	505, 1238,
	507, 1238,
	508, 1238,
	509, 1238,
	510, 1238,
	511, 1238,
	512, 1238,
	514, 1238,
	515, 1238,
	516, 1238,
	517, 1238,
	519, 1238,
	520, 1238,
	523, 1238,
	524, 1238,
	525, 1238,
	526, 1238,
	527, 1238,
	528, 1238,
	529, 1238,
	531, 1238,
	534, 1238,
	535, 1238,
	536, 1238,
	537, 1238,
	538, 1238,
	539, 1238,
	541, 1238,
	542, 1238,
	543, 1238,
	544, 1238,
	550, 1238,
	551, 1238,
	552, 1238,
	553, 1238,
	554, 1238,
	555, 1238,
	-2, 0,
	-1, 1566,
	1, 526,
	579, 526,
	581, 526,
	583, 526,
	-2, 1449,
	-1, 1569,
	4, 2597,
	11, 2597,
	12, 2597,
	14, 2597,
	15, 2597,
	16, 2597,
	17, 2597,
	18, 2597,
	19, 2597,
	21, 2597,
	22, 2597,
	23, 2597,
	24, 2597,
	25, 2597,
	26, 2597,
	27, 2597,
	29, 2597,
	30, 2597,
	33, 2597,
	34, 2597,
	36, 2597,
	38, 2597,
	41, 2597,
	42, 2597,
	44, 2597,
	45, 2597,
	46, 2597,
	47, 2597,
	48, 2597,
	49, 2597,
	50, 2597,
	51, 2597,
	53, 2597,
	54, 2597,
	55, 2597,
	56, 2597,
	58, 2597,
	59, 2597,
	60, 2597,
	61, 2597,
	62, 2597,
	63, 2597,
	64, 2597,
	68, 2597,
	69, 2597,
	70, 2597,
	71, 2597,
	73, 2597,
	74, 2597,
	75, 2597,
	76, 2597,
	79, 2597,
	80, 2597,
	81, 2597,
	82, 2597,
	83, 2597,
	84, 2597,
	85, 2597,
	86, 2597,
	88, 2597,
	89, 2597,
	90, 2597,
	91, 2597,
	92, 2597,
	94, 2597,
	95, 2597,
	96, 2597,
	97, 2597,
	98, 2597,
	99, 2597,
	100, 2597,
	101, 2597,
	103, 2597,
	104, 2597,
	105, 2597,
	106, 2597,
	107, 2597,
	108, 2597,
	109, 2597,
	117, 2597,
	118, 2597,
	119, 2597,
	120, 2597,
	121, 2597,
	123, 2597,
	124, 2597,
	125, 2597,
	127, 2597,
	128, 2597,
	129, 2597,
	131, 2597,
	132, 2597,
	133, 2597,
	135, 2597,
	136, 2597,
	137, 2597,
	140, 2597,
	141, 2597,
	142, 2597,
	144, 2597,
	145, 2597,
	147, 2597,
	148, 2597,
	149, 2597,
	151, 2597,
	152, 2597,
	153, 2597,
	154, 2597,
	155, 2597,
	156, 2597,
	157, 2597,
	158, 2597,
	159, 2597,
	160, 2597,
	161, 2597,
	162, 2597,
	163, 2597,
	164, 2597,
	165, 2597,
	166, 2597,
	170, 2597,
	171, 2597,
	172, 2597,
	173, 2597,
	174, 2597,
	175, 2597,
	176, 2597,
	177, 2597,
	180, 2597,
	181, 2597,
	183, 2597,
	184, 2597,
	187, 2597,
	188, 2597,
	189, 2597,
	190, 2597,
	191, 2597,
	192, 2597,
	193, 2597,
	194, 2597,
	195, 2597,
	196, 2597,
	197, 2597,
	198, 2597,
	199, 2597,
	200, 2597,
	202, 2597,
	203, 2597,
	205, 2597,
	206, 2597,
	208, 2597,
	209, 2597,
	210, 2597,
	211, 2597,
	212, 2597,
	213, 2597,
	214, 2597,
	215, 2597,
	216, 2597,
	217, 2597,
	218, 2597,
	219, 2597,
	220, 2597,
	221, 2597,
	222, 2597,
	223, 2597,
	224, 2597,
	226, 2597,
	227, 2597,
	229, 2597,
	230, 2597,
	231, 2597,
	232, 2597,
	234, 2597,
	235, 2597,
	236, 2597,
	237, 2597,
	239, 2597,
	241, 2597,
	242, 2597,
	243, 2597,
	244, 2597,
	245, 2597,
	246, 2597,
	247, 2597,
	248, 2597,
	249, 2597,
	250, 2597,
	252, 2597,
	253, 2597,
	254, 2597,
	255, 2597,
	256, 2597,
	257, 2597,
	258, 2597,
	259, 2597,
	261, 2597,
	262, 2597,
	263, 2597,
	265, 2597,
	266, 2597,
	267, 2597,
	268, 2597,
	269, 2597,
	270, 2597,
	272, 2597,
	276, 2597,
	277, 2597,
	278, 2597,
	281, 2597,
	282, 2597,
	283, 2597,
	284, 2597,
	285, 2597,
	286, 2597,
	287, 2597,
	288, 2597,
	289, 2597,
	290, 2597,
	291, 2597,
	292, 2597,
	293, 2597,
	294, 2597,
	295, 2597,
	296, 2597,
	297, 2597,
	298, 2597,
	299, 2597,
	300, 2597,
	301, 2597,
	302, 2597,
	303, 2597,
	304, 2597,
	305, 2597,
	306, 2597,
	307, 2597,
	309, 2597,
	310, 2597,
	311, 2597,
	312, 2597,
	313, 2597,
	314, 2597,
	315, 2597,
	316, 2597,
	317, 2597,
	318, 2597,
	319, 2597,
	320, 2597,
	321, 2597,
	322, 2597,
	324, 2597,
	327, 2597,
	328, 2597,
	329, 2597,
	331, 2597,
	332, 2597,
	333, 2597,
	334, 2597,
	335, 2597,
	338, 2597,
	342, 2597,
	343, 2597,
	344, 2597,
	345, 2597,
	347, 2597,
	348, 2597,
	349, 2597,
	351, 2597,
	353, 2597,
	354, 2597,
	355, 2597,
	356, 2597,
	357, 2597,
	358, 2597,
	359, 2597,
	360, 2597,
	361, 2597,
	362, 2597,
	363, 2597,
	364, 2597,
	366, 2597,
	367, 2597,
	368, 2597,
	369, 2597,
	370, 2597,
	371, 2597,
	372, 2597,
	373, 2597,
	374, 2597,
	375, 2597,
	376, 2597,
	377, 2597,
	378, 2597,
	379, 2597,
	380, 2597,
	382, 2597,
	383, 2597,
	385, 2597,
	386, 2597,
	387, 2597,
	388, 2597,
	389, 2597,
	390, 2597,
	391, 2597,
	392, 2597,
	393, 2597,
	394, 2597,
	395, 2597,
	396, 2597,
	398, 2597,
	400, 2597,
	401, 2597,
	402, 2597,
	407, 2597,
	408, 2597,
	409, 2597,
	410, 2597,
	411, 2597,
	412, 2597,
	413, 2597,
	414, 2597,
	415, 2597,
	416, 2597,
	417, 2597,
	419, 2597,
	420, 2597,
	421, 2597,
	422, 2597,
	423, 2597,
	424, 2597,
	425, 2597,
	426, 2597,
	427, 2597,
	428, 2597,
	429, 2597,
	430, 2597,
	431, 2597,
	432, 2597,
	433, 2597,
	434, 2597,
	435, 2597,
	436, 2597,
	437, 2597,
	438, 2597,
	439, 2597,
	440, 2597,
	442, 2597,
	443, 2597,
	444, 2597,
	445, 2597,
	446, 2597,
	447, 2597,
	449, 2597,
	450, 2597,
	451, 2597,
	452, 2597,
	453, 2597,
	454, 2597,
	455, 2597,
	456, 2597,
	457, 2597,
	458, 2597,
	459, 2597,
	460, 2597,
	461, 2597,
	462, 2597,
	464, 2597,
	466, 2597,
	467, 2597,
	468, 2597,
	469, 2597,
	470, 2597,
	471, 2597,
	472, 2597,
	473, 2597,
	474, 2597,
	475, 2597,
	476, 2597,
	477, 2597,
	478, 2597,
	479, 2597,
	480, 2597,
	481, 2597,
	483, 2597,
	484, 2597,
	486, 2597,
	487, 2597,
	489, 2597,
	490, 2597,
	491, 2597,
	492, 2597,
	493, 2597,
	494, 2597,
	495, 2597,
	496, 2597,
	497, 2597,
	499, 2597,
	500, 2597,
	501, 2597,
	502, 2597,
	503, 2597,
	505, 2597,
	507, 2597,
	508, 2597,
	509, 2597,
	510, 2597,
	511, 2597,
	512, 2597,
	514, 2597,
	515, 2597,
	516, 2597,
	517, 2597,
	519, 2597,
	520, 2597,
	523, 2597,
	524, 2597,
	525, 2597,
	526, 2597,
	527, 2597,
	528, 2597,
	529, 2597,
	531, 2597,
	534, 2597,
	535, 2597,
	536, 2597,
	537, 2597,
	538, 2597,
	539, 2597,
	541, 2597,
	542, 2597,
	543, 2597,
	544, 2597,
	550, 2597,
	551, 2597,
	552, 2597,
	553, 2597,
	554, 2597,
	555, 2597,
	556, 2597,
	558, 2597,
	561, 2597,
	562, 2597,
	563, 2597,
	564, 2597,
	565, 2597,
	566, 2597,
	568, 2597,
	569, 2597,
	570, 2597,
	571, 2597,
	572, 2597,
	573, 2597,
	574, 2597,
	575, 2597,
	576, 2597,
	578, 2597,
	581, 2597,
	582, 2597,
	584, 2597,
	585, 2597,
	-2, 0,
	-1, 1574,
	186, 2481,
	504, 2481,
	563, 2481,
	582, 2481,
	-2, 0,
	-1, 1623,
	387, 836,
	447, 836,
	487, 836,
	509, 836,
	-2, 0,
	-1, 1650,
	1, 831,
	579, 831,
	581, 831,
	583, 831,
	-2, 0,
	-1, 1651,
	1, 869,
	579, 869,
	581, 869,
	583, 869,
	-2, 0,
	-1, 1652,
	1, 877,
	579, 877,
	581, 877,
	583, 877,
	-2, 0,
	-1, 1655,
	1, 840,
	579, 840,
	581, 840,
	583, 840,
	-2, 0,
	-1, 1657,
	1, 844,
	579, 844,
	581, 844,
	583, 844,
	-2, 0,
	-1, 1663,
	1, 851,
	579, 851,
	581, 851,
	583, 851,
	-2, 0,
	-1, 1692,
	1, 2543,
	579, 2543,
	581, 2543,
	582, 2543,
	583, 2543,
	-2, 903,
	-1, 1693,
	1, 2478,
	579, 2478,
	581, 2478,
	582, 2478,
	583, 2478,
	-2, 904,
	-1, 1697,
	1, 916,
	579, 916,
	581, 916,
	583, 916,
	-2, 0,
	-1, 1711,
	1, 1340,
	583, 1340,
	-2, 1345,
	-1, 1714,
	169, 1492,
	182, 1492,
	271, 1492,
	336, 1492,
	-2, 1430,
	-1, 1808,
	150, 1451,
	169, 1451,
	182, 1451,
	238, 1451,
	271, 1451,
	336, 1451,
	346, 1451,
	521, 1451,
	-2, 1893,
	-1, 1868,
	581, 2043,
	-2, 0,
	-1, 1903,
	150, 1451,
	169, 1451,
	182, 1451,
	238, 1451,
	271, 1451,
	336, 1451,
	346, 1451,
	521, 1451,
	-2, 1579,
	-1, 1937,
	504, 2478,
	582, 2478,
	585, 2478,
	-2, 0,
	-1, 1954,
	580, 1720,
	-2, 1708,
	-1, 1985,
	186, 2478,
	582, 2478,
	585, 2478,
	-2, 0,
	-1, 2033,
	1, 658,
	583, 658,
	-2, 1345,
	-1, 2159,
	220, 242,
	-2, 2190,
	-1, 2160,
	220, 243,
	-2, 289,
	-1, 2264,
	1, 833,
	579, 833,
	581, 833,
	583, 833,
	-2, 0,
	-1, 2265,
	1, 871,
	579, 871,
	581, 871,
	583, 871,
	-2, 0,
	-1, 2266,
	1, 879,
	579, 879,
	581, 879,
	583, 879,
	-2, 0,
	-1, 2267,
	1, 918,
	579, 918,
	581, 918,
	583, 918,
	-2, 0,
	-1, 2300,
	1, 853,
	579, 853,
	581, 853,
	583, 853,
	-2, 0,
	-1, 2355,
	427, 1519,
	428, 1519,
	-2, 1753,
	-1, 2386,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1773,
	-1, 2387,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1774,
	-1, 2388,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1775,
	-1, 2389,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1776,
	-1, 2390,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1777,
	-1, 2391,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1778,
	-1, 2392,
	95, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1779,
	-1, 2393,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1780,
	-1, 2405,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1792,
	-1, 2406,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1793,
	-1, 2407,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1794,
	-1, 2410,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1799,
	-1, 2416,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1803,
	-1, 2418,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1811,
	-1, 2419,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1812,
	-1, 2420,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1813,
	-1, 2421,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1814,
	-1, 2557,
	5, 2194,
	186, 2054,
	580, 2191,
	-2, 2182,
	-1, 2558,
	186, 2055,
	-2, 2548,
	-1, 2559,
	186, 2056,
	-2, 2377,
	-1, 2560,
	186, 2057,
	-2, 2264,
	-1, 2561,
	186, 2058,
	-2, 2318,
	-1, 2562,
	186, 2059,
	-2, 2362,
	-1, 2563,
	186, 2060,
	-2, 2476,
	-1, 2564,
	186, 2061,
	-2, 1876,
	-1, 2634,
	1, 1580,
	2, 1580,
	106, 1580,
	150, 1580,
	169, 1580,
	182, 1580,
	187, 1580,
	204, 1580,
	207, 1580,
	234, 1580,
	238, 1580,
	249, 1580,
	267, 1580,
	271, 1580,
	310, 1580,
	336, 1580,
	340, 1580,
	346, 1580,
	418, 1580,
	422, 1580,
	521, 1580,
	532, 1580,
	547, 1580,
	548, 1580,
	549, 1580,
	559, 1580,
	579, 1580,
	581, 1580,
	583, 1580,
	585, 1580,
	-2, 1579,
	-1, 2647,
	580, 2163,
	-2, 2177,
	-1, 2649,
	1, 306,
	547, 306,
	-2, 1478,
	-1, 2676,
	580, 1719,
	-2, 1709,
	-1, 2850,
	1, 1213,
	579, 1213,
	581, 1213,
	583, 1213,
	-2, 1478,
	-1, 3019,
	341, 1522,
	-2, 2587,
	-1, 3020,
	341, 1523,
	-2, 2462,
	-1, 3024,
	427, 2120,
	428, 2120,
	-2, 1874,
	-1, 3025,
	427, 2124,
	428, 2124,
	-2, 1875,
	-1, 3026,
	427, 2121,
	428, 2121,
	-2, 1874,
	-1, 3027,
	427, 2125,
	428, 2125,
	-2, 1875,
	-1, 3040,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1801,
	-1, 3041,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1805,
	-1, 3047,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1807,
	-1, 3263,
	1, 655,
	579, 655,
	581, 655,
	583, 655,
	-2, 1345,
	-1, 3413,
	43, 2155,
	-2, 977,
	-1, 3418,
	1, 1213,
	579, 1213,
	581, 1213,
	583, 1213,
	-2, 1478,
	-1, 3523,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1809,
	-1, 3530,
	243, 0,
	245, 0,
	327, 0,
	-2, 1828,
	-1, 3597,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1857,
	-1, 3598,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1858,
	-1, 3599,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1859,
	-1, 3603,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1863,
	-1, 3604,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1864,
	-1, 3605,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1865,
	-1, 3651,
	580, 2164,
	-2, 2178,
	-1, 3811,
	582, 2705,
	-2, 1404,
	-1, 3869,
	243, 0,
	245, 0,
	327, 0,
	-2, 1829,
	-1, 3872,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1832,
	-1, 3873,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1834,
	-1, 3965,
	582, 2179,
	-2, 1248,
	-1, 4108,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1833,
	-1, 4109,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1835,
	-1, 4120,
	243, 0,
	-2, 1866,
	-1, 4288,
	243, 0,
	-2, 1867,
	-1, 4470,
	50, 0,
	217, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 2551,
}

const sqlPrivate = 57344

const sqlLast = 121830

var sqlAct = [...]int{
	265, 4323, 3402, 2915, 4652, 3174, 4566, 2928, 4522, 4480,
	3401, 4593, 4163, 4469, 4210, 4345, 4462, 4451, 4366, 4463,
	4315, 4438, 3961, 2156, 2081, 4419, 4341, 2738, 4422, 4481,
	4402, 4482, 1206, 4535, 4241, 3562, 4149, 2231, 4468, 4217,
	1217, 4292, 4064, 2780, 4059, 2800, 4168, 4025, 4005, 4097,
	4129, 3515, 3852, 2365, 3435, 3803, 3795, 3285, 1039, 4046,
	1279, 4048, 4226, 1090, 1941, 1286, 1475, 3946, 2589, 3739,
	1290, 3033, 4039, 4255, 3962, 788, 2433, 3429, 4069, 3759,
	2240, 3343, 3776, 3761, 1030, 3397, 2373, 1723, 2015, 3387,
	3288, 3474, 4125, 2089, 2366, 1350, 1909, 2885, 3476, 2950,
	2874, 788, 3654, 2937, 2904, 3217, 3180, 2812, 3197, 753,
	2939, 3189, 3851, 2930, 2901, 863, 1094, 3157, 2947, 3178,
	3908, 1442, 2151, 4, 2238, 2936, 1038, 174, 2150, 2100,
	2899, 1878, 3307, 2916, 2740, 2627, 2204, 2626, 4567, 3622,
	4293, 1854, 2446, 1816, 3282, 3017, 3156, 2629, 2370, 2477,
	2946, 1530, 3274, 1284, 1449, 2878, 2475, 783, 2827, 2134,
	2146, 1087, 1590, 2127, 2779, 2886, 2069, 1083, 2430, 1333,
	2073, 1711, 2013, 1898, 1272, 1879, 2586, 2466, 2354, 3224,
	2059, 1197, 259, 2607, 2337, 3399, 1567, 1092, 2191, 1990,
	2335, 1089, 1258, 2660, 2909, 1281, 1533, 670, 2002, 1942,
	1588, 692, 789, 4367, 790, 1319, 2940, 2659, 785, 2469,
	684, 1631, 2726, 258, 108, 1200, 1849, 856, 2616, 1888,
	174, 2597, 2447, 1895, 1179, 2519, 1724, 2553, 1801, 1725,
	183, 2336, 1214, 2338, 735, 1663, 184, 1292, 1650, 1196,
	2217, 747, 1558, 1269, 1470, 2190, 2088, 4523, 2359, 1068,
	1991, 1565, 1137, 1988, 687, 44, 43, 794, 1202, 41,
	32, 1177, 30, 28, 1730, 695, 837, 926, 1710, 3068,
	1481, 946, 3636, 3064, 3637, 4665, 710, 4655, 3176, 2606,
	4640, 3454, 4639, 794, 2606, 4629, 2606, 1034, 797, 2165,
	2004, 2004, 1034, 3129, 3130, 1209, 3147, 3148, 3149, 2004,
	2004, 2004, 4611, 4609, 2004, 3454, 4167, 4167, 4554, 878,
	3445, 3247, 2165, 4511, 797, 3867, 3444, 4512, 4504, 4502,
	4499, 4496, 2606, 2606, 4500, 4497, 4466, 4465, 4464, 4459,
	2165, 2165, 2025, 2025, 3246, 4458, 4449, 4447, 1194, 2025,
	4167, 4167, 2599, 2808, 4444, 2764, 3129, 3130, 4229, 3147,
	3148, 3149, 4417, 4391, 4384, 4383, 4167, 2667, 2606, 2606,
	4378, 1236, 2165, 4377, 4167, 3129, 3130, 4167, 3144, 4371,
	4337, 1180, 1180, 2165, 4016, 4290, 3032, 3232, 4272, 2667,
	1738, 1739, 3838, 4269, 4266, 4219, 4183, 2165, 4167, 4220,
	2165, 4182, 4174, 4173, 4166, 2165, 2165, 4167, 4167, 1212,
	1035, 3929, 4136, 1769, 4110, 1015, 2165, 1328, 2667, 4088,
	1741, 1014, 4077, 2025, 2606, 4000, 3454, 3129, 3130, 2606,
	3985, 3144, 3871, 1208, 2606, 3819, 2667, 3813, 3774, 3471,
	3646, 3471, 3775, 2239, 3647, 3644, 2687, 2165, 1328, 3645,
	3144, 4392, 1066, 3629, 1085, 1740, 2663, 2606, 3546, 3542,
	1024, 1229, 2165, 2606, 1029, 1760, 3470, 3461, 2022, 3173,
	3471, 3462, 3135, 2606, 3626, 3168, 1474, 3167, 4294, 2606,
	3120, 2606, 1738, 1739, 3121, 1771, 1772, 1773, 1781, 1782,
	1783, 3118, 2165, 3110, 3108, 3119, 1181, 3111, 2606, 3079,
	3077, 4285, 4273, 2606, 1774, 1769, 3078, 2954, 4229, 2926,
	2925, 2025, 1741, 2227, 2227, 2710, 2666, 2025, 2657, 2606,
	2667, 1787, 2606, 3626, 2651, 3135, 2605, 2686, 2165, 229,
	2606, 229, 1656, 2598, 4057, 3150, 2606, 1597, 1583, 2226,
	4016, 3067, 1230, 2227, 3135, 3986, 1183, 1740, 1184, 1763,
	1764, 1765, 1766, 3838, 3462, 2803, 2093, 1760, 2725, 1746,
	3129, 3130, 2038, 2003, 2019, 2022, 1757, 2880, 2164, 229,
	2822, 2723, 1874, 1469, 3724, 3518, 231, 3145, 231, 3494,
	1896, 2139, 3446, 2643, 1633, 1738, 1739, 2642, 1771, 1772,
	1773, 1781, 1782, 1783, 2641, 2640, 3135, 2639, 3129, 3130,
	1185, 3447, 1474, 1182, 1023, 1768, 1770, 1022, 1769, 229,
	1021, 1020, 1019, 1018, 1017, 1741, 231, 2994, 4161, 1013,
	1012, 3129, 3130, 1011, 1787, 230, 1010, 230, 1009, 93,
	3145, 1008, 1007, 1006, 1005, 1004, 1003, 223, 1002, 223,
	1001, 1763, 1764, 1765, 1766, 1000, 224, 999, 224, 3145,
	1740, 1746, 2005, 2005, 998, 997, 231, 924, 923, 2912,
	1760, 2005, 2005, 2005, 1761, 230, 2005, 922, 185, 1757,
	185, 2502, 921, 2488, 920, 919, 918, 223, 917, 916,
	915, 914, 913, 912, 1210, 911, 224, 910, 1778, 909,
	908, 1788, 907, 906, 905, 904, 903, 1768, 1770, 902,
	901, 3145, 900, 899, 898, 230, 897, 896, 185, 895,
	894, 3924, 1483, 893, 1784, 892, 1785, 1483, 1483, 3444,
	1230, 3146, 891, 1755, 1756, 881, 880, 876, 875, 3135,
	869, 1601, 868, 855, 1495, 854, 811, 810, 1295, 1092,
	809, 1776, 808, 2022, 1763, 1764, 1765, 1766, 185, 4276,
	800, 2598, 799, 798, 1746, 768, 1761, 759, 758, 757,
	741, 253, 1092, 252, 251, 250, 1092, 3135, 4071, 249,
	1230, 248, 247, 246, 3146, 245, 244, 243, 242, 241,
	240, 239, 1353, 238, 237, 236, 1353, 1767, 235, 234,
	3135, 1778, 1295, 3146, 1788, 233, 1489, 2472, 1786, 232,
	1768, 1770, 3883, 3667, 3640, 3472, 3129, 3130, 1762, 3147,
	3148, 3149, 3220, 1092, 3171, 1092, 1775, 1092, 1899, 2486,
	1332, 2697, 2003, 1295, 1337, 3090, 1755, 1756, 3866, 2894,
	2022, 2019, 2686, 3073, 3145, 2330, 2977, 2861, 2671, 1323,
	2648, 1737, 4274, 2633, 1776, 3146, 2067, 2234, 1457, 1295,
	3129, 3130, 3172, 3141, 3142, 3143, 2024, 1922, 1827, 1761,
	3140, 3138, 3139, 3131, 3132, 3133, 3134, 3136, 3137, 1295,
	1477, 1339, 3145, 1216, 1295, 1452, 1857, 4487, 4467, 1767,
	4446, 3144, 1092, 1856, 1092, 2473, 4352, 4282, 1295, 1482,
	4297, 4124, 4078, 4056, 1092, 3934, 1092, 3906, 3905, 1473,
	1762, 3899, 1587, 3898, 3897, 1860, 3141, 3142, 3143, 229,
	3890, 1539, 1542, 3140, 3138, 3139, 3131, 3132, 3133, 3134,
	3136, 3137, 148, 3889, 1263, 1266, 1779, 3887, 3882, 1276,
	1317, 2233, 3140, 3138, 3139, 3131, 3132, 3133, 3134, 3136,
	3137, 3879, 1295, 3878, 1461, 1494, 1818, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 231, 1303, 3779, 1447,
	1092, 3773, 1346, 1092, 1439, 1444, 2474, 1037, 2471, 4073,
	3671, 229, 1857, 3670, 229, 3135, 229, 229, 3146, 1856,
	3669, 3650, 1767, 3617, 794, 3138, 3139, 3131, 3132, 3133,
	3134, 3136, 3137, 1570, 1572, 3616, 174, 174, 1312, 3615,
	1528, 1855, 1825, 1762, 1472, 230, 1471, 1488, 3538, 3534,
	3215, 3164, 3155, 1602, 3128, 797, 3146, 223, 231, 3135,
	1820, 231, 3125, 231, 231, 3124, 224, 1777, 1545, 1779,
	3122, 3117, 1752, 1753, 1759, 1780, 1758, 1754, 3150, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 185, 1818,
	3722, 3116, 4405, 3115, 3112, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 3109, 3089, 3072, 3065, 2927, 230, 2634, 1483,
	230, 2896, 230, 230, 1323, 2459, 1658, 1323, 1737, 223,
	3145, 1193, 223, 1035, 223, 223, 1092, 1736, 224, 2207,
	2172, 224, 1092, 224, 224, 2170, 4659, 1819, 4603, 1817,
	4602, 3780, 4568, 1561, 4521, 4519, 1568, 3169, 1218, 1715,
	185, 3564, 4409, 2911, 2476, 185, 185, 3140, 3138, 3139,
	3131, 3132, 3133, 3134, 3136, 3137, 4344, 4333, 4330, 3238,
	1777, 4329, 4328, 4309, 4296, 1752, 1753, 1759, 1780, 1758,
	1754, 4295, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 3129, 3130, 1582, 1559, 4270, 4254, 3139, 3131, 3132,
	3133, 3134, 3136, 3137, 4253, 1596, 2436, 2669, 4239, 4236,
	229, 4235, 1709, 229, 4298, 3212, 1672, 4230, 4179, 4157,
	1807, 3131, 3132, 3133, 3134, 3136, 3137, 4122, 4105, 4104,
	3450, 4085, 4084, 4042, 4017, 3923, 4160, 1092, 1092, 1092,
	3780, 3904, 2442, 1092, 3839, 1607, 3833, 3830, 3710, 4072,
	1214, 3709, 1214, 3694, 3693, 1624, 3691, 231, 3632, 3620,
	231, 3529, 1805, 3473, 3146, 3455, 3421, 1353, 2470, 1659,
	3356, 1876, 3318, 3287, 3240, 229, 1092, 3094, 3093, 788,
	3088, 3056, 2873, 1863, 1862, 1959, 788, 1861, 1858, 1295,
	2501, 4045, 2487, 1850, 2680, 1848, 2678, 2677, 1738, 1739,
	2645, 2638, 2895, 2604, 2484, 1712, 230, 1921, 1877, 230,
	1872, 1885, 1720, 1209, 1719, 1209, 1871, 1870, 223, 1015,
	1869, 223, 231, 1868, 1867, 1014, 1866, 224, 1741, 1865,
	224, 1864, 1845, 1859, 1714, 1925, 1844, 1843, 1842, 1841,
	1035, 4277, 1840, 1716, 1933, 1839, 1938, 1733, 1734, 185,
	1838, 1837, 185, 1986, 1836, 1295, 1835, 1834, 1906, 1833,
	3135, 1930, 1092, 1740, 1832, 2235, 1295, 1831, 229, 1882,
	1883, 230, 1738, 1739, 1820, 1806, 1180, 1804, 1799, 1311,
	174, 229, 1234, 223, 1092, 1225, 3930, 3875, 3666, 3643,
	1353, 3635, 224, 3076, 2636, 1564, 3141, 3142, 3143, 1851,
	1852, 1953, 1741, 3140, 3138, 3139, 3131, 3132, 3133, 3134,
	3136, 3137, 3129, 3130, 185, 231, 2083, 1212, 4141, 1212,
	3932, 3665, 1819, 3236, 1802, 2056, 1907, 1336, 231, 2058,
	2031, 2058, 1917, 1928, 4275, 3988, 229, 1740, 2485, 1929,
	4600, 1208, 2065, 1208, 1926, 1323, 229, 4592, 2801, 4331,
	4231, 4222, 3133, 3134, 3136, 3137, 4221, 4076, 2050, 2049,
	4019, 794, 2058, 2060, 230, 3145, 1035, 1904, 794, 2030,
	4018, 1897, 2058, 3987, 3321, 3926, 223, 230, 3842, 3841,
	3840, 3638, 3457, 231, 3456, 224, 1335, 1934, 1328, 223,
	1875, 4227, 797, 231, 1982, 1899, 3783, 1857, 224, 797,
	3516, 1738, 1739, 3734, 1856, 2007, 1328, 185, 1901, 1916,
	1915, 3114, 2009, 1914, 1912, 2011, 1911, 1910, 1295, 1295,
	185, 2016, 2136, 3113, 2784, 2018, 1994, 1623, 1353, 3038,
	2021, 1741, 230, 1564, 1334, 1939, 2033, 1956, 1707, 2766,
	1331, 1746, 230, 3707, 223, 1328, 3350, 2044, 3289, 3404,
	995, 3403, 1673, 224, 223, 1632, 3466, 1840, 1829, 2256,
	4533, 2232, 1840, 224, 4218, 4507, 1740, 4492, 4479, 2093,
	3388, 2951, 1633, 2152, 3787, 185, 3770, 3736, 3731, 3715,
	2053, 3491, 3261, 4126, 2467, 185, 3176, 3566, 4488, 2676,
	1873, 2121, 1994, 2126, 996, 1853, 2131, 3395, 2201, 3082,
	2029, 1538, 1466, 1994, 1306, 1262, 2819, 4501, 2027, 3146,
	4498, 3440, 2472, 3686, 2816, 4324, 2036, 1826, 2814, 4060,
	4416, 4306, 1295, 1513, 1295, 4153, 1295, 3292, 3702, 2934,
	2061, 2051, 1563, 2908, 850, 3380, 4551, 4552, 2034, 3510,
	4200, 3975, 1295, 1295, 3749, 1505, 3265, 2711, 4582, 2729,
	1654, 2306, 993, 1295, 4654, 4489, 4193, 991, 2099, 4185,
	2742, 1670, 2729, 1654, 2727, 1295, 989, 1295, 1295, 1295,
	1746, 2208, 987, 4014, 984, 4013, 2304, 2727, 1611, 1467,
	2157, 2162, 3747, 3746, 3267, 3738, 3730, 3729, 2161, 3727,
	788, 3726, 1210, 2055, 1210, 3714, 2515, 2514, 2154, 1192,
	2473, 2119, 794, 2255, 2197, 3681, 3680, 2242, 1514, 3384,
	2265, 3748, 3053, 3383, 2202, 3231, 3087, 3086, 2214, 3085,
	3084, 3042, 1472, 1651, 1471, 2825, 2824, 2821, 2810, 1947,
	976, 2054, 2799, 797, 2798, 2794, 1671, 851, 2793, 3689,
	3237, 3051, 2792, 2771, 2237, 2118, 2770, 2733, 2670, 2130,
	1653, 3131, 3132, 3133, 3134, 3136, 3137, 2658, 2222, 2045,
	1669, 2093, 1033, 1653, 2163, 2417, 1329, 2375, 1713, 1551,
	1563, 1550, 2266, 2745, 1549, 1509, 1548, 1092, 2905, 1092,
	2260, 2474, 2313, 2471, 1604, 1652, 1092, 4103, 981, 1959,
	1959, 1353, 3492, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 2182, 1092,
	2248, 1092, 1092, 1092, 1092, 2224, 1035, 2211, 1035, 2183,
	4154, 1336, 1561, 2243, 2219, 2216, 2219, 2220, 4583, 4587,
	1032, 2768, 1336, 1092, 2323, 1248, 1092, 1092, 1609, 1568,
	2328, 1568, 2347, 1748, 1092, 3939, 1312, 2320, 1092, 3320,
	1092, 1092, 794, 2228, 2252, 2229, 1522, 2334, 1353, 3289,
	2718, 3048, 1325, 2432, 1092, 1092, 1092, 1092, 2232, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 2272, 2282, 2247,
	1335, 3348, 1605, 797, 3049, 1953, 1953, 2345, 3054, 1318,
	2181, 1335, 2090, 2264, 2432, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 2448, 2449, 3938, 2124, 1092, 2476,
	2957, 4317, 1742, 1743, 1744, 1745, 1747, 1748, 2448, 2464,
	1214, 1329, 2650, 1468, 4588, 2086, 1527, 1353, 3015, 2756,
	682, 2300, 1682, 2310, 3500, 2269, 1214, 2329, 1034, 2358,
	2263, 1330, 2322, 4613, 2510, 2345, 2343, 2755, 2221, 2744,
	2788, 3499, 1092, 1353, 2091, 2092, 677, 3137, 3970, 2572,
	2991, 2476, 4012, 2556, 2556, 2570, 1718, 2448, 2371, 2372,
	2590, 2592, 2781, 2782, 2781, 2782, 2596, 2333, 2331, 2332,
	2346, 2339, 2467, 1209, 2087, 2273, 3989, 889, 1625, 2440,
	1668, 1015, 2997, 2463, 1015, 1015, 2438, 2362, 1326, 1209,
	2363, 2364, 1534, 3728, 2343, 2062, 2063, 1327, 853, 852,
	2137, 4551, 4485, 3725, 1310, 2781, 2782, 1329, 3382, 3346,
	2646, 1956, 1956, 2470, 2341, 3030, 2613, 4102, 1887, 2820,
	2512, 4319, 1917, 4590, 2621, 2513, 3349, 1325, 2516, 3555,
	2517, 2518, 1906, 1744, 1745, 1747, 1748, 1621, 2818, 1035,
	1532, 3958, 1180, 2791, 2769, 3711, 1295, 1295, 1035, 2444,
	2133, 3958, 1035, 3264, 4616, 2732, 2732, 3050, 2728, 1665,
	4540, 1706, 2461, 2169, 2168, 2635, 4563, 3052, 3437, 1633,
	2817, 4571, 1633, 4570, 2132, 3954, 2344, 1212, 2815, 3947,
	2743, 2767, 2813, 3699, 2664, 3954, 2656, 174, 1353, 2620,
	3000, 2625, 2612, 1212, 2631, 2632, 3945, 2319, 3857, 1891,
	2700, 1208, 766, 1031, 2101, 3949, 1330, 2128, 1511, 2552,
	1686, 2581, 2706, 2565, 1508, 2672, 3856, 1208, 1608, 2594,
	971, 971, 1959, 1325, 2602, 2603, 2305, 2105, 985, 3955,
	2614, 2618, 2619, 985, 2344, 1859, 2091, 2092, 1323, 3955,
	1035, 1904, 985, 3029, 1028, 1028, 1894, 3968, 986, 2342,
	985, 2303, 2661, 3129, 3130, 3276, 3147, 3148, 3149, 4596,
	1353, 1889, 2140, 1326, 4643, 1328, 2129, 2147, 3022, 3023,
	4398, 3948, 1327, 4486, 1295, 3533, 2004, 2476, 1610, 1892,
	3438, 4325, 1221, 848, 2102, 847, 2708, 2679, 3756, 3337,
	1092, 1092, 2321, 1092, 1247, 2414, 2702, 2714, 2734, 4145,
	2683, 3697, 1330, 1947, 1947, 1851, 1852, 2342, 2802, 4589,
	764, 2682, 2699, 3712, 2730, 788, 2716, 1295, 2685, 2691,
	2709, 2999, 1890, 2694, 1219, 2695, 2692, 2796, 3144, 2137,
	2731, 3552, 2696, 4339, 2701, 2271, 972, 972, 1953, 2703,
	1606, 2795, 3757, 3338, 982, 2116, 2707, 2811, 1295, 2773,
	2717, 2996, 3191, 2789, 4388, 4453, 2149, 4454, 3437, 1326,
	1295, 1534, 1295, 2712, 882, 2892, 3266, 1223, 1327, 2919,
	2715, 4484, 3764, 1680, 3304, 731, 2877, 1295, 4318, 3359,
	2141, 3762, 3755, 3336, 2948, 678, 1232, 2759, 2729, 2106,
	4034, 2783, 2785, 2786, 2787, 3044, 2125, 3764, 3234, 3969,
	2772, 2737, 2856, 2748, 2958, 2959, 3762, 2858, 2747, 2750,
	2148, 2093, 3553, 2790, 1846, 2965, 2966, 2967, 1092, 2137,
	2122, 2774, 3135, 2084, 2074, 3853, 2431, 4514, 3950, 2075,
	3303, 4115, 1222, 3951, 1893, 4562, 4436, 4515, 3950, 1798,
	1328, 4427, 3997, 3951, 2797, 700, 2458, 890, 3092, 3329,
	2998, 2617, 1210, 870, 1683, 2107, 2108, 3277, 2888, 4539,
	4617, 679, 2412, 2117, 2978, 2415, 2979, 794, 1210, 2933,
	2923, 1092, 2630, 174, 1956, 2268, 1034, 1092, 1092, 2103,
	2262, 2649, 2975, 3568, 3953, 3150, 1289, 1472, 2955, 2859,
	1681, 2921, 3765, 2960, 3953, 2961, 4604, 794, 797, 2871,
	3956, 2881, 4044, 3330, 3847, 1717, 2884, 3662, 4594, 680,
	3956, 681, 1237, 3858, 3512, 2411, 2439, 3765, 765, 1026,
	2104, 971, 2952, 2882, 4099, 973, 973, 3145, 797, 3002,
	2852, 3004, 1092, 1092, 2924, 2914, 1328, 4386, 1092, 2428,
	1463, 2935, 2076, 3328, 3190, 1028, 4049, 3484, 3308, 3778,
	3013, 1092, 1092, 1309, 1994, 4346, 3477, 1092, 1092, 2080,
	2476, 4264, 2953, 1092, 4483, 4050, 767, 2974, 2426, 2922,
	763, 1498, 1092, 1092, 1092, 2113, 4387, 2903, 1092, 2983,
	3760, 2985, 1638, 2987, 2853, 1568, 1620, 1622, 1092, 4550,
	1684, 1027, 4548, 2144, 2096, 2981, 2980, 1535, 3310, 4365,
	1051, 1728, 2972, 4035, 4238, 1092, 1891, 801, 3698, 883,
	884, 4595, 3045, 3801, 4256, 2982, 4644, 2984, 3005, 2986,
	3021, 3007, 1576, 3425, 2851, 3952, 2189, 4257, 2005, 2114,
	2077, 2082, 3010, 1887, 2109, 3952, 1589, 972, 3012, 2995,
	1884, 3070, 3071, 3011, 4597, 3075, 3074, 2142, 2097, 3016,
	3854, 2358, 3479, 1894, 3066, 4538, 3763, 1235, 1228, 4098,
	4258, 3309, 669, 3959, 974, 974, 1947, 3478, 2615, 2112,
	3606, 3146, 2361, 3959, 3031, 4513, 2115, 3902, 1685, 1727,
	1727, 3763, 2094, 2046, 3225, 4176, 1892, 2143, 2095, 4175,
	1615, 2749, 1220, 1722, 4247, 1092, 1092, 1092, 871, 872,
	2413, 4622, 2125, 3043, 1092, 1092, 1092, 4305, 2422, 1092,
	2110, 3973, 2043, 2078, 1891, 3802, 975, 975, 3972, 1092,
	1214, 1353, 4260, 3742, 3685, 1092, 2423, 1092, 3183, 3184,
	2123, 2424, 3283, 3551, 3426, 2429, 1214, 1043, 3417, 3279,
	2893, 2887, 2875, 2215, 4347, 4259, 2209, 2203, 2195, 2175,
	3677, 2775, 1502, 1239, 1353, 3314, 740, 3621, 4403, 2084,
	1798, 1894, 4261, 3081, 2351, 3513, 1214, 2732, 2608, 1353,
	2120, 1035, 263, 4047, 2311, 4368, 1889, 3166, 2039, 3804,
	3656, 1726, 1726, 1209, 4065, 4216, 2872, 2041, 1959, 3199,
	3205, 4214, 1353, 3185, 1892, 4100, 885, 886, 3218, 1209,
	1250, 2124, 2611, 3141, 3142, 3143, 1727, 1295, 1295, 3312,
	3140, 3138, 3139, 3131, 3132, 3133, 3134, 3136, 3137, 4156,
	3295, 3291, 3290, 3036, 3859, 3014, 973, 2042, 2253, 1209,
	1092, 3634, 3188, 3187, 3657, 1655, 2655, 1890, 2654, 3195,
	2653, 1893, 3193, 2610, 1092, 3230, 1728, 1728, 2609, 3313,
	2652, 3219, 802, 803, 1295, 3214, 3769, 3607, 1557, 1959,
	3658, 2879, 3655, 1555, 1032, 2083, 3608, 4164, 3244, 3480,
	3481, 3482, 3483, 3903, 3271, 3272, 888, 1092, 3194, 4312,
	3161, 3162, 3163, 3203, 3200, 873, 874, 1212, 3262, 3206,
	3207, 1295, 3223, 3211, 3177, 3293, 3204, 4211, 3297, 2083,
	2352, 4026, 3268, 1212, 1953, 4621, 3255, 3860, 1726, 3692,
	2753, 1208, 1323, 1295, 2425, 1295, 3467, 3971, 3192, 2213,
	1639, 4559, 2776, 2777, 2427, 1543, 3294, 1208, 3209, 3299,
	3210, 1353, 3301, 1212, 3198, 2079, 3391, 4082, 4348, 1544,
	3682, 4343, 1295, 2136, 3678, 4143, 1295, 3241, 3242, 1893,
	3243, 2136, 39, 3227, 3228, 3229, 2956, 1208, 2857, 1055,
	3280, 2855, 3362, 1025, 3364, 974, 3202, 3368, 3351, 1295,
	4165, 3374, 2241, 1614, 4406, 1953, 1295, 3323, 1295, 4151,
	4313, 3360, 1353, 4413, 4400, 3909, 3623, 3235, 2483, 788,
	1702, 3256, 805, 804, 4431, 4561, 3248, 3249, 3345, 4503,
	1295, 4332, 4262, 3263, 4121, 3901, 3252, 4081, 4263, 3226,
	3251, 3768, 1295, 3253, 3254, 2315, 3269, 975, 3257, 3158,
	3258, 3400, 3259, 1704, 4152, 3528, 1701, 3489, 3327, 1214,
	1699, 3488, 1677, 3433, 1675, 3341, 3409, 3245, 3357, 3123,
	1956, 739, 3325, 3278, 1994, 1994, 3311, 1649, 3055, 3416,
	1647, 806, 807, 1645, 1295, 1295, 3319, 3659, 3284, 2948,
	3332, 4407, 2876, 2809, 3339, 2765, 1929, 4314, 2948, 3333,
	2681, 3431, 3201, 3334, 2324, 3335, 1924, 1295, 1920, 3424,
	3326, 1705, 1592, 3352, 3159, 3453, 3508, 3507, 1722, 3442,
	2993, 1994, 1209, 3369, 3347, 3358, 1556, 3375, 2302, 3381,
	3683, 1554, 3340, 3371, 3342, 3377, 2992, 1643, 2963, 2340,
	1641, 1956, 1635, 1664, 887, 1630, 1628, 1353, 1553, 2277,
	1353, 2194, 3493, 2174, 1987, 1830, 1603, 1526, 1994, 2482,
	4478, 3370, 3998, 3733, 3732, 3376, 2773, 3999, 3386, 3984,
	3389, 4399, 4063, 4004, 3943, 3800, 3393, 3791, 3434, 3745,
	1994, 983, 1994, 1092, 3427, 3414, 3385, 3413, 3412, 1092,
	1092, 3705, 1210, 1092, 1092, 1092, 4058, 1092, 3703, 3451,
	3452, 794, 174, 174, 4536, 3486, 1092, 1959, 1210, 1994,
	3469, 3441, 3439, 1994, 3684, 1092, 3420, 3415, 1092, 3361,
	3405, 3448, 2906, 3465, 1353, 2317, 1212, 2898, 3485, 2316,
	2891, 3432, 797, 1092, 3548, 3463, 2883, 1703, 1210, 3506,
	1700, 1353, 2869, 2854, 1698, 3505, 1676, 2698, 1674, 2693,
	1208, 1959, 1959, 1092, 1092, 2173, 1092, 1092, 1092, 2171,
	2153, 1648, 1947, 2138, 1646, 2111, 2098, 1644, 2085, 2026,
	3484, 3531, 2023, 2020, 1092, 2017, 1035, 3514, 1092, 3477,
	1959, 1959, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 3502, 1092, 2012, 3540, 3541, 2010, 3487, 2301, 1092,
	1092, 1959, 3511, 3580, 2006, 3581, 1092, 1997, 3430, 4527,
	1189, 1642, 3503, 1953, 1640, 1731, 1634, 1092, 1932, 1629,
	1627, 3509, 1552, 1947, 4552, 988, 990, 992, 1214, 1214,
	4049, 3034, 1092, 2047, 3006, 3496, 1190, 3497, 3372, 3498,
	3008, 4441, 4087, 2147, 4080, 4079, 4011, 3536, 3935, 4050,
	2949, 2066, 1507, 2327, 2230, 4249, 1100, 1953, 1953, 2754,
	2729, 1353, 3547, 4242, 2729, 3479, 3812, 2093, 3652, 2267,
	1289, 2244, 1271, 3563, 3618, 2727, 1696, 1697, 3558, 2751,
	3478, 2246, 3554, 3556, 3557, 3639, 1953, 1953, 727, 3570,
	2212, 1209, 1209, 2254, 3578, 2257, 2258, 2259, 3579, 2325,
	2074, 3577, 261, 261, 261, 2075, 672, 673, 1092, 688,
	672, 688, 698, 3583, 3610, 738, 1270, 1953, 3585, 756,
	2297, 2296, 4440, 2274, 762, 1732, 3035, 3976, 1092, 4006,
	1626, 261, 4284, 3619, 3630, 3631, 174, 3910, 3660, 3661,
	2371, 3571, 3888, 3625, 3611, 2326, 1191, 1738, 1739, 1956,
	2757, 867, 3672, 3673, 3674, 3306, 3373, 261, 2758, 1092,
	1092, 2778, 781, 3627, 3628, 1735, 1738, 1739, 3475, 2371,
	3586, 1304, 1238, 4555, 4546, 1271, 838, 1741, 683, 254,
	3741, 4508, 2758, 2868, 2299, 3641, 3788, 2196, 3642, 1315,
	2816, 1210, 2814, 1956, 1956, 1212, 1212, 1092, 2823, 2804,
	3614, 1271, 3740, 2806, 2762, 2760, 4393, 4359, 4353, 4311,
	4233, 4209, 1740, 4591, 4162, 4144, 2805, 2761, 2076, 1208,
	1208, 1295, 1956, 1956, 1295, 3798, 666, 3716, 3790, 3777,
	3668, 1740, 3649, 694, 3419, 2080, 2913, 2595, 2032, 1940,
	3233, 1959, 4433, 4620, 1055, 3129, 3130, 4434, 1055, 1738,
	1739, 2721, 2722, 1956, 4433, 4355, 3721, 3723, 1474, 4434,
	3688, 2719, 2720, 3743, 1437, 3737, 3880, 4565, 1437, 1613,
	3720, 2478, 1295, 3735, 3664, 1612, 2721, 2719, 1092, 3708,
	672, 672, 3480, 3481, 3482, 3483, 1214, 1092, 261, 3814,
	2511, 3675, 3713, 1679, 3797, 3676, 1678, 1295, 1295, 1295,
	4234, 4194, 4008, 3821, 4003, 2773, 2077, 2082, 4002, 3876,
	3663, 3559, 2919, 3366, 1295, 3363, 3805, 1824, 1823, 4606,
	3767, 4572, 4397, 4396, 4395, 4299, 4212, 3784, 4189, 1295,
	4142, 3809, 4140, 4138, 4037, 1353, 3704, 3825, 3706, 2948,
	4023, 1947, 3806, 3974, 3931, 3785, 3836, 3818, 3772, 1209,
	3701, 3758, 3695, 3423, 3766, 3422, 3300, 1953, 3808, 1353,
	3250, 3754, 1092, 1092, 2990, 2971, 2970, 2969, 1092, 1092,
	1959, 2968, 3771, 1092, 1092, 3752, 1092, 3789, 2897, 3837,
	1092, 2870, 2752, 2689, 2684, 1947, 1947, 3792, 2674, 2078,
	2673, 1092, 2662, 2443, 2318, 3807, 1810, 3794, 2298, 2295,
	1815, 2294, 1302, 3744, 2293, 3816, 2292, 1092, 3820, 3810,
	2291, 2210, 2184, 3753, 1947, 1947, 3826, 3827, 3815, 2180,
	2179, 2178, 3832, 2177, 2176, 3843, 3834, 2000, 3828, 3861,
	3835, 2072, 1999, 1998, 3870, 2084, 1996, 3831, 1931, 1695,
	3284, 1694, 1636, 1521, 3874, 1947, 1520, 1519, 1518, 1517,
	1516, 1515, 3844, 1212, 1510, 1506, 1504, 1503, 1460, 3855,
	1459, 1994, 1344, 1343, 1342, 1341, 3862, 1214, 1340, 1308,
	1210, 1210, 1307, 1257, 1256, 1214, 1480, 1208, 1487, 1353,
	1493, 1353, 1255, 1254, 1253, 2070, 1953, 1172, 1214, 1252,
	1251, 3845, 1249, 1956, 1244, 1243, 1738, 1739, 1242, 1295,
	1295, 1241, 1240, 2037, 2705, 1289, 994, 980, 1353, 4316,
	3957, 2314, 1688, 92, 1512, 824, 86, 2145, 3700, 1769,
	3218, 951, 4430, 1496, 4338, 2071, 1741, 832, 4415, 3786,
	1209, 3302, 1214, 2826, 1214, 2276, 1637, 2278, 1209, 3915,
	3213, 3900, 2637, 4385, 3884, 1581, 3091, 1586, 3936, 3937,
	4291, 1209, 4114, 3850, 2481, 1295, 3966, 1595, 1828, 1600,
	3170, 1740, 88, 1076, 3963, 1353, 3963, 1295, 1122, 4033,
	1295, 3977, 4032, 3911, 3944, 3687, 2938, 4030, 4029, 1353,
	1944, 3916, 3921, 3914, 3907, 3917, 3918, 174, 3912, 3913,
	1946, 1042, 1356, 3922, 4452, 1209, 3925, 1209, 2048, 1082,
	2064, 3967, 2057, 3978, 2675, 3940, 2555, 1099, 1096, 1295,
	1295, 2079, 1948, 4007, 1950, 4009, 3979, 3980, 1098, 1097,
	1949, 1657, 1956, 1847, 1095, 1943, 3796, 2917, 3942, 1295,
	3449, 1562, 2850, 1560, 1212, 953, 2052, 2437, 2465, 3080,
	1821, 1353, 1212, 4027, 1057, 1078, 1295, 2462, 1233, 4010,
	1067, 1056, 4024, 3196, 3175, 1212, 3436, 3648, 1208, 2350,
	842, 3126, 2468, 1224, 2578, 1746, 1208, 2571, 2567, 3260,
	2907, 1214, 1708, 4128, 4021, 4055, 1800, 2918, 1338, 1208,
	1060, 1295, 1295, 1295, 2435, 1947, 4001, 1812, 4015, 3060,
	4066, 2360, 3996, 4083, 1353, 3443, 4020, 3216, 2668, 1212,
	4437, 1212, 3567, 3963, 3993, 3982, 1092, 1092, 1092, 1437,
	2188, 1768, 1770, 1188, 1187, 1231, 4067, 1186, 3991, 4421,
	4418, 3994, 4043, 1208, 1353, 1208, 4028, 4052, 1210, 1092,
	2135, 1226, 1092, 1092, 1209, 2964, 4070, 3829, 3398, 4075,
	4086, 2040, 1092, 2713, 3983, 1959, 1790, 3406, 4061, 1072,
	1092, 1092, 4068, 1455, 3181, 3468, 3992, 1523, 761, 3995,
	4169, 1084, 1789, 2847, 1246, 1353, 2846, 1295, 4054, 4308,
	1761, 4090, 4022, 1324, 4106, 1322, 261, 4089, 261, 261,
	1321, 1275, 261, 1285, 4094, 1320, 4579, 4642, 1353, 4101,
	3696, 228, 1994, 3028, 1305, 2624, 1092, 1729, 1721, 225,
	227, 226, 4111, 756, 1994, 1092, 4038, 1994, 3653, 4123,
	4095, 3222, 4506, 1092, 1947, 3718, 1959, 3390, 4051, 23,
	22, 21, 112, 4117, 42, 1092, 1055, 261, 1092, 261,
	261, 1275, 1437, 261, 261, 20, 128, 1285, 1212, 147,
	1092, 146, 120, 4147, 4092, 4134, 4135, 1353, 261, 145,
	1476, 144, 4172, 143, 1295, 142, 4137, 149, 141, 1295,
	1295, 1953, 1208, 140, 135, 139, 1994, 138, 137, 136,
	134, 1500, 132, 133, 4148, 127, 1913, 131, 130, 129,
	126, 125, 124, 4155, 123, 122, 4188, 4146, 121, 119,
	1525, 118, 117, 1285, 4224, 116, 115, 261, 261, 4199,
	1275, 114, 257, 113, 1353, 752, 749, 1295, 61, 1210,
	3400, 4215, 60, 111, 1762, 110, 19, 1210, 40, 756,
	14, 261, 261, 65, 4190, 1214, 1214, 66, 18, 13,
	1210, 35, 1953, 4196, 91, 4232, 4186, 4205, 102, 101,
	4204, 36, 99, 98, 867, 1092, 1092, 4267, 4268, 34,
	4213, 4243, 4208, 17, 16, 15, 4252, 3963, 3963, 96,
	95, 33, 1092, 1959, 4246, 4228, 4271, 31, 4223, 11,
	1437, 9, 8, 37, 1210, 1908, 1210, 4244, 12, 4248,
	5, 179, 178, 181, 177, 180, 4245, 90, 1209, 1209,
	176, 4203, 175, 4251, 4250, 89, 4265, 1956, 1092, 29,
	10, 1092, 171, 4070, 4225, 4201, 3782, 81, 1214, 173,
	172, 4240, 4191, 4280, 4281, 4178, 4180, 4181, 261, 170,
	1214, 169, 4207, 168, 82, 79, 167, 4289, 4304, 85,
	166, 80, 4279, 84, 83, 27, 6, 261, 64, 4283,
	3963, 7, 4327, 4202, 4195, 4096, 4197, 3490, 4198, 105,
	106, 38, 3963, 77, 76, 4303, 1742, 1743, 1744, 1745,
	1747, 1748, 1092, 1092, 75, 4300, 26, 4326, 1956, 63,
	2083, 1209, 1092, 25, 212, 4342, 211, 1214, 210, 1953,
	1214, 4321, 4320, 1209, 1295, 209, 208, 207, 206, 205,
	200, 1994, 1212, 1212, 1295, 1295, 199, 204, 202, 4362,
	201, 4336, 4364, 203, 4334, 198, 215, 214, 4376, 3963,
	220, 1295, 3963, 1210, 219, 218, 1208, 1208, 217, 2441,
	4350, 4351, 216, 213, 222, 1092, 1092, 197, 4354, 196,
	4357, 4356, 4361, 4349, 1810, 1092, 195, 193, 189, 188,
	1209, 4370, 192, 1209, 194, 4373, 4228, 4372, 191, 190,
	187, 221, 72, 164, 4369, 165, 71, 163, 162, 4374,
	4375, 161, 160, 4380, 159, 158, 157, 70, 24, 2,
	4408, 1092, 1092, 1, 1092, 1212, 4379, 0, 4412, 4390,
	0, 0, 4381, 0, 4382, 4394, 2355, 1212, 2577, 1947,
	0, 0, 4435, 4389, 0, 0, 0, 0, 0, 1208,
	3057, 3058, 0, 4432, 0, 0, 0, 0, 0, 4411,
	0, 1208, 4439, 4410, 0, 1956, 0, 4457, 0, 4461,
	0, 4420, 4423, 0, 0, 4429, 0, 1092, 1092, 1092,
	4425, 0, 0, 1437, 0, 672, 0, 4460, 4335, 4424,
	4442, 0, 4428, 0, 1212, 0, 0, 1212, 4448, 0,
	0, 0, 0, 4456, 4455, 0, 261, 1092, 261, 4495,
	1947, 0, 261, 0, 0, 4490, 4474, 4475, 1208, 4477,
	0, 1208, 0, 0, 4476, 1476, 1275, 261, 0, 261,
	0, 0, 0, 0, 0, 261, 1476, 688, 0, 4518,
	0, 4509, 261, 1476, 0, 4493, 0, 4516, 0, 0,
	0, 0, 0, 0, 0, 4532, 0, 2001, 0, 0,
	4520, 1092, 0, 0, 0, 4530, 4491, 0, 0, 261,
	1437, 0, 4531, 4517, 4537, 2573, 261, 3378, 0, 2074,
	0, 4526, 0, 0, 2075, 0, 4528, 4529, 4524, 4525,
	0, 0, 4534, 4553, 3152, 3153, 3154, 0, 4543, 4544,
	4557, 0, 4549, 4547, 0, 4545, 0, 0, 3410, 0,
	1214, 0, 1214, 4558, 4556, 0, 756, 1210, 1210, 4560,
	3418, 0, 4564, 4574, 4569, 4577, 2083, 0, 4586, 4575,
	4439, 4342, 4576, 4573, 4578, 4581, 4585, 4584, 0, 1437,
	4420, 0, 3963, 4423, 3963, 0, 0, 0, 0, 4599,
	0, 0, 0, 0, 4598, 0, 4601, 1947, 0, 0,
	0, 0, 3459, 3460, 0, 1437, 0, 0, 0, 0,
	0, 0, 0, 1209, 4607, 1209, 0, 4614, 0, 0,
	4608, 4580, 1092, 1092, 4610, 0, 0, 0, 0, 4612,
	0, 1092, 4615, 1092, 1092, 4618, 0, 2076, 0, 0,
	1210, 4632, 4627, 4633, 4624, 0, 0, 4636, 4638, 0,
	4637, 4635, 1210, 4630, 2080, 4631, 0, 0, 4505, 0,
	0, 0, 4634, 0, 4646, 4605, 4641, 4645, 0, 4648,
	0, 2919, 4650, 0, 4651, 0, 0, 0, 0, 4649,
	0, 0, 4656, 4647, 0, 0, 0, 0, 0, 4653,
	1092, 4661, 4657, 4663, 0, 0, 4658, 4664, 0, 4666,
	4667, 4625, 4626, 0, 4660, 0, 0, 0, 0, 1210,
	0, 0, 1210, 261, 0, 4653, 261, 1212, 0, 1212,
	0, 0, 0, 0, 0, 2077, 2082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1208, 0, 1208, 3129, 3130, 0, 3147, 3148, 3149,
	1437, 0, 0, 0, 0, 2842, 0, 1351, 4662, 0,
	769, 1450, 0, 0, 0, 0, 3532, 0, 0, 261,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 261, 0, 0, 2834, 2832,
	0, 0, 0, 0, 0, 2836, 2838, 2828, 0, 0,
	0, 261, 0, 261, 0, 0, 0, 672, 2078, 261,
	1738, 1739, 0, 0, 0, 0, 0, 0, 1280, 3144,
	0, 756, 1437, 0, 0, 867, 0, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 1275, 261, 2084, 0, 0, 0, 0, 0,
	0, 2577, 0, 0, 0, 0, 1445, 756, 0, 1456,
	1280, 0, 0, 0, 261, 1740, 0, 0, 774, 0,
	0, 2275, 0, 0, 779, 1760, 261, 261, 0, 261,
	0, 261, 0, 261, 1757, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 3270, 0, 0, 0, 0, 0,
	0, 0, 0, 3135, 0, 0, 0, 0, 2307, 0,
	0, 2308, 0, 2309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 1280, 261, 0, 0, 0, 0,
	0, 2577, 2577, 0, 0, 0, 778, 0, 3865, 0,
	0, 2763, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 733, 0, 756, 0, 0, 0, 0, 1763,
	1764, 1765, 1766, 0, 2830, 0, 3150, 0, 0, 1746,
	0, 0, 0, 0, 0, 2844, 776, 0, 0, 0,
	0, 0, 1210, 2807, 1210, 0, 0, 0, 3018, 1738,
	1739, 0, 0, 3524, 3525, 0, 2843, 2835, 2833, 2837,
	2839, 2829, 2831, 2845, 0, 0, 0, 0, 3145, 0,
	2841, 0, 1769, 0, 0, 1768, 1770, 0, 0, 1741,
	2079, 2862, 0, 0, 2865, 0, 2867, 0, 0, 0,
	0, 0, 0, 0, 0, 782, 0, 0, 0, 3750,
	0, 1755, 1756, 2848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2573, 2573,
	2910, 0, 0, 2910, 1761, 2577, 2577, 2577, 0, 0,
	0, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595,
	3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605,
	0, 3609, 0, 0, 0, 0, 0, 771, 0, 0,
	0, 672, 0, 0, 0, 3822, 3823, 3824, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 1289, 0, 0, 672, 0, 775, 0, 0,
	0, 0, 261, 0, 672, 0, 0, 0, 0, 2988,
	0, 0, 3146, 0, 0, 0, 261, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 261, 1285, 0, 0, 0, 3129, 3130, 0,
	3147, 3148, 3149, 0, 780, 0, 0, 0, 0, 0,
	773, 0, 1923, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 1768, 1770, 0, 0, 0, 0,
	0, 0, 2573, 2573, 2573, 0, 2849, 0, 1762, 0,
	261, 1285, 0, 0, 688, 2840, 0, 0, 0, 0,
	0, 0, 0, 0, 2688, 0, 770, 0, 0, 0,
	261, 0, 0, 261, 0, 0, 0, 261, 0, 261,
	0, 0, 3144, 0, 1275, 0, 261, 261, 0, 1285,
	1285, 2704, 0, 1761, 777, 0, 261, 0, 0, 0,
	0, 0, 0, 1437, 0, 0, 0, 0, 734, 0,
	0, 0, 0, 0, 3141, 3142, 3143, 0, 0, 772,
	0, 3140, 3138, 3139, 3131, 3132, 3133, 3134, 3136, 3137,
	0, 0, 0, 0, 0, 1456, 1437, 0, 0, 0,
	0, 2741, 0, 0, 0, 2068, 0, 3927, 3928, 0,
	0, 1437, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 1437, 0, 3135, 0, 261, 0,
	0, 0, 1456, 0, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 1055, 0, 0, 1886, 3151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1055, 0, 0, 0,
	0, 261, 2860, 0, 0, 0, 0, 1762, 0, 3150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1476, 1289, 0, 261,
	0, 261, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2902, 0,
	0, 3145, 0, 2166, 0, 0, 0, 0, 2741, 0,
	672, 0, 0, 0, 0, 0, 0, 0, 857, 2931,
	867, 0, 2741, 2741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1437, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 73, 0, 860, 859, 4091,
	0, 4093, 0, 0, 0, 0, 0, 0, 261, 1275,
	261, 0, 74, 0, 1476, 0, 1476, 1285, 261, 0,
	0, 1275, 0, 1275, 0, 1275, 0, 0, 78, 0,
	0, 0, 0, 0, 1437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2577, 2577, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 261, 261, 261, 261,
	1275, 0, 0, 1275, 0, 261, 0, 261, 87, 0,
	0, 0, 1041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4139, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3146, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 861, 0,
	0, 0, 0, 3315, 3316, 2200, 0, 3317, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 93, 104, 0,
	0, 0, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577,
	2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577,
	2577, 0, 2577, 0, 0, 0, 0, 3353, 3354, 0,
	0, 3355, 0, 0, 0, 0, 0, 0, 0, 1437,
	0, 0, 1437, 0, 0, 0, 0, 4206, 0, 0,
	0, 2573, 2573, 0, 0, 94, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 1476, 0, 0, 0, 0,
	0, 1738, 1739, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2374, 0, 0, 0,
	78, 0, 0, 0, 1769, 0, 0, 3141, 3142, 3143,
	0, 1741, 0, 0, 3140, 3138, 3139, 3131, 3132, 3133,
	3134, 3136, 3137, 0, 0, 0, 1437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 1437, 0, 0, 1740, 0, 0, 2573,
	2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573,
	2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 0, 2573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	861, 0, 0, 2479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 93,
	104, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4120, 261, 0, 0, 0, 0, 672, 0, 0,
	0, 0, 672, 0, 0, 672, 0, 0, 672, 672,
	1746, 0, 0, 0, 672, 0, 0, 94, 0, 0,
	182, 100, 261, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1437, 0, 1476, 0, 0, 2647, 0,
	0, 0, 0, 0, 0, 4158, 0, 229, 0, 0,
	0, 0, 1289, 1289, 0, 862, 1768, 1770, 1476, 0,
	148, 0, 0, 0, 0, 0, 0, 0, 0, 1289,
	261, 0, 0, 0, 261, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 2741, 2741, 261, 0, 3275, 0, 0,
	1738, 1739, 0, 2741, 0, 1761, 3286, 0, 0, 0,
	150, 0, 0, 0, 2741, 3286, 0, 2741, 3286, 0,
	0, 3286, 0, 1769, 0, 186, 0, 0, 0, 0,
	1741, 0, 0, 230, 261, 261, 3275, 0, 261, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 1280, 0,
	97, 0, 0, 0, 224, 0, 0, 0, 3275, 0,
	261, 0, 3344, 3344, 0, 1740, 1275, 0, 0, 0,
	0, 0, 0, 2724, 0, 1760, 858, 0, 0, 0,
	0, 2741, 0, 2741, 1757, 3367, 2741, 3275, 0, 0,
	2741, 3275, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 4288, 182, 100, 0, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 1280, 1280, 0, 261, 3394, 862, 3527, 3396,
	2741, 0, 148, 261, 1300, 0, 0, 261, 0, 1762,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	1764, 1765, 1766, 0, 0, 261, 0, 1041, 0, 1746,
	2902, 1041, 0, 1275, 0, 261, 231, 0, 2741, 0,
	672, 0, 0, 0, 0, 0, 0, 2741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1437, 0, 0,
	0, 0, 150, 0, 0, 0, 0, 0, 261, 2902,
	0, 0, 2902, 0, 0, 1768, 1770, 186, 1478, 0,
	1484, 1437, 1490, 0, 1445, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 1755, 1756, 0, 3495, 0, 224, 0, 0, 0,
	0, 1456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3501, 0, 0, 1275, 261, 0, 261, 185, 0,
	0, 0, 0, 1275, 1761, 0, 0, 1738, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1579, 0, 1584,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 73, 1593,
	1769, 1598, 3793, 261, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1437, 1740, 1437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3565,
	0, 0, 0, 0, 0, 1660, 0, 0, 1666, 0,
	1437, 87, 3846, 1738, 1739, 0, 0, 0, 0, 1781,
	1782, 1783, 0, 0, 0, 0, 1456, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 1769, 1767, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 861, 1787, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 107, 0, 1437, 0, 0,
	93, 104, 2577, 1456, 0, 1456, 0, 0, 1740, 0,
	0, 1437, 0, 0, 0, 0, 1746, 0, 1760, 0,
	0, 0, 0, 0, 261, 261, 0, 1757, 0, 0,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 0, 3129, 3130,
	0, 3147, 3148, 3149, 0, 0, 672, 672, 0, 0,
	0, 0, 0, 0, 0, 0, 2577, 0, 94, 0,
	0, 1809, 1768, 1770, 0, 0, 0, 1822, 1476, 1476,
	0, 0, 0, 1437, 0, 0, 0, 0, 0, 0,
	0, 0, 1476, 1476, 1476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 1764, 1765, 1766, 0, 0, 0, 0,
	0, 0, 1746, 3144, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 1758, 1754, 1437, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 2573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 1788, 0, 0, 0, 1437, 756, 1768, 1770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 1880, 1880, 0, 3182, 0, 0, 0,
	0, 2665, 0, 0, 1755, 1756, 0, 0, 3344, 0,
	0, 0, 0, 2573, 0, 0, 0, 1437, 0, 261,
	0, 97, 1776, 0, 0, 0, 0, 3135, 0, 3208,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 3275,
	1437, 261, 2577, 0, 3221, 0, 0, 0, 0, 0,
	4036, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 4053, 0, 1124, 0, 3239, 0, 0,
	0, 0, 261, 182, 100, 0, 103, 261, 0, 0,
	1055, 0, 261, 0, 0, 1762, 4074, 0, 0, 0,
	3150, 0, 0, 0, 0, 0, 0, 0, 0, 1437,
	229, 2741, 261, 0, 0, 0, 0, 0, 862, 0,
	0, 2931, 2931, 148, 0, 0, 0, 867, 867, 2741,
	0, 0, 0, 2902, 2902, 0, 0, 867, 2741, 0,
	0, 0, 3145, 0, 0, 0, 0, 0, 0, 1041,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 261,
	0, 0, 0, 0, 0, 0, 1437, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 2573,
	0, 1762, 0, 0, 0, 0, 0, 1204, 186, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	1456, 1456, 0, 0, 0, 0, 0, 1779, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 3885, 0, 0, 0, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 256, 256, 668, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1456, 0, 0, 0, 0, 3146, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 1476,
	0, 261, 0, 0, 0, 0, 2200, 1215, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 1055, 1055, 1780, 1758, 1754, 0,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 2741, 2741, 0,
	3344, 2741, 0, 0, 0, 0, 0, 0, 3965, 0,
	3965, 1476, 0, 0, 0, 0, 0, 0, 0, 0,
	2741, 0, 3286, 0, 0, 0, 1476, 1476, 261, 3275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3275, 0, 261, 3275, 0, 261, 0, 0,
	0, 0, 1450, 0, 0, 1351, 0, 0, 0, 0,
	0, 1280, 2741, 0, 2741, 261, 0, 0, 3141, 3142,
	3143, 0, 0, 0, 0, 3140, 3138, 3139, 3131, 3132,
	3133, 3134, 3136, 3137, 1055, 0, 0, 0, 0, 0,
	0, 0, 2741, 0, 0, 0, 0, 4040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4340, 0, 0, 0, 3560, 3965, 0, 0,
	1476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1456, 0, 0, 4360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2349, 0, 2353, 0, 0, 0, 0, 0,
	0, 2367, 0, 0, 0, 0, 0, 0, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 0, 2416, 0, 2418, 2419, 2420, 2421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2741, 0, 3286, 0, 0, 4150, 0, 0, 2445, 0,
	0, 0, 0, 261, 0, 0, 3651, 0, 0, 1809,
	4170, 0, 4170, 2460, 0, 0, 4443, 0, 0, 0,
	0, 0, 4445, 0, 0, 0, 0, 0, 0, 2490,
	2493, 2496, 2499, 756, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3275,
	0, 261, 2569, 0, 2580, 2582, 2587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4150, 0, 0, 0, 0, 0, 0, 0, 2741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3965, 3965, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 46, 45, 0, 261,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 74, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 3565, 0, 0, 0, 78, 0, 0,
	0, 1738, 1739, 1215, 0, 0, 0, 0, 67, 0,
	3344, 4302, 0, 0, 0, 48, 0, 153, 4150, 0,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 3965, 47, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 3965, 1215, 0, 0,
	0, 1215, 0, 0, 0, 0, 0, 1215, 0, 0,
	0, 0, 0, 50, 68, 0, 1740, 261, 0, 0,
	0, 0, 51, 0, 0, 1280, 1760, 57, 0, 0,
	0, 154, 0, 0, 0, 1757, 0, 4040, 1215, 49,
	0, 107, 0, 0, 0, 0, 93, 104, 0, 0,
	0, 0, 0, 3965, 0, 261, 3965, 0, 0, 0,
	0, 0, 0, 0, 1215, 0, 3286, 1261, 0, 1261,
	1261, 0, 0, 0, 0, 0, 0, 0, 2200, 0,
	0, 0, 0, 0, 1215, 0, 52, 0, 0, 1215,
	0, 0, 1476, 0, 1476, 0, 0, 0, 0, 0,
	0, 0, 0, 1215, 94, 0, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 1348, 0,
	1746, 0, 0, 0, 1454, 0, 4404, 0, 0, 0,
	0, 0, 0, 0, 0, 2863, 2864, 0, 2866, 4170,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1215, 0, 0,
	0, 2741, 0, 0, 0, 0, 1768, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 1756, 0, 0, 3920, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 3565,
	0, 0, 1577, 1578, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 3933, 0, 1761, 1476, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2989, 53, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 56, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 4150, 0, 0, 58, 182,
	100, 0, 103, 0, 0, 0, 54, 0, 0, 1687,
	155, 0, 0, 861, 0, 0, 0, 55, 0, 0,
	0, 0, 1791, 1792, 0, 0, 229, 107, 0, 2741,
	0, 0, 93, 104, 62, 0, 3965, 0, 3965, 148,
	0, 1476, 0, 0, 0, 0, 0, 0, 1767, 0,
	0, 0, 0, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 231, 0, 0, 0, 3040, 3041, 0,
	0, 0, 0, 3047, 0, 1476, 0, 0, 0, 0,
	94, 0, 0, 2200, 0, 0, 0, 0, 0, 150,
	0, 0, 3061, 3062, 0, 0, 0, 0, 2460, 1351,
	0, 1280, 0, 0, 186, 0, 0, 3069, 0, 0,
	0, 2931, 230, 0, 0, 1215, 0, 1215, 0, 0,
	2741, 0, 0, 3083, 223, 0, 0, 0, 0, 4112,
	0, 0, 1215, 224, 0, 2931, 0, 0, 0, 0,
	3095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 1215, 185, 0, 0, 3, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2374, 0, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 0, 1738, 1739, 0, 0, 0, 0, 0, 0,
	1215, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 1215, 0, 0, 0, 1769, 0, 0, 0, 2587,
	2587, 2587, 1741, 1918, 0, 0, 0, 0, 0, 0,
	0, 0, 2374, 0, 1880, 1215, 0, 0, 1927, 0,
	1454, 0, 3186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 100, 1740, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	1261, 0, 229, 0, 0, 0, 0, 1454, 0, 0,
	862, 0, 0, 1738, 1739, 148, 1771, 1772, 1773, 1781,
	1782, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1769, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 231,
	3522, 0, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1041, 0, 0, 0, 0,
	0, 1763, 1764, 1765, 1766, 150, 0, 0, 1740, 1041,
	0, 1746, 0, 1215, 1215, 0, 0, 0, 1760, 0,
	186, 0, 0, 1215, 0, 0, 0, 1757, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 3305, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 1768, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 1756, 0, 1456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 1764, 1765, 1766, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 1761, 1215, 0, 1215,
	0, 1215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1215, 1215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1215, 1778,
	0, 0, 1788, 0, 0, 0, 0, 0, 1768, 1770,
	1215, 0, 1215, 1215, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 1785, 0, 0,
	0, 0, 0, 1280, 1755, 1756, 0, 0, 0, 0,
	2186, 0, 0, 0, 2193, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 2218, 0, 2218, 0, 0, 0, 0, 0,
	2225, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	1762, 0, 0, 0, 0, 0, 0, 74, 0, 0,
	0, 2193, 0, 0, 2250, 0, 0, 1775, 0, 0,
	0, 0, 0, 78, 1960, 1960, 1215, 0, 0, 0,
	0, 0, 0, 0, 0, 2270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2283, 0,
	2285, 0, 2287, 0, 2289, 0, 2290, 0, 2367, 0,
	0, 0, 0, 87, 3519, 3520, 0, 0, 3523, 0,
	0, 0, 3526, 0, 0, 0, 0, 0, 0, 0,
	1767, 3530, 0, 0, 0, 0, 0, 0, 0, 0,
	3537, 0, 0, 3186, 0, 0, 2312, 0, 0, 0,
	0, 1762, 0, 861, 0, 0, 0, 0, 3549, 0,
	0, 0, 0, 1215, 0, 0, 0, 107, 0, 0,
	0, 0, 93, 104, 0, 0, 0, 1779, 3572, 3573,
	0, 3574, 3575, 3576, 0, 0, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 3582,
	0, 0, 0, 3584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 0, 0,
	94, 0, 1215, 0, 3612, 3613, 0, 0, 0, 0,
	0, 1215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3624, 0, 0, 0, 0, 0, 1215, 0,
	0, 0, 0, 0, 0, 0, 0, 3633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	0, 0, 0, 3893, 0, 0, 0, 3892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 0, 702, 3679, 0, 0, 1738, 1739, 0, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0, 0,
	0, 1215, 1215, 3690, 0, 0, 0, 0, 1774, 1769,
	0, 0, 0, 97, 0, 0, 1741, 2644, 0, 0,
	0, 703, 0, 0, 0, 1787, 0, 0, 0, 0,
	0, 0, 704, 0, 0, 3717, 0, 0, 0, 0,
	0, 0, 0, 1215, 0, 0, 0, 0, 0, 0,
	0, 1740, 0, 705, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 182, 100, 0, 103, 0,
	1757, 0, 0, 0, 0, 724, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 706, 0, 0, 0, 0,
	862, 2690, 0, 0, 1261, 148, 0, 0, 1261, 0,
	1261, 0, 1738, 1739, 0, 1215, 0, 0, 707, 0,
	0, 0, 0, 0, 0, 0, 0, 2206, 0, 1215,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 231,
	708, 0, 1741, 709, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 1880, 0, 1746, 0, 0, 0, 733,
	0, 0, 3817, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 1215, 0, 0, 0, 0, 1740, 0, 0,
	186, 0, 0, 723, 0, 0, 0, 1760, 230, 0,
	0, 0, 1778, 0, 0, 1788, 1757, 0, 0, 0,
	223, 1768, 1770, 1215, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 1215, 0, 1215, 1784, 0,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 0,
	0, 1571, 1215, 0, 0, 0, 1454, 3863, 3864, 0,
	0, 0, 720, 3868, 3869, 1776, 0, 0, 3872, 3873,
	3521, 0, 0, 0, 0, 3877, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 3881, 0, 0, 0,
	0, 1763, 1764, 1765, 1766, 0, 0, 0, 0, 0,
	0, 1746, 3886, 0, 0, 0, 0, 0, 0, 0,
	2193, 0, 0, 0, 0, 0, 0, 0, 0, 2206,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 730,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 1768, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	0, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	2962, 0, 0, 1755, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2973,
	0, 2976, 0, 0, 0, 0, 0, 0, 732, 0,
	0, 0, 0, 1767, 0, 713, 1761, 0, 0, 728,
	729, 726, 0, 0, 0, 0, 0, 721, 0, 0,
	714, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3001, 1454, 3003,
	1454, 0, 0, 0, 0, 0, 3009, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 715, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 716, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 0, 0, 0, 0, 717, 3037, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 0, 0, 0, 3104, 0, 0, 0,
	3105, 0, 0, 0, 1738, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1215, 1215, 0, 0, 0,
	0, 4107, 4108, 4109, 0, 0, 0, 1769, 0, 0,
	0, 1215, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2367, 0, 0, 4118, 4119, 1215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1215, 0, 0, 1215, 4127, 4130, 0, 0, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 1960, 0, 0, 0, 1215, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1215, 1215, 0, 0, 1758, 1754, 0, 1751,
	1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0,
	4171, 0, 0, 0, 0, 0, 0, 0, 4177, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	4184, 0, 3046, 1041, 0, 0, 0, 0, 0, 1215,
	0, 1774, 1769, 0, 1960, 4192, 0, 0, 0, 1741,
	0, 0, 0, 1763, 1764, 1765, 1766, 0, 1787, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1215, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 1215, 0,
	1215, 0, 0, 1757, 0, 0, 0, 0, 0, 1768,
	1770, 0, 0, 0, 0, 0, 1215, 0, 0, 0,
	0, 1261, 0, 0, 0, 1454, 1454, 1215, 0, 1101,
	0, 1215, 0, 0, 0, 1755, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 0, 3273, 0, 0, 0,
	0, 1215, 0, 1215, 0, 0, 0, 1215, 1761, 0,
	0, 0, 0, 0, 0, 262, 262, 262, 1763, 1764,
	1765, 1766, 0, 0, 0, 1215, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 3322, 3324, 1215, 0, 2206,
	0, 0, 0, 4307, 262, 0, 4310, 0, 0, 0,
	0, 0, 0, 0, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 1788, 0,
	262, 0, 0, 0, 1768, 1770, 0, 0, 0, 1215,
	1215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 1215, 0, 0, 0, 0, 1041, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 4358, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 1215, 0, 3407, 1215, 0, 0, 3411, 0,
	0, 0, 1762, 0, 0, 0, 1738, 1739, 0, 1771,
	1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0, 0,
	0, 2367, 0, 0, 0, 1786, 0, 0, 1774, 1769,
	4130, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 0, 0, 1775, 0, 1787, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 3464,
	0, 0, 0, 0, 0, 0, 0, 1041, 0, 1215,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 1215, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 1960, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3504, 0, 1454, 0,
	0, 0, 4473, 4473, 4473, 1960, 1960, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 1754,
	0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	0, 0, 4494, 1779, 3517, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 1215, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4473, 0, 0, 0,
	0, 0, 1778, 0, 0, 1788, 1215, 0, 0, 0,
	0, 1768, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 1776, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0, 2456,
	1761, 0, 0, 2457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 4473, 4619, 0,
	0, 0, 0, 0, 1738, 1739, 4623, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 0, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1215, 0, 0, 1215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 1740,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 1762, 0, 0, 1215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1215, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 1215, 1215, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1215,
	0, 0, 3039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 0, 0, 0, 0, 0,
	1215, 0, 0, 1763, 1764, 1765, 1766, 0, 0, 0,
	0, 0, 2206, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2206, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 3781, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2206, 262,
	0, 262, 262, 3799, 0, 262, 0, 1298, 0, 1768,
	1770, 1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 0, 0, 1755, 1756, 0, 0, 0,
	3891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 1298, 262, 262, 0, 1298, 262, 262, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 1761, 0,
	3848, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1215, 0, 0, 0, 0, 0, 0, 0,
	1215, 0, 1298, 0, 1215, 0, 1215, 0, 0, 0,
	0, 0, 0, 1215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 1215, 0, 0, 1298, 0,
	262, 262, 0, 1215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 1298, 262, 262, 0, 1215, 0, 1215,
	0, 0, 0, 0, 0, 0, 0, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1215, 0, 1215, 0, 0, 1215, 0, 0, 0, 0,
	0, 1767, 0, 0, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 1215, 0, 0, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	0, 262, 0, 0, 1215, 0, 0, 0, 0, 0,
	0, 1774, 1769, 0, 0, 0, 1215, 0, 0, 1741,
	262, 1215, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1215, 0, 0, 3981,
	0, 0, 0, 0, 1740, 0, 1215, 1215, 1215, 0,
	0, 0, 0, 0, 1760, 2206, 0, 0, 0, 1215,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1215,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 1754,
	0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 2206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4062,
	1215, 0, 1215, 0, 0, 0, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 1215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 1778, 0, 0, 1788, 0,
	0, 0, 0, 0, 1768, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 1215, 1785, 0, 0, 0, 0, 0, 1215,
	1755, 1756, 0, 0, 1215, 1215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	262, 262, 262, 1761, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 1298, 1215,
	0, 0, 1215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4159, 0, 0, 0, 0, 0,
	1215, 1215, 262, 0, 0, 1786, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 2548, 2549, 2550, 2551, 2544,
	2545, 2546, 2547, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 1298, 0, 0, 0, 0, 0,
	0, 0, 2206, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 0, 0, 1215, 0, 0, 1767, 0, 1088, 0,
	0, 0, 0, 0, 0, 1215, 2524, 2525, 2526, 2527,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2536,
	2537, 2538, 2539, 2532, 2533, 2534, 2535, 2540, 2541, 2542,
	2543, 0, 0, 1779, 260, 260, 260, 0, 0, 0,
	4278, 1454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1215, 0, 0, 1215, 0, 0, 0, 1215,
	0, 0, 0, 795, 0, 0, 0, 0, 0, 1215,
	1215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1215, 0, 0, 795,
	0, 0, 2520, 2521, 2522, 2523, 2528, 2529, 2530, 2531,
	0, 0, 0, 0, 0, 0, 262, 1298, 1298, 262,
	718, 0, 0, 0, 0, 0, 0, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 1777, 702, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0, 0,
	0, 0, 262, 3535, 0, 0, 262, 0, 0, 0,
	0, 0, 262, 0, 703, 0, 4363, 0, 262, 0,
	0, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 262, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 705, 0, 0, 0,
	0, 1298, 0, 1298, 0, 1298, 0, 0, 0, 0,
	1211, 0, 0, 0, 0, 0, 0, 0, 724, 0,
	0, 1298, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 262, 0, 0, 262, 0, 706, 0,
	0, 0, 0, 0, 1298, 0, 1298, 1298, 1298, 0,
	0, 0, 0, 4414, 0, 0, 0, 262, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 262,
	262, 0, 262, 0, 262, 0, 262, 0, 262, 0,
	0, 0, 0, 708, 0, 0, 709, 0, 0, 0,
	0, 0, 0, 4450, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 1215, 723, 1215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4510, 0, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1769, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 711, 0, 0, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 731, 0, 712, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 1298, 0, 713, 0,
	0, 0, 728, 729, 726, 0, 0, 0, 0, 0,
	721, 0, 0, 714, 0, 0, 0, 0, 0, 262,
	0, 0, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 715, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 0, 0, 0, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 262, 725, 0, 0, 1778, 0, 815,
	1788, 0, 0, 0, 816, 0, 1768, 1770, 734, 0,
	0, 0, 0, 262, 0, 0, 262, 0, 0, 719,
	262, 0, 262, 1784, 0, 1785, 0, 0, 0, 262,
	262, 0, 1755, 1756, 0, 1298, 1298, 0, 0, 262,
	0, 0, 0, 817, 0, 834, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	818, 0, 0, 0, 0, 819, 0, 1298, 260, 0,
	260, 260, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 843, 0, 0,
	0, 0, 0, 820, 0, 0, 0, 1786, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 841, 0, 0,
	0, 262, 0, 0, 0, 1775, 0, 0, 0, 260,
	0, 260, 260, 0, 0, 260, 260, 0, 0, 0,
	814, 0, 0, 0, 0, 0, 0, 0, 262, 1298,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 821, 1298, 0, 822, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 845, 0, 0, 0,
	0, 733, 0, 0, 0, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	260, 0, 262, 0, 262, 0, 1298, 0, 0, 1762,
	0, 262, 1077, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 1298, 0, 0, 844, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 839, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 823, 0, 0, 0, 0, 0, 0, 262,
	262, 262, 262, 825, 0, 0, 1777, 0, 262, 260,
	262, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 0, 0, 826, 0, 3107, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 1016, 0, 835,
	0, 0, 0, 0, 0, 0, 0, 0, 1036, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 812, 0, 836, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 0, 0, 0, 0, 0, 0, 0,
	1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	0, 0, 0, 0, 1198, 0, 833, 0, 0, 0,
	0, 0, 1774, 1769, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 828, 0, 0, 0, 829, 848, 1787,
	847, 0, 0, 0, 830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 831, 0,
	0, 0, 0, 840, 0, 1740, 0, 0, 0, 849,
	0, 846, 0, 0, 0, 1760, 0, 734, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1902, 0,
	1211, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	1902, 260, 0, 0, 0, 0, 0, 795, 0, 1763,
	1764, 1765, 1766, 0, 795, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 1778, 0, 0, 1788,
	0, 0, 0, 1298, 0, 1768, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 1784, 0, 1785, 0, 0, 0, 0, 0,
	0, 1755, 1756, 0, 0, 0, 0, 0, 266, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 1298, 1298, 0, 0,
	0, 0, 0, 262, 1761, 0, 0, 262, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 1298, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 262, 787,
	1298, 262, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 262, 1298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 260, 0, 1767, 795, 0,
	0, 1298, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 262, 1298, 0, 1298, 0, 0,
	0, 1298, 0, 0, 1779, 0, 0, 0, 262, 0,
	0, 260, 0, 0, 0, 260, 262, 0, 0, 1298,
	262, 260, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 260, 0, 260, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 1298, 1298, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 260, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 260, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 795, 260,
	0, 260, 0, 260, 3106, 260, 1298, 260, 262, 1298,
	262, 0, 0, 0, 0, 0, 109, 0, 109, 0,
	109, 0, 0, 0, 0, 0, 0, 1738, 1739, 0,
	1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 260, 0, 1774,
	1769, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 1036, 109, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 109, 0, 109, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 109, 0, 109,
	1298, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 0, 0, 1778, 0, 0, 1788, 0, 0, 0,
	0, 0, 1768, 1770, 0, 0, 0, 0, 1211, 0,
	0, 1016, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 1785, 0, 0, 1211, 0, 0, 0, 1755, 1756,
	0, 1803, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 1808, 0,
	0, 0, 1814, 0, 260, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 260, 0, 0, 260, 0, 0, 0, 260,
	0, 260, 262, 0, 0, 0, 0, 0, 260, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	1298, 0, 0, 1298, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 1296, 0, 0, 0,
	0, 0, 1900, 0, 1903, 262, 109, 0, 0, 0,
	0, 0, 0, 0, 1767, 262, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 1298, 0, 0, 260, 1762, 0, 0, 0, 0,
	1354, 0, 0, 0, 1354, 0, 0, 260, 0, 0,
	1296, 0, 0, 0, 0, 0, 1298, 1298, 1298, 0,
	260, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 0, 0, 0, 0, 260, 1298, 0,
	0, 0, 262, 0, 1298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 795, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 795, 0, 0, 1296, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 3103, 0, 0, 0, 0, 0, 0, 0, 0,
	1296, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 1298,
	0, 0, 0, 0, 0, 0, 0, 1298, 260, 260,
	260, 260, 0, 0, 0, 0, 0, 260, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 262, 0, 0, 1298, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 1298, 0, 1298, 262, 0, 1298,
	262, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 1298,
	0, 0, 0, 0, 1036, 0, 1036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 262, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 1298, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 787, 0, 0,
	0, 0, 0, 0, 787, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 0, 1298, 0, 0, 0,
	0, 0, 0, 1016, 0, 0, 1016, 1016, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1298, 1211, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 1211, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 0, 0, 0, 0, 0,
	0, 2434, 0, 0, 1902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 1036, 1354, 0,
	0, 0, 0, 1298, 262, 0, 1808, 0, 1298, 1298,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 260, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 1298, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 262, 0, 0, 0, 0, 1903, 0,
	0, 0, 0, 0, 1355, 0, 260, 260, 1355, 0,
	260, 0, 0, 0, 1297, 0, 0, 1902, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 1296, 0, 0,
	0, 0, 260, 109, 0, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 1297, 0, 260, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 795, 0, 0,
	1297, 0, 0, 0, 0, 260, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	1296, 0, 1296, 1298, 1296, 0, 0, 260, 0, 0,
	0, 0, 0, 1298, 1298, 0, 0, 1211, 0, 0,
	1296, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 1296, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 0, 1296, 1296, 1296, 0, 0,
	260, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 787, 0,
	0, 0, 0, 0, 0, 0, 1738, 1739, 0, 1771,
	1772, 1773, 1781, 1782, 1783, 262, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 1774, 1769,
	0, 0, 0, 0, 0, 0, 1741, 260, 0, 260,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 109, 0, 0, 109, 0, 109, 0, 0, 0,
	0, 1740, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 109, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 1763, 1764, 1765, 1766, 0,
	0, 0, 0, 0, 0, 1746, 0, 1774, 1769, 0,
	0, 0, 0, 0, 0, 1741, 1354, 0, 0, 109,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 1788, 0, 0, 0, 0,
	1740, 1768, 1770, 0, 0, 0, 1211, 1211, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 1784, 1757,
	1785, 0, 0, 0, 0, 0, 0, 1755, 1756, 1355,
	0, 0, 0, 0, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 1354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2434, 0,
	0, 0, 0, 0, 1763, 1764, 1765, 1766, 0, 0,
	0, 0, 1786, 0, 1746, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 1788, 0, 0, 0, 0, 0,
	1768, 1770, 1355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 1296, 0, 1784, 0, 1785,
	0, 0, 0, 0, 0, 0, 1755, 1756, 0, 0,
	0, 260, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 1762, 0, 1354, 0, 0, 1761,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 260, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1211, 0, 0, 0, 0, 1775,
	0, 0, 1198, 0, 0, 0, 0, 0, 1354, 0,
	1297, 1297, 0, 0, 0, 0, 0, 0, 1198, 0,
	1355, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1767, 787, 0, 1296, 1752, 1753, 1759, 1780,
	1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745,
	1747, 1748, 0, 1762, 0, 0, 0, 0, 0, 0,
	3102, 0, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 1779,
	1296, 0, 0, 0, 1297, 0, 1297, 0, 1297, 0,
	0, 0, 0, 0, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 1297,
	1297, 1297, 0, 109, 109, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 1211, 0, 0, 0, 0,
	0, 0, 0, 1211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1902, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 109, 0,
	1777, 109, 0, 0, 0, 1752, 1753, 1759, 1780, 1758,
	1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 3101,
	1902, 0, 1902, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 260,
	0, 0, 0, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1198, 0, 0, 1036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 1902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1355, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1354, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 1296, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 1297, 1297,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1198, 1198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1902, 1902, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	1296, 0, 0, 0, 1296, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1902, 1296, 0, 0,
	0, 0, 0, 0, 1296, 0, 1296, 0, 1902, 0,
	1354, 0, 0, 0, 0, 0, 0, 787, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 0, 1297, 1902, 0, 260, 1902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 1296, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1354, 0, 0, 1354, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1739, 109, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 1769, 260, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 1198,
	0, 0, 0, 0, 0, 0, 0, 1198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 1902, 0,
	1902, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 1778, 0, 0, 1788,
	0, 0, 0, 0, 0, 1768, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 1785, 0, 0, 0, 0, 0,
	0, 1755, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1355, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 1297,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 1296, 1296, 0, 0,
	0, 0, 0, 0, 1779, 1297, 0, 1297, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 1354, 1297, 0, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 1297, 0,
	1297, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 2457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 1297, 0, 2434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 1296, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 0, 1355,
	0, 0, 1355, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1769, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 1296, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 0, 1296, 0, 0, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	1740, 0, 109, 0, 0, 0, 1355, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 1355, 0, 0, 109, 1296, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 1764, 1765, 1766, 0, 1296,
	1296, 1296, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 1354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 1354, 0, 1788, 0, 109, 0, 0, 0,
	1768, 1770, 109, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 1785,
	0, 0, 0, 0, 0, 0, 1755, 1756, 0, 0,
	0, 0, 0, 1354, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1354, 0, 0, 0, 1775,
	0, 0, 1296, 0, 0, 0, 0, 1296, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 0, 0, 1297, 0, 0, 0,
	0, 0, 1354, 0, 0, 1296, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	1297, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758,
	1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 0, 1296, 0, 0, 4401, 0, 0, 0, 0,
	0, 0, 1296, 1296, 0, 0, 0, 0, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1769, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1355, 0, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 1297, 1297, 0, 1760, 0, 0, 0, 0, 0,
	1355, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1355, 0, 1297,
	0, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 1355, 0, 0, 0, 0, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 0, 0, 0, 1778, 0, 0, 1788, 0,
	0, 0, 0, 1355, 1768, 1770, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 1297, 1297, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 1355, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 1355,
	0, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 1297, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0, 4322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 1297, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 1357, 277, 278,
	1358, 1359, 1360, 1297, 1361, 614, 1362, 1363, 1364, 1365,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 1366, 619, 289, 290,
	291, 292, 293, 294, 1367, 1368, 0, 295, 620, 621,
	622, 1369, 296, 297, 623, 1370, 1299, 1371, 298, 299,
	300, 301, 302, 303, 304, 0, 1372, 306, 307, 308,
	305, 309, 1373, 310, 0, 311, 312, 313, 314, 315,
	316, 1374, 317, 318, 319, 1156, 320, 321, 322, 1375,
	1376, 1378, 1377, 1379, 1380, 1381, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 1382, 332, 329, 330, 1383,
	333, 331, 334, 1384, 335, 336, 337, 1385, 1386, 338,
	339, 340, 1387, 341, 342, 1388, 343, 344, 345, 1389,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 1390, 267, 1391, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 1392, 364, 365, 1393, 1394, 1157, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	1395, 377, 632, 1396, 633, 378, 1397, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1159, 384, 385, 1398,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 1399, 1158, 393, 637, 638, 1400, 639, 1401,
	395, 396, 1160, 640, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1402,
	407, 409, 408, 1403, 410, 641, 1163, 411, 412, 1164,
	1404, 413, 0, 0, 0, 414, 415, 418, 1405, 1406,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1407, 269, 1167, 457, 458, 1408,
	642, 459, 643, 461, 462, 1409, 0, 463, 0, 1410,
	1411, 465, 466, 467, 1412, 1413, 468, 469, 644, 1168,
	470, 1169, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 1414, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	1415, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 1416, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 1417, 519, 520,
	521, 1170, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	1418, 542, 543, 541, 544, 545, 546, 1419, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 1420, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 1421, 573, 574, 0, 570, 561, 1422, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 1423, 583, 655,
	656, 657, 658, 1424, 592, 1425, 584, 585, 586, 659,
	587, 660, 1426, 588, 589, 590, 591, 0, 593, 594,
	1427, 1428, 595, 596, 597, 599, 600, 598, 601, 1429,
	602, 1430, 0, 603, 604, 605, 661, 662, 663, 1431,
	607, 606, 608, 664, 1432, 1433, 1434, 1435, 1436, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 2622, 0, 0,
	0, 0, 0, 0, 0, 2623, 270, 272, 271, 273,
	274, 275, 276, 1357, 277, 278, 1358, 1359, 1360, 0,
	1361, 614, 1362, 1363, 1364, 1365, 279, 280, 1155, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 1366, 619, 289, 290, 291, 292, 293, 294,
	1367, 1368, 0, 295, 620, 621, 622, 1369, 296, 297,
	623, 1370, 1299, 1371, 298, 299, 300, 301, 302, 303,
	304, 0, 1372, 306, 307, 308, 305, 309, 1373, 310,
	0, 311, 312, 313, 314, 315, 316, 1374, 317, 318,
	319, 1156, 320, 321, 322, 1375, 1376, 1378, 1377, 1379,
	1380, 1381, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 1382, 332, 329, 330, 1383, 333, 331, 334, 1384,
	335, 336, 337, 1385, 1386, 338, 339, 340, 1387, 341,
	342, 1388, 343, 344, 345, 1389, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 1390, 267, 1391, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 1392, 364, 365,
	1393, 1394, 1157, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1395, 377, 632, 1396,
	633, 378, 1397, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1159, 384, 385, 1398, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 1399, 1158,
	393, 637, 638, 1400, 639, 1401, 395, 396, 1160, 640,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1402, 407, 409, 408, 1403,
	410, 641, 1163, 411, 412, 1164, 1404, 413, 0, 0,
	0, 414, 415, 418, 1405, 1406, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	1407, 269, 1167, 457, 458, 1408, 642, 459, 643, 461,
	462, 1409, 0, 463, 0, 1410, 1411, 465, 466, 467,
	1412, 1413, 468, 469, 644, 1168, 470, 1169, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	1414, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 1415, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 1416, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 1417, 519, 520, 521, 1170, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 1418, 542, 543, 541,
	544, 545, 546, 1419, 547, 548, 531, 532, 549, 550,
	1171, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	1420, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 1421, 573, 574,
	0, 570, 561, 1422, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 1423, 583, 655, 656, 657, 658, 1424,
	592, 1425, 584, 585, 586, 659, 587, 660, 1426, 588,
	589, 590, 591, 0, 593, 594, 1427, 1428, 595, 596,
	597, 599, 600, 598, 601, 1429, 602, 1430, 0, 603,
	604, 605, 661, 662, 663, 1431, 607, 606, 608, 664,
	1432, 1433, 1434, 1435, 1436, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 0, 0, 3543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3545,
	270, 272, 271, 273, 274, 275, 276, 1357, 277, 278,
	1358, 1359, 1360, 0, 1361, 614, 1362, 1363, 1364, 1365,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 1366, 619, 289, 290,
	291, 292, 293, 294, 1367, 1368, 0, 295, 620, 621,
	622, 1369, 296, 297, 623, 1370, 1299, 1371, 298, 299,
	300, 301, 302, 303, 304, 0, 1372, 306, 307, 308,
	305, 309, 1373, 310, 0, 311, 312, 313, 314, 315,
	316, 1374, 317, 318, 319, 1156, 320, 321, 322, 1375,
	1376, 1378, 1377, 1379, 1380, 1381, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 1382, 332, 329, 330, 1383,
	333, 331, 334, 1384, 335, 336, 337, 1385, 1386, 338,
	339, 340, 1387, 341, 342, 1388, 343, 344, 345, 1389,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 1390, 267, 1391, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 1392, 364, 365, 1393, 1394, 1157, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	1395, 377, 632, 1396, 633, 378, 1397, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1159, 384, 385, 1398,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 1399, 1158, 393, 637, 638, 1400, 639, 1401,
	395, 396, 1160, 640, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1402,
	407, 409, 408, 1403, 410, 641, 1163, 411, 412, 1164,
	1404, 413, 0, 0, 0, 414, 415, 418, 1405, 1406,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1407, 269, 1167, 457, 458, 1408,
	642, 459, 643, 461, 462, 1409, 0, 463, 0, 1410,
	1411, 465, 466, 467, 1412, 1413, 468, 469, 644, 1168,
	470, 1169, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 1414, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	1415, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 1416, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 1417, 519, 520,
	521, 1170, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	1418, 542, 543, 541, 544, 545, 546, 1419, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 1420, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 1421, 573, 574, 0, 570, 561, 1422, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 1423, 583, 655,
	656, 657, 658, 1424, 592, 1425, 584, 585, 586, 659,
	587, 660, 1426, 588, 589, 590, 591, 0, 593, 594,
	1427, 1428, 595, 596, 597, 599, 600, 598, 601, 1429,
	602, 1430, 0, 603, 604, 605, 661, 662, 663, 1431,
	607, 606, 608, 664, 1432, 1433, 1434, 1435, 1436, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3919, 270, 272,
	271, 273, 274, 275, 276, 1357, 277, 278, 1358, 1359,
	1360, 0, 1361, 614, 1362, 1363, 1364, 1365, 279, 280,
	1155, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 1366, 619, 289, 290, 291, 292,
	293, 294, 1367, 1368, 0, 295, 620, 621, 622, 1369,
	296, 297, 623, 1370, 1299, 1371, 298, 299, 300, 301,
	302, 303, 304, 0, 1372, 306, 307, 308, 305, 309,
	1373, 310, 0, 311, 312, 313, 314, 315, 316, 1374,
	317, 318, 319, 1156, 320, 321, 322, 1375, 1376, 1378,
	1377, 1379, 1380, 1381, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 1382, 332, 329, 330, 1383, 333, 331,
	334, 1384, 335, 336, 337, 1385, 1386, 338, 339, 340,
	1387, 341, 342, 1388, 343, 344, 345, 1389, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 1390, 267, 1391, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 1392,
	364, 365, 1393, 1394, 1157, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1395, 377,
	632, 1396, 633, 378, 1397, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1159, 384, 385, 1398, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1399, 1158, 393, 637, 638, 1400, 639, 1401, 395, 396,
	1160, 640, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1402, 407, 409,
	408, 1403, 410, 641, 1163, 411, 412, 1164, 1404, 413,
	0, 0, 0, 414, 415, 418, 1405, 1406, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 1407, 269, 1167, 457, 458, 1408, 642, 459,
	643, 461, 462, 1409, 0, 463, 0, 1410, 1411, 465,
	466, 467, 1412, 1413, 468, 469, 644, 1168, 470, 1169,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 1414, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 1415, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 1416, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 1417, 519, 520, 521, 1170,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 1418, 542,
	543, 541, 544, 545, 546, 1419, 547, 548, 531, 532,
	549, 550, 1171, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 1420, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 1421,
	573, 574, 0, 570, 561, 1422, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 1423, 583, 655, 656, 657,
	658, 1424, 592, 1425, 584, 585, 586, 659, 587, 660,
	1426, 588, 589, 590, 591, 0, 593, 594, 1427, 1428,
	595, 596, 597, 599, 600, 598, 601, 1429, 602, 1430,
	0, 603, 604, 605, 661, 662, 663, 1431, 607, 606,
	608, 664, 1432, 1433, 1434, 1435, 1436, 609, 610, 665,
	611, 612, 613, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4113, 270, 272, 271, 273, 274, 275, 276, 1357, 277,
	278, 1358, 1359, 1360, 0, 1361, 614, 1362, 1363, 1364,
	1365, 279, 280, 1155, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 1366, 619, 289,
	290, 291, 292, 293, 294, 1367, 1368, 0, 295, 620,
	621, 622, 1369, 296, 297, 623, 1370, 1299, 1371, 298,
	299, 300, 301, 302, 303, 304, 0, 1372, 306, 307,
	308, 305, 309, 1373, 310, 0, 311, 312, 313, 314,
	315, 316, 1374, 317, 318, 319, 1156, 320, 321, 322,
	1375, 1376, 1378, 1377, 1379, 1380, 1381, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 1382, 332, 329, 330,
	1383, 333, 331, 334, 1384, 335, 336, 337, 1385, 1386,
	338, 339, 340, 1387, 341, 342, 1388, 343, 344, 345,
	1389, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 1390, 267, 1391,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 1392, 364, 365, 1393, 1394, 1157, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 1395, 377, 632, 1396, 633, 378, 1397, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 1159, 384, 385,
	1398, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 1399, 1158, 393, 637, 638, 1400, 639,
	1401, 395, 396, 1160, 640, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	1402, 407, 409, 408, 1403, 410, 641, 1163, 411, 412,
	1164, 1404, 413, 0, 0, 0, 414, 415, 418, 1405,
	1406, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1407, 269, 1167, 457, 458,
	1408, 642, 459, 643, 461, 462, 1409, 0, 463, 0,
	1410, 1411, 465, 466, 467, 1412, 1413, 468, 469, 644,
	1168, 470, 1169, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 1414, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 1415, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 1416, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 1417, 519,
	520, 521, 1170, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 1418, 542, 543, 541, 544, 545, 546, 1419, 547,
	548, 531, 532, 549, 550, 1171, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 1420, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 1421, 573, 574, 0, 570, 561, 1422, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 1423, 583,
	655, 656, 657, 658, 1424, 592, 1425, 584, 585, 586,
	659, 587, 660, 1426, 588, 589, 590, 591, 0, 593,
	594, 1427, 1428, 595, 596, 597, 599, 600, 598, 601,
	1429, 602, 1430, 0, 603, 604, 605, 661, 662, 663,
	1431, 607, 606, 608, 664, 1432, 1433, 1434, 1435, 1436,
	609, 610, 665, 611, 612, 613, 0, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3990, 270, 272, 271, 273, 274, 275,
	276, 1357, 277, 278, 1358, 1359, 1360, 0, 1361, 614,
	1362, 1363, 1364, 1365, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	1366, 619, 289, 290, 291, 292, 293, 294, 1367, 1368,
	0, 295, 620, 621, 622, 1369, 296, 297, 623, 1370,
	1299, 1371, 298, 299, 300, 301, 302, 303, 304, 0,
	1372, 306, 307, 308, 305, 309, 1373, 310, 0, 311,
	312, 313, 314, 315, 316, 1374, 317, 318, 319, 1156,
	320, 321, 322, 1375, 1376, 1378, 1377, 1379, 1380, 1381,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 1382,
	332, 329, 330, 1383, 333, 331, 334, 1384, 335, 336,
	337, 1385, 1386, 338, 339, 340, 1387, 341, 342, 1388,
	343, 344, 345, 1389, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	1390, 267, 1391, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 1392, 364, 365, 1393, 1394,
	1157, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 1395, 377, 632, 1396, 633, 378,
	1397, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1159, 384, 385, 1398, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 1399, 1158, 393, 637,
	638, 1400, 639, 1401, 395, 396, 1160, 640, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1402, 407, 409, 408, 1403, 410, 641,
	1163, 411, 412, 1164, 1404, 413, 0, 0, 0, 414,
	415, 418, 1405, 1406, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 1407, 269,
	1167, 457, 458, 1408, 642, 459, 643, 461, 462, 1409,
	0, 463, 0, 1410, 1411, 465, 466, 467, 1412, 1413,
	468, 469, 644, 1168, 470, 1169, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 1414, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 1415, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	1416, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 1417, 519, 520, 521, 1170, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 1418, 542, 543, 541, 544, 545,
	546, 1419, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 1420, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 1421, 573, 574, 0, 570,
	561, 1422, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 1423, 583, 655, 656, 657, 658, 1424, 592, 1425,
	584, 585, 586, 659, 587, 660, 1426, 588, 589, 590,
	591, 0, 593, 594, 1427, 1428, 595, 596, 597, 599,
	600, 598, 601, 1429, 602, 1430, 0, 603, 604, 605,
	661, 662, 663, 1431, 607, 606, 608, 664, 1432, 1433,
	1434, 1435, 1436, 609, 610, 665, 611, 612, 613, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3849, 270, 272, 271,
	273, 274, 275, 276, 1357, 277, 278, 1358, 1359, 1360,
	0, 1361, 614, 1362, 1363, 1364, 1365, 279, 280, 1155,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 1366, 619, 289, 290, 291, 292, 293,
	294, 1367, 1368, 0, 295, 620, 621, 622, 1369, 296,
	297, 623, 1370, 1299, 1371, 298, 299, 300, 301, 302,
	303, 304, 0, 1372, 306, 307, 308, 305, 309, 1373,
	310, 0, 311, 312, 313, 314, 315, 316, 1374, 317,
	318, 319, 1156, 320, 321, 322, 1375, 1376, 1378, 1377,
	1379, 1380, 1381, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 1382, 332, 329, 330, 1383, 333, 331, 334,
	1384, 335, 336, 337, 1385, 1386, 338, 339, 340, 1387,
	341, 342, 1388, 343, 344, 345, 1389, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 1390, 267, 1391, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 1392, 364,
	365, 1393, 1394, 1157, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 1395, 377, 632,
	1396, 633, 378, 1397, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 1159, 384, 385, 1398, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 1399,
	1158, 393, 637, 638, 1400, 639, 1401, 395, 396, 1160,
	640, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 1402, 407, 409, 408,
	1403, 410, 641, 1163, 411, 412, 1164, 1404, 413, 0,
	0, 0, 414, 415, 418, 1405, 1406, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 1407, 269, 1167, 457, 458, 1408, 642, 459, 643,
	461, 462, 1409, 0, 463, 0, 1410, 1411, 465, 466,
	467, 1412, 1413, 468, 469, 644, 1168, 470, 1169, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 1414, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 1415, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 1416, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 1417, 519, 520, 521, 1170, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 1418, 542, 543,
	541, 544, 545, 546, 1419, 547, 548, 531, 532, 549,
	550, 1171, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 1420, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 1421, 573,
	574, 0, 570, 561, 1422, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 1423, 583, 655, 656, 657, 658,
	1424, 592, 1425, 584, 585, 586, 659, 587, 660, 1426,
	588, 589, 590, 591, 0, 593, 594, 1427, 1428, 595,
	596, 597, 599, 600, 598, 601, 1429, 602, 1430, 0,
	603, 604, 605, 661, 662, 663, 1431, 607, 606, 608,
	664, 1432, 1433, 1434, 1435, 1436, 609, 610, 665, 611,
	612, 613, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3561,
	270, 272, 271, 273, 274, 275, 276, 1357, 277, 278,
	1358, 1359, 1360, 0, 1361, 614, 1362, 1363, 1364, 1365,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 1366, 619, 289, 290,
	291, 292, 293, 294, 1367, 1368, 0, 295, 620, 621,
	622, 1369, 296, 297, 623, 1370, 1299, 1371, 298, 299,
	300, 301, 302, 303, 304, 0, 1372, 306, 307, 308,
	305, 309, 1373, 310, 0, 311, 312, 313, 314, 315,
	316, 1374, 317, 318, 319, 1156, 320, 321, 322, 1375,
	1376, 1378, 1377, 1379, 1380, 1381, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 1382, 332, 329, 330, 1383,
	333, 331, 334, 1384, 335, 336, 337, 1385, 1386, 338,
	339, 340, 1387, 341, 342, 1388, 343, 344, 345, 1389,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 1390, 267, 1391, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 1392, 364, 365, 1393, 1394, 1157, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	1395, 377, 632, 1396, 633, 378, 1397, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1159, 384, 385, 1398,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 1399, 1158, 393, 637, 638, 1400, 639, 1401,
	395, 396, 1160, 640, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1402,
	407, 409, 408, 1403, 410, 641, 1163, 411, 412, 1164,
	1404, 413, 0, 0, 0, 414, 415, 418, 1405, 1406,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1407, 269, 1167, 457, 458, 1408,
	642, 459, 643, 461, 462, 1409, 0, 463, 0, 1410,
	1411, 465, 466, 467, 1412, 1413, 468, 469, 644, 1168,
	470, 1169, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 1414, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	1415, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 1416, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 1417, 519, 520,
	521, 1170, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	1418, 542, 543, 541, 544, 545, 546, 1419, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 1420, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 1421, 573, 574, 0, 570, 561, 1422, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 1423, 583, 655,
	656, 657, 658, 1424, 592, 1425, 584, 585, 586, 659,
	587, 660, 1426, 588, 589, 590, 591, 0, 593, 594,
	1427, 1428, 595, 596, 597, 599, 600, 598, 601, 1429,
	602, 1430, 0, 603, 604, 605, 661, 662, 663, 1431,
	607, 606, 608, 664, 1432, 1433, 1434, 1435, 1436, 609,
	610, 665, 611, 612, 613, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3392, 270, 272, 271, 273, 274, 275, 276,
	1357, 277, 278, 1358, 1359, 1360, 0, 1361, 614, 1362,
	1363, 1364, 1365, 279, 280, 1155, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 1366,
	619, 289, 290, 291, 292, 293, 294, 1367, 1368, 0,
	295, 620, 621, 622, 1369, 296, 297, 623, 1370, 1299,
	1371, 298, 299, 300, 301, 302, 303, 304, 0, 1372,
	306, 307, 308, 305, 309, 1373, 310, 0, 311, 312,
	313, 314, 315, 316, 1374, 317, 318, 319, 1156, 320,
	321, 322, 1375, 1376, 1378, 1377, 1379, 1380, 1381, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 1382, 332,
	329, 330, 1383, 333, 331, 334, 1384, 335, 336, 337,
	1385, 1386, 338, 339, 340, 1387, 341, 342, 1388, 343,
	344, 345, 1389, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 1390,
	267, 1391, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 1392, 364, 365, 1393, 1394, 1157,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1395, 377, 632, 1396, 633, 378, 1397,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1159,
	384, 385, 1398, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 1399, 1158, 393, 637, 638,
	1400, 639, 1401, 395, 396, 1160, 640, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1402, 407, 409, 408, 1403, 410, 641, 1163,
	411, 412, 1164, 1404, 413, 0, 0, 0, 414, 415,
	418, 1405, 1406, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1407, 269, 1167,
	457, 458, 1408, 642, 459, 643, 461, 462, 1409, 0,
	463, 0, 1410, 1411, 465, 466, 467, 1412, 1413, 468,
	469, 644, 1168, 470, 1169, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 1414, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 1415, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 1416,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	1417, 519, 520, 521, 1170, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 1418, 542, 543, 541, 544, 545, 546,
	1419, 547, 548, 531, 532, 549, 550, 1171, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 1420, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 1421, 573, 574, 0, 570, 561,
	1422, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	1423, 583, 655, 656, 657, 658, 1424, 592, 1425, 584,
	585, 586, 659, 587, 660, 1426, 588, 589, 590, 591,
	0, 593, 594, 1427, 1428, 595, 596, 597, 599, 600,
	598, 601, 1429, 602, 1430, 0, 603, 604, 605, 661,
	662, 663, 1431, 607, 606, 608, 664, 1432, 1433, 1434,
	1435, 1436, 609, 610, 665, 611, 612, 613, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2480, 270, 272, 271, 273,
	274, 275, 276, 1357, 277, 278, 1358, 1359, 1360, 0,
	1361, 614, 1362, 1363, 1364, 1365, 279, 280, 1155, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 1366, 619, 289, 290, 291, 292, 293, 294,
	1367, 1368, 0, 295, 620, 621, 622, 1369, 296, 297,
	623, 1370, 1299, 1371, 298, 299, 300, 301, 302, 303,
	304, 0, 1372, 306, 307, 308, 305, 309, 1373, 310,
	0, 311, 312, 313, 314, 315, 316, 1374, 317, 318,
	319, 1156, 320, 321, 322, 1375, 1376, 1378, 1377, 1379,
	1380, 1381, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 1382, 332, 329, 330, 1383, 333, 331, 334, 1384,
	335, 336, 337, 1385, 1386, 338, 339, 340, 1387, 341,
	342, 1388, 343, 344, 345, 1389, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 1390, 267, 1391, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 1392, 364, 365,
	1393, 1394, 1157, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1395, 377, 632, 1396,
	633, 378, 1397, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1159, 384, 385, 1398, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 1399, 1158,
	393, 637, 638, 1400, 639, 1401, 395, 396, 1160, 640,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1402, 407, 409, 408, 1403,
	410, 641, 1163, 411, 412, 1164, 1404, 413, 0, 0,
	0, 414, 415, 418, 1405, 1406, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	1407, 269, 1167, 457, 458, 1408, 642, 459, 643, 461,
	462, 1409, 0, 463, 0, 1410, 1411, 465, 466, 467,
	1412, 1413, 468, 469, 644, 1168, 470, 1169, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	1414, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 1415, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 1416, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 1417, 519, 520, 521, 1170, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 1418, 542, 543, 541,
	544, 545, 546, 1419, 547, 548, 531, 532, 549, 550,
	1171, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	1420, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 1421, 573, 574,
	0, 570, 561, 1422, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 1423, 583, 655, 656, 657, 658, 1424,
	592, 1425, 584, 585, 586, 659, 587, 660, 1426, 588,
	589, 590, 591, 0, 593, 594, 1427, 1428, 595, 596,
	597, 599, 600, 598, 601, 1429, 602, 1430, 0, 603,
	604, 605, 661, 662, 663, 1431, 607, 606, 608, 664,
	1432, 1433, 1434, 1435, 1436, 609, 610, 665, 611, 612,
	613, 1448, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2167, 0,
	270, 272, 271, 273, 274, 275, 276, 1357, 277, 278,
	1358, 1359, 1360, 0, 1361, 614, 1362, 1363, 1364, 1365,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 1366, 619, 289, 290,
	291, 292, 293, 294, 1367, 1368, 0, 295, 620, 621,
	622, 1369, 296, 297, 623, 1370, 1299, 1371, 298, 299,
	300, 301, 302, 303, 304, 0, 1372, 306, 307, 308,
	305, 309, 1373, 310, 0, 311, 312, 313, 314, 315,
	316, 1374, 317, 318, 319, 1156, 320, 321, 322, 1375,
	1376, 1378, 1377, 1379, 1380, 1381, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 1382, 332, 329, 330, 1383,
	333, 331, 334, 1384, 335, 336, 337, 1385, 1386, 338,
	339, 340, 1387, 341, 342, 1388, 343, 344, 345, 1389,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 1390, 267, 1391, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 1392, 364, 365, 1393, 1394, 1157, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	1395, 377, 632, 1396, 633, 378, 1397, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1159, 384, 385, 1398,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 1399, 1158, 393, 637, 638, 1400, 639, 1401,
	395, 396, 1160, 640, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1402,
	407, 409, 408, 1403, 410, 641, 1163, 411, 412, 1164,
	1404, 413, 0, 0, 0, 414, 415, 418, 1405, 1406,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1407, 269, 1167, 457, 458, 1408,
	642, 459, 643, 461, 462, 1409, 0, 463, 0, 1410,
	1411, 465, 466, 467, 1412, 1413, 468, 469, 644, 1168,
	470, 1169, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 1414, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	1415, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 1416, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 1417, 519, 520,
	521, 1170, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	1418, 542, 543, 541, 544, 545, 546, 1419, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 1420, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 1421, 573, 574, 0, 570, 561, 1422, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 1423, 583, 655,
	656, 657, 658, 1424, 592, 1425, 584, 585, 586, 659,
	587, 660, 1426, 588, 589, 590, 591, 0, 593, 594,
	1427, 1428, 595, 596, 597, 599, 600, 598, 601, 1429,
	602, 1430, 0, 603, 604, 605, 661, 662, 663, 1431,
	607, 606, 608, 664, 1432, 1433, 1434, 1435, 1436, 609,
	610, 665, 611, 612, 613, 1349, 0, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 1357, 277, 278, 1358, 1359, 1360, 0, 1361, 614,
	1362, 1363, 1364, 1365, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	1366, 619, 289, 290, 291, 292, 293, 294, 1367, 1368,
	0, 295, 620, 621, 622, 1369, 296, 297, 623, 1370,
	1299, 1371, 298, 299, 300, 301, 302, 303, 304, 0,
	1372, 306, 307, 308, 305, 309, 1373, 310, 0, 311,
	312, 313, 314, 315, 316, 1374, 317, 318, 319, 1156,
	320, 321, 322, 1375, 1376, 1378, 1377, 1379, 1380, 1381,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 1382,
	332, 329, 330, 1383, 333, 331, 334, 1384, 335, 336,
	337, 1385, 1386, 338, 339, 340, 1387, 341, 342, 1388,
	343, 344, 345, 1389, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	1390, 267, 1391, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 1392, 364, 365, 1393, 1394,
	1157, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 1395, 377, 632, 1396, 633, 378,
	1397, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1159, 384, 385, 1398, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 1399, 1158, 393, 637,
	638, 1400, 639, 1401, 395, 396, 1160, 640, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1402, 407, 409, 408, 1403, 410, 641,
	1163, 411, 412, 1164, 1404, 413, 0, 0, 0, 414,
	415, 418, 1405, 1406, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 1407, 269,
	1167, 457, 458, 1408, 642, 459, 643, 461, 462, 1409,
	0, 463, 0, 1410, 1411, 465, 466, 467, 1412, 1413,
	468, 469, 644, 1168, 470, 1169, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 1414, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 1415, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	1416, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 1417, 519, 520, 521, 1170, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 1418, 542, 543, 541, 544, 545,
	546, 1419, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 1420, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 1421, 573, 574, 0, 570,
	561, 1422, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 1423, 583, 655, 656, 657, 658, 1424, 592, 1425,
	584, 585, 586, 659, 587, 660, 1426, 588, 589, 590,
	591, 0, 593, 594, 1427, 1428, 595, 596, 597, 599,
	600, 598, 601, 1429, 602, 1430, 0, 603, 604, 605,
	661, 662, 663, 1431, 607, 606, 608, 664, 1432, 1433,
	1434, 1435, 1436, 609, 610, 665, 611, 612, 613, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 1357, 277, 278, 1358, 1359, 1360, 0,
	1361, 614, 1362, 1363, 1364, 1365, 279, 280, 1155, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 1366, 619, 289, 290, 291, 292, 293, 294,
	1367, 1368, 0, 295, 620, 621, 622, 1369, 296, 297,
	623, 1370, 1299, 1371, 298, 299, 300, 301, 302, 303,
	304, 0, 1372, 306, 307, 308, 305, 309, 1373, 310,
	0, 311, 312, 313, 314, 315, 316, 1374, 317, 318,
	319, 1156, 320, 321, 322, 1375, 1376, 1378, 1377, 1379,
	1380, 1381, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 1382, 332, 329, 330, 1383, 333, 331, 334, 1384,
	335, 336, 337, 1385, 1386, 338, 339, 340, 1387, 341,
	342, 1388, 343, 344, 345, 1389, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 1390, 267, 1391, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 1392, 364, 365,
	1393, 1394, 1157, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1395, 377, 632, 1396,
	633, 378, 1397, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1159, 384, 385, 1398, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 1399, 1158,
	393, 637, 638, 1400, 639, 1401, 395, 396, 1160, 640,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1402, 407, 409, 408, 1403,
	410, 641, 1163, 411, 412, 1164, 1404, 413, 0, 0,
	0, 414, 415, 418, 1405, 1406, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	1407, 269, 1167, 457, 458, 1408, 642, 459, 643, 461,
	462, 1409, 0, 463, 0, 1410, 1411, 465, 466, 467,
	1412, 1413, 468, 469, 644, 1168, 470, 1169, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	1414, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 1415, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 1416, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 1417, 519, 520, 521, 1170, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 1418, 542, 543, 541,
	544, 545, 546, 1419, 547, 548, 531, 532, 549, 550,
	1171, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	1420, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 1421, 573, 574,
	0, 570, 561, 1422, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 1423, 583, 655, 656, 657, 658, 1424,
	592, 1425, 584, 585, 586, 659, 587, 660, 1426, 588,
	589, 590, 591, 0, 593, 594, 1427, 1428, 595, 596,
	597, 599, 600, 598, 601, 1429, 602, 1430, 0, 603,
	604, 605, 661, 662, 663, 1431, 607, 606, 608, 664,
	1432, 1433, 1434, 1435, 1436, 609, 610, 665, 611, 612,
	613, 2455, 0, 1091, 1063, 1064, 1065, 1061, 1062, 1074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 2452, 277, 278,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	1128, 0, 287, 1135, 288, 1134, 0, 1145, 289, 290,
	291, 292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176,
	622, 0, 296, 297, 1121, 0, 1102, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326,
	327, 1138, 328, 1132, 1131, 1052, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 2453, 0, 338,
	1123, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1058, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1146, 1147, 359, 1070, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1130, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 1143,
	1144, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1153, 0, 1080, 378, 0, 379, 380, 381,
	382, 383, 1116, 1117, 1120, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1158, 393, 1125, 1126, 0, 1086, 0,
	395, 396, 1160, 1118, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1154, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 1109, 1108,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1049, 269, 1167, 457, 458, 1071,
	1119, 459, 1133, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 1148, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1149, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1129, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 1059, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1112, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 1127, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1174, 564, 565, 566, 567, 1150, 571,
	572, 0, 573, 574, 1047, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1139,
	1140, 1141, 1142, 0, 592, 0, 584, 585, 586, 1151,
	587, 1152, 1069, 588, 589, 590, 591, 0, 593, 594,
	0, 1053, 595, 596, 597, 599, 600, 598, 601, 1113,
	602, 0, 0, 603, 604, 605, 661, 1136, 1173, 2451,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 2454, 0, 0, 0, 0, 0, 0, 1075,
	2450, 0, 1037, 1073, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1115, 1079, 0, 0,
	0, 279, 280, 1155, 281, 282, 283, 284, 285, 286,
	615, 1128, 0, 287, 1135, 288, 1134, 0, 1145, 289,
	290, 291, 292, 293, 294, 1081, 1114, 1048, 295, 1175,
	1176, 622, 0, 296, 297, 1121, 0, 1102, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1156, 320, 321, 322,
	1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325,
	326, 327, 1138, 328, 1132, 1131, 1052, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1123, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1058, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1146, 1147, 359, 1070, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1130, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1149, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1129, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1170, 522, 523, 524, 525, 1059, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 229, 542, 543, 541, 544, 545, 546, 1112, 547,
	548, 531, 532, 549, 550, 1171, 551, 552, 553, 554,
	555, 556, 1127, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1174, 564, 565, 566, 567, 1150,
	571, 572, 0, 573, 574, 1047, 570, 561, 231, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1139, 1140, 1141, 1142, 0, 592, 0, 584, 585, 586,
	1151, 587, 1152, 1069, 588, 589, 590, 591, 0, 593,
	594, 0, 1053, 595, 596, 597, 599, 600, 598, 601,
	1113, 602, 0, 0, 603, 604, 605, 1569, 1136, 1173,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 223,
	609, 610, 665, 611, 612, 613, 1050, 0, 224, 0,
	0, 0, 0, 0, 1046, 0, 0, 0, 0, 0,
	0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062, 1074,
	1813, 1811, 0, 0, 1073, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	1128, 0, 287, 1135, 288, 1134, 0, 1145, 289, 290,
	291, 292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176,
	622, 0, 296, 297, 1121, 0, 1102, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326,
	327, 1138, 328, 1132, 1131, 1052, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1123, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1058, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1146, 1147, 359, 1070, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1130, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 1143,
	1144, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1153, 0, 1080, 378, 0, 379, 380, 381,
	382, 383, 1116, 1117, 1120, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1158, 393, 1125, 1126, 0, 1086, 0,
	395, 396, 1160, 1118, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1154, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 1109, 1108,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1049, 269, 1167, 457, 458, 1071,
	1119, 459, 1133, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 1148, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1149, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1129, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 1059, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	229, 542, 543, 541, 544, 545, 546, 1112, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 1127, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1174, 564, 565, 566, 567, 1150, 571,
	572, 0, 573, 574, 1047, 570, 561, 231, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1139,
	1140, 1141, 1142, 0, 592, 0, 584, 585, 586, 1151,
	587, 1152, 1069, 588, 589, 590, 591, 0, 593, 594,
	0, 1053, 595, 596, 597, 599, 600, 598, 601, 1113,
	602, 0, 0, 603, 604, 605, 1569, 1136, 1173, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 223, 609,
	610, 665, 611, 612, 613, 1050, 0, 224, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 1813,
	3059, 0, 0, 1073, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1115, 1079, 0, 0, 0, 279,
	280, 1155, 281, 282, 283, 284, 285, 286, 615, 1128,
	0, 287, 1135, 288, 1134, 0, 1145, 289, 290, 291,
	292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176, 622,
	0, 296, 297, 1121, 0, 1102, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1156, 320, 321, 322, 1105, 1103,
	1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326, 327,
	1138, 328, 1132, 1131, 1052, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1123,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1058, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1146, 1147, 359, 1070, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1130, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1149, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1129, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1170, 522, 523, 524, 525, 1059, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 229,
	542, 543, 541, 544, 545, 546, 1112, 547, 548, 531,
	532, 549, 550, 1171, 551, 552, 553, 554, 555, 556,
	1127, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1174, 564, 565, 566, 567, 1150, 571, 572,
	0, 573, 574, 1047, 570, 561, 231, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1139, 1140,
	1141, 1142, 0, 592, 0, 584, 585, 586, 1151, 587,
	1152, 1069, 588, 589, 590, 591, 0, 593, 594, 0,
	1053, 595, 596, 597, 599, 600, 598, 601, 1113, 602,
	0, 0, 603, 604, 605, 1569, 1136, 1173, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 223, 609, 610,
	665, 611, 612, 613, 1050, 0, 224, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 0, 0, 0, 1044,
	1045, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 1813, 1811,
	0, 0, 1073, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1115, 1079, 0, 0, 0, 279, 280,
	1155, 281, 282, 283, 284, 285, 286, 615, 1128, 0,
	287, 1135, 288, 1134, 2583, 1145, 289, 290, 291, 292,
	293, 294, 1081, 1114, 1048, 295, 1175, 1176, 622, 0,
	296, 297, 1121, 0, 1102, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1156, 320, 321, 322, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 323, 324, 325, 326, 327, 1138,
	328, 1132, 1131, 1052, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1123, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1058, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1146, 1147, 359, 1070, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1130, 0, 0, 0, 363, 0,
	364, 365, 0, 2588, 1157, 366, 367, 1143, 1144, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1153, 0, 1080, 378, 0, 379, 380, 381, 382, 383,
	1116, 1117, 1120, 460, 1159, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1158, 393, 1125, 1126, 0, 1086, 0, 395, 396,
	1160, 1118, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 2584, 410, 1154, 1163, 411, 412, 1164, 0, 413,
	0, 0, 0, 414, 415, 418, 1109, 1108, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119, 459,
	1133, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1168, 470, 1169,
	1148, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1149, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1129,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1170,
	522, 523, 524, 525, 1059, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1112, 547, 548, 531, 532,
	549, 550, 1171, 551, 552, 553, 554, 555, 556, 1127,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1174, 564, 565, 566, 567, 1150, 571, 572, 0,
	573, 574, 1047, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1139, 1140, 1141,
	1142, 0, 592, 2585, 584, 585, 586, 1151, 587, 1152,
	1069, 588, 589, 590, 591, 0, 593, 594, 0, 1053,
	595, 596, 597, 599, 600, 598, 601, 1113, 602, 0,
	0, 603, 604, 605, 661, 1136, 1173, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1050, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 1044, 1045,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 0,
	2500, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1115, 1079, 0, 0, 0, 279,
	280, 1155, 281, 282, 283, 284, 285, 286, 615, 1128,
	0, 287, 1135, 288, 1134, 0, 1145, 289, 290, 291,
	292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176, 622,
	0, 296, 297, 1121, 0, 1102, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1156, 320, 321, 322, 1105, 1103,
	1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326, 327,
	1138, 328, 1132, 1131, 1052, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1123,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1058, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1146, 1147, 359, 1070, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1130, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1149, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1129, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1170, 522, 523, 524, 525, 1059, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1112, 547, 548, 531,
	532, 549, 550, 1171, 551, 552, 553, 554, 555, 556,
	1127, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1174, 564, 565, 566, 567, 1150, 571, 572,
	0, 573, 574, 1047, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1139, 1140,
	1141, 1142, 0, 592, 0, 584, 585, 586, 1151, 587,
	1152, 1069, 588, 589, 590, 591, 0, 593, 594, 0,
	1053, 595, 596, 597, 599, 600, 598, 601, 1113, 602,
	0, 0, 603, 604, 605, 661, 1136, 1173, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1050, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 0, 0, 0, 1044,
	1045, 0, 0, 0, 0, 0, 0, 0, 1075, 2498,
	0, 2497, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	1128, 0, 287, 1135, 288, 1134, 0, 1145, 289, 290,
	291, 292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176,
	622, 0, 296, 297, 1121, 0, 1102, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326,
	327, 1138, 328, 1132, 1131, 1052, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1123, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1058, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1146, 1147, 359, 1070, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1130, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 1143,
	1144, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1153, 0, 1080, 378, 0, 379, 380, 381,
	382, 383, 1116, 1117, 1120, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1158, 393, 1125, 1126, 0, 1086, 0,
	395, 396, 1160, 1118, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1154, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 1109, 1108,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1049, 269, 1167, 457, 458, 1071,
	1119, 459, 1133, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 1148, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1149, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1129, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 1059, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1112, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 1127, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1174, 564, 565, 566, 567, 1150, 571,
	572, 0, 573, 574, 1047, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1139,
	1140, 1141, 1142, 0, 592, 0, 584, 585, 586, 1151,
	587, 1152, 1069, 588, 589, 590, 591, 0, 593, 594,
	0, 1053, 595, 596, 597, 599, 600, 598, 601, 1113,
	602, 0, 0, 603, 604, 605, 661, 1136, 1173, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 0, 0, 0, 0, 0, 0, 0, 1075,
	2495, 0, 2494, 1073, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1115, 1079, 0, 0,
	0, 279, 280, 1155, 281, 282, 283, 284, 285, 286,
	615, 1128, 0, 287, 1135, 288, 1134, 0, 1145, 289,
	290, 291, 292, 293, 294, 1081, 1114, 1048, 295, 1175,
	1176, 622, 0, 296, 297, 1121, 0, 1102, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1156, 320, 321, 322,
	1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325,
	326, 327, 1138, 328, 1132, 1131, 1052, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1123, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1058, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1146, 1147, 359, 1070, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1130, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1149, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1129, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1170, 522, 523, 524, 525, 1059, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1112, 547,
	548, 531, 532, 549, 550, 1171, 551, 552, 553, 554,
	555, 556, 1127, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1174, 564, 565, 566, 567, 1150,
	571, 572, 0, 573, 574, 1047, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1139, 1140, 1141, 1142, 0, 592, 0, 584, 585, 586,
	1151, 587, 1152, 1069, 588, 589, 590, 591, 0, 593,
	594, 0, 1053, 595, 596, 597, 599, 600, 598, 601,
	1113, 602, 0, 0, 603, 604, 605, 661, 1136, 1173,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1050, 0, 0, 0,
	0, 0, 0, 0, 1046, 0, 0, 0, 0, 0,
	0, 1044, 1045, 0, 0, 0, 0, 0, 0, 0,
	1075, 2492, 0, 2491, 1073, 1091, 1063, 1064, 1065, 1061,
	1062, 1074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 279, 280, 1155, 281, 282, 283, 284, 285,
	286, 615, 1128, 0, 287, 1135, 288, 1134, 0, 1145,
	289, 290, 291, 292, 293, 294, 1081, 1114, 1048, 295,
	1175, 1176, 622, 0, 296, 297, 1121, 0, 1102, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1156, 320, 321,
	322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324,
	325, 326, 327, 1138, 328, 1132, 1131, 1052, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1123, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1058, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1146, 1147, 359, 1070, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1130, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1157, 366,
	367, 1143, 1144, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1153, 0, 1080, 378, 0, 379,
	380, 381, 382, 383, 1116, 1117, 1120, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1158, 393, 1125, 1126, 0,
	1086, 0, 395, 396, 1160, 1118, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1154, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	1109, 1108, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 1049, 269, 1167, 457,
	458, 1071, 1119, 459, 1133, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1168, 470, 1169, 1148, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1149, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1129, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1170, 522, 523, 524, 525, 1059, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1112,
	547, 548, 531, 532, 549, 550, 1171, 551, 552, 553,
	554, 555, 556, 1127, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1174, 564, 565, 566, 567,
	1150, 571, 572, 0, 573, 574, 1047, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1139, 1140, 1141, 1142, 0, 592, 0, 584, 585,
	586, 1151, 587, 1152, 1069, 588, 589, 590, 591, 0,
	593, 594, 0, 1053, 595, 596, 597, 599, 600, 598,
	601, 1113, 602, 0, 0, 603, 604, 605, 661, 1136,
	1173, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 0, 0, 0, 0, 0, 0,
	0, 1075, 2489, 0, 1662, 1073, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1115, 1079,
	0, 0, 0, 279, 280, 1155, 281, 282, 283, 284,
	285, 286, 615, 1128, 0, 287, 1135, 288, 1134, 0,
	1145, 289, 290, 291, 292, 293, 294, 1081, 1114, 1048,
	295, 1175, 1176, 622, 0, 296, 297, 1121, 0, 1102,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1156, 320,
	321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323,
	324, 325, 326, 327, 1138, 328, 1132, 1131, 1052, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1123, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1058, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1146, 1147, 359, 1070,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1130,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1149, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1129, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1170, 522, 523, 524, 525, 1059,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1112, 547, 548, 531, 532, 549, 550, 1171, 551, 552,
	553, 554, 555, 556, 1127, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1174, 564, 565, 566,
	567, 1150, 571, 572, 0, 573, 574, 1047, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1139, 1140, 1141, 1142, 0, 592, 0, 584,
	585, 586, 1151, 587, 1152, 1069, 588, 589, 590, 591,
	0, 593, 594, 0, 1053, 595, 596, 597, 599, 600,
	598, 601, 1113, 602, 0, 0, 603, 604, 605, 661,
	1136, 1173, 0, 607, 606, 608, 664, 0, 1661, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1050, 0,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 0,
	0, 0, 0, 1044, 1045, 0, 0, 0, 0, 0,
	0, 0, 1075, 0, 0, 1040, 1073, 1091, 1063, 1064,
	1065, 1061, 1062, 1074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 1128, 0, 287, 1135, 288, 1134,
	0, 1145, 289, 290, 291, 292, 293, 294, 1081, 1114,
	1048, 295, 1175, 1176, 622, 0, 296, 297, 1121, 0,
	1102, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1156,
	320, 321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	323, 324, 325, 326, 327, 1138, 328, 1132, 1131, 1052,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1123, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1058, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1146, 1147, 359,
	1070, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1130, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1157, 366, 367, 1143, 1144, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1153, 0, 1080, 378,
	0, 379, 380, 381, 382, 383, 1116, 1117, 1120, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1158, 393, 1125,
	1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1154,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 1109, 1108, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 1049, 269,
	1167, 457, 458, 1071, 1119, 459, 1133, 461, 462, 0,
	0, 463, 0, 1054, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1168, 470, 1169, 1148, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1149,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1129, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1170, 522, 523, 524, 525,
	1059, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1112, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 1127, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1174, 564, 565,
	566, 567, 1150, 571, 572, 0, 573, 574, 1047, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 1139, 1140, 1141, 1142, 0, 592, 0,
	584, 585, 586, 1151, 587, 1152, 1069, 588, 589, 590,
	591, 0, 593, 594, 0, 1053, 595, 596, 597, 599,
	600, 598, 601, 1113, 602, 0, 0, 603, 604, 605,
	661, 1136, 1173, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1050,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 1075, 0, 0, 0, 1073, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1115, 1079,
	0, 0, 0, 279, 280, 1155, 281, 282, 283, 284,
	285, 286, 615, 1128, 0, 287, 1135, 288, 1134, 0,
	1145, 289, 290, 291, 292, 293, 294, 1081, 1114, 1048,
	295, 1175, 1176, 622, 0, 296, 297, 1121, 0, 1102,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 4426, 316, 0, 317, 318, 319, 1156, 320,
	321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323,
	324, 325, 326, 327, 1138, 328, 1132, 1131, 1052, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1123, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1058, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1146, 1147, 359, 1070,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1130,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 1054, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1149, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1129, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1170, 522, 523, 524, 525, 1059,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1112, 547, 548, 531, 532, 549, 550, 1171, 551, 552,
	553, 554, 555, 556, 1127, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1174, 564, 565, 566,
	567, 1150, 571, 572, 0, 573, 574, 1047, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1139, 1140, 1141, 1142, 0, 592, 0, 584,
	585, 586, 1151, 587, 1152, 1069, 588, 589, 590, 591,
	0, 593, 594, 0, 1053, 595, 596, 597, 599, 600,
	598, 601, 1113, 602, 0, 0, 603, 604, 605, 661,
	1136, 1173, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1050, 0,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 0,
	0, 0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 1061,
	1062, 1074, 1075, 0, 0, 0, 1073, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 279, 280, 1155, 281, 282, 283, 284, 285,
	286, 615, 1128, 0, 287, 1135, 288, 1134, 0, 1145,
	289, 290, 291, 292, 293, 294, 1081, 1114, 1048, 295,
	1175, 1176, 622, 0, 296, 297, 1121, 0, 1102, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1156, 320, 321,
	322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324,
	325, 326, 327, 1138, 328, 1132, 1131, 1052, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1123, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1058, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1146, 1147, 359, 1070, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1130, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1157, 366,
	367, 1143, 1144, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1153, 0, 1080, 378, 0, 379,
	380, 381, 382, 383, 1116, 1117, 1120, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 2369,
	390, 391, 392, 394, 0, 1158, 393, 1125, 1126, 0,
	1086, 0, 395, 396, 1160, 1118, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1154, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	1109, 1108, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 1049, 269, 1167, 457,
	458, 1071, 1119, 459, 1133, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1168, 470, 1169, 1148, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1149, 489, 649,
	490, 491, 2368, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1129, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1170, 522, 523, 524, 525, 1059, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1112,
	547, 548, 531, 532, 549, 550, 1171, 551, 552, 553,
	554, 555, 556, 1127, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1174, 564, 565, 566, 567,
	1150, 571, 572, 0, 573, 574, 1047, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1139, 1140, 1141, 1142, 0, 592, 0, 584, 585,
	586, 1151, 587, 1152, 1069, 588, 589, 590, 591, 0,
	593, 594, 0, 1053, 595, 596, 597, 599, 600, 598,
	601, 1113, 602, 0, 0, 603, 604, 605, 661, 1136,
	1173, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1115, 1079, 0, 0,
	0, 279, 280, 1155, 281, 282, 283, 284, 285, 286,
	615, 1128, 0, 287, 1135, 288, 1134, 0, 1145, 289,
	290, 291, 292, 293, 294, 1081, 1114, 1048, 295, 1175,
	1176, 622, 0, 296, 297, 1121, 0, 1102, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1156, 320, 321, 322,
	1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325,
	326, 327, 1138, 328, 1132, 1131, 1052, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1123, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1058, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1146, 1147, 359, 1070, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1130, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	1054, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1149, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1129, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1170, 522, 523, 524, 525, 1059, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1112, 547,
	548, 531, 532, 549, 550, 1171, 551, 552, 553, 554,
	555, 556, 1127, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1174, 564, 565, 566, 567, 1150,
	571, 572, 0, 573, 574, 1047, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1139, 1140, 1141, 1142, 0, 592, 0, 584, 585, 586,
	1151, 587, 1152, 1069, 588, 589, 590, 591, 0, 593,
	594, 0, 1053, 595, 596, 597, 599, 600, 598, 601,
	1113, 602, 0, 0, 603, 604, 605, 661, 1136, 1173,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1050, 0, 0, 0,
	0, 0, 0, 0, 1046, 0, 0, 0, 0, 0,
	0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062, 1074,
	1075, 0, 0, 0, 1073, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	1128, 0, 287, 1135, 288, 1134, 0, 1145, 289, 290,
	291, 292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176,
	622, 0, 296, 297, 1121, 0, 1102, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 4187,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326,
	327, 1138, 328, 1132, 1131, 1052, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1123, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1058, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1146, 1147, 359, 1070, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1130, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 1143,
	1144, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1153, 0, 1080, 378, 0, 379, 380, 381,
	382, 383, 1116, 1117, 1120, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1158, 393, 1125, 1126, 0, 1086, 0,
	395, 396, 1160, 1118, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1154, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 1109, 1108,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1049, 269, 1167, 457, 458, 1071,
	1119, 459, 1133, 461, 462, 0, 0, 463, 0, 1054,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 1148, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1149, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1129, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 1059, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1112, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 1127, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1174, 564, 565, 566, 567, 1150, 571,
	572, 0, 573, 574, 1047, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1139,
	1140, 1141, 1142, 0, 592, 0, 584, 585, 586, 1151,
	587, 1152, 1069, 588, 589, 590, 591, 0, 593, 594,
	0, 1053, 595, 596, 597, 599, 600, 598, 601, 1113,
	602, 0, 0, 603, 604, 605, 661, 1136, 1173, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 1075,
	0, 0, 0, 1073, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1115, 1079, 0, 0, 0, 279,
	280, 1155, 281, 282, 283, 284, 285, 286, 615, 1128,
	0, 287, 1135, 288, 1134, 0, 1145, 289, 290, 291,
	292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176, 622,
	0, 296, 297, 1121, 0, 1102, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1156, 320, 321, 322, 1105, 1103,
	1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326, 327,
	1138, 328, 1132, 1131, 1052, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1123,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1058, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1146, 1147, 359, 1070, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1130, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 3811, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1149, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1129, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1170, 522, 523, 524, 525, 1059, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1112, 547, 548, 531,
	532, 549, 550, 1171, 551, 552, 553, 554, 555, 556,
	1127, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1174, 564, 565, 566, 567, 1150, 571, 572,
	0, 573, 574, 1047, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1139, 1140,
	1141, 1142, 0, 592, 0, 584, 585, 586, 1151, 587,
	1152, 1069, 588, 589, 590, 591, 0, 593, 594, 0,
	1053, 595, 596, 597, 599, 600, 598, 601, 1113, 602,
	0, 0, 603, 604, 605, 661, 1136, 1173, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1050, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 0, 0, 0, 1044,
	1045, 1881, 0, 0, 0, 0, 0, 0, 1075, 0,
	0, 0, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	1128, 0, 287, 1135, 288, 1134, 0, 1145, 289, 290,
	291, 292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176,
	622, 0, 296, 297, 1121, 0, 1102, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326,
	327, 1138, 328, 1132, 1131, 1052, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1123, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1058, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1146, 1147, 359, 1070, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1130, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 1143,
	1144, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1153, 0, 1080, 378, 0, 379, 380, 381,
	382, 383, 1116, 1117, 1120, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1158, 393, 1125, 1126, 0, 1086, 0,
	395, 396, 1160, 1118, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1154, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 1109, 1108,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1049, 269, 1167, 457, 458, 1071,
	1119, 459, 1133, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 1148, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1149, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1129, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 1059, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1112, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 1127, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1174, 564, 565, 566, 567, 1150, 571,
	572, 0, 573, 574, 1047, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1139,
	1140, 1141, 1142, 0, 592, 0, 584, 585, 586, 1151,
	587, 1152, 1069, 588, 589, 590, 591, 0, 593, 594,
	0, 1053, 595, 596, 597, 599, 600, 598, 601, 1113,
	602, 0, 0, 603, 604, 605, 661, 1136, 1173, 3539,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 1075,
	0, 0, 0, 1073, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1115, 1079, 0, 0, 0, 279,
	280, 1155, 281, 282, 283, 284, 285, 286, 615, 1128,
	0, 287, 1135, 288, 1134, 0, 1145, 289, 290, 291,
	292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176, 622,
	0, 296, 297, 1121, 0, 1102, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1156, 320, 321, 322, 1105, 1103,
	1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326, 327,
	1138, 328, 1132, 1131, 1052, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1123,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1058, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1146, 1147, 359, 1070, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1130, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1149, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1129, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1170, 522, 523, 524, 525, 1059, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1112, 547, 548, 531,
	532, 549, 550, 1171, 551, 552, 553, 554, 555, 556,
	1127, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1174, 564, 565, 566, 567, 1150, 571, 572,
	0, 573, 574, 1047, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1139, 1140,
	1141, 1142, 0, 592, 0, 584, 585, 586, 1151, 587,
	1152, 1069, 588, 589, 590, 591, 0, 593, 594, 0,
	1053, 595, 596, 597, 599, 600, 598, 601, 1113, 602,
	0, 0, 603, 604, 605, 661, 1136, 1173, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1050, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 0, 0, 0, 1044,
	1045, 1881, 0, 0, 0, 0, 0, 0, 1075, 0,
	0, 0, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	1128, 0, 287, 1135, 288, 1134, 0, 1145, 289, 290,
	291, 292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176,
	622, 0, 296, 297, 1121, 0, 1102, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326,
	327, 1138, 328, 1132, 1131, 1052, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1123, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1058, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1146, 1147, 359, 1070, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1130, 0, 0, 0,
	363, 0, 364, 365, 0, 2588, 1157, 366, 367, 1143,
	1144, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1153, 0, 1080, 378, 0, 379, 380, 381,
	382, 383, 1116, 1117, 1120, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1158, 393, 1125, 1126, 0, 1086, 0,
	395, 396, 1160, 1118, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1154, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 1109, 1108,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1049, 269, 1167, 457, 458, 1071,
	1119, 459, 1133, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 1148, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1149, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1129, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 1059, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1112, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 1127, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1174, 564, 565, 566, 567, 1150, 571,
	572, 0, 573, 574, 1047, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1139,
	1140, 1141, 1142, 0, 592, 0, 584, 585, 586, 1151,
	587, 1152, 1069, 588, 589, 590, 591, 0, 593, 594,
	0, 1053, 595, 596, 597, 599, 600, 598, 601, 1113,
	602, 0, 0, 603, 604, 605, 661, 1136, 1173, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 1075,
	0, 0, 0, 1073, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1115, 1079, 0, 0, 0, 279,
	280, 1155, 281, 282, 283, 284, 285, 286, 615, 1128,
	0, 287, 1135, 288, 1134, 0, 1145, 289, 290, 291,
	292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176, 622,
	0, 296, 297, 1121, 0, 1102, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1156, 320, 321, 322, 1105, 1103,
	1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326, 327,
	1138, 328, 1132, 1131, 1052, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1123,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1058, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1146, 1147, 359, 1070, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1130, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1149, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1129, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1170, 522, 523, 524, 525, 1059, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1112, 547, 548, 531,
	532, 549, 550, 1171, 551, 552, 553, 554, 555, 556,
	1127, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1174, 564, 565, 566, 567, 1150, 571, 572,
	0, 573, 574, 1047, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1139, 1140,
	1141, 1142, 0, 592, 0, 584, 585, 586, 1151, 587,
	1152, 1069, 588, 589, 590, 591, 0, 593, 594, 0,
	1053, 595, 596, 597, 599, 600, 598, 601, 1113, 602,
	0, 0, 603, 604, 605, 661, 1136, 1173, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1050, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 0, 0, 0, 1044,
	1045, 0, 0, 0, 0, 0, 0, 0, 1075, 1811,
	0, 2593, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	1128, 0, 287, 1135, 288, 1134, 0, 1145, 289, 290,
	291, 292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176,
	622, 0, 296, 297, 1121, 0, 1102, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326,
	327, 1138, 328, 1132, 1131, 1052, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1123, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1058, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1146, 1147, 359, 1070, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1130, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 1143,
	1144, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1153, 0, 1080, 378, 0, 379, 380, 381,
	382, 383, 1116, 1117, 1120, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1158, 393, 1125, 1126, 0, 1086, 0,
	395, 396, 1160, 1118, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1154, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 1109, 1108,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1049, 269, 1167, 457, 458, 1071,
	1119, 459, 1133, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 1148, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1149, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1129, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 1059, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1112, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 1127, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1174, 564, 565, 566, 567, 1150, 571,
	572, 0, 573, 574, 1047, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1139,
	1140, 1141, 1142, 0, 592, 0, 584, 585, 586, 1151,
	587, 1152, 1069, 588, 589, 590, 591, 0, 593, 594,
	0, 1053, 595, 596, 597, 599, 600, 598, 601, 1113,
	602, 0, 0, 603, 604, 605, 661, 1136, 1173, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 0, 0, 0, 0, 0, 0, 0, 1075,
	0, 0, 2591, 1073, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1115, 1079, 0, 0,
	0, 279, 280, 1155, 281, 282, 283, 284, 285, 286,
	615, 1128, 0, 287, 1135, 288, 1134, 0, 1145, 289,
	290, 291, 292, 293, 294, 1081, 1114, 1048, 295, 1175,
	1176, 622, 0, 296, 297, 1121, 0, 1102, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1156, 320, 321, 322,
	1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325,
	326, 327, 1138, 328, 1132, 1131, 1052, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1123, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1058, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1146, 1147, 359, 1070, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1130, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1149, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1129, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1170, 522, 523, 524, 525, 1059, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1112, 547,
	548, 531, 532, 549, 550, 1171, 551, 552, 553, 554,
	555, 556, 1127, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1174, 564, 565, 566, 567, 1150,
	571, 572, 0, 573, 574, 1047, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1139, 1140, 1141, 1142, 0, 592, 0, 584, 585, 586,
	1151, 587, 1152, 1069, 588, 589, 590, 591, 0, 593,
	594, 0, 1053, 595, 596, 597, 599, 600, 598, 601,
	1113, 602, 0, 0, 603, 604, 605, 661, 1136, 1173,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1050, 0, 0, 0,
	0, 0, 0, 0, 1046, 0, 0, 0, 0, 0,
	0, 1044, 1045, 0, 0, 0, 0, 0, 0, 0,
	1075, 0, 0, 2579, 1073, 1091, 1063, 1064, 1065, 1061,
	1062, 1074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 279, 280, 1155, 281, 282, 283, 284, 285,
	286, 615, 1128, 0, 287, 1135, 288, 1134, 0, 1145,
	289, 290, 291, 292, 293, 294, 1081, 1114, 1048, 295,
	1175, 1176, 622, 0, 296, 297, 1121, 0, 1102, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1156, 320, 321,
	322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324,
	325, 326, 327, 1138, 328, 1132, 1131, 1052, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1123, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1058, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1146, 1147, 359, 1070, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1130, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1157, 366,
	367, 1143, 1144, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1153, 0, 1080, 378, 0, 379,
	380, 381, 382, 383, 1116, 1117, 1120, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1158, 393, 1125, 1126, 0,
	1086, 0, 395, 396, 1160, 1118, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1154, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	1109, 1108, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 1049, 269, 1167, 457,
	458, 1071, 1119, 459, 1133, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1168, 470, 1169, 1148, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1149, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1129, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1170, 522, 523, 524, 525, 1059, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1112,
	547, 548, 531, 532, 549, 550, 1171, 551, 552, 553,
	554, 555, 556, 1127, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1174, 564, 565, 566, 567,
	1150, 571, 572, 0, 573, 574, 1047, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1139, 1140, 1141, 1142, 0, 592, 0, 584, 585,
	586, 1151, 587, 1152, 1069, 588, 589, 590, 591, 0,
	593, 594, 0, 1053, 595, 596, 597, 599, 600, 598,
	601, 1113, 602, 0, 0, 603, 604, 605, 661, 1136,
	1173, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 0, 0, 0, 0, 0, 0,
	0, 1075, 0, 0, 2568, 1073, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1115, 1079,
	0, 0, 0, 279, 280, 1155, 281, 282, 283, 284,
	285, 286, 615, 1128, 0, 287, 1135, 288, 1134, 0,
	1145, 289, 290, 291, 292, 293, 294, 1081, 1114, 1048,
	295, 1175, 1176, 622, 0, 296, 297, 1121, 0, 1102,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1156, 320,
	321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323,
	324, 325, 326, 327, 1138, 328, 1132, 1131, 1052, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1123, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1058, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1146, 1147, 359, 1070,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1130,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1149, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1129, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1170, 522, 523, 524, 525, 1059,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1112, 547, 548, 531, 532, 549, 550, 1171, 551, 552,
	553, 554, 555, 556, 1127, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1174, 564, 565, 566,
	567, 1150, 571, 572, 0, 573, 574, 1047, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1139, 1140, 1141, 1142, 0, 592, 0, 584,
	585, 586, 1151, 587, 1152, 1069, 588, 589, 590, 591,
	0, 593, 594, 0, 1053, 595, 596, 597, 599, 600,
	598, 601, 1113, 602, 0, 0, 603, 604, 605, 661,
	1136, 1173, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1050, 0,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 0,
	0, 0, 0, 1044, 1045, 0, 0, 0, 0, 0,
	0, 0, 1075, 0, 0, 2566, 1073, 2557, 2564, 1064,
	1065, 1061, 1062, 1074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 1128, 0, 287, 1135, 288, 1134,
	0, 1145, 289, 290, 291, 292, 293, 294, 1081, 1114,
	1048, 295, 1175, 1176, 622, 0, 296, 297, 1121, 0,
	1102, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1156,
	320, 321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	323, 324, 325, 326, 327, 1138, 2560, 1132, 1131, 1052,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1123, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1058, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1146, 1147, 359,
	1070, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1130, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1157, 366, 367, 1143, 1144, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1153, 0, 1080, 378,
	0, 379, 380, 381, 2561, 383, 1116, 1117, 1120, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1158, 393, 1125,
	1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1154,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 1109, 1108, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 2562, 428, 2559, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 1049, 269,
	1167, 457, 458, 1071, 1119, 459, 1133, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1168, 470, 1169, 1148, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1149,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1129, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1170, 522, 523, 524, 525,
	1059, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 2563, 0, 542, 543, 541, 544, 545,
	546, 1112, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 1127, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1174, 564, 565,
	566, 567, 1150, 571, 572, 0, 573, 574, 1047, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 1139, 1140, 1141, 1142, 0, 592, 0,
	584, 585, 586, 1151, 587, 1152, 1069, 588, 589, 590,
	591, 0, 593, 594, 0, 1053, 595, 596, 597, 599,
	600, 598, 601, 1113, 602, 0, 0, 603, 604, 605,
	661, 1136, 1173, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 2558, 613, 1050,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 0, 0, 0, 0,
	0, 0, 0, 1075, 0, 0, 2554, 1073, 2557, 2564,
	1064, 1065, 1061, 1062, 1074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1115, 1079, 0, 0, 0, 279, 280, 1155, 281, 282,
	283, 284, 285, 286, 615, 1128, 0, 287, 1135, 288,
	1134, 0, 1145, 289, 290, 291, 292, 293, 294, 1081,
	1114, 1048, 295, 1175, 1176, 622, 0, 296, 297, 1121,
	0, 1102, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1156, 320, 321, 322, 1105, 1103, 1104, 1111, 1107, 1106,
	1110, 323, 324, 325, 326, 327, 1138, 2560, 1132, 1131,
	1052, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1123, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1058, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1146, 1147,
	359, 1070, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1130, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 2561, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 2562, 428, 2559, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1149, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1129, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1170, 522, 523, 524,
	525, 1059, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 2563, 0, 542, 543, 541, 544,
	545, 546, 1112, 547, 548, 531, 532, 549, 550, 1171,
	551, 552, 553, 554, 555, 556, 1127, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1174, 564,
	565, 566, 567, 1150, 571, 572, 0, 573, 574, 1047,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 1139, 1140, 1141, 1142, 0, 592,
	0, 584, 585, 586, 1151, 587, 1152, 1069, 588, 589,
	590, 591, 0, 593, 594, 0, 1053, 595, 596, 597,
	599, 600, 598, 601, 1113, 602, 0, 0, 603, 604,
	605, 661, 1136, 1173, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 2558, 613,
	1050, 0, 0, 0, 0, 0, 0, 0, 1046, 0,
	0, 0, 0, 0, 0, 1044, 1045, 1091, 1063, 1064,
	1065, 1061, 1062, 1074, 1075, 0, 0, 0, 1073, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 1128, 0, 287, 1135, 288, 1134,
	0, 1145, 289, 290, 291, 292, 293, 294, 1081, 1114,
	1048, 295, 1175, 1176, 622, 0, 296, 297, 1121, 0,
	1102, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1156,
	320, 321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	323, 324, 325, 326, 327, 1138, 328, 1132, 1131, 1052,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1123, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1058, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1146, 1147, 359,
	1070, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1130, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1157, 366, 367, 1143, 1144, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1153, 0, 1080, 378,
	0, 379, 380, 381, 382, 383, 1116, 1117, 1120, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1158, 393, 1125,
	1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1154,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 1109, 1108, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 1049, 269,
	1167, 457, 458, 1071, 1119, 459, 1133, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1168, 470, 1169, 1148, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1149,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1129, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1170, 522, 523, 524, 525,
	1059, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1112, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 1127, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1174, 564, 565,
	566, 567, 1150, 571, 572, 0, 573, 574, 1047, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 1139, 1140, 1141, 1142, 0, 592, 0,
	584, 585, 586, 1151, 587, 1152, 1069, 588, 589, 590,
	591, 0, 593, 594, 0, 1053, 595, 596, 597, 599,
	600, 598, 601, 1113, 602, 0, 0, 603, 604, 605,
	661, 1136, 1173, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1050,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 0, 0, 0, 0,
	0, 1819, 0, 1075, 0, 0, 0, 1073, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 2348, 277, 278, 0, 0, 0, 0, 0,
	1115, 1079, 0, 0, 0, 279, 280, 1155, 281, 282,
	283, 284, 285, 286, 615, 1128, 0, 287, 1135, 288,
	1134, 0, 1145, 289, 290, 291, 292, 293, 294, 1081,
	1114, 1048, 295, 1175, 1176, 622, 0, 296, 297, 1121,
	0, 1102, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1156, 320, 321, 322, 1105, 1103, 1104, 1111, 1107, 1106,
	1110, 323, 324, 325, 326, 327, 1138, 328, 1132, 1131,
	1052, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1123, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1058, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1146, 1147,
	359, 1070, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1130, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1149, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1129, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1170, 522, 523, 524,
	525, 1059, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1112, 547, 548, 531, 532, 549, 550, 1171,
	551, 552, 553, 554, 555, 556, 1127, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1174, 564,
	565, 566, 567, 1150, 571, 572, 0, 573, 574, 1047,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 1139, 1140, 1141, 1142, 0, 592,
	0, 584, 585, 586, 1151, 587, 1152, 1069, 588, 589,
	590, 591, 0, 593, 594, 0, 1053, 595, 596, 597,
	599, 600, 598, 601, 1113, 602, 0, 0, 603, 604,
	605, 661, 1136, 1173, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1050, 0, 0, 0, 0, 0, 0, 0, 1046, 0,
	0, 0, 0, 0, 0, 1044, 1045, 0, 0, 0,
	0, 0, 0, 0, 1075, 0, 0, 1667, 1073, 1091,
	1063, 1064, 1065, 1061, 1062, 1074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 279, 280, 1155, 281,
	282, 283, 284, 285, 286, 615, 1128, 0, 287, 1135,
	288, 1134, 0, 1145, 289, 290, 291, 292, 293, 294,
	1081, 1114, 1048, 295, 1175, 1176, 622, 0, 296, 297,
	1121, 0, 1102, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1156, 320, 321, 322, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 323, 324, 325, 326, 327, 1138, 328, 1132,
	1131, 1052, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1123, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1058, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1146,
	1147, 359, 1070, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1130, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1157, 366, 367, 1143, 1144, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1153, 0,
	1080, 378, 0, 379, 380, 381, 382, 383, 1116, 1117,
	1120, 460, 1159, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1158,
	393, 1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1154, 1163, 411, 412, 1164, 0, 413, 0, 0,
	0, 414, 415, 418, 1109, 1108, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	1049, 269, 1167, 457, 458, 1071, 1119, 459, 1133, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1168, 470, 1169, 1148, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1149, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1129, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1170, 522, 523,
	524, 525, 1059, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1112, 547, 548, 531, 532, 549, 550,
	1171, 551, 552, 553, 554, 555, 556, 1127, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1174,
	564, 565, 566, 567, 1150, 571, 572, 0, 573, 574,
	1047, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 1139, 1140, 1141, 1142, 0,
	592, 0, 584, 585, 586, 1151, 587, 1152, 1069, 588,
	589, 590, 591, 0, 593, 594, 0, 1053, 595, 596,
	597, 599, 600, 598, 601, 1113, 602, 0, 0, 603,
	604, 605, 661, 1136, 1173, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 0, 0,
	0, 0, 0, 0, 0, 1075, 0, 0, 1599, 1073,
	1091, 1063, 1064, 1065, 1061, 1062, 1074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1115, 1079, 0, 0, 0, 279, 280, 1155,
	281, 282, 283, 284, 285, 286, 615, 1128, 0, 287,
	1135, 288, 1134, 0, 1145, 289, 290, 291, 292, 293,
	294, 1081, 1114, 1048, 295, 1175, 1176, 622, 0, 296,
	297, 1121, 0, 1102, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1156, 320, 321, 322, 1105, 1103, 1104, 1111,
	1107, 1106, 1110, 323, 324, 325, 326, 327, 1138, 328,
	1132, 1131, 1052, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1123, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1058,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1146, 1147, 359, 1070, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1130, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1157, 366, 367, 1143, 1144, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1153,
	0, 1080, 378, 0, 379, 380, 381, 382, 383, 1116,
	1117, 1120, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1158, 393, 1125, 1126, 0, 1086, 0, 395, 396, 1160,
	1118, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1154, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 1109, 1108, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 1049, 269, 1167, 457, 458, 1071, 1119, 459, 1133,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1168, 470, 1169, 1148,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1149, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1129, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1170, 522,
	523, 524, 525, 1059, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1112, 547, 548, 531, 532, 549,
	550, 1171, 551, 552, 553, 554, 555, 556, 1127, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1174, 564, 565, 566, 567, 1150, 571, 572, 0, 573,
	574, 1047, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1139, 1140, 1141, 1142,
	0, 592, 0, 584, 585, 586, 1151, 587, 1152, 1069,
	588, 589, 590, 591, 0, 593, 594, 0, 1053, 595,
	596, 597, 599, 600, 598, 601, 1113, 602, 0, 0,
	603, 604, 605, 661, 1136, 1173, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1050, 0, 0, 0, 0, 0, 0, 0,
	1046, 0, 0, 0, 0, 0, 0, 1044, 1045, 0,
	0, 0, 0, 0, 0, 0, 1075, 0, 0, 1594,
	1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1115, 1079, 0, 0, 0, 279, 280,
	1155, 281, 282, 283, 284, 285, 286, 615, 1128, 0,
	287, 1135, 288, 1134, 0, 1145, 289, 290, 291, 292,
	293, 294, 1081, 1114, 1048, 295, 1175, 1176, 622, 0,
	296, 297, 1121, 0, 1102, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1156, 320, 321, 322, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 323, 324, 325, 326, 327, 1138,
	328, 1132, 1131, 1052, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1123, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1058, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1146, 1147, 359, 1070, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1130, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1157, 366, 367, 1143, 1144, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1153, 0, 1080, 378, 0, 379, 380, 381, 382, 383,
	1116, 1117, 1120, 460, 1159, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1158, 393, 1125, 1126, 0, 1086, 0, 395, 396,
	1160, 1118, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1154, 1163, 411, 412, 1164, 0, 413,
	0, 0, 0, 414, 415, 418, 1109, 1108, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119, 459,
	1133, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1168, 470, 1169,
	1148, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1149, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1129,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1170,
	522, 523, 524, 525, 1059, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1112, 547, 548, 531, 532,
	549, 550, 1171, 551, 552, 553, 554, 555, 556, 1127,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1174, 564, 565, 566, 567, 1150, 571, 572, 0,
	573, 574, 1047, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1139, 1140, 1141,
	1142, 0, 592, 0, 584, 585, 586, 1151, 587, 1152,
	1069, 588, 589, 590, 591, 0, 593, 594, 0, 1053,
	595, 596, 597, 599, 600, 598, 601, 1113, 602, 0,
	0, 603, 604, 605, 661, 1136, 1173, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1050, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 1044, 1045,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 0,
	1585, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1115, 1079, 0, 0, 0, 279,
	280, 1155, 281, 282, 283, 284, 285, 286, 615, 1128,
	0, 287, 1135, 288, 1134, 0, 1145, 289, 290, 291,
	292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176, 622,
	0, 296, 297, 1121, 0, 1102, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1156, 320, 321, 322, 1105, 1103,
	1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326, 327,
	1138, 328, 1132, 1131, 1052, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1123,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1058, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1146, 1147, 359, 1070, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1130, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1149, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1129, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1170, 522, 523, 524, 525, 1059, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1112, 547, 548, 531,
	532, 549, 550, 1171, 551, 552, 553, 554, 555, 556,
	1127, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1174, 564, 565, 566, 567, 1150, 571, 572,
	0, 573, 574, 1047, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1139, 1140,
	1141, 1142, 0, 592, 0, 584, 585, 586, 1151, 587,
	1152, 1069, 588, 589, 590, 591, 0, 593, 594, 0,
	1053, 595, 596, 597, 599, 600, 598, 601, 1113, 602,
	0, 0, 603, 604, 605, 661, 1136, 1173, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1050, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 0, 0, 0, 1044,
	1045, 0, 0, 0, 0, 0, 0, 0, 1075, 0,
	0, 1580, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	1128, 0, 287, 1135, 288, 1134, 0, 1145, 289, 290,
	291, 292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176,
	622, 0, 296, 297, 1121, 0, 1102, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326,
	327, 1138, 328, 1132, 1131, 1052, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1123, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1058, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1146, 1147, 359, 1070, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1130, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 1143,
	1144, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1153, 0, 1080, 378, 0, 379, 380, 381,
	382, 383, 1116, 1117, 1120, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1158, 393, 1125, 1126, 0, 1086, 0,
	395, 396, 1160, 1118, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1154, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 1109, 1108,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1049, 269, 1167, 457, 458, 1071,
	1119, 459, 1133, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 1148, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1149, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1129, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 1059, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1112, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 1127, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1174, 564, 565, 566, 567, 1150, 571,
	572, 0, 573, 574, 1047, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1139,
	1140, 1141, 1142, 0, 592, 0, 584, 585, 586, 1151,
	587, 1152, 1069, 588, 589, 590, 591, 0, 593, 594,
	0, 1053, 595, 596, 597, 599, 600, 598, 601, 1113,
	602, 0, 0, 603, 604, 605, 661, 1136, 1173, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 0, 0, 0, 0, 0, 0, 0, 1075,
	0, 0, 1492, 1073, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1115, 1079, 0, 0,
	0, 279, 280, 1155, 281, 282, 283, 284, 285, 286,
	615, 1128, 0, 287, 1135, 288, 1134, 0, 1145, 289,
	290, 291, 292, 293, 294, 1081, 1114, 1048, 295, 1175,
	1176, 622, 0, 296, 297, 1121, 0, 1102, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1156, 320, 321, 322,
	1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325,
	326, 327, 1138, 328, 1132, 1131, 1052, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1123, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1058, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1146, 1147, 359, 1070, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1130, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1491, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1149, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1129, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1170, 522, 523, 524, 525, 1059, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1112, 547,
	548, 531, 532, 549, 550, 1171, 551, 552, 553, 554,
	555, 556, 1127, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1174, 564, 565, 566, 567, 1150,
	571, 572, 0, 573, 574, 1047, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1139, 1140, 1141, 1142, 0, 592, 0, 584, 585, 586,
	1151, 587, 1152, 1069, 588, 589, 590, 591, 0, 593,
	594, 0, 1053, 595, 596, 597, 599, 600, 598, 601,
	1113, 602, 0, 0, 603, 604, 605, 661, 1136, 1173,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1050, 0, 0, 0,
	0, 0, 0, 0, 1046, 0, 0, 0, 0, 0,
	0, 1044, 1045, 0, 0, 0, 0, 0, 0, 0,
	1075, 0, 0, 1486, 1073, 1091, 1063, 1064, 1065, 1061,
	1062, 1074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 279, 280, 1155, 281, 282, 283, 284, 285,
	286, 615, 1128, 0, 287, 1135, 288, 1134, 0, 1145,
	289, 290, 291, 292, 293, 294, 1081, 1114, 1048, 295,
	1175, 1176, 622, 0, 296, 297, 1121, 0, 1102, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1156, 320, 321,
	322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324,
	325, 326, 327, 1138, 328, 1132, 1131, 1052, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1123, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1058, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1146, 1147, 359, 1070, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1130, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1157, 366,
	367, 1143, 1144, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1153, 0, 1080, 378, 0, 379,
	380, 381, 382, 383, 1485, 1117, 1120, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1158, 393, 1125, 1126, 0,
	1086, 0, 395, 396, 1160, 1118, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1154, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	1109, 1108, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 1049, 269, 1167, 457,
	458, 1071, 1119, 459, 1133, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1168, 470, 1169, 1148, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1149, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1129, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1170, 522, 523, 524, 525, 1059, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1112,
	547, 548, 531, 532, 549, 550, 1171, 551, 552, 553,
	554, 555, 556, 1127, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1174, 564, 565, 566, 567,
	1150, 571, 572, 0, 573, 574, 1047, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1139, 1140, 1141, 1142, 0, 592, 0, 584, 585,
	586, 1151, 587, 1152, 1069, 588, 589, 590, 591, 0,
	593, 594, 0, 1053, 595, 596, 597, 599, 600, 598,
	601, 1113, 602, 0, 0, 603, 604, 605, 661, 1136,
	1173, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 0, 0, 0, 0, 0, 0,
	0, 1075, 0, 0, 1479, 1073, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1115, 1079,
	0, 0, 0, 279, 280, 1155, 281, 282, 283, 284,
	285, 286, 615, 1128, 0, 287, 1135, 288, 1134, 0,
	1145, 289, 290, 291, 292, 293, 294, 1081, 1114, 1048,
	295, 1175, 1176, 622, 0, 296, 297, 1121, 0, 1102,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1156, 320,
	321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323,
	324, 325, 326, 327, 1138, 328, 1132, 1131, 1052, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1123, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1058, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1146, 1147, 359, 1070,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1130,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1149, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1129, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1170, 522, 523, 524, 525, 1059,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1112, 547, 548, 531, 532, 549, 550, 1171, 551, 552,
	553, 554, 555, 556, 1127, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1174, 564, 565, 566,
	567, 1150, 571, 572, 0, 573, 574, 1047, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1139, 1140, 1141, 1142, 0, 592, 0, 584,
	585, 586, 1151, 587, 1152, 1069, 588, 589, 590, 591,
	0, 593, 594, 0, 1053, 595, 596, 597, 599, 600,
	598, 601, 1113, 602, 0, 0, 603, 604, 605, 661,
	1136, 1173, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1050, 0,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 0,
	0, 0, 0, 1044, 1045, 0, 0, 0, 0, 0,
	0, 0, 1075, 0, 0, 1301, 1073, 1091, 1063, 1064,
	1065, 1061, 1062, 1074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 1128, 0, 287, 1135, 288, 1134,
	0, 1145, 289, 290, 291, 292, 293, 294, 1081, 1114,
	1048, 295, 1175, 1176, 622, 0, 296, 297, 1121, 0,
	1102, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1156,
	320, 321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	323, 324, 325, 326, 327, 1138, 328, 1132, 1131, 1052,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1123, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1058, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1146, 1147, 359,
	1070, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	1130, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1157, 366, 367, 1143, 1144, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1153, 0, 1080, 378,
	0, 379, 380, 381, 382, 383, 1116, 1117, 1120, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1158, 393, 1125,
	1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1154,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 1109, 1108, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 1049, 269,
	1167, 457, 458, 1071, 1119, 459, 1133, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1168, 470, 1169, 1148, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1149,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1129, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1170, 522, 523, 524, 525,
	1059, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1112, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 1127, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1174, 564, 565,
	566, 567, 1150, 571, 572, 0, 573, 574, 1047, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 1139, 1140, 1141, 1142, 0, 592, 0,
	584, 585, 586, 1151, 587, 1152, 1069, 588, 589, 590,
	591, 0, 593, 594, 0, 1053, 595, 596, 597, 599,
	600, 598, 601, 1113, 602, 0, 0, 603, 604, 605,
	661, 1136, 1173, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1050,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 1075, 0, 0, 0, 1073, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1115, 1079,
	0, 0, 0, 279, 280, 1155, 281, 282, 283, 284,
	285, 286, 615, 1128, 0, 287, 1135, 288, 1134, 0,
	1145, 289, 290, 291, 292, 293, 294, 1081, 1114, 1048,
	295, 1175, 1176, 622, 0, 296, 297, 1121, 0, 1102,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1156, 320,
	321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323,
	324, 325, 326, 327, 1138, 328, 1132, 1131, 1052, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1123, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1058, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1146, 1147, 359, 1070,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1130,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1149, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1129, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1170, 522, 523, 524, 525, 1059,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1112, 547, 548, 531, 532, 549, 550, 1171, 551, 552,
	553, 554, 555, 556, 1127, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1174, 564, 565, 566,
	567, 1150, 571, 572, 0, 573, 574, 1047, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 1139, 1140, 1141, 1142, 0, 592, 0, 584,
	585, 586, 1151, 587, 1152, 1069, 588, 589, 590, 591,
	0, 593, 594, 0, 1053, 595, 596, 597, 599, 600,
	598, 601, 1113, 602, 0, 0, 603, 604, 605, 661,
	1136, 1173, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1050, 0,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 0,
	0, 0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 1061,
	1062, 1074, 1075, 0, 0, 0, 1073, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 279, 280, 1155, 281, 282, 283, 284, 285,
	286, 615, 1128, 0, 287, 1135, 288, 1134, 0, 1145,
	289, 290, 291, 292, 293, 294, 1081, 1114, 1048, 295,
	1175, 1176, 622, 0, 296, 297, 1121, 0, 1102, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1156, 320, 321,
	4472, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324,
	325, 326, 327, 1138, 328, 1132, 1131, 1052, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1123, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1058, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1146, 1147, 359, 1070, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 1130, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1157, 366,
	367, 1143, 1144, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1153, 0, 1080, 378, 0, 379,
	380, 381, 382, 383, 1116, 1117, 1120, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1158, 393, 1125, 1126, 0,
	1086, 0, 395, 396, 1160, 1118, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1154, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	1109, 1108, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 1049, 269, 1167, 457,
	458, 1071, 1119, 459, 1133, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1168, 470, 1169, 1148, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1149, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1129, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1170, 522, 523, 524, 525, 1059, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1112,
	547, 548, 531, 532, 549, 550, 1171, 551, 552, 553,
	554, 555, 556, 1127, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1174, 564, 565, 566, 567,
	1150, 571, 572, 0, 573, 574, 1047, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 1139, 1140, 1141, 1142, 0, 592, 0, 584, 585,
	586, 1151, 587, 1152, 1069, 588, 589, 590, 591, 0,
	4471, 594, 0, 1053, 595, 596, 597, 599, 600, 598,
	601, 1113, 602, 0, 0, 603, 604, 605, 661, 1136,
	1173, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1115, 1079, 0, 0,
	0, 279, 280, 1155, 281, 282, 283, 284, 285, 286,
	4470, 1128, 0, 287, 1135, 288, 1134, 0, 1145, 289,
	290, 291, 292, 293, 294, 1081, 1114, 1048, 295, 1175,
	1176, 622, 0, 296, 297, 1121, 0, 1102, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1156, 320, 321, 4472,
	1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325,
	326, 327, 1138, 328, 1132, 1131, 1052, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1123, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1058, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1146, 1147, 359, 1070, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1130, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1149, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1129, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1170, 522, 523, 524, 525, 1059, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1112, 547,
	548, 531, 532, 549, 550, 1171, 551, 552, 553, 554,
	555, 556, 1127, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1174, 564, 565, 566, 567, 1150,
	571, 572, 0, 573, 574, 1047, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	1139, 1140, 1141, 1142, 0, 592, 0, 584, 585, 586,
	1151, 587, 1152, 1069, 588, 589, 590, 591, 0, 4471,
	594, 0, 1053, 595, 596, 597, 599, 600, 598, 601,
	1113, 602, 0, 0, 603, 604, 605, 661, 1136, 1173,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1050, 0, 0, 0,
	0, 0, 0, 0, 1046, 0, 0, 0, 0, 0,
	0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062, 1074,
	1075, 0, 0, 0, 1073, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	1128, 0, 287, 1135, 288, 1134, 0, 1145, 289, 290,
	291, 292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176,
	622, 0, 296, 297, 1121, 0, 1102, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 4132, 322, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326,
	327, 1138, 328, 1132, 1131, 1052, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1123, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1058, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1146, 1147, 359, 1070, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1130, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 1143,
	1144, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1153, 0, 4133, 378, 0, 379, 380, 381,
	382, 383, 1116, 1117, 1120, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1158, 393, 1125, 1126, 0, 1086, 0,
	395, 396, 1160, 1118, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1154, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 1109, 1108,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1049, 269, 1167, 457, 458, 1071,
	1119, 459, 1133, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 1148, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1149, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1129, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 4131, 1059, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1112, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 1127, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1174, 564, 565, 566, 567, 1150, 571,
	572, 0, 573, 574, 1047, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1139,
	1140, 1141, 1142, 0, 592, 0, 584, 585, 586, 1151,
	587, 1152, 1069, 588, 589, 590, 591, 0, 593, 594,
	0, 1053, 595, 596, 597, 599, 600, 598, 601, 1113,
	602, 0, 0, 603, 604, 605, 661, 1136, 1173, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 1091, 1063, 1064, 1065, 3026, 3027, 1074, 1075,
	0, 0, 0, 1073, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1115, 1079, 0, 0, 0, 279,
	280, 1155, 281, 282, 283, 284, 285, 286, 615, 1128,
	0, 287, 1135, 288, 1134, 0, 1145, 289, 290, 291,
	292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176, 622,
	0, 296, 297, 1121, 0, 1102, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1156, 320, 321, 322, 1105, 1103,
	1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326, 327,
	1138, 328, 1132, 1131, 1052, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1123,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1058, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1146, 1147, 359, 1070, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1130, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1149, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1129, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1170, 522, 523, 524, 525, 1059, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1112, 547, 548, 531,
	532, 549, 550, 1171, 551, 552, 553, 554, 555, 556,
	1127, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1174, 564, 565, 566, 567, 1150, 571, 572,
	0, 573, 574, 1047, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 1139, 1140,
	1141, 1142, 0, 592, 0, 584, 585, 586, 1151, 587,
	1152, 1069, 588, 589, 590, 591, 0, 593, 594, 0,
	1053, 595, 596, 597, 599, 600, 598, 601, 1113, 602,
	0, 0, 603, 604, 605, 661, 1136, 1173, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1050, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 0, 0, 0, 1044,
	1045, 1091, 1063, 1064, 1065, 3024, 3025, 1074, 1075, 0,
	0, 0, 1073, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1115, 1079, 0, 0, 0, 279, 280,
	1155, 281, 282, 283, 284, 285, 286, 615, 1128, 0,
	287, 1135, 288, 1134, 0, 1145, 289, 290, 291, 292,
	293, 294, 1081, 1114, 1048, 295, 1175, 1176, 622, 0,
	296, 297, 1121, 0, 1102, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1156, 320, 321, 322, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 323, 324, 325, 326, 327, 1138,
	328, 1132, 1131, 1052, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1123, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1058, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1146, 1147, 359, 1070, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1130, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1157, 366, 367, 1143, 1144, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1153, 0, 1080, 378, 0, 379, 380, 381, 382, 383,
	1116, 1117, 1120, 460, 1159, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1158, 393, 1125, 1126, 0, 1086, 0, 395, 396,
	1160, 1118, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1154, 1163, 411, 412, 1164, 0, 413,
	0, 0, 0, 414, 415, 418, 1109, 1108, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119, 459,
	1133, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1168, 470, 1169,
	1148, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1149, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1129,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1170,
	522, 523, 524, 525, 1059, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1112, 547, 548, 531, 532,
	549, 550, 1171, 551, 552, 553, 554, 555, 556, 1127,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1174, 564, 565, 566, 567, 1150, 571, 572, 0,
	573, 574, 1047, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1139, 1140, 1141,
	1142, 0, 592, 0, 584, 585, 586, 1151, 587, 1152,
	1069, 588, 589, 590, 591, 0, 593, 594, 0, 1053,
	595, 596, 597, 599, 600, 598, 601, 1113, 602, 0,
	0, 603, 604, 605, 661, 1136, 1173, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1050, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 1044, 1045,
	1091, 1063, 1064, 1065, 1061, 1062, 1074, 1075, 0, 0,
	0, 1073, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1115, 1079, 0, 0, 0, 279, 280, 1155,
	281, 282, 283, 284, 285, 286, 615, 1128, 0, 287,
	1135, 288, 1134, 0, 1145, 289, 290, 291, 292, 293,
	294, 1081, 1114, 1048, 295, 1175, 1176, 622, 0, 296,
	297, 1121, 0, 1102, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1156, 320, 321, 322, 1105, 1103, 1104, 1111,
	1107, 1106, 1110, 323, 324, 325, 326, 327, 1138, 328,
	1132, 1131, 1052, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1123, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1058,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1146, 1147, 359, 1070, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1130, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1157, 366, 367, 1143, 1144, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1153,
	0, 1080, 378, 0, 379, 380, 381, 382, 383, 1116,
	1117, 1120, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1158, 393, 1125, 1126, 0, 1086, 0, 395, 396, 1160,
	1118, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1154, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 1109, 1108, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 1049, 269, 1167, 457, 458, 1071, 1119, 459, 1133,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1168, 470, 1169, 1148,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1149, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1129, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1170, 522,
	523, 524, 525, 1059, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1112, 547, 548, 531, 532, 549,
	550, 1171, 551, 552, 553, 554, 555, 556, 1127, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1174, 564, 565, 566, 567, 1150, 571, 572, 0, 573,
	574, 1047, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 1139, 1140, 1141, 1142,
	0, 592, 0, 584, 585, 586, 1151, 587, 1152, 1069,
	588, 589, 590, 591, 0, 593, 594, 0, 1053, 595,
	596, 597, 599, 600, 598, 601, 1113, 602, 0, 0,
	603, 604, 605, 661, 1136, 1173, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1050, 0, 0, 0, 0, 0, 0, 0,
	1046, 0, 0, 0, 0, 0, 0, 2356, 2357, 1091,
	1063, 1064, 1065, 1061, 1062, 1074, 1075, 0, 0, 0,
	1073, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 279, 280, 1155, 281,
	282, 283, 284, 285, 286, 615, 1128, 0, 287, 1135,
	288, 1134, 0, 1145, 289, 290, 291, 292, 293, 294,
	1081, 1114, 0, 295, 1175, 1176, 622, 0, 296, 297,
	1121, 0, 1102, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1156, 320, 321, 322, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 323, 324, 325, 326, 327, 1138, 328, 1132,
	1131, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1123, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1058, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1146,
	1147, 359, 1070, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 1130, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1157, 366, 367, 1143, 1144, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1153, 0,
	1080, 378, 0, 379, 380, 381, 382, 383, 1116, 1117,
	1120, 460, 1159, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1158,
	393, 1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1154, 1163, 411, 412, 1164, 0, 413, 0, 0,
	0, 414, 415, 418, 1109, 1108, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	0, 269, 1167, 457, 458, 1071, 1119, 459, 1133, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1168, 470, 1169, 1148, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1149, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1129, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1170, 522, 523,
	524, 525, 1059, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1112, 547, 548, 531, 532, 549, 550,
	1171, 551, 552, 553, 554, 555, 556, 1127, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1174,
	564, 565, 566, 567, 1150, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 1139, 1140, 1141, 1142, 0,
	592, 0, 584, 585, 586, 1151, 587, 1152, 1069, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 1113, 602, 0, 0, 603,
	604, 605, 661, 1136, 1173, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 0, 2576,
	0, 0, 0, 0, 0, 0, 2574, 2575, 270, 272,
	271, 273, 274, 275, 276, 1075, 277, 278, 0, 1073,
	0, 0, 0, 1115, 1079, 0, 0, 0, 279, 280,
	1155, 281, 282, 283, 284, 285, 286, 615, 1128, 0,
	287, 1135, 288, 1134, 0, 1145, 289, 290, 291, 292,
	293, 294, 1081, 1114, 0, 295, 1175, 1176, 622, 0,
	296, 297, 1121, 0, 1102, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1156, 320, 321, 322, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 323, 324, 325, 326, 327, 1138,
	328, 1132, 1131, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1123, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1058, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1146, 1147, 359, 1070, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1130, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1157, 366, 367, 1143, 1144, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1153, 0, 1080, 378, 0, 379, 380, 381, 382, 383,
	1116, 1117, 1120, 460, 1159, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1158, 393, 1125, 1126, 0, 1086, 0, 395, 396,
	1160, 1118, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1154, 1163, 411, 412, 1164, 0, 413,
	0, 0, 0, 414, 415, 418, 1109, 1108, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 0, 269, 1167, 457, 458, 1071, 1119, 459,
	1133, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1168, 470, 1169,
	1148, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1149, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1129,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1170,
	522, 523, 524, 525, 3019, 3020, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1112, 547, 548, 531, 532,
	549, 550, 1171, 551, 552, 553, 554, 555, 556, 1127,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1174, 564, 565, 566, 567, 1150, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 1139, 1140, 1141,
	1142, 0, 592, 0, 584, 585, 586, 1151, 587, 1152,
	1069, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 1113, 602, 0,
	0, 603, 604, 605, 661, 1136, 1173, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1091, 1063, 1064, 1065, 1061, 1062, 1074,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 2063,
	270, 272, 271, 273, 274, 275, 276, 1075, 277, 278,
	0, 1073, 0, 0, 0, 1115, 1079, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 0,
	1128, 0, 287, 1135, 288, 1134, 0, 1145, 289, 290,
	291, 292, 293, 294, 1081, 1114, 1048, 295, 1175, 1176,
	622, 0, 296, 297, 1121, 0, 1102, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 4472, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325, 326,
	327, 1138, 328, 1132, 1131, 1052, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1123, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1058, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1146, 1147, 359, 1070, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 1130, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 1143,
	1144, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1153, 0, 1080, 378, 0, 379, 380, 381,
	382, 383, 1116, 1117, 1120, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1158, 393, 1125, 1126, 0, 1086, 0,
	395, 396, 0, 1118, 0, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1154, 1163, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 1109, 1108,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1049, 269, 0, 457, 458, 1071,
	1119, 459, 1133, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 1148, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1149, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1129, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 1059, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1112, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 1127, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1174, 564, 565, 566, 567, 1150, 571,
	572, 0, 573, 574, 1047, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 1139,
	1140, 1141, 1142, 0, 592, 0, 584, 585, 586, 1151,
	587, 1152, 1069, 588, 589, 590, 591, 0, 4471, 594,
	0, 1053, 595, 596, 597, 599, 600, 598, 601, 1113,
	602, 0, 0, 603, 604, 605, 661, 1136, 1173, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 1213, 0, 0,
	1044, 1045, 0, 0, 0, 0, 0, 0, 0, 1075,
	0, 0, 0, 1073, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 1114,
	0, 295, 620, 621, 622, 0, 296, 297, 1121, 0,
	1102, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1156,
	320, 321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1146, 1147, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1157, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1153, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 1116, 1117, 1120, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1158, 393, 637,
	638, 0, 639, 0, 395, 396, 1160, 1118, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1199, 407, 409, 408, 0, 410, 1154,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 1109, 1108, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 0, 269,
	1167, 457, 458, 0, 1119, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 1205, 465, 466, 467, 0, 0,
	468, 469, 644, 1168, 470, 1169, 1148, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1149,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1170, 522, 523, 524, 525,
	651, 1207, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 229, 542, 543, 541, 544, 545,
	546, 1112, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 1150, 571, 572, 0, 573, 574, 0, 570,
	561, 231, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 1151, 587, 1152, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 1113, 602, 0, 0, 603, 604, 605,
	1569, 662, 663, 0, 607, 606, 608, 664, 1213, 0,
	0, 0, 223, 609, 610, 665, 611, 612, 613, 0,
	0, 224, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1115, 1203, 0, 1905, 0, 279, 280, 1155, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	1114, 0, 295, 620, 621, 622, 0, 296, 297, 1121,
	0, 1102, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1156, 320, 321, 322, 1105, 1103, 1104, 1111, 1107, 1106,
	1110, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1146, 1147,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1157, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	637, 638, 0, 639, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1199, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 0,
	269, 1167, 457, 458, 0, 1119, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 1205, 465, 466, 467, 0,
	0, 468, 469, 644, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1149, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1170, 522, 523, 524,
	525, 651, 1207, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 229, 542, 543, 541, 544,
	545, 546, 1112, 547, 548, 531, 532, 549, 550, 1171,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 1150, 571, 572, 0, 573, 574, 0,
	570, 561, 231, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 1151, 587, 1152, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 1113, 602, 0, 0, 603, 604,
	605, 1569, 662, 663, 0, 607, 606, 608, 664, 3179,
	0, 1213, 0, 223, 609, 610, 665, 611, 612, 613,
	0, 0, 224, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 1203, 1115, 1905, 0, 0, 0, 279, 280,
	1155, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 1114, 0, 295, 620, 621, 622, 0,
	296, 297, 1121, 0, 1102, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1156, 320, 321, 322, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1146, 1147, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1157, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1153, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	1116, 1117, 1120, 460, 1159, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1158, 393, 637, 638, 0, 639, 0, 395, 396,
	1160, 1118, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1199, 407, 409,
	408, 0, 410, 1154, 1163, 411, 412, 1164, 0, 413,
	0, 0, 0, 414, 415, 418, 1109, 1108, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 0, 269, 1167, 457, 458, 0, 1119, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 1205, 465,
	466, 467, 0, 0, 468, 469, 644, 1168, 470, 1169,
	1148, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1149, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1170,
	522, 523, 524, 525, 651, 1207, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1112, 547, 548, 531, 532,
	549, 550, 1171, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 1150, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 1151, 587, 1152,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 1113, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 1195, 0, 1213, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 1203, 1115, 1201, 0, 0,
	0, 279, 280, 1155, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 1114, 0, 295, 620,
	621, 622, 0, 296, 297, 1121, 0, 1102, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1156, 320, 321, 322,
	1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1146, 1147, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1157, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 637, 638, 0, 639,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	1199, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 0, 269, 1167, 457, 458,
	0, 1119, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 1205, 465, 466, 467, 0, 0, 468, 469, 644,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1149, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1170, 522, 523, 524, 525, 651, 1207, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1112, 547,
	548, 531, 532, 549, 550, 1171, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 1150,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	1151, 587, 1152, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	1113, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1213, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1115, 1203, 0,
	1201, 0, 279, 280, 1155, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 1114, 0, 295,
	620, 621, 622, 0, 296, 297, 1121, 0, 1102, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1156, 320, 321,
	322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1146, 1147, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1157, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1153, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1116, 1117, 1120, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1158, 393, 637, 638, 0,
	639, 0, 395, 396, 1160, 1118, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1199, 407, 409, 408, 0, 410, 1154, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	1109, 1108, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 269, 1167, 457,
	458, 0, 1119, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 1205, 465, 466, 467, 0, 0, 468, 469,
	644, 1168, 470, 1169, 1148, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1149, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1170, 522, 523, 524, 525, 651, 1207,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1112,
	547, 548, 531, 532, 549, 550, 1171, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	1150, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 1151, 587, 1152, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 1113, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1213, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1115, 1203,
	0, 1201, 0, 279, 280, 1155, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 1114, 0,
	295, 620, 621, 622, 0, 296, 297, 1121, 0, 1102,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1156, 320,
	321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1146, 1147, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1157,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 637, 638,
	0, 639, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 0, 269, 1167,
	457, 458, 0, 1119, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1149, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1170, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1112, 547, 548, 531, 532, 549, 550, 1171, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 1150, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 1151, 587, 1152, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 1113, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1213, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1115,
	0, 0, 3964, 0, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 1114,
	0, 295, 620, 621, 622, 0, 296, 297, 1121, 0,
	1102, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1156,
	320, 321, 322, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1146, 1147, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1157, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1153, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 1116, 1117, 1120, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1158, 393, 637,
	638, 0, 639, 0, 395, 396, 1160, 1118, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1154,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 1109, 1108, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 0, 269,
	1167, 457, 458, 0, 1119, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1168, 470, 1169, 1148, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1149,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1170, 522, 523, 524, 525,
	651, 1207, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1112, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 1150, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 1151, 587, 1152, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 1113, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1037, 0,
	1294, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 1804, 0, 0, 0, 279, 280, 1155,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 1299, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1156, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1157, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1158, 393, 637, 638, 0, 639, 0, 395, 396, 1160,
	640, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 0, 0, 1167, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1168, 470, 1169, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1170, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 229, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 1171, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 231, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 1569, 662, 663, 0, 607, 606, 608,
	664, 1566, 0, 1294, 0, 223, 609, 610, 665, 611,
	612, 613, 0, 0, 224, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 185, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 1299, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1158, 393, 637, 638, 0, 639, 0,
	395, 396, 1160, 640, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 0, 0, 1167, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	229, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 231, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 1569, 662, 663, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 223, 609,
	610, 665, 611, 612, 613, 1294, 1293, 224, 0, 0,
	0, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 185,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 1155, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 1299, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1156, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1157, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1158, 393, 637, 638, 0,
	639, 0, 395, 396, 1160, 640, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 0, 1167, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1168, 470, 1169, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1170, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 1171, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1294, 1293, 0,
	0, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 1591, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	1299, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1156,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1157, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1158, 393, 637,
	638, 0, 639, 0, 395, 396, 1160, 640, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 0, 0,
	1167, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1168, 470, 1169, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1170, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1294,
	1293, 0, 0, 0, 0, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 3458, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 1155, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 1299, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1156, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1157, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1159, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1158,
	393, 637, 638, 0, 639, 0, 395, 396, 1160, 640,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 1163, 411, 412, 1164, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	0, 0, 1167, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1168, 470, 1169, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 2245, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1170, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	1171, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1294, 2159, 0, 0, 0, 0, 2160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 1591, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	1155, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 1299, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1156, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1157, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1159, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1158, 393, 637, 638, 0, 639, 0, 395, 396,
	1160, 640, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 2158, 409,
	408, 0, 410, 641, 1163, 411, 412, 1164, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 0, 0, 1167, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1168, 470, 1169,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1170,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 1171, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1294, 1293, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 1591, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 1299, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1158, 393, 637, 638, 0, 639, 0,
	395, 396, 1160, 640, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 0, 0, 1167, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1213, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1115, 0, 0, 1575,
	0, 279, 280, 1155, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 1114, 0, 295, 620,
	621, 622, 0, 296, 297, 1121, 0, 1102, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1156, 320, 321, 322,
	1105, 1103, 1104, 1111, 1107, 1106, 1110, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1146, 1147, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1157, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 637, 638, 0, 639,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 0, 269, 1167, 457, 458,
	0, 1119, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1149, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1170, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1112, 547,
	548, 531, 532, 549, 550, 1171, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 1150,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	1151, 587, 1152, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	1113, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1037, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 229, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 231, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	1569, 662, 663, 0, 607, 606, 608, 664, 264, 0,
	0, 0, 223, 609, 610, 665, 611, 612, 613, 0,
	0, 224, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 185, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 264,
	2932, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 1919, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	264, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 4628, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 264, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 3408, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 264, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 1563, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 264, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 2920, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 264, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 3564,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 879, 0, 786, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	2236, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 793, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 877,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 791, 575, 576, 577, 578, 579, 792, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 0, 0,
	784, 0, 786, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 796, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 793, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 791, 575, 576, 577,
	578, 579, 792, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 1958, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 796, 0, 0, 0, 279, 280, 1155, 281, 282,
	283, 284, 285, 286, 0, 1964, 0, 287, 1954, 288,
	1970, 0, 1977, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 1980, 1981, 0, 0, 296, 297, 0,
	0, 1299, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1156, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 1138, 328, 1968, 1967,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1123, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 0, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 1966, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1157, 366, 367, 1975, 1976, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 0, 379, 380, 381, 382, 383, 0, 0, 0,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1158, 393,
	1961, 1962, 0, 1957, 0, 395, 396, 1160, 0, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	0, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 0,
	0, 1167, 457, 458, 0, 0, 459, 1969, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 0, 1168, 470, 1169, 0, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 1951, 483, 484, 485, 1952, 486, 487, 488,
	0, 489, 0, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1965, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1170, 522, 523, 524,
	525, 0, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1171,
	551, 552, 553, 554, 555, 556, 1963, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1979, 564,
	565, 566, 567, 0, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 1971, 1972, 1973, 1974, 0, 592,
	0, 584, 585, 586, 0, 587, 0, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 0, 1955, 1978, 0, 607, 606, 608, 0, 786,
	0, 0, 0, 0, 609, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 1945, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 793, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 791, 575, 576, 577, 578, 579, 792,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 786, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 796, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 793, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 2279, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 2280, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 791,
	575, 576, 577, 578, 579, 792, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 2281, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 2028, 0, 1294,
	1995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 796, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 1155, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 1299, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1156, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 1992, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1157, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1159, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1158,
	393, 637, 638, 0, 639, 0, 395, 396, 1160, 640,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 1163, 411, 412, 1164, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	0, 0, 1167, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1168, 470, 1169, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1170, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1993, 547, 548, 531, 532, 549, 550,
	1171, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	1989, 0, 1294, 1995, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 1155, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 1299, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1156, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 1992, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1157, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1158, 393, 637, 638, 0, 639, 0, 395,
	396, 1160, 640, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 0, 0, 1167, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1168, 470,
	1169, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1170, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1993, 547, 548, 531,
	532, 549, 550, 1171, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 786, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 793, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	1984, 537, 538, 539, 540, 0, 1985, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 791, 575, 576, 577, 578, 579, 792, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	1983, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 786, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 796, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	793, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 1936, 537, 538, 539,
	540, 0, 1937, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 791, 575,
	576, 577, 578, 579, 792, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 1935, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1294, 1995, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 796, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 1155, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 1299, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1156, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 1992, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1157, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1158, 393, 637, 638, 0,
	639, 0, 395, 396, 1160, 640, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 0, 1167, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1168, 470, 1169, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1170, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1993,
	547, 548, 531, 532, 549, 550, 1171, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1294, 1293, 0,
	0, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	1299, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1156,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1157, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1158, 393, 637,
	638, 0, 639, 0, 395, 396, 1160, 640, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 0, 0,
	1167, 457, 458, 3751, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1168, 470, 1169, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1170, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1294,
	1293, 0, 0, 0, 0, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 1155, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 1299, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1156, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1157, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1159, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1158,
	393, 637, 638, 0, 639, 0, 395, 396, 1160, 640,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 1163, 411, 412, 1164, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	0, 0, 1167, 457, 458, 3379, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1168, 470, 1169, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1170, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	1171, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1619, 0, 1294,
	1293, 0, 0, 0, 0, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 796, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 1155, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 1299, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1156, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 1618,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1157, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1159, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1158,
	393, 637, 638, 0, 639, 0, 395, 396, 1160, 640,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 1163, 411, 412, 1164, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	0, 0, 1167, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1168, 470, 1169, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 1617, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1170, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 1616, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	1171, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1537, 0, 1294, 1293, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 1155, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 1299, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1156, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1157, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1536, 635, 636, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1158, 393, 637, 638, 0, 639, 0,
	395, 396, 1160, 640, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 0, 0, 1167, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1168,
	470, 1169, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1170, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 1171, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1497, 0, 1294, 1293, 0,
	0, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	1299, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1156,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1157, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1158, 393, 637,
	638, 0, 639, 0, 395, 396, 1160, 640, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 0, 0,
	1167, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1168, 470, 1169, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1170, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1465,
	0, 1294, 1293, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	1155, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 1299, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1156, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1157, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	1464, 635, 636, 460, 1159, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1158, 393, 637, 638, 0, 639, 0, 395, 396,
	1160, 640, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 1163, 411, 412, 1164, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 0, 0, 1167, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1168, 470, 1169,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1170,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 1171, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1288, 0, 1294, 1293, 0, 0, 0,
	0, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 1155, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 1299, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1156, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1157, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1287, 635, 636, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1158, 393, 637, 638, 0,
	639, 0, 395, 396, 1160, 640, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 0, 1167, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1168, 470, 1169, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1170, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 1171, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1294, 1293, 0,
	0, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 1155, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	1299, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1156,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1157, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1158, 393, 637,
	638, 0, 639, 0, 395, 396, 1160, 640, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 0, 0,
	1167, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1168, 470, 1169, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1170, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1171, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1294, 1995,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 1155, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 1299, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1156, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	2035, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1157, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1158, 393,
	637, 638, 0, 639, 0, 395, 396, 1160, 640, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 0,
	0, 1167, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1168, 470, 1169, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1170, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1171,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 1294,
	1293, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 1155, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 1299, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1156, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1157, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1159, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1158,
	393, 637, 638, 0, 639, 0, 395, 396, 1160, 640,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 1163, 411, 412, 1164, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	0, 0, 1167, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1168, 470, 1169, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1170, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	1171, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 1294, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 1155, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 1299, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1156, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1157, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1158, 393, 637, 638, 0,
	639, 0, 395, 396, 1160, 640, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 0, 1167, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1168, 470, 1169, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1170, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 1171, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 2742,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	2739, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 2746, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 2945, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 2745, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 2942, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 2944,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 2941, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 2744, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 2943,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 2742, 296, 297, 623, 0,
	0, 2736, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 2739, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 2746, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 2745, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 2735, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 2744, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 2743, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1690, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 1689, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 1693, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 1691, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 1692, 606, 608,
	664, 1441, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1443, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	1205, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1438, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 1440, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 1205, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1345, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 1347, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 1205, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	697, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 696, 275, 276, 686, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	689, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 690,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 691,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 685, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 686,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 689, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 690, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 691, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 1205, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 3331, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 2890, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 2889,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 2251, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 2192, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	2199, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 2198, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 2185, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 2187, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	2155, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 1205, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 1541, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1540, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1458, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1451, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 1453,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 1278, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1277, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1268, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 1267, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1265, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 1264, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	1260, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1259, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 667, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 255, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 689, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 690, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 691, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 2288, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 264, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 2286, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 2284, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 2205, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 2014,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 2008, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 866, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 865, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 864, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 2945,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 4031, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 754, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 1315, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 1313, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 755, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	751, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	1316, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 750, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 754,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	1315, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 1313, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 755, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 751, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 1316, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 750, 656, 657,
	658, 0, 592, 0, 584, 1314, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 676, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 675, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 674,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 264, 2932, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 264, 4041, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 264, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 4301,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 3941, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 3719, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 2628, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 264, 2932, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 2929, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 2261, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 2249, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 754, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 744, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 755, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 751, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 1574, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 750,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1547, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 1546, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1531, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 1529, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	1524, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1501, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1499, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1462, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 1446,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 1283, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1282, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1274, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 615, 616, 0, 287, 617, 288, 618,
	0, 619, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 620, 621, 622, 0, 296, 297, 623, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 624, 625, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 626, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 627, 628, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	629, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 1273, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 353,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 1227, 277, 278,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 615,
	616, 0, 287, 617, 288, 618, 0, 619, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 620, 621,
	622, 0, 296, 297, 623, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 624, 625, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 626, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 627, 628, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 629, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 353, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 760, 277, 278, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 615, 616, 0, 287, 617,
	288, 618, 0, 619, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 620, 621, 622, 0, 296, 297,
	623, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 624,
	625, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 626, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 627,
	628, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 629, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 353, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	754, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 744, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 742, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 743, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 755, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 745, 526, 0, 527, 528,
	534, 535, 529, 530, 751, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 746, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 750, 656,
	657, 658, 0, 592, 0, 584, 748, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 736, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 615, 616, 0, 287, 617, 288, 618, 0, 619,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	620, 621, 622, 0, 296, 297, 623, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 624, 625, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 626, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 627, 628, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 629, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 737, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 353, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 699, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 693,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 615, 616, 0,
	287, 617, 288, 618, 0, 619, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 620, 621, 622, 0,
	296, 297, 623, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 624, 625, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	626, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 627, 628, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 629, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 353, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 671, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 3428, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 264, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 3365, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 3298, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 3296, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 3281,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 2900, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 264, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 615, 616,
	0, 287, 617, 288, 618, 0, 619, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 620, 621, 622,
	0, 296, 297, 623, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 624, 625, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 626, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 627, 628, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 629, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	737, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 353, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	614, 0, 2223, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 615, 616, 0, 287, 617, 288,
	618, 0, 619, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 620, 621, 622, 0, 296, 297, 623,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 624, 625,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 626, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 627, 628,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 629, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 0, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	353, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	615, 616, 0, 287, 617, 288, 618, 0, 619, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 620,
	621, 622, 0, 296, 297, 623, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 624, 625, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 626, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 627, 628, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 629, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1245, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 353, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 615, 616, 0, 287,
	617, 288, 618, 0, 619, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 620, 621, 622, 0, 296,
	297, 623, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	624, 625, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 626,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	627, 628, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 629, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	1178, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 353, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 615, 616, 0, 287, 617, 288, 618, 0,
	619, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 620, 621, 622, 0, 296, 297, 623, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 624, 625, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 626, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 627, 628, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 629,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 0, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 0, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 0, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	0, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 353, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1769, 0, 0, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1769, 1740, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 1760, 0, 0, 0, 0, 1787, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 1778, 0, 0, 1788, 1746, 0,
	0, 0, 0, 1768, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 1785, 0, 0, 0, 0, 0, 0, 1755,
	1756, 0, 0, 0, 0, 1778, 0, 0, 1788, 0,
	0, 0, 0, 0, 1768, 1770, 0, 1776, 0, 0,
	0, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 1784, 1761, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 1774, 1769, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 1776, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 1778, 0, 0,
	1788, 0, 0, 0, 0, 0, 1768, 1770, 0, 0,
	1774, 1769, 0, 1779, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 1784, 0, 1785, 0, 1787, 0, 0,
	0, 0, 1755, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 1761, 0, 0, 0, 0,
	0, 0, 1757, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 4287, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 1775, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0, 4286,
	0, 0, 0, 0, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 0, 1746, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1769, 0, 0, 0, 0, 0, 1767, 1741,
	0, 0, 0, 0, 1778, 0, 0, 1788, 1787, 0,
	0, 0, 0, 1768, 1770, 0, 0, 0, 0, 1762,
	1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	1784, 0, 1785, 0, 1740, 0, 0, 0, 0, 1755,
	1756, 0, 1774, 1769, 1760, 1779, 0, 0, 0, 0,
	1741, 0, 0, 1757, 0, 0, 0, 1776, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 1764,
	1765, 1766, 1775, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 4116, 0, 0, 0, 1778, 0, 0, 1788, 1763,
	1764, 1765, 1766, 0, 1768, 1770, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 1784, 0, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 0, 1776, 1788,
	0, 0, 0, 0, 0, 1768, 1770, 0, 0, 0,
	0, 0, 1779, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 1785, 0, 0, 0, 0, 0,
	0, 1755, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 1775, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 1767, 0, 3960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 1762, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1769, 0,
	0, 0, 0, 1779, 0, 1741, 0, 1767, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 1779, 0, 0, 0, 0, 1757,
	0, 0, 0, 1738, 1739, 0, 1771, 1772, 1773, 1781,
	1782, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1769, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 1740, 3896,
	0, 0, 0, 0, 1763, 1764, 1765, 1766, 1760, 0,
	0, 0, 0, 0, 1746, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0,
	3895, 1778, 0, 0, 1788, 0, 0, 0, 0, 0,
	1768, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 1785,
	0, 0, 0, 0, 0, 0, 1755, 1756, 0, 0,
	0, 0, 1763, 1764, 1765, 1766, 0, 0, 0, 0,
	0, 0, 1746, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 1788, 0, 0, 0, 0, 0, 1768, 1770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 1784, 0, 1785, 0, 0,
	0, 0, 0, 0, 1755, 1756, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1769, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	1767, 0, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 1779, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758,
	1754, 0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 0, 0, 0, 0, 3894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 1764, 1765, 1766, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754, 0,
	1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748, 0,
	0, 1778, 0, 3569, 1788, 0, 0, 0, 0, 0,
	1768, 1770, 0, 0, 0, 0, 0, 1738, 1739, 0,
	1771, 1772, 1773, 1781, 1782, 1783, 0, 1784, 0, 1785,
	0, 0, 0, 0, 0, 0, 1755, 1756, 0, 1774,
	1769, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 1776, 0, 1787, 0, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 1769, 1740, 0, 0, 0, 0, 0, 1741, 0,
	0, 0, 1760, 0, 0, 0, 0, 1787, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 1778, 0, 0, 1788, 1746, 0, 0,
	0, 0, 1768, 1770, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 1785, 0, 0, 0, 0, 0, 0, 1755, 1756,
	0, 0, 0, 0, 1778, 0, 0, 1788, 0, 0,
	0, 0, 0, 1768, 1770, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 1761, 1785, 0, 0, 0, 0, 0, 0, 1755,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 1786, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758,
	1754, 1775, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 0, 0, 0, 0, 3099, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 0, 1771, 1772, 1773,
	1781, 1782, 1783, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 1769, 0, 0,
	0, 0, 0, 0, 1741, 1767, 0, 0, 0, 0,
	0, 1779, 0, 1787, 0, 1738, 1739, 0, 1771, 1772,
	1773, 1781, 1782, 1783, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1769, 1740,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 1760,
	0, 0, 1779, 0, 1787, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 1763, 1764, 1765, 1766, 3098, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 1763, 1764, 1765, 1766, 3097, 0,
	1778, 0, 0, 1788, 1746, 0, 0, 0, 0, 1768,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 1785, 0,
	0, 0, 0, 0, 0, 1755, 1756, 0, 0, 0,
	0, 1778, 0, 0, 1788, 0, 0, 0, 0, 0,
	1768, 1770, 0, 1776, 0, 0, 0, 1738, 1739, 0,
	1771, 1772, 1773, 1781, 1782, 1783, 0, 1784, 1761, 1785,
	0, 0, 0, 0, 0, 0, 1755, 1756, 0, 1774,
	1769, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 1776, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 0, 0, 1763, 1764, 1765, 1766,
	0, 0, 0, 0, 0, 0, 1746, 4542, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 1788, 0, 0, 0,
	0, 0, 1768, 1770, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 1785, 0, 0, 0, 0, 0, 0, 1755, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754,
	0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	0, 0, 0, 0, 3096, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758,
	1754, 1775, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747,
	1748, 0, 0, 3063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 1739, 4541, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1769, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 1767, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 1779, 0, 0, 0, 1757, 0, 0, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1769, 0, 0, 0, 0, 3034, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 1760, 0, 0, 0, 0, 0,
	1746, 0, 3159, 1757, 0, 0, 3158, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 1752, 1753, 1759,
	1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743, 1744,
	1745, 1747, 1748, 0, 0, 0, 0, 1778, 0, 0,
	1788, 0, 3035, 0, 0, 0, 1768, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 1785, 0, 0, 0, 0,
	0, 0, 1755, 1756, 0, 0, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 0, 0, 1746, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 1788, 0,
	0, 0, 0, 0, 1768, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 1784, 0, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2601, 0, 1779, 0, 0, 0, 0,
	1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 1769, 0, 0, 0, 2600, 0, 0,
	1741, 0, 0, 0, 0, 0, 1767, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 1779, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 1774, 1769, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 1777, 0, 0, 0, 1787, 1752,
	1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 1778, 0, 0, 1788,
	0, 0, 0, 0, 1740, 1768, 1770, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 1784, 1757, 1785, 0, 0, 0, 0, 0,
	0, 1755, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 1764,
	1765, 1766, 0, 0, 0, 0, 1786, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 1788, 0,
	0, 0, 0, 0, 1768, 1770, 0, 0, 0, 0,
	0, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 1784, 0, 1785, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 1774, 1769, 0, 0, 1767, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 1776, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 1034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 1777, 1767, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 1762, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 1778, 0, 0,
	1788, 0, 0, 0, 0, 0, 1768, 1770, 0, 0,
	1774, 1769, 0, 1779, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 1784, 0, 1785, 0, 1787, 0, 0,
	0, 0, 1755, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 1761, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 1752,
	1753, 1759, 1780, 1758, 1754, 1775, 1751, 1749, 1750, 1742,
	1743, 1744, 1745, 1747, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 3165, 0, 0, 0, 0, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1767, 0,
	1774, 1769, 0, 0, 1778, 3160, 0, 1788, 1741, 0,
	0, 0, 0, 1768, 1770, 0, 0, 1787, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 1785, 0, 0, 0, 0, 0, 0, 1755,
	1756, 0, 0, 1740, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 1776, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 1777, 1746, 0, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1778, 0, 0, 1788, 0, 0,
	0, 0, 0, 1768, 1770, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 1785, 0, 0, 0, 1762, 0, 0, 1755,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	1738, 1739, 1779, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 1769, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1769, 0, 0, 0, 3100, 0,
	0, 1741, 0, 0, 0, 0, 1778, 0, 0, 1788,
	1787, 0, 0, 0, 0, 1768, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 1785, 0, 1740, 0, 0, 0,
	0, 1755, 1756, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 1764, 1765, 1766, 1775, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	0, 1771, 1772, 1773, 1781, 1782, 1783, 1778, 0, 0,
	1788, 0, 0, 0, 0, 0, 1768, 1770, 0, 0,
	1774, 1769, 0, 0, 0, 0, 0, 1767, 1741, 0,
	0, 0, 0, 1784, 0, 1785, 0, 1787, 0, 0,
	0, 0, 1755, 1756, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 1740, 1738, 1739, 0, 1771, 1772, 1773,
	1781, 1782, 1783, 1760, 1779, 1761, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 1774, 1769, 0, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1740,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 1764, 1765,
	1766, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 1767, 0,
	0, 0, 0, 0, 1778, 0, 0, 1788, 0, 0,
	0, 0, 0, 1768, 1770, 0, 0, 0, 0, 1762,
	0, 0, 0, 1763, 1764, 1765, 1766, 0, 0, 0,
	1784, 0, 1785, 1746, 0, 0, 0, 0, 0, 1755,
	1756, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	1738, 1739, 0, 1771, 1772, 1773, 1781, 1782, 1783, 0,
	1778, 0, 1761, 1788, 0, 0, 0, 0, 0, 1768,
	1770, 0, 0, 1769, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 1784, 0, 1785, 1787,
	0, 0, 0, 0, 0, 1755, 1756, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 1740, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 1760, 0, 0, 1761, 0,
	0, 0, 0, 0, 1757, 0, 1777, 0, 0, 0,
	0, 1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749,
	1750, 1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 1763,
	1764, 1765, 1766, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 925, 0, 971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 1778, 0, 0, 1788,
	0, 0, 933, 0, 0, 1768, 1770, 0, 0, 0,
	0, 0, 1762, 0, 0, 0, 0, 0, 947, 0,
	931, 930, 1784, 0, 1785, 0, 0, 0, 0, 0,
	0, 1755, 1756, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 932, 1776,
	0, 0, 0, 935, 0, 0, 0, 0, 979, 0,
	0, 0, 0, 0, 1761, 0, 0, 944, 945, 0,
	0, 0, 0, 1777, 0, 0, 961, 0, 1752, 1753,
	1759, 1780, 1758, 1754, 0, 1751, 1749, 1750, 1742, 1743,
	1744, 1745, 1747, 1748, 972, 937, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 938, 0, 0, 0, 0, 0, 0, 0,
	0, 970, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 1752, 1753, 1759, 1780, 1758, 1754,
	0, 1751, 1749, 1750, 1742, 1743, 1744, 1745, 1747, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 941, 942, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 949, 948, 0, 0, 0, 0, 0, 0, 943,
	0, 0, 0, 958, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 976, 969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 936, 1777, 0, 978, 0, 0,
	1752, 1753, 1759, 1780, 1758, 1754, 0, 1751, 1749, 1750,
	1742, 1743, 1744, 1745, 1747, 1748, 0, 0, 0, 934,
	0, 0, 0, 965, 966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 963, 0,
	0, 0, 0, 0, 0, 977, 959, 0, 952, 950,
	0, 955, 0, 0, 0, 0, 0, 956, 0, 0,
	927, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 967, 0, 957, 0, 0,
	0, 0, 0, 954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 975, 0, 0, 0, 0, 0,
	0, 0, 960, 0, 0, 0, 0, 0, 0, 0,
	0, 939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 964,
}

var sqlPact = [...]int{
	7285, -1000, -1000, -1000, -1000, 206, -1000, -1000, 202, 196,
	195, 192, 191, 190, 188, 187, 186, 185, 184, -1000,
	-1000, -1000, -1000, -1000, -1000, 183, -1000, -1000, 182, -1000,
	180, 179, 178, -1000, -1000, 176, -1000, 172, -1000, -1000,
	-1000, -1000, 171, 170, 168, 88744, 88201, 89280, 2202, 109260,
	95740, 1898, 79541, 108717, 78998, 108174, 1971, 8605, 107631, 2634,
	167, -1000, 107088, 166, 165, 164, -1000, 106545, -1000, 1962,
	-1000, 162, -1000, 4728, 64308, 160, 159, 157, 2485, 149,
	-1000, 147, 144, -1000, -1000, 143, -1000, 11417, 1452, -1000,
	142, 140, -1000, 5446, 93575, 139, 137, 2331, 135, 134,
	63763, 133, 132, 2242, 2754, -1000, -1000, 1889, -1000, -1000,
	129, 122, 120, 117, 116, 114, 113, 111, 110, 109,
	107, -1000, 106, 103, 102, 101, 100, -1000, 99, 97,
	96, -1000, 94, -1000, 92, 90, 89, 88, 87, 86,
	85, 83, 82, 81, 79, 74, 65, 64, 121274, -1000,
	1736, 1622, 1620, 1614, 1605, 1600, 992, 62, 61, 54,
	52, 47, 45, 43, 42, 41, 40, 39, 38, 35,
	33, 30, 27, 26, 158, 21, 20, 19, 18, 17,
	14, 11, 2397, -1000, 1562, 955, 30023, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 115156, 109796, 10, -47, 7, -1000, 3168,
	1069, 52880, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	281, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 518, 2084,
	755, -1000, -1000, -1000, 106009, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2198, -53, -1000, 1883, -1000, -1000, -1000,
	-1000, -1000, 752, -1000, 2197, 175, 2049, -1000, -1000, -1000,
	3272, 2342, 3660, 3659, 3656, 3653, 3652, 114620, 1686, 3650,
	2422, 3648, 3647, 3642, 3641, 3640, 3632, 3631, -1000, 87658,
	1014, 87115, 86572, 3274, 105473, 86029, 104930, 73041, 45033, 945,
	3271, -1000, -1000, -1000, -1000, -1000, -1000, 109796, -1000, 1013,
	-1000, -1000, 3630, 3627, 1982, 749, 95197, -1000, 1857, -1000,
	935, 31730, -1000, 1298, -1000, 31730, 279, -1000, -1000, -1000,
	-1000, -1000, -1000, 3626, 3623, 3622, 3621, 3620, -1000, -1000,
	78455, 23143, 77912, 77369, 104387, 22589, 85486, 84943, 3618, 3616,
	103844, 72487, 1011, 1389, -1000, -1000, -1000, -1000, -1000, -1000,
	-22, 70271, 3410, 109796, -1000, 278, -1000, -1000, -1000, -1000,
	-1000, -1000, 44452, 877, 43871, 784, 43290, 722, -1000, -1000,
	-1000, -1000, 71933, -1000, 103301, 2341, 3615, 3614, 1084, 3613,
	3114, 1606, 3612, 1677, 1143, 3609, 3608, 3607, 3606, 3605,
	3604, 3601, 1338, 102758, 2825, 1424, 102215, 1578, 71379, 1010,
	84400, 89280, 2577, 101672, 1233, 1228, -1000, -1000, -1000, -1000,
	2996, 2741, 2736, 1142, -1000, -1000, -1000, -1000, 55589, 8301,
	7571, 10918, 101129, 58349, 89280, 89280, -1000, -1000, -1000, -1000,
	-1000, 42709, 526, 42128, 890, -1000, -1000, 56141, 2776, -1000,
	-1000, -1000, -1000, 41547, 525, 40966, 719, 109796, -1000, 2824,
	1732, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2096, 1626, 3427,
	2633, 70825, 2015, 1403, 3216, 2994, 2993, 1503, 2990, 3600,
	2460, 2988, 2985, 2931, 2928, 2925, 1226, 2467, 520, 29442,
	2811, 1604, 40385, 1453, 1500, 2912, 2910, 3451, 1865, 1900,
	2088, 76826, 3599, 3597, 3148, 2908, 2904, 2670, 2901, -1000,
	2775, -1000, -1000, -1000, -1000, 1486, -1000, -1000, -1000, -1000,
	80077, -1000, -1000, 1761, -1000, -1000, 1761, -1000, -1000, -1000,
	-1000, -1000, 1214, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1562, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2097, -1000, 1934, -1000, -1000,
	2391, 3147, 3147, 3147, 3265, 496, 487, -1000, 158, -1000,
	-1000, 120817, -1000, -1000, 45602, 45602, 45602, 45602, 45602, 45602,
	45602, 1967, -1000, 748, -1000, -1000, 796, -1000, 747, 632,
	-1000, -1000, -1000, -1000, -1000, -1000, 745, -1000, -1000, -1000,
	-1000, -1000, -1000, 3410, -1000, 25968, -1000, -1000, -1000, 509,
	744, 45602, -1000, -1000, 3473, 3472, 987, -1000, 266, 958,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2823, 737, 734, -1000, 729, 727, 726, 724,
	721, -1000, -1000, -1000, 720, 715, 712, 709, 708, 707,
	706, 702, -1000, 1916, -1000, -1000, -1000, -1000, -1000, -1000,
	665, 663, 663, 663, -1000, 1003, -1000, -1000, -1000, 411,
	658, 315, 657, 654, 653, -1000, 701, 699, 696, 694,
	693, 690, 687, 686, 680, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 998, -1000, -1000, -1000, -1000, -23, 109796, -1000,
	518, -23, -1000, -1000, 678, -1000, 34018, 34018, 34018, -1000,
	-1000, 2180, 45602, -1000, 2407, -1000, -14, -14, 887, 54503,
	-1000, 51794, 887, 458, 809, 59974, -1000, 2772, -1000, -1000,
	677, 265, -1000, -1000, -1000, -1000, 23695, 2770, 109796, 109796,
	89280, 89280, 89280, 3596, 3041, 45602, -1000, -1000, 68090, 109796,
	89816, -1000, -1000, 3361, 64844, 67554, 109796, 2822, 67018, 3594,
	-1000, -1000, -1000, -1000, -1000, 3014, 3591, 3590, 3585, -1000,
	109796, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 227, 3011,
	-1000, -1000, 93032, 227, 3003, -1000, 227, 3000, -1000, 92496,
	-1000, -1000, 2092, 2972, -1000, -1000, 236, 2970, -1000, -1000,
	-1000, 235, 2969, -1000, -1000, 264, -78, 2966, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	120817, -1000, -1000, -1000, 66475, -1000, 3145, -1000, -1000, 109796,
	-1000, 45602, -1000, 3360, 1586, 74134, 3306, -33, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2389, 2383, 1156, 2229, -1000,
	3063, 1404, -1000, 31730, 3102, -1000, -1000, -1000, 254, 23695,
	-1000, -1000, -1000, -1000, -1000, -1000, 3236, 2965, 1429, -1000,
	2228, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2119,
	2963, -1000, 2046, 2962, 2100, -1000, -1000, 2201, -1000, 3137,
	-1000, -1000, 1621, 2960, -13, -1000, -1000, 2118, -1000, -1000,
	-1000, 1881, -1000, 974, 2957, -1000, 83857, 57797, 56141, 70271,
	-27, -1000, -1000, -1000, -1000, -223, -1000, 22035, 120817, -1000,
	-1000, -1000, -1000, 1609, 120817, 932, -1000, -1000, 2956, -1000,
	120817, 927, -1000, -1000, 2952, -1000, 2821, -1000, -1000, 2304,
	-1000, -1000, 3582, -1000, -1000, 3581, -1000, 3579, 3578, 3577,
	-1000, 1672, 1871, 3570, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 83321, 2166, -1000, -1000, 82235, 2819, -1000, 2303,
	3304, -1000, 82778, 1007, -1000, 974, 2302, -1000, 91960, 1041,
	2301, -1000, 3569, 3248, 2571, 974, 2298, -1000, -1000, -1000,
	-1000, -1000, 1004, -1000, 61597, -1000, 61597, -1000, 1469, -1000,
	114084, -14, 89280, 3410, -1000, -52, -1000, -1000, -1000, 1069,
	-1000, 55046, -1000, 55046, 94654, 73593, 962, 735, 63220, 120817,
	-1000, -1000, -1000, -1000, 120817, -1000, -1000, -1000, -152, 2632,
	-1000, 73593, 57245, 120817, -1000, -1000, -1000, -1000, 120817, -1000,
	-1000, -1000, 73593, 82235, -1000, 100586, 81699, -1000, -1000, 1336,
	2458, -1000, -1000, -1000, 73593, 1289, 73593, 73593, 73593, -1000,
	100043, -1000, -1000, 1908, 1213, 3140, 1903, 89280, -1000, 1727,
	-1000, -1000, -1000, 3203, 109796, -1000, -1000, 2817, -1000, 65921,
	91424, -1000, 90888, -1000, 90352, -1000, 89280, -1000, 89280, -1000,
	3568, 3564, 3562, -1000, -1000, 3559, -1000, 3557, 3196, -1000,
	120817, 3195, -1000, 3556, 3298, 2811, 120817, -1000, 2976, 1624,
	1599, 109796, -1000, -1000, 109796, -1000, 109796, -1000, -1000, -1000,
	1434, -1000, -1000, 2385, -1000, -1000, -1000, -1000, 89280, 1243,
	-1000, -1000, -1000, -1000, -1000, -1000, 2893, 3552, 1589, -1000,
	1684, -1000, 2768, 3185, -1000, 1322, -1000, -1000, 240, -1000,
	-1000, -33, -1000, 113548, -1000, 2391, -1000, 109796, -1000, 2390,
	2786, 2807, 1603, 2145, 2517, -1000, 39804, 2468, 49016, 2218,
	158, -1000, -1000, 158, 158, 31161, -1000, -1000, 64844, 64844,
	23695, 1217, 45602, 45602, 45602, 45602, 45602, 45602, 45602, 45602,
	45602, 45602, 45602, 45602, 45602, 45602, 45602, 45602, 45602, 45602,
	45602, 45602, 45602, 45602, 45602, 45602, 45602, 45602, 45602, 45602,
	45602, 45602, 45602, 45602, 45602, 45602, 45602, 2125, 45602, 1211,
	45602, 45602, 45602, 45602, 2281, -1000, -1000, 1824, 576, 1931,
	-1000, 3398, 3398, 3398, 1311, 1311, 121079, 121079, 612, 3551,
	796, -1000, 45602, -1000, 118, 45602, 24249, -1000, 487, 9328,
	2288, -1000, 484, 24830, -1000, -1000, -1000, 25968, 632, 39223,
	45602, 988, 120817, -1000, -1000, 1439, 3423, 21482, 2834, 2664,
	674, 807, 661, 28861, 28280, 27699, 27118, 659, 45602, 45602,
	45602, 45602, 45602, 45602, 45602, 45602, -1000, -1000, 3442, -1000,
	3423, -1000, -1000, -1000, -1000, 3423, 1147, 1146, 3423, -1000,
	3423, 3423, 10534, 10534, 38654, 38073, 37492, 49585, 36911, 45602,
	26537, 36330, 35749, -1000, 109796, -23, 3359, 45602, 156, -1000,
	119439, -1000, 156, 156, 673, -65, 120817, 2440, 2440, 53421,
	2299, 1981, 1981, 1981, -1000, 887, 17029, 887, 98966, 2005,
	887, 887, 251, 250, 477, 51253, 2407, 98966, 765, 671,
	4, 2, 1, -1000, -1000, -6, -10, -1000, -1000, 89280,
	670, 24249, 23695, 248, 1890, -67, 2487, 2477, 2475, -1000,
	2473, -1000, 1638, -73, 1203, 89280, 109796, 3550, -103, -1000,
	6219, -75, -1000, 1120, 246, 3423, -1000, -1000, -1000, -1000,
	-1000, 3548, 3546, -1000, 997, 667, 666, 664, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 665, 663, 663, 663,
	-1000, 411, 658, 315, 657, 654, 653, -1000, -1000, -1000,
	-1000, -1000, 2764, 89280, 109796, 3542, -223, 89816, -68, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 109796, -1000, -1000,
	-1000, 3541, -1000, 89280, -1000, -1000, 89280, 227, 2946, -1000,
	89280, -1000, 89280, 226, 2944, -1000, -1000, 109796, -1000, 89280,
	89280, -1000, 109796, 109796, 109796, 73593, 73593, 237, -1000, 89280,
	873, -76, 1089, -33, -1000, -1000, -1000, 1761, -1000, 1786,
	-1000, -1000, -1000, -1000, -1000, -1000, 1346, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 987, -1000, -1000, -1000, -1000,
	-1000, -1000, 3413, 3403, -24, -1000, -1000, 23695, -1000, -37,
	1534, 1758, 1193, -1000, 76283, 2190, 3146, 3540, 2560, 3126,
	1468, -1000, 1430, -1000, 3282, 80077, 3324, 3336, 80, -1000,
	2759, -1000, -1000, 934, 1573, 1588, 1192, 1189, 80077, 2046,
	-1000, 64844, -1000, 2513, 3261, 1373, 1414, 1373, 1373, 1371,
	-1000, 80077, 1587, 1188, 1184, 1181, 1821, 1807, -1000, -1000,
	1895, -1000, 1180, 1178, 835, 1788, -1000, -40, 3318, 3335,
	78, -1000, 2757, 1174, -1000, -1000, -1000, 3258, 89280, 23695,
	1526, 1522, 1514, 1563, 1173, -25, -1000, 3316, 1172, 1171,
	-1000, 4662, -1000, 73593, 2055, 2940, 2621, 879, 2618, -1000,
	-1000, -1000, 879, -27, 70271, 109796, 245, -1000, 118, 45602,
	45602, 118, 45602, 118, 3297, 2939, -1000, -1000, -1000, -1000,
	-1000, 3539, 1847, 2408, -1000, -1000, 652, 2297, 2756, 109796,
	2501, -28, 89280, -1000, 65385, 2933, 68631, 2046, 2296, -1000,
	-1000, 81156, -1000, 2927, 518, 2295, -1000, 672, 3536, 2924,
	-1000, 113012, -1000, 3145, 1236, 2919, 1051, 523, 3358, -1000,
	523, 62138, -1000, 109796, -1000, -14, 5638, 75211, -81, -82,
	475, -1000, 99507, 109796, 1047, 75747, 109796, 3091, 972, 56141,
	-1000, 56141, -84, -152, 2616, 1408, 962, 962, 879, -1000,
	879, -1000, 89280, 2806, -1000, -1000, 73593, 962, 962, 962,
	-1000, -1000, -1000, -1000, 3529, 3525, 3524, 3523, -1000, -1000,
	973, 89280, 109796, 89280, -1000, 244, -1000, 109796, -1000, 109796,
	109796, 89280, -1000, 973, 109796, 973, 109796, 973, 109796, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 118, 45602, -1000, -1000,
	3522, 1484, -1000, 2804, -1000, 2788, -1000, 25, -1000, -1000,
	-1000, -1000, -1000, -1000, 1842, -1000, -1000, -1000, -1000, 89280,
	89280, 89280, 89280, 109796, 3074, -1000, 109796, 3079, 89280, -1000,
	80077, -1000, 2390, 2786, -1000, -1000, -1000, -1000, -1000, -1000,
	1661, 2089, -1000, 2451, -1000, 1445, -1000, -1000, -1000, 120817,
	50137, -1000, -1000, 120817, 1721, -1000, 48447, 47878, -1000, -1000,
	1666, 89280, 2506, -1000, 2506, -209, -1000, 119078, 2449, 89280,
	-1000, -1000, -1000, -1000, -1000, 924, 1440, 1440, 1237, 1237,
	1237, 1237, 3296, 5670, 3645, 6216, 6312, 6312, 369, 369,
	369, 369, 369, 6312, 4958, 1311, 1311, 4958, 4958, 4958,
	4958, 4958, 1311, 1311, 1311, 6312, 6312, 6312, 121079, 120883,
	9953, 45602, 45602, 1167, 1793, 576, 9203, 45602, 7340, 7340,
	7340, 7340, -1000, 1524, -1000, -1000, -1000, -1000, 2742, 651,
	49585, 49585, -1000, -1000, -1000, -1000, 25399, 45602, -1000, -1000,
	-1000, -1000, 35168, -1000, -1000, 118404, -315, 474, -171, -54,
	-1000, 45602, 45602, 45602, 473, -1000, 241, 45602, 109796, -1000,
	15129, 764, -89, -1000, -92, 1406, -1000, 45602, -1000, -1000,
	1166, -1000, 1165, 1163, 1162, -1000, 650, 472, -1000, 233,
	-1000, 1977, 648, 647, 45602, -1000, -1000, -1000, -1000, -1000,
	118363, -1000, -1000, 117997, -1000, -1000, 117956, -1000, -1000, 117734,
	-1000, -1000, -1000, 120620, 13904, 13755, 12456, 8625, 11859, 11220,
	-97, 471, -98, 463, 918, 906, 462, 460, 440, -100,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -111, 439, -1000, 2733, -171, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 434, -1000, 431, -1000, 120449,
	-171, 423, 5146, -1000, 49585, 49585, 49585, -1000, 421, -1000,
	118990, -1000, 120187, 34599, 34599, 34599, 420, 120007, 45602, -171,
	-114, -1000, -116, -1000, -1000, 517, -122, 989, 34018, 52337,
	23695, -1000, 989, 989, 45602, -1000, 45602, 2464, -1000, -1000,
	-1000, -1000, 2463, 1892, 2440, 53421, -1000, -1000, -1000, -1000,
	98966, -1000, 3410, 2630, -1000, 98966, -1000, -1000, 109796, 518,
	-1000, 98966, 98966, 23695, 887, -1000, 887, 98966, 584, -1000,
	-1000, -1000, -1000, -1000, 419, 58890, -54, 220, 23695, 974,
	-1000, -1000, 2559, 2559, 2559, 2559, -1000, -1000, 109796, 1161,
	-31, -127, -1000, 3375, -1000, 1912, -1000, 64844, -1000, 795,
	1111, 23695, -1000, -1000, -1000, 644, -1000, 3423, 3423, -1000,
	3423, 109796, 2731, 148, -1000, 125, 68631, 68631, 3518, -1000,
	-1000, 227, -1000, 89280, 227, 227, -1000, 89280, 89280, 2092,
	-1000, 236, -1000, 235, -1000, -1000, -78, -1000, 983, 31730,
	-1000, 1761, -1000, -1000, 1513, -1000, 1855, -1000, 1134, -1000,
	-1000, -1000, -1000, 31730, -1000, 4465, 109796, 109796, 89280, -1000,
	109796, -1000, 1936, 68631, -1000, 2294, 112476, 2287, 64844, 109796,
	-1000, -1000, 643, 947, 2448, 2447, 1045, 109796, 109796, 2446,
	111940, 111404, -1000, 3514, 109796, 1919, 45602, 3255, 2152, 2280,
	118, 118, -1000, -1000, 118, 642, 1287, 89280, 89280, 109796,
	68631, 89280, 1974, -1000, -1000, -1000, -1000, -1000, 80613, -1000,
	-1000, 3429, 3428, -1000, 1373, -1000, -1000, -1000, 1373, 2046,
	1814, 109796, 68631, 89280, 68631, 109796, 109796, -1000, 1553, 109796,
	1451, -1000, 835, 1940, 118, 118, -1000, -1000, 118, 640,
	23695, 1850, -1000, 2856, 109796, 3470, 110868, 3468, 109796, 109796,
	109796, 68631, 3174, 109796, 109796, 68631, 4662, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 69735, 1057,
	974, 1552, 1159, 1155, 80077, 56141, 971, 56141, 2592, -1000,
	-1000, 20929, -1000, 120817, 120817, -1000, 120817, -1000, 65385, 109796,
	-1000, 1006, 109796, 75747, 950, 2917, 61056, -223, 962, 73593,
	89280, -28, 2501, 109796, -1000, -1000, 2046, 2914, 518, 2293,
	-1000, 73593, 3356, 2913, 636, 3513, 3511, -1000, 89280, 2163,
	2289, -1000, -1000, 110332, 3024, 835, 109796, 989, 53421, 1820,
	-1000, 59433, 1024, 109796, 1630, 124, -1000, -1000, -1000, 9,
	109796, -1000, 607, -1000, -1000, 5638, 5638, 962, -280, 635,
	-1000, 871, 869, 56693, 73593, -124, -1000, -1000, -1000, -1000,
	2287, 89280, 109796, 1278, 2568, 109796, -125, -1000, 213, 633,
	-1000, 2984, -1000, -152, -1000, 972, 56141, 2725, 2721, -1000,
	-1000, 982, -1000, 1254, 962, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -15, 109796, -223, -223,
	-30, -31, -1000, 973, -1000, 973, -1000, 973, -1000, 120817,
	-1000, -1000, 1475, 1458, 109796, -1000, 23695, 109796, 89280, 23695,
	89280, 2785, 2784, -1000, -1000, -1000, 109796, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1063, -1000, 1721, 2053, -1000, 632,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2364,
	-1000, -32, 31161, 893, -1000, -1000, 89280, -19, 45602, 45602,
	8751, 7911, 45602, 49585, 49585, -1000, 45602, 5939, -1000, -1000,
	-1000, -1000, -1000, 2719, 631, 45602, 64844, 4703, 2122, -1000,
	418, 10388, 4958, -1000, 45602, -1000, 417, 33449, -1000, 119588,
	-59, -132, -1000, 17595, -171, -133, -1000, -1000, 794, -1000,
	2938, -1000, 45602, 119810, 2319, 2000, 1717, 1491, 3423, 3466,
	20376, -1000, 62679, 990, 2017, 117372, -1000, -1000, -1000, -1000,
	64844, 64844, 45602, 45602, -1000, 45602, 45602, 45602, -1000, -1000,
	-1000, 3423, 896, -1000, -1000, -1000, 896, -1000, -1000, 1373,
	-1000, 1373, -1000, 45602, -1000, -1000, 2713, 45602, -1000, 64844,
	64844, 49585, 49585, 49585, 49585, 49585, 49585, 49585, 49585, 49585,
	49585, 49585, 49585, 49585, 49585, 49585, 49585, 49585, 49585, 49585,
	2412, 49585, 3394, 3394, 3394, -1000, 2782, 2713, 45602, 45602,
	64844, 408, 404, 392, -1000, 45602, -171, -1000, -1000, 5638,
	629, -1000, 2350, -1000, 2662, -1000, 45602, -1000, -121, -1000,
	2407, -1000, -1000, 2662, 2662, -138, 120817, 53421, 53421, -1000,
	628, 45602, 2462, -1000, -1000, 762, -313, -1000, 868, -1000,
	-1000, -1000, -1000, -1000, 518, -1000, -1000, -1000, 212, 98966,
	98966, 760, -1000, -146, -1000, -1000, -151, -1000, 3354, 390,
	23695, -1000, 989, 2607, -1000, -1000, -1000, -1000, -1000, -1000,
	-223, 109796, 109796, 2044, 3465, -1000, 3426, 793, 759, 211,
	3423, 389, 382, 379, -223, 109796, 109796, 109796, -1000, -1000,
	-1000, -1000, 227, -1000, -1000, -1000, 226, -1000, -1000, -1000,
	-1000, 2511, -1000, -33, -1000, -1000, -1000, 45602, -1000, -1000,
	3142, 1152, 1151, -1000, -1000, -1000, -1000, 2760, -1000, 2911,
	-1000, 2279, -1000, 1029, -1000, 1538, -1000, 45602, 626, 2561,
	624, 623, 3510, 2039, 3508, 1046, 2895, 2092, 2888, 2092,
	-1000, -1000, -1000, 940, -1000, 120817, 2152, -1000, 621, 618,
	-1000, -37, 1521, 1757, 1141, 980, -1000, -1000, 45602, 45602,
	98430, -1000, 456, 3137, -20, -1000, -1000, -1000, 1547, 1137,
	1135, -1000, -1000, -1000, -1000, 2046, 1537, 1133, 1132, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 979, -1000, 2848, 2847,
	898, 109796, -1000, 978, -1000, -1000, 45602, -1000, -40, 1131,
	3314, 2278, 89280, -1000, 2092, 2876, 1129, -1000, 1128, -1000,
	-1000, -1000, 3310, 3308, 1145, -1000, -1000, -1000, -1000, -1000,
	69183, -1000, 109796, 68631, 89280, 1813, 879, -1000, 2116, 879,
	971, 2705, -1000, 2496, 977, 89280, 3506, 370, -153, -41,
	64844, 3351, -1000, 2091, 610, 89280, 897, -1000, 3410, -1000,
	-1000, -1000, 975, -1000, 3303, 89280, 3350, 2874, 974, 118,
	89280, 3449, -1000, -1000, 3347, 89280, 2872, 2153, 2270, 2396,
	835, 74675, 974, 2010, -72, -1000, 1630, 32868, 3135, -154,
	-1000, -1000, -1000, 989, 62138, 53421, 45602, 3505, -156, -1000,
	-1000, -1000, -1000, -1000, 96281, 96281, 73593, 73593, 73593, 962,
	109796, 109796, 75747, -1000, -1000, 617, 109796, 109796, 616, -1000,
	109796, 109796, 3504, 73593, -42, 614, -1000, 867, 866, 865,
	-1000, -1000, -1000, -1000, -1000, 972, -1000, -152, 56141, 118,
	-1000, 2040, 89280, -1000, 19823, -1000, -1000, -1000, -1000, -1000,
	-1000, 973, -1000, -1000, 1946, 2196, 1946, 1669, 1651, -1000,
	-1000, 2052, -1000, -1000, -1000, -1000, 2528, 3152, 23695, 3315,
	7340, 45602, 45602, 4769, 785, 282, 7340, 45602, 45602, 64844,
	564, -159, 45602, 45602, -1000, 45602, 758, 120817, 3464, 45602,
	352, 350, -1000, -1000, -1000, 3418, -1000, -1000, -1000, 120817,
	45602, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 337, -1000,
	210, -1000, -1000, -1000, 115692, -1000, 45602, 336, 3242, -1000,
	332, 319, 9625, 8012, 117284, 116919, 116868, 313, -1000, -1000,
	312, 310, 120817, 2782, 120817, -1000, -1000, 829, 829, 1351,
	1351, 1351, 1351, 3394, 577, 1130, 406, 354, 354, 354,
	539, 600, 600, 354, 354, 354, 2699, 2419, 611, 6407,
	-1000, -1000, 120817, 120817, 307, -1000, -1000, -1000, -171, 306,
	5638, -1000, 2658, 3237, 120817, -1000, 53421, 2658, 2658, -1000,
	-1000, 1892, 109796, 120817, 53421, -1000, 2630, -1000, 18159, -1000,
	23695, -1000, -1000, -1000, -1000, 3410, -1000, 58890, -1000, 605,
	-1000, 119, -1000, 2607, -1000, 862, -1000, -1000, 73593, 73593,
	-223, -148, -1000, -1000, 757, 3502, 792, 23695, 304, -1000,
	-1000, -1000, -223, -223, -223, -1000, -1000, -1000, 3089, 120817,
	109796, 109796, 1388, 97894, 109796, 2871, -1000, 1983, -1000, 1045,
	116697, 53962, -1000, 53962, 109796, -1000, -1000, 1802, 2472, 3501,
	1075, -1000, 3208, 109796, -1000, 109796, -1000, -1000, -1000, 109796,
	109796, 89280, 109796, -1000, 68631, 2859, -161, 120817, -50, -1000,
	860, -1000, 1383, -1000, 19270, 109796, 68631, 89280, 109796, 68631,
	89280, 1965, -1000, -1000, 2846, -1000, 2857, -166, 23695, -1000,
	3463, 3459, 2870, 3213, -1000, 109796, 3457, 109796, 89280, 3087,
	-1000, -1000, -1000, -1000, -1000, 1496, 1121, 1119, 971, -55,
	604, -1000, 857, -1000, -1000, 847, 971, -1000, 73593, 56141,
	3498, 518, -1000, 2551, -1000, 94111, 2102, 118, -1000, 3492,
	96822, 603, -1000, 2038, -1000, 662, -1000, 2309, 68631, 2046,
	118, 89280, -1000, -1000, 518, 302, -61, -1000, 2899, 1037,
	23695, 89280, 2869, 2402, 835, 74675, -1000, 1236, 2517, -1000,
	-62, -1000, 619, 118, 2010, -1000, -72, 120817, -1000, 844,
	-1000, -169, -1000, -1000, 301, -1000, 3086, 3085, -1000, 2665,
	53962, 602, 601, 109796, 3083, -1000, -1000, -172, 2291, 2291,
	73593, 56141, 73593, -1000, 972, 879, -1000, 2311, -1000, -1000,
	-1000, -1000, -1000, 23695, 1509, -1000, 599, 598, -1000, -1000,
	-1000, -1000, 3152, 7340, 7340, 45602, 45602, 45602, 7340, 564,
	-177, -1000, 7340, 7340, -171, -1000, -1000, 119588, -1000, -1000,
	-1000, 120817, -1000, 18717, 1952, -1000, 116500, -1000, 31161, -1000,
	-1000, 45602, 45602, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 49585, 2698, 597, 64844, -1000, -1000, 300, 985, 45602,
	47309, 2407, 985, 985, -1000, -179, -1000, -1000, -1000, 3410,
	119, -1000, -1000, 3491, 23695, -1000, 73593, -1000, -1000, 3490,
	790, -1000, 3488, -1000, -1000, -1000, -1000, -1000, 2605, 3337,
	-1000, 1779, -1000, 109796, -1000, 109796, -1000, 23695, 109796, 2691,
	1245, -1000, 947, 2445, 589, 49585, 89280, 606, -1000, 3344,
	2617, -187, -1000, 109796, 45602, 109796, -188, -189, 2239, -1000,
	-1000, 2235, 45602, -1000, -1000, 64844, 588, 2092, 2092, -190,
	-195, -1000, -1000, -1000, 45602, 1105, 109796, 32299, -1000, 3486,
	3137, -1000, -1000, -1000, -1000, -1000, -1000, 109796, -1000, 45602,
	1102, -1000, -1000, -1000, 3456, 2092, 23695, 2092, -1000, 2092,
	3213, 1074, 109796, 68631, 89280, -1000, 2141, 2141, 73593, 56141,
	-1000, -78, 971, -1000, 3333, 2545, 3484, -1000, -1000, -1000,
	-1000, 2417, -1000, -1000, 109796, 2411, 965, -1000, -196, -1000,
	843, 838, 75747, 950, 936, -1000, -87, 587, -1000, 837,
	-1000, -1000, -1000, -1000, 518, 3332, -1000, 3455, 581, 579,
	109796, 2144, 578, 23695, 3131, 835, 74675, -1000, 3024, 1630,
	-1000, 2248, 109796, 3122, -1000, 2517, 576, -1000, 962, 574,
	566, 2413, 2413, -197, 53962, 53962, -198, 565, 962, -1000,
	-203, -1000, -1000, -1000, -1000, -1000, -93, -1000, 804, 711,
	-1000, -1000, 89280, 89280, 45602, 45602, -1000, 7340, 7340, 7340,
	-1000, 296, -1000, -1000, 2010, 3232, -1000, -94, 116278, 116237,
	335, 49585, 64844, -206, -1000, -1000, 109796, 120817, -117, -1000,
	120817, 551, 544, 430, -1000, -1000, -1000, 585, -1000, -1000,
	-1000, 3483, -1000, 97358, 109796, -1000, -1000, 1993, -1000, -1000,
	-1000, 109796, 2262, -1000, -1000, -1000, 1039, 45602, 6407, 543,
	45602, -1000, 3331, -1000, 2526, 2729, 1780, 53962, -1000, 3152,
	-1000, 16368, -1000, 1033, 1764, -1000, -1000, 120817, 3213, 53962,
	-1000, -1000, 542, 541, 120817, 538, 836, 2695, -1000, -1000,
	-1000, -1000, 120817, 537, 3314, -1000, -1000, -1000, -1000, 2092,
	89280, -1000, -1000, -1000, -1000, -211, -1000, -1000, 1818, 118,
	1944, 2601, -1000, 2102, 536, -1000, -1000, 2095, 2505, -1000,
	96822, 31730, 31730, 295, 3330, 936, -1000, 3406, -1000, 3073,
	3073, 45602, 3329, 118, -1000, 3449, 53962, -1000, 89280, 53962,
	2139, 1895, 2384, 74675, -1000, 2396, -1000, -1000, -212, 109796,
	1630, -1000, -1000, 73593, 73593, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1033, -218, -221, -1000,
	73593, -1000, -1000, 2311, -1000, 109796, -1000, 109796, -1000, -1000,
	-226, -227, -1000, 2028, 45602, 31161, -1000, -1000, 335, -228,
	-1000, -144, -1000, 3328, 47309, 3482, 3481, 3480, -1000, -1000,
	-1000, 1750, -1000, -1000, -1000, 2868, 2656, 15784, 2352, 109796,
	461, -1000, 2723, -1000, -1000, 2545, 522, -1000, -1000, -1000,
	-1000, 893, 109796, 2545, 2655, 89280, 1038, -229, 1946, 1946,
	45602, 30592, 1964, 45602, -1000, -1000, 3213, -1000, 2687, 3409,
	-1000, 950, -1000, 1959, 109796, -1000, 3200, -1000, 3082, -1000,
	-1000, -1000, 2551, 118, -1000, -1000, -1000, -237, 120817, 118,
	-1000, 289, -244, 1037, -245, 89280, 1835, -1000, 835, -1000,
	2402, 989, -1000, -1000, -246, -252, 1780, 1033, 1940, -253,
	-1000, -254, -255, -1000, -1000, 287, 46740, 46740, 46740, -171,
	-209, -1000, 109796, 521, -1000, -1000, -1000, -1000, -1000, 2842,
	969, -1000, 2104, 1795, 286, 1061, -1000, -1000, 1940, 109796,
	-1000, -1000, -1000, 968, 518, -1000, 45602, 1033, -260, -1000,
	1023, -261, -1000, 1020, -262, -1000, 2693, -1000, -263, 2092,
	966, 3295, -1000, -1000, -1000, 2095, 89280, -268, -1000, -1000,
	2175, -1000, 2545, 965, -1000, -1000, -1000, 1033, 515, 1780,
	514, 1397, 835, -1000, -1000, 1373, 3131, 3030, 962, 962,
	2545, 1780, 961, -1000, 962, -1000, -1000, -1000, 2903, -1000,
	50689, 2158, 1613, 118626, 2903, 2903, -1000, -1000, 109796, 3279,
	-1000, 2132, 2129, 1455, -1000, -1000, -1000, -1000, -1000, -1000,
	2617, -273, 3278, 2352, 120817, 2545, -1000, 1946, 2581, -1000,
	1946, 2689, -1000, 1958, -1000, -1000, -1000, 1612, 3397, 2369,
	512, -1000, 109796, 1625, 1623, 3479, 1944, 2095, 1780, 53962,
	2545, 53962, -1000, -1000, 109796, -1000, 1895, 1272, -1000, -1000,
	1940, 2545, 989, 511, -1000, -1000, 1690, 3340, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 834, -1000, 3052, -1000,
	1060, 2075, 2075, 989, -1000, 827, 2104, -1000, -1000, 510,
	-1000, 508, -1000, 2032, -1000, -1000, -1000, -1000, 109796, -1000,
	-1000, 3477, -1000, 950, -1000, 2545, -278, 1940, -279, -1000,
	-223, 1835, -1000, 1464, 961, 1940, -1000, 1607, -1000, -1000,
	1992, 46171, 45602, -1000, 3380, -1000, -1000, 2455, -1000, -1000,
	45602, 2617, 45602, 45602, 60515, -296, -1000, 2095, 1940, 1033,
	961, 1780, 1397, 62138, 989, 961, -1000, -1000, -1000, 120817,
	-1000, -1000, -1000, 120817, -1000, -299, -301, -280, 96281, 2080,
	2369, 961, 1780, 989, 2545, -1000, -269, -1000, 989, 1940,
	1100, -304, -1000, -1000, -1000, -1000, 989, 2545, -1000, 1940,
	-1000, -1000, -1000, -1000, 506, -1000, -1000, 1940, 961, 45602,
	961, 989, -306, 989, -1000, 1940, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4333, 4329, 4328, 4327, 4326, 4325, 4324, 4322, 4321,
	4318, 4317, 4316, 4315, 4313, 4312, 4311, 4310, 4309, 4308,
	4304, 4302, 4299, 4298, 4297, 4296, 4289, 4287, 4284, 4283,
	4282, 4278, 4275, 4274, 4270, 4267, 4266, 4265, 4263, 4260,
	4258, 4257, 4256, 4250, 4249, 4248, 4247, 4246, 4245, 4238,
	4236, 4234, 4233, 4229, 4226, 4224, 4214, 4213, 4211, 4210,
	4209, 4207, 4205, 49, 4201, 4198, 4196, 4195, 4194, 4193,
	4191, 4190, 4189, 4186, 4185, 4184, 4183, 4181, 4179, 4170,
	4169, 4167, 4166, 4164, 62, 4162, 263, 4160, 4159, 4155,
	4152, 4150, 4147, 4145, 4144, 4143, 4142, 4141, 4140, 262,
	4138, 123, 4135, 4133, 4132, 4131, 4129, 260, 4127, 4121,
	4120, 4119, 270, 4115, 4114, 4113, 4109, 4103, 4102, 4101,
	4099, 4098, 4094, 4091, 162, 200, 4089, 4088, 2832, 4087,
	4083, 4080, 4078, 4076, 4075, 4073, 4072, 4068, 4066, 241,
	4065, 259, 4063, 4061, 4056, 4055, 4052, 4051, 4049, 4048,
	4045, 4044, 4042, 4041, 4040, 4039, 4038, 4037, 4035, 4033,
	4032, 4030, 4029, 4028, 4027, 4025, 4024, 4023, 4018, 4017,
	4015, 4013, 4011, 4009, 4002, 4001, 3999, 3996, 238, 267,
	179, 3995, 3984, 256, 255, 3982, 3981, 3980, 3979, 3977,
	113, 7, 37, 3975, 3972, 89, 83, 79, 99, 98,
	91, 3971, 102, 3968, 115, 72, 3966, 10, 2, 214,
	236, 11652, 230, 3961, 3960, 3959, 233, 184, 3958, 229,
	3957, 3953, 3951, 3950, 71, 51, 170, 166, 159, 163,
	198, 3947, 144, 104, 77, 55, 42, 17, 81, 203,
	18, 3946, 247, 8, 138, 6, 34, 3945, 3940, 3935,
	3933, 3216, 114, 3929, 254, 234, 158, 3926, 3923, 3922,
	442, 3921, 3920, 48, 3918, 174, 107, 130, 27, 118,
	3917, 140, 36, 3915, 147, 57, 3914, 154, 95, 86,
	10798, 6747, 3913, 121, 60, 136, 4062, 213, 182, 193,
	152, 153, 151, 195, 204, 202, 161, 167, 3909, 240,
	3907, 3339, 88, 172, 3906, 3903, 3901, 85, 185, 100,
	3898, 3897, 73, 15, 14, 4, 19, 132, 26, 24,
	16, 3890, 52, 112, 47, 25, 3880, 28, 3879, 3877,
	3875, 3874, 3873, 40, 150, 3870, 269, 3862, 84, 53,
	22, 3860, 66, 210, 3858, 221, 119, 3857, 3855, 244,
	188, 192, 3851, 68, 222, 3849, 3847, 3844, 3840, 3838,
	131, 3, 133, 3837, 3836, 139, 3833, 50, 231, 190,
	3832, 54, 3830, 3829, 165, 97, 129, 264, 211, 218,
	111, 219, 183, 227, 3828, 3827, 3824, 176, 3823, 3822,
	209, 156, 3821, 3820, 243, 271, 90, 44, 87, 226,
	78, 178, 145, 3819, 194, 3817, 3816, 268, 171, 205,
	1, 20, 103, 125, 3814, 5, 228, 142, 223, 108,
	3813, 5365, 1929, 2617, 3811, 3810, 146, 117, 76, 120,
	143, 249, 64, 3808, 3807, 2480, 3805, 3804, 3800, 3799,
	177, 3798, 3797, 3796, 135, 137, 173, 3795, 94, 74,
	46, 21, 106, 239, 258, 105, 215, 181, 242, 3793,
	3791, 3790, 175, 3787, 80, 124, 155, 186, 251, 56,
	3786, 199, 3785, 148, 444, 69, 141, 3784, 216, 3783,
	3780, 3779, 3778, 3774, 3772, 3768, 252, 225, 3767, 3766,
	3764, 43, 180, 3762, 248, 149, 164, 96, 58, 3760,
	109, 3955, 3759, 116, 237, 70, 250, 189, 253, 3758,
	1638, 65, 3754, 0, 12792, 6625, 9449, 12118, 3752, 2652,
	3751, 3750, 3740, 206, 134, 3738, 3737, 3736, 110, 3735,
	82, 3734, 3732, 67, 3729, 30, 9, 11, 31, 29,
	191, 63, 3728, 3723, 32, 122, 126, 3722, 261, 224,
	3720, 3718, 3714, 3712, 92, 3710, 41, 3706, 35, 3704,
	3703, 38, 13, 33, 3702, 3700, 208, 3697, 207, 245,
	3696, 157, 3695, 3338, 128, 3693, 3691, 3689, 61, 59,
	246, 93, 3688, 266, 3687, 3248, 3684, 3683, 23, 3682,
	3681, 235, 169, 212, 3678, 3677, 160, 3676, 3675, 3674,
	276, 3673, 3672, 3671, 39, 3670, 12, 3669, 3667, 196,
	3031, 3666, 3663, 45, 3647, 168,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 580, 580, 22, 42, 23, 43, 16, 581,
	581, 581, 581, 35, 24, 44, 28, 28, 28, 28,
	28, 193, 193, 193, 193, 21, 21, 38, 38, 227,
	227, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 576, 576, 229, 229,
	228, 223, 223, 582, 582, 230, 230, 230, 232, 232,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	475, 475, 475, 508, 508, 507, 507, 507, 506, 506,
	595, 595, 596, 596, 596, 596, 596, 127, 127, 373,
	373, 373, 52, 52, 52, 52, 52, 571, 571, 195,
	195, 195, 197, 197, 196, 196, 196, 196, 75, 75,
	587, 587, 588, 588, 586, 589, 589, 589, 194, 194,
	194, 123, 123, 123, 123, 123, 123, 124, 124, 125,
	125, 198, 198, 198, 200, 200, 199, 199, 199, 199,
	199, 199, 199, 199, 204, 15, 15, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 103, 103, 510, 510,
	511, 511, 189, 189, 190, 190, 190, 190, 191, 191,
	192, 192, 192, 66, 66, 201, 201, 203, 203, 202,
	202, 202, 202, 202, 54, 54, 54, 54, 54, 54,
	54, 55, 55, 55, 55, 55, 56, 56, 56, 56,
	56, 56, 57, 57, 57, 57, 57, 57, 64, 64,
	64, 64, 64, 180, 180, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 72, 72,
	72, 72, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 598, 598, 599, 599, 600, 600, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 81, 81, 335, 335, 300, 300, 82,
	82, 82, 83, 83, 84, 84, 68, 68, 569, 569,
	350, 350, 466, 466, 69, 577, 577, 577, 579, 579,
	578, 578, 86, 86, 372, 372, 87, 87, 87, 87,
	87, 87, 88, 88, 88, 88, 88, 88, 88, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 96, 96, 96, 96, 96, 97, 97,
	97, 94, 94, 94, 91, 91, 91, 90, 90, 90,
	95, 95, 95, 568, 289, 289, 93, 93, 93, 92,
	92, 92, 351, 351, 98, 98, 98, 98, 301, 99,
	99, 99, 99, 99, 99, 99, 99, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	468, 468, 100, 100, 100, 433, 433, 104, 104, 104,
	388, 388, 105, 105, 105, 105, 105, 106, 106, 106,
	106, 106, 106, 106, 106, 126, 126, 126, 126, 126,
	126, 126, 573, 573, 343, 343, 254, 254, 254, 254,
	116, 116, 116, 116, 117, 117, 117, 118, 118, 185,
	185, 133, 133, 133, 133, 133, 132, 132, 132, 132,
	132, 132, 58, 58, 58, 59, 59, 60, 60, 61,
	61, 62, 62, 63, 63, 63, 63, 63, 135, 135,
	592, 592, 137, 134, 134, 134, 136, 136, 136, 136,
	138, 139, 139, 139, 139, 139, 139, 139, 139, 140,
	140, 500, 500, 359, 359, 498, 498, 520, 520, 499,
	499, 305, 305, 305, 305, 305, 306, 306, 306, 509,
	509, 509, 509, 509, 509, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 186, 186, 187, 188, 188, 188, 188,
	188, 164, 164, 164, 179, 179, 179, 179, 179, 179,
	179, 167, 167, 167, 151, 151, 142, 142, 142, 142,
	142, 142, 142, 146, 146, 146, 146, 146, 146, 146,
	146, 143, 143, 153, 153, 153, 153, 153, 147, 147,
	148, 148, 148, 148, 174, 174, 150, 150, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 144, 144, 144,
	144, 155, 155, 155, 155, 395, 395, 395, 178, 178,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 177, 177, 177, 177, 177, 177, 590, 590, 591,
	591, 171, 171, 171, 171, 171, 171, 447, 447, 165,
	165, 165, 165, 170, 170, 170, 170, 173, 173, 173,
	173, 378, 378, 162, 162, 162, 163, 163, 163, 168,
	168, 169, 166, 166, 172, 172, 172, 172, 145, 145,
	145, 145, 602, 602, 602, 175, 175, 161, 161, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	603, 603, 157, 157, 157, 156, 156, 156, 156, 159,
	159, 160, 160, 160, 160, 160, 160, 158, 149, 570,
	570, 566, 566, 566, 566, 566, 566, 566, 566, 567,
	567, 567, 567, 572, 572, 109, 109, 109, 109, 109,
	119, 119, 119, 119, 119, 110, 110, 110, 110, 110,
	112, 112, 111, 111, 111, 111, 76, 76, 76, 76,
	76, 14, 14, 14, 77, 77, 245, 245, 207, 207,
	207, 324, 324, 208, 208, 313, 313, 313, 313, 205,
	205, 206, 206, 78, 78, 604, 604, 604, 583, 583,
	583, 584, 584, 584, 584, 584, 584, 307, 307, 308,
	308, 413, 413, 413, 413, 413, 311, 311, 311, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 314, 314,
	231, 231, 231, 322, 323, 323, 315, 315, 321, 320,
	320, 319, 319, 318, 318, 316, 317, 317, 317, 326,
	326, 325, 328, 328, 327, 412, 529, 529, 531, 531,
	531, 531, 531, 531, 531, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 396, 396, 605,
	605, 527, 527, 527, 528, 523, 523, 524, 524, 524,
	524, 524, 309, 309, 310, 310, 310, 310, 525, 526,
	341, 341, 451, 530, 530, 532, 532, 534, 606, 606,
	606, 606, 606, 606, 607, 607, 607, 411, 411, 410,
	410, 333, 333, 535, 535, 535, 535, 536, 536, 536,
	536, 536, 539, 538, 537, 537, 537, 537, 537, 80,
	80, 80, 375, 375, 374, 374, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 182, 182, 257, 257, 74, 74, 74, 12, 12,
	12, 585, 585, 585, 79, 79, 79, 79, 79, 79,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	575, 575, 574, 574, 258, 258, 609, 609, 85, 85,
	85, 85, 85, 85, 85, 85, 469, 469, 470, 470,
	73, 73, 73, 73, 73, 397, 397, 394, 394, 393,
	393, 340, 340, 449, 449, 449, 450, 262, 262, 263,
	263, 224, 224, 224, 30, 29, 20, 20, 25, 25,
	26, 26, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 27, 27, 46, 46, 46, 46, 47, 47, 47,
	47, 50, 50, 51, 51, 45, 45, 45, 45, 48,
	48, 41, 41, 593, 593, 594, 594, 115, 115, 120,
	120, 120, 120, 120, 121, 121, 121, 121, 122, 122,
	122, 122, 131, 131, 181, 181, 181, 181, 181, 181,
	181, 53, 53, 53, 53, 65, 65, 65, 65, 129,
	611, 611, 611, 130, 130, 130, 610, 610, 255, 255,
	407, 407, 408, 408, 612, 612, 409, 409, 409, 409,
	409, 248, 247, 249, 249, 250, 250, 71, 71, 71,
	240, 240, 239, 237, 237, 512, 512, 242, 242, 242,
	243, 243, 233, 233, 234, 234, 235, 235, 236, 236,
	246, 246, 613, 613, 107, 107, 107, 184, 184, 299,
	299, 299, 404, 404, 404, 334, 334, 269, 269, 406,
	406, 406, 406, 371, 371, 371, 183, 183, 348, 348,
	361, 361, 362, 362, 463, 463, 363, 113, 113, 114,
	114, 128, 128, 211, 211, 209, 209, 209, 209, 209,
	209, 209, 209, 216, 216, 217, 217, 218, 218, 219,
	220, 220, 220, 220, 352, 352, 221, 221, 221, 210,
	210, 210, 212, 212, 212, 212, 212, 212, 212, 215,
	215, 215, 215, 222, 222, 222, 214, 214, 546, 546,
	546, 548, 548, 550, 550, 549, 549, 545, 545, 547,
	547, 608, 608, 377, 377, 377, 331, 332, 329, 329,
	330, 330, 338, 338, 336, 337, 337, 339, 339, 448,
	448, 448, 225, 225, 225, 368, 368, 368, 368, 369,
	369, 400, 400, 398, 398, 398, 398, 399, 399, 401,
	401, 401, 402, 402, 403, 403, 365, 365, 366, 366,
	367, 367, 367, 367, 429, 429, 213, 213, 213, 345,
	345, 345, 346, 346, 419, 419, 419, 419, 419, 419,
	420, 420, 418, 418, 418, 418, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 453, 454, 454, 347, 347,
	455, 405, 405, 564, 564, 564, 565, 565, 446, 446,
	456, 456, 456, 456, 456, 456, 444, 444, 445, 445,
	464, 465, 465, 381, 381, 381, 381, 379, 379, 382,
	382, 382, 382, 382, 380, 380, 457, 457, 457, 457,
	370, 370, 458, 458, 458, 458, 459, 460, 460, 461,
	461, 414, 415, 415, 471, 471, 471, 471, 473, 344,
	344, 344, 344, 344, 522, 521, 521, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 488, 488,
	488, 488, 488, 488, 488, 474, 474, 474, 474, 474,
	478, 478, 478, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 479, 479, 484, 484, 485, 485,
	485, 480, 481, 486, 486, 486, 486, 614, 614, 490,
	490, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	476, 476, 476, 483, 483, 483, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 389,
	389, 391, 391, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	423, 423, 423, 423, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 540,
	540, 540, 540, 540, 540, 540, 540, 425, 425, 543,
	543, 544, 544, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 551, 551, 552, 552, 554, 554, 555, 555,
	556, 557, 557, 557, 558, 559, 559, 553, 553, 560,
	560, 560, 560, 561, 561, 562, 562, 562, 562, 562,
	563, 563, 563, 563, 563, 435, 435, 436, 436, 442,
	442, 442, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 259, 259,
	259, 259, 259, 357, 357, 355, 355, 355, 358, 358,
	356, 356, 354, 354, 353, 353, 432, 432, 430, 430,
	434, 434, 383, 383, 489, 489, 489, 489, 489, 489,
	489, 489, 384, 384, 384, 392, 385, 385, 386, 386,
	386, 386, 386, 426, 427, 387, 387, 387, 428, 428,
	437, 441, 441, 440, 439, 439, 438, 438, 416, 416,
	417, 417, 364, 364, 615, 615, 360, 360, 462, 462,
	462, 462, 303, 303, 349, 349, 302, 302, 294, 294,
	295, 295, 295, 295, 342, 342, 443, 443, 491, 491,
	492, 492, 493, 493, 494, 494, 495, 496, 497, 431,
	431, 279, 278, 266, 267, 277, 276, 275, 265, 268,
	272, 273, 274, 270, 271, 285, 284, 283, 238, 241,
	290, 291, 291, 293, 293, 292, 292, 281, 282, 467,
	264, 296, 296, 297, 297, 297, 298, 298, 298, 298,
	260, 260, 261, 261, 286, 286, 287, 288, 288, 280,
	280, 280, 251, 251, 251, 252, 252, 253, 253, 505,
	505, 502, 502, 502, 503, 503, 503, 504, 504, 504,
	504, 501, 501, 501, 501, 501, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 514, 514, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 516, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 519, 519,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 5, 5, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 6, 5,
	6, 5, 6, 4, 8, 3, 4, 2, 3, 10,
	3, 6, 4, 3, 1, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 3, 1, 1, 1, 1, 1,
	1, 3, 6, 4, 6, 7, 9, 6, 2, 2,
	3, 0, 8, 6, 8, 7, 2, 0, 1, 2,
	5, 0, 1, 3, 3, 1, 1, 3, 12, 3,
	1, 0, 1, 1, 2, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 6, 4, 9,
	7, 12, 12, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 6, 6,
	6, 6, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 6, 3,
	8, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 7, 9, 5, 2, 6, 4, 7, 7, 7,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	2, 6, 4, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 4, 3, 4,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 5, 5, 5, 2, 2, 0, 1,
	3, 11, 12, 9, 5, 3, 1, 5, 10, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 5,
	1, 3, 1, 2, 0, 1, 2, 2, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 6,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 2, 2, 4, 7, 3, 4, 6,
	3, 1, 1, 1, 8, 10, 11, 7, 10, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 11,
	3, 6, 6, 5, 3, 4, 1, 0, 1, 3,
	17, 20, 16, 19, 4, 2, 0, 1, 0, 1,
	0, 1, 3, 2, 4, 2, 3, 1, 0, 2,
	0, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	5, 7, 2, 6, 7, 4, 4, 5, 2, 4,
	6, 6, 8, 6, 7, 8, 9, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 12, 15, 3,
	1, 0, 4, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 583, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 32, 31, 100, 80, 154,
	128, 137, 201, 379, 421, 432, 393, 142, 413, 398,
	-136, -137, 449, -53, -65, -130, -129, 73, 129, 407,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -597, 102, -547, -89,
	-92, -122, -601, 161, 219, -110, -111, 362, -117, -118,
	415, -120, -121, 417, 162, -60, -59, 156, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 454, -169,
	514, 49, 468, 82, 146, 425, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -546, -90, -91, -94, -96, -97,
	-93, -95, 414, -212, -210, 580, 529, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 549, 558, -215, -213, -214, -222, 441,
	537, 488, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, -301, 2, -281, -286, -287, -288,
	-280, -251, -516, -519, 4, -513, -517, 168, 228, 326,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 128,
	129, 132, 127, 131, 133, 135, 136, 137, 140, 141,
	142, 144, 145, 147, 148, 149, 151, 152, 154, 155,
	156, 159, 157, 496, 158, 160, 161, 162, 163, 166,
	174, 175, 176, 181, 183, 184, 188, 189, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 202, 206, 208,
	209, 210, 211, 212, 218, 219, 221, 222, 223, 224,
	229, 230, 231, 235, 232, 241, 242, 246, 247, 248,
	250, 254, 255, 256, 257, 258, 259, 261, 263, 262,
	265, 268, 269, 272, 276, 277, 281, 282, 278, 283,
	284, 286, 287, 290, 288, 291, 292, 289, 293, 295,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 294, 309, 307, 311, 312, 313, 324, 322, 317,
	318, 314, 319, 315, 316, 320, 321, 328, 329, 332,
	216, 334, 335, 338, 356, 342, 343, 344, 347, 348,
	351, 354, 355, 357, 358, 359, 360, 361, 362, 363,
	364, 366, 367, 369, 370, 371, 373, 374, 375, 377,
	379, 380, 382, 383, 385, 386, 387, 388, 389, 390,
	391, 393, 395, 394, 396, 398, 400, 401, 402, 407,
	413, 409, 410, 411, 412, 414, 415, 416, 417, 419,
	420, 421, 423, 424, 425, 426, 428, 430, 431, 434,
	435, 451, 452, 470, 432, 433, 436, 437, 438, 439,
	440, 444, 442, 443, 445, 446, 447, 449, 450, 453,
	454, 456, 457, 458, 459, 460, 461, 464, 466, 467,
	468, 487, 469, 471, 475, 476, 477, 478, 472, 473,
	486, 480, 481, 483, 484, 489, 490, 491, 492, 493,
	494, 495, 497, 499, 507, 508, 509, 511, 514, 515,
	516, 517, 505, 519, 520, 523, 524, 525, 528, 526,
	527, 529, 531, 534, 535, 536, 542, 541, 543, 550,
	551, 553, 554, 555, 36, 50, 51, 54, 56, 58,
	69, 70, 71, 75, 124, 125, 153, 164, 165, 177,
	190, 191, 203, 205, 213, 214, 215, 236, 237, 239,
	244, 266, 331, 333, 349, 353, 368, 372, 376, 378,
	392, 427, 462, 474, 479, 500, 501, 502, 503, 510,
	512, 537, 538, 539, 544, 552, -301, 2, -281, 340,
	-274, 2, -251, -251, 379, 28, 2, 28, 367, 443,
	491, 493, 2, -573, -343, 2, 28, -254, -251, 102,
	201, 441, -274, 2, -573, -343, 25, 2, -251, 2,
	354, 22, 27, 66, 77, 98, 140, 163, 185, 188,
	-600, 356, 386, 430, 445, 486, 497, 511, 2, 541,
	287, 442, 488, 228, 120, 516, 436, -585, 434, 435,
	354, 384, 423, 204, 530, -255, 2, 432, -251, 287,
	2, 583, 94, 277, 74, 427, 446, -139, 508, -138,
	500, 436, -140, -500, 2, 309, -251, 583, 583, 583,
	28, -264, -251, 488, 228, 436, 120, 484, 583, 2,
	488, 359, 541, 442, 120, 389, 228, 516, 188, 126,
	436, -585, 287, -571, 2, -566, 4, -517, -513, -295,
	-294, 488, 494, 120, -288, -280, 573, -287, 583, 583,
	583, 2, 247, 248, 388, 387, 446, 447, 583, 583,
	583, 583, 434, 2, 163, 22, 27, 66, 93, 98,
	126, 185, 188, 345, -598, 356, 386, 445, 486, 490,
	497, 511, -584, 469, 68, 412, 436, -583, -585, 287,
	516, 140, -393, 120, 277, 199, 524, 493, 491, 522,
	132, 235, 527, 526, 583, 583, -101, 2, 580, 32,
	31, 142, 449, -204, 488, 240, 2, -251, 583, 583,
	2, 247, 248, 434, 435, 583, 583, 186, -566, 2,
	583, 583, 2, 247, 248, 434, 435, 240, 2, 68,
	438, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 2, -179, 446, 469, 210,
	47, 46, 74, 28, 385, 79, 360, 121, 148, 517,
	202, 228, 229, 255, 93, 94, -395, 44, 248, 247,
	435, -590, 434, -447, 489, 437, 443, 483, 259, 432,
	508, 102, 531, 424, 555, 389, 390, 481, 402, 278,
	157, 4, 120, 309, 448, 500, 277, 431, 363, 84,
	-608, 2, 488, -610, 2, 508, 508, 2, -610, 2,
	-610, 2, -610, 2, -611, 508, 552, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, -210, -212, -211, 583, 583, 583,
	583, 583, 583, 583, -179, 446, 2, 74, 28, -336,
	-338, 521, 238, 150, 346, -209, -211, 2, -546, -498,
	2, -421, -520, -423, 571, 572, 564, 485, 67, 325,
	556, -435, 126, 522, 340, -519, -424, -437, 153, 427,
	-358, 8, 9, 5, 6, 7, -260, -425, -431, 513,
	167, 330, -298, 584, 10, 580, -543, -211, -436, 37,
	205, 65, -502, -297, -261, -474, 239, -296, -280, -540,
	-541, 4, -513, -514, -503, -477, -485, -481, -482, -488,
	-251, -516, 77, 111, 112, 110, 115, 114, 280, 279,
	116, 113, 448, 530, 66, 36, 213, 214, 244, 331,
	215, 75, -542, 141, -515, 236, 237, 462, 51, 392,
	177, 125, 124, 333, 56, 54, 538, -486, 122, 500,
	501, 502, 503, 190, 191, 58, 164, 165, 353, 376,
	479, 510, 512, 203, 266, 43, 106, 187, 234, 217,
	243, 245, 249, 267, 270, 310, 323, 327, 350, 352,
	422, 455, -614, 539, 474, 69, 70, -548, 394, -549,
	-274, -548, 583, 583, 585, 583, -329, -331, -332, 2,
	28, 138, 580, 2, -452, 2, -453, -457, -211, 260,
	-456, 580, -454, 578, -281, 341, -544, 428, -540, -541,
	-260, -280, -297, 4, -513, -515, 582, -333, 580, 120,
	488, 78, 228, 163, -388, 580, -251, 28, 340, 504,
	585, -330, 383, -433, 580, 340, 186, 343, 60, 291,
	2, 2, 2, 2, 2, 213, -251, 488, 119, 2,
	258, 2, 2, 2, 2, 2, 2, 2, -351, 213,
	2, -281, 541, -351, 213, 2, -351, 213, 2, -394,
	2, 87, -265, 213, 2, -251, -289, 213, 2, -284,
	-286, -293, 213, 2, -291, -251, -511, 213, 2, -510,
	-505, 10, -504, 5, 4, -513, -517, -514, -516, 77,
	-421, 2, -128, 2, 60, -251, 541, 2, 2, 451,
	2, 580, -139, 71, 508, 43, 446, -408, 2, -409,
	-247, -248, -249, -464, -250, 246, 382, 391, 559, 130,
	325, 555, -498, -592, 186, 563, 504, -498, -359, 582,
	2, 2, 2, 2, 2, 2, -457, 213, -281, 2,
	-278, -501, 4, -513, -517, -514, -518, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 126, 130, 134, 138, 139, 143, 146, 150,
	167, 169, 182, 185, 186, 201, 204, 207, 220, 233,
	238, 240, 260, 264, 271, 279, 280, 325, 330, 336,
	340, 341, 345, 346, 365, 381, 397, 418, 441, 448,
	465, 482, 488, 498, 504, 506, 513, 521, 522, 530,
	532, 540, 545, 546, 547, 548, 549, -519, 2, -457,
	213, 2, -283, 213, -457, -286, 2, -265, 2, -277,
	-501, 2, -302, 213, -281, -282, -286, -284, 2, 2,
	2, -291, 2, -510, 213, 2, 541, 240, 504, 585,
	-349, -294, -295, -497, 8, -342, -251, 582, -421, 2,
	-128, -112, 2, 182, -421, 213, 2, -128, 213, 2,
	-421, 213, 2, -128, 213, 2, -587, 2, -510, 213,
	-251, 2, 291, 2, 2, 511, 2, 98, 488, 119,
	2, 411, -599, 430, 515, 2, 2, 2, 2, 2,
	2, 2, 488, -270, 2, -251, 182, 472, -291, 213,
	-292, 2, 442, -609, 394, -510, 213, 2, 541, -284,
	213, 2, -284, 228, 242, -265, 213, 2, 493, 491,
	493, 491, 186, 2, 240, 2, 240, 2, -458, 2,
	-459, -453, -460, 578, 341, -468, 2, -467, -504, 537,
	-101, 580, -101, 580, 446, 580, -510, -281, -281, -421,
	2, -128, -112, 2, -421, 2, -128, 2, -125, -510,
	-124, 580, 186, -421, 2, -128, -112, 2, -421, 2,
	-128, 2, -204, 182, 2, 120, 488, -179, 2, 182,
	532, 2, 8, 2, 220, -510, 437, 390, 174, 2,
	451, 2, 452, 74, -395, 555, 74, 186, 2, 186,
	2, -378, 2, 549, 186, 2, 2, -570, 2, 340,
	186, 2, 186, 2, 186, 2, 186, 2, 186, 2,
	-178, 447, 509, 487, 387, 248, 2, -128, 546, -112,
	-421, 546, 2, -591, 182, 435, -421, 2, 507, 257,
	158, 186, -378, 2, 186, 2, 186, 2, 5, 2,
	388, 470, 2, 246, 382, 470, 2, -281, -602, 28,
	2, 488, 541, 442, 2, 2, 88, 89, 186, 2,
	186, 2, 200, 186, 2, 186, 555, 2, -370, -457,
	-407, -408, -407, 504, -336, -338, -179, 451, 2, -216,
	-368, -218, 182, -398, -399, -219, 271, 169, 336, -220,
	-377, 28, 138, -377, -377, 60, 581, 581, 11, 12,
	76, 41, 571, 572, 573, 574, 180, 575, 576, 569,
	570, 568, 561, 562, 566, 252, 253, 95, 565, 563,
	86, 285, 429, 170, 171, 172, 173, 408, 226, 34,
	227, 14, 15, 16, 33, 345, 270, 556, 217, 455,
	564, 17, 18, 19, 243, 245, 327, 50, 220, -259,
	-304, -421, -421, -421, -421, -421, -421, -421, 352, 580,
	-364, -416, 578, -211, 580, 580, 580, -497, -211, -421,
	-435, 581, -356, 580, -211, -435, -430, 580, 427, 578,
	580, -438, -421, 5, 5, 5, 580, 582, -551, 550,
	182, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 378, -479, 580, -478,
	580, -478, -478, 542, -476, 580, 558, 551, 580, -476,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 542, 585, -548, -333, 580, -360, -462,
	-421, 573, -360, -360, 340, -353, -421, 106, -381, 249,
	310, 187, 267, 422, 234, -418, 584, -418, -446, 558,
	-211, -454, -280, -211, -456, 580, -452, -446, -102, -497,
	-86, -99, -107, -128, -141, -183, -184, 573, -281, 580,
	186, 580, 582, -501, 186, -342, -265, -281, -296, -297,
	-302, 2, 137, -353, -566, 516, 436, 442, -342, -254,
	38, -432, -471, -472, -522, 584, -521, -474, -484, -480,
	-483, 368, 372, -503, 54, 538, -486, 239, 4, -513,
	-515, 236, 237, 462, 51, 392, 177, 125, 124, 333,
	56, 500, 501, 502, 503, 190, 191, 58, 539, 474,
	69, 70, -566, 516, 436, 442, -342, 182, -508, 2,
	-507, -506, 116, 448, -504, 5, 2, 153, 2, 2,
	2, -251, -230, 585, 64, 416, 153, -351, 213, -230,
	153, -230, 153, -303, 213, -302, -230, 153, -230, 585,
	153, -230, 585, 153, 582, 585, 153, -508, 2, -394,
	-500, -353, 38, -408, 2, 126, -506, -612, 585, 269,
	-306, 284, 324, 209, 341, 553, 334, 130, -509, 5,
	4, -431, -443, 126, 277, 239, -491, -493, 8, -492,
	9, -494, 571, 572, -499, -498, 109, 582, -501, -227,
	409, 449, 355, -226, 24, 29, 142, 230, 313, 535,
	159, -319, 231, -316, 359, 153, 466, 525, -580, -581,
	433, 495, 496, 90, 334, 449, 355, 409, 153, -374,
	-376, 38, 118, 313, 354, 61, 223, 289, 290, 468,
	544, 153, 449, 355, 409, 355, 24, 142, -242, -239,
	449, -581, 99, 409, 480, 381, -581, -229, 466, 525,
	-580, -581, 433, 409, -228, -321, -316, 359, 153, 584,
	24, 142, 409, 449, 355, -595, -596, 29, 409, 355,
	-574, -545, 549, 153, -457, 213, -588, -124, 261, 5,
	10, -510, -124, -349, 585, 585, -501, 573, 435, 434,
	153, 153, 153, 153, 182, 325, 2, 2, 2, 2,
	2, 188, -583, -600, 2, 2, -281, 213, -335, 340,
	-569, -350, 488, -281, 182, 325, 43, -283, 213, 2,
	-286, 541, -574, 325, -285, 213, -281, 38, 580, 325,
	2, -394, 2, 228, -545, 325, -458, -299, -281, -453,
	-299, 449, -274, 38, -418, -281, 581, 585, -468, -468,
	-510, -192, 549, 186, 102, 580, 580, -204, -465, 585,
	-464, 220, -511, -125, -510, 412, -510, -569, -265, 2,
	-281, 2, 488, 250, -510, -192, 220, -510, -510, -510,
	-500, 28, 452, 2, -178, 447, 509, 89, 452, 2,
	-281, 488, 120, 228, 80, -251, -572, 182, -567, 423,
	436, 516, -566, -281, 120, -281, 120, -281, 120, -281,
	-281, 2, 2, 2, 2, 2, 85, 85, 2, 46,
	-591, 182, 2, 507, 2, 507, 2, -251, -251, -251,
	469, 269, -281, 489, -603, 2, 186, 182, 2, 488,
	228, 488, 228, 120, 186, 74, 120, 28, 488, -230,
	585, -255, -216, -368, -500, -369, -368, -217, -216, -219,
	182, 391, 526, 313, 453, 254, -399, -398, 28, -421,
	-403, 176, 312, -421, -401, -423, 571, 572, -492, -494,
	-352, 334, -210, -210, -210, -339, -448, -421, 381, 228,
	-473, -471, -471, -279, -501, 500, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, 270, 217, 455, 50, 220, -421, 504, -421, -421,
	-421, -421, 307, 325, 330, 513, 167, 523, 138, 334,
	-615, 482, 40, -428, -211, -357, 580, -442, 35, 465,
	28, -435, 580, 2, -416, -421, -417, -354, -353, -353,
	581, 540, 28, 138, 573, 2, 581, 585, 38, 581,
	-421, -354, -434, -430, -353, -441, -440, 546, -389, -390,
	554, 294, 123, 211, 292, -391, 440, -495, 8, -501,
	573, -552, 175, 204, 580, 581, 2, 581, 2, 581,
	-421, 2, 581, -421, 2, 581, -421, 2, 581, -421,
	2, 581, 2, -421, -421, -421, -421, -421, -421, -421,
	-353, 8, -495, -495, 500, 500, -495, -495, -495, -487,
	368, 369, 370, 371, 272, 273, 274, 275, 372, 373,
	374, 375, 299, 300, 301, 302, 295, 296, 297, 298,
	303, 304, 305, 306, 195, 196, 197, 198, 191, 192,
	193, 194, -487, -383, 2, -489, -353, 4, 554, 294,
	123, 211, 292, 440, 5, -383, 2, -384, 2, -421,
	-353, -385, -422, -423, 571, 572, 564, -435, -386, 2,
	-421, -354, -421, 57, 264, 506, -387, -421, 186, -353,
	-353, 2, -353, 2, -549, 38, -353, -345, 585, 186,
	38, 4, -345, -345, 580, 581, 585, -382, 208, 288,
	283, 242, -382, -452, -381, 249, -379, 350, -379, -379,
	-446, -266, 578, 586, -501, -446, -445, -444, 38, -274,
	347, -446, -446, 582, 581, -445, 579, -564, 580, 583,
	583, 583, 583, 583, -281, 580, -353, -501, 582, 471,
	2, 581, 243, 243, 243, 243, 428, 581, 504, -568,
	-289, -293, 2, 549, -101, 342, 581, 585, -344, 37,
	578, 582, -495, 2, 2, -490, 542, 580, 580, -390,
	580, 186, -568, -293, 2, -343, 585, 504, -251, 2,
	-281, -351, -230, 153, -351, -351, -230, 585, 153, -265,
	-284, -289, -291, -293, -251, -510, -511, -230, -285, -592,
	581, 508, -409, -305, 391, 464, 410, 444, 484, 8,
	9, 8, 9, 585, -501, 585, -593, 93, 504, 78,
	436, -244, 278, 504, -412, 213, 78, -523, -268, 93,
	-524, -251, 72, 522, 381, 185, 151, -593, 93, 381,
	-593, 93, 2, 230, 93, 449, 469, 28, 60, -457,
	41, 41, 28, -128, 265, 186, 555, 488, 228, 436,
	504, 504, -457, -376, -471, 118, 289, 290, 60, -496,
	-491, 571, 572, -496, 60, -496, -496, -496, 549, -283,
	-457, 436, 504, 504, 504, 400, 400, -239, 504, 504,
	-613, 563, 400, 585, 41, 41, 28, -128, 265, 186,
	504, -302, -266, 536, 42, 536, 42, 536, 504, 42,
	436, 504, 585, 42, 504, 504, -575, -256, 105, 319,
	282, 320, 97, 316, 96, 315, 103, 317, 104, 318,
	543, 328, 63, 314, 293, 321, -257, -258, 361, 534,
	-510, 449, 355, 409, 153, 220, -465, 220, -465, -294,
	-251, 582, -128, -421, -421, -128, -421, -128, 46, 153,
	2, -609, 258, 580, -309, 325, 186, -342, -466, 240,
	585, -350, -566, 153, -507, -375, -374, 325, -285, 213,
	2, 153, -333, 325, 147, 580, 389, 2, 153, -267,
	213, -252, -251, -394, -233, 492, 153, -372, 532, -404,
	-128, 580, 126, 38, -404, -361, -362, -463, -363, -268,
	580, -274, -418, -101, -467, 581, 581, 581, -191, 344,
	-190, -251, 5, -204, 532, -308, -413, -412, -527, -528,
	-523, 270, 228, 522, 242, 168, -334, -269, -268, 119,
	-198, 549, -124, -125, 581, -465, 220, 472, -192, -192,
	-465, -465, -281, 182, -510, -192, -192, -192, 2, 2,
	2, 2, -378, -281, -265, -302, -281, 582, -342, -342,
	-293, -289, -378, -265, -378, -265, -378, -265, -128, -421,
	2, 446, 182, 182, 582, -378, 389, 120, 488, 359,
	228, -281, -302, -281, -302, -265, 120, -265, 121, -281,
	-457, -369, -217, 341, 254, 453, -401, -402, -423, 427,
	428, -402, 427, 428, 8, 9, 8, 9, -221, 457,
	329, -351, 585, -224, 39, 134, 254, -281, 555, 149,
	-421, -421, 504, -615, 482, -428, 149, -421, 307, 330,
	513, 167, 523, 138, 334, 186, 580, -422, -422, 581,
	-355, -421, -421, 579, 588, 581, -338, 585, -336, -421,
	-353, -353, 581, 582, -353, -342, 579, 579, 585, 581,
	-439, -440, 143, -421, 504, 504, 504, 504, 580, 581,
	582, -557, 351, 580, 580, -421, 581, 581, 581, 581,
	38, 585, 585, 585, 581, 585, 585, 585, 581, 581,
	581, 585, 581, 555, 555, 581, 581, 581, 581, 585,
	581, 585, 581, 186, 581, 581, -392, 365, 581, 11,
	12, 571, 572, 573, 574, 180, 575, 576, 569, 570,
	568, 561, 562, 563, 86, 285, 429, 14, 15, 16,
	243, 220, -422, -422, -422, 581, -426, -427, 186, 182,
	38, -387, -387, -387, 581, 186, -353, 581, 581, 580,
	-550, 287, 325, 581, -415, -414, 547, -462, -346, 2,
	-452, -276, -501, -415, -415, -353, -421, 249, 249, -380,
	532, 340, -382, -452, -445, -497, -420, -419, 184, 39,
	134, 322, 216, -445, -274, -333, -445, -445, -501, -446,
	-446, -444, 581, -565, -497, 581, -347, -455, -544, -338,
	582, -501, -201, -545, -180, 5, 330, -180, -180, -180,
	-342, 504, 504, 25, 366, -471, 578, 579, 8, -501,
	580, -495, -495, -495, -342, 186, 186, 186, -507, -507,
	2, -230, -351, -230, -230, -302, -303, -230, -230, -230,
	-373, 549, -498, -408, 520, 83, 391, 500, -498, -226,
	409, -268, -268, -281, -290, -251, 199, 401, -507, 325,
	-412, 213, -232, 325, -471, -275, -251, 580, -396, 551,
	254, 254, 532, -268, -275, 254, 213, -268, 213, -275,
	2, -275, -576, 391, 335, -421, 60, -317, 276, 389,
	326, -227, 409, 449, 355, -128, -128, -128, 580, -592,
	532, 137, -281, -302, -281, -290, -507, -285, 449, 355,
	409, 323, -296, -496, -496, -374, 449, 355, 409, -290,
	-507, -283, -507, -238, -251, -238, 436, -265, 400, 555,
	45, -613, -228, -128, -128, -128, 580, -266, -229, 409,
	5, 213, -268, 5, -268, 213, 5, -251, -268, -290,
	-507, -596, 24, 142, -268, -290, -507, -256, -510, 330,
	528, -574, 436, 504, 504, -457, -124, -195, 549, -124,
	-189, 224, 573, -571, -251, 541, -251, -307, -310, -308,
	-268, -207, -208, 551, 549, 153, -300, -281, 578, -192,
	-510, -281, -466, -291, -292, 153, -333, 325, -510, 38,
	153, 580, 2, 2, -284, 340, 325, -267, 213, -234,
	144, -613, -265, -415, -346, -371, -406, 418, 340, -334,
	537, -274, -371, -348, 585, 186, 563, 582, -334, -461,
	573, -101, -101, -192, 585, 580, 563, 563, 580, -510,
	-510, 581, 585, -232, -281, -267, 228, 228, -273, -252,
	581, 585, 582, 580, -200, 344, -199, 145, 256, 241,
	458, 459, 460, 461, 136, -465, -198, -125, 186, 186,
	-61, 549, 488, -192, 584, -251, -378, -378, -378, 446,
	446, -251, -277, -265, -281, -278, -302, 182, 182, -265,
	526, -402, 341, 281, -448, -225, 557, -281, 584, -421,
	-421, 149, 149, -421, -422, -422, -421, 149, 186, 580,
	-421, -432, 33, 33, 581, 585, -417, -421, 581, 540,
	-338, -338, 581, 573, -501, 584, 581, -430, 146, -421,
	498, 294, 211, 292, -391, 292, -391, -391, -495, 5,
	-501, 573, -558, -271, 580, -251, 547, -337, 346, 581,
	-473, -471, -421, -421, -421, -421, -421, -495, -476, -476,
	-491, -491, -421, -426, -421, -473, -471, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, 138, 325, 334, -422,
	-427, -426, -421, -421, -471, 581, 581, 581, -353, -101,
	580, 287, -365, 204, -421, -465, 585, -365, -365, 581,
	-452, -452, 580, -421, 249, 579, 585, 587, 563, -333,
	582, -444, -445, 579, 581, 585, 581, 585, -405, 38,
	581, -501, -415, -203, -202, 135, 53, 107, 133, 330,
	-342, -342, 343, 5, 8, 578, 579, 582, -495, 581,
	581, 581, -342, -342, -342, -230, -230, 119, 313, -421,
	504, 504, 60, 220, 153, 325, 534, -529, -524, 151,
	-421, 580, 228, 580, 580, 2, -223, 142, 449, 24,
	-594, 2, 532, 153, -230, 153, -230, 553, -317, 580,
	580, 504, 436, -244, 504, 549, -353, -421, -193, 126,
	-500, -581, 584, -581, 584, 436, 504, 504, 436, 504,
	504, 549, 166, 166, 555, -238, 549, -353, 504, -475,
	48, 26, 325, -284, -230, 153, 504, 504, 516, 449,
	-510, 330, -290, -507, -285, 449, 355, 409, -465, -197,
	344, -196, 145, 420, 136, 256, -465, -195, 186, 240,
	549, -285, 2, 581, 581, 585, -530, 38, 338, 338,
	580, -281, -82, 549, -464, -497, -577, 549, 43, -283,
	38, 153, -574, -128, -285, -469, -470, 5, 38, -281,
	153, 340, 325, -235, 263, -613, -505, -545, -338, -371,
	-360, 326, 91, 581, -415, -362, -346, -421, 2, 581,
	-190, -191, -510, -510, -510, -192, -204, -204, -413, -311,
	580, -267, -252, 580, -204, -269, 2, -511, 585, 580,
	563, 563, 563, -198, -465, -124, -128, 344, -281, 573,
	-378, -323, -322, 359, 334, -323, 427, 427, 341, 176,
	259, -224, -266, -421, -421, 149, 33, 33, -421, -421,
	-432, 581, -421, -421, -353, 579, 5, -421, 581, 581,
	8, -421, 581, 582, -559, -251, -421, 581, 60, 581,
	581, 585, 585, 581, 581, 581, 581, 581, 581, 581,
	-427, 186, 138, 334, 580, 581, 581, -101, -429, 207,
	60, -452, -429, -429, -380, -342, -452, -419, -266, 578,
	-501, -497, -455, 580, 582, -202, 563, -510, -510, 549,
	579, 2, 578, -501, 581, 119, -268, -268, 488, 427,
	-238, 381, -412, 153, -531, 93, -533, 76, 168, 102,
	325, 330, 522, 381, 72, 126, 397, -605, 38, 560,
	581, -340, -449, -544, 580, -251, -340, -342, 325, 477,
	126, 325, 126, 119, 2, 516, 79, -268, -275, -342,
	-342, -281, -290, -507, 160, 581, 585, 563, 2, 573,
	573, -290, -507, -285, -290, -507, -283, 357, 166, 160,
	581, -266, 5, 5, 153, -263, 76, -268, 5, -268,
	-284, 119, 436, 504, 504, -195, 585, 580, 563, 563,
	-195, -511, -124, 2, -333, -324, 230, -268, -528, -525,
	-526, 381, -532, -534, 168, 381, -128, 2, -206, -205,
	-251, 5, 580, -309, 344, 579, -579, 344, -578, 117,
	136, -507, -375, -128, -285, -333, 581, 585, 147, -397,
	532, -266, -281, 153, -236, 262, -613, -505, -233, -400,
	-398, 139, 580, 340, -128, -338, 563, 581, 581, 119,
	119, 222, 152, -340, 580, 580, -342, 119, 581, -199,
	-200, -510, -124, -510, -198, -465, -62, -63, 228, 93,
	364, -278, 488, 228, 580, 580, -224, -421, -421, -421,
	581, -338, -501, 573, -553, 359, 581, -448, -421, -421,
	-422, 186, 580, -432, 581, -554, 548, -421, -366, -367,
	-421, 426, 108, 205, -554, -554, 581, -497, 2, -510,
	2, 578, 2, 220, 38, 400, -412, -275, -279, -272,
	-251, 168, 213, 330, 545, -396, 254, 580, -422, -281,
	580, 2, 30, -606, 130, 233, 581, 585, -450, -262,
	-251, -421, -450, 581, 581, 330, 330, -421, -471, 580,
	-230, -230, 581, 581, -421, 504, -500, 100, -498, 2,
	-581, -265, -421, 504, 5, -230, -279, -230, -230, -263,
	516, -290, -507, -285, -196, -197, -510, -124, -195, 38,
	-314, 232, 2, -530, 254, -272, 254, -604, 549, 581,
	585, 563, 563, -307, -207, -83, -84, 505, -464, 585,
	580, 563, -333, 38, 5, 580, 580, -251, 340, 580,
	-266, -246, 92, -613, -505, -234, -371, 326, -342, 93,
	-400, -428, -192, 580, 580, -312, 81, 94, 127, 212,
	189, 229, 469, 475, 28, -312, 581, -340, -340, 581,
	580, -192, 581, 585, 28, 580, 28, 580, -281, -302,
	-353, -353, 581, -338, 60, 585, 581, 581, -422, -432,
	581, -555, -556, -271, 585, 580, 580, 450, 579, 2,
	-238, 381, -251, -533, -272, 325, 532, -421, -253, 580,
	-421, 38, 233, 131, 218, -411, -607, 101, 478, 221,
	-449, -224, 581, -410, 532, 397, -263, -340, 580, 580,
	580, 563, 186, 580, -475, -230, -284, 581, -586, 395,
	-128, -318, -319, 220, 580, -313, 340, 119, 313, -205,
	-498, -498, 581, 38, -84, 9, -578, -579, -421, 38,
	-128, -469, -340, -281, -340, 340, -240, -239, 271, -505,
	-235, 581, -275, -371, -511, -511, -410, 581, 581, -511,
	-63, -342, -342, 581, 581, -560, 389, 428, 206, -353,
	-339, 581, 585, 38, -367, 2, 2, 2, 400, 153,
	208, 581, -535, 286, -251, 581, 131, 218, -314, 580,
	-225, -450, -314, 208, -281, -582, 532, 581, -326, -325,
	-322, -328, -327, -322, -353, -498, 100, 357, -353, -263,
	-589, 187, -588, 5, 10, -207, 357, -341, -451, -268,
	82, 119, -324, -128, 581, -128, 581, 581, -397, 581,
	-281, -237, -512, 400, 402, -613, -236, -415, 581, 581,
	-411, -410, -320, -316, 581, 581, 581, 581, -561, -562,
	50, 519, 109, -421, -561, -561, -556, -558, 168, 549,
	-536, -539, -538, 340, 456, 187, 358, 581, 477, 544,
	-320, -342, 549, -333, -421, -410, 581, 585, 537, 581,
	585, 537, 581, 186, 581, -230, -194, 549, 46, -313,
	-281, 581, 585, 380, 132, 142, -314, -604, -410, 580,
	-411, 580, -243, -242, -613, -491, -246, 139, -192, -192,
	-314, -411, -208, 549, -192, -563, 151, -562, 377, 181,
	427, 377, 181, -563, -563, -272, 55, -538, 340, -539,
	340, 526, 132, -606, 581, 55, -535, -314, -325, 220,
	-327, 186, 357, 434, -588, 30, -245, -244, 580, -451,
	428, 428, 2, -318, -313, -411, -340, -314, -340, -241,
	-342, -240, 326, 526, -320, -314, -415, 109, 204, 499,
	313, 33, 563, -537, 313, 416, 64, 449, -537, -415,
	563, -536, 580, 580, 344, -342, 2, -207, -314, 581,
	-320, 581, -237, 449, -208, -320, 427, 348, -562, -421,
	23, 330, 126, -421, -606, -353, -353, -191, 580, 581,
	-313, -320, -410, -208, -411, -243, -361, -415, -208, 581,
	581, -191, -231, 64, 416, -245, -208, -411, -415, -314,
	-415, -415, -315, -316, 504, 581, -415, -314, -320, 580,
	-320, -208, -353, -208, -415, 581, -415, -315,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 527, 528, 530, 531, 532, 534,
	535, 537, 539, 541, 542, 543, 545, 546, 548, 549,
	550, 551, 552, 554, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	621, 623, 0, 1314, 1316, 1318, 1320, 0, 765, 0,
	36, 37, 39, 0, -2, 314, 316, 318, 0, 345,
	347, 348, 350, 352, 353, 354, 356, -2, 0, 462,
	463, 465, 467, -2, 0, 955, 957, 0, 610, 612,
	0, 960, 962, 0, 0, 632, 633, 0, 1421, -2,
	626, 628, 630, 695, 697, 699, 701, 703, 705, 707,
	709, 711, 712, 714, 716, 718, 720, 722, 723, 725,
	727, 729, 730, 732, 733, 735, 737, 739, 741, 743,
	745, 747, 749, 751, 753, 755, 757, 759, -2, 762,
	-2, -2, 0, -2, -2, -2, 1332, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 406, 408, 410, 412,
	414, 417, 419, 421, 1479, 469, 471, 473, 475, 477,
	479, 481, 0, -2, 1493, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1452, 1454, 1456, 1458, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 529, 533, 536, 538, 540, 544,
	547, 553, 555, 557, 514, 515, 518, 2157, 2174, 2175,
	2176, 2179, 2180, 2181, 2182, 2183, 2184, 2622, 2704, 2705,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 516, 517, 1132, 0,
	581, 579, 2142, 582, 2426, 584, 586, 456, 457, 458,
	459, 460, 461, 0, 603, 594, 1491, 604, 606, 607,
	608, 609, 576, 574, 0, 603, 2210, 601, 1312, 1313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 385, 1181, 1182, 1183, 1297, 1298, 2470, 1339, 0,
	218, 622, -2, -2, -2, 2587, -2, 654, -2, 661,
	2591, 2472, 666, 0, 668, -2, 671, 1315, 1317, 1319,
	763, 764, 2160, 0, 0, 0, 0, 0, 38, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 228, -2, -2, -2, -2,
	0, 0, 2516, 2262, 2110, 2176, 2113, 2108, 315, 317,
	319, 320, 0, 0, 0, 0, 0, 0, 346, 349,
	351, 355, -2, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1016, 1008, 1009, 1239,
	0, 0, 0, -2, 464, 466, 519, 520, 0, 1480,
	1480, -2, 0, 0, 0, 0, 285, 274, 956, 958,
	959, 0, 0, 0, 0, 611, 613, 0, 0, 256,
	961, 963, 964, 0, 0, 0, 0, 0, 287, 0,
	0, 627, 629, 631, 696, 698, 700, 702, 704, 706,
	708, 710, 713, 715, 717, 719, 721, 724, 726, 728,
	731, 734, 736, 738, 740, 742, 744, 746, 748, 750,
	752, 754, 756, 758, 760, 761, 771, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	859, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 937,
	0, 774, 776, 777, 778, 0, 837, 857, 858, 867,
	0, 1172, 1481, 1341, 1322, 1336, 1341, 1324, 1325, 1326,
	1327, 1328, 1333, 1335, 1329, 1330, 1331, 42, 44, 46,
	48, 50, 52, 54, 56, 58, 407, 409, 411, 413,
	415, 418, 420, 422, -2, 1450, 1451, 470, 472, 474,
	476, 478, 480, 482, 614, 0, 616, 0, 775, -2,
	0, 1485, 1485, 1485, 0, 0, 1451, 1449, 0, 619,
	620, 675, 676, 1753, 0, 0, 0, 0, 0, 0,
	0, 2007, 1839, 0, 677, -2, 1870, 1872, 2562, 2587,
	2006, 1874, 1875, 1876, 1877, 1878, 0, 1880, 1881, 1882,
	1883, 1884, 1885, 0, 1887, 0, 1892, 1893, 1894, 0,
	2569, 2087, 2170, -2, 0, 0, 2575, 2166, 0, 1973,
	1910, -2, -2, 2193, 2172, 1685, 1686, 1687, 1688, 1689,
	-2, -2, 2605, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 0, 2550, 2570, 2571, 2576, 2578,
	2572, 2559, 1935, 2275, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1712, 1721, -2,
	-2, -2, -2, -2, -2, -2, 2563, 2564, 2581, 2584,
	2590, 2595, 2596, 2568, 2577, 2604, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 1713, -2, -2, -2, -2, 1468, 2439, 1471,
	1132, 1469, 1453, 1455, 0, 1457, 0, 0, 0, 1462,
	1488, 1486, 0, 1537, 1466, 1467, 1555, 1555, 1579, 0,
	1560, 0, 1579, 1480, 1606, 0, 1566, 2462, 1911, 1912,
	0, 2176, 2171, -2, -2, 2602, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 0, 583, 585, 0, 0,
	0, 602, 1490, 0, 0, 0, 0, 0, 0, 0,
	388, 389, 390, 391, 392, 2570, 0, 0, 0, 397,
	0, 399, 400, 401, 402, 403, 404, 405, 187, 2570,
	487, 512, 0, 187, 2570, 490, 187, 2570, 493, 0,
	496, 1237, 187, 2570, 499, 2138, 187, 2570, 502, 504,
	2146, 187, 2570, 508, 2153, 2151, 509, 2570, 511, 290,
	288, 289, 2189, 2190, 2197, 2198, 2199, 2200, 2603, 2605,
	1308, 1309, 1310, 1311, 0, 1338, 1238, 624, 625, 0,
	649, 0, 653, 2558, -2, 0, 2481, -2, 657, 1342,
	1346, 1347, 1348, 1349, 1350, 0, 0, 0, 0, 1355,
	0, 0, 663, 0, 0, 650, 651, 669, 672, 0,
	766, 767, 768, 769, 770, 70, 0, 2570, 1606, 72,
	0, 2132, 2201, 2202, 2203, 2204, 2205, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 76, 0,
	2570, 81, 0, 2570, 0, -2, 92, 0, 100, 0,
	2135, 109, 0, 2570, 0, 2107, -2, 0, 199, 275,
	276, 0, 983, -2, 2570, 1180, 0, 0, 0, 0,
	946, 2104, 2109, 947, 2128, 948, 2114, 0, 321, 322,
	323, 324, 325, 0, 326, 2570, 328, 329, 0, 331,
	332, 2570, 334, 335, 0, 337, 0, 239, 240, 2570,
	359, 361, 0, 363, 364, 0, 366, 0, 0, 0,
	370, -2, 386, 0, 383, 373, 374, 376, 377, 378,
	379, 380, 0, 426, 424, 2143, 0, 0, -2, 2570,
	0, 980, 0, 0, 1217, -2, 2570, 1177, 0, 1224,
	2570, 1220, 0, -2, 0, 1478, 2570, 1359, 1012, 1013,
	1014, 1015, 1618, 453, 0, 1386, 0, 1388, 0, 1407,
	1612, 1555, 0, 0, 1617, 0, -2, 570, 2159, -2,
	522, 0, 523, 0, -2, 0, 302, 0, 0, 965,
	966, 967, 968, 969, 972, 973, 974, 975, 1592, 257,
	259, 0, 0, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 0, 0, 634, 0, 0, 772, 773, 0,
	0, 783, 784, 785, 0, 302, 2473, 2435, 2296, 792,
	0, 795, 798, -2, 0, 0, 0, 0, 802, 0,
	807, 808, 809, 0, 0, 813, 815, 954, 817, 0,
	0, 819, 0, 823, 0, 826, 0, 828, 0, 830,
	-2, -2, -2, 838, 839, -2, 843, -2, 0, 846,
	848, 0, 850, -2, 0, 859, 855, 856, 0, 0,
	0, 0, 875, 876, 0, 885, 0, 888, 889, 890,
	0, 892, 893, 0, 895, 896, 897, 898, 0, 0,
	901, 902, -2, -2, 906, 908, 0, -2, 0, 924,
	0, 928, 0, 0, 936, 0, 779, 780, 187, 1610,
	1321, -2, 1323, 0, -2, 0, 615, 0, 618, 1510,
	1436, 1433, 0, 1507, 1508, 1437, 0, 0, 0, 1444,
	0, 1483, 1484, 0, 0, 0, 1423, 1424, 0, 0,
	0, 0, 2012, 2013, 2014, 2015, 2016, 2017, 2020, 2021,
	2018, 2019, 2022, 2023, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 2026, 2027, 0, 0, 2029, 0, 2031, 0,
	0, 0, 0, 0, 0, 1818, 1820, 2095, 0, 0,
	2028, 1758, 1759, 1760, 1761, 1762, 1797, 1798, 0, 0,
	1871, 2092, 2091, 1873, 0, 2043, 0, 1886, -2, 0,
	2007, 2038, 0, 0, 1895, 1896, 1897, 0, 0, 2043,
	0, 0, 2086, 1907, 1908, 1750, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 1698, 0, 1700,
	0, 1701, 1702, 1709, 1722, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 2067, -2, 0,
	0, 0, 0, 1714, 0, 1470, 0, 0, 1541, 2096,
	2100, 2101, 1541, 1541, 0, 0, 2044, 1603, 1603, 0,
	0, 1598, 1598, 1598, 1596, 1579, 0, 1579, 1589, 0,
	1579, 1579, 0, -2, 1560, 0, 0, 1589, 0, 1573,
	558, 560, 562, 564, 565, 566, 568, 1607, 1608, 0,
	0, 0, 0, 2177, 0, 0, 0, 0, 0, 2162,
	0, 342, 0, 0, 0, 2526, 2472, -2, 588, 605,
	1480, 0, 2046, 1633, 1637, 0, 1639, 1640, 1641, 1642,
	1643, 0, 0, 1634, -2, 1710, 1712, 1733, 2194, 2195,
	2196, 1693, 1694, 1695, 1696, 1697, 1705, 1692, 1692, 1692,
	1703, 1732, 1724, 1732, 1728, 1678, 1679, 1680, 1715, 1716,
	1717, 1718, 0, 2526, 2472, -2, 596, 0, 0, 1418,
	203, 205, 206, 207, 208, 209, 387, 0, 394, 395,
	396, 0, 483, 0, 185, 186, 0, 187, 2570, 488,
	0, 491, 0, 187, 2570, 2102, 497, 0, 500, 0,
	0, 506, 0, 0, 0, 0, 0, 187, 1420, 0,
	0, 0, 0, -2, 659, 664, 665, 0, 1344, 0,
	1351, 686, 687, 688, 1353, 1354, 0, 1356, 662, 689,
	690, 691, 692, 693, 694, 0, 2116, 2117, 2118, 2119,
	2122, 2123, 0, 0, 660, 679, 667, 0, 673, 110,
	1294, 0, 0, 149, 0, 1294, 1294, 0, 0, 0,
	0, 174, 0, 1051, 0, 0, 0, 0, 0, 134,
	145, 122, 123, 0, 0, 0, 0, 0, 0, 82,
	1154, 0, 1157, 0, 0, 0, 0, 0, 0, 0,
	1170, 0, 0, 0, 0, 0, 0, 0, 96, 97,
	0, 133, 0, 0, 1383, 0, 128, 112, 0, 0,
	0, 135, 147, 0, 178, 180, 1048, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 210, 0, 0, 0,
	1178, 0, 1477, 0, 0, 2570, 0, 1592, 2343, -2,
	-2, 257, 1592, 945, 0, 0, 2177, 2112, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 365, 367, 368,
	369, 0, 1216, 0, 375, 416, 1103, 2570, 0, 0,
	443, 438, 0, 440, 0, 0, 0, 1153, 2570, 1151,
	2147, 0, 1175, 0, 1132, 2570, 2145, 0, 0, 0,
	1225, 2186, 1234, 1238, 1373, 0, 455, 0, 1389, 1391,
	0, 0, 1613, 0, 1615, 1555, 1480, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 263, 0,
	1591, 0, 0, 1592, 257, 2450, 302, 302, 1592, 636,
	1592, 638, 0, 0, 786, 787, 0, 302, 302, 302,
	793, 794, 796, 797, -2, -2, -2, -2, 799, 800,
	882, 0, 0, 0, 881, 812, 816, 0, 939, 2458,
	2472, 2526, 952, 882, 2262, 882, 2262, 882, 2262, 827,
	829, 832, 870, 878, 842, 847, 0, 0, 852, 860,
	-2, 0, 862, 0, 864, 0, 866, 882, 883, 886,
	891, 894, 899, 900, 0, 915, 920, 921, 917, 0,
	0, 0, 0, 0, 0, 931, 932, 0, 0, 1171,
	0, 1334, 1510, 1436, 617, 1427, 1509, 1428, 1435, 1438,
	0, 0, 1440, 0, 1442, 0, 1505, 1506, 1513, 1514,
	0, 1524, 1525, 1517, 0, -2, 0, 0, 1520, 1521,
	1446, 0, 1463, 1464, 1465, 1494, 1497, 1253, 0, 2704,
	1754, 1628, 1755, 1756, 2131, 0, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, -2, -2, -2, -2,
	-2, -2, -2, -2, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, -2, -2, -2, 1795, 1796,
	-2, 2030, 2032, 0, 2095, 0, -2, 0, -2, -2,
	-2, -2, 1815, 0, 1817, 1822, 1824, 1826, 0, 0,
	0, 0, 2094, 1836, 2078, 2079, 0, 0, 2009, 2010,
	2011, 1821, 0, 1840, 2093, 2090, 0, 0, 2042, 1493,
	1899, 0, 0, 0, 0, 1906, 1891, 2040, 0, 2039,
	0, 0, 0, 2050, 0, 2085, 2081, 0, 2129, 1749,
	1736, 1737, 1738, 1739, 1740, 1741, 1751, 0, 2126, 2163,
	2169, 1983, 0, 0, 0, 1936, 1937, 1938, 1939, 1940,
	0, 1942, 1943, 0, 1945, 1946, 0, 1948, 1949, 0,
	1951, 1952, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 0, 0, 1955, 0, 2053, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1957, 0, 1959, 2044,
	2064, 0, 0, 1841, 0, 0, 0, 2007, 0, 1962,
	2044, 2072, 0, 0, 0, 0, 0, 2044, 0, 2077,
	0, 1969, 0, 1971, 1472, 0, 0, 1623, 0, 0,
	0, 2099, 1623, 1623, 0, 1536, 0, 0, 1599, 1600,
	1601, 1602, 0, 0, 1603, 0, 1593, 1597, 1594, 1595,
	1589, 1552, 0, 0, 2133, 1589, 1558, 1588, 0, 1132,
	1578, 1589, 1589, 0, -2, 1562, 1579, 0, 0, 559,
	561, 563, 567, 569, 0, 0, 1493, -2, 0, -2,
	304, 1131, 0, 0, 0, 0, 578, 580, 0, 0,
	503, 0, 593, 0, 572, 0, 575, 0, 1624, 1627,
	0, 0, 1638, 1644, 1645, 0, -2, 0, 0, 1734,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 398,
	513, 187, 485, 0, 187, 187, 494, 0, 0, 187,
	505, 187, 2154, 187, 2152, 291, 510, 1419, 221, 0,
	652, 0, 1343, 1352, 0, 683, 0, 685, 0, 2120,
	2124, 2121, 2125, 0, 674, 0, 0, 0, 0, 1293,
	0, 1260, 0, 0, 153, 2570, 0, 189, 0, 0,
	1096, 2139, 0, 1088, 0, 0, 2282, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1155, 1156, 1158, 1165, 1167, 0, 1161,
	2127, 0, 0, 1162, 0, 1164, 1166, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 0, 0,
	0, 1382, 1383, 0, 0, 0, 121, 125, 0, 0,
	0, 0, 2106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1212, 1210, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 0, 0,
	-2, 0, 0, 0, 0, 0, 231, 0, 293, 2105,
	2115, 0, 970, 971, 327, 330, 333, 336, 227, 0,
	371, 0, 0, 1018, 993, 0, 0, 425, 302, 0,
	0, 439, 443, 2156, 978, 1149, 1152, 0, 1132, 2570,
	1189, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	2570, 2134, 2185, 2186, 1375, 1383, 0, 1623, 0, 1405,
	1392, 0, 0, 0, 1405, 1409, 1410, 1412, 1413, 0,
	0, 1614, 1620, 521, 571, 1480, 1480, 302, 300, 2403,
	298, 295, 297, 0, 0, 0, 1019, 1021, 1022, 1023,
	189, 0, 2186, 1088, 2332, 2186, 0, 1395, 1397, 0,
	251, 0, 260, 1592, 258, 263, 0, 0, 0, 437,
	635, 640, 781, 0, 302, 789, 790, 791, 834, 872,
	880, 919, 801, 803, 804, 805, 0, 0, 953, 949,
	950, 951, 818, 882, 821, 882, 824, 882, 845, 849,
	854, 861, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 0, 0, 925, 926, 927, 929, 934, 933, 938,
	1611, 1431, 1432, 1434, 0, 1443, 0, 0, 1519, -2,
	-2, 1518, 1522, 1523, -2, -2, -2, -2, 1439, 0,
	1448, 1445, 0, 1504, 1251, 1252, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1837, 0, -2, 1816, 1819,
	1823, 1825, 1827, 0, 0, 0, 0, 0, 0, 2033,
	0, 2035, 1838, 2088, 2091, 2005, 0, 0, 1492, 1493,
	1493, 0, 1905, 0, 2041, 0, 2048, 2049, 0, 1898,
	0, 2082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1909, 0, 0, 0, 0, 1941, 1944, 1947, 1950,
	0, 0, 0, 0, 1930, 0, 0, 0, 1934, 1704,
	1690, 0, 1732, 1730, 1731, 1725, 1732, 1729, 1682, 0,
	1681, 0, 1954, 0, 1956, 1958, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 1845, 1846, 1961, 2070, 2071, 0, 0,
	0, 0, 0, 0, 1967, 0, 2076, 1968, 1970, 1480,
	0, 1473, 0, 1538, 1527, 1622, 0, 2097, 1592, 1540,
	1542, 2098, 2136, 1527, 1527, 0, 2045, 0, 0, 1583,
	0, 0, 0, 1585, 1556, 0, 0, 1550, 0, 1546,
	1547, 1548, 1549, 1557, 1132, 1587, 1559, 1563, 2163, 0,
	1589, 0, 1574, 0, 1576, 1609, 0, 1568, 1571, 0,
	0, 2178, 1623, 0, 338, 343, 344, 339, 340, 341,
	587, 0, 0, 0, 0, 2047, 0, 1629, 0, 1635,
	0, 0, 0, 0, 595, 0, 0, 0, 204, 1417,
	393, 484, 187, 489, 492, 2103, 187, 498, 501, 507,
	217, 0, 648, -2, 681, 682, 684, 0, 680, 150,
	1294, 0, 0, 1256, 1258, 2150, 1262, 1268, 1271, 0,
	155, 2570, 165, 0, 1067, 0, 2137, 0, 0, 0,
	0, 0, 0, 1296, 0, 0, 2570, 187, 2570, 187,
	168, 170, 173, 0, 177, 175, 0, 1055, 0, 0,
	1058, 111, 1294, 0, 0, 114, 118, 126, 0, 0,
	0, 132, 0, 0, 0, 1273, 1277, 1285, 0, 0,
	0, 1159, 1160, 1163, 1169, 83, 0, 0, 0, 1281,
	1283, 1289, 93, 94, 2148, 95, 0, 1255, 0, 0,
	0, 0, 179, 116, 120, 127, 0, 1291, 113, 0,
	202, 0, 0, 192, 187, 2570, 0, 194, 0, 195,
	196, 211, 0, 0, 0, 981, 982, 1211, 1173, 1174,
	0, 1179, 0, 0, 0, 0, 1592, 223, 0, 1592,
	231, 0, 2111, 0, 358, 0, 0, 0, 0, 1017,
	1114, 0, 988, 0, 0, 0, 431, 427, 0, 436,
	442, 441, 447, -2, 0, 0, 0, 0, -2, 0,
	0, 1227, 1221, 1222, 0, 0, 0, 0, 2570, 1377,
	1383, 0, 1478, 1493, 454, 1384, 1405, 0, 0, 0,
	1394, 1390, 1387, 1623, 0, 0, 0, 0, 0, 1616,
	1619, 524, 525, 277, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 1024, 1028, 0, 2186, 2186, 0, 2141,
	0, 0, 0, 0, 261, 0, 264, 0, 0, 0,
	269, 270, 271, 272, 273, 263, 253, 1592, 0, 0,
	637, 0, 0, 788, 0, 811, 820, 822, 825, 863,
	865, 882, 909, 910, 1045, 0, 1045, 0, 0, 930,
	1441, 0, 1516, 1447, 1498, 1499, 0, 1253, 0, 1757,
	1800, 0, 0, -2, 0, 0, 1804, 0, 0, 0,
	-2, 0, 0, 0, 2034, 2036, 0, 2090, 1900, 0,
	0, 0, 1904, 1888, 1889, 0, 2008, 2051, 2080, 2084,
	0, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 0, 2130,
	2164, 2168, 1981, 1982, 1986, 2144, 0, 0, 0, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 1723, 1727,
	0, 0, 2052, 2063, 2065, 1842, 1843, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, -2, -2, -2,
	1860, 1861, 1862, -2, -2, -2, 0, 0, 0, 2066,
	2068, 2069, 2073, 2074, 0, 1964, 1965, 1966, 2075, 0,
	1480, 1474, 1535, 0, 1621, 1539, 0, 1535, 1535, 1487,
	1581, 0, 0, 1605, 0, 1553, 0, 1554, 0, 1586,
	0, 1561, 1564, 1565, 1575, 0, 1567, 0, 1570, 0,
	1900, -2, 303, 305, 307, 0, 310, 311, 0, 0,
	590, 591, 589, 573, 0, 0, 1631, 0, 0, 1707,
	1711, 1735, 598, 599, 597, 486, 495, 219, 0, 1590,
	0, 0, 0, 0, 0, 0, 188, 1065, 1095, 0,
	0, 0, 1087, 0, 0, 1101, 157, 0, 0, 0,
	0, 166, 0, 0, 163, 0, 172, 176, 1052, 0,
	0, 0, 0, 1261, 0, 0, 0, 129, 130, 131,
	0, 136, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 1367, 1368, 0, 1362, 0, 0, 0, 190,
	0, 0, 0, 1250, 213, 0, 0, 0, 0, 0,
	1214, 1215, 1274, 1278, 1286, 0, 0, 0, 231, 229,
	0, 232, 0, 235, 236, 0, 231, 225, 0, 0,
	0, 1132, 372, 991, 1102, 0, 1104, 0, 989, 0,
	0, 1103, 423, 0, 430, 0, 444, 0, 0, 1153,
	0, 0, 1176, 1187, 1132, 0, 1226, 1228, 0, 1236,
	0, 0, 0, 1379, 1383, 0, 1372, 1373, 1512, 1385,
	1403, -2, 0, 0, 1493, 1411, 1408, 1414, 1415, 0,
	299, 0, 294, 296, 0, 280, 0, 0, 1020, 1025,
	0, 0, 0, 0, 0, 1396, 1398, 0, 0, 0,
	0, 0, 0, 252, 263, 1592, 286, 0, 782, 806,
	873, 911, 1044, 0, 0, 913, 0, 0, 1515, 1502,
	1503, 1500, 1253, 1802, 1806, 0, 0, 0, 1808, -2,
	0, 1830, -2, -2, 2037, 2089, 1879, 1493, 1901, 1903,
	1890, 2083, 1752, 0, 1988, 1985, 0, 1972, 0, 1925,
	1926, 0, 0, 1929, 1931, 1932, 1933, 1691, 1684, 1683,
	2062, 0, 0, 0, 0, 1963, 1475, 0, 1977, 0,
	0, 1543, 1977, 1977, 1582, 0, 1584, 1551, 1544, 0,
	2164, 1577, 1569, 0, 0, 308, 0, 312, 313, 0,
	1625, 1630, 0, 1636, 1706, 220, 151, 152, 1265, 1269,
	1266, 0, 154, 0, 1066, 0, 1069, 0, 0, 0,
	0, 1076, 1088, 0, 0, 0, 0, 0, 1089, 0,
	1118, 0, 1241, 1248, 0, -2, 0, 0, 0, 159,
	182, 0, 0, 1295, 161, 0, 0, 187, 187, 0,
	0, 1257, 1259, 1272, 0, 0, 0, 0, 139, 0,
	0, 1275, 1279, 1287, 1282, 1284, 1290, 0, 1369, 0,
	0, 1292, 200, 201, 0, 187, 0, 187, 193, 187,
	1250, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	224, 292, 231, 360, 0, 1039, 0, 1114, 1106, 1107,
	1108, 0, 1113, 1115, 0, 0, 1005, 990, 0, 1001,
	0, 0, 1018, 993, 0, 428, 445, 0, 448, 0,
	451, 979, 1150, 1184, 1132, 0, 1218, 0, 0, 0,
	0, 0, 0, 0, 1381, 1383, 0, 1374, 1375, 1405,
	1511, 0, 0, 0, 1393, 1512, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 265,
	0, 266, 267, 268, 254, 255, 639, 641, 0, 0,
	647, 1043, 0, 0, 0, 0, 1501, 1810, -2, -2,
	1831, 0, 2165, 2167, 1493, 0, 1974, 1495, 0, 0,
	-2, 0, 0, 0, 1476, 1459, 0, 1534, 1526, 1528,
	1530, 2461, 2257, 2569, 1460, 1461, 1604, 0, 1572, 309,
	592, 0, 1632, 0, 0, 1267, 156, 0, 1070, 1071,
	2140, 1073, 0, 1075, 1077, 1078, 1079, 0, 1082, 2188,
	0, 1086, 0, 1097, 1119, 0, 1128, 0, 1243, 1253,
	1247, 0, 1245, 1130, 0, 158, 160, 181, 1250, 0,
	162, 171, 0, 0, 115, 0, 0, 2251, 142, 140,
	138, 1254, 117, 0, 202, 212, 1249, 214, 197, 187,
	0, 1276, 1280, 1288, 233, 0, 234, 237, 0, 0,
	1054, 0, 992, 1105, 0, 1116, 1117, 995, 0, 994,
	0, 0, 0, 0, 0, 429, 432, 0, 435, 0,
	0, 0, 0, 0, 1229, 1227, 0, 1235, 0, 0,
	0, 1361, 0, 0, 1376, 1377, 452, 1399, 0, 0,
	1405, 1416, 279, 0, 0, 1026, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1027, 1130, 0, 0, 1094,
	0, 284, 262, 0, 643, 0, 645, 0, 912, 914,
	0, 0, 1902, 1992, 0, 0, 1927, 1928, -2, 0,
	1868, 1976, 1978, 0, 0, 0, 0, 0, 1545, 1626,
	1263, 0, 1270, 1068, 1072, 0, 0, 0, 1136, 0,
	0, 1090, 0, 1122, 1123, 1039, 0, 1124, 1125, 1126,
	1242, 1504, 1248, 1039, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 191, 215, 1250, 230, 247, 0,
	1185, 993, 1053, 0, 0, 1003, 0, 1006, 0, 1002,
	999, 1000, 991, 0, 433, 434, 449, 0, 450, 0,
	1188, 0, 0, 1236, 0, 0, 1364, 1360, 1383, 1378,
	1379, 1623, 1402, 1406, 0, 0, 1128, 1130, 1050, 0,
	642, 0, 0, 922, 923, 0, 0, 0, 0, 1987,
	1496, 1869, 0, 0, 1529, 1531, 1532, 1533, 1264, 0,
	0, 1081, 1141, 0, 0, 0, 1120, 1121, 1050, 0,
	1246, 1244, 1099, 0, 1132, 164, 0, 1130, 0, 1059,
	0, 0, 1062, 0, 0, 143, 2251, 141, 0, 187,
	250, 0, 244, 242, 243, 995, 0, 0, 1110, 1112,
	0, 1007, 1039, 1005, 446, 1186, 1219, 1130, 0, 1128,
	0, 1371, 1383, 1365, 1366, 0, 1381, 0, 302, 302,
	1039, 1128, 993, 1049, 302, 644, 646, 1984, 2004, 1993,
	-2, 2529, 2258, 0, 2004, 2004, 1979, 1980, 0, 0,
	1083, 1137, 1138, 0, 1133, 1134, 1135, 2187, 1084, 1085,
	1118, 0, 0, 1136, 183, 1039, 1056, 0, 0, 1057,
	0, 0, 146, 0, 148, 216, 238, 0, 0, 987,
	0, 1109, 0, 0, 0, 0, 1054, 995, 1128, 0,
	1039, 0, 1357, 1370, 0, 1380, 1361, 0, 281, 282,
	1050, 1039, 1623, 0, 283, 1989, 0, 0, 1995, 1996,
	1997, 1998, 1999, 1990, 1991, 1074, 0, 1139, 0, 1140,
	0, 0, 0, 1623, 1127, 0, 1141, 169, 1060, 0,
	1063, 0, 144, 0, 245, 246, 984, 986, 0, 1111,
	996, 0, 998, 993, 1004, 1039, 0, 1050, 0, 1363,
	2149, 1364, 1400, 0, 993, 1050, 1093, 0, 2001, 2002,
	0, 0, 0, 1142, 0, 1145, 1146, 0, 1143, 1098,
	0, 1118, 0, 0, 0, 0, 997, 995, 1050, 1130,
	993, 1128, 1371, 0, 1623, 993, 2000, 2003, 1994, 1080,
	1144, 1147, 1148, 1129, 1100, 0, 0, 248, 0, 1042,
	987, 993, 1128, 1623, 1039, 1358, 1623, 1091, 1623, 1047,
	0, 0, 1038, 1040, 1041, 985, 1623, 1039, 1232, 1050,
	1401, 1092, 1061, 1046, 0, 249, 1230, 1050, 993, 0,
	993, 1623, 0, 1623, 1233, 1047, 1231, 1064,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 569, 3, 575, 570, 3,
	580, 581, 573, 571, 585, 572, 582, 574, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 588, 3,
	561, 563, 562, 566, 584, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 578, 3, 579, 576, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 586, 568, 587, 564,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 565, 57904, 567,
	57905, 577, 57906, 583, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1302
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1450
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1546
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1665
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1689
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1700
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1743
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1793
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1813
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1819
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1931
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1945
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1977
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1983
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 169:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2035
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = nil
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = nil
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 190:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2198
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2202
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2205
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2240
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2245
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2252
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2260
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2374
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2382
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2409
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2521
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = nil
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2538
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = nil
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2654
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2698
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2747
		{
			return unimplemented(sqllex, "alter function")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2789
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2798
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2804
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2809
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2814
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2819
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2824
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2828
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2847
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2855
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2883
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = nil
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2931
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2945
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2965
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2999
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3063
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3099
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3111
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3127
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3131
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3136
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3154
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3155
		{
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			return helpWith(sqllex, "CREATE")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3169
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3173
		{
			return unimplemented(sqllex, "create access method")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			return unimplemented(sqllex, "create cast")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3180
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3183
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{
			return unimplemented(sqllex, "create operator")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3185
		{
			return unimplemented(sqllex, "create publication")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3186
		{
			return unimplemented(sqllex, "create rule")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			return unimplemented(sqllex, "create server")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3190
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3191
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3194
		{
		}
	case 382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3195
		{
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3198
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3199
		{
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3202
		{
		}
	case 386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3203
		{
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3206
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3208
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3213
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3214
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3215
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			return unimplemented(sqllex, "drop server")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3229
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3230
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3231
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3233
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3281
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3304
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3315
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3350
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3385
		{

			sqlVAL.union.val = nil
		}
	case 444:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "DELETE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3472
		{
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3498
		{
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "DROP")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3504
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3698
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3755
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3764
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3788
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3796
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "DELETE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3817
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "INSERT")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3832
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "DELETE")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "INSERT")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3873
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3906
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3995
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3999
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "GRANT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4050
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4062
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "RESET")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "RESET")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "USE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4136
		{
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4137
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "USE")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4160
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4178
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4343
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4355
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return unimplemented(sqllex, "set from current")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4379
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = tree.Low
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = tree.Normal
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = tree.High
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4512
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4513
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4515
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4532
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4533
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4537
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4538
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4542
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4543
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SHOW")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4552
		{
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4556
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4560
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4570
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.str = "client_encoding"
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.str = "timezone"
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4607
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4625
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4688
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4697
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4722
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4727
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4747
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4834
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4853
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = true
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = true
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = false
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4939
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5003
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5042
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = true
		}
	case 868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = false
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5063
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5066
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5112
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5144
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5151
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5172
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5180
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5190
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5208
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5261
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5269
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5295
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5304
		{
		}
	case 922:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5313
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5336
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5407
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5417
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5424
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5557
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5600
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5609
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5659
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5660
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5671
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			return helpWith(sqllex, "RESUME")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5690
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5774
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5841
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5857
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5886
		{

			sqlVAL.union.val = nil
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5892
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.str = ""
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5902
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = nil
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5925
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5929
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5955
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5969
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5984
		{
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5985
		{
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6041
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6067
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6078
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6081
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6084
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6085
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6091
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6107
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6112
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.str = ""
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6255
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6355
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = true
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = false
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6390
		{
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6391
		{
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6492
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6503
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6520
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6530
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6545
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6610
		{
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6612
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6613
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6614
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6615
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6687
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6771
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6780
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6788
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6799
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6804
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6814
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6817
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6819
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6824
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6827
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6842
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6867
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6882
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = true
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6892
		{

			sqlVAL.union.val = true
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = false
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6907
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6921
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6933
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6945
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6955
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6965
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = nil
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7075
		{
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7076
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7103
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7105
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7107
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7109
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7111
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7149
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7167
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7186
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7203
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7220
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = false
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = true
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = false
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = true
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = false
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7284
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7290
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7298
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.str = ""
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.str = ""
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7357
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7363
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7588
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7594
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7606
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7612
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7626
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7632
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7649
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7650
		{
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7654
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7665
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7683
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7692
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7713
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7721
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7742
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7750
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7761
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7765
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7766
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7767
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7786
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7791
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7804
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7818
		{
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7819
		{
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7820
		{
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7837
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7840
		{
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7841
		{
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7869
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7882
		{
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7884
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7888
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.str = ""
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8001
		{

		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8016
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.str = ""
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.str = ""
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.str = ""
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.str = ""
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8071
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8084
		{
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8085
		{
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8114
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8132
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8136
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8145
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8221
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8225
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8263
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8295
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8316
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8331
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8475
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8510
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8512
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8633
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = true
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = false
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8686
		{
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8687
		{
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = nil
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8700
		{
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8701
		{
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = true
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = false
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = false
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = true
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8730
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8731
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8734
		{
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8735
		{
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8776
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8797
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8802
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8919
		{
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8920
		{
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8958
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8960
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8990
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8992
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9007
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9029
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9034
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9039
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9050
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9081
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9120
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9130
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9165
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9176
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9206
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9239
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = nil
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = true
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = false
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.str = tree.AstFull
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.str = tree.AstRight
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.str = tree.AstInner
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9358
		{
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9359
		{
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.str = tree.AstHash
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.str = ""
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9451
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9457
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9463
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9473
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = true
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = false
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = true
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = false
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9535
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9543
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9544
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9562
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9572
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9592
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9601
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9641
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9653
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9654
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = types.Geography
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9703
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9711
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9737
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9745
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = nil
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = types.Int2
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = types.Int
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = types.Float4
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = types.Float
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9788
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9796
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9804
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = types.Bool
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9818
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = types.Float
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9837
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9843
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9865
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = types.String
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = true
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = false
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = types.Date
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9922
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9936
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9953
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9970
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = true
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = false
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = false
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = types.Interval
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9994
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10078
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10093
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = nil
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10123
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10183
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10435
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10501
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10523
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10722
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10748
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10772
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10802
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10813
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10814
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10838
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10904
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11052
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11080
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11090
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11100
		{
			return unimplemented(sqllex, "treat")
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.str = ""
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11262
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11275
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11343
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11372
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = tree.Any
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = tree.Some
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = tree.All
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = tree.Div
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = tree.LT
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = tree.GT
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = tree.LE
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = tree.GE
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = tree.NE
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = tree.Like
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11733
		{
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11734
		{
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11814
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11887
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11903
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11912
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11923
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11932
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11940
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11952
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12178
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12185
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.str = ""
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
