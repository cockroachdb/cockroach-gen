// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:979
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15853

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1918,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 64,
	284, 582,
	-2, 0,
	-1, 76,
	8, 1055,
	29, 1055,
	651, 1055,
	652, 1055,
	-2, 0,
	-1, 77,
	8, 1055,
	29, 1055,
	651, 1055,
	652, 1055,
	-2, 0,
	-1, 80,
	1, 1765,
	140, 1765,
	271, 1765,
	359, 1765,
	422, 1765,
	432, 1765,
	632, 1765,
	664, 1765,
	-2, 0,
	-1, 81,
	1, 1765,
	664, 1765,
	-2, 0,
	-1, 87,
	264, 295,
	566, 295,
	-2, 0,
	-1, 101,
	205, 482,
	250, 1639,
	266, 1639,
	284, 482,
	424, 482,
	436, 1382,
	480, 482,
	497, 1382,
	550, 1382,
	579, 482,
	608, 1382,
	-2, 0,
	-1, 108,
	142, 1918,
	259, 1918,
	591, 1918,
	592, 1918,
	-2, 0,
	-1, 126,
	162, 1889,
	183, 1889,
	196, 1889,
	262, 1889,
	298, 1889,
	372, 1889,
	383, 1889,
	585, 1889,
	-2, 1860,
	-1, 170,
	170, 1192,
	282, 1192,
	427, 1153,
	502, 1153,
	549, 1153,
	569, 1192,
	571, 1153,
	-2, 0,
	-1, 175,
	4, 1920,
	21, 1920,
	22, 1920,
	23, 1920,
	24, 1920,
	25, 1920,
	26, 1920,
	27, 1920,
	28, 1920,
	30, 1920,
	31, 1920,
	37, 1920,
	41, 1920,
	43, 1920,
	44, 1920,
	45, 1920,
	47, 1920,
	48, 1920,
	49, 1920,
	50, 1920,
	51, 1920,
	52, 1920,
	53, 1920,
	54, 1920,
	55, 1920,
	57, 1920,
	58, 1920,
	59, 1920,
	60, 1920,
	62, 1920,
	63, 1920,
	64, 1920,
	65, 1920,
	66, 1920,
	67, 1920,
	68, 1920,
	69, 1920,
	73, 1920,
	74, 1920,
	75, 1920,
	76, 1920,
	78, 1920,
	79, 1920,
	80, 1920,
	84, 1920,
	85, 1920,
	86, 1920,
	87, 1920,
	88, 1920,
	89, 1920,
	90, 1920,
	91, 1920,
	94, 1920,
	95, 1920,
	96, 1920,
	97, 1920,
	98, 1920,
	99, 1920,
	101, 1920,
	103, 1920,
	104, 1920,
	105, 1920,
	106, 1920,
	107, 1920,
	108, 1920,
	109, 1920,
	111, 1920,
	112, 1920,
	113, 1920,
	115, 1920,
	116, 1920,
	117, 1920,
	125, 1920,
	126, 1920,
	127, 1920,
	128, 1920,
	129, 1920,
	131, 1920,
	132, 1920,
	133, 1920,
	134, 1920,
	136, 1920,
	137, 1920,
	138, 1920,
	139, 1920,
	141, 1920,
	142, 1920,
	143, 1920,
	144, 1920,
	146, 1920,
	147, 1920,
	148, 1920,
	151, 1920,
	152, 1920,
	153, 1920,
	155, 1920,
	156, 1920,
	157, 1920,
	159, 1920,
	160, 1920,
	161, 1920,
	163, 1920,
	164, 1920,
	165, 1920,
	166, 1920,
	167, 1920,
	168, 1920,
	169, 1920,
	170, 1920,
	171, 1920,
	172, 1920,
	173, 1920,
	174, 1920,
	175, 1920,
	176, 1920,
	177, 1920,
	178, 1920,
	179, 1920,
	180, 1920,
	182, 1920,
	188, 1920,
	189, 1920,
	190, 1920,
	191, 1920,
	195, 1920,
	197, 1920,
	198, 1920,
	199, 1920,
	201, 1920,
	202, 1920,
	205, 1920,
	206, 1920,
	207, 1920,
	208, 1920,
	209, 1920,
	210, 1920,
	211, 1920,
	212, 1920,
	213, 1920,
	214, 1920,
	215, 1920,
	216, 1920,
	217, 1920,
	218, 1920,
	220, 1920,
	221, 1920,
	223, 1920,
	224, 1920,
	226, 1920,
	227, 1920,
	228, 1920,
	229, 1920,
	230, 1920,
	231, 1920,
	232, 1920,
	233, 1920,
	234, 1920,
	235, 1920,
	236, 1920,
	238, 1920,
	239, 1920,
	240, 1920,
	242, 1920,
	243, 1920,
	244, 1920,
	245, 1920,
	246, 1920,
	250, 1920,
	251, 1920,
	252, 1920,
	253, 1920,
	256, 1920,
	257, 1920,
	258, 1920,
	259, 1920,
	260, 1920,
	261, 1920,
	263, 1920,
	265, 1920,
	266, 1920,
	267, 1920,
	269, 1920,
	271, 1920,
	272, 1920,
	273, 1920,
	275, 1920,
	279, 1920,
	280, 1920,
	281, 1920,
	282, 1920,
	283, 1920,
	284, 1920,
	285, 1920,
	287, 1920,
	288, 1920,
	289, 1920,
	291, 1920,
	292, 1920,
	293, 1920,
	295, 1920,
	296, 1920,
	299, 1920,
	300, 1920,
	301, 1920,
	302, 1920,
	303, 1920,
	304, 1920,
	305, 1920,
	308, 1920,
	309, 1920,
	310, 1920,
	311, 1920,
	313, 1920,
	314, 1920,
	315, 1920,
	316, 1920,
	317, 1920,
	318, 1920,
	319, 1920,
	320, 1920,
	321, 1920,
	322, 1920,
	323, 1920,
	324, 1920,
	325, 1920,
	326, 1920,
	327, 1920,
	328, 1920,
	329, 1920,
	330, 1920,
	331, 1920,
	332, 1920,
	333, 1920,
	334, 1920,
	335, 1920,
	337, 1920,
	339, 1920,
	340, 1920,
	341, 1920,
	342, 1920,
	343, 1920,
	344, 1920,
	345, 1920,
	346, 1920,
	347, 1920,
	348, 1920,
	349, 1920,
	350, 1920,
	351, 1920,
	352, 1920,
	353, 1920,
	354, 1920,
	355, 1920,
	357, 1920,
	358, 1920,
	360, 1920,
	362, 1920,
	363, 1920,
	364, 1920,
	365, 1920,
	367, 1920,
	368, 1920,
	369, 1920,
	370, 1920,
	371, 1920,
	374, 1920,
	376, 1920,
	378, 1920,
	379, 1920,
	380, 1920,
	381, 1920,
	384, 1920,
	385, 1920,
	386, 1920,
	388, 1920,
	390, 1920,
	391, 1920,
	392, 1920,
	393, 1920,
	394, 1920,
	395, 1920,
	396, 1920,
	397, 1920,
	398, 1920,
	399, 1920,
	400, 1920,
	401, 1920,
	402, 1920,
	403, 1920,
	405, 1920,
	406, 1920,
	407, 1920,
	408, 1920,
	409, 1920,
	410, 1920,
	411, 1920,
	412, 1920,
	413, 1920,
	414, 1920,
	415, 1920,
	416, 1920,
	417, 1920,
	418, 1920,
	419, 1920,
	421, 1920,
	422, 1920,
	423, 1920,
	425, 1920,
	426, 1920,
	427, 1920,
	428, 1920,
	429, 1920,
	430, 1920,
	431, 1920,
	432, 1920,
	433, 1920,
	434, 1920,
	435, 1920,
	436, 1920,
	437, 1920,
	438, 1920,
	440, 1920,
	442, 1920,
	443, 1920,
	444, 1920,
	450, 1920,
	451, 1920,
	452, 1920,
	454, 1920,
	455, 1920,
	456, 1920,
	457, 1920,
	458, 1920,
	459, 1920,
	460, 1920,
	461, 1920,
	462, 1920,
	463, 1920,
	464, 1920,
	466, 1920,
	467, 1920,
	468, 1920,
	469, 1920,
	470, 1920,
	472, 1920,
	473, 1920,
	474, 1920,
	475, 1920,
	476, 1920,
	477, 1920,
	478, 1920,
	480, 1920,
	481, 1920,
	482, 1920,
	483, 1920,
	484, 1920,
	485, 1920,
	486, 1920,
	487, 1920,
	488, 1920,
	489, 1920,
	490, 1920,
	491, 1920,
	492, 1920,
	493, 1920,
	494, 1920,
	495, 1920,
	497, 1920,
	498, 1920,
	499, 1920,
	500, 1920,
	501, 1920,
	502, 1920,
	504, 1920,
	505, 1920,
	506, 1920,
	507, 1920,
	508, 1920,
	509, 1920,
	510, 1920,
	512, 1920,
	513, 1920,
	514, 1920,
	515, 1920,
	516, 1920,
	517, 1920,
	518, 1920,
	519, 1920,
	521, 1920,
	523, 1920,
	524, 1920,
	525, 1920,
	526, 1920,
	527, 1920,
	528, 1920,
	529, 1920,
	530, 1920,
	531, 1920,
	532, 1920,
	533, 1920,
	534, 1920,
	535, 1920,
	536, 1920,
	537, 1920,
	538, 1920,
	539, 1920,
	540, 1920,
	541, 1920,
	542, 1920,
	543, 1920,
	545, 1920,
	546, 1920,
	548, 1920,
	549, 1920,
	551, 1920,
	552, 1920,
	553, 1920,
	554, 1920,
	555, 1920,
	556, 1920,
	558, 1920,
	559, 1920,
	561, 1920,
	562, 1920,
	563, 1920,
	564, 1920,
	565, 1920,
	567, 1920,
	569, 1920,
	570, 1920,
	571, 1920,
	572, 1920,
	573, 1920,
	574, 1920,
	575, 1920,
	576, 1920,
	578, 1920,
	579, 1920,
	580, 1920,
	581, 1920,
	582, 1920,
	583, 1920,
	584, 1920,
	587, 1920,
	588, 1920,
	589, 1920,
	590, 1920,
	591, 1920,
	592, 1920,
	593, 1920,
	594, 1920,
	595, 1920,
	597, 1920,
	600, 1920,
	601, 1920,
	602, 1920,
	603, 1920,
	604, 1920,
	605, 1920,
	607, 1920,
	608, 1920,
	609, 1920,
	610, 1920,
	611, 1920,
	612, 1920,
	613, 1920,
	614, 1920,
	615, 1920,
	616, 1920,
	617, 1920,
	618, 1920,
	623, 1920,
	624, 1920,
	625, 1920,
	626, 1920,
	627, 1920,
	628, 1920,
	-2, 0,
	-1, 177,
	1, 1765,
	664, 1765,
	667, 1765,
	-2, 0,
	-1, 178,
	1, 1765,
	566, 1765,
	664, 1765,
	667, 1765,
	-2, 0,
	-1, 214,
	162, 1888,
	183, 1888,
	196, 1888,
	262, 1888,
	298, 1888,
	372, 1888,
	383, 1888,
	585, 1888,
	-2, 1863,
	-1, 275,
	4, 1927,
	5, 1927,
	6, 1927,
	7, 1927,
	8, 1927,
	9, 1927,
	10, 1927,
	21, 1927,
	22, 1927,
	23, 1927,
	24, 1927,
	25, 1927,
	26, 1927,
	27, 1927,
	28, 1927,
	30, 1927,
	31, 1927,
	37, 1927,
	38, 1927,
	41, 1927,
	43, 1927,
	44, 1927,
	45, 1927,
	46, 1927,
	47, 1927,
	48, 1927,
	49, 1927,
	50, 1927,
	51, 1927,
	52, 1927,
	53, 1927,
	54, 1927,
	55, 1927,
	57, 1927,
	58, 1927,
	59, 1927,
	60, 1927,
	62, 1927,
	63, 1927,
	64, 1927,
	65, 1927,
	66, 1927,
	67, 1927,
	68, 1927,
	69, 1927,
	70, 1927,
	71, 1927,
	72, 1927,
	73, 1927,
	74, 1927,
	75, 1927,
	76, 1927,
	78, 1927,
	79, 1927,
	80, 1927,
	82, 1927,
	84, 1927,
	85, 1927,
	86, 1927,
	87, 1927,
	88, 1927,
	89, 1927,
	90, 1927,
	91, 1927,
	94, 1927,
	95, 1927,
	96, 1927,
	97, 1927,
	98, 1927,
	99, 1927,
	101, 1927,
	103, 1927,
	104, 1927,
	105, 1927,
	106, 1927,
	107, 1927,
	108, 1927,
	109, 1927,
	111, 1927,
	112, 1927,
	113, 1927,
	114, 1927,
	115, 1927,
	116, 1927,
	117, 1927,
	118, 1927,
	119, 1927,
	120, 1927,
	121, 1927,
	122, 1927,
	123, 1927,
	124, 1927,
	125, 1927,
	126, 1927,
	127, 1927,
	128, 1927,
	129, 1927,
	130, 1927,
	131, 1927,
	132, 1927,
	133, 1927,
	134, 1927,
	135, 1927,
	136, 1927,
	137, 1927,
	138, 1927,
	139, 1927,
	141, 1927,
	142, 1927,
	143, 1927,
	144, 1927,
	146, 1927,
	147, 1927,
	148, 1927,
	151, 1927,
	152, 1927,
	153, 1927,
	155, 1927,
	156, 1927,
	157, 1927,
	159, 1927,
	160, 1927,
	161, 1927,
	163, 1927,
	164, 1927,
	165, 1927,
	166, 1927,
	167, 1927,
	168, 1927,
	169, 1927,
	170, 1927,
	171, 1927,
	172, 1927,
	173, 1927,
	174, 1927,
	175, 1927,
	176, 1927,
	177, 1927,
	178, 1927,
	179, 1927,
	180, 1927,
	181, 1927,
	182, 1927,
	188, 1927,
	189, 1927,
	190, 1927,
	191, 1927,
	195, 1927,
	197, 1927,
	198, 1927,
	199, 1927,
	201, 1927,
	202, 1927,
	204, 1927,
	205, 1927,
	206, 1927,
	207, 1927,
	208, 1927,
	209, 1927,
	210, 1927,
	211, 1927,
	212, 1927,
	213, 1927,
	214, 1927,
	215, 1927,
	216, 1927,
	217, 1927,
	218, 1927,
	220, 1927,
	221, 1927,
	223, 1927,
	224, 1927,
	226, 1927,
	227, 1927,
	228, 1927,
	229, 1927,
	230, 1927,
	231, 1927,
	232, 1927,
	233, 1927,
	234, 1927,
	235, 1927,
	236, 1927,
	237, 1927,
	238, 1927,
	239, 1927,
	240, 1927,
	242, 1927,
	243, 1927,
	244, 1927,
	245, 1927,
	246, 1927,
	250, 1927,
	251, 1927,
	252, 1927,
	253, 1927,
	255, 1927,
	256, 1927,
	257, 1927,
	258, 1927,
	259, 1927,
	260, 1927,
	261, 1927,
	263, 1927,
	265, 1927,
	266, 1927,
	267, 1927,
	268, 1927,
	269, 1927,
	270, 1927,
	271, 1927,
	272, 1927,
	273, 1927,
	274, 1927,
	275, 1927,
	279, 1927,
	280, 1927,
	281, 1927,
	282, 1927,
	283, 1927,
	284, 1927,
	285, 1927,
	287, 1927,
	288, 1927,
	289, 1927,
	291, 1927,
	292, 1927,
	293, 1927,
	294, 1927,
	295, 1927,
	296, 1927,
	297, 1927,
	299, 1927,
	300, 1927,
	301, 1927,
	302, 1927,
	303, 1927,
	304, 1927,
	305, 1927,
	306, 1927,
	307, 1927,
	308, 1927,
	309, 1927,
	310, 1927,
	311, 1927,
	313, 1927,
	314, 1927,
	315, 1927,
	316, 1927,
	317, 1927,
	318, 1927,
	319, 1927,
	320, 1927,
	321, 1927,
	322, 1927,
	323, 1927,
	324, 1927,
	325, 1927,
	326, 1927,
	327, 1927,
	328, 1927,
	329, 1927,
	330, 1927,
	331, 1927,
	332, 1927,
	333, 1927,
	334, 1927,
	335, 1927,
	337, 1927,
	338, 1927,
	339, 1927,
	340, 1927,
	341, 1927,
	342, 1927,
	343, 1927,
	344, 1927,
	345, 1927,
	346, 1927,
	347, 1927,
	348, 1927,
	349, 1927,
	350, 1927,
	351, 1927,
	352, 1927,
	353, 1927,
	354, 1927,
	355, 1927,
	356, 1927,
	357, 1927,
	358, 1927,
	359, 1927,
	360, 1927,
	361, 1927,
	362, 1927,
	363, 1927,
	364, 1927,
	365, 1927,
	366, 1927,
	367, 1927,
	368, 1927,
	369, 1927,
	370, 1927,
	371, 1927,
	374, 1927,
	376, 1927,
	379, 1927,
	380, 1927,
	381, 1927,
	384, 1927,
	385, 1927,
	386, 1927,
	387, 1927,
	388, 1927,
	389, 1927,
	390, 1927,
	391, 1927,
	392, 1927,
	393, 1927,
	394, 1927,
	395, 1927,
	396, 1927,
	397, 1927,
	398, 1927,
	399, 1927,
	400, 1927,
	401, 1927,
	402, 1927,
	403, 1927,
	405, 1927,
	406, 1927,
	407, 1927,
	408, 1927,
	409, 1927,
	410, 1927,
	411, 1927,
	412, 1927,
	413, 1927,
	414, 1927,
	415, 1927,
	416, 1927,
	417, 1927,
	418, 1927,
	419, 1927,
	421, 1927,
	422, 1927,
	423, 1927,
	425, 1927,
	426, 1927,
	427, 1927,
	428, 1927,
	429, 1927,
	430, 1927,
	431, 1927,
	432, 1927,
	433, 1927,
	434, 1927,
	435, 1927,
	436, 1927,
	437, 1927,
	438, 1927,
	440, 1927,
	442, 1927,
	443, 1927,
	444, 1927,
	450, 1927,
	451, 1927,
	452, 1927,
	454, 1927,
	455, 1927,
	456, 1927,
	457, 1927,
	458, 1927,
	459, 1927,
	460, 1927,
	461, 1927,
	462, 1927,
	463, 1927,
	464, 1927,
	466, 1927,
	467, 1927,
	468, 1927,
	469, 1927,
	470, 1927,
	471, 1927,
	472, 1927,
	473, 1927,
	474, 1927,
	475, 1927,
	476, 1927,
	477, 1927,
	478, 1927,
	480, 1927,
	481, 1927,
	482, 1927,
	483, 1927,
	484, 1927,
	485, 1927,
	486, 1927,
	487, 1927,
	488, 1927,
	489, 1927,
	490, 1927,
	491, 1927,
	492, 1927,
	493, 1927,
	494, 1927,
	495, 1927,
	497, 1927,
	498, 1927,
	499, 1927,
	500, 1927,
	501, 1927,
	502, 1927,
	503, 1927,
	504, 1927,
	505, 1927,
	506, 1927,
	507, 1927,
	508, 1927,
	509, 1927,
	510, 1927,
	511, 1927,
	512, 1927,
	513, 1927,
	514, 1927,
	515, 1927,
	516, 1927,
	517, 1927,
	518, 1927,
	519, 1927,
	521, 1927,
	523, 1927,
	524, 1927,
	525, 1927,
	526, 1927,
	527, 1927,
	528, 1927,
	529, 1927,
	530, 1927,
	531, 1927,
	532, 1927,
	533, 1927,
	534, 1927,
	535, 1927,
	536, 1927,
	537, 1927,
	538, 1927,
	539, 1927,
	540, 1927,
	541, 1927,
	542, 1927,
	543, 1927,
	545, 1927,
	546, 1927,
	547, 1927,
	548, 1927,
	549, 1927,
	551, 1927,
	552, 1927,
	553, 1927,
	554, 1927,
	555, 1927,
	556, 1927,
	558, 1927,
	559, 1927,
	561, 1927,
	562, 1927,
	563, 1927,
	564, 1927,
	565, 1927,
	567, 1927,
	569, 1927,
	570, 1927,
	571, 1927,
	572, 1927,
	573, 1927,
	574, 1927,
	575, 1927,
	576, 1927,
	577, 1927,
	578, 1927,
	579, 1927,
	580, 1927,
	581, 1927,
	582, 1927,
	583, 1927,
	584, 1927,
	586, 1927,
	587, 1927,
	588, 1927,
	589, 1927,
	590, 1927,
	591, 1927,
	592, 1927,
	593, 1927,
	594, 1927,
	595, 1927,
	596, 1927,
	597, 1927,
	600, 1927,
	601, 1927,
	602, 1927,
	603, 1927,
	604, 1927,
	605, 1927,
	607, 1927,
	608, 1927,
	609, 1927,
	610, 1927,
	611, 1927,
	612, 1927,
	613, 1927,
	614, 1927,
	615, 1927,
	616, 1927,
	617, 1927,
	618, 1927,
	623, 1927,
	624, 1927,
	625, 1927,
	626, 1927,
	627, 1927,
	628, 1927,
	629, 1927,
	644, 1927,
	651, 1927,
	652, 1927,
	653, 1927,
	661, 1927,
	665, 1927,
	-2, 0,
	-1, 855,
	4, 1637,
	21, 1637,
	22, 1637,
	23, 1637,
	24, 1637,
	25, 1637,
	26, 1637,
	27, 1637,
	28, 1637,
	30, 1637,
	31, 1637,
	37, 1637,
	41, 1637,
	43, 1637,
	44, 1637,
	45, 1637,
	47, 1637,
	48, 1637,
	49, 1637,
	50, 1637,
	51, 1637,
	52, 1637,
	53, 1637,
	54, 1637,
	55, 1637,
	57, 1637,
	58, 1637,
	59, 1637,
	60, 1637,
	62, 1637,
	63, 1637,
	64, 1637,
	65, 1637,
	66, 1637,
	67, 1637,
	68, 1637,
	69, 1637,
	73, 1637,
	74, 1637,
	75, 1637,
	76, 1637,
	78, 1637,
	79, 1637,
	80, 1637,
	84, 1637,
	85, 1637,
	86, 1637,
	87, 1637,
	88, 1637,
	89, 1637,
	90, 1637,
	91, 1637,
	94, 1637,
	95, 1637,
	96, 1637,
	97, 1637,
	98, 1637,
	99, 1637,
	101, 1637,
	103, 1637,
	104, 1637,
	105, 1637,
	106, 1637,
	107, 1637,
	108, 1637,
	109, 1637,
	111, 1637,
	112, 1637,
	113, 1637,
	115, 1637,
	116, 1637,
	117, 1637,
	125, 1637,
	126, 1637,
	127, 1637,
	128, 1637,
	129, 1637,
	131, 1637,
	132, 1637,
	133, 1637,
	134, 1637,
	136, 1637,
	137, 1637,
	138, 1637,
	139, 1637,
	141, 1637,
	142, 1637,
	143, 1637,
	144, 1637,
	146, 1637,
	147, 1637,
	148, 1637,
	151, 1637,
	152, 1637,
	153, 1637,
	155, 1637,
	156, 1637,
	157, 1637,
	159, 1637,
	160, 1637,
	161, 1637,
	163, 1637,
	164, 1637,
	165, 1637,
	166, 1637,
	167, 1637,
	168, 1637,
	169, 1637,
	170, 1637,
	171, 1637,
	172, 1637,
	173, 1637,
	174, 1637,
	175, 1637,
	176, 1637,
	177, 1637,
	178, 1637,
	179, 1637,
	180, 1637,
	182, 1637,
	188, 1637,
	189, 1637,
	190, 1637,
	191, 1637,
	195, 1637,
	197, 1637,
	198, 1637,
	199, 1637,
	201, 1637,
	202, 1637,
	205, 1637,
	206, 1637,
	207, 1637,
	208, 1637,
	209, 1637,
	210, 1637,
	211, 1637,
	212, 1637,
	213, 1637,
	214, 1637,
	215, 1637,
	216, 1637,
	217, 1637,
	218, 1637,
	220, 1637,
	221, 1637,
	223, 1637,
	224, 1637,
	226, 1637,
	227, 1637,
	228, 1637,
	229, 1637,
	230, 1637,
	231, 1637,
	232, 1637,
	233, 1637,
	234, 1637,
	235, 1637,
	236, 1637,
	238, 1637,
	239, 1637,
	240, 1637,
	242, 1637,
	243, 1637,
	244, 1637,
	245, 1637,
	246, 1637,
	250, 1637,
	251, 1637,
	252, 1637,
	253, 1637,
	256, 1637,
	257, 1637,
	258, 1637,
	259, 1637,
	260, 1637,
	261, 1637,
	263, 1637,
	265, 1637,
	266, 1637,
	267, 1637,
	269, 1637,
	271, 1637,
	272, 1637,
	273, 1637,
	275, 1637,
	279, 1637,
	280, 1637,
	281, 1637,
	282, 1637,
	283, 1637,
	284, 1637,
	285, 1637,
	287, 1637,
	288, 1637,
	289, 1637,
	291, 1637,
	292, 1637,
	293, 1637,
	295, 1637,
	296, 1637,
	299, 1637,
	300, 1637,
	301, 1637,
	302, 1637,
	303, 1637,
	304, 1637,
	305, 1637,
	308, 1637,
	309, 1637,
	310, 1637,
	311, 1637,
	313, 1637,
	314, 1637,
	315, 1637,
	316, 1637,
	317, 1637,
	318, 1637,
	319, 1637,
	320, 1637,
	321, 1637,
	322, 1637,
	323, 1637,
	324, 1637,
	325, 1637,
	326, 1637,
	327, 1637,
	328, 1637,
	329, 1637,
	330, 1637,
	331, 1637,
	332, 1637,
	333, 1637,
	334, 1637,
	335, 1637,
	337, 1637,
	339, 1637,
	340, 1637,
	341, 1637,
	342, 1637,
	343, 1637,
	344, 1637,
	345, 1637,
	346, 1637,
	347, 1637,
	348, 1637,
	349, 1637,
	350, 1637,
	351, 1637,
	352, 1637,
	353, 1637,
	354, 1637,
	355, 1637,
	357, 1637,
	358, 1637,
	360, 1637,
	362, 1637,
	363, 1637,
	364, 1637,
	365, 1637,
	367, 1637,
	368, 1637,
	369, 1637,
	370, 1637,
	371, 1637,
	374, 1637,
	376, 1637,
	379, 1637,
	380, 1637,
	381, 1637,
	384, 1637,
	385, 1637,
	386, 1637,
	388, 1637,
	390, 1637,
	391, 1637,
	392, 1637,
	393, 1637,
	394, 1637,
	395, 1637,
	396, 1637,
	397, 1637,
	398, 1637,
	399, 1637,
	400, 1637,
	401, 1637,
	402, 1637,
	403, 1637,
	405, 1637,
	406, 1637,
	407, 1637,
	408, 1637,
	409, 1637,
	410, 1637,
	411, 1637,
	412, 1637,
	413, 1637,
	414, 1637,
	415, 1637,
	416, 1637,
	417, 1637,
	418, 1637,
	419, 1637,
	421, 1637,
	422, 1637,
	423, 1637,
	425, 1637,
	426, 1637,
	427, 1637,
	428, 1637,
	429, 1637,
	430, 1637,
	431, 1637,
	432, 1637,
	433, 1637,
	434, 1637,
	435, 1637,
	436, 1637,
	437, 1637,
	438, 1637,
	440, 1637,
	442, 1637,
	443, 1637,
	444, 1637,
	450, 1637,
	451, 1637,
	452, 1637,
	454, 1637,
	455, 1637,
	456, 1637,
	457, 1637,
	458, 1637,
	459, 1637,
	460, 1637,
	461, 1637,
	462, 1637,
	463, 1637,
	464, 1637,
	466, 1637,
	467, 1637,
	468, 1637,
	469, 1637,
	470, 1637,
	472, 1637,
	473, 1637,
	474, 1637,
	475, 1637,
	476, 1637,
	477, 1637,
	478, 1637,
	480, 1637,
	481, 1637,
	482, 1637,
	483, 1637,
	484, 1637,
	485, 1637,
	486, 1637,
	487, 1637,
	488, 1637,
	489, 1637,
	490, 1637,
	491, 1637,
	492, 1637,
	493, 1637,
	494, 1637,
	495, 1637,
	497, 1637,
	498, 1637,
	499, 1637,
	500, 1637,
	501, 1637,
	502, 1637,
	504, 1637,
	505, 1637,
	506, 1637,
	507, 1637,
	508, 1637,
	509, 1637,
	510, 1637,
	512, 1637,
	513, 1637,
	514, 1637,
	515, 1637,
	516, 1637,
	517, 1637,
	518, 1637,
	519, 1637,
	521, 1637,
	523, 1637,
	524, 1637,
	525, 1637,
	526, 1637,
	527, 1637,
	528, 1637,
	529, 1637,
	530, 1637,
	531, 1637,
	532, 1637,
	533, 1637,
	534, 1637,
	535, 1637,
	536, 1637,
	537, 1637,
	538, 1637,
	539, 1637,
	540, 1637,
	541, 1637,
	542, 1637,
	543, 1637,
	545, 1637,
	546, 1637,
	548, 1637,
	549, 1637,
	551, 1637,
	552, 1637,
	553, 1637,
	554, 1637,
	555, 1637,
	556, 1637,
	558, 1637,
	559, 1637,
	561, 1637,
	562, 1637,
	563, 1637,
	564, 1637,
	565, 1637,
	567, 1637,
	569, 1637,
	570, 1637,
	571, 1637,
	572, 1637,
	573, 1637,
	574, 1637,
	575, 1637,
	576, 1637,
	578, 1637,
	579, 1637,
	580, 1637,
	581, 1637,
	582, 1637,
	583, 1637,
	584, 1637,
	587, 1637,
	588, 1637,
	589, 1637,
	590, 1637,
	591, 1637,
	592, 1637,
	593, 1637,
	594, 1637,
	595, 1637,
	597, 1637,
	600, 1637,
	601, 1637,
	602, 1637,
	603, 1637,
	604, 1637,
	605, 1637,
	607, 1637,
	608, 1637,
	609, 1637,
	610, 1637,
	611, 1637,
	612, 1637,
	613, 1637,
	614, 1637,
	615, 1637,
	616, 1637,
	617, 1637,
	618, 1637,
	623, 1637,
	624, 1637,
	625, 1637,
	626, 1637,
	627, 1637,
	628, 1637,
	-2, 0,
	-1, 874,
	203, 2745,
	566, 2745,
	643, 2745,
	663, 2745,
	-2, 0,
	-1, 875,
	203, 2730,
	566, 2730,
	643, 2730,
	663, 2730,
	-2, 0,
	-1, 877,
	203, 3028,
	566, 3028,
	643, 3028,
	663, 3028,
	-2, 0,
	-1, 880,
	203, 2870,
	566, 2870,
	643, 2870,
	663, 2870,
	-2, 0,
	-1, 881,
	203, 3075,
	566, 3075,
	643, 3075,
	663, 3075,
	-2, 0,
	-1, 889,
	203, 2898,
	566, 2898,
	643, 2898,
	663, 2898,
	-2, 917,
	-1, 905,
	8, 1054,
	29, 1054,
	651, 1054,
	652, 1054,
	-2, 1059,
	-1, 909,
	1, 2803,
	664, 2803,
	667, 2803,
	-2, 1059,
	-1, 910,
	1, 2857,
	664, 2857,
	667, 2857,
	-2, 1059,
	-1, 913,
	1, 2903,
	664, 2903,
	667, 2903,
	-2, 1052,
	-1, 914,
	1, 2960,
	664, 2960,
	667, 2960,
	-2, 1053,
	-1, 915,
	1, 2808,
	664, 2808,
	667, 2808,
	-2, 1056,
	-1, 916,
	1, 2716,
	664, 2716,
	667, 2716,
	-2, 1057,
	-1, 959,
	663, 2673,
	666, 2673,
	-2, 1298,
	-1, 960,
	663, 2675,
	666, 2675,
	-2, 1299,
	-1, 961,
	663, 2674,
	666, 2674,
	-2, 1300,
	-1, 962,
	666, 2597,
	-2, 1301,
	-1, 988,
	196, 329,
	-2, 0,
	-1, 1010,
	46, 2646,
	-2, 0,
	-1, 1011,
	608, 1615,
	-2, 1383,
	-1, 1028,
	4, 2075,
	21, 2075,
	22, 2075,
	23, 2075,
	24, 2075,
	25, 2075,
	26, 2075,
	27, 2075,
	28, 2075,
	30, 2075,
	31, 2075,
	37, 2075,
	41, 2075,
	43, 2075,
	44, 2075,
	45, 2075,
	47, 2075,
	48, 2075,
	49, 2075,
	50, 2075,
	51, 2075,
	52, 2075,
	53, 2075,
	54, 2075,
	55, 2075,
	57, 2075,
	58, 2075,
	59, 2075,
	60, 2075,
	62, 2075,
	63, 2075,
	64, 2075,
	65, 2075,
	66, 2075,
	67, 2075,
	68, 2075,
	69, 2075,
	73, 2075,
	74, 2075,
	75, 2075,
	76, 2075,
	78, 2075,
	79, 2075,
	80, 2075,
	84, 2075,
	85, 2075,
	86, 2075,
	87, 2075,
	88, 2075,
	89, 2075,
	90, 2075,
	91, 2075,
	94, 2075,
	95, 2075,
	96, 2075,
	97, 2075,
	98, 2075,
	99, 2075,
	101, 2075,
	103, 2075,
	104, 2075,
	105, 2075,
	106, 2075,
	107, 2075,
	108, 2075,
	109, 2075,
	111, 2075,
	112, 2075,
	113, 2075,
	115, 2075,
	116, 2075,
	117, 2075,
	125, 2075,
	126, 2075,
	127, 2075,
	128, 2075,
	129, 2075,
	131, 2075,
	132, 2075,
	133, 2075,
	134, 2075,
	136, 2075,
	137, 2075,
	138, 2075,
	139, 2075,
	141, 2075,
	142, 2075,
	143, 2075,
	144, 2075,
	146, 2075,
	147, 2075,
	148, 2075,
	151, 2075,
	152, 2075,
	153, 2075,
	155, 2075,
	156, 2075,
	157, 2075,
	159, 2075,
	160, 2075,
	161, 2075,
	163, 2075,
	164, 2075,
	165, 2075,
	166, 2075,
	167, 2075,
	168, 2075,
	169, 2075,
	170, 2075,
	171, 2075,
	172, 2075,
	173, 2075,
	174, 2075,
	175, 2075,
	176, 2075,
	177, 2075,
	178, 2075,
	179, 2075,
	180, 2075,
	182, 2075,
	188, 2075,
	189, 2075,
	190, 2075,
	191, 2075,
	195, 2075,
	197, 2075,
	198, 2075,
	199, 2075,
	201, 2075,
	202, 2075,
	205, 2075,
	206, 2075,
	207, 2075,
	208, 2075,
	209, 2075,
	210, 2075,
	211, 2075,
	212, 2075,
	213, 2075,
	214, 2075,
	215, 2075,
	216, 2075,
	217, 2075,
	218, 2075,
	220, 2075,
	221, 2075,
	223, 2075,
	224, 2075,
	226, 2075,
	227, 2075,
	228, 2075,
	229, 2075,
	230, 2075,
	231, 2075,
	232, 2075,
	233, 2075,
	234, 2075,
	235, 2075,
	236, 2075,
	238, 2075,
	239, 2075,
	240, 2075,
	242, 2075,
	243, 2075,
	244, 2075,
	245, 2075,
	246, 2075,
	250, 2075,
	251, 2075,
	252, 2075,
	253, 2075,
	256, 2075,
	257, 2075,
	258, 2075,
	259, 2075,
	260, 2075,
	261, 2075,
	263, 2075,
	265, 2075,
	266, 2075,
	267, 2075,
	269, 2075,
	271, 2075,
	272, 2075,
	273, 2075,
	275, 2075,
	279, 2075,
	280, 2075,
	281, 2075,
	282, 2075,
	283, 2075,
	284, 2075,
	285, 2075,
	287, 2075,
	288, 2075,
	289, 2075,
	291, 2075,
	292, 2075,
	293, 2075,
	295, 2075,
	296, 2075,
	299, 2075,
	300, 2075,
	301, 2075,
	302, 2075,
	303, 2075,
	304, 2075,
	305, 2075,
	308, 2075,
	309, 2075,
	310, 2075,
	311, 2075,
	313, 2075,
	314, 2075,
	315, 2075,
	316, 2075,
	317, 2075,
	318, 2075,
	319, 2075,
	320, 2075,
	321, 2075,
	322, 2075,
	323, 2075,
	324, 2075,
	325, 2075,
	326, 2075,
	327, 2075,
	328, 2075,
	329, 2075,
	330, 2075,
	331, 2075,
	332, 2075,
	333, 2075,
	334, 2075,
	335, 2075,
	337, 2075,
	339, 2075,
	340, 2075,
	341, 2075,
	342, 2075,
	343, 2075,
	344, 2075,
	345, 2075,
	346, 2075,
	347, 2075,
	348, 2075,
	349, 2075,
	350, 2075,
	351, 2075,
	352, 2075,
	353, 2075,
	354, 2075,
	355, 2075,
	357, 2075,
	358, 2075,
	360, 2075,
	362, 2075,
	363, 2075,
	364, 2075,
	365, 2075,
	367, 2075,
	368, 2075,
	369, 2075,
	370, 2075,
	371, 2075,
	374, 2075,
	376, 2075,
	379, 2075,
	380, 2075,
	381, 2075,
	384, 2075,
	385, 2075,
	386, 2075,
	388, 2075,
	390, 2075,
	391, 2075,
	392, 2075,
	393, 2075,
	394, 2075,
	395, 2075,
	396, 2075,
	397, 2075,
	398, 2075,
	399, 2075,
	400, 2075,
	401, 2075,
	402, 2075,
	403, 2075,
	405, 2075,
	406, 2075,
	407, 2075,
	408, 2075,
	409, 2075,
	410, 2075,
	411, 2075,
	412, 2075,
	413, 2075,
	414, 2075,
	415, 2075,
	416, 2075,
	417, 2075,
	418, 2075,
	419, 2075,
	421, 2075,
	422, 2075,
	423, 2075,
	425, 2075,
	426, 2075,
	427, 2075,
	428, 2075,
	429, 2075,
	430, 2075,
	431, 2075,
	432, 2075,
	433, 2075,
	434, 2075,
	435, 2075,
	436, 2075,
	437, 2075,
	438, 2075,
	440, 2075,
	442, 2075,
	443, 2075,
	444, 2075,
	450, 2075,
	451, 2075,
	452, 2075,
	454, 2075,
	455, 2075,
	456, 2075,
	457, 2075,
	458, 2075,
	459, 2075,
	460, 2075,
	461, 2075,
	462, 2075,
	463, 2075,
	464, 2075,
	466, 2075,
	467, 2075,
	468, 2075,
	469, 2075,
	470, 2075,
	472, 2075,
	473, 2075,
	474, 2075,
	475, 2075,
	476, 2075,
	477, 2075,
	478, 2075,
	480, 2075,
	481, 2075,
	482, 2075,
	483, 2075,
	484, 2075,
	485, 2075,
	486, 2075,
	487, 2075,
	488, 2075,
	489, 2075,
	490, 2075,
	491, 2075,
	492, 2075,
	493, 2075,
	494, 2075,
	495, 2075,
	497, 2075,
	498, 2075,
	499, 2075,
	500, 2075,
	501, 2075,
	502, 2075,
	504, 2075,
	505, 2075,
	506, 2075,
	507, 2075,
	508, 2075,
	509, 2075,
	510, 2075,
	512, 2075,
	513, 2075,
	514, 2075,
	515, 2075,
	516, 2075,
	517, 2075,
	518, 2075,
	519, 2075,
	521, 2075,
	523, 2075,
	524, 2075,
	525, 2075,
	526, 2075,
	527, 2075,
	528, 2075,
	529, 2075,
	530, 2075,
	531, 2075,
	532, 2075,
	533, 2075,
	534, 2075,
	535, 2075,
	536, 2075,
	537, 2075,
	538, 2075,
	539, 2075,
	540, 2075,
	541, 2075,
	542, 2075,
	543, 2075,
	545, 2075,
	546, 2075,
	548, 2075,
	549, 2075,
	551, 2075,
	552, 2075,
	553, 2075,
	554, 2075,
	555, 2075,
	556, 2075,
	558, 2075,
	559, 2075,
	561, 2075,
	562, 2075,
	563, 2075,
	564, 2075,
	565, 2075,
	567, 2075,
	569, 2075,
	570, 2075,
	571, 2075,
	572, 2075,
	573, 2075,
	574, 2075,
	575, 2075,
	576, 2075,
	578, 2075,
	579, 2075,
	580, 2075,
	581, 2075,
	582, 2075,
	583, 2075,
	584, 2075,
	587, 2075,
	588, 2075,
	589, 2075,
	590, 2075,
	591, 2075,
	592, 2075,
	593, 2075,
	594, 2075,
	595, 2075,
	597, 2075,
	600, 2075,
	601, 2075,
	602, 2075,
	603, 2075,
	604, 2075,
	605, 2075,
	607, 2075,
	608, 2075,
	609, 2075,
	610, 2075,
	611, 2075,
	612, 2075,
	613, 2075,
	614, 2075,
	615, 2075,
	616, 2075,
	617, 2075,
	618, 2075,
	623, 2075,
	624, 2075,
	625, 2075,
	626, 2075,
	627, 2075,
	628, 2075,
	-2, 0,
	-1, 1039,
	284, 582,
	-2, 0,
	-1, 1119,
	203, 1099,
	-2, 0,
	-1, 1120,
	427, 1154,
	502, 1154,
	549, 1154,
	571, 1154,
	-2, 0,
	-1, 1121,
	427, 1153,
	502, 1153,
	549, 1153,
	571, 1153,
	-2, 1072,
	-1, 1125,
	1, 1210,
	660, 1210,
	662, 1210,
	664, 1210,
	667, 1210,
	-2, 0,
	-1, 1127,
	1, 1127,
	660, 1127,
	662, 1127,
	664, 1127,
	667, 1127,
	-2, 0,
	-1, 1128,
	1, 1131,
	660, 1131,
	662, 1131,
	664, 1131,
	667, 1131,
	-2, 0,
	-1, 1129,
	1, 1287,
	196, 1287,
	660, 1287,
	662, 1287,
	664, 1287,
	667, 1287,
	-2, 0,
	-1, 1138,
	1, 1159,
	660, 1159,
	662, 1159,
	664, 1159,
	667, 1159,
	-2, 0,
	-1, 1145,
	1, 1210,
	660, 1210,
	662, 1210,
	664, 1210,
	667, 1210,
	-2, 0,
	-1, 1146,
	1, 1203,
	660, 1203,
	662, 1203,
	664, 1203,
	667, 1203,
	-2, 0,
	-1, 1147,
	1, 1212,
	660, 1212,
	662, 1212,
	664, 1212,
	667, 1212,
	-2, 0,
	-1, 1148,
	1, 1215,
	660, 1215,
	662, 1215,
	664, 1215,
	667, 1215,
	-2, 0,
	-1, 1156,
	1, 1250,
	660, 1250,
	662, 1250,
	664, 1250,
	667, 1250,
	-2, 0,
	-1, 1157,
	1, 1252,
	660, 1252,
	662, 1252,
	664, 1252,
	667, 1252,
	-2, 0,
	-1, 1162,
	1, 1280,
	660, 1280,
	662, 1280,
	664, 1280,
	667, 1280,
	-2, 0,
	-1, 1216,
	183, 1931,
	196, 1931,
	298, 1931,
	372, 1931,
	-2, 1867,
	-1, 1233,
	183, 1930,
	196, 1930,
	298, 1930,
	372, 1930,
	-2, 1864,
	-1, 1262,
	663, 2672,
	-2, 925,
	-1, 1291,
	5, 2664,
	661, 2662,
	-2, 2653,
	-1, 1299,
	5, 2685,
	661, 2682,
	-2, 2673,
	-1, 1300,
	5, 2686,
	661, 2683,
	-2, 2674,
	-1, 1308,
	663, 2670,
	-2, 2652,
	-1, 1309,
	661, 3190,
	-2, 2671,
	-1, 1332,
	5, 2687,
	38, 2687,
	135, 2687,
	643, 2687,
	659, 2687,
	662, 2687,
	663, 2687,
	666, 2687,
	-2, 3189,
	-1, 1333,
	5, 2150,
	-2, 3159,
	-1, 1334,
	5, 2151,
	-2, 3160,
	-1, 1335,
	5, 2152,
	-2, 3175,
	-1, 1336,
	5, 2153,
	-2, 3137,
	-1, 1337,
	5, 2154,
	-2, 3172,
	-1, 1338,
	5, 2162,
	-2, 3150,
	-1, 1339,
	5, 2149,
	-2, 3146,
	-1, 1340,
	5, 2149,
	-2, 3145,
	-1, 1341,
	5, 2149,
	-2, 3165,
	-1, 1342,
	5, 2160,
	-2, 3139,
	-1, 1343,
	5, 2165,
	-2, 3138,
	-1, 1344,
	5, 2167,
	-2, 3185,
	-1, 1347,
	5, 2189,
	-2, 3178,
	-1, 1348,
	5, 2181,
	-2, 3179,
	-1, 1349,
	5, 2189,
	-2, 3180,
	-1, 1350,
	5, 2185,
	-2, 3181,
	-1, 1351,
	5, 2135,
	-2, 3151,
	-1, 1352,
	5, 2136,
	-2, 3152,
	-1, 1353,
	5, 2137,
	-2, 3140,
	-1, 1381,
	5, 2172,
	-2, 3186,
	-1, 1382,
	5, 2173,
	-2, 3176,
	-1, 1383,
	5, 2174,
	609, 2174,
	-2, 3141,
	-1, 1384,
	5, 2175,
	609, 2175,
	-2, 3142,
	-1, 1422,
	661, 2682,
	-2, 2673,
	-1, 1423,
	661, 2683,
	-2, 2674,
	-1, 1531,
	203, 3075,
	566, 3075,
	643, 3075,
	663, 3075,
	-2, 0,
	-1, 1536,
	1, 901,
	664, 901,
	667, 901,
	-2, 1773,
	-1, 1583,
	1, 1768,
	664, 1768,
	667, 1768,
	-2, 1773,
	-1, 1685,
	392, 2647,
	454, 2647,
	504, 2647,
	653, 2647,
	-2, 2635,
	-1, 1693,
	203, 170,
	291, 170,
	357, 170,
	618, 170,
	-2, 3070,
	-1, 1694,
	203, 171,
	291, 171,
	357, 171,
	618, 171,
	-2, 2793,
	-1, 1695,
	203, 172,
	291, 172,
	357, 172,
	618, 172,
	-2, 2983,
	-1, 1701,
	665, 2647,
	-2, 2649,
	-1, 1704,
	25, 3007,
	241, 3007,
	-2, 0,
	-1, 1725,
	1, 1612,
	459, 1566,
	504, 1566,
	635, 1566,
	640, 1566,
	660, 1612,
	662, 1612,
	664, 1612,
	667, 1612,
	-2, 1916,
	-1, 1731,
	219, 1712,
	241, 1712,
	470, 1712,
	-2, 0,
	-1, 1799,
	46, 2645,
	-2, 1345,
	-1, 1806,
	1, 1612,
	660, 1612,
	662, 1612,
	664, 1612,
	667, 1612,
	-2, 1916,
	-1, 1809,
	436, 1382,
	608, 1382,
	-2, 481,
	-1, 1815,
	4, 1637,
	21, 1637,
	22, 1637,
	23, 1637,
	24, 1637,
	25, 1637,
	26, 1637,
	27, 1637,
	28, 1637,
	30, 1637,
	31, 1637,
	37, 1637,
	41, 1637,
	43, 1637,
	44, 1637,
	45, 1637,
	47, 1637,
	48, 1637,
	49, 1637,
	50, 1637,
	51, 1637,
	52, 1637,
	53, 1637,
	54, 1637,
	55, 1637,
	57, 1637,
	58, 1637,
	59, 1637,
	60, 1637,
	62, 1637,
	63, 1637,
	64, 1637,
	65, 1637,
	66, 1637,
	67, 1637,
	68, 1637,
	69, 1637,
	73, 1637,
	74, 1637,
	75, 1637,
	76, 1637,
	78, 1637,
	79, 1637,
	80, 1637,
	84, 1637,
	85, 1637,
	86, 1637,
	87, 1637,
	88, 1637,
	89, 1637,
	90, 1637,
	91, 1637,
	94, 1637,
	95, 1637,
	96, 1637,
	97, 1637,
	98, 1637,
	99, 1637,
	101, 1637,
	103, 1637,
	104, 1637,
	105, 1637,
	106, 1637,
	107, 1637,
	108, 1637,
	109, 1637,
	111, 1637,
	112, 1637,
	113, 1637,
	115, 1637,
	116, 1637,
	117, 1637,
	125, 1637,
	126, 1637,
	127, 1637,
	128, 1637,
	129, 1637,
	131, 1637,
	132, 1637,
	133, 1637,
	134, 1637,
	136, 1637,
	137, 1637,
	138, 1637,
	139, 1637,
	141, 1637,
	142, 1637,
	143, 1637,
	144, 1637,
	146, 1637,
	147, 1637,
	148, 1637,
	151, 1637,
	152, 1637,
	153, 1637,
	155, 1637,
	156, 1637,
	157, 1637,
	159, 1637,
	160, 1637,
	161, 1637,
	163, 1637,
	164, 1637,
	165, 1637,
	166, 1637,
	167, 1637,
	168, 1637,
	169, 1637,
	170, 1637,
	171, 1637,
	172, 1637,
	173, 1637,
	174, 1637,
	175, 1637,
	176, 1637,
	177, 1637,
	178, 1637,
	179, 1637,
	180, 1637,
	188, 1637,
	189, 1637,
	190, 1637,
	191, 1637,
	195, 1637,
	197, 1637,
	198, 1637,
	199, 1637,
	201, 1637,
	202, 1637,
	205, 1637,
	206, 1637,
	207, 1637,
	208, 1637,
	209, 1637,
	210, 1637,
	211, 1637,
	212, 1637,
	213, 1637,
	214, 1637,
	215, 1637,
	216, 1637,
	217, 1637,
	218, 1637,
	220, 1637,
	221, 1637,
	223, 1637,
	224, 1637,
	226, 1637,
	227, 1637,
	228, 1637,
	229, 1637,
	230, 1637,
	231, 1637,
	232, 1637,
	233, 1637,
	234, 1637,
	235, 1637,
	236, 1637,
	238, 1637,
	239, 1637,
	240, 1637,
	242, 1637,
	243, 1637,
	244, 1637,
	245, 1637,
	246, 1637,
	251, 1637,
	252, 1637,
	253, 1637,
	256, 1637,
	257, 1637,
	258, 1637,
	259, 1637,
	260, 1637,
	261, 1637,
	263, 1637,
	265, 1637,
	266, 1637,
	267, 1637,
	269, 1637,
	271, 1637,
	272, 1637,
	273, 1637,
	275, 1637,
	279, 1637,
	280, 1637,
	281, 1637,
	282, 1637,
	283, 1637,
	284, 1637,
	285, 1637,
	287, 1637,
	288, 1637,
	289, 1637,
	291, 1637,
	292, 1637,
	293, 1637,
	295, 1637,
	296, 1637,
	299, 1637,
	300, 1637,
	301, 1637,
	302, 1637,
	303, 1637,
	304, 1637,
	305, 1637,
	308, 1637,
	309, 1637,
	310, 1637,
	311, 1637,
	313, 1637,
	314, 1637,
	315, 1637,
	316, 1637,
	317, 1637,
	318, 1637,
	319, 1637,
	320, 1637,
	321, 1637,
	322, 1637,
	323, 1637,
	324, 1637,
	325, 1637,
	326, 1637,
	327, 1637,
	328, 1637,
	329, 1637,
	330, 1637,
	331, 1637,
	332, 1637,
	333, 1637,
	334, 1637,
	335, 1637,
	337, 1637,
	339, 1637,
	340, 1637,
	341, 1637,
	342, 1637,
	343, 1637,
	344, 1637,
	345, 1637,
	346, 1637,
	347, 1637,
	348, 1637,
	349, 1637,
	350, 1637,
	351, 1637,
	352, 1637,
	353, 1637,
	354, 1637,
	355, 1637,
	357, 1637,
	358, 1637,
	362, 1637,
	363, 1637,
	364, 1637,
	365, 1637,
	367, 1637,
	368, 1637,
	369, 1637,
	370, 1637,
	371, 1637,
	374, 1637,
	376, 1637,
	377, 1637,
	379, 1637,
	380, 1637,
	381, 1637,
	384, 1637,
	385, 1637,
	386, 1637,
	388, 1637,
	390, 1637,
	391, 1637,
	392, 1637,
	393, 1637,
	394, 1637,
	395, 1637,
	396, 1637,
	397, 1637,
	398, 1637,
	399, 1637,
	400, 1637,
	401, 1637,
	402, 1637,
	403, 1637,
	405, 1637,
	406, 1637,
	407, 1637,
	408, 1637,
	409, 1637,
	410, 1637,
	411, 1637,
	412, 1637,
	413, 1637,
	414, 1637,
	415, 1637,
	416, 1637,
	417, 1637,
	418, 1637,
	419, 1637,
	421, 1637,
	422, 1637,
	423, 1637,
	425, 1637,
	426, 1637,
	427, 1637,
	428, 1637,
	429, 1637,
	430, 1637,
	431, 1637,
	432, 1637,
	433, 1637,
	434, 1637,
	435, 1637,
	436, 1637,
	437, 1637,
	438, 1637,
	440, 1637,
	442, 1637,
	443, 1637,
	444, 1637,
	450, 1637,
	451, 1637,
	452, 1637,
	454, 1637,
	455, 1637,
	456, 1637,
	457, 1637,
	458, 1637,
	459, 1637,
	460, 1637,
	461, 1637,
	462, 1637,
	463, 1637,
	464, 1637,
	466, 1637,
	467, 1637,
	468, 1637,
	469, 1637,
	470, 1637,
	472, 1637,
	473, 1637,
	474, 1637,
	475, 1637,
	476, 1637,
	477, 1637,
	478, 1637,
	480, 1637,
	481, 1637,
	482, 1637,
	483, 1637,
	484, 1637,
	485, 1637,
	486, 1637,
	487, 1637,
	488, 1637,
	489, 1637,
	490, 1637,
	491, 1637,
	492, 1637,
	493, 1637,
	494, 1637,
	495, 1637,
	497, 1637,
	498, 1637,
	499, 1637,
	500, 1637,
	501, 1637,
	502, 1637,
	504, 1637,
	505, 1637,
	506, 1637,
	507, 1637,
	508, 1637,
	509, 1637,
	510, 1637,
	512, 1637,
	513, 1637,
	514, 1637,
	515, 1637,
	516, 1637,
	517, 1637,
	518, 1637,
	519, 1637,
	521, 1637,
	523, 1637,
	524, 1637,
	525, 1637,
	526, 1637,
	527, 1637,
	528, 1637,
	529, 1637,
	530, 1637,
	531, 1637,
	532, 1637,
	533, 1637,
	534, 1637,
	535, 1637,
	536, 1637,
	537, 1637,
	538, 1637,
	539, 1637,
	540, 1637,
	541, 1637,
	542, 1637,
	543, 1637,
	545, 1637,
	546, 1637,
	548, 1637,
	549, 1637,
	551, 1637,
	552, 1637,
	553, 1637,
	554, 1637,
	555, 1637,
	556, 1637,
	558, 1637,
	559, 1637,
	561, 1637,
	562, 1637,
	563, 1637,
	564, 1637,
	565, 1637,
	567, 1637,
	569, 1637,
	570, 1637,
	571, 1637,
	572, 1637,
	573, 1637,
	574, 1637,
	575, 1637,
	576, 1637,
	578, 1637,
	579, 1637,
	580, 1637,
	581, 1637,
	582, 1637,
	583, 1637,
	584, 1637,
	587, 1637,
	588, 1637,
	589, 1637,
	590, 1637,
	591, 1637,
	592, 1637,
	593, 1637,
	594, 1637,
	595, 1637,
	597, 1637,
	600, 1637,
	601, 1637,
	602, 1637,
	603, 1637,
	604, 1637,
	605, 1637,
	607, 1637,
	608, 1637,
	609, 1637,
	610, 1637,
	611, 1637,
	612, 1637,
	613, 1637,
	614, 1637,
	615, 1637,
	616, 1637,
	617, 1637,
	618, 1637,
	623, 1637,
	624, 1637,
	625, 1637,
	626, 1637,
	627, 1637,
	628, 1637,
	-2, 0,
	-1, 1838,
	1, 727,
	660, 727,
	662, 727,
	664, 727,
	667, 727,
	-2, 1887,
	-1, 1841,
	4, 3184,
	11, 3184,
	12, 3184,
	14, 3184,
	15, 3184,
	16, 3184,
	17, 3184,
	18, 3184,
	19, 3184,
	21, 3184,
	22, 3184,
	23, 3184,
	24, 3184,
	25, 3184,
	26, 3184,
	27, 3184,
	28, 3184,
	30, 3184,
	31, 3184,
	34, 3184,
	35, 3184,
	37, 3184,
	39, 3184,
	41, 3184,
	43, 3184,
	44, 3184,
	45, 3184,
	47, 3184,
	48, 3184,
	49, 3184,
	50, 3184,
	51, 3184,
	52, 3184,
	53, 3184,
	54, 3184,
	55, 3184,
	57, 3184,
	58, 3184,
	59, 3184,
	60, 3184,
	62, 3184,
	63, 3184,
	64, 3184,
	65, 3184,
	66, 3184,
	67, 3184,
	68, 3184,
	69, 3184,
	72, 3184,
	73, 3184,
	74, 3184,
	75, 3184,
	76, 3184,
	78, 3184,
	79, 3184,
	80, 3184,
	81, 3184,
	84, 3184,
	85, 3184,
	86, 3184,
	87, 3184,
	88, 3184,
	89, 3184,
	90, 3184,
	91, 3184,
	92, 3184,
	94, 3184,
	95, 3184,
	96, 3184,
	97, 3184,
	98, 3184,
	99, 3184,
	101, 3184,
	102, 3184,
	103, 3184,
	104, 3184,
	105, 3184,
	106, 3184,
	107, 3184,
	108, 3184,
	109, 3184,
	111, 3184,
	112, 3184,
	113, 3184,
	114, 3184,
	115, 3184,
	116, 3184,
	117, 3184,
	125, 3184,
	126, 3184,
	127, 3184,
	128, 3184,
	129, 3184,
	131, 3184,
	132, 3184,
	133, 3184,
	134, 3184,
	136, 3184,
	137, 3184,
	138, 3184,
	139, 3184,
	141, 3184,
	142, 3184,
	143, 3184,
	144, 3184,
	146, 3184,
	147, 3184,
	148, 3184,
	151, 3184,
	152, 3184,
	153, 3184,
	155, 3184,
	156, 3184,
	157, 3184,
	159, 3184,
	160, 3184,
	161, 3184,
	163, 3184,
	164, 3184,
	165, 3184,
	166, 3184,
	167, 3184,
	168, 3184,
	169, 3184,
	170, 3184,
	171, 3184,
	172, 3184,
	173, 3184,
	174, 3184,
	175, 3184,
	176, 3184,
	177, 3184,
	178, 3184,
	179, 3184,
	180, 3184,
	184, 3184,
	185, 3184,
	186, 3184,
	187, 3184,
	188, 3184,
	189, 3184,
	190, 3184,
	191, 3184,
	194, 3184,
	195, 3184,
	197, 3184,
	198, 3184,
	199, 3184,
	201, 3184,
	202, 3184,
	204, 3184,
	205, 3184,
	206, 3184,
	207, 3184,
	208, 3184,
	209, 3184,
	210, 3184,
	211, 3184,
	212, 3184,
	213, 3184,
	214, 3184,
	215, 3184,
	216, 3184,
	217, 3184,
	218, 3184,
	220, 3184,
	221, 3184,
	223, 3184,
	224, 3184,
	226, 3184,
	227, 3184,
	228, 3184,
	229, 3184,
	230, 3184,
	231, 3184,
	232, 3184,
	233, 3184,
	234, 3184,
	235, 3184,
	236, 3184,
	237, 3184,
	238, 3184,
	239, 3184,
	240, 3184,
	241, 3184,
	242, 3184,
	243, 3184,
	244, 3184,
	245, 3184,
	246, 3184,
	248, 3184,
	249, 3184,
	251, 3184,
	252, 3184,
	253, 3184,
	255, 3184,
	256, 3184,
	257, 3184,
	258, 3184,
	259, 3184,
	260, 3184,
	261, 3184,
	263, 3184,
	265, 3184,
	266, 3184,
	267, 3184,
	268, 3184,
	269, 3184,
	270, 3184,
	271, 3184,
	272, 3184,
	273, 3184,
	274, 3184,
	275, 3184,
	277, 3184,
	278, 3184,
	279, 3184,
	280, 3184,
	281, 3184,
	282, 3184,
	283, 3184,
	284, 3184,
	285, 3184,
	287, 3184,
	288, 3184,
	289, 3184,
	291, 3184,
	292, 3184,
	293, 3184,
	294, 3184,
	295, 3184,
	296, 3184,
	297, 3184,
	299, 3184,
	300, 3184,
	301, 3184,
	302, 3184,
	303, 3184,
	304, 3184,
	305, 3184,
	308, 3184,
	309, 3184,
	310, 3184,
	311, 3184,
	312, 3184,
	313, 3184,
	314, 3184,
	315, 3184,
	316, 3184,
	317, 3184,
	318, 3184,
	319, 3184,
	320, 3184,
	321, 3184,
	322, 3184,
	323, 3184,
	324, 3184,
	325, 3184,
	326, 3184,
	327, 3184,
	328, 3184,
	329, 3184,
	330, 3184,
	331, 3184,
	332, 3184,
	333, 3184,
	334, 3184,
	335, 3184,
	337, 3184,
	338, 3184,
	339, 3184,
	340, 3184,
	341, 3184,
	342, 3184,
	343, 3184,
	344, 3184,
	345, 3184,
	346, 3184,
	347, 3184,
	348, 3184,
	349, 3184,
	350, 3184,
	351, 3184,
	352, 3184,
	353, 3184,
	354, 3184,
	355, 3184,
	357, 3184,
	358, 3184,
	361, 3184,
	362, 3184,
	363, 3184,
	364, 3184,
	365, 3184,
	367, 3184,
	368, 3184,
	369, 3184,
	370, 3184,
	371, 3184,
	374, 3184,
	376, 3184,
	379, 3184,
	380, 3184,
	381, 3184,
	382, 3184,
	384, 3184,
	385, 3184,
	386, 3184,
	388, 3184,
	390, 3184,
	391, 3184,
	392, 3184,
	393, 3184,
	394, 3184,
	395, 3184,
	396, 3184,
	397, 3184,
	398, 3184,
	399, 3184,
	400, 3184,
	401, 3184,
	402, 3184,
	403, 3184,
	405, 3184,
	406, 3184,
	407, 3184,
	408, 3184,
	409, 3184,
	410, 3184,
	411, 3184,
	412, 3184,
	413, 3184,
	414, 3184,
	415, 3184,
	416, 3184,
	417, 3184,
	418, 3184,
	419, 3184,
	421, 3184,
	422, 3184,
	423, 3184,
	425, 3184,
	426, 3184,
	427, 3184,
	428, 3184,
	429, 3184,
	430, 3184,
	431, 3184,
	432, 3184,
	433, 3184,
	434, 3184,
	435, 3184,
	436, 3184,
	437, 3184,
	438, 3184,
	440, 3184,
	442, 3184,
	443, 3184,
	444, 3184,
	450, 3184,
	451, 3184,
	452, 3184,
	453, 3184,
	454, 3184,
	455, 3184,
	456, 3184,
	457, 3184,
	458, 3184,
	459, 3184,
	460, 3184,
	461, 3184,
	462, 3184,
	463, 3184,
	464, 3184,
	466, 3184,
	467, 3184,
	468, 3184,
	469, 3184,
	470, 3184,
	471, 3184,
	472, 3184,
	473, 3184,
	474, 3184,
	475, 3184,
	476, 3184,
	477, 3184,
	478, 3184,
	479, 3184,
	480, 3184,
	481, 3184,
	482, 3184,
	483, 3184,
	484, 3184,
	485, 3184,
	486, 3184,
	487, 3184,
	488, 3184,
	489, 3184,
	490, 3184,
	491, 3184,
	492, 3184,
	493, 3184,
	494, 3184,
	495, 3184,
	497, 3184,
	498, 3184,
	499, 3184,
	500, 3184,
	501, 3184,
	502, 3184,
	504, 3184,
	505, 3184,
	506, 3184,
	507, 3184,
	508, 3184,
	509, 3184,
	510, 3184,
	511, 3184,
	512, 3184,
	513, 3184,
	514, 3184,
	515, 3184,
	516, 3184,
	517, 3184,
	518, 3184,
	519, 3184,
	521, 3184,
	523, 3184,
	524, 3184,
	525, 3184,
	526, 3184,
	527, 3184,
	528, 3184,
	529, 3184,
	530, 3184,
	531, 3184,
	532, 3184,
	533, 3184,
	534, 3184,
	535, 3184,
	536, 3184,
	537, 3184,
	538, 3184,
	539, 3184,
	540, 3184,
	541, 3184,
	542, 3184,
	543, 3184,
	545, 3184,
	546, 3184,
	547, 3184,
	548, 3184,
	549, 3184,
	551, 3184,
	552, 3184,
	553, 3184,
	554, 3184,
	555, 3184,
	556, 3184,
	558, 3184,
	559, 3184,
	561, 3184,
	562, 3184,
	563, 3184,
	564, 3184,
	565, 3184,
	567, 3184,
	569, 3184,
	570, 3184,
	571, 3184,
	572, 3184,
	573, 3184,
	574, 3184,
	575, 3184,
	576, 3184,
	578, 3184,
	579, 3184,
	580, 3184,
	581, 3184,
	582, 3184,
	583, 3184,
	584, 3184,
	587, 3184,
	588, 3184,
	589, 3184,
	590, 3184,
	591, 3184,
	592, 3184,
	593, 3184,
	594, 3184,
	595, 3184,
	597, 3184,
	600, 3184,
	601, 3184,
	602, 3184,
	603, 3184,
	604, 3184,
	605, 3184,
	607, 3184,
	608, 3184,
	609, 3184,
	610, 3184,
	611, 3184,
	612, 3184,
	613, 3184,
	614, 3184,
	615, 3184,
	616, 3184,
	617, 3184,
	618, 3184,
	623, 3184,
	624, 3184,
	625, 3184,
	626, 3184,
	627, 3184,
	628, 3184,
	629, 3184,
	631, 3184,
	641, 3184,
	642, 3184,
	643, 3184,
	644, 3184,
	645, 3184,
	646, 3184,
	648, 3184,
	649, 3184,
	650, 3184,
	651, 3184,
	652, 3184,
	653, 3184,
	654, 3184,
	655, 3184,
	656, 3184,
	659, 3184,
	662, 3184,
	663, 3184,
	665, 3184,
	666, 3184,
	-2, 0,
	-1, 1846,
	203, 3028,
	566, 3028,
	643, 3028,
	663, 3028,
	-2, 0,
	-1, 1894,
	203, 1100,
	-2, 3018,
	-1, 1895,
	203, 1101,
	-2, 2801,
	-1, 1896,
	203, 1102,
	-2, 2969,
	-1, 1897,
	203, 1103,
	-2, 3098,
	-1, 1902,
	427, 1154,
	502, 1154,
	549, 1154,
	571, 1154,
	-2, 0,
	-1, 1913,
	1, 1712,
	241, 1712,
	660, 1712,
	662, 1712,
	664, 1712,
	667, 1712,
	-2, 0,
	-1, 1931,
	1, 1149,
	660, 1149,
	662, 1149,
	664, 1149,
	667, 1149,
	-2, 0,
	-1, 1932,
	1, 1193,
	660, 1193,
	662, 1193,
	664, 1193,
	667, 1193,
	-2, 0,
	-1, 1933,
	1, 1205,
	660, 1205,
	662, 1205,
	664, 1205,
	667, 1205,
	-2, 0,
	-1, 1936,
	1, 1158,
	660, 1158,
	662, 1158,
	664, 1158,
	667, 1158,
	-2, 0,
	-1, 1938,
	1, 1164,
	660, 1164,
	662, 1164,
	664, 1164,
	667, 1164,
	-2, 0,
	-1, 1941,
	1, 1160,
	660, 1160,
	662, 1160,
	664, 1160,
	667, 1160,
	-2, 0,
	-1, 1946,
	1, 1174,
	660, 1174,
	662, 1174,
	664, 1174,
	667, 1174,
	-2, 0,
	-1, 1983,
	1, 3007,
	660, 3007,
	662, 3007,
	663, 3007,
	664, 3007,
	667, 3007,
	-2, 0,
	-1, 1988,
	1, 1261,
	660, 1261,
	662, 1261,
	664, 1261,
	667, 1261,
	-2, 0,
	-1, 2008,
	183, 1930,
	196, 1930,
	298, 1930,
	372, 1930,
	-2, 1868,
	-1, 2110,
	162, 1889,
	183, 1889,
	196, 1889,
	262, 1889,
	298, 1889,
	372, 1889,
	383, 1889,
	585, 1889,
	-2, 2354,
	-1, 2171,
	662, 2529,
	-2, 0,
	-1, 2208,
	162, 1889,
	183, 1889,
	196, 1889,
	262, 1889,
	298, 1889,
	372, 1889,
	383, 1889,
	585, 1889,
	-2, 2030,
	-1, 2247,
	663, 2673,
	666, 2673,
	-2, 1288,
	-1, 2248,
	663, 2675,
	666, 2675,
	-2, 1289,
	-1, 2249,
	663, 2674,
	666, 2674,
	-2, 1290,
	-1, 2250,
	666, 2597,
	-2, 1291,
	-1, 2274,
	661, 2177,
	-2, 2165,
	-1, 2306,
	203, 3025,
	663, 3025,
	666, 3025,
	-2, 0,
	-1, 2357,
	1, 903,
	664, 903,
	667, 903,
	-2, 1773,
	-1, 2560,
	241, 323,
	-2, 2681,
	-1, 2561,
	241, 324,
	-2, 388,
	-1, 2679,
	1, 1151,
	660, 1151,
	662, 1151,
	664, 1151,
	667, 1151,
	-2, 0,
	-1, 2680,
	1, 1195,
	660, 1195,
	662, 1195,
	664, 1195,
	667, 1195,
	-2, 0,
	-1, 2681,
	1, 1207,
	660, 1207,
	662, 1207,
	664, 1207,
	667, 1207,
	-2, 0,
	-1, 2682,
	1, 1263,
	660, 1263,
	662, 1263,
	664, 1263,
	667, 1263,
	-2, 0,
	-1, 2724,
	1, 1176,
	660, 1176,
	662, 1176,
	664, 1176,
	667, 1176,
	-2, 0,
	-1, 2748,
	1, 1242,
	660, 1242,
	662, 1242,
	664, 1242,
	667, 1242,
	-2, 0,
	-1, 2798,
	477, 1957,
	478, 1957,
	-2, 2210,
	-1, 2831,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2230,
	-1, 2832,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2231,
	-1, 2833,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2232,
	-1, 2834,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2233,
	-1, 2835,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2234,
	-1, 2836,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2235,
	-1, 2837,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2236,
	-1, 2838,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2237,
	-1, 2850,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2249,
	-1, 2851,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2250,
	-1, 2852,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2251,
	-1, 2856,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2258,
	-1, 2862,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2262,
	-1, 2864,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2270,
	-1, 2865,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2271,
	-1, 2866,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2272,
	-1, 2867,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2273,
	-1, 3041,
	5, 2685,
	203, 2540,
	661, 2682,
	-2, 2673,
	-1, 3042,
	203, 2541,
	-2, 3114,
	-1, 3043,
	203, 2542,
	-2, 2896,
	-1, 3044,
	203, 2543,
	-2, 2764,
	-1, 3045,
	203, 2544,
	-2, 2829,
	-1, 3046,
	203, 2545,
	-2, 2881,
	-1, 3047,
	203, 2546,
	-2, 3021,
	-1, 3048,
	203, 2547,
	-2, 2337,
	-1, 3143,
	1, 2031,
	2, 2031,
	114, 2031,
	162, 2031,
	183, 2031,
	196, 2031,
	204, 2031,
	222, 2031,
	225, 2031,
	255, 2031,
	262, 2031,
	274, 2031,
	294, 2031,
	298, 2031,
	338, 2031,
	372, 2031,
	377, 2031,
	383, 2031,
	465, 2031,
	471, 2031,
	585, 2031,
	598, 2031,
	620, 2031,
	621, 2031,
	622, 2031,
	632, 2031,
	660, 2031,
	662, 2031,
	664, 2031,
	666, 2031,
	667, 2031,
	-2, 2030,
	-1, 3159,
	661, 2654,
	-2, 2668,
	-1, 3161,
	1, 405,
	620, 405,
	667, 405,
	-2, 1916,
	-1, 3199,
	661, 2176,
	-2, 2166,
	-1, 3230,
	38, 2685,
	135, 2685,
	643, 2685,
	659, 2685,
	662, 2685,
	663, 2685,
	666, 2685,
	-2, 2682,
	-1, 3231,
	38, 2686,
	135, 2686,
	643, 2686,
	659, 2686,
	662, 2686,
	663, 2686,
	666, 2686,
	-2, 2683,
	-1, 3461,
	1, 1612,
	459, 1566,
	504, 1566,
	635, 1566,
	640, 1566,
	660, 1612,
	662, 1612,
	664, 1612,
	667, 1612,
	-2, 1916,
	-1, 3622,
	1, 1246,
	660, 1246,
	662, 1246,
	664, 1246,
	667, 1246,
	-2, 0,
	-1, 3650,
	378, 1960,
	-2, 3173,
	-1, 3651,
	378, 1961,
	-2, 3004,
	-1, 3655,
	477, 2608,
	478, 2608,
	-2, 2335,
	-1, 3656,
	477, 2612,
	478, 2612,
	-2, 2336,
	-1, 3657,
	477, 2609,
	478, 2609,
	-2, 2335,
	-1, 3658,
	477, 2613,
	478, 2613,
	-2, 2336,
	-1, 3672,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2260,
	-1, 3673,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2264,
	-1, 3679,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2266,
	-1, 3928,
	1, 898,
	660, 898,
	662, 898,
	664, 898,
	667, 898,
	-2, 1773,
	-1, 4155,
	46, 2645,
	-2, 1346,
	-1, 4160,
	1, 1612,
	660, 1612,
	662, 1612,
	664, 1612,
	667, 1612,
	-2, 1916,
	-1, 4275,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2268,
	-1, 4282,
	268, 0,
	270, 0,
	361, 0,
	-2, 2287,
	-1, 4350,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2316,
	-1, 4351,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2317,
	-1, 4352,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2318,
	-1, 4356,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2322,
	-1, 4357,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2323,
	-1, 4358,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2324,
	-1, 4410,
	661, 2655,
	-2, 2669,
	-1, 4655,
	663, 3291,
	-2, 1842,
	-1, 4714,
	268, 0,
	270, 0,
	361, 0,
	-2, 2288,
	-1, 4717,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2291,
	-1, 4718,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2293,
	-1, 4848,
	663, 2670,
	-2, 1647,
	-1, 5024,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2292,
	-1, 5025,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2294,
	-1, 5036,
	268, 0,
	-2, 2327,
	-1, 5240,
	268, 0,
	-2, 2328,
	-1, 5473,
	54, 0,
	237, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 3136,
}

const sqlPrivate = 57344

const sqlLast = 162554

var sqlAct = [...]int16{
	317, 5670, 4142, 5403, 5404, 5691, 5603, 3419, 3812, 1512,
	5662, 3536, 3381, 5544, 5528, 1038, 10, 5286, 1242, 203,
	5521, 4, 5459, 5472, 5486, 5337, 5617, 5355, 1037, 6,
	5442, 5487, 5101, 5294, 4697, 5415, 2557, 5394, 5418, 5488,
	4141, 4627, 5185, 5553, 5172, 1568, 5208, 1707, 2417, 4315,
	5158, 5434, 4981, 5484, 5244, 4976, 4970, 4267, 4904, 4939,
	5011, 3955, 5045, 3505, 5471, 4639, 1426, 2808, 5106, 2652,
	4178, 1415, 3885, 5191, 2388, 3223, 4844, 1509, 4647, 1503,
	5322, 811, 2214, 3073, 3958, 4845, 2650, 2315, 961, 4825,
	4550, 3664, 4077, 3290, 2339, 2879, 4027, 3556, 2017, 4172,
	4126, 2261, 4986, 3397, 4610, 4593, 2601, 4595, 1405, 4111,
	3961, 2627, 1741, 1234, 2818, 886, 1496, 961, 4131, 5041,
	2426, 4400, 2809, 4205, 1589, 4207, 3525, 203, 3520, 3522,
	3493, 1504, 4130, 3944, 3173, 2614, 3942, 4133, 4123, 4104,
	1864, 4103, 3947, 823, 3420, 1682, 4413, 3835, 3943, 3861,
	3868, 3827, 2648, 4753, 1302, 4696, 1290, 3551, 3818, 924,
	3588, 3816, 1041, 3537, 2183, 2527, 2544, 3793, 2546, 3468,
	3410, 2476, 5529, 2438, 3982, 3144, 2243, 3852, 4124, 3135,
	1737, 311, 2815, 2157, 3136, 2180, 3792, 5245, 4377, 2088,
	2118, 3648, 1801, 2598, 2892, 882, 956, 3550, 2959, 310,
	1032, 2545, 2957, 3430, 2525, 1910, 1507, 2507, 2521, 1551,
	2503, 2499, 1295, 2337, 2405, 1479, 1291, 3221, 1566, 1300,
	1736, 2409, 1406, 3222, 1583, 2184, 3506, 3179, 1862, 2948,
	3116, 3070, 2876, 1482, 2387, 2797, 1489, 2780, 2384, 1570,
	2778, 3174, 3530, 1709, 1797, 3314, 859, 1839, 1804, 3315,
	1114, 2200, 2597, 5671, 2203, 5356, 3289, 2530, 5439, 3275,
	1538, 2377, 1485, 4134, 1456, 1459, 1444, 3125, 962, 967,
	1493, 2152, 1409, 2951, 2193, 1388, 2929, 3037, 1423, 2102,
	3085, 1263, 2018, 3003, 867, 2019, 1946, 970, 3138, 2779,
	2554, 214, 3229, 1245, 2694, 1931, 215, 962, 967, 129,
	1830, 1011, 842, 2781, 115, 902, 878, 5545, 963, 1276,
	1837, 2535, 1766, 1692, 5604, 816, 970, 51, 50, 48,
	1411, 1386, 39, 37, 35, 3702, 812, 2024, 825, 1582,
	1999, 1747, 1563, 951, 3696, 1136, 125, 963, 4391, 2317,
	3814, 4392, 5680, 2317, 2317, 798, 1298, 5706, 1012, 821,
	2317, 3115, 5694, 5482, 2317, 5678, 4084, 2317, 5677, 3115,
	3886, 5481, 3115, 5073, 2034, 2035, 5070, 2067, 2068, 2069,
	2078, 2079, 2080, 5637, 5635, 5575, 5069, 5105, 5105, 2566,
	895, 898, 5068, 5065, 5064, 5530, 4187, 2071, 2065, 5531,
	5512, 5510, 5063, 4963, 3115, 3115, 2037, 1740, 5507, 5504,
	1238, 5469, 5508, 5505, 2349, 2566, 5468, 2084, 5467, 1937,
	2566, 5457, 3561, 5455, 5446, 5105, 5445, 5105, 5105, 1238,
	5105, 4188, 5413, 1874, 5377, 2090, 5105, 5370, 3190, 5369,
	3905, 3115, 1798, 3115, 2036, 5360, 1403, 5336, 5333, 2566,
	5315, 2566, 5105, 5242, 4929, 2056, 5222, 3190, 5187, 5124,
	4672, 1547, 4469, 2566, 5123, 2053, 5112, 5111, 2566, 4789,
	2566, 5105, 5104, 1227, 5052, 5026, 5105, 3899, 2566, 3190,
	3763, 3764, 4996, 3781, 3782, 3783, 3561, 4964, 4899, 3878,
	3215, 4084, 3115, 2346, 2346, 2649, 4872, 4768, 3763, 3764,
	3115, 4769, 2346, 4712, 1421, 1217, 1547, 4716, 4663, 2602,
	1216, 3190, 4200, 2349, 4657, 4607, 4500, 4468, 4200, 4608,
	4501, 4469, 4406, 4404, 4384, 1297, 4407, 4405, 3115, 4299,
	4295, 4199, 3908, 2566, 3115, 4200, 3909, 3811, 3711, 2954,
	4381, 3115, 3763, 3764, 3712, 1441, 4084, 2059, 2060, 2061,
	2062, 1233, 3809, 3498, 3804, 3803, 3810, 2042, 3115, 3115,
	3754, 3778, 3752, 1239, 3755, 3185, 3753, 3744, 1389, 1389,
	3742, 3745, 3713, 108, 3115, 3560, 3115, 3547, 3546, 3561,
	3254, 2637, 2637, 3189, 3115, 2566, 2349, 3190, 3171, 2346,
	2349, 3087, 3115, 3663, 2905, 2906, 2907, 2924, 2925, 2926,
	2075, 3163, 1390, 3114, 2085, 2566, 2636, 3115, 1451, 2349,
	2637, 2064, 2066, 1749, 1392, 2927, 1393, 3115, 5378, 5246,
	5237, 5225, 3561, 3778, 4381, 3086, 4974, 1749, 4929, 2346,
	4873, 2081, 4672, 2082, 1418, 4609, 4602, 275, 3388, 2955,
	2051, 2052, 3274, 2431, 2363, 1442, 2565, 3265, 2343, 3498,
	4073, 2316, 2090, 3407, 3180, 2178, 2330, 1442, 1734, 4518,
	2073, 4270, 4237, 3769, 2201, 2514, 4189, 3763, 3764, 1912,
	1855, 3155, 2917, 3154, 3153, 2057, 3152, 3151, 1394, 1391,
	1226, 3769, 2913, 1225, 1224, 1223, 4190, 4988, 1222, 1221,
	1220, 277, 1219, 3115, 1215, 1214, 1748, 1761, 1213, 1212,
	275, 1755, 1211, 1033, 1210, 1209, 1208, 1207, 1206, 1205,
	3614, 4773, 3701, 1204, 1203, 1202, 1201, 1200, 1199, 1198,
	1197, 1196, 1195, 1194, 2083, 3769, 1193, 2956, 1180, 2953,
	1112, 86, 1111, 1036, 1035, 1110, 1109, 3785, 1108, 1107,
	1106, 1105, 2318, 2716, 276, 2072, 2318, 2318, 46, 1104,
	87, 1103, 1102, 2318, 277, 1101, 2087, 2318, 1100, 1274,
	2318, 1099, 1098, 269, 2918, 2919, 2920, 2921, 92, 1097,
	1096, 1095, 270, 1094, 2912, 1093, 1878, 1092, 1091, 1090,
	1089, 3779, 1088, 1087, 1086, 1085, 1084, 1083, 1082, 1081,
	1080, 1859, 1079, 1078, 1077, 1076, 1075, 1074, 1063, 3779,
	1062, 1061, 216, 1417, 1056, 3533, 1055, 276, 1048, 1047,
	1046, 101, 1031, 1030, 1029, 987, 2063, 986, 985, 984,
	983, 974, 973, 972, 4728, 1520, 2346, 971, 933, 932,
	893, 892, 1740, 891, 2346, 873, 2346, 5497, 305, 2346,
	304, 303, 2058, 3779, 3498, 302, 301, 2986, 300, 2346,
	3769, 299, 1241, 4439, 1039, 2346, 298, 2922, 2923, 297,
	3763, 3764, 2087, 296, 1749, 216, 3086, 56, 4396, 124,
	1514, 1300, 295, 294, 2076, 108, 121, 293, 292, 291,
	2087, 290, 289, 288, 287, 286, 285, 284, 283, 282,
	1749, 281, 2915, 280, 4187, 275, 279, 278, 1300, 1300,
	1300, 2958, 3282, 1442, 4241, 1443, 4201, 3864, 3807, 170,
	2089, 3724, 3707, 275, 4990, 3698, 3616, 3591, 3478, 1453,
	3194, 3282, 3515, 2160, 2087, 3160, 2160, 275, 1760, 3142,
	2159, 2984, 1754, 2159, 2204, 2970, 2968, 5228, 2770, 2390,
	2346, 109, 2348, 2617, 2227, 2129, 2349, 1592, 3780, 277,
	3241, 2346, 1300, 3808, 5496, 1712, 2000, 2343, 1300, 1300,
	2163, 2316, 1514, 2158, 2773, 2031, 3780, 277, 3779, 1743,
	1559, 1725, 1555, 1556, 1557, 3763, 3764, 1425, 1542, 5493,
	5470, 277, 5454, 5341, 5234, 5096, 5040, 1300, 4994, 1300,
	4973, 1300, 2074, 2120, 5249, 5226, 4798, 4751, 4750, 1712,
	4744, 4743, 276, 4742, 2048, 2049, 2055, 2077, 2054, 2050,
	3780, 2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044,
	276, 269, 4735, 1514, 1542, 4738, 4734, 4732, 4727, 4737,
	270, 4724, 1806, 1702, 276, 2952, 1939, 1419, 4723, 269,
	4620, 4606, 4601, 3769, 4443, 1712, 4442, 1697, 270, 2087,
	1402, 4441, 1712, 269, 3086, 4409, 2034, 2035, 1738, 2916,
	216, 1300, 270, 1300, 203, 203, 4371, 1689, 1712, 3203,
	2120, 1442, 4370, 3763, 3764, 4369, 4291, 1300, 216, 1300,
	4286, 3859, 3800, 3791, 3762, 4506, 1534, 3759, 2037, 3763,
	3764, 3758, 216, 2127, 3756, 3751, 3750, 1488, 1492, 3749,
	3746, 113, 3743, 3723, 3280, 1811, 1814, 3706, 3699, 1500,
	3775, 3776, 3777, 3697, 3548, 3143, 1536, 3774, 3772, 3773,
	3765, 3766, 3767, 3768, 3770, 3771, 2036, 2089, 2941, 2031,
	1712, 2034, 2035, 2573, 2030, 3780, 1573, 1574, 3765, 3766,
	3767, 3768, 3770, 3771, 5700, 1817, 2571, 1833, 1569, 2122,
	5625, 1300, 5624, 5543, 1300, 2065, 967, 5541, 3769, 1427,
	212, 3779, 116, 2037, 275, 120, 275, 1723, 1585, 4317,
	1679, 1684, 5405, 4621, 970, 2121, 5320, 2119, 5306, 3774,
	3772, 3773, 3765, 3766, 3767, 3768, 3770, 3771, 5302, 5301,
	275, 275, 2090, 3517, 1528, 275, 5300, 275, 4989, 5280,
	5279, 2036, 1735, 5277, 5248, 1040, 5247, 5220, 3891, 2882,
	5206, 170, 4516, 5203, 5202, 1687, 5183, 5182, 277, 1562,
	277, 2902, 2903, 2904, 2928, 2914, 2908, 1799, 2910, 2911,
	2909, 2896, 2897, 2898, 2899, 2900, 2901, 275, 5120, 2042,
	1719, 5251, 2087, 1879, 277, 277, 1842, 1844, 1565, 277,
	5091, 277, 1575, 1576, 2888, 3805, 3769, 5038, 3279, 5021,
	5020, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 4959,
	275, 276, 3769, 276, 4955, 4952, 3779, 3279, 4930, 175,
	4749, 1542, 4673, 4504, 4503, 275, 4484, 4483, 1840, 4481,
	269, 277, 269, 3279, 1300, 3853, 218, 276, 276, 270,
	1300, 270, 276, 2181, 276, 3772, 3773, 3765, 3766, 3767,
	3768, 3770, 3771, 4387, 2042, 4374, 269, 269, 4281, 275,
	2107, 269, 4202, 269, 277, 270, 270, 4621, 3780, 216,
	270, 3532, 270, 4164, 4154, 4053, 213, 3993, 3960, 277,
	2009, 217, 3893, 3728, 276, 3727, 275, 3763, 3764, 3722,
	3781, 3782, 3783, 3688, 3492, 216, 216, 2087, 3490, 3307,
	216, 1955, 1034, 269, 2166, 2165, 2164, 2161, 2064, 2066,
	4711, 2153, 270, 277, 2109, 2151, 1884, 276, 3201, 3200,
	3157, 1239, 3150, 3113, 2966, 2106, 2321, 2226, 2182, 2175,
	2174, 2173, 276, 1854, 2172, 2171, 269, 2170, 2169, 2168,
	277, 2167, 216, 2148, 2147, 270, 1300, 1300, 1300, 1873,
	2146, 269, 1300, 2145, 2005, 2144, 2143, 2142, 2141, 1423,
	270, 1423, 2140, 2139, 3516, 2138, 276, 2137, 3778, 2136,
	2135, 2134, 2057, 2133, 2122, 216, 1592, 2108, 2087, 2105,
	2100, 203, 1527, 3780, 1448, 269, 1437, 1831, 1300, 5066,
	216, 2249, 1514, 276, 270, 2087, 5250, 4962, 4794, 2279,
	2249, 4720, 1514, 2032, 4438, 1514, 1712, 1903, 4403, 4390,
	3710, 3148, 269, 3192, 1836, 4796, 4437, 2034, 2035, 2121,
	1940, 270, 4193, 2222, 216, 3889, 3856, 2103, 4875, 2010,
	4603, 3763, 3764, 5489, 3382, 2190, 1554, 3774, 3772, 3773,
	3765, 3766, 3767, 3768, 3770, 3771, 1552, 2985, 5616, 2037,
	3996, 216, 5310, 2087, 5303, 2001, 4993, 4915, 4914, 4913,
	4912, 4911, 4874, 4775, 2006, 4680, 4679, 4678, 2237, 2257,
	3769, 2242, 1514, 1569, 2014, 4677, 4676, 2236, 1300, 2308,
	4675, 4674, 2311, 2162, 1217, 4470, 4394, 2036, 2013, 1216,
	2230, 1547, 2008, 1569, 2383, 2231, 4393, 4204, 4203, 4086,
	1569, 4085, 1300, 1569, 4082, 2618, 5571, 1569, 5192, 5229,
	1592, 2187, 2188, 1553, 2027, 2028, 5569, 2328, 4624, 2211,
	2489, 5485, 2204, 2333, 1567, 2160, 4541, 2335, 1547, 3333,
	4268, 2983, 2159, 1548, 2340, 2969, 2967, 2003, 2342, 2058,
	2420, 3748, 2345, 3747, 3785, 2954, 2381, 3670, 3318, 2351,
	1519, 1902, 1550, 2273, 3773, 3765, 3766, 3767, 3768, 3770,
	3771, 2355, 2154, 2155, 2369, 3428, 4499, 5227, 1542, 2143,
	1239, 2250, 967, 1547, 1191, 1421, 2302, 1421, 2034, 2035,
	2250, 967, 2143, 4144, 5095, 4143, 2232, 4464, 3779, 4465,
	970, 2354, 4614, 3962, 2234, 5272, 2131, 2547, 2235, 970,
	2669, 5273, 2602, 5186, 5518, 1956, 1911, 2089, 2202, 4971,
	2037, 2252, 3557, 2358, 4112, 4919, 2212, 1912, 2548, 5273,
	2252, 4600, 4547, 4538, 3316, 4509, 1389, 4232, 3926, 1192,
	2738, 2646, 2581, 2209, 5042, 3814, 2038, 2039, 2040, 2041,
	2043, 2044, 2375, 2374, 4043, 2955, 1569, 2383, 2036, 1401,
	2331, 4319, 2511, 3765, 3766, 3767, 3768, 3770, 3771, 2179,
	2949, 3384, 3716, 5663, 1544, 5115, 1746, 5683, 1753, 2087,
	1759, 3767, 3768, 3770, 3771, 5494, 3199, 2176, 3395, 2206,
	2221, 2220, 2219, 1712, 1712, 2217, 2216, 2215, 2156, 2128,
	2498, 2262, 4161, 5087, 1592, 1835, 2488, 1239, 2610, 1810,
	2508, 2487, 3339, 1730, 1523, 1418, 2357, 1418, 2258, 2045,
	2046, 2038, 2039, 2040, 2041, 2043, 2044, 1484, 5509, 3404,
	1712, 2495, 5506, 4891, 4887, 4183, 3401, 2498, 4475, 3399,
	5295, 1571, 1572, 2956, 4977, 2953, 1867, 2523, 2512, 1888,
	1853, 5412, 1858, 3965, 2353, 4494, 3529, 3590, 4095, 1712,
	5572, 1548, 1549, 5495, 5118, 3780, 1872, 5114, 1877, 5093,
	2484, 2042, 2493, 1836, 5573, 4262, 2033, 4560, 2504, 2531,
	5147, 4861, 1244, 2378, 1780, 5151, 1176, 3255, 1189, 2431,
	2730, 1025, 1187, 1185, 3930, 931, 3292, 2498, 1773, 928,
	5693, 5311, 5140, 2728, 1712, 4057, 1712, 5126, 1712, 4922,
	3890, 4921, 4558, 1732, 4557, 4549, 1954, 4524, 4523, 1554,
	2376, 4521, 2370, 4520, 4508, 1545, 1712, 1712, 5608, 2395,
	4467, 2396, 5550, 2558, 2563, 1546, 4466, 1938, 4101, 1953,
	1712, 2403, 2404, 4100, 4045, 3877, 3721, 3278, 3720, 3719,
	3718, 3674, 1712, 4559, 1237, 1712, 1712, 1712, 1712, 2397,
	2398, 2425, 2788, 1243, 3276, 2429, 2401, 2402, 3426, 2437,
	3278, 3262, 3425, 3470, 3406, 3526, 967, 3394, 1554, 3386,
	2249, 3375, 4478, 3374, 1417, 3362, 1417, 3276, 3351, 4078,
	2550, 2551, 1544, 1833, 970, 2629, 1553, 2629, 3349, 3344,
	2630, 3343, 2496, 1300, 3323, 2481, 2459, 2532, 1026, 2606,
	3995, 2380, 3322, 2552, 3283, 2641, 3172, 2958, 3932, 3295,
	2863, 2259, 2564, 2007, 2999, 5116, 2786, 3775, 3776, 3777,
	5664, 5223, 1537, 2611, 3774, 3772, 3773, 3765, 3766, 3767,
	3768, 3770, 3771, 1886, 1300, 2998, 2624, 2177, 4604, 4075,
	865, 1952, 2379, 5088, 1236, 1553, 2820, 2480, 4859, 2661,
	2670, 2497, 5019, 4806, 2477, 2494, 4856, 2509, 4074, 2762,
	1023, 2502, 1022, 2644, 3320, 2675, 3962, 4817, 1784, 2537,
	1549, 1300, 2537, 1300, 2536, 2749, 2878, 2536, 2548, 1182,
	1300, 2602, 2667, 1300, 2540, 2279, 2279, 1592, 2497, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1547, 1300, 2585, 1300, 1300,
	1300, 1300, 2578, 1545, 3193, 2634, 2621, 1840, 4041, 1840,
	4816, 2952, 2772, 1546, 1835, 2654, 2700, 2687, 2497, 5609,
	2250, 967, 3626, 5551, 1300, 1823, 865, 1822, 1300, 1300,
	1548, 2613, 2044, 1775, 2759, 1238, 1300, 2790, 4234, 970,
	1300, 2632, 1300, 1300, 2741, 2626, 3771, 2777, 3209, 4876,
	1592, 2761, 2787, 2660, 2600, 1470, 1300, 1300, 1300, 1300,
	2252, 2768, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300,
	1904, 2218, 2665, 1528, 2638, 1733, 2639, 1821, 1419, 1820,
	1419, 1998, 4080, 1935, 3337, 922, 1571, 1572, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 1300, 2949, 1300, 3294,
	1239, 1792, 1239, 1300, 2878, 2430, 2385, 2386, 3685, 2273,
	2273, 2930, 2931, 1571, 1572, 1423, 1571, 1572, 3178, 2679,
	1571, 1572, 1592, 3564, 2690, 2930, 2946, 2034, 2035, 810,
	4079, 1423, 1776, 2002, 2785, 2701, 2491, 2427, 2684, 2688,
	3683, 5150, 1935, 1881, 3629, 2034, 2035, 1300, 1592, 1968,
	4855, 2065, 2994, 3363, 3162, 2724, 805, 3609, 2680, 2037,
	864, 1544, 2788, 2814, 3306, 2736, 1974, 3373, 4857, 2065,
	5163, 3040, 3040, 3054, 3646, 2930, 2423, 2037, 3074, 3076,
	1514, 2802, 2801, 5572, 3661, 1526, 3084, 2813, 2090, 2012,
	2040, 2041, 2043, 2044, 4042, 1912, 1912, 2036, 1951, 203,
	1028, 1027, 5491, 5288, 2722, 1934, 2090, 920, 5171, 3187,
	3403, 2428, 2774, 1547, 2541, 2036, 2894, 1932, 2533, 2776,
	2789, 2782, 5018, 1900, 5641, 3130, 2786, 2681, 4246, 5610,
	3158, 1514, 2945, 2775, 3319, 3411, 1217, 1235, 3305, 1217,
	1217, 2805, 3231, 2424, 2806, 2807, 3402, 2816, 2817, 1549,
	3929, 3364, 3365, 3400, 2748, 2886, 3398, 3186, 2745, 2385,
	2386, 4245, 2884, 4853, 1934, 3293, 2631, 4076, 4805, 1882,
	1514, 1514, 2996, 3122, 2678, 3611, 864, 2997, 4153, 3249,
	3000, 2538, 3001, 3002, 866, 3355, 1933, 3182, 1972, 2211,
	4505, 3628, 5672, 2958, 3680, 4308, 4491, 3175, 1948, 5611,
	1072, 2890, 5263, 2874, 3367, 1887, 2222, 2534, 3214, 3211,
	2042, 1592, 1545, 3277, 5262, 2784, 929, 2729, 2943, 2746,
	929, 1184, 1546, 929, 3625, 3681, 2539, 929, 2042, 3686,
	2727, 1421, 3660, 4920, 2758, 2872, 5290, 4522, 4519, 3236,
	3208, 4448, 4305, 3244, 3121, 3240, 5620, 1421, 3250, 2747,
	3366, 2760, 4585, 967, 4013, 967, 3206, 1805, 3205, 3251,
	2279, 1783, 1239, 4004, 2064, 2066, 3049, 4447, 3065, 1542,
	3036, 970, 1239, 970, 3080, 3129, 1239, 3134, 3243, 3078,
	3140, 3141, 2064, 2066, 3195, 3127, 3128, 1389, 3111, 3112,
	3123, 4446, 2787, 3207, 5492, 4432, 2273, 2162, 3228, 3247,
	866, 3181, 3372, 2209, 5612, 4431, 3465, 4858, 967, 3252,
	3176, 4430, 4238, 4107, 4586, 4099, 4014, 4039, 1803, 3258,
	3220, 3147, 3405, 3350, 4489, 4005, 970, 3342, 2057, 3321,
	4306, 3935, 2860, 3269, 5584, 1592, 2452, 2381, 2381, 2686,
	5164, 3184, 3260, 5595, 3627, 921, 2057, 1712, 3676, 3284,
	2434, 2769, 2515, 5594, 5162, 2570, 2569, 2522, 3653, 3654,
	3170, 1418, 5160, 3177, 4584, 3234, 4012, 1239, 3466, 2958,
	1514, 3202, 5643, 3246, 2785, 4003, 5558, 1418, 1469, 3461,
	2154, 2155, 4702, 5374, 3253, 4701, 3261, 4851, 1488, 2868,
	1492, 1300, 1300, 3239, 1300, 4239, 3213, 1183, 2453, 4108,
	3281, 4105, 3216, 923, 3217, 4854, 3245, 919, 3259, 2087,
	5490, 4840, 2435, 2869, 2273, 5159, 3340, 3238, 3464, 5522,
	2870, 4935, 1547, 1809, 2875, 5614, 1514, 2087, 3396, 4180,
	3501, 3325, 2431, 806, 3619, 3504, 3682, 3380, 4181, 5461,
	2317, 5462, 1996, 3256, 4035, 5161, 3684, 4037, 2451, 4833,
	2543, 3949, 1431, 1966, 1064, 5389, 5079, 1969, 1712, 4036,
	4034, 4033, 2433, 4030, 3383, 3310, 4080, 3423, 2478, 1433,
	1712, 5296, 1712, 2483, 1805, 203, 3555, 3268, 1712, 3324,
	2516, 1065, 3331, 3332, 3334, 3335, 3336, 3338, 3931, 1712,
	1712, 3297, 3300, 3341, 3287, 2058, 3554, 1428, 3370, 863,
	2717, 3513, 1913, 3376, 2958, 1345, 2877, 4834, 2429, 1167,
	1293, 3412, 2542, 2058, 1731, 2858, 1514, 4840, 1514, 2861,
	5618, 1446, 2439, 3270, 3271, 807, 4180, 3272, 3273, 3496,
	1417, 3473, 5289, 3346, 1231, 4949, 3475, 3427, 2492, 2431,
	2149, 1300, 3462, 3463, 2683, 1434, 1417, 3887, 2443, 2485,
	3977, 3056, 3326, 3359, 3360, 4833, 3369, 975, 3368, 4826,
	3378, 2490, 5557, 2089, 3385, 4852, 3508, 967, 3392, 3983,
	5582, 2538, 4090, 1712, 1435, 2857, 5013, 1967, 4824, 2723,
	808, 2089, 809, 3161, 982, 970, 3567, 3568, 4828, 5372,
	1525, 1883, 1973, 3592, 2011, 3593, 2479, 2512, 3575, 3576,
	3577, 3578, 4698, 3586, 3417, 3418, 3476, 3416, 1970, 2440,
	3558, 3976, 2421, 4834, 1300, 5031, 2539, 5423, 1073, 1432,
	1300, 1300, 3471, 4893, 3585, 3549, 3985, 3562, 1899, 1901,
	3574, 2871, 3278, 1168, 3569, 1300, 3570, 5373, 5639, 5619,
	3600, 2873, 3602, 5613, 3604, 4567, 831, 4783, 2885, 3298,
	3594, 2940, 4106, 2099, 4784, 4565, 3726, 3544, 3126, 3914,
	4827, 2192, 3497, 3139, 2047, 2045, 2046, 2038, 2039, 2040,
	2041, 2043, 2044, 4038, 3631, 4490, 3633, 3950, 1300, 1300,
	2677, 5621, 3512, 1049, 1300, 2038, 2039, 2040, 2041, 2043,
	2044, 5644, 1238, 3535, 4321, 2508, 3984, 1300, 1300, 3634,
	3559, 1840, 3636, 1300, 1300, 3545, 3565, 3543, 3540, 1300,
	1054, 3583, 5536, 5627, 3524, 2192, 1971, 4782, 4961, 2519,
	3552, 4687, 4925, 5537, 1066, 1067, 5012, 2444, 3599, 1258,
	3601, 4829, 3603, 2512, 3605, 3606, 4793, 4571, 4830, 4433,
	1452, 1229, 3542, 1167, 4569, 1450, 4703, 1918, 4264, 4835,
	5338, 2196, 3644, 5331, 1300, 1300, 1300, 3615, 3471, 5429,
	1300, 3598, 5354, 5205, 1419, 3379, 4924, 4923, 1231, 4645,
	1300, 4168, 4023, 4950, 1885, 4021, 1167, 3677, 3903, 4568,
	1419, 2517, 3353, 5556, 3169, 2596, 2189, 1300, 2430, 2859,
	2506, 1449, 4832, 1173, 1172, 1440, 797, 5154, 4619, 2445,
	2446, 1231, 2199, 2021, 2022, 2196, 2021, 2735, 4747, 3652,
	5323, 4836, 4360, 2196, 4699, 2804, 3641, 2432, 1230, 2016,
	2505, 2194, 5113, 2371, 4093, 5324, 2441, 976, 977, 4094,
	3869, 2518, 5523, 2318, 3643, 2475, 3642, 4829, 3704, 3705,
	5649, 2197, 1169, 3708, 4830, 5059, 2490, 4217, 4527, 3647,
	4022, 3354, 2802, 2801, 5214, 4835, 2199, 1429, 1492, 2500,
	5325, 3662, 4215, 2492, 2199, 3700, 4567, 1168, 2368, 3669,
	3956, 5270, 4208, 3709, 2442, 2194, 4565, 4646, 5014, 1300,
	1300, 1300, 1300, 3124, 4553, 2195, 4528, 4476, 1300, 1300,
	1300, 4474, 4169, 1300, 2428, 2197, 4159, 2486, 4832, 3952,
	1168, 3514, 2489, 2197, 3507, 3494, 2794, 1300, 1423, 1592,
	2625, 2619, 2612, 3675, 5339, 2604, 2580, 4836, 2020, 1430,
	2577, 2020, 3415, 4304, 3829, 1777, 2501, 872, 1461, 4375,
	3117, 5327, 5395, 5199, 1300, 4265, 1300, 1068, 1069, 2195,
	3821, 3822, 4460, 2448, 3282, 1423, 5357, 2482, 2021, 2737,
	2364, 2366, 2509, 1050, 1051, 3358, 5326, 4648, 4831, 4982,
	3491, 4219, 1471, 1592, 4704, 4569, 5178, 4566, 5176, 3299,
	3120, 5090, 3968, 3964, 3963, 5328, 3802, 1170, 1423, 3327,
	4210, 1592, 979, 978, 2666, 2491, 3667, 3645, 4389, 5535,
	4426, 3826, 2022, 1514, 3825, 2022, 4209, 3715, 2367, 2658,
	4568, 2099, 1942, 1941, 2647, 4841, 4842, 2575, 1171, 1936,
	2447, 2279, 3168, 1796, 3119, 1592, 3167, 3823, 2198, 3118,
	3166, 3165, 4361, 3164, 4599, 1514, 1829, 1173, 1172, 4748,
	1815, 1236, 1827, 4362, 3833, 1071, 1514, 5283, 4024, 1239,
	2394, 3356, 3231, 2279, 4940, 3906, 1816, 4885, 4526, 3862,
	3303, 4615, 4482, 3858, 2623, 4218, 980, 981, 2795, 4705,
	1173, 1172, 5102, 2020, 4831, 4115, 4471, 1175, 911, 2431,
	3876, 5648, 2198, 5579, 1300, 5077, 1169, 5075, 2488, 5074,
	2198, 1798, 2528, 2487, 5180, 3589, 1300, 1174, 3469, 4235,
	3837, 4229, 3863, 3902, 4532, 3901, 4206, 3900, 2449, 2420,
	4594, 3881, 3897, 3831, 1514, 3880, 912, 3879, 3563, 1169,
	2279, 4841, 4842, 3951, 3904, 3474, 3883, 3911, 3913, 3797,
	3798, 3799, 1919, 3472, 1421, 3907, 2651, 1300, 3479, 3832,
	5340, 3482, 3815, 3484, 3844, 2420, 3871, 3872, 3873, 3874,
	3847, 3848, 3916, 1514, 3846, 3828, 3918, 3919, 3927, 5198,
	3867, 3922, 4001, 3923, 3855, 3924, 3920, 2547, 4461, 1891,
	3933, 1421, 1542, 5179, 1514, 2273, 1052, 1053, 4025, 3328,
	3329, 3357, 1514, 4016, 3830, 5401, 5103, 5098, 4058, 5097,
	5284, 4020, 967, 1514, 4811, 4092, 3531, 5085, 4566, 3531,
	4810, 3870, 4026, 5409, 1421, 3838, 2273, 2273, 3228, 4754,
	970, 5392, 4378, 3967, 4221, 2965, 3972, 1300, 1300, 3974,
	1920, 1170, 5062, 2511, 4537, 1592, 4044, 4434, 3850, 3894,
	3895, 2511, 3896, 3854, 1993, 3953, 5431, 1514, 3882, 4216,
	4211, 4212, 4213, 4214, 5583, 3998, 4068, 5166, 5086, 871,
	1228, 1995, 1171, 4472, 1170, 5581, 3845, 1514, 3836, 3843,
	1992, 2754, 5511, 5329, 1418, 3851, 4088, 2393, 5313, 5330,
	3912, 3980, 1990, 5304, 2273, 3910, 5072, 1962, 1960, 1958,
	5037, 4220, 5402, 3917, 3607, 1171, 3921, 5285, 1930, 4002,
	4802, 1928, 4031, 4746, 4000, 4598, 3842, 1926, 1828, 1249,
	4453, 1418, 1514, 1712, 1826, 1712, 3794, 1070, 2526, 1592,
	3928, 1175, 1924, 3888, 4280, 4015, 961, 1712, 1712, 4230,
	4017, 3231, 4040, 4019, 1922, 4091, 3936, 4227, 4054, 1915,
	1909, 1174, 4222, 1907, 1418, 4046, 1825, 3898, 3757, 3687,
	3495, 3393, 1514, 3387, 1175, 3317, 3204, 2767, 2763, 2668,
	2657, 4160, 2642, 2310, 4083, 3986, 2229, 2225, 3994, 1997,
	1423, 1866, 3939, 3940, 1174, 4809, 3795, 4176, 4259, 4174,
	2726, 4258, 4249, 4007, 2016, 3613, 3612, 2235, 4067, 4109,
	1712, 2692, 4008, 4415, 3966, 3572, 4009, 3970, 4010, 2783,
	2556, 1947, 1712, 2695, 1712, 203, 203, 4011, 4087, 2576,
	2309, 2307, 2132, 1880, 1385, 4158, 2964, 4096, 5483, 4152,
	4217, 4894, 3959, 3839, 3840, 3841, 4059, 4540, 4539, 4525,
	4898, 4871, 5391, 5554, 4173, 4215, 4049, 4980, 4903, 4167,
	4889, 4886, 4822, 1417, 4149, 4208, 4185, 4056, 4055, 4434,
	4975, 4416, 2241, 4110, 4821, 4113, 4069, 4644, 4081, 4634,
	4556, 4301, 1994, 4530, 3370, 2756, 1592, 4497, 4097, 1592,
	3352, 1991, 2755, 4089, 927, 4495, 4473, 4163, 4157, 4417,
	1417, 4145, 4414, 1989, 4175, 2273, 3527, 3228, 1961, 1959,
	1957, 4425, 3519, 4170, 3511, 4196, 4060, 4423, 4062, 1929,
	4225, 4066, 1927, 4098, 1300, 4072, 962, 967, 1925, 5573,
	3503, 1300, 1300, 1417, 3488, 1300, 1300, 1300, 4233, 1300,
	3325, 4236, 4117, 1923, 3486, 970, 3467, 3242, 1300, 2279,
	4102, 4177, 4150, 4424, 4219, 1921, 4156, 1300, 4420, 3237,
	1914, 1908, 1300, 5549, 1906, 2574, 963, 1824, 1592, 2572,
	4155, 2549, 4223, 4210, 5466, 2513, 930, 1300, 4228, 2450,
	2436, 2422, 2350, 4421, 4257, 1592, 2347, 2344, 2341, 4209,
	4182, 2336, 4250, 2334, 2725, 2279, 2279, 1300, 1300, 4191,
	1300, 1300, 1300, 4254, 2329, 2691, 1421, 4194, 4195, 4129,
	2323, 2319, 4260, 4256, 2555, 4261, 4070, 2025, 1300, 3665,
	2372, 2522, 1300, 5282, 2279, 2279, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300,
	1300, 1300, 1300, 1300, 1300, 1300, 4266, 1300, 4218, 3552,
	4283, 3637, 4226, 1398, 2766, 1300, 1300, 2279, 3552, 4333,
	3638, 4334, 1300, 3635, 2360, 2361, 4242, 3460, 4243, 5448,
	4244, 5348, 1186, 1188, 4995, 1300, 4910, 4293, 4294, 4808,
	1399, 3553, 3934, 4184, 203, 2389, 1423, 1423, 958, 1782,
	1300, 3278, 3278, 5216, 4373, 3304, 3622, 1419, 5209, 4263,
	3183, 2752, 1769, 2273, 2764, 1455, 2682, 4656, 3276, 3301,
	2431, 1987, 1988, 1495, 2720, 5447, 2715, 2622, 1721, 2689,
	4862, 1494, 4418, 4905, 3666, 1592, 3424, 1230, 1905, 1239,
	4419, 2034, 2035, 3308, 1419, 4411, 1418, 2026, 1514, 1514,
	1564, 900, 5236, 5100, 4071, 4372, 4755, 4733, 4290, 2273,
	2273, 4288, 3981, 2765, 3309, 3330, 2029, 2034, 2035, 1514,
	1514, 1521, 1454, 4300, 2249, 5567, 1514, 1419, 3309, 1561,
	3231, 2279, 5519, 2279, 4316, 4570, 306, 4323, 2273, 2273,
	3485, 4311, 4307, 4309, 4310, 4422, 4631, 2605, 4552, 2037,
	4331, 1532, 3401, 1300, 4332, 2359, 3399, 4221, 3408, 5587,
	1400, 2036, 3389, 3311, 4330, 1058, 4338, 4336, 1495, 4427,
	309, 2273, 1495, 4551, 3391, 4428, 4429, 903, 903, 917,
	4364, 1300, 4216, 4211, 4212, 4213, 4214, 2036, 3390, 4380,
	794, 1965, 5400, 3313, 5379, 5346, 4444, 4445, 5342, 5281,
	4365, 2262, 5200, 4454, 4385, 4386, 4456, 3312, 4457, 5197,
	5078, 5008, 4642, 4633, 1300, 1300, 4618, 4162, 3534, 3500,
	3487, 3081, 2356, 2260, 4220, 4458, 5615, 4093, 5099, 4459,
	4382, 4383, 4094, 4093, 3377, 1729, 1728, 1722, 4094, 1232,
	3884, 2528, 5647, 3763, 3764, 2034, 2035, 2816, 4324, 4398,
	926, 4395, 4093, 5586, 4402, 4397, 1740, 4094, 4408, 4916,
	2400, 3264, 1421, 1421, 5344, 1417, 1300, 1300, 4533, 4725,
	3990, 3991, 4477, 3992, 1300, 4222, 2816, 4339, 4496, 5365,
	4498, 2399, 3263, 1740, 2273, 2273, 3228, 2273, 2524, 1739,
	2960, 4436, 1890, 1740, 1740, 1712, 1712, 4510, 1889, 3617,
	4449, 2995, 2400, 1712, 2250, 967, 1712, 1712, 4455, 4368,
	2399, 1964, 4440, 5526, 1963, 4641, 1712, 5201, 5141, 4907,
	4902, 1514, 4901, 970, 4785, 4781, 4780, 4721, 4695, 4435,
	4582, 4514, 4312, 4064, 4061, 3620, 2126, 4572, 4515, 4517,
	2125, 3640, 2771, 5632, 2252, 5596, 5452, 4577, 4050, 4051,
	2279, 4052, 5383, 5382, 2276, 5381, 5312, 4548, 1380, 2267,
	4554, 4542, 5256, 5252, 5174, 5130, 5067, 2034, 2035, 5061,
	4555, 3147, 5060, 5058, 1300, 5057, 4502, 4957, 4535, 4536,
	4934, 4507, 4630, 4860, 4795, 4779, 4778, 4668, 4662, 4605,
	4493, 2065, 1418, 1418, 4485, 1712, 4251, 4166, 2562, 2037,
	4165, 1300, 3973, 3915, 4564, 3325, 4649, 4587, 4588, 1423,
	1300, 3621, 3610, 2112, 3582, 4658, 4611, 2117, 1712, 3581,
	3580, 3579, 3518, 1712, 1712, 1712, 3489, 3302, 2090, 3233,
	3197, 3196, 2889, 2757, 2721, 2714, 4563, 2036, 2713, 2712,
	2711, 2710, 4650, 4573, 4597, 2620, 2591, 2590, 1712, 4574,
	1712, 4626, 2589, 4625, 2588, 2587, 1712, 4583, 1592, 4590,
	2586, 2326, 4581, 2325, 4561, 2324, 2322, 3412, 2240, 2239,
	4653, 1986, 3133, 1985, 1916, 1791, 1790, 1789, 1788, 1787,
	1786, 1785, 1781, 4592, 1779, 4613, 4596, 1778, 1716, 4617,
	4580, 1592, 4669, 1715, 1300, 1300, 1581, 1580, 4591, 1419,
	1300, 1300, 2279, 1579, 2273, 1300, 1300, 1578, 1300, 1577,
	4652, 1524, 1478, 1300, 1477, 1476, 1475, 4636, 1474, 4638,
	1473, 1472, 1466, 4632, 1300, 4665, 1465, 1464, 1463, 1462,
	2362, 1190, 1181, 5287, 4839, 4838, 4837, 2753, 4629, 2599,
	1300, 4681, 107, 1774, 3345, 100, 4684, 4635, 2520, 4492,
	2042, 5520, 5628, 5656, 2582, 2454, 5433, 5432, 5317, 3218,
	2320, 1417, 1417, 4122, 4651, 4654, 4121, 5525, 2458, 5170,
	4660, 4659, 992, 5007, 1142, 5430, 1764, 1007, 4667, 5411,
	3975, 4706, 4666, 3429, 1917, 5194, 2696, 3857, 4683, 3149,
	5371, 4719, 4729, 3725, 4707, 5243, 4689, 5030, 2963, 4682,
	2130, 4691, 1423, 4715, 2064, 2066, 3806, 102, 1284, 1330,
	1423, 4948, 4947, 203, 1592, 1592, 4823, 1592, 4479, 4132,
	4692, 4944, 2279, 4752, 4943, 1421, 2264, 2266, 1423, 1248,
	1595, 3089, 3091, 4700, 5460, 1308, 2373, 5638, 1712, 1712,
	2382, 3198, 3959, 3039, 1307, 1304, 2268, 2270, 1306, 1305,
	2269, 2150, 1303, 2263, 4640, 4151, 2273, 3538, 4192, 1834,
	1592, 1832, 1144, 3145, 3540, 2883, 2947, 3714, 2057, 2123,
	1264, 1286, 2944, 4694, 1514, 1447, 1275, 3552, 4685, 3834,
	3813, 4179, 3082, 4399, 2793, 1017, 3760, 2950, 313, 313,
	313, 1300, 800, 801, 1436, 817, 800, 817, 829, 3862,
	3062, 870, 1423, 3055, 1423, 890, 3051, 3925, 4771, 3528,
	897, 897, 897, 897, 2004, 313, 5044, 4763, 4765, 2101,
	4760, 4787, 4788, 313, 4745, 3539, 1558, 1268, 2881, 1514,
	2114, 3692, 2803, 4186, 3860, 3191, 5441, 4320, 4870, 1592,
	3618, 1514, 2595, 1397, 1514, 1045, 1396, 1445, 1395, 2087,
	4879, 4807, 313, 4882, 5417, 1418, 4757, 4758, 4759, 4762,
	4756, 5414, 2510, 4951, 4127, 4815, 4128, 1300, 4761, 2365,
	1592, 3257, 2893, 4846, 4146, 4846, 2273, 4772, 1280, 4774,
	4849, 3595, 4790, 4791, 4792, 3596, 1700, 2742, 4252, 4818,
	3819, 4616, 1793, 5107, 2262, 1419, 1419, 4786, 4799, 4800,
	4801, 1292, 4864, 4804, 2086, 4803, 3456, 3455, 5276, 1543,
	1541, 1540, 4820, 1539, 5605, 3414, 3409, 4850, 1421, 1712,
	1712, 2529, 4488, 3231, 1300, 1300, 1421, 4917, 4487, 4486,
	274, 3659, 2023, 2015, 271, 2058, 4866, 4867, 4814, 273,
	272, 3979, 4412, 3866, 1421, 1892, 5517, 4888, 4512, 4114,
	4890, 27, 1514, 904, 4892, 4865, 905, 906, 3267, 4909,
	2392, 4965, 1560, 4463, 26, 1592, 25, 24, 23, 4869,
	1712, 130, 28, 4900, 2410, 49, 30, 4880, 29, 2411,
	5, 4983, 4878, 22, 174, 4881, 172, 149, 4932, 169,
	4883, 168, 140, 167, 166, 1712, 1712, 1712, 1712, 1712,
	1712, 1712, 165, 2089, 164, 800, 800, 163, 171, 162,
	161, 156, 160, 313, 4770, 159, 4966, 4984, 1421, 1592,
	1421, 158, 4928, 4969, 1417, 4972, 4931, 157, 155, 153,
	154, 1300, 1300, 1300, 148, 152, 4918, 151, 150, 147,
	2276, 2276, 146, 4812, 4813, 2267, 2267, 145, 1418, 1592,
	144, 4927, 143, 4926, 1300, 142, 1418, 1300, 1300, 141,
	4933, 4936, 4946, 4953, 139, 4954, 4942, 1300, 4978, 173,
	2279, 4987, 4863, 4960, 1418, 1300, 1300, 2273, 4958, 3228,
	138, 137, 219, 136, 135, 134, 133, 132, 131, 883,
	4968, 884, 4992, 68, 1592, 67, 1712, 127, 4985, 128,
	5006, 21, 2412, 47, 1460, 16, 2046, 2038, 2039, 2040,
	2041, 2043, 2044, 72, 73, 5015, 5016, 4998, 4997, 5022,
	2416, 20, 1483, 1514, 1483, 1483, 15, 42, 926, 105,
	119, 118, 117, 4906, 43, 4908, 5000, 114, 41, 19,
	5004, 18, 17, 5017, 112, 111, 110, 1592, 1418, 40,
	1418, 38, 13, 11, 44, 1300, 5027, 2213, 5009, 14,
	7, 211, 208, 207, 210, 206, 209, 5053, 1300, 5054,
	104, 5039, 205, 106, 204, 103, 5033, 1300, 36, 12,
	199, 5190, 2279, 4623, 95, 4941, 202, 201, 200, 5084,
	198, 197, 1300, 196, 193, 1300, 96, 5050, 5051, 93,
	5071, 2413, 2418, 195, 99, 98, 194, 94, 97, 1685,
	1460, 5055, 34, 1701, 926, 8, 1300, 1417, 71, 1300,
	9, 4637, 5010, 4231, 2273, 1417, 1592, 5081, 122, 5082,
	123, 45, 1712, 1300, 91, 1712, 1712, 5110, 90, 89,
	88, 33, 1514, 1417, 70, 32, 268, 266, 267, 265,
	264, 5156, 189, 244, 243, 242, 241, 240, 1419, 239,
	5080, 5083, 5089, 238, 2420, 237, 236, 231, 235, 5129,
	233, 5121, 5122, 1423, 232, 234, 230, 260, 259, 258,
	257, 256, 255, 254, 253, 247, 926, 926, 5146, 4686,
	246, 252, 2414, 251, 250, 5165, 249, 248, 245, 263,
	84, 1592, 229, 5132, 1712, 228, 227, 225, 5173, 5127,
	221, 5177, 5142, 224, 5144, 5210, 5145, 1417, 5131, 1417,
	5133, 5189, 226, 223, 5134, 222, 220, 2276, 262, 2887,
	5136, 261, 2267, 5135, 192, 85, 2273, 187, 188, 83,
	5143, 1300, 1300, 186, 4846, 2112, 2421, 185, 184, 5181,
	183, 5211, 182, 181, 180, 5196, 5168, 5167, 1300, 2279,
	82, 191, 2262, 5169, 190, 31, 5175, 2, 5193, 1,
	0, 0, 0, 0, 0, 5152, 5153, 5213, 5157, 0,
	5188, 0, 0, 5155, 1514, 1514, 1514, 0, 5184, 1514,
	1514, 1514, 2629, 1514, 1514, 5195, 0, 0, 0, 0,
	1721, 0, 0, 3937, 5207, 5212, 0, 1721, 2419, 5218,
	0, 4987, 1300, 5271, 1300, 5217, 1300, 0, 0, 0,
	0, 5219, 5215, 5221, 5232, 5233, 1423, 5224, 0, 0,
	0, 0, 0, 0, 5231, 0, 0, 0, 0, 1300,
	0, 1423, 0, 1705, 0, 2276, 0, 5269, 0, 0,
	2267, 1419, 0, 3938, 0, 0, 0, 0, 0, 1419,
	5241, 5253, 5254, 5255, 5235, 0, 5257, 5258, 5259, 0,
	5260, 5261, 0, 0, 5119, 0, 0, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 1421,
	0, 2279, 5268, 0, 5264, 5267, 0, 4846, 5298, 0,
	0, 5321, 0, 1423, 1423, 0, 0, 0, 0, 1590,
	0, 5291, 4846, 2273, 0, 0, 0, 5299, 0, 5292,
	0, 0, 0, 5345, 1423, 0, 0, 1423, 0, 0,
	0, 1712, 0, 5319, 0, 0, 4129, 0, 1438, 0,
	1848, 1712, 0, 0, 0, 0, 0, 5309, 0, 817,
	2415, 1419, 5307, 1419, 5308, 0, 1863, 1300, 1300, 0,
	0, 0, 0, 817, 0, 0, 5318, 1300, 5314, 313,
	0, 0, 0, 0, 4846, 4846, 1468, 0, 5358, 5334,
	5335, 5332, 5316, 0, 5343, 0, 0, 313, 5350, 313,
	313, 0, 1499, 313, 1508, 4846, 0, 5193, 4846, 0,
	5351, 0, 0, 5353, 4896, 1522, 5366, 0, 5362, 0,
	5363, 5359, 0, 890, 0, 0, 890, 5408, 1893, 1418,
	0, 5361, 0, 1300, 1300, 5376, 5364, 1300, 0, 5380,
	0, 1712, 1514, 0, 1514, 0, 0, 0, 0, 897,
	5375, 0, 1421, 0, 0, 2273, 5384, 5385, 5386, 5390,
	0, 2262, 0, 0, 0, 5416, 5419, 1421, 0, 0,
	5367, 0, 5368, 5398, 5399, 5440, 0, 0, 0, 0,
	5406, 313, 0, 313, 313, 313, 1499, 4956, 313, 313,
	0, 0, 5407, 0, 0, 0, 1508, 5444, 5425, 5465,
	5463, 0, 4967, 1300, 1300, 1300, 0, 0, 5421, 0,
	313, 0, 1742, 1701, 0, 0, 5420, 0, 0, 5427,
	5424, 5428, 0, 0, 5387, 5388, 4991, 0, 1762, 1421,
	1421, 5449, 0, 0, 0, 0, 5453, 1771, 5456, 0,
	0, 0, 5464, 1300, 0, 0, 0, 0, 0, 0,
	1421, 0, 0, 1421, 1795, 0, 1508, 0, 0, 5480,
	0, 313, 313, 5479, 1499, 1483, 5498, 1712, 5477, 5478,
	0, 0, 0, 0, 1701, 0, 0, 5503, 0, 0,
	5534, 5426, 1418, 0, 2420, 0, 890, 0, 313, 313,
	0, 0, 5532, 5500, 0, 0, 0, 1418, 1417, 0,
	1860, 0, 0, 5546, 1300, 5542, 0, 5501, 0, 5533,
	5516, 1868, 1514, 1514, 5527, 5524, 1045, 5566, 0, 5540,
	0, 0, 2798, 5539, 5538, 0, 0, 5555, 5173, 0,
	5514, 0, 0, 0, 0, 0, 5577, 5574, 0, 5547,
	0, 5548, 0, 5513, 0, 0, 5515, 0, 5499, 0,
	5570, 5561, 5562, 0, 1300, 5565, 0, 5568, 0, 1418,
	1418, 0, 0, 5589, 0, 0, 5591, 5593, 0, 5576,
	5416, 5578, 1423, 5419, 1423, 0, 5601, 5580, 5076, 0,
	1418, 5592, 0, 1418, 0, 0, 5585, 0, 5599, 5563,
	5564, 0, 5590, 0, 0, 5598, 0, 0, 0, 0,
	0, 313, 0, 0, 5552, 0, 5607, 5443, 0, 5597,
	0, 0, 0, 0, 1514, 0, 0, 0, 2410, 0,
	0, 0, 0, 2411, 5629, 0, 5630, 313, 0, 0,
	5622, 5623, 5631, 5634, 5636, 0, 0, 0, 3689, 3690,
	0, 0, 0, 4846, 0, 4846, 1300, 1300, 5600, 0,
	5602, 1417, 5642, 5633, 0, 1300, 1300, 0, 0, 0,
	5640, 0, 0, 5661, 2313, 5654, 1417, 5666, 5660, 5645,
	3057, 0, 0, 0, 10, 5668, 0, 203, 5665, 5659,
	5658, 5676, 5673, 5675, 5674, 5669, 5650, 6, 0, 5606,
	0, 5626, 0, 5679, 0, 0, 0, 0, 0, 5667,
	5682, 5681, 0, 5687, 1514, 5684, 0, 0, 2228, 5686,
	0, 5689, 5692, 5688, 5690, 5685, 0, 0, 0, 5697,
	5698, 5699, 0, 5695, 0, 5696, 0, 0, 1417, 1417,
	5701, 1300, 1419, 1721, 0, 0, 0, 5702, 5651, 5652,
	5704, 5692, 5708, 5705, 5653, 5707, 2412, 0, 0, 1417,
	0, 0, 1417, 0, 2584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2609, 2461, 0, 0, 1421, 0,
	1421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5703, 0, 1721, 1721, 5443, 0,
	3787, 3788, 3789, 3790, 0, 0, 0, 2471, 0, 0,
	0, 3763, 3764, 800, 3781, 3782, 3783, 0, 0, 0,
	0, 0, 2391, 0, 0, 2413, 2418, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 313, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1499, 1508, 313, 0, 313, 2238,
	0, 0, 0, 0, 0, 1419, 313, 0, 817, 0,
	0, 0, 0, 0, 0, 313, 2467, 3540, 0, 0,
	1419, 0, 0, 0, 0, 0, 2276, 5305, 0, 0,
	0, 2267, 3778, 0, 2410, 0, 0, 2327, 1418, 2411,
	1418, 0, 0, 0, 0, 0, 0, 0, 3540, 0,
	313, 0, 0, 0, 0, 0, 2414, 2276, 2276, 313,
	0, 0, 2267, 2267, 0, 0, 0, 0, 0, 0,
	3763, 3764, 0, 3781, 3782, 3783, 0, 0, 2464, 2609,
	2743, 2744, 1419, 1419, 2034, 2035, 5347, 0, 0, 5349,
	0, 890, 0, 4285, 0, 0, 0, 0, 1767, 0,
	0, 0, 0, 1419, 0, 3989, 1419, 0, 2065, 0,
	2421, 0, 0, 0, 0, 0, 2037, 0, 1721, 1721,
	1721, 1721, 0, 0, 0, 2276, 0, 2603, 0, 897,
	2267, 897, 2469, 0, 3769, 0, 0, 0, 0, 0,
	0, 897, 897, 0, 0, 2090, 2567, 0, 0, 0,
	0, 3778, 0, 0, 2036, 0, 0, 0, 0, 0,
	0, 0, 2412, 0, 0, 2056, 0, 3987, 0, 0,
	0, 0, 2419, 0, 0, 2053, 2640, 0, 0, 0,
	2416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2653, 2655, 0, 0, 2470, 0,
	0, 0, 0, 0, 0, 0, 0, 1417, 2659, 1417,
	0, 0, 0, 0, 0, 315, 0, 3988, 0, 0,
	0, 0, 0, 2671, 2672, 2673, 2674, 0, 0, 0,
	0, 5450, 0, 2474, 4710, 5451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3779, 3769, 0, 0, 0, 2059, 2060, 2061,
	2062, 2413, 2418, 0, 0, 0, 0, 2042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	313, 3347, 0, 0, 0, 0, 2462, 0, 0, 0,
	0, 0, 0, 0, 2415, 0, 0, 2472, 0, 0,
	0, 2064, 2066, 0, 0, 0, 2276, 3785, 0, 0,
	0, 2267, 0, 2087, 2468, 0, 0, 0, 0, 313,
	0, 0, 0, 3348, 0, 926, 0, 0, 0, 0,
	2051, 2052, 2414, 0, 0, 0, 0, 1460, 313, 0,
	0, 0, 0, 0, 0, 2465, 0, 0, 0, 313,
	0, 3779, 2463, 0, 0, 0, 313, 0, 0, 0,
	2473, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 313, 0, 313, 0, 0, 0, 800, 0,
	313, 2408, 0, 0, 926, 0, 2421, 0, 0, 0,
	0, 0, 890, 3649, 0, 0, 1045, 1460, 0, 3780,
	1460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1483, 3235, 0, 0, 1262, 1483, 0, 1483, 0, 2819,
	0, 1419, 0, 1419, 926, 926, 0, 0, 1499, 313,
	0, 0, 2087, 0, 0, 0, 2466, 0, 0, 0,
	0, 0, 0, 2406, 0, 890, 2087, 0, 2419, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	2693, 0, 0, 0, 0, 313, 0, 313, 0, 313,
	0, 313, 0, 313, 0, 313, 3057, 3057, 0, 0,
	0, 0, 0, 0, 0, 3763, 3764, 0, 3781, 3782,
	3783, 0, 0, 2407, 0, 0, 0, 0, 0, 0,
	2731, 0, 0, 2732, 2276, 2733, 2063, 2734, 4284, 2267,
	0, 0, 2961, 0, 0, 0, 0, 0, 3780, 0,
	0, 0, 313, 313, 313, 313, 313, 0, 0, 0,
	0, 1685, 2058, 0, 0, 0, 0, 4276, 4277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2276, 2276, 0, 870, 0, 2267, 2267, 890, 0, 0,
	0, 3775, 3776, 3777, 0, 0, 3778, 0, 3774, 3772,
	3773, 3765, 3766, 3767, 3768, 3770, 3771, 0, 0, 2276,
	2276, 0, 0, 0, 2267, 2267, 0, 0, 0, 0,
	2415, 0, 0, 0, 1701, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3159, 0, 2276, 0, 0, 0, 0, 2267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4340, 4341, 4342,
	4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352,
	4353, 4354, 4355, 4356, 4357, 4358, 4359, 0, 4363, 0,
	0, 0, 2895, 0, 0, 0, 0, 0, 3057, 3057,
	3057, 3057, 0, 0, 0, 0, 0, 0, 3769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3775, 3776, 3777, 0, 0, 0, 0, 3774, 3772, 3773,
	3765, 3766, 3767, 3768, 3770, 3771, 0, 0, 2054, 2050,
	0, 2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044,
	0, 0, 0, 0, 0, 1721, 1721, 0, 0, 0,
	0, 0, 0, 0, 800, 2276, 2276, 3083, 2276, 0,
	2267, 2267, 0, 2267, 5435, 0, 0, 0, 0, 0,
	313, 0, 3785, 0, 0, 0, 0, 0, 0, 800,
	0, 0, 0, 0, 0, 0, 313, 0, 800, 0,
	0, 2461, 0, 0, 0, 0, 0, 0, 0, 1701,
	313, 0, 0, 3266, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 3779, 0, 0, 0,
	313, 1508, 0, 0, 0, 0, 0, 313, 0, 313,
	1742, 0, 313, 2471, 0, 1721, 1721, 1721, 1721, 1721,
	1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721,
	1721, 1721, 1721, 1721, 1721, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 3413, 0, 0, 0, 0,
	1701, 0, 1701, 0, 0, 0, 0, 0, 0, 313,
	1508, 0, 313, 817, 0, 817, 0, 934, 0, 0,
	0, 0, 313, 0, 0, 313, 0, 2087, 0, 3232,
	0, 0, 2467, 0, 0, 313, 313, 0, 0, 0,
	313, 0, 313, 946, 0, 1483, 0, 1499, 0, 313,
	313, 0, 1508, 1508, 3248, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 2035, 0,
	2067, 2068, 2069, 2078, 2079, 2080, 0, 0, 947, 0,
	0, 0, 0, 0, 2464, 0, 0, 0, 0, 0,
	2071, 2065, 0, 897, 897, 2276, 0, 897, 897, 2037,
	2267, 0, 0, 3780, 0, 0, 3291, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 3566, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 3573, 2090, 5436,
	0, 0, 313, 940, 0, 0, 0, 2036, 2469, 0,
	955, 0, 0, 0, 0, 0, 313, 0, 2056, 0,
	0, 0, 0, 0, 0, 0, 945, 0, 2053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3361,
	0, 0, 0, 0, 0, 0, 0, 0, 890, 0,
	0, 0, 0, 890, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2470, 0, 0, 0, 0, 313,
	939, 3623, 0, 0, 2461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 865, 0, 3421,
	1742, 0, 0, 1262, 1262, 1262, 0, 0, 0, 2474,
	2059, 2060, 2061, 2062, 0, 0, 0, 2276, 0, 0,
	2042, 0, 2267, 0, 0, 942, 2471, 0, 0, 0,
	0, 313, 3477, 0, 0, 3775, 3776, 3777, 0, 0,
	0, 0, 3774, 3772, 3773, 3765, 3766, 3767, 3768, 3770,
	3771, 0, 1676, 0, 0, 0, 0, 0, 1255, 0,
	0, 0, 1742, 2075, 0, 313, 0, 2085, 3421, 0,
	0, 0, 0, 0, 2064, 2066, 313, 0, 0, 0,
	0, 0, 2462, 0, 0, 0, 0, 3523, 0, 954,
	0, 0, 0, 2472, 2081, 2467, 2082, 3291, 0, 800,
	0, 0, 0, 2051, 2052, 0, 0, 0, 1045, 3291,
	2468, 0, 0, 0, 0, 0, 0, 0, 0, 3348,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 2276, 2057, 0,
	0, 2465, 2267, 0, 0, 0, 0, 0, 2463, 0,
	0, 0, 313, 1499, 313, 0, 2473, 2464, 0, 0,
	0, 0, 0, 0, 3597, 313, 0, 0, 0, 1499,
	0, 1499, 936, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 0, 2083, 5437, 0,
	0, 0, 0, 0, 0, 3057, 3057, 0, 0, 0,
	0, 0, 0, 0, 0, 941, 0, 2065, 2072, 0,
	0, 2469, 0, 0, 0, 2037, 0, 0, 0, 2087,
	0, 0, 0, 0, 313, 313, 313, 313, 1499, 0,
	0, 1499, 2466, 0, 313, 0, 5438, 0, 1483, 313,
	0, 0, 1701, 1701, 2090, 0, 0, 864, 0, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	0, 2460, 0, 950, 2056, 0, 0, 0, 0, 0,
	313, 0, 938, 0, 2053, 0, 0, 2470, 313, 2063,
	0, 0, 0, 0, 0, 3057, 3057, 3057, 3057, 3057,
	3057, 3057, 3057, 3057, 3057, 3057, 3057, 3057, 3057, 3057,
	3057, 3057, 3057, 3057, 3057, 2058, 3057, 0, 0, 0,
	2457, 0, 2474, 0, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 0, 935, 0, 0, 0, 0,
	0, 948, 0, 4279, 0, 0, 0, 2076, 2276, 0,
	0, 0, 0, 2267, 0, 2609, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 943, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 866, 2455, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 937, 0, 2462, 0, 0, 0, 0,
	0, 3820, 0, 0, 0, 0, 2472, 0, 0, 0,
	0, 0, 0, 3447, 0, 0, 1742, 0, 0, 0,
	0, 952, 953, 2468, 949, 0, 0, 0, 0, 0,
	2064, 2066, 2456, 86, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3437, 3435,
	0, 0, 87, 0, 2465, 3849, 3439, 3441, 3431, 2051,
	2052, 2463, 0, 0, 0, 2074, 0, 0, 0, 2473,
	92, 0, 0, 3865, 0, 0, 0, 2048, 2049, 2055,
	2077, 2054, 2050, 0, 2047, 2045, 2046, 2038, 2039, 2040,
	2041, 2043, 2044, 0, 2057, 2276, 0, 0, 3738, 0,
	2267, 3457, 3739, 0, 0, 0, 0, 3892, 0, 0,
	0, 0, 0, 101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 0, 5036, 0,
	0, 0, 0, 0, 0, 2466, 0, 0, 2034, 2035,
	0, 1676, 0, 0, 0, 0, 1039, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 56,
	0, 124, 2065, 0, 0, 2087, 0, 108, 121, 0,
	2037, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 800, 0, 2276, 0, 2090,
	800, 0, 2267, 800, 0, 0, 800, 800, 2036, 0,
	0, 0, 800, 0, 0, 800, 5092, 0, 0, 2056,
	0, 0, 0, 313, 0, 2063, 0, 0, 0, 2053,
	1701, 0, 0, 109, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 3433, 0, 313, 0, 0, 1742,
	0, 2058, 0, 0, 0, 3449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1262, 0, 0,
	0, 0, 0, 0, 0, 1676, 0, 0, 817, 3448,
	3438, 3436, 3440, 3442, 3432, 3434, 3450, 3452, 4274, 0,
	0, 0, 0, 0, 0, 0, 0, 3444, 3446, 3454,
	0, 0, 0, 313, 0, 0, 1721, 313, 313, 0,
	0, 2059, 2060, 2061, 2062, 4118, 4119, 0, 0, 2089,
	0, 2042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3458, 0, 0, 0, 0, 0,
	0, 3291, 3291, 313, 0, 3945, 3948, 0, 0, 0,
	0, 0, 3291, 0, 2238, 0, 0, 3763, 3764, 0,
	3781, 3782, 3783, 3291, 2238, 0, 3291, 2238, 0, 0,
	2238, 0, 0, 3945, 2276, 2064, 2066, 0, 4198, 2267,
	0, 3865, 0, 0, 0, 313, 313, 3948, 0, 313,
	4224, 0, 0, 113, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2051, 2052, 0, 0, 3948, 0,
	313, 0, 0, 0, 0, 4018, 3948, 2054, 2050, 5240,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 4029,
	0, 4029, 0, 0, 0, 0, 0, 0, 3778, 2057,
	0, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 116, 0, 0, 120, 0, 1676,
	3451, 0, 0, 0, 0, 3291, 0, 3291, 0, 4065,
	3291, 3948, 0, 0, 3291, 5275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 3948, 0, 0, 890, 0, 0, 1040, 0, 0,
	5297, 0, 0, 170, 0, 0, 2276, 0, 0, 0,
	0, 2267, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 1499, 0, 4253, 0,
	0, 1590, 0, 313, 0, 3459, 0, 0, 0, 0,
	3769, 0, 0, 277, 0, 3443, 3445, 0, 0, 3453,
	0, 313, 0, 0, 4120, 0, 0, 4125, 3291, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 313, 0, 3786, 218, 0,
	3523, 0, 0, 1499, 0, 313, 276, 1721, 3291, 0,
	800, 0, 0, 0, 0, 0, 2058, 3291, 0, 0,
	4297, 0, 0, 0, 3785, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 4313, 213, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 2034, 2035, 0, 2067, 2068, 2069, 2078, 2079, 2080,
	0, 0, 0, 1721, 216, 0, 0, 4240, 3779, 0,
	0, 926, 0, 0, 2071, 2065, 0, 0, 0, 0,
	0, 0, 0, 2037, 2089, 0, 0, 0, 1721, 0,
	4247, 0, 4248, 0, 2084, 1742, 0, 0, 0, 0,
	0, 0, 1499, 313, 0, 313, 0, 0, 0, 0,
	0, 1499, 2090, 0, 1499, 0, 0, 0, 0, 0,
	0, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 0, 0, 0, 3763, 3764, 0, 3781,
	3782, 3783, 2053, 313, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 0, 1676, 0, 0, 0, 0, 0, 2609, 0,
	0, 0, 0, 0, 0, 0, 0, 4410, 0, 0,
	0, 0, 2054, 2050, 0, 2047, 2045, 2046, 2038, 2039,
	2040, 2041, 2043, 2044, 0, 0, 0, 0, 0, 0,
	0, 0, 4318, 0, 0, 0, 0, 0, 0, 2034,
	2035, 0, 0, 0, 0, 0, 0, 3778, 0, 0,
	0, 0, 0, 0, 2059, 2060, 2061, 2062, 0, 0,
	0, 0, 0, 2065, 2042, 3780, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1676, 2191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 3057, 2075, 0, 2036,
	0, 2085, 0, 0, 0, 0, 4376, 0, 2064, 2066,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 313, 0, 0, 0, 0, 0, 2081, 0,
	2082, 0, 0, 4562, 0, 0, 2070, 2051, 2052, 3769,
	0, 0, 0, 0, 4575, 4576, 800, 1676, 0, 4401,
	800, 0, 0, 0, 4578, 0, 0, 2073, 800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 1676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 2059, 2060, 2061, 2062, 0, 0, 0, 0,
	0, 0, 2042, 3785, 0, 0, 0, 3775, 3776, 3777,
	0, 2083, 0, 0, 3774, 3772, 3773, 3765, 3766, 3767,
	3768, 3770, 3771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 2034, 2035, 4664, 3779, 0, 0,
	0, 2653, 4670, 4671, 0, 0, 2064, 2066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 926, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 890, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 0, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 0, 4529, 0, 0, 4531,
	2057, 0, 4534, 0, 0, 2056, 1676, 0, 2087, 2058,
	4029, 0, 86, 0, 0, 2053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2609, 313, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 92,
	3421, 0, 0, 0, 0, 0, 0, 3057, 0, 0,
	926, 0, 0, 0, 0, 3948, 0, 313, 0, 0,
	0, 817, 817, 1508, 4273, 0, 2070, 2089, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 0, 3780, 0, 0, 2059, 2060, 2061,
	2062, 313, 3523, 0, 0, 3523, 2238, 2042, 0, 0,
	0, 313, 0, 3057, 0, 0, 0, 0, 4628, 0,
	3421, 0, 0, 313, 0, 0, 0, 313, 0, 313,
	1676, 0, 0, 0, 313, 1039, 0, 0, 3057, 0,
	0, 2063, 0, 0, 0, 0, 4776, 4777, 0, 0,
	124, 0, 0, 3291, 313, 0, 108, 121, 0, 2074,
	0, 2064, 2066, 0, 0, 1045, 3291, 2058, 0, 0,
	0, 2048, 2049, 2055, 2077, 2054, 2050, 0, 2047, 2045,
	2046, 2038, 2039, 2040, 2041, 2043, 2044, 0, 0, 0,
	2051, 2052, 2938, 0, 0, 0, 2939, 0, 0, 4767,
	313, 0, 0, 0, 3948, 0, 0, 3248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 4797, 0, 0, 0, 0, 0, 0, 0,
	2070, 0, 0, 0, 0, 0, 3775, 3776, 3777, 0,
	0, 0, 0, 3774, 3772, 3773, 3765, 3766, 3767, 3768,
	3770, 3771, 0, 0, 0, 0, 2070, 0, 0, 0,
	0, 0, 0, 4730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 0, 0, 2087, 0, 0, 2070,
	0, 0, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2653, 0, 0,
	0, 0, 0, 0, 0, 0, 2047, 2045, 2046, 2038,
	2039, 2040, 2041, 2043, 2044, 0, 0, 313, 0, 0,
	0, 0, 0, 1742, 0, 313, 0, 0, 0, 0,
	0, 3188, 0, 0, 0, 0, 2063, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 1508, 1508, 1508, 0,
	0, 0, 0, 4999, 0, 5001, 5002, 5003, 0, 5005,
	2070, 0, 1508, 1508, 1508, 2070, 313, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	1262, 0, 3291, 3291, 2070, 3945, 0, 0, 4029, 3291,
	0, 212, 0, 116, 0, 0, 120, 4848, 0, 4848,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 3291, 0, 2238, 0, 0, 0, 3945, 0, 1742,
	1742, 313, 3948, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 3948, 1040, 313, 3948, 0,
	313, 4884, 170, 0, 0, 0, 4029, 0, 0, 4029,
	0, 1590, 2070, 4029, 5056, 0, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 3291, 0, 3291, 313, 0, 0, 0, 0,
	0, 5028, 277, 0, 0, 0, 0, 3421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2054, 2050,
	175, 2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044,
	0, 0, 0, 0, 3291, 3291, 5028, 218, 0, 0,
	3523, 3523, 0, 0, 0, 276, 0, 3945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 269, 0, 0, 1517, 0, 0,
	0, 313, 0, 270, 0, 0, 0, 213, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 2819,
	0, 0, 0, 0, 1247, 1247, 1247, 0, 0, 0,
	5148, 0, 0, 216, 0, 0, 0, 0, 926, 0,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 850,
	2070, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 2070, 0, 0, 0, 0, 1691, 0,
	834, 0, 0, 0, 1717, 835, 2071, 2065, 0, 0,
	0, 0, 0, 0, 1676, 2037, 0, 0, 2819, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 1744, 0, 1750, 0, 1756, 0, 3061,
	0, 0, 0, 0, 2090, 4401, 0, 0, 836, 0,
	0, 0, 0, 2036, 2070, 0, 0, 0, 0, 837,
	2070, 0, 0, 0, 2056, 0, 0, 0, 1676, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 838, 0, 0, 0, 1676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3291, 2238, 0,
	2238, 0, 0, 4628, 0, 856, 0, 1851, 0, 1856,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	1676, 0, 5108, 1870, 5108, 1875, 0, 0, 839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 890,
	0, 0, 0, 840, 832, 0, 2059, 2060, 2061, 2062,
	0, 0, 4029, 1742, 0, 0, 2042, 1742, 0, 1499,
	0, 0, 0, 0, 0, 0, 0, 841, 0, 1262,
	0, 0, 833, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 0, 0, 0, 0, 3948, 1943, 313, 865,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 4628, 0, 855, 4848, 0,
	0, 1742, 0, 0, 0, 3291, 0, 0, 0, 313,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 5204, 0, 0, 0, 0, 0, 2653,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 1285,
	126, 852, 0, 0, 313, 313, 3032, 3033, 3034, 3035,
	3028, 3029, 3030, 3031, 0, 0, 0, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 0, 0, 0, 4318, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	2111, 0, 0, 0, 0, 0, 2124, 0, 0, 0,
	0, 0, 0, 4029, 5266, 0, 0, 0, 0, 0,
	0, 4628, 0, 0, 0, 2087, 0, 0, 862, 0,
	843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4848, 0, 0, 0, 0, 3008, 3009, 3010, 3011,
	0, 0, 0, 0, 0, 0, 4848, 0, 126, 0,
	0, 863, 0, 844, 1676, 0, 0, 0, 0, 0,
	3020, 3021, 3022, 3023, 3016, 3017, 3018, 3019, 3024, 3025,
	3026, 3027, 0, 313, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 817, 0, 0, 0, 0, 0, 0, 864,
	0, 2058, 2185, 2185, 2185, 0, 0, 845, 4848, 4848,
	0, 1413, 860, 861, 0, 858, 0, 0, 0, 0,
	0, 0, 0, 0, 853, 0, 0, 846, 0, 4848,
	0, 313, 4848, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 2238, 1218, 3004, 3005, 3006, 3007, 3012, 3013,
	3014, 3015, 0, 1742, 0, 1742, 1240, 0, 0, 0,
	0, 0, 0, 0, 308, 308, 796, 0, 0, 2089,
	0, 0, 0, 0, 0, 847, 0, 854, 0, 0,
	0, 0, 0, 0, 0, 0, 848, 0, 1508, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1676, 849, 5396, 1676, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 5108,
	0, 0, 313, 866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 851, 0, 2070, 0, 0,
	0, 0, 0, 0, 0, 0, 3291, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2070,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0,
	313, 0, 0, 1676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 4318, 0, 0, 0, 0, 0,
	0, 2070, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 0, 0, 0, 0,
	0, 2070, 0, 2070, 2070, 2070, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 3061, 3061, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4628,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 2035, 0, 0, 0, 0, 2078, 2079,
	2080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 3291, 0, 0,
	0, 2070, 0, 0, 0, 2084, 0, 4848, 0, 4848,
	0, 0, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	0, 2070, 2036, 0, 2070, 0, 0, 2070, 0, 0,
	2070, 0, 0, 2056, 0, 0, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3291, 0, 0,
	0, 0, 2070, 0, 0, 3784, 0, 3061, 3061, 3061,
	3061, 3421, 0, 2070, 0, 2070, 0, 0, 0, 0,
	2070, 0, 0, 0, 0, 2059, 2060, 2061, 2062, 0,
	0, 0, 0, 0, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 2718,
	0, 0, 2085, 0, 0, 0, 0, 0, 0, 2064,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2051, 2052,
	2750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2057, 0, 0, 0, 2792, 0, 2796,
	0, 0, 0, 0, 0, 0, 2810, 0, 0, 1247,
	0, 0, 0, 0, 0, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 0, 2862, 0, 2864, 2865, 2866, 2867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 2087, 0, 0, 0, 0, 0,
	2891, 0, 0, 1676, 0, 0, 0, 0, 0, 0,
	0, 0, 2111, 0, 0, 0, 2942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2972, 2975, 2978, 2981, 1676, 0, 2987, 2988,
	2989, 2990, 2991, 2992, 2993, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3053, 0, 3064, 3066,
	3071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 126,
	0, 126, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	1676, 0, 1676, 0, 1240, 126, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 126, 0, 0, 0, 0, 0, 2070,
	2070, 0, 2070, 0, 0, 0, 0, 126, 0, 126,
	0, 0, 0, 0, 0, 1676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 1262, 1587, 0, 0,
	0, 0, 0, 0, 1699, 2077, 2054, 2050, 0, 2047,
	2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	2034, 2035, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1676, 0, 2070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 0, 0, 0, 0, 0, 0, 0, 0,
	2036, 0, 0, 0, 1849, 1850, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1218, 0, 0, 0, 0, 0, 0, 0,
	0, 2070, 2070, 0, 3061, 3061, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 3784, 3784,
	0, 0, 2070, 2070, 0, 0, 0, 0, 0, 0,
	1676, 0, 2070, 2110, 0, 0, 0, 2116, 0, 0,
	3678, 0, 0, 0, 0, 0, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 0, 2059, 2060, 2061, 2062, 0, 0, 0,
	0, 0, 0, 2042, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 3480, 3481, 0,
	3483, 0, 0, 0, 3061, 3061, 3061, 3061, 3061, 3061,
	3061, 3061, 3061, 3061, 3061, 3061, 3061, 3061, 3061, 3061,
	3061, 3061, 3061, 3061, 1676, 3061, 3784, 3784, 3784, 3784,
	0, 0, 0, 0, 0, 0, 0, 2064, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 0, 0, 2051, 2052, 2205, 1676,
	2208, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 2034,
	2035, 0, 2067, 2068, 2069, 2078, 2079, 2080, 0, 0,
	0, 1676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2071, 2065, 0, 0, 0, 2070, 0, 0,
	0, 2037, 0, 0, 0, 0, 2091, 2092, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 2063, 0, 0, 0, 2223, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 2036,
	0, 0, 2233, 0, 1699, 0, 0, 0, 2058, 0,
	2056, 0, 0, 0, 0, 0, 1676, 0, 0, 0,
	2053, 0, 0, 0, 3672, 3673, 2070, 2070, 0, 0,
	3679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3693,
	3694, 0, 0, 0, 0, 2942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3703, 0, 2059, 2060, 2061, 2062, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 3717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 0, 2085,
	0, 0, 0, 0, 0, 0, 2064, 2066, 0, 0,
	0, 0, 0, 0, 2054, 2050, 0, 2047, 2045, 2046,
	2038, 2039, 2040, 2041, 2043, 2044, 2081, 0, 2082, 0,
	0, 0, 0, 0, 0, 2051, 2052, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 3071, 3071, 3071, 0, 0, 0,
	0, 0, 0, 1240, 0, 1240, 0, 0, 0, 0,
	2070, 2070, 0, 2185, 2070, 3784, 3784, 2070, 0, 0,
	0, 2070, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2083,
	0, 2070, 3824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 2070, 2070, 2070, 2070, 2070, 0,
	0, 2087, 0, 0, 2070, 0, 2070, 0, 0, 3784,
	3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784,
	3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784, 1262,
	0, 126, 3784, 0, 0, 2070, 2070, 0, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 0, 0, 2593, 0, 0, 2070, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 2628, 0,
	2628, 0, 0, 312, 312, 312, 2635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1247, 0, 0, 0, 1218, 0, 0, 1218, 1218, 2076,
	312, 0, 1247, 0, 0, 0, 0, 0, 968, 0,
	0, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2663, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 2089, 0, 968, 0, 0,
	0, 0, 0, 3978, 0, 0, 0, 0, 2685, 0,
	0, 0, 0, 0, 0, 2880, 0, 0, 0, 0,
	2070, 0, 0, 2702, 0, 2704, 0, 2706, 0, 2708,
	0, 2709, 0, 0, 0, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2110, 0, 0, 0, 2110,
	0, 0, 2070, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 2739, 2740,
	0, 0, 0, 4047, 4048, 0, 2034, 2035, 0, 2048,
	2049, 2055, 2077, 2054, 2050, 0, 2047, 2045, 2046, 2038,
	2039, 2040, 2041, 2043, 2044, 0, 0, 0, 0, 0,
	2065, 0, 0, 0, 4736, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2208, 0, 0, 0, 0, 0, 0, 2090, 0, 0,
	0, 0, 0, 0, 0, 0, 2036, 0, 1420, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 0,
	2070, 0, 0, 0, 0, 0, 0, 2053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2070, 2070, 0,
	0, 0, 2070, 2070, 0, 0, 2070, 2070, 0, 0,
	0, 2070, 0, 0, 0, 2070, 3671, 0, 0, 0,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3061, 0, 0, 0, 2059,
	2060, 2061, 2062, 0, 0, 0, 0, 0, 0, 2042,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 2066, 0, 3156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3061, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 2052, 0, 0, 0, 0, 0, 0,
	2810, 0, 0, 0, 0, 0, 0, 4271, 4272, 0,
	0, 4275, 0, 0, 0, 4278, 0, 0, 0, 0,
	0, 0, 0, 0, 4282, 0, 0, 2057, 0, 0,
	0, 0, 0, 4289, 0, 0, 0, 0, 3824, 0,
	0, 0, 0, 0, 0, 0, 2070, 0, 1424, 0,
	0, 0, 0, 4302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4325, 4326, 0, 4327, 4328, 4329, 0,
	0, 0, 0, 0, 0, 0, 2070, 2070, 0, 0,
	0, 0, 0, 0, 4335, 2616, 0, 0, 4337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4366, 4367, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 126, 0, 126, 0, 0, 0, 0, 0,
	0, 4379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4388, 0, 2063, 0,
	0, 0, 2070, 2070, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 2070, 3784, 3061, 0, 0, 0,
	0, 0, 2070, 0, 2058, 2070, 0, 126, 0, 0,
	126, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 2034, 2035, 0, 2067, 2068, 2069, 2078, 2079, 2080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2071, 2065, 0, 0, 0, 0,
	0, 3784, 3061, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 1699, 0, 0, 2070, 0,
	0, 0, 2089, 0, 0, 0, 2070, 3061, 0, 4462,
	0, 0, 2090, 0, 2070, 0, 0, 0, 0, 0,
	0, 2036, 0, 0, 0, 126, 2070, 0, 2070, 0,
	0, 0, 2056, 0, 0, 0, 0, 4480, 2070, 0,
	0, 0, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2616, 0, 312, 0, 0, 0, 0, 0,
	2054, 2050, 0, 2047, 2045, 2046, 2038, 2039, 2040, 2041,
	2043, 2044, 312, 0, 312, 312, 0, 0, 312, 0,
	0, 0, 4543, 4544, 2059, 2060, 2061, 2062, 0, 3784,
	0, 0, 0, 0, 2042, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 3784, 0, 0, 2070, 3584, 0,
	3587, 2880, 0, 0, 0, 0, 0, 2075, 0, 0,
	0, 2085, 0, 0, 0, 0, 3784, 0, 2064, 2066,
	0, 0, 2110, 0, 0, 0, 312, 0, 312, 312,
	312, 0, 0, 312, 312, 0, 0, 0, 2081, 0,
	2082, 0, 0, 0, 0, 0, 0, 2051, 2052, 0,
	0, 0, 0, 0, 0, 968, 0, 0, 0, 0,
	2185, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	3630, 1699, 3632, 1699, 0, 0, 0, 0, 0, 0,
	3639, 0, 2057, 0, 0, 0, 0, 2185, 0, 0,
	0, 0, 0, 0, 0, 0, 4661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3668, 0, 0, 0, 0, 0,
	0, 2083, 0, 312, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4708, 4709, 0, 0, 0, 0, 4713, 4714, 0, 0,
	0, 4717, 4718, 0, 0, 2070, 0, 0, 0, 4722,
	0, 0, 0, 0, 0, 3090, 0, 0, 0, 0,
	4726, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078, 2079,
	2080, 2070, 0, 2063, 0, 0, 4731, 1407, 0, 0,
	0, 0, 0, 0, 0, 2071, 2065, 0, 0, 0,
	3088, 0, 0, 0, 2037, 3092, 312, 0, 0, 2058,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 3093, 0, 0,
	0, 0, 312, 2090, 0, 0, 0, 1424, 0, 0,
	0, 2076, 2036, 0, 0, 1424, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2053, 0, 0, 0, 2070, 0, 3094,
	0, 0, 0, 0, 0, 0, 0, 2089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1424,
	0, 0, 0, 0, 0, 0, 0, 0, 3095, 0,
	0, 0, 0, 0, 0, 3096, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1424, 0, 1247, 3097, 0,
	0, 0, 1424, 0, 0, 2059, 2060, 2061, 2062, 0,
	0, 0, 0, 0, 0, 2042, 0, 0, 1424, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 2049, 2055, 2077, 2054, 2050, 0, 2047, 2045,
	2046, 2038, 2039, 2040, 2041, 2043, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4287, 0, 2075, 0,
	3098, 0, 2085, 0, 0, 0, 0, 0, 0, 2064,
	2066, 126, 126, 4897, 126, 0, 0, 0, 3099, 0,
	1424, 0, 0, 0, 0, 0, 0, 0, 3100, 2081,
	0, 2082, 0, 0, 0, 0, 0, 0, 2051, 2052,
	0, 3875, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 0, 0, 3101, 0, 0, 0, 2073, 2207,
	0, 1420, 0, 0, 0, 312, 0, 0, 87, 0,
	4937, 4938, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 312, 2207, 312, 0, 0, 92, 0, 0, 126,
	126, 968, 126, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 1699, 0, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 0, 101,
	0, 0, 0, 0, 0, 312, 0, 86, 0, 0,
	0, 0, 0, 2072, 312, 0, 0, 0, 0, 3941,
	0, 0, 0, 0, 2087, 3102, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1039, 0, 92, 0, 0, 5023, 5024, 5025,
	0, 0, 0, 0, 0, 56, 0, 124, 0, 0,
	0, 3997, 3999, 108, 121, 2616, 0, 0, 0, 0,
	2810, 0, 0, 5034, 5035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 101, 0, 0,
	0, 5043, 5046, 0, 0, 0, 0, 3103, 3104, 1407,
	0, 0, 1240, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 126, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 3105, 0, 0, 109,
	1039, 0, 0, 0, 0, 0, 3110, 0, 0, 0,
	0, 0, 2076, 56, 0, 124, 0, 0, 0, 0,
	0, 108, 121, 2034, 2035, 0, 0, 3106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3107, 0, 0, 0, 0, 2065, 2089, 1424,
	0, 1424, 0, 0, 5109, 2037, 0, 0, 0, 0,
	0, 0, 0, 5117, 0, 0, 1424, 0, 0, 0,
	0, 0, 0, 0, 3108, 0, 0, 0, 5125, 0,
	0, 1247, 0, 0, 2090, 0, 0, 109, 0, 2280,
	0, 0, 0, 2036, 0, 0, 1424, 0, 0, 0,
	0, 0, 5137, 0, 2056, 5139, 0, 4147, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 3109, 5149,
	0, 312, 0, 0, 0, 968, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0, 2047,
	2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0, 113,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 2059, 2060, 2061, 2062,
	1424, 312, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 212, 312,
	116, 0, 0, 120, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4255,
	0, 1699, 0, 0, 0, 126, 0, 113, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	2064, 2066, 0, 1040, 0, 1407, 1407, 0, 0, 170,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 4269,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 0, 312, 5274, 0,
	0, 0, 5278, 0, 87, 0, 212, 0, 116, 277,
	968, 120, 312, 0, 312, 0, 312, 0, 312, 0,
	312, 0, 92, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 1040, 0, 0, 218, 0, 0, 170, 0, 0,
	0, 0, 276, 0, 0, 101, 0, 312, 312, 312,
	312, 312, 0, 1424, 1424, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 1424, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 213, 0, 0, 277, 0, 217,
	0, 0, 0, 0, 0, 2087, 0, 0, 1039, 0,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 124, 0, 175, 0, 0, 0, 108,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 1424,
	0, 0, 218, 0, 2810, 0, 0, 0, 0, 0,
	276, 0, 0, 5046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 213, 0, 1424, 0, 1424, 217, 1424, 0,
	0, 2058, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1424, 1424, 1843, 0,
	1247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1424, 0, 0, 1424, 1424, 1424, 1424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5476,
	5476, 5476, 0, 0, 0, 1420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 5502,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 968, 0, 968, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 113, 0, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0,
	126, 0, 0, 0, 0, 2280, 2280, 1424, 0, 0,
	5476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	312, 0, 0, 2616, 212, 0, 116, 0, 0, 120,
	312, 312, 0, 0, 0, 312, 0, 312, 0, 0,
	5588, 0, 0, 0, 312, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 4612, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 4622, 0, 1040,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	1424, 0, 0, 2616, 0, 2616, 0, 0, 0, 0,
	4643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 53, 52, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 312, 126, 0, 0, 0, 87, 0,
	0, 1407, 5476, 5646, 0, 0, 0, 312, 0, 1407,
	0, 0, 0, 175, 0, 1424, 92, 0, 0, 0,
	0, 312, 1424, 0, 0, 0, 4688, 74, 0, 0,
	218, 1424, 0, 0, 55, 0, 177, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 850, 1424, 0,
	0, 0, 0, 0, 0, 0, 54, 269, 0, 101,
	0, 0, 0, 0, 0, 0, 270, 0, 834, 0,
	213, 0, 0, 835, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 57, 75, 0,
	0, 0, 0, 0, 0, 0, 216, 58, 0, 0,
	0, 0, 64, 0, 0, 0, 0, 5657, 0, 0,
	0, 0, 0, 0, 0, 56, 836, 124, 0, 0,
	0, 0, 0, 108, 121, 0, 0, 837, 0, 0,
	0, 0, 76, 0, 2034, 2035, 968, 2067, 2068, 2069,
	2078, 2079, 2080, 0, 0, 0, 0, 0, 0, 0,
	838, 0, 0, 0, 0, 0, 0, 2071, 2065, 0,
	0, 0, 0, 0, 0, 126, 2037, 0, 59, 0,
	312, 0, 0, 856, 0, 0, 0, 2084, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 2090, 839, 0, 0, 0,
	0, 0, 0, 0, 2036, 0, 0, 0, 0, 0,
	0, 1424, 0, 0, 0, 2056, 0, 0, 0, 0,
	0, 840, 832, 0, 0, 2053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 126, 0,
	0, 0, 0, 0, 0, 841, 0, 0, 0, 0,
	833, 0, 0, 126, 0, 0, 0, 312, 0, 312,
	2280, 0, 0, 0, 0, 0, 0, 865, 0, 0,
	312, 77, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 855, 0, 4868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 2060, 2061,
	2062, 0, 0, 2616, 0, 0, 0, 2042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	312, 312, 312, 0, 0, 1424, 0, 0, 0, 312,
	0, 0, 0, 0, 312, 0, 0, 1424, 0, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 852,
	2075, 0, 0, 0, 2085, 0, 0, 60, 0, 0,
	0, 2064, 2066, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 312, 63, 0, 0, 0, 0, 66,
	0, 2081, 0, 2082, 0, 0, 0, 0, 0, 78,
	2051, 2052, 0, 0, 0, 0, 0, 65, 212, 0,
	116, 0, 0, 120, 0, 5523, 0, 0, 0, 61,
	2073, 0, 0, 178, 0, 0, 2616, 0, 0, 126,
	0, 62, 0, 0, 0, 2057, 0, 4979, 843, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 0, 0, 1424, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 863,
	1424, 844, 1424, 0, 0, 0, 176, 0, 1424, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 1424,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 864, 0, 0,
	0, 0, 0, 0, 0, 845, 0, 175, 0, 0,
	860, 861, 0, 858, 0, 0, 0, 79, 0, 0,
	0, 0, 853, 0, 218, 846, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 1424, 0, 0, 2063, 0, 0, 0,
	270, 0, 0, 0, 213, 0, 0, 0, 0, 217,
	0, 0, 0, 847, 0, 854, 0, 0, 0, 0,
	0, 0, 2058, 0, 848, 0, 0, 0, 0, 0,
	216, 0, 0, 2880, 0, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 857, 0, 0, 5094, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 851, 0, 0, 0, 0, 1420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 968, 2074, 0, 0, 2628, 0, 0, 126, 0,
	0, 0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050,
	0, 2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	5230, 1699, 312, 312, 0, 0, 0, 126, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 2034,
	2035, 0, 2067, 2068, 2069, 2078, 2079, 2080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2071, 2065, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 312, 2084, 0, 312, 1309, 0, 0, 0, 0,
	0, 2207, 0, 0, 0, 0, 0, 0, 1424, 1424,
	2090, 0, 0, 0, 0, 312, 0, 0, 0, 2036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2053, 0, 0, 0, 0, 1424, 0, 0, 314, 314,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 1424, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 1424, 0,
	0, 1424, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2280, 314, 0, 0, 1424, 0, 0, 0, 0,
	0, 0, 2059, 2060, 2061, 2062, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 2280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 0, 2085,
	0, 0, 0, 0, 0, 0, 2064, 2066, 5410, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1420, 0, 0, 0, 0, 0, 2081, 0, 2082, 0,
	2280, 0, 0, 0, 0, 2051, 2052, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5458, 0, 0, 0,
	2057, 2034, 2035, 0, 2067, 2068, 2069, 2078, 2079, 2080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 2071, 2065, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 312, 2083,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 0, 1424, 0, 0, 0, 0,
	2072, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 2056, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 2053, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 2063, 0, 1424, 0, 1424, 0, 0, 0, 1424,
	0, 0, 0, 0, 0, 0, 0, 1424, 1424, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 2059, 2060, 2061, 2062, 0, 0,
	0, 0, 0, 0, 2042, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 0, 0, 0, 0, 0, 0, 2075, 0, 0,
	0, 2085, 1424, 0, 1424, 2089, 0, 0, 2064, 2066,
	0, 0, 0, 0, 0, 0, 1420, 1420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 0,
	2082, 0, 0, 0, 0, 0, 0, 2051, 2052, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 1424, 0, 0, 1424,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 0, 2048,
	2049, 2055, 2077, 2054, 2050, 0, 2047, 2045, 2046, 2038,
	2039, 2040, 2041, 2043, 2044, 0, 0, 0, 0, 0,
	0, 2083, 0, 0, 3740, 0, 0, 0, 0, 2280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 1424, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2280, 2280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2280, 2280, 0, 0, 0, 0,
	0, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2280, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1424, 1424, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1424, 0, 2089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 314,
	0, 2280, 312, 2280, 312, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 314,
	314, 0, 0, 314, 0, 0, 0, 0, 0, 1420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 2049, 2055, 2077, 2054, 2050, 0, 2047, 2045,
	2046, 2038, 2039, 2040, 2041, 2043, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 3737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 1596, 314, 314, 314, 0, 0, 314, 314,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1596, 993, 0, 0, 0, 0,
	994, 0, 0, 0, 0, 1424, 1424, 0, 0, 0,
	0, 0, 0, 1424, 0, 0, 1424, 1424, 0, 0,
	0, 314, 314, 0, 0, 0, 1424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 995, 0, 1009, 0, 1596, 314, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2280, 0, 1420, 1596, 0, 0, 0, 0, 0, 0,
	1420, 0, 996, 0, 0, 0, 0, 997, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1018, 0, 0, 0, 0, 1424, 0, 998, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1424,
	0, 0, 0, 1016, 0, 1596, 0, 0, 1424, 0,
	0, 312, 0, 1424, 1424, 1424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 991, 989,
	0, 0, 0, 0, 0, 0, 0, 0, 1424, 0,
	1424, 314, 2207, 0, 2207, 0, 1424, 0, 1424, 0,
	0, 0, 999, 0, 0, 0, 0, 0, 0, 0,
	0, 1301, 0, 0, 0, 0, 312, 314, 0, 1020,
	0, 0, 0, 0, 865, 0, 0, 0, 0, 0,
	0, 1424, 312, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 2280, 0, 0, 0, 1593, 0, 0, 0,
	0, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 0,
	0, 0, 0, 0, 0, 0, 1019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1424, 0, 1713, 312, 0, 0, 0, 0,
	1424, 1713, 0, 0, 1424, 1424, 312, 1424, 0, 0,
	0, 0, 2280, 0, 0, 0, 0, 1713, 1424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1424, 1424,
	0, 0, 0, 0, 1013, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1000, 0, 0, 0, 0,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1001, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1424, 0, 1424, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 314, 314, 314, 0,
	0, 0, 0, 0, 864, 0, 314, 0, 0, 1424,
	0, 0, 0, 0, 0, 314, 0, 988, 0, 0,
	1010, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 0,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 1008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	1003, 0, 0, 0, 1004, 1023, 0, 1022, 0, 1424,
	1424, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1006, 0, 0,
	0, 0, 1015, 0, 0, 0, 0, 0, 1024, 0,
	0, 1021, 0, 0, 0, 1596, 0, 0, 866, 0,
	0, 0, 0, 0, 0, 1424, 0, 0, 0, 0,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1424,
	0, 0, 0, 2207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	312, 0, 0, 0, 1424, 1593, 1424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2248, 0, 0, 0, 0, 0, 0, 0, 0, 2248,
	0, 0, 0, 0, 0, 1713, 314, 0, 1596, 1596,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	0, 0, 0, 0, 0, 0, 0, 1424, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 2207, 0, 0, 0,
	0, 0, 2280, 0, 0, 0, 0, 0, 314, 0,
	0, 2207, 0, 0, 1596, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 314, 0, 314, 0, 1424, 0, 0, 1593,
	314, 0, 1424, 0, 0, 1424, 1424, 0, 0, 1596,
	0, 1596, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2207, 2207, 0, 0, 0, 0, 0,
	0, 1596, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1424, 2207, 1596, 312, 2207, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	1596, 1596, 1596, 1596, 0, 0, 0, 0, 0, 0,
	0, 1424, 314, 0, 1424, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 314, 0, 314,
	0, 314, 0, 314, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 53, 52, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2280,
	0, 0, 87, 0, 0, 0, 80, 312, 0, 0,
	0, 0, 314, 314, 314, 314, 314, 0, 0, 0,
	92, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 55, 0,
	177, 0, 1713, 1713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 101, 0, 312, 1424, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 1713,
	0, 1424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 58, 0, 0, 0, 0, 64, 0, 1713, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 56,
	0, 124, 0, 0, 0, 0, 0, 108, 121, 0,
	0, 2280, 0, 0, 0, 0, 76, 0, 0, 0,
	0, 0, 0, 1424, 1424, 0, 0, 0, 1594, 0,
	0, 0, 0, 1713, 0, 1713, 1714, 1713, 0, 0,
	0, 0, 0, 0, 1424, 1596, 0, 1424, 0, 0,
	0, 1424, 59, 0, 0, 1713, 1713, 0, 0, 0,
	0, 1424, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	1714, 1713, 0, 0, 1713, 1713, 1713, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2248,
	0, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 0, 0, 0,
	0, 0, 2207, 1714, 2207, 0, 0, 0, 0, 0,
	314, 0, 0, 1596, 0, 0, 0, 0, 0, 1714,
	0, 1424, 0, 0, 0, 77, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 314, 0, 314,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 314, 0, 0, 0, 1593, 0, 0, 0,
	0, 0, 314, 113, 0, 314, 0, 1596, 0, 0,
	0, 0, 0, 0, 0, 314, 314, 0, 0, 0,
	314, 60, 314, 0, 0, 0, 0, 0, 0, 314,
	314, 0, 0, 0, 0, 0, 0, 0, 63, 314,
	0, 0, 0, 66, 0, 0, 0, 1424, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	0, 65, 212, 0, 116, 0, 0, 120, 0, 0,
	0, 0, 0, 61, 0, 0, 1596, 178, 0, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 69, 314, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1424, 277, 1424, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 2034, 2035, 0, 2067, 2068,
	2069, 2078, 2079, 2080, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 0, 1593, 2071, 2065,
	0, 79, 0, 0, 0, 0, 0, 2037, 218, 314,
	1596, 0, 0, 0, 0, 0, 276, 0, 2084, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 2090, 0, 0, 0,
	0, 0, 0, 0, 270, 2036, 0, 0, 213, 0,
	0, 0, 0, 217, 0, 0, 2056, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 2053, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 3, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 0, 1596, 2059, 2060,
	2061, 2062, 0, 1596, 0, 0, 0, 0, 2042, 0,
	1593, 314, 0, 0, 1596, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 2085, 0, 0, 0, 0,
	0, 0, 2064, 2066, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1594, 2081, 0, 2082, 0, 0, 0, 0, 0,
	0, 2051, 2052, 0, 0, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 314, 314, 314, 314, 0, 0,
	0, 2073, 0, 0, 314, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 1714, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 1594, 0, 2063, 0, 1713,
	0, 1713, 0, 0, 0, 0, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 1713,
	0, 1714, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	2035, 0, 2067, 2068, 2069, 2078, 2079, 2080, 0, 0,
	1714, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 2071, 2065, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 1714, 0, 1714, 0, 1714,
	2090, 0, 1713, 0, 0, 0, 0, 0, 0, 2036,
	0, 0, 0, 0, 0, 0, 0, 1714, 1714, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2053, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 1714, 1714, 1714, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2048, 2049, 2055, 2077, 2054,
	2050, 0, 2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3736, 0, 2059, 2060, 2061, 2062, 0, 0, 1596, 0,
	0, 0, 2042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 0, 2085,
	1596, 0, 0, 0, 0, 0, 2064, 2066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1594, 0,
	0, 0, 0, 0, 0, 0, 2081, 1596, 2082, 0,
	0, 0, 0, 0, 0, 2051, 2052, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 314, 314, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 2083,
	0, 0, 0, 0, 0, 314, 314, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 1594,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 314, 1593, 0, 0, 0, 1596, 0,
	1596, 0, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 314, 1596, 1596, 0, 0, 1596, 0, 0, 0,
	0, 314, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 0, 1596,
	0, 0, 1594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2048,
	2049, 2055, 2077, 2054, 2050, 0, 2047, 2045, 2046, 2038,
	2039, 2040, 2041, 2043, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3735, 0, 0, 0, 0, 0,
	0, 1596, 0, 314, 1596, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078, 2079,
	2080, 0, 0, 314, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 2065, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 1594, 0, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 1714, 0,
	0, 0, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	1596, 0, 2036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 2053, 1713, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 960, 1713, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 1714, 0, 1714, 0, 2059, 2060, 2061, 2062, 1714,
	0, 1713, 0, 1713, 0, 2042, 0, 0, 0, 0,
	1714, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 0,
	0, 0, 2085, 0, 0, 0, 0, 0, 0, 2064,
	2066, 0, 0, 0, 0, 1593, 0, 0, 1593, 314,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 2081,
	0, 2082, 0, 0, 0, 0, 0, 0, 2051, 2052,
	0, 0, 0, 0, 1714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 1596, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 1596, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 2063, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 314, 0, 0, 0, 314, 0, 314,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	1596, 0, 0, 2248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 1596, 0, 0, 0, 0, 1596, 1596,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1596, 0, 1596, 0, 0, 0, 0,
	314, 1596, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1594, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0, 2047,
	2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2939, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 1713, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 1713, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 1713, 1594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	1596, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1596, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 0, 0,
	0, 0, 1713, 1713, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 0, 1713,
	0, 314, 0, 0, 0, 1713, 0, 1593, 0, 0,
	0, 0, 0, 0, 1596, 0, 0, 314, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 2034, 2035, 0,
	2067, 2068, 2069, 2078, 2079, 2080, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 1596, 0, 0, 0, 0,
	2071, 2065, 0, 0, 0, 314, 0, 0, 0, 2037,
	0, 0, 0, 0, 0, 0, 1594, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	0, 0, 0, 0, 1596, 1596, 0, 2036, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 314, 0, 0, 1714, 1596, 1714, 0, 0, 0,
	1594, 0, 0, 0, 0, 0, 0, 0, 1714, 1714,
	0, 0, 0, 1593, 1593, 0, 1593, 0, 0, 0,
	1596, 1596, 1596, 1596, 1596, 1596, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 1713, 0,
	0, 0, 0, 0, 1596, 0, 0, 0, 0, 0,
	2059, 2060, 2061, 2062, 0, 0, 0, 0, 0, 1593,
	2042, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1714, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 2085, 0, 0,
	0, 0, 0, 0, 2064, 2066, 0, 0, 0, 1596,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2081, 0, 2082, 0, 1593, 0,
	0, 0, 0, 2051, 2052, 0, 0, 1594, 0, 0,
	1594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 1593,
	0, 0, 1596, 0, 0, 0, 0, 0, 2057, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 1713,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1594, 0, 2072, 0,
	0, 1596, 0, 0, 0, 0, 0, 1596, 0, 2087,
	1596, 1596, 0, 0, 1593, 0, 0, 0, 314, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 1713, 1713, 1713, 1713, 1713,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 2063,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2058, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 2034, 2035, 1594, 2067, 2068, 2069,
	2078, 2079, 2080, 1593, 0, 1713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2071, 2065, 0,
	0, 0, 0, 2089, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2090, 1593, 0, 0, 0,
	0, 0, 0, 0, 2036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2048, 2049, 2055,
	2077, 2054, 2050, 0, 2047, 2045, 2046, 2038, 2039, 2040,
	2041, 2043, 2044, 0, 0, 1593, 0, 0, 5397, 0,
	0, 1713, 0, 0, 1713, 1713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 1596, 2059, 2060, 2061,
	2062, 0, 0, 0, 0, 0, 1596, 2042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 1714, 0, 0,
	1593, 0, 0, 1713, 1714, 0, 0, 1714, 1714, 0,
	2075, 0, 0, 0, 2085, 0, 0, 1714, 0, 0,
	0, 2064, 2066, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 314, 2082, 0, 0, 2071, 2065, 0, 0,
	2051, 2052, 0, 0, 0, 2037, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2057, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 1714, 0, 0, 0,
	314, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 1714, 1714, 1714, 0, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 1714, 0, 0, 0, 2072, 0, 1714, 0, 1594,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1594, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 0, 0, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 2058, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 2076, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 1594, 1594, 0, 1594, 0,
	2089, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 2074, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050,
	0, 2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044,
	0, 0, 0, 0, 0, 5393, 0, 0, 0, 0,
	1594, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 1594, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	1714, 1714, 0, 2076, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 1594, 2065, 0, 0,
	0, 1714, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 1714, 1714, 1714,
	1714, 1714, 1714, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 2059, 2060, 2061, 2062,
	1594, 0, 0, 0, 2056, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	1594, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 5293, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1594, 0, 1714, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 1594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 1594, 0, 2073,
	0, 0, 0, 1714, 0, 0, 1714, 1714, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	0, 0, 1594, 0, 0, 1714, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2089,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0,
	0, 0, 0, 0, 5239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 1597, 330, 331, 1598, 1599,
	1600, 0, 1601, 740, 1602, 1603, 1604, 332, 1605, 333,
	334, 335, 1363, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 1606, 745, 345,
	346, 347, 348, 349, 350, 351, 1607, 1608, 0, 352,
	746, 747, 748, 1609, 353, 354, 749, 1610, 1677, 1611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 1612,
	364, 365, 366, 363, 367, 368, 1613, 369, 1714, 370,
	371, 372, 373, 374, 375, 376, 1614, 377, 378, 379,
	1364, 380, 381, 382, 1615, 1616, 1618, 1617, 1619, 1620,
	1621, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 1622, 393, 395, 389, 391, 1623, 394, 392, 396,
	397, 1624, 398, 399, 400, 1625, 1626, 401, 402, 403,
	1627, 404, 405, 406, 1628, 407, 408, 409, 1629, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 1630, 319, 1631,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 1632, 429, 430, 431, 1633, 432, 433, 1634,
	1365, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 1635, 446, 758, 1636, 759,
	447, 1637, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 1367, 455, 456, 457, 1638, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	1639, 1366, 763, 466, 549, 467, 764, 765, 1640, 766,
	1641, 468, 469, 471, 1368, 767, 1369, 470, 472, 473,
	1370, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 1642, 482, 484, 483, 1643, 486, 768, 485,
	1371, 487, 488, 1372, 1644, 489, 490, 491, 492, 493,
	494, 497, 1645, 1646, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 1373, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 1374, 541, 529, 1647, 321, 1375, 543, 544,
	545, 546, 1648, 769, 547, 770, 550, 551, 1649, 0,
	552, 0, 553, 1650, 1651, 555, 556, 557, 1652, 1653,
	558, 559, 771, 1376, 560, 1377, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	1654, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 1655, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 1656, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 1657, 619, 620, 618, 621, 622, 1378, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 1658, 649, 650, 648, 651, 652, 653, 1659,
	654, 779, 655, 635, 636, 656, 657, 1379, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 1660, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	1661, 686, 687, 0, 681, 672, 1662, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 1663, 696, 783, 784,
	785, 786, 1664, 708, 1665, 697, 699, 700, 701, 702,
	787, 703, 788, 1666, 704, 705, 706, 707, 698, 709,
	710, 1667, 1668, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 1669, 720, 1670, 0, 721, 722, 723, 789,
	790, 791, 1671, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 1672, 1673, 1674, 1675, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1591, 0,
	0, 0, 0, 0, 0, 3131, 0, 0, 0, 0,
	0, 0, 0, 0, 3132, 322, 323, 325, 324, 326,
	327, 328, 329, 1597, 330, 331, 1598, 1599, 1600, 0,
	1601, 740, 1602, 1603, 1604, 332, 1605, 333, 334, 335,
	1363, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 1606, 745, 345, 346, 347,
	348, 349, 350, 351, 1607, 1608, 0, 352, 746, 747,
	748, 1609, 353, 354, 749, 1610, 1677, 1611, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 1612, 364, 365,
	366, 363, 367, 368, 1613, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 1614, 377, 378, 379, 1364, 380,
	381, 382, 1615, 1616, 1618, 1617, 1619, 1620, 1621, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 1622,
	393, 395, 389, 391, 1623, 394, 392, 396, 397, 1624,
	398, 399, 400, 1625, 1626, 401, 402, 403, 1627, 404,
	405, 406, 1628, 407, 408, 409, 1629, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 1630, 319, 1631, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	1632, 429, 430, 431, 1633, 432, 433, 1634, 1365, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 1635, 446, 758, 1636, 759, 447, 1637,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 1367, 455, 456, 457, 1638, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 1639, 1366,
	763, 466, 549, 467, 764, 765, 1640, 766, 1641, 468,
	469, 471, 1368, 767, 1369, 470, 472, 473, 1370, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	1642, 482, 484, 483, 1643, 486, 768, 485, 1371, 487,
	488, 1372, 1644, 489, 490, 491, 492, 493, 494, 497,
	1645, 1646, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 1373, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	1374, 541, 529, 1647, 321, 1375, 543, 544, 545, 546,
	1648, 769, 547, 770, 550, 551, 1649, 0, 552, 0,
	553, 1650, 1651, 555, 556, 557, 1652, 1653, 558, 559,
	771, 1376, 560, 1377, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 1654, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 1655, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 1656, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 1657,
	619, 620, 618, 621, 622, 1378, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	1658, 649, 650, 648, 651, 652, 653, 1659, 654, 779,
	655, 635, 636, 656, 657, 1379, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 1660, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 1661, 686,
	687, 0, 681, 672, 1662, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 1663, 696, 783, 784, 785, 786,
	1664, 708, 1665, 697, 699, 700, 701, 702, 787, 703,
	788, 1666, 704, 705, 706, 707, 698, 709, 710, 1667,
	1668, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	1669, 720, 1670, 0, 721, 722, 723, 789, 790, 791,
	1671, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 1672, 1673, 1674, 1675, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1591, 0, 0, 0, 4296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4298,
	322, 323, 325, 324, 326, 327, 328, 329, 1597, 330,
	331, 1598, 1599, 1600, 0, 1601, 740, 1602, 1603, 1604,
	332, 1605, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	1606, 745, 345, 346, 347, 348, 349, 350, 351, 1607,
	1608, 0, 352, 746, 747, 748, 1609, 353, 354, 749,
	1610, 1677, 1611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 1612, 364, 365, 366, 363, 367, 368, 1613,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 1614,
	377, 378, 379, 1364, 380, 381, 382, 1615, 1616, 1618,
	1617, 1619, 1620, 1621, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 1622, 393, 395, 389, 391, 1623,
	394, 392, 396, 397, 1624, 398, 399, 400, 1625, 1626,
	401, 402, 403, 1627, 404, 405, 406, 1628, 407, 408,
	409, 1629, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	1630, 319, 1631, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 1632, 429, 430, 431, 1633,
	432, 433, 1634, 1365, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 1635, 446,
	758, 1636, 759, 447, 1637, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 1367, 455, 456, 457,
	1638, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 1639, 1366, 763, 466, 549, 467, 764,
	765, 1640, 766, 1641, 468, 469, 471, 1368, 767, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 1642, 482, 484, 483, 1643,
	486, 768, 485, 1371, 487, 488, 1372, 1644, 489, 490,
	491, 492, 493, 494, 497, 1645, 1646, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1647, 321,
	1375, 543, 544, 545, 546, 1648, 769, 547, 770, 550,
	551, 1649, 0, 552, 0, 553, 1650, 1651, 555, 556,
	557, 1652, 1653, 558, 559, 771, 1376, 560, 1377, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 1654, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 1655,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 1656, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 1657, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 1658, 649, 650, 648, 651,
	652, 653, 1659, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 1660, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 1661, 686, 687, 0, 681, 672, 1662,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 1663,
	696, 783, 784, 785, 786, 1664, 708, 1665, 697, 699,
	700, 701, 702, 787, 703, 788, 1666, 704, 705, 706,
	707, 698, 709, 710, 1667, 1668, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1669, 720, 1670, 0, 721,
	722, 723, 789, 790, 791, 1671, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 1672, 1673,
	1674, 1675, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4766, 322,
	323, 325, 324, 326, 327, 328, 329, 1597, 330, 331,
	1598, 1599, 1600, 0, 1601, 740, 1602, 1603, 1604, 332,
	1605, 333, 334, 335, 1363, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 1606,
	745, 345, 346, 347, 348, 349, 350, 351, 1607, 1608,
	0, 352, 746, 747, 748, 1609, 353, 354, 749, 1610,
	1677, 1611, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 1612, 364, 365, 366, 363, 367, 368, 1613, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 1614, 377,
	378, 379, 1364, 380, 381, 382, 1615, 1616, 1618, 1617,
	1619, 1620, 1621, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 1622, 393, 395, 389, 391, 1623, 394,
	392, 396, 397, 1624, 398, 399, 400, 1625, 1626, 401,
	402, 403, 1627, 404, 405, 406, 1628, 407, 408, 409,
	1629, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 1630,
	319, 1631, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 1632, 429, 430, 431, 1633, 432,
	433, 1634, 1365, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 1635, 446, 758,
	1636, 759, 447, 1637, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 1367, 455, 456, 457, 1638,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 1639, 1366, 763, 466, 549, 467, 764, 765,
	1640, 766, 1641, 468, 469, 471, 1368, 767, 1369, 470,
	472, 473, 1370, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 1642, 482, 484, 483, 1643, 486,
	768, 485, 1371, 487, 488, 1372, 1644, 489, 490, 491,
	492, 493, 494, 497, 1645, 1646, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1373, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1374, 541, 529, 1647, 321, 1375,
	543, 544, 545, 546, 1648, 769, 547, 770, 550, 551,
	1649, 0, 552, 0, 553, 1650, 1651, 555, 556, 557,
	1652, 1653, 558, 559, 771, 1376, 560, 1377, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 1654, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 1655, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 1656, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 1657, 619, 620, 618, 621, 622, 1378,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 1658, 649, 650, 648, 651, 652,
	653, 1659, 654, 779, 655, 635, 636, 656, 657, 1379,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	1660, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 1661, 686, 687, 0, 681, 672, 1662, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 1663, 696,
	783, 784, 785, 786, 1664, 708, 1665, 697, 699, 700,
	701, 702, 787, 703, 788, 1666, 704, 705, 706, 707,
	698, 709, 710, 1667, 1668, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 1669, 720, 1670, 0, 721, 722,
	723, 789, 790, 791, 1671, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 1672, 1673, 1674,
	1675, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4764, 322, 323,
	325, 324, 326, 327, 328, 329, 1597, 330, 331, 1598,
	1599, 1600, 0, 1601, 740, 1602, 1603, 1604, 332, 1605,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 1606, 745,
	345, 346, 347, 348, 349, 350, 351, 1607, 1608, 0,
	352, 746, 747, 748, 1609, 353, 354, 749, 1610, 1677,
	1611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	1612, 364, 365, 366, 363, 367, 368, 1613, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 1614, 377, 378,
	379, 1364, 380, 381, 382, 1615, 1616, 1618, 1617, 1619,
	1620, 1621, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 1622, 393, 395, 389, 391, 1623, 394, 392,
	396, 397, 1624, 398, 399, 400, 1625, 1626, 401, 402,
	403, 1627, 404, 405, 406, 1628, 407, 408, 409, 1629,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 1630, 319,
	1631, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 1632, 429, 430, 431, 1633, 432, 433,
	1634, 1365, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 1635, 446, 758, 1636,
	759, 447, 1637, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 1367, 455, 456, 457, 1638, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 1639, 1366, 763, 466, 549, 467, 764, 765, 1640,
	766, 1641, 468, 469, 471, 1368, 767, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 1642, 482, 484, 483, 1643, 486, 768,
	485, 1371, 487, 488, 1372, 1644, 489, 490, 491, 492,
	493, 494, 497, 1645, 1646, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 1647, 321, 1375, 543,
	544, 545, 546, 1648, 769, 547, 770, 550, 551, 1649,
	0, 552, 0, 553, 1650, 1651, 555, 556, 557, 1652,
	1653, 558, 559, 771, 1376, 560, 1377, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 1654, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 1655, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 1656, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 1657, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 1658, 649, 650, 648, 651, 652, 653,
	1659, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 1660,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 1661, 686, 687, 0, 681, 672, 1662, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 1663, 696, 783,
	784, 785, 786, 1664, 708, 1665, 697, 699, 700, 701,
	702, 787, 703, 788, 1666, 704, 705, 706, 707, 698,
	709, 710, 1667, 1668, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1669, 720, 1670, 0, 721, 722, 723,
	789, 790, 791, 1671, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1672, 1673, 1674, 1675,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 1591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5029, 322, 323, 325, 324, 326, 327, 328, 329, 1597,
	330, 331, 1598, 1599, 1600, 0, 1601, 740, 1602, 1603,
	1604, 332, 1605, 333, 334, 335, 1363, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 1606, 745, 345, 346, 347, 348, 349, 350, 351,
	1607, 1608, 0, 352, 746, 747, 748, 1609, 353, 354,
	749, 1610, 1677, 1611, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 1612, 364, 365, 366, 363, 367, 368,
	1613, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	1614, 377, 378, 379, 1364, 380, 381, 382, 1615, 1616,
	1618, 1617, 1619, 1620, 1621, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 1622, 393, 395, 389, 391,
	1623, 394, 392, 396, 397, 1624, 398, 399, 400, 1625,
	1626, 401, 402, 403, 1627, 404, 405, 406, 1628, 407,
	408, 409, 1629, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 1630, 319, 1631, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 1632, 429, 430, 431,
	1633, 432, 433, 1634, 1365, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 1635,
	446, 758, 1636, 759, 447, 1637, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 1367, 455, 456,
	457, 1638, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 1639, 1366, 763, 466, 549, 467,
	764, 765, 1640, 766, 1641, 468, 469, 471, 1368, 767,
	1369, 470, 472, 473, 1370, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 1642, 482, 484, 483,
	1643, 486, 768, 485, 1371, 487, 488, 1372, 1644, 489,
	490, 491, 492, 493, 494, 497, 1645, 1646, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1373, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1374, 541, 529, 1647,
	321, 1375, 543, 544, 545, 546, 1648, 769, 547, 770,
	550, 551, 1649, 0, 552, 0, 553, 1650, 1651, 555,
	556, 557, 1652, 1653, 558, 559, 771, 1376, 560, 1377,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 1654, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	1655, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 1656,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 1657, 619, 620, 618, 621,
	622, 1378, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 1658, 649, 650, 648,
	651, 652, 653, 1659, 654, 779, 655, 635, 636, 656,
	657, 1379, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 1660, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 1661, 686, 687, 0, 681, 672,
	1662, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	1663, 696, 783, 784, 785, 786, 1664, 708, 1665, 697,
	699, 700, 701, 702, 787, 703, 788, 1666, 704, 705,
	706, 707, 698, 709, 710, 1667, 1668, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 1669, 720, 1670, 0,
	721, 722, 723, 789, 790, 791, 1671, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 1672,
	1673, 1674, 1675, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 1591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4877, 322, 323, 325, 324, 326, 327,
	328, 329, 1597, 330, 331, 1598, 1599, 1600, 0, 1601,
	740, 1602, 1603, 1604, 332, 1605, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 1606, 745, 345, 346, 347, 348,
	349, 350, 351, 1607, 1608, 0, 352, 746, 747, 748,
	1609, 353, 354, 749, 1610, 1677, 1611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 1612, 364, 365, 366,
	363, 367, 368, 1613, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 1614, 377, 378, 379, 1364, 380, 381,
	382, 1615, 1616, 1618, 1617, 1619, 1620, 1621, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 1622, 393,
	395, 389, 391, 1623, 394, 392, 396, 397, 1624, 398,
	399, 400, 1625, 1626, 401, 402, 403, 1627, 404, 405,
	406, 1628, 407, 408, 409, 1629, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 1630, 319, 1631, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 1632,
	429, 430, 431, 1633, 432, 433, 1634, 1365, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 1635, 446, 758, 1636, 759, 447, 1637, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	1367, 455, 456, 457, 1638, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 1639, 1366, 763,
	466, 549, 467, 764, 765, 1640, 766, 1641, 468, 469,
	471, 1368, 767, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 1642,
	482, 484, 483, 1643, 486, 768, 485, 1371, 487, 488,
	1372, 1644, 489, 490, 491, 492, 493, 494, 497, 1645,
	1646, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 1647, 321, 1375, 543, 544, 545, 546, 1648,
	769, 547, 770, 550, 551, 1649, 0, 552, 0, 553,
	1650, 1651, 555, 556, 557, 1652, 1653, 558, 559, 771,
	1376, 560, 1377, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 1654, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 1655, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 1656, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 1657, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 1658,
	649, 650, 648, 651, 652, 653, 1659, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 1660, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 1661, 686, 687,
	0, 681, 672, 1662, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 1663, 696, 783, 784, 785, 786, 1664,
	708, 1665, 697, 699, 700, 701, 702, 787, 703, 788,
	1666, 704, 705, 706, 707, 698, 709, 710, 1667, 1668,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1669,
	720, 1670, 0, 721, 722, 723, 789, 790, 791, 1671,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 1672, 1673, 1674, 1675, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	1591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4690, 322, 323, 325,
	324, 326, 327, 328, 329, 1597, 330, 331, 1598, 1599,
	1600, 0, 1601, 740, 1602, 1603, 1604, 332, 1605, 333,
	334, 335, 1363, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 1606, 745, 345,
	346, 347, 348, 349, 350, 351, 1607, 1608, 0, 352,
	746, 747, 748, 1609, 353, 354, 749, 1610, 1677, 1611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 1612,
	364, 365, 366, 363, 367, 368, 1613, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 1614, 377, 378, 379,
	1364, 380, 381, 382, 1615, 1616, 1618, 1617, 1619, 1620,
	1621, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 1622, 393, 395, 389, 391, 1623, 394, 392, 396,
	397, 1624, 398, 399, 400, 1625, 1626, 401, 402, 403,
	1627, 404, 405, 406, 1628, 407, 408, 409, 1629, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 1630, 319, 1631,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 1632, 429, 430, 431, 1633, 432, 433, 1634,
	1365, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 1635, 446, 758, 1636, 759,
	447, 1637, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 1367, 455, 456, 457, 1638, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	1639, 1366, 763, 466, 549, 467, 764, 765, 1640, 766,
	1641, 468, 469, 471, 1368, 767, 1369, 470, 472, 473,
	1370, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 1642, 482, 484, 483, 1643, 486, 768, 485,
	1371, 487, 488, 1372, 1644, 489, 490, 491, 492, 493,
	494, 497, 1645, 1646, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 1373, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 1374, 541, 529, 1647, 321, 1375, 543, 544,
	545, 546, 1648, 769, 547, 770, 550, 551, 1649, 0,
	552, 0, 553, 1650, 1651, 555, 556, 557, 1652, 1653,
	558, 559, 771, 1376, 560, 1377, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	1654, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 1655, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 1656, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 1657, 619, 620, 618, 621, 622, 1378, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 1658, 649, 650, 648, 651, 652, 653, 1659,
	654, 779, 655, 635, 636, 656, 657, 1379, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 1660, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	1661, 686, 687, 0, 681, 672, 1662, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 1663, 696, 783, 784,
	785, 786, 1664, 708, 1665, 697, 699, 700, 701, 702,
	787, 703, 788, 1666, 704, 705, 706, 707, 698, 709,
	710, 1667, 1668, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 1669, 720, 1670, 0, 721, 722, 723, 789,
	790, 791, 1671, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 1672, 1673, 1674, 1675, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 1591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4314,
	322, 323, 325, 324, 326, 327, 328, 329, 1597, 330,
	331, 1598, 1599, 1600, 0, 1601, 740, 1602, 1603, 1604,
	332, 1605, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	1606, 745, 345, 346, 347, 348, 349, 350, 351, 1607,
	1608, 0, 352, 746, 747, 748, 1609, 353, 354, 749,
	1610, 1677, 1611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 1612, 364, 365, 366, 363, 367, 368, 1613,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 1614,
	377, 378, 379, 1364, 380, 381, 382, 1615, 1616, 1618,
	1617, 1619, 1620, 1621, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 1622, 393, 395, 389, 391, 1623,
	394, 392, 396, 397, 1624, 398, 399, 400, 1625, 1626,
	401, 402, 403, 1627, 404, 405, 406, 1628, 407, 408,
	409, 1629, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	1630, 319, 1631, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 1632, 429, 430, 431, 1633,
	432, 433, 1634, 1365, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 1635, 446,
	758, 1636, 759, 447, 1637, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 1367, 455, 456, 457,
	1638, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 1639, 1366, 763, 466, 549, 467, 764,
	765, 1640, 766, 1641, 468, 469, 471, 1368, 767, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 1642, 482, 484, 483, 1643,
	486, 768, 485, 1371, 487, 488, 1372, 1644, 489, 490,
	491, 492, 493, 494, 497, 1645, 1646, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1647, 321,
	1375, 543, 544, 545, 546, 1648, 769, 547, 770, 550,
	551, 1649, 0, 552, 0, 553, 1650, 1651, 555, 556,
	557, 1652, 1653, 558, 559, 771, 1376, 560, 1377, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 1654, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 1655,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 1656, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 1657, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 1658, 649, 650, 648, 651,
	652, 653, 1659, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 1660, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 1661, 686, 687, 0, 681, 672, 1662,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 1663,
	696, 783, 784, 785, 786, 1664, 708, 1665, 697, 699,
	700, 701, 702, 787, 703, 788, 1666, 704, 705, 706,
	707, 698, 709, 710, 1667, 1668, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1669, 720, 1670, 0, 721,
	722, 723, 789, 790, 791, 1671, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 1672, 1673,
	1674, 1675, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 1591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4116, 322, 323, 325, 324, 326, 327, 328,
	329, 1597, 330, 331, 1598, 1599, 1600, 0, 1601, 740,
	1602, 1603, 1604, 332, 1605, 333, 334, 335, 1363, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 1606, 745, 345, 346, 347, 348, 349,
	350, 351, 1607, 1608, 0, 352, 746, 747, 748, 1609,
	353, 354, 749, 1610, 1677, 1611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 1612, 364, 365, 366, 363,
	367, 368, 1613, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 1614, 377, 378, 379, 1364, 380, 381, 382,
	1615, 1616, 1618, 1617, 1619, 1620, 1621, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 1622, 393, 395,
	389, 391, 1623, 394, 392, 396, 397, 1624, 398, 399,
	400, 1625, 1626, 401, 402, 403, 1627, 404, 405, 406,
	1628, 407, 408, 409, 1629, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 1630, 319, 1631, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 1632, 429,
	430, 431, 1633, 432, 433, 1634, 1365, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 1635, 446, 758, 1636, 759, 447, 1637, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 1367,
	455, 456, 457, 1638, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 1639, 1366, 763, 466,
	549, 467, 764, 765, 1640, 766, 1641, 468, 469, 471,
	1368, 767, 1369, 470, 472, 473, 1370, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 1642, 482,
	484, 483, 1643, 486, 768, 485, 1371, 487, 488, 1372,
	1644, 489, 490, 491, 492, 493, 494, 497, 1645, 1646,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	1373, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 1374, 541,
	529, 1647, 321, 1375, 543, 544, 545, 546, 1648, 769,
	547, 770, 550, 551, 1649, 0, 552, 0, 553, 1650,
	1651, 555, 556, 557, 1652, 1653, 558, 559, 771, 1376,
	560, 1377, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 1654, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 1655, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 1656, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 1657, 619, 620,
	618, 621, 622, 1378, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 1658, 649,
	650, 648, 651, 652, 653, 1659, 654, 779, 655, 635,
	636, 656, 657, 1379, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 1660, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 1661, 686, 687, 0,
	681, 672, 1662, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 1663, 696, 783, 784, 785, 786, 1664, 708,
	1665, 697, 699, 700, 701, 702, 787, 703, 788, 1666,
	704, 705, 706, 707, 698, 709, 710, 1667, 1668, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 1669, 720,
	1670, 0, 721, 722, 723, 789, 790, 791, 1671, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 1672, 1673, 1674, 1675, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 1591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2962, 322, 323, 325, 324,
	326, 327, 328, 329, 1597, 330, 331, 1598, 1599, 1600,
	0, 1601, 740, 1602, 1603, 1604, 332, 1605, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 1606, 745, 345, 346,
	347, 348, 349, 350, 351, 1607, 1608, 0, 352, 746,
	747, 748, 1609, 353, 354, 749, 1610, 1677, 1611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 1612, 364,
	365, 366, 363, 367, 368, 1613, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 1614, 377, 378, 379, 1364,
	380, 381, 382, 1615, 1616, 1618, 1617, 1619, 1620, 1621,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	1622, 393, 395, 389, 391, 1623, 394, 392, 396, 397,
	1624, 398, 399, 400, 1625, 1626, 401, 402, 403, 1627,
	404, 405, 406, 1628, 407, 408, 409, 1629, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 1630, 319, 1631, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 1632, 429, 430, 431, 1633, 432, 433, 1634, 1365,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 1635, 446, 758, 1636, 759, 447,
	1637, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 1367, 455, 456, 457, 1638, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 1639,
	1366, 763, 466, 549, 467, 764, 765, 1640, 766, 1641,
	468, 469, 471, 1368, 767, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 1642, 482, 484, 483, 1643, 486, 768, 485, 1371,
	487, 488, 1372, 1644, 489, 490, 491, 492, 493, 494,
	497, 1645, 1646, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 1647, 321, 1375, 543, 544, 545,
	546, 1648, 769, 547, 770, 550, 551, 1649, 0, 552,
	0, 553, 1650, 1651, 555, 556, 557, 1652, 1653, 558,
	559, 771, 1376, 560, 1377, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 1654,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 1655, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 1656, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	1657, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 1658, 649, 650, 648, 651, 652, 653, 1659, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 1660, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 1661,
	686, 687, 0, 681, 672, 1662, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 1663, 696, 783, 784, 785,
	786, 1664, 708, 1665, 697, 699, 700, 701, 702, 787,
	703, 788, 1666, 704, 705, 706, 707, 698, 709, 710,
	1667, 1668, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1669, 720, 1670, 0, 721, 722, 723, 789, 790,
	791, 1671, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 1672, 1673, 1674, 1675, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	1588, 0, 1591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2568, 322,
	323, 325, 324, 326, 327, 328, 329, 1597, 330, 331,
	1598, 1599, 1600, 0, 1601, 740, 1602, 1603, 1604, 332,
	1605, 333, 334, 335, 1363, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 1606,
	745, 345, 346, 347, 348, 349, 350, 351, 1607, 1608,
	0, 352, 746, 747, 748, 1609, 353, 354, 749, 1610,
	1677, 1611, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 1612, 364, 365, 366, 363, 367, 368, 1613, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 1614, 377,
	378, 379, 1364, 380, 381, 382, 1615, 1616, 1618, 1617,
	1619, 1620, 1621, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 1622, 393, 395, 389, 391, 1623, 394,
	392, 396, 397, 1624, 398, 399, 400, 1625, 1626, 401,
	402, 403, 1627, 404, 405, 406, 1628, 407, 408, 409,
	1629, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 1630,
	319, 1631, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 1632, 429, 430, 431, 1633, 432,
	433, 1634, 1365, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 1635, 446, 758,
	1636, 759, 447, 1637, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 1367, 455, 456, 457, 1638,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 1639, 1366, 763, 466, 549, 467, 764, 765,
	1640, 766, 1641, 468, 469, 471, 1368, 767, 1369, 470,
	472, 473, 1370, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 1642, 482, 484, 483, 1643, 486,
	768, 485, 1371, 487, 488, 1372, 1644, 489, 490, 491,
	492, 493, 494, 497, 1645, 1646, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1373, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1374, 541, 529, 1647, 321, 1375,
	543, 544, 545, 546, 1648, 769, 547, 770, 550, 551,
	1649, 0, 552, 0, 553, 1650, 1651, 555, 556, 557,
	1652, 1653, 558, 559, 771, 1376, 560, 1377, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 1654, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 1655, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 1656, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 1657, 619, 620, 618, 621, 622, 1378,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 1658, 649, 650, 648, 651, 652,
	653, 1659, 654, 779, 655, 635, 636, 656, 657, 1379,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	1660, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 1661, 686, 687, 0, 681, 672, 1662, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 1663, 696,
	783, 784, 785, 786, 1664, 708, 1665, 697, 699, 700,
	701, 702, 787, 703, 788, 1666, 704, 705, 706, 707,
	698, 709, 710, 1667, 1668, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 1669, 720, 1670, 0, 721, 722,
	723, 789, 790, 791, 1671, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 1672, 1673, 1674,
	1675, 735, 736, 793, 737, 738, 739, 1591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 1597, 330, 331, 1598, 1599, 1600, 0, 1601,
	740, 1602, 1603, 1604, 332, 1605, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 1606, 745, 345, 346, 347, 348,
	349, 350, 351, 1607, 1608, 0, 352, 746, 747, 748,
	1609, 353, 354, 749, 1610, 1677, 1611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 1612, 364, 365, 366,
	363, 367, 368, 1613, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 1614, 377, 378, 379, 1364, 380, 381,
	382, 1615, 1616, 1618, 1617, 1619, 1620, 1621, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 1622, 393,
	395, 389, 391, 1623, 394, 392, 396, 397, 1624, 398,
	399, 400, 1625, 1626, 401, 402, 403, 1627, 404, 405,
	406, 1628, 407, 408, 409, 1629, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 1630, 319, 1631, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 1632,
	429, 430, 431, 1633, 432, 433, 1634, 1365, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 1635, 446, 758, 1636, 759, 447, 1637, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	1367, 455, 456, 457, 1638, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 1639, 1366, 763,
	466, 549, 467, 764, 765, 1640, 766, 1641, 468, 469,
	471, 1368, 767, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 1642,
	482, 484, 483, 1643, 486, 768, 485, 1371, 487, 488,
	1372, 1644, 489, 490, 491, 492, 493, 494, 497, 1645,
	1646, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 1647, 321, 1375, 543, 544, 545, 546, 1648,
	769, 547, 770, 550, 551, 1649, 0, 552, 0, 553,
	1650, 1651, 555, 556, 557, 1652, 1653, 558, 559, 771,
	1376, 560, 1377, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 1654, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 1655, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 1656, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 1657, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 1658,
	649, 650, 648, 651, 652, 653, 1659, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 1660, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 1661, 686, 687,
	0, 681, 672, 1662, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 1663, 696, 783, 784, 785, 786, 1664,
	708, 1665, 697, 699, 700, 701, 702, 787, 703, 788,
	1666, 704, 705, 706, 707, 698, 709, 710, 1667, 1668,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1669,
	720, 1670, 0, 721, 722, 723, 789, 790, 791, 1671,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 1672, 1673, 1674, 1675, 735, 736, 793, 737,
	738, 739, 2937, 0, 1299, 1271, 1272, 1273, 1269, 1270,
	1282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 2934,
	330, 331, 0, 0, 0, 0, 0, 1323, 1287, 0,
	0, 332, 0, 333, 334, 335, 1363, 336, 337, 338,
	339, 340, 341, 342, 741, 1336, 0, 343, 1343, 344,
	1342, 0, 1353, 345, 346, 347, 348, 349, 350, 351,
	1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353, 354,
	1329, 0, 1310, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1364, 380, 381, 382, 1313, 1311,
	1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386, 387,
	1346, 388, 390, 1340, 1339, 1259, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 2935,
	0, 401, 1331, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1265, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1354, 1355,
	424, 1278, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1338, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1365, 434, 435, 436, 1351, 1352,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1361, 0, 1288, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1324, 1325, 1328, 548, 1367, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 1366, 763, 466, 549, 467,
	1333, 1334, 0, 1294, 0, 468, 469, 471, 1368, 1326,
	1369, 470, 472, 473, 1370, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 1362, 485, 1371, 487, 488, 1372, 0, 489,
	490, 491, 492, 493, 494, 497, 1317, 1316, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1373, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1374, 541, 529, 1256,
	321, 1375, 543, 544, 545, 546, 1279, 1327, 547, 1341,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 1376, 560, 1377,
	1356, 561, 562, 1266, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 1357, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 1337, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1378, 623, 624, 625, 626, 627, 1267, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 1320, 654, 779, 655, 635, 636, 656,
	657, 1379, 658, 659, 660, 661, 662, 663, 664, 1335,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 1382, 675, 676, 677, 678, 1358,
	682, 683, 684, 685, 0, 686, 687, 1253, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 1347, 1348, 1349, 1350, 0, 708, 0, 697,
	699, 700, 701, 702, 1359, 703, 1360, 1277, 704, 705,
	706, 707, 698, 709, 710, 0, 1260, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 1321, 720, 0, 0,
	721, 722, 723, 789, 1344, 1381, 2933, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 0,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 1257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1252, 0, 0, 0, 0, 0,
	0, 1250, 1251, 2936, 0, 0, 0, 0, 0, 0,
	0, 1283, 2932, 0, 1241, 1281, 1299, 1271, 1272, 1273,
	1269, 1270, 1282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 1323,
	1287, 0, 0, 332, 0, 333, 334, 335, 1363, 336,
	337, 338, 339, 340, 341, 342, 741, 1336, 0, 343,
	1343, 344, 1342, 0, 1353, 345, 346, 347, 348, 349,
	350, 351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0,
	353, 354, 1329, 0, 1310, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1364, 380, 381, 382,
	1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385,
	386, 387, 1346, 388, 390, 1340, 1339, 1259, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 1331, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 1265, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	1354, 1355, 424, 1278, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 1338, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1365, 434, 435, 436,
	1351, 1352, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 1361, 0, 1288, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1324, 1325, 1328, 548, 1367,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 1366, 763, 466,
	549, 467, 1333, 1334, 0, 1294, 0, 468, 469, 471,
	1368, 1326, 1369, 470, 472, 473, 1370, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 1362, 485, 1371, 487, 488, 1372,
	0, 489, 490, 491, 492, 493, 494, 497, 1317, 1316,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	1373, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 1374, 541,
	529, 1256, 321, 1375, 543, 544, 545, 546, 1279, 1327,
	547, 1341, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 1376,
	560, 1377, 1356, 561, 562, 1266, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 1357, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 1337, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 1378, 623, 624, 625, 626, 627, 1267,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 275, 649,
	650, 648, 651, 652, 653, 1320, 654, 779, 655, 635,
	636, 656, 657, 1379, 658, 659, 660, 661, 662, 663,
	664, 1335, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 1382, 675, 676, 677,
	678, 1358, 682, 683, 684, 685, 0, 686, 687, 1253,
	681, 672, 277, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 1347, 1348, 1349, 1350, 0, 708,
	0, 697, 699, 700, 701, 702, 1359, 703, 1360, 1277,
	704, 705, 706, 707, 698, 709, 710, 0, 1260, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 1321, 720,
	0, 0, 721, 722, 723, 1841, 1344, 1381, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 0, 0, 0, 269, 735, 736, 793, 737, 738,
	739, 1257, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1252, 0, 0, 0,
	0, 0, 0, 1250, 1251, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 2115, 2113, 0, 0, 1281, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 275, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 277, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 1841, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 269, 735, 736, 793, 737, 738, 739,
	1257, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 1299, 1271, 1272, 1273, 1269, 1270,
	1282, 0, 2115, 3691, 0, 0, 1281, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 1323, 1287, 0,
	0, 332, 0, 333, 334, 335, 1363, 336, 337, 338,
	339, 340, 341, 342, 741, 1336, 0, 343, 1343, 344,
	1342, 0, 1353, 345, 346, 347, 348, 349, 350, 351,
	1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353, 354,
	1329, 0, 1310, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1364, 380, 381, 382, 1313, 1311,
	1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386, 387,
	1346, 388, 390, 1340, 1339, 1259, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1331, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 1265, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1354, 1355,
	424, 1278, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 1338, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1365, 434, 435, 436, 1351, 1352,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1361, 0, 1288, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1324, 1325, 1328, 548, 1367, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 1366, 763, 466, 549, 467,
	1333, 1334, 0, 1294, 0, 468, 469, 471, 1368, 1326,
	1369, 470, 472, 473, 1370, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 1362, 485, 1371, 487, 488, 1372, 0, 489,
	490, 491, 492, 493, 494, 497, 1317, 1316, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1373, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1374, 541, 529, 1256,
	321, 1375, 543, 544, 545, 546, 1279, 1327, 547, 1341,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 1376, 560, 1377,
	1356, 561, 562, 1266, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 1357, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 1337, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1378, 623, 624, 625, 626, 627, 1267, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 275, 649, 650, 648,
	651, 652, 653, 1320, 654, 779, 655, 635, 636, 656,
	657, 1379, 658, 659, 660, 661, 662, 663, 664, 1335,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 1382, 675, 676, 677, 678, 1358,
	682, 683, 684, 685, 0, 686, 687, 1253, 681, 672,
	277, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 1347, 1348, 1349, 1350, 0, 708, 0, 697,
	699, 700, 701, 702, 1359, 703, 1360, 1277, 704, 705,
	706, 707, 698, 709, 710, 0, 1260, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 1321, 720, 0, 0,
	721, 722, 723, 1841, 1344, 1381, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 0,
	0, 0, 269, 735, 736, 793, 737, 738, 739, 1257,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1252, 0, 0, 0, 0, 0,
	0, 1250, 1251, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 2115, 2113, 0, 0, 1281, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 1323, 1287, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 1336, 0, 343, 1343, 344, 1342,
	3067, 1353, 345, 346, 347, 348, 349, 350, 351, 1289,
	1322, 1254, 352, 1383, 1384, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 1346,
	388, 390, 1340, 1339, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1331, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1338, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 3072, 1365, 434, 435, 436, 1351, 1352, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1324, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 1333,
	1334, 0, 1294, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 3068,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1256, 321,
	1375, 543, 544, 545, 546, 1279, 1327, 547, 1341, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1337, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 1335, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1382, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1347, 1348, 1349, 1350, 0, 708, 3069, 697, 699,
	700, 701, 702, 1359, 703, 1360, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 1344, 1381, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 2982, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 1283, 2980, 0, 2979, 1281, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	1323, 1287, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 1336, 0,
	343, 1343, 344, 1342, 0, 1353, 345, 346, 347, 348,
	349, 350, 351, 1289, 1322, 1254, 352, 1383, 1384, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 1346, 388, 390, 1340, 1339, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1338, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 1351, 1352, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 1333, 1334, 0, 1294, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 1256, 321, 1375, 543, 544, 545, 546, 1279,
	1327, 547, 1341, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1337, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 1335, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1382, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1347, 1348, 1349, 1350, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 1344, 1381, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 1283, 2977, 0, 2976, 1281, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 1323, 1287, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	1336, 0, 343, 1343, 344, 1342, 0, 1353, 345, 346,
	347, 348, 349, 350, 351, 1289, 1322, 1254, 352, 1383,
	1384, 748, 0, 353, 354, 1329, 0, 1310, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 1313, 1311, 1312, 1319, 1315, 1314, 1318,
	383, 384, 385, 386, 387, 1346, 388, 390, 1340, 1339,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1331, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1354, 1355, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1338, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 1351, 1352, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1361, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1324, 1325,
	1328, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 1333, 1334, 0, 1294, 0,
	468, 469, 471, 1368, 1326, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1362, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 1317, 1316, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 1256, 321, 1375, 543, 544, 545,
	546, 1279, 1327, 547, 1341, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 1356, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1357, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1337, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1320, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 1335, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1382,
	675, 676, 677, 678, 1358, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1347, 1348, 1349,
	1350, 0, 708, 0, 697, 699, 700, 701, 702, 1359,
	703, 1360, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1321, 720, 0, 0, 721, 722, 723, 789, 1344,
	1381, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 1283, 2974, 0, 2973,
	1281, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 1323, 1287, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 1336, 0, 343, 1343, 344, 1342, 0, 1353,
	345, 346, 347, 348, 349, 350, 351, 1289, 1322, 1254,
	352, 1383, 1384, 748, 0, 353, 354, 1329, 0, 1310,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319, 1315,
	1314, 1318, 383, 384, 385, 386, 387, 1346, 388, 390,
	1340, 1339, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1331,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1354, 1355, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1338, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 1351, 1352, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1361, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1324, 1325, 1328, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 1333, 1334, 0,
	1294, 0, 468, 469, 471, 1368, 1326, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1362,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 1317, 1316, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 1256, 321, 1375, 543,
	544, 545, 546, 1279, 1327, 547, 1341, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 1356, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1357, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1337, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1320, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 1335, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1382, 675, 676, 677, 678, 1358, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1347,
	1348, 1349, 1350, 0, 708, 0, 697, 699, 700, 701,
	702, 1359, 703, 1360, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1321, 720, 0, 0, 721, 722, 723,
	789, 1344, 1381, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 1283, 2971,
	0, 1945, 1281, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 1323, 1287, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 1336, 0, 343, 1343, 344, 1342,
	0, 1353, 345, 346, 347, 348, 349, 350, 351, 1289,
	1322, 1254, 352, 1383, 1384, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 1346,
	388, 390, 1340, 1339, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1331, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1338, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 1351, 1352, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1324, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 1333,
	1334, 0, 1294, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1256, 321,
	1375, 543, 544, 545, 546, 1279, 1327, 547, 1341, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1337, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 1335, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1382, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1347, 1348, 1349, 1350, 0, 708, 0, 697, 699,
	700, 701, 702, 1359, 703, 1360, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 1344, 1381, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 1944, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 1246, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 1261, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1323, 1287, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 1336, 0,
	343, 1343, 344, 1342, 0, 1353, 345, 346, 347, 348,
	349, 350, 351, 1289, 1322, 1254, 352, 1383, 1384, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	5422, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 1346, 388, 390, 1340, 1339, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1338, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 1351, 1352, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 1333, 1334, 0, 1294, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 1256, 321, 1375, 543, 544, 545, 546, 1279,
	1327, 547, 1341, 550, 551, 0, 0, 552, 0, 553,
	1261, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1337, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 1335, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1382, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1347, 1348, 1349, 1350, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 1344, 1381, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 0, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1323, 1287, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	1336, 0, 343, 1343, 344, 1342, 0, 1353, 345, 346,
	347, 348, 349, 350, 351, 1289, 1322, 1254, 352, 1383,
	1384, 748, 0, 353, 354, 1329, 0, 1310, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 1313, 1311, 1312, 1319, 1315, 1314, 1318,
	383, 384, 385, 386, 387, 1346, 388, 390, 1340, 1339,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1331, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1354, 1355, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1338, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 1351, 1352, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1361, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1324, 1325,
	1328, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 2812, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 1333, 1334, 0, 1294, 0,
	468, 469, 471, 1368, 1326, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1362, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 1317, 1316, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 1256, 321, 1375, 543, 544, 545,
	546, 1279, 1327, 547, 1341, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 1356, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1357, 581, 776, 582, 583, 2811, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1337, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1320, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 1335, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1382,
	675, 676, 677, 678, 1358, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1347, 1348, 1349,
	1350, 0, 708, 0, 697, 699, 700, 701, 702, 1359,
	703, 1360, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1321, 720, 0, 0, 721, 722, 723, 789, 1344,
	1381, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 0,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1323, 1287, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 1336, 0, 343, 1343, 344, 1342, 0, 1353,
	345, 346, 347, 348, 349, 350, 351, 1289, 1322, 1254,
	352, 1383, 1384, 748, 0, 353, 354, 1329, 0, 1310,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 5128, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319, 1315,
	1314, 1318, 383, 384, 385, 386, 387, 1346, 388, 390,
	1340, 1339, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1331,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1354, 1355, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1338, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 1351, 1352, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1361, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1324, 1325, 1328, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 1333, 1334, 0,
	1294, 0, 468, 469, 471, 1368, 1326, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1362,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 1317, 1316, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 1256, 321, 1375, 543,
	544, 545, 546, 1279, 1327, 547, 1341, 550, 551, 0,
	0, 552, 0, 553, 1261, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 1356, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1357, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1337, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1320, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 1335, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1382, 675, 676, 677, 678, 1358, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1347,
	1348, 1349, 1350, 0, 708, 0, 697, 699, 700, 701,
	702, 1359, 703, 1360, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1321, 720, 0, 0, 721, 722, 723,
	789, 1344, 1381, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 0, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1323, 1287, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 1336, 0, 343, 1343, 344, 1342,
	0, 1353, 345, 346, 347, 348, 349, 350, 351, 1289,
	1322, 1254, 352, 1383, 1384, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 1346,
	388, 390, 1340, 1339, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1331, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1338, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 1351, 1352, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1324, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 1333,
	1334, 0, 1294, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1256, 321,
	1375, 543, 544, 545, 546, 1279, 1327, 547, 1341, 550,
	551, 0, 0, 552, 0, 553, 1261, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1337, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 1335, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1382, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1347, 1348, 1349, 1350, 0, 708, 0, 697, 699,
	700, 701, 702, 1359, 703, 1360, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 1344, 1381, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 4655, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 2186, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 1283, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 2186, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 1283, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 4292, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1323, 1287, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 1336, 0,
	343, 1343, 344, 1342, 0, 1353, 345, 346, 347, 348,
	349, 350, 351, 1289, 1322, 1254, 352, 1383, 1384, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 1346, 388, 390, 1340, 1339, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1338, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 3072, 1365, 434, 435,
	436, 1351, 1352, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 1333, 1334, 0, 1294, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 1256, 321, 1375, 543, 544, 545, 546, 1279,
	1327, 547, 1341, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1337, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 1335, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1382, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1347, 1348, 1349, 1350, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 1344, 1381, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 0, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1323, 1287, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	1336, 0, 343, 1343, 344, 1342, 0, 1353, 345, 346,
	347, 348, 349, 350, 351, 1289, 1322, 1254, 352, 1383,
	1384, 748, 0, 353, 354, 1329, 0, 1310, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 1313, 1311, 1312, 1319, 1315, 1314, 1318,
	383, 384, 385, 386, 387, 1346, 388, 390, 1340, 1339,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1331, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1354, 1355, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1338, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 1351, 1352, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1361, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1324, 1325,
	1328, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 1333, 1334, 0, 1294, 0,
	468, 469, 471, 1368, 1326, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1362, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 1317, 1316, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 1256, 321, 1375, 543, 544, 545,
	546, 1279, 1327, 547, 1341, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 1356, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1357, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1337, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1320, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 1335, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1382,
	675, 676, 677, 678, 1358, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1347, 1348, 1349,
	1350, 0, 708, 0, 697, 699, 700, 701, 702, 1359,
	703, 1360, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1321, 720, 0, 0, 721, 722, 723, 789, 1344,
	1381, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 1283, 2113, 0, 3077,
	1281, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 1323, 1287, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 1336, 0, 343, 1343, 344, 1342, 0, 1353,
	345, 346, 347, 348, 349, 350, 351, 1289, 1322, 1254,
	352, 1383, 1384, 748, 0, 353, 354, 1329, 0, 1310,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319, 1315,
	1314, 1318, 383, 384, 385, 386, 387, 1346, 388, 390,
	1340, 1339, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1331,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1354, 1355, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1338, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 1351, 1352, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1361, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1324, 1325, 1328, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 1333, 1334, 0,
	1294, 0, 468, 469, 471, 1368, 1326, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1362,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 1317, 1316, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 1256, 321, 1375, 543,
	544, 545, 546, 1279, 1327, 547, 1341, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 1356, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1357, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1337, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1320, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 1335, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1382, 675, 676, 677, 678, 1358, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1347,
	1348, 1349, 1350, 0, 708, 0, 697, 699, 700, 701,
	702, 1359, 703, 1360, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1321, 720, 0, 0, 721, 722, 723,
	789, 1344, 1381, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 3075, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1323, 1287, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 1336, 0, 343, 1343, 344, 1342,
	0, 1353, 345, 346, 347, 348, 349, 350, 351, 1289,
	1322, 1254, 352, 1383, 1384, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 1346,
	388, 390, 1340, 1339, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1331, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1338, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 1351, 1352, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1324, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 1333,
	1334, 0, 1294, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1256, 321,
	1375, 543, 544, 545, 546, 1279, 1327, 547, 1341, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1337, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 1335, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1382, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1347, 1348, 1349, 1350, 0, 708, 0, 697, 699,
	700, 701, 702, 1359, 703, 1360, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 1344, 1381, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 3063, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 3052, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1323, 1287, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 1336, 0,
	343, 1343, 344, 1342, 0, 1353, 345, 346, 347, 348,
	349, 350, 351, 1289, 1322, 1254, 352, 1383, 1384, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 1346, 388, 390, 1340, 1339, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1338, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 1351, 1352, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 1333, 1334, 0, 1294, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 1256, 321, 1375, 543, 544, 545, 546, 1279,
	1327, 547, 1341, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1337, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 1335, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1382, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1347, 1348, 1349, 1350, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 1344, 1381, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 3050, 0, 3041,
	3048, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1323, 1287, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	1336, 0, 343, 1343, 344, 1342, 0, 1353, 345, 346,
	347, 348, 349, 350, 351, 1289, 1322, 1254, 352, 1383,
	1384, 748, 0, 353, 354, 1329, 0, 1310, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 1313, 1311, 1312, 1319, 1315, 1314, 1318,
	383, 384, 385, 386, 387, 1346, 3044, 390, 1340, 1339,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1331, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1354, 1355, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1338, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 1351, 1352, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1361, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 3045, 454, 1324, 1325,
	1328, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 1333, 1334, 0, 1294, 0,
	468, 469, 471, 1368, 1326, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1362, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 1317, 1316, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 3046, 507, 3043, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 1256, 321, 1375, 543, 544, 545,
	546, 1279, 1327, 547, 1341, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 1356, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1357, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1337, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 3047, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1320, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 1335, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1382,
	675, 676, 677, 678, 1358, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1347, 1348, 1349,
	1350, 0, 708, 0, 697, 699, 700, 701, 702, 1359,
	703, 1360, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1321, 720, 0, 0, 721, 722, 723, 789, 1344,
	1381, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 3042, 739, 1257, 0, 0, 0, 0, 3038,
	0, 3041, 3048, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1323, 1287, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 1336, 0, 343, 1343, 344, 1342, 0, 1353,
	345, 346, 347, 348, 349, 350, 351, 1289, 1322, 1254,
	352, 1383, 1384, 748, 0, 353, 354, 1329, 0, 1310,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319, 1315,
	1314, 1318, 383, 384, 385, 386, 387, 1346, 3044, 390,
	1340, 1339, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1331,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1354, 1355, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1338, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 1351, 1352, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1361, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 3045, 454,
	1324, 1325, 1328, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 1333, 1334, 0,
	1294, 0, 468, 469, 471, 1368, 1326, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1362,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 1317, 1316, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 3046, 507, 3043, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 1256, 321, 1375, 543,
	544, 545, 546, 1279, 1327, 547, 1341, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 1356, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1357, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1337, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	3047, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1320, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 1335, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1382, 675, 676, 677, 678, 1358, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1347,
	1348, 1349, 1350, 0, 708, 0, 697, 699, 700, 701,
	702, 1359, 703, 1360, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1321, 720, 0, 0, 721, 722, 723,
	789, 1344, 1381, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 3042, 739, 1257, 0, 0, 0,
	0, 0, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1323, 1287, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 1336, 0, 343, 1343, 344, 1342,
	0, 1353, 345, 346, 347, 348, 349, 350, 351, 1289,
	1322, 1254, 352, 1383, 1384, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 1346,
	388, 390, 1340, 1339, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1331, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1338, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 1351, 1352, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1324, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 1333,
	1334, 0, 1294, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1256, 321,
	1375, 543, 544, 545, 546, 1279, 1327, 547, 1341, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1337, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 1335, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1382, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1347, 1348, 1349, 1350, 0, 708, 0, 697, 699,
	700, 701, 702, 1359, 703, 1360, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 1344, 1381, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 0, 0, 0, 0, 0, 0, 2121, 0,
	1283, 0, 0, 0, 1281, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	2791, 330, 331, 0, 0, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 2751, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1323, 1287, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 1336, 0,
	343, 1343, 344, 1342, 0, 1353, 345, 346, 347, 348,
	349, 350, 351, 1289, 1322, 1254, 352, 1383, 1384, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 1346, 388, 390, 1340, 1339, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1338, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 1351, 1352, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 1333, 1334, 0, 1294, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 1256, 321, 1375, 543, 544, 545, 546, 1279,
	1327, 547, 1341, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1337, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 1335, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1382, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1347, 1348, 1349, 1350, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 1344, 1381, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 2719, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1323, 1287, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	1336, 0, 343, 1343, 344, 1342, 0, 1353, 345, 346,
	347, 348, 349, 350, 351, 1289, 1322, 1254, 352, 1383,
	1384, 748, 0, 353, 354, 1329, 0, 1310, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 1313, 1311, 1312, 1319, 1315, 1314, 1318,
	383, 384, 385, 386, 387, 1346, 388, 390, 1340, 1339,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1331, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1354, 1355, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1338, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 1351, 1352, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1361, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1324, 1325,
	1328, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 1333, 1334, 0, 1294, 0,
	468, 469, 471, 1368, 1326, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1362, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 1317, 1316, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 1256, 321, 1375, 543, 544, 545,
	546, 1279, 1327, 547, 1341, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 1356, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1357, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1337, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1320, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 1335, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1382,
	675, 676, 677, 678, 1358, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1347, 1348, 1349,
	1350, 0, 708, 0, 697, 699, 700, 701, 702, 1359,
	703, 1360, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1321, 720, 0, 0, 721, 722, 723, 789, 1344,
	1381, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 1950,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1323, 1287, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 1336, 0, 343, 1343, 344, 1342, 0, 1353,
	345, 346, 347, 348, 349, 350, 351, 1289, 1322, 1254,
	352, 1383, 1384, 748, 0, 353, 354, 1329, 0, 1310,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319, 1315,
	1314, 1318, 383, 384, 385, 386, 387, 1346, 388, 390,
	1340, 1339, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1331,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1354, 1355, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1338, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 1351, 1352, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1361, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1324, 1325, 1328, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 1333, 1334, 0,
	1294, 0, 468, 469, 471, 1368, 1326, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1362,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 1317, 1316, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 1256, 321, 1375, 543,
	544, 545, 546, 1279, 1327, 547, 1341, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 1356, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1357, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1337, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1320, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 1335, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1382, 675, 676, 677, 678, 1358, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1347,
	1348, 1349, 1350, 0, 708, 0, 697, 699, 700, 701,
	702, 1359, 703, 1360, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1321, 720, 0, 0, 721, 722, 723,
	789, 1344, 1381, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 1876, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1323, 1287, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 1336, 0, 343, 1343, 344, 1342,
	0, 1353, 345, 346, 347, 348, 349, 350, 351, 1289,
	1322, 1254, 352, 1383, 1384, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 1346,
	388, 390, 1340, 1339, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1331, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1338, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 1351, 1352, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1324, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 1333,
	1334, 0, 1294, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1256, 321,
	1375, 543, 544, 545, 546, 1279, 1327, 547, 1341, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1337, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 1335, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1382, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1347, 1348, 1349, 1350, 0, 708, 0, 697, 699,
	700, 701, 702, 1359, 703, 1360, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 1344, 1381, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 1871, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 1857, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1323, 1287, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 1336, 0,
	343, 1343, 344, 1342, 0, 1353, 345, 346, 347, 348,
	349, 350, 351, 1289, 1322, 1254, 352, 1383, 1384, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 1346, 388, 390, 1340, 1339, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1338, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 1351, 1352, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 1333, 1334, 0, 1294, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 1256, 321, 1375, 543, 544, 545, 546, 1279,
	1327, 547, 1341, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1337, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 1335, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1382, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1347, 1348, 1349, 1350, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 1344, 1381, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 1852, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1323, 1287, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	1336, 0, 343, 1343, 344, 1342, 0, 1353, 345, 346,
	347, 348, 349, 350, 351, 1289, 1322, 1254, 352, 1383,
	1384, 748, 0, 353, 354, 1329, 0, 1310, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 1313, 1311, 1312, 1319, 1315, 1314, 1318,
	383, 384, 385, 386, 387, 1346, 388, 390, 1340, 1339,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1331, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1354, 1355, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1338, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 1351, 1352, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1361, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1324, 1325,
	1328, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 1333, 1334, 0, 1294, 0,
	468, 469, 471, 1368, 1326, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1362, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 1317, 1316, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 1256, 321, 1375, 543, 544, 545,
	546, 1279, 1327, 547, 1341, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 1356, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1357, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1337, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1320, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 1335, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1382,
	675, 676, 677, 678, 1358, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1347, 1348, 1349,
	1350, 0, 708, 0, 697, 699, 700, 701, 702, 1359,
	703, 1360, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1321, 720, 0, 0, 721, 722, 723, 789, 1344,
	1381, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 1758,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1323, 1287, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 1336, 0, 343, 1343, 344, 1342, 0, 1353,
	345, 346, 347, 348, 349, 350, 351, 1289, 1322, 1254,
	352, 1383, 1384, 748, 0, 353, 354, 1329, 0, 1310,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319, 1315,
	1314, 1318, 383, 384, 385, 386, 387, 1346, 388, 390,
	1340, 1339, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1331,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1354, 1355, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1338, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 1351, 1352, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1361, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1757, 1325, 1328, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 1333, 1334, 0,
	1294, 0, 468, 469, 471, 1368, 1326, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1362,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 1317, 1316, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 1256, 321, 1375, 543,
	544, 545, 546, 1279, 1327, 547, 1341, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 1356, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1357, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1337, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1320, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 1335, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1382, 675, 676, 677, 678, 1358, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1347,
	1348, 1349, 1350, 0, 708, 0, 697, 699, 700, 701,
	702, 1359, 703, 1360, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1321, 720, 0, 0, 721, 722, 723,
	789, 1344, 1381, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 1752, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1323, 1287, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 1336, 0, 343, 1343, 344, 1342,
	0, 1353, 345, 346, 347, 348, 349, 350, 351, 1289,
	1322, 1254, 352, 1383, 1384, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 1346,
	388, 390, 1340, 1339, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1331, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1338, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 1351, 1352, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1751, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 1333,
	1334, 0, 1294, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1256, 321,
	1375, 543, 544, 545, 546, 1279, 1327, 547, 1341, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1337, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 1335, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1382, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1347, 1348, 1349, 1350, 0, 708, 0, 697, 699,
	700, 701, 702, 1359, 703, 1360, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 1344, 1381, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 1745, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 1718, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1323, 1287, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 1336, 0,
	343, 1343, 344, 1342, 0, 1353, 345, 346, 347, 348,
	349, 350, 351, 1289, 1322, 1254, 352, 1383, 1384, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 1346, 388, 390, 1340, 1339, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1338, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 1351, 1352, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 1333, 1334, 0, 1294, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 1256, 321, 1375, 543, 544, 545, 546, 1279,
	1327, 547, 1341, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1337, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 1335, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1382, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1347, 1348, 1349, 1350, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 1344, 1381, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 1690, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1323, 1287, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	1336, 0, 343, 1343, 344, 1342, 0, 1353, 345, 346,
	347, 348, 349, 350, 351, 1289, 1322, 1254, 352, 1383,
	1384, 748, 0, 353, 354, 1329, 0, 1310, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 1313, 1311, 1312, 1319, 1315, 1314, 1318,
	383, 384, 385, 386, 387, 1346, 388, 390, 1340, 1339,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1331, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 1694, 419, 420,
	421, 422, 423, 1354, 1355, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1338, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 1351, 1352, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1361, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1324, 1325,
	1328, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 1333, 1334, 0, 1294, 0,
	468, 469, 471, 1368, 1326, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1362, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 1317, 1316, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 1256, 321, 1375, 543, 544, 545,
	546, 1279, 1327, 547, 1341, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 1356, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1357, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1337, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 1695, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1320, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 1335, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1382,
	675, 676, 677, 678, 1358, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 1693, 695, 0, 696, 1347, 1348, 1349,
	1350, 0, 708, 0, 697, 699, 700, 701, 702, 1359,
	703, 1360, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1321, 720, 0, 0, 721, 722, 723, 789, 1344,
	1381, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 1518,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1323, 1287, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 1336, 0, 343, 1343, 344, 1342, 0, 1353,
	345, 346, 347, 348, 349, 350, 351, 1289, 1322, 1254,
	352, 1383, 1384, 748, 0, 353, 354, 1329, 0, 1310,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319, 1315,
	1314, 1318, 383, 384, 385, 386, 387, 1346, 388, 390,
	1340, 1339, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1331,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1354, 1355, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1338, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 1351, 1352, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1361, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1324, 1325, 1328, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 1333, 1334, 0,
	1294, 0, 468, 469, 471, 1368, 1326, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1362,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 1317, 1316, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 1256, 321, 1375, 543,
	544, 545, 546, 1279, 1327, 547, 1341, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 1356, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1357, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1337, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1320, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 1335, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1382, 675, 676, 677, 678, 1358, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1347,
	1348, 1349, 1350, 0, 708, 0, 697, 699, 700, 701,
	702, 1359, 703, 1360, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1321, 720, 0, 0, 721, 722, 723,
	789, 1344, 1381, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 0, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1323, 1287, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 1336, 0, 343, 1343, 344, 1342,
	0, 1353, 345, 346, 347, 348, 349, 350, 351, 1289,
	1322, 1254, 352, 1383, 1384, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 1346,
	388, 390, 1340, 1339, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1331, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1338, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 1351, 1352, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1324, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 1333,
	1334, 0, 1294, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1256, 321,
	1375, 543, 544, 545, 546, 1279, 1327, 547, 1341, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1337, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 1335, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1382, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1347, 1348, 1349, 1350, 0, 708, 0, 697, 699,
	700, 701, 702, 1359, 703, 1360, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 1344, 1381, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 5475, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 5474, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 1250, 1251, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1323, 1287, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 5473, 1336, 0,
	343, 1343, 344, 1342, 0, 1353, 345, 346, 347, 348,
	349, 350, 351, 1289, 1322, 1254, 352, 1383, 1384, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	5475, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 1346, 388, 390, 1340, 1339, 1259, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1338, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 1351, 1352, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 1333, 1334, 0, 1294, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 1256, 321, 1375, 543, 544, 545, 546, 1279,
	1327, 547, 1341, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1337, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 1335, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1382, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	1253, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1347, 1348, 1349, 1350, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	1277, 704, 705, 706, 707, 698, 5474, 710, 0, 1260,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 1344, 1381, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1257, 0, 0, 0, 0, 0, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 1252, 0, 0,
	0, 0, 0, 0, 1250, 1251, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1323, 1287, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	1336, 0, 343, 1343, 344, 1342, 0, 1353, 345, 346,
	347, 348, 349, 350, 351, 1289, 1322, 1254, 352, 1383,
	1384, 748, 0, 353, 354, 1329, 0, 1310, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 5048, 382, 1313, 1311, 1312, 1319, 1315, 1314, 1318,
	383, 384, 385, 386, 387, 1346, 388, 390, 1340, 1339,
	1259, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1331, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1354, 1355, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1338, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 1351, 1352, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1361, 0, 5049, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1324, 1325,
	1328, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 1333, 1334, 0, 1294, 0,
	468, 469, 471, 1368, 1326, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1362, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 1317, 1316, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 1256, 321, 1375, 543, 544, 545,
	546, 1279, 1327, 547, 1341, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 1356, 561, 562, 1266, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1357, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1337, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	5047, 627, 1267, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1320, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 1335, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1382,
	675, 676, 677, 678, 1358, 682, 683, 684, 685, 0,
	686, 687, 1253, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1347, 1348, 1349,
	1350, 0, 708, 0, 697, 699, 700, 701, 702, 1359,
	703, 1360, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 1260, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1321, 720, 0, 0, 721, 722, 723, 789, 1344,
	1381, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 1257, 0, 0, 0, 0, 0,
	0, 1299, 1271, 1272, 1273, 3657, 3658, 1282, 0, 1252,
	0, 0, 0, 0, 0, 0, 1250, 1251, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1323, 1287, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 1336, 0, 343, 1343, 344, 1342, 0, 1353,
	345, 346, 347, 348, 349, 350, 351, 1289, 1322, 1254,
	352, 1383, 1384, 748, 0, 353, 354, 1329, 0, 1310,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319, 1315,
	1314, 1318, 383, 384, 385, 386, 387, 1346, 388, 390,
	1340, 1339, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1331,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1354, 1355, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1338, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 1351, 1352, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1361, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1324, 1325, 1328, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 1333, 1334, 0,
	1294, 0, 468, 469, 471, 1368, 1326, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1362,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 1317, 1316, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 1256, 321, 1375, 543,
	544, 545, 546, 1279, 1327, 547, 1341, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 1356, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1357, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1337, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1320, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 1335, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1382, 675, 676, 677, 678, 1358, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1347,
	1348, 1349, 1350, 0, 708, 0, 697, 699, 700, 701,
	702, 1359, 703, 1360, 1277, 704, 705, 706, 707, 698,
	709, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1321, 720, 0, 0, 721, 722, 723,
	789, 1344, 1381, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1257, 0, 0, 0,
	0, 0, 0, 1299, 1271, 1272, 1273, 3655, 3656, 1282,
	0, 1252, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1323, 1287, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 1336, 0, 343, 1343, 344, 1342,
	0, 1353, 345, 346, 347, 348, 349, 350, 351, 1289,
	1322, 1254, 352, 1383, 1384, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 1346,
	388, 390, 1340, 1339, 1259, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1331, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 1265, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1338, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 1351, 1352, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1324, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 1333,
	1334, 0, 1294, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 1256, 321,
	1375, 543, 544, 545, 546, 1279, 1327, 547, 1341, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 1266, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1337, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 1335, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1382, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 1253, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1347, 1348, 1349, 1350, 0, 708, 0, 697, 699,
	700, 701, 702, 1359, 703, 1360, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 1260, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 1344, 1381, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1257, 0,
	0, 0, 0, 0, 0, 1299, 1271, 1272, 1273, 1269,
	1270, 1282, 0, 1252, 0, 0, 0, 0, 0, 0,
	1250, 1251, 322, 323, 325, 324, 326, 327, 328, 329,
	1283, 330, 331, 0, 1281, 0, 0, 0, 1323, 1287,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 1336, 0, 343, 1343,
	344, 1342, 0, 1353, 345, 346, 347, 348, 349, 350,
	351, 1289, 1322, 1254, 352, 1383, 1384, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 1346, 388, 390, 1340, 1339, 1259, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 1331, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 1265, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 1278, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 1338, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 1351,
	1352, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 1288, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 1333, 1334, 0, 1294, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	1256, 321, 1375, 543, 544, 545, 546, 1279, 1327, 547,
	1341, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 1266, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 1337, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 1267, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	1335, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 1382, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 1253, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 1347, 1348, 1349, 1350, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 1277, 704,
	705, 706, 707, 698, 709, 710, 0, 1260, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 1344, 1381, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1257, 0, 0, 0, 0, 0, 0, 1299, 1271, 1272,
	1273, 1269, 1270, 1282, 0, 1252, 0, 0, 0, 0,
	0, 0, 2799, 2800, 322, 323, 325, 324, 326, 327,
	328, 329, 1283, 330, 331, 0, 1281, 0, 0, 0,
	1323, 1287, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 1336, 0,
	343, 1343, 344, 1342, 0, 1353, 345, 346, 347, 348,
	349, 350, 351, 1289, 1322, 0, 352, 1383, 1384, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 1346, 388, 390, 1340, 1339, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 1265, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 1278, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 1338, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 1351, 1352, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 1288, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 1333, 1334, 0, 1294, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 0, 321, 1375, 543, 544, 545, 546, 1279,
	1327, 547, 1341, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 1266, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 1337, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	1267, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 1335, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 1382, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 1347, 1348, 1349, 1350, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	1277, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 1344, 1381, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 1299,
	1271, 1272, 1273, 1269, 1270, 1282, 0, 3060, 0, 0,
	0, 0, 0, 0, 3058, 3059, 322, 323, 325, 324,
	326, 327, 328, 329, 1283, 330, 331, 0, 1281, 0,
	0, 0, 1323, 1287, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	1336, 0, 343, 1343, 344, 1342, 0, 1353, 345, 346,
	347, 348, 349, 350, 351, 1289, 1322, 0, 352, 1383,
	1384, 748, 0, 353, 354, 1329, 0, 1310, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 1313, 1311, 1312, 1319, 1315, 1314, 1318,
	383, 384, 385, 386, 387, 1346, 388, 390, 1340, 1339,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 1331, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	1265, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1354, 1355, 424, 1278, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 1338, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 1351, 1352, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1361, 0, 1288, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1324, 1325,
	1328, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 1333, 1334, 0, 1294, 0,
	468, 469, 471, 1368, 1326, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 1362, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 1317, 1316, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 0, 321, 1375, 543, 544, 545,
	546, 1279, 1327, 547, 1341, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 1356, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1357, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 1337, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 3650, 3651, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1320, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 1335, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 1382,
	675, 676, 677, 678, 1358, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 1347, 1348, 1349,
	1350, 0, 708, 0, 697, 699, 700, 701, 702, 1359,
	703, 1360, 1277, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1321, 720, 0, 0, 721, 722, 723, 789, 1344,
	1381, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 2385, 2386, 322, 323,
	325, 324, 326, 327, 328, 329, 1283, 330, 331, 0,
	1281, 0, 0, 0, 1323, 1287, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 0, 1336, 0, 343, 1343, 344, 1342, 0, 1353,
	345, 346, 347, 348, 349, 350, 351, 1289, 1322, 1254,
	352, 1383, 1384, 748, 0, 353, 354, 1329, 0, 1310,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 5475, 1313, 1311, 1312, 1319, 1315,
	1314, 1318, 383, 384, 385, 386, 387, 1346, 388, 390,
	1340, 1339, 1259, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 1331,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 1265, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 1354, 1355, 424, 1278, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 1338, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 1351, 1352, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 1361, 0,
	1288, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1324, 1325, 1328, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 1333, 1334, 0,
	1294, 0, 468, 469, 471, 0, 1326, 0, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 1362,
	485, 1371, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 1317, 1316, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 1256, 321, 0, 543,
	544, 545, 546, 1279, 1327, 547, 1341, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 1356, 561, 562,
	1266, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 1357, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	1337, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 1267, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	1320, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 1335, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 1382, 675, 676, 677, 678, 1358, 682, 683, 684,
	685, 0, 686, 687, 1253, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 1347,
	1348, 1349, 1350, 0, 708, 0, 697, 699, 700, 701,
	702, 1359, 703, 1360, 1277, 704, 705, 706, 707, 698,
	5474, 710, 0, 1260, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 1321, 720, 0, 0, 721, 722, 723,
	789, 1344, 1381, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 3079, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282,
	0, 0, 0, 0, 0, 0, 0, 0, 1250, 1251,
	322, 323, 325, 324, 326, 327, 328, 329, 1283, 330,
	331, 0, 1281, 0, 0, 0, 1323, 1287, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 1336, 0, 343, 1343, 344, 1342,
	0, 1353, 345, 346, 347, 348, 349, 350, 351, 0,
	1322, 0, 352, 1383, 1384, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 1346,
	388, 390, 1340, 1339, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 1331, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	1278, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	1338, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 1351, 1352, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 1288, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1324, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 1333,
	1334, 0, 1294, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 0, 321,
	1375, 543, 544, 545, 546, 1279, 1327, 547, 1341, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 1337, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 1267, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 1335, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 1382, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 1347, 1348, 1349, 1350, 0, 708, 0, 697, 699,
	700, 701, 702, 1359, 703, 1360, 1277, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 1344, 1381, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	1720, 0, 1299, 1271, 1272, 1273, 1269, 1270, 1282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	1283, 0, 0, 0, 1281, 1323, 1287, 0, 0, 332,
	0, 333, 334, 335, 1363, 336, 337, 338, 339, 340,
	341, 342, 741, 1336, 0, 343, 1343, 344, 1342, 0,
	1353, 345, 346, 347, 348, 349, 350, 351, 0, 1322,
	0, 352, 1383, 1384, 748, 0, 353, 354, 1329, 0,
	1310, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319,
	1315, 1314, 1318, 383, 384, 385, 386, 387, 1346, 388,
	390, 1340, 1339, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	1331, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1354, 1355, 424, 1278,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 1338,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1365, 434, 435, 436, 1351, 1352, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1361,
	0, 1288, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1324, 1325, 1328, 548, 1367, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1366, 763, 466, 549, 467, 1333, 1334,
	0, 1294, 0, 468, 469, 471, 1368, 1326, 1369, 470,
	472, 473, 1370, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	1362, 485, 1371, 487, 488, 1372, 0, 489, 490, 491,
	492, 493, 494, 497, 1317, 1316, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1373, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1374, 541, 529, 0, 321, 1375,
	543, 544, 545, 546, 1279, 1327, 547, 1341, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 1376, 560, 1377, 1356, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 1357, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 1337, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 1378,
	623, 624, 625, 626, 627, 1267, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 1320, 654, 779, 655, 635, 636, 656, 657, 1379,
	658, 659, 660, 661, 662, 663, 664, 1335, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 1382, 675, 676, 677, 678, 1358, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	1347, 1348, 1349, 1350, 0, 708, 0, 697, 699, 700,
	701, 702, 1359, 703, 1360, 1277, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 1321, 720, 0, 0, 721, 722,
	723, 789, 1344, 1381, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 0, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 1241, 0, 1422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 1283,
	0, 0, 1323, 1281, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 1322, 0, 352, 746,
	747, 748, 0, 353, 354, 1329, 0, 1310, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 1313, 1311, 1312, 1319, 1315, 1314, 1318,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 1354, 1355, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 1361, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1324, 1325,
	1328, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 1368, 1326, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 1408, 482, 484, 483, 0, 486, 1362, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 1317, 1316, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 0, 321, 1375, 543, 544, 545,
	546, 0, 1327, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 1414, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 1356, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	1357, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 778, 1416, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 275, 649, 650, 648, 651, 652, 653, 1320, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 1358, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 277, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 1359,
	703, 1360, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 1321, 720, 0, 0, 721, 722, 723, 1841, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 269, 735, 736,
	793, 737, 738, 739, 1422, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 1412, 0, 2210, 1323, 0, 0,
	0, 332, 0, 333, 334, 335, 1363, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 1322, 0, 352, 746, 747, 748, 0, 353, 354,
	1329, 0, 1310, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1364, 380, 381, 382, 1313, 1311,
	1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 1354, 1355,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1365, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 1361, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 1324, 1325, 1328, 548, 1367, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 1366, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 1368, 1326,
	1369, 470, 472, 473, 1370, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 1408, 482, 484, 483,
	0, 486, 1362, 485, 1371, 487, 488, 1372, 0, 489,
	490, 491, 492, 493, 494, 497, 1317, 1316, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1373, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1374, 541, 529, 0,
	321, 1375, 543, 544, 545, 546, 0, 1327, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 1414, 555,
	556, 557, 0, 0, 558, 559, 771, 1376, 560, 1377,
	1356, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 1357, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1378, 623, 624, 625, 626, 627, 778, 1416, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 275, 649, 650, 648,
	651, 652, 653, 1320, 654, 779, 655, 635, 636, 656,
	657, 1379, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 1358,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	277, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 1359, 703, 1360, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 1321, 720, 0, 0,
	721, 722, 723, 1841, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 0,
	0, 0, 269, 735, 736, 793, 737, 738, 739, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3817, 0, 1422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 2210, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 1323, 0,
	0, 0, 332, 0, 333, 334, 335, 1363, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 1322, 0, 352, 746, 747, 748, 0, 353,
	354, 1329, 0, 1310, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 1364, 380, 381, 382, 1313,
	1311, 1312, 1319, 1315, 1314, 1318, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 1354,
	1355, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 1365, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 1361, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1324, 1325, 1328, 548, 1367, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 1366, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 1368,
	1326, 1369, 470, 472, 473, 1370, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 1408, 482, 484,
	483, 0, 486, 1362, 485, 1371, 487, 488, 1372, 0,
	489, 490, 491, 492, 493, 494, 497, 1317, 1316, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 1373,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 1374, 541, 529,
	0, 321, 1375, 543, 544, 545, 546, 0, 1327, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 1414,
	555, 556, 557, 0, 0, 558, 559, 771, 1376, 560,
	1377, 1356, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 1357, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 1378, 623, 624, 625, 626, 627, 778, 1416,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 1320, 654, 779, 655, 635, 636,
	656, 657, 1379, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	1358, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 1359, 703, 1360, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 1321, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	0, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	1404, 0, 1422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	1412, 0, 1410, 0, 0, 1323, 0, 0, 0, 332,
	0, 333, 334, 335, 1363, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 1322,
	0, 352, 746, 747, 748, 0, 353, 354, 1329, 0,
	1310, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319,
	1315, 1314, 1318, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1354, 1355, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1365, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1361,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1324, 1325, 1328, 548, 1367, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1366, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 1368, 1326, 1369, 470,
	472, 473, 1370, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 1408, 482, 484, 483, 0, 486,
	1362, 485, 1371, 487, 488, 1372, 0, 489, 490, 491,
	492, 493, 494, 497, 1317, 1316, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1373, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1374, 541, 529, 0, 321, 1375,
	543, 544, 545, 546, 0, 1327, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 1414, 555, 556, 557,
	0, 0, 558, 559, 771, 1376, 560, 1377, 1356, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 1357, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 1378,
	623, 624, 625, 626, 627, 778, 1416, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 1320, 654, 779, 655, 635, 636, 656, 657, 1379,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 1358, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 1359, 703, 1360, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 1321, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 0, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 1422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 1412, 0, 1410,
	1323, 0, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 1322, 0, 352, 746, 747, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 1408,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 0, 321, 1375, 543, 544, 545, 546, 0,
	1327, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 1414, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	778, 1416, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 1412, 0, 1410, 1323, 0, 0, 0, 332,
	0, 333, 334, 335, 1363, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 1322,
	0, 352, 746, 747, 748, 0, 353, 354, 1329, 0,
	1310, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1364, 380, 381, 382, 1313, 1311, 1312, 1319,
	1315, 1314, 1318, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 1354, 1355, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1365, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 1361,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1324, 1325, 1328, 548, 1367, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 1366, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 1368, 1326, 1369, 470,
	472, 473, 1370, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	1362, 485, 1371, 487, 488, 1372, 0, 489, 490, 491,
	492, 493, 494, 497, 1317, 1316, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1373, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1374, 541, 529, 0, 321, 1375,
	543, 544, 545, 546, 0, 1327, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 1376, 560, 1377, 1356, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 1357, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 1378,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 1320, 654, 779, 655, 635, 636, 656, 657, 1379,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 1358, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 1359, 703, 1360, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 1321, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 0, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 1422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 4847,
	1323, 0, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 1322, 0, 352, 746, 747, 748,
	0, 353, 354, 1329, 0, 1310, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 1313, 1311, 1312, 1319, 1315, 1314, 1318, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 1354, 1355, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 1361, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1324, 1325, 1328, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 1368, 1326, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 1362, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 1317,
	1316, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 0, 321, 1375, 543, 544, 545, 546, 0,
	1327, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 1356, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 1357, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	778, 1416, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1320, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 1358, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 1359, 703, 1360,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 1321,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 2905, 2906, 2907, 2924, 2925, 2926, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 2927, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 2105, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	2090, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	2917, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	2913, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 2918, 2919, 2920, 2921, 425, 426, 427, 755,
	0, 0, 2912, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 2922, 2923, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	2915, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 2916, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 2089, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 0, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1241, 0, 1711, 2902,
	2903, 2904, 2928, 2914, 2908, 0, 2910, 2911, 2909, 2896,
	2897, 2898, 2899, 2900, 2901, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	1363, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 1677, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1364, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1365, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 1367, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 1366,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 1368, 767, 1369, 470, 472, 473, 1370, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 1371, 487,
	488, 1372, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 1373, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	1374, 541, 529, 0, 0, 1375, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 1376, 560, 1377, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 1378, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	275, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 1379, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 277, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 1841, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 0, 0, 0, 269, 735, 736, 793,
	737, 738, 739, 0, 1838, 270, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 216, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 1363, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 1677, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1364, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1365, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 1367,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 1366, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	1368, 767, 1369, 470, 472, 473, 1370, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 1371, 487, 488, 1372,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	1373, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 1374, 541,
	529, 0, 0, 1375, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 1376,
	560, 1377, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 1378, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 275, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 1379, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 277, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 1841, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 0, 0, 0, 269, 735, 736, 793, 737, 738,
	739, 1711, 1710, 270, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 216, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 1677,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 1368, 767, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 0, 0, 1375, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1711, 1710, 0, 0,
	0, 0, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 1865, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 1363, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 1677, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1364, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1365, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 1367,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 1366, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	1368, 767, 1369, 470, 472, 473, 1370, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 1371, 487, 488, 1372,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	1373, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 1374, 541,
	529, 0, 0, 1375, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 1376,
	560, 1377, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 1378, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 1379, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 0, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 1711, 1710, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 4197, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 1677,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 1368, 767, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 0, 0, 1375, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 2656, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1711, 2560, 0, 0,
	0, 0, 2561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 1865, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 1363, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 1677, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1364, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1365, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 1367,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 1366, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	1368, 767, 1369, 470, 472, 473, 1370, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 2559,
	484, 483, 0, 486, 768, 485, 1371, 487, 488, 1372,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	1373, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 1374, 541,
	529, 0, 0, 1375, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 1376,
	560, 1377, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 1378, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 1379, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 0, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 1711, 1710, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 1865, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 1363, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 1677,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 1364, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 1365, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 1367, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 1366, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 1368, 767, 1369, 470, 472,
	473, 1370, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 1371, 487, 488, 1372, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 1373, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 1374, 541, 529, 0, 0, 1375, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 1376, 560, 1377, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 1378, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 1379, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 0, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 1241, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 1847, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	275, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 277, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 1841, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 316, 0, 0, 269, 735, 736, 793,
	737, 738, 739, 0, 0, 270, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 216, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 316, 3422,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	2224, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 316, 0, 0, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 5655, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	316, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 1835, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 321, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 0, 0, 3230, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 4148, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 0, 2284, 0,
	343, 2274, 344, 2290, 0, 2297, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 2300, 2301, 0,
	0, 353, 354, 0, 0, 1677, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 1346, 388, 390, 2288, 2287, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 0, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 0, 0, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 2286, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 2295, 2296, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 0, 0, 0, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 0, 0, 0, 548,
	1367, 455, 456, 457, 3224, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 1366, 3226,
	466, 549, 467, 2281, 2282, 0, 2277, 0, 468, 469,
	471, 1368, 0, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 0, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 0, 0, 1375, 543, 544, 545, 546, 0,
	0, 547, 2289, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 3225,
	1376, 560, 1377, 0, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	2271, 575, 576, 577, 2272, 578, 579, 580, 0, 581,
	0, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 2285, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	0, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 0, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 2283, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 2299, 675, 676,
	677, 678, 0, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 2291, 2292, 2293, 2294, 0,
	708, 0, 697, 699, 700, 701, 702, 0, 703, 0,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 0, 2275, 2298, 3227,
	725, 726, 724, 727, 728, 731, 729, 730, 0, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 0, 737,
	738, 739, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 3219, 740, 0, 2265, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 0,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 3230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	3541, 0, 0, 0, 0, 332, 0, 333, 334, 335,
	1363, 336, 337, 338, 339, 340, 341, 342, 0, 2284,
	0, 343, 2274, 344, 2290, 0, 2297, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 2300, 2301,
	0, 0, 353, 354, 0, 0, 1677, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1364, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 1346, 388, 390, 2288, 2287, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1331, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 0,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 0, 0, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 2286, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1365, 434,
	435, 436, 2295, 2296, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 0, 0, 0, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 0, 0, 0,
	548, 1367, 455, 456, 457, 3224, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 1366,
	3226, 466, 549, 467, 2281, 2282, 0, 2277, 0, 468,
	469, 471, 1368, 0, 1369, 470, 472, 473, 1370, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 0, 485, 1371, 487,
	488, 1372, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 1373, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	1374, 541, 529, 0, 0, 1375, 543, 544, 545, 546,
	0, 0, 547, 2289, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	3225, 1376, 560, 1377, 0, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 2271, 575, 576, 577, 2272, 578, 579, 580, 0,
	581, 0, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 2285, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 1378, 623, 624, 625, 626,
	627, 0, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 0,
	655, 635, 636, 656, 657, 1379, 658, 659, 660, 661,
	662, 663, 664, 2283, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 2299, 675,
	676, 677, 678, 0, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 2291, 2292, 2293, 2294,
	0, 708, 0, 697, 699, 700, 701, 702, 0, 703,
	0, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 0, 2275, 2298,
	3227, 725, 726, 724, 727, 728, 731, 729, 730, 0,
	732, 733, 734, 0, 0, 0, 0, 735, 736, 0,
	737, 738, 739, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 2265,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 0,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 316, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	4317, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 0, 0, 0, 0, 735, 736, 793,
	737, 738, 739, 1422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 2643, 1323, 0, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	1322, 0, 352, 746, 747, 748, 0, 353, 354, 1329,
	0, 1310, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 1313, 1311, 1312,
	1319, 1315, 1314, 1318, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 1354, 1355, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	1361, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1324, 1325, 1328, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 1368, 1326, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 1362, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 1317, 1316, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 0, 321,
	1375, 543, 544, 545, 546, 0, 1327, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 1356,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 1357, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1320, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 1358, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 1359, 703, 1360, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 1321, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 2278, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 333, 334, 335,
	1363, 336, 337, 338, 339, 340, 341, 342, 0, 2284,
	0, 343, 2274, 344, 2290, 0, 2297, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 2300, 2301,
	0, 0, 353, 354, 0, 0, 1677, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 1364, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 1346, 388, 390, 2288, 2287, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 1331, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 0,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 2286, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 1365, 434,
	435, 436, 2295, 2296, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 0, 0, 0, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 0, 0, 0,
	548, 1367, 455, 456, 457, 3224, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 1366,
	3226, 466, 549, 467, 2281, 2282, 0, 2277, 0, 468,
	469, 471, 1368, 0, 1369, 470, 472, 473, 1370, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 0, 485, 1371, 487,
	488, 1372, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 1373, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	1374, 541, 529, 0, 0, 1375, 543, 544, 545, 546,
	0, 0, 547, 2289, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	3225, 1376, 560, 1377, 0, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 2271, 575, 576, 577, 2272, 578, 579, 580, 0,
	581, 0, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 2285, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 1378, 623, 624, 625, 626,
	627, 0, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 0,
	655, 635, 636, 656, 657, 1379, 658, 659, 660, 661,
	662, 663, 664, 2283, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 2299, 675,
	676, 677, 678, 0, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 2291, 2292, 2293, 2294,
	0, 708, 0, 697, 699, 700, 701, 702, 0, 703,
	0, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 0, 2275, 2298,
	3227, 725, 726, 724, 727, 728, 731, 729, 730, 0,
	732, 733, 734, 0, 0, 0, 0, 735, 736, 0,
	737, 738, 739, 1060, 0, 959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 2265,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 966,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 1057, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 321, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 1059, 0, 681,
	672, 964, 688, 689, 690, 691, 692, 965, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	2247, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 4452, 330, 331, 0, 0,
	0, 0, 0, 740, 969, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 2254, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 2255, 753, 754, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 2256, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 321, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 4451, 633, 642, 643, 644, 645,
	647, 646, 0, 2251, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 2253, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 4450, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 2247, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	2305, 330, 331, 0, 0, 0, 0, 0, 740, 969,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 2254,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 2255, 753,
	754, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 2256, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 321, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 2304,
	633, 642, 643, 644, 645, 647, 646, 0, 2306, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 2253, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 2303, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	2247, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 2246, 330, 331, 0, 0,
	0, 0, 0, 740, 969, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 2254, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 2255, 753, 754, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 2256, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 321, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 2245, 633, 642, 643, 644, 645,
	647, 646, 0, 2251, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 2253, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 2244, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 957, 0, 959, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 969,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 966, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 321, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 964, 688, 689, 690, 691, 692, 965,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 959, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 969, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 966, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 321, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 964, 688,
	689, 690, 691, 692, 965, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 3230, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	0, 969, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 0, 2284, 0,
	343, 2274, 344, 2290, 0, 2297, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 2300, 2301, 0,
	0, 353, 354, 0, 0, 1677, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 1346, 388, 390, 2288, 2287, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 1331, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 0, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 0, 0, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 2286, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 2295, 2296, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 0, 0, 0, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 0, 0, 0, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 1366, 0,
	466, 549, 467, 2281, 2282, 0, 2277, 0, 468, 469,
	471, 1368, 0, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 0, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 0, 0, 1375, 543, 544, 545, 546, 0,
	0, 547, 2289, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 0,
	1376, 560, 1377, 0, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	2271, 575, 576, 577, 2272, 578, 579, 580, 0, 581,
	0, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 2285, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	0, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 0, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 2283, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 2299, 675, 676,
	677, 678, 0, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 2291, 2292, 2293, 2294, 0,
	708, 0, 697, 699, 700, 701, 702, 0, 703, 0,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 0, 2275, 2298, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 0, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 0, 737,
	738, 739, 3210, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 2265, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	321, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 2247,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 969, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 2254, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 2255, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	2256, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 321, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 2697, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 2698, 633, 642, 643, 644, 645, 647,
	646, 0, 2251, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 2253, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 2699, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 2278, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 0, 969, 0,
	0, 332, 0, 333, 334, 335, 1363, 336, 337, 338,
	339, 340, 341, 342, 0, 2284, 0, 343, 2274, 344,
	2290, 0, 2297, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 2300, 2301, 0, 0, 353, 354,
	0, 0, 1677, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1364, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	1346, 388, 390, 2288, 2287, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 1331, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 0, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 2286, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1365, 434, 435, 436, 2295, 2296,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 0, 0, 0, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 0, 0, 0, 548, 1367, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 1366, 0, 466, 549, 467,
	2281, 2282, 0, 2277, 0, 468, 469, 471, 1368, 0,
	1369, 470, 472, 473, 1370, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 0, 485, 1371, 487, 488, 1372, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1373, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1374, 541, 529, 0,
	0, 1375, 543, 544, 545, 546, 0, 0, 547, 2289,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 0, 1376, 560, 1377,
	0, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 2271, 575, 576,
	577, 2272, 578, 579, 580, 0, 581, 0, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 2285, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1378, 623, 624, 625, 626, 627, 0, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 0, 655, 635, 636, 656,
	657, 1379, 658, 659, 660, 661, 662, 663, 664, 2283,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 2299, 675, 676, 677, 678, 0,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 2291, 2292, 2293, 2294, 0, 708, 0, 697,
	699, 700, 701, 702, 0, 703, 0, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 0, 2275, 2298, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 0, 732, 733, 734, 0,
	0, 0, 0, 735, 736, 0, 737, 738, 739, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 2265, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 321, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 316, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 969, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	321, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 316,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 925, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 0, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 1710, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4693, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 1363, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	1677, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 1364, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 1365, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 1367, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 1366, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 1368, 767, 1369, 470,
	472, 473, 1370, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 1371, 487, 488, 1372, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 1373, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 1374, 541, 529, 0, 0, 1375,
	543, 544, 545, 546, 4579, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 1376, 560, 1377, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 1378,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 1379,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 0, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 3624, 0, 1711,
	1710, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 1677, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 1368, 767, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 0, 0, 1375, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 0, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 2579, 0, 1711, 1710, 0, 0,
	0, 0, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 1363, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 1677, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 1364, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 1365, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1768, 761, 762, 548, 1367,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 1366, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	1368, 767, 1369, 470, 472, 473, 1370, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 1371, 487, 488, 1372,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	1373, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 1374, 541,
	529, 0, 0, 1375, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 1376,
	560, 1377, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 1378, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 1379, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 0, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 2314, 0, 1711, 1710, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 1363, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 1677, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 1364, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 1365, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 1367, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 1366, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 1368, 767, 1369,
	470, 472, 473, 1370, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 1371, 487, 488, 1372, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 1373, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 1374, 541, 529, 0, 0,
	1375, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 1376, 560, 1377, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	1378, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	1379, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 0, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 1898, 0,
	1711, 1710, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 1363, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 1677, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	1364, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 319, 0,
	0, 0, 0, 0, 1895, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	1365, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 1367, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 1366, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 1368, 767, 1369, 470, 472, 473,
	1370, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	1371, 487, 488, 1372, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 1373, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 1374, 541, 529, 0, 0, 1375, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 1376, 560, 1377, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 1896, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 1378, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 1894, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 1379, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 1897, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 0, 0, 0, 0, 735,
	736, 793, 737, 738, 739, 1765, 0, 1711, 1710, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 1363,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 1677, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 1364, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 1365, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1768, 761, 762, 548,
	1367, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 1366, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 1368, 767, 1369, 470, 472, 473, 1370, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 1371, 487, 488,
	1372, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 1373, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 1374,
	541, 529, 0, 0, 1375, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	1376, 560, 1377, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 1378, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 1379, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 1706, 0, 1711, 1710, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 1363, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 1677, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1364, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1365, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 1367, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 1366, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 1368, 767,
	1369, 470, 472, 473, 1370, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 1371, 487, 488, 1372, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1373, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1374, 541, 529, 0,
	0, 1375, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 1376, 560, 1377,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1378, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 1704, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 1379, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 0,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 1711,
	1710, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 1677, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 1368, 767, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 0, 0, 1375, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 1711, 1710, 0, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 1363, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 1677, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 1364, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 1365, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 1367, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 1366, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 1368, 767,
	1369, 470, 472, 473, 1370, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 1371, 487, 488, 1372, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 1373, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 1374, 541, 529, 0,
	0, 1375, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 1376, 560, 1377,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 1378, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 1379, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 1711,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 1363, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 1677, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 1364,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 1365,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 1367, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	1366, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 1368, 767, 1369, 470, 472, 473, 1370,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 1371,
	487, 488, 1372, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 1373, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 1374, 541, 529, 0, 0, 1375, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 1376, 560, 1377, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 1378, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 1379, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 316, 0, 0, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 3292, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	4140, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 3296, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 4139, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	3295, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	4136, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 4138, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 4135, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	0, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	3294, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 4137, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 316,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 3292, 353, 354, 749, 0, 0, 3286, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 3288, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 3296, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 3295, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 3285, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 0, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 3294, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 3293, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 1982, 0, 316, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 1981, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	1979, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 1984,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 1980, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 321, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 1983, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 1978,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 1976, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	1977, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 1681, 0, 316, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1683, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 1414, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 1678, 0,
	316, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 1680,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 321, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 1414, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 1584, 0, 316, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1586, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 321, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 1414, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 828, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 826, 328, 329, 815,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	818, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 824,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	0, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 820, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 827, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 814,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 815, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 818, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 819, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 820, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 813, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 316, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 815, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 818, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 819, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 820, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 316, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 815, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 818, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 4589, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 820, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 316, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 321, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	1414, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 316, 0, 0, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 4006, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 3510, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 3509, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 316, 0, 0, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 815, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 818,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 819, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 0,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 820, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 3212, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 2664, 0,
	316, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 321, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 2608, 0, 316, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 2607, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 321, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 2592, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 2594, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	321, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 2583,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 316, 0, 0, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 2553, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 321, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	1414, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 1813, 0, 316, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1812, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 1703, 0,
	316, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 319, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 320, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 321, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 1696, 0, 316, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 319, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 1698, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 320, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 321, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 1686, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 319, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	320, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	321, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 1502,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 319,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	1501, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 320, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 321, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1491, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1490, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 1487, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 319, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1486, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 320, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 321, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	1481, 0, 316, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	319, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1480, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 320, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 321, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 1458, 0, 316,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 319, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1457, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 320, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 321, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 795, 0, 316, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 319, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 320, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 321, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 307, 0, 316, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 316, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 316, 0, 0, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 818,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 819, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 0,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 820, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 316, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 2707, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 316, 0, 0, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 2705, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 316, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 2703, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 316, 0, 0, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 2615, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 316, 0,
	0, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 319, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 2338, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 320, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 321, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 316, 0, 0, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 319, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 2332, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 320,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 321,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 1044, 0,
	316, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	1043, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 1042, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 918, 0, 316, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 907, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 916, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 909, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 915, 433, 911, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 912, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 910, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 913, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 914, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 908, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 901, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 907, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 916, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	909, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 915, 433, 911, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 912, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 910, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 913, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	0, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 914, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 908, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 316,
	0, 0, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 4139, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 760, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 0, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 4945, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 1529, 0, 316, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 1532, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 1530, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 889,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 888, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	887, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 1533, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 885, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 1529, 0, 316, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 1532, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 1530, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 760, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 889, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 0,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 888, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 887, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	1533, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 885, 784, 785, 786, 0, 708, 0, 697, 1531,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 896, 0,
	316, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 894, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 804, 0, 316, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 803, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 802, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 3422, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 5265, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 3946, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 4819, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 4513, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 3146, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 3137, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 3422, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 3502, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 2492, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	888, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 887, 633, 642, 643,
	644, 645, 3371, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	885, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 2676, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 2662, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	0, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 1869,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1861, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 879, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	875, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 880, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 889, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 888, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 887,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 1846, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 885, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	1819, 0, 316, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1818, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 1802, 0, 316,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 741,
	742, 0, 343, 743, 344, 744, 0, 745, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 746,
	747, 748, 0, 353, 354, 749, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 386, 387, 0, 388, 390, 750, 751,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	752, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 753, 754, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 755, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 756, 757, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 758, 0, 759, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1800, 761,
	762, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 763, 466, 549, 467, 764, 765, 0, 766, 0,
	468, 469, 471, 0, 767, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 768, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 0, 0, 543, 544, 545,
	546, 0, 769, 547, 770, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 771, 0, 560, 0, 772, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 773, 575, 576, 577, 774, 578, 579, 580,
	775, 581, 776, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 777, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 778, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 0, 654,
	779, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 780, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 781,
	675, 676, 677, 678, 782, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 783, 784, 785,
	786, 0, 708, 0, 697, 699, 700, 701, 702, 787,
	703, 788, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 789, 790,
	791, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	792, 732, 733, 734, 1794, 0, 316, 0, 735, 736,
	793, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 741, 742, 0, 343,
	743, 344, 744, 0, 745, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 746, 747, 748, 0,
	353, 354, 749, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	386, 387, 0, 388, 390, 750, 751, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 752, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	753, 754, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 755, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	756, 757, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 758, 0, 759, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 760, 761, 762, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 763, 466,
	549, 467, 764, 765, 0, 766, 0, 468, 469, 471,
	0, 767, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 768, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 769,
	547, 770, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 771, 0,
	560, 0, 772, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 773,
	575, 576, 577, 774, 578, 579, 580, 775, 581, 776,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 777, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 778,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 0, 654, 779, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 780, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 781, 675, 676, 677,
	678, 782, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 783, 784, 785, 786, 0, 708,
	0, 697, 699, 700, 701, 702, 787, 703, 788, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 789, 790, 791, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 792, 732, 733,
	734, 1772, 0, 316, 0, 735, 736, 793, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 741, 742, 0, 343, 743, 344, 744,
	0, 745, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 746, 747, 748, 0, 353, 354, 749,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 387, 0,
	388, 390, 750, 751, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 752, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 753, 754, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	755, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 756, 757, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	758, 0, 759, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1770, 761, 762, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 763, 466, 549, 467, 764,
	765, 0, 766, 0, 468, 469, 471, 0, 767, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 768, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 0,
	0, 543, 544, 545, 546, 0, 769, 547, 770, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 771, 0, 560, 0, 772,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 773, 575, 576, 577,
	774, 578, 579, 580, 775, 581, 776, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 777, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 778, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 0, 654, 779, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 780, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 781, 675, 676, 677, 678, 782, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 783, 784, 785, 786, 0, 708, 0, 697, 699,
	700, 701, 702, 787, 703, 788, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 789, 790, 791, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 792, 732, 733, 734, 1763, 0,
	316, 0, 735, 736, 793, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 1724, 0, 316, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 1688, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 354,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 369, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 494, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 522, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	0, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 623, 624, 625, 626, 627, 778, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 641, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 652, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 783, 784, 785, 786, 0, 708, 0, 697,
	699, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 1535,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 888,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 638,
	639, 640, 631, 632, 634, 887, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 885,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 1506, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 1505, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 1498, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 1497, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	316, 0, 0, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 1439, 330, 331, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	741, 742, 0, 343, 743, 344, 744, 0, 745, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	746, 747, 748, 0, 353, 354, 749, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 386, 387, 0, 388, 390, 750,
	751, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 752, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 753, 754, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 755, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 756, 757, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 758, 0, 759,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 760,
	761, 762, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 763, 466, 549, 467, 764, 765, 0, 766,
	0, 468, 469, 471, 0, 767, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 768, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 769, 547, 770, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 771, 0, 560, 0, 772, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 773, 575, 576, 577, 774, 578, 579,
	580, 775, 581, 776, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 777,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 778, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 0,
	654, 779, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 780, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	781, 675, 676, 677, 678, 782, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 783, 784,
	785, 786, 0, 708, 0, 697, 699, 700, 701, 702,
	787, 703, 788, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 789,
	790, 791, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 792, 732, 733, 734, 899, 0, 316, 0, 735,
	736, 793, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 879, 0, 316, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 325, 324, 326, 327, 328, 329, 0,
	330, 331, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 332, 0, 333, 334, 335, 0, 336, 337, 338,
	339, 340, 341, 342, 741, 742, 0, 343, 743, 344,
	744, 0, 745, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 746, 747, 748, 0, 353, 875,
	749, 0, 0, 0, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 0, 364, 365, 366, 363, 367, 368,
	0, 874, 0, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 378, 379, 0, 380, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 386, 387,
	0, 388, 390, 750, 751, 0, 393, 395, 389, 391,
	0, 394, 392, 396, 397, 0, 398, 399, 400, 0,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 409, 0, 410, 411, 752, 412, 413, 414, 416,
	418, 415, 417, 419, 420, 421, 422, 423, 753, 754,
	424, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	427, 755, 0, 0, 0, 428, 0, 429, 430, 431,
	0, 432, 433, 0, 0, 434, 435, 436, 756, 757,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 0,
	446, 758, 0, 759, 447, 0, 448, 449, 450, 451,
	452, 453, 454, 760, 761, 762, 548, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 462, 0, 0, 0,
	0, 463, 464, 465, 0, 0, 763, 466, 549, 467,
	764, 765, 0, 766, 0, 468, 469, 471, 0, 767,
	0, 470, 472, 473, 0, 474, 0, 0, 0, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 484, 483,
	0, 486, 768, 485, 0, 487, 488, 0, 0, 489,
	490, 491, 492, 493, 880, 497, 0, 0, 495, 496,
	498, 499, 0, 500, 501, 503, 506, 502, 504, 505,
	507, 520, 521, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 523, 0, 889, 0, 524,
	525, 526, 527, 528, 535, 537, 538, 533, 534, 536,
	539, 540, 542, 530, 531, 532, 0, 541, 529, 0,
	0, 0, 543, 544, 545, 546, 0, 769, 547, 770,
	550, 551, 0, 0, 552, 0, 553, 0, 0, 555,
	556, 557, 0, 0, 558, 559, 771, 0, 560, 0,
	772, 561, 562, 554, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 573, 574, 773, 575, 576,
	577, 774, 578, 579, 580, 775, 581, 776, 582, 583,
	0, 584, 585, 586, 0, 587, 588, 589, 590, 591,
	592, 593, 594, 777, 595, 596, 598, 597, 599, 0,
	600, 0, 601, 602, 603, 0, 0, 0, 0, 0,
	604, 605, 607, 0, 608, 609, 610, 611, 606, 612,
	613, 614, 615, 616, 617, 0, 619, 620, 618, 621,
	622, 0, 888, 624, 625, 626, 627, 876, 628, 0,
	629, 630, 638, 639, 640, 631, 632, 634, 887, 633,
	642, 643, 644, 645, 647, 646, 0, 649, 650, 648,
	651, 877, 653, 0, 654, 779, 655, 635, 636, 656,
	657, 0, 658, 659, 660, 661, 662, 663, 664, 780,
	0, 665, 0, 666, 667, 668, 669, 670, 671, 673,
	637, 674, 679, 680, 781, 675, 676, 677, 678, 782,
	682, 683, 684, 685, 0, 686, 687, 0, 681, 672,
	0, 688, 689, 690, 691, 692, 693, 0, 694, 695,
	0, 696, 885, 784, 785, 786, 0, 708, 0, 697,
	881, 700, 701, 702, 787, 703, 788, 0, 704, 705,
	706, 707, 698, 709, 710, 0, 0, 711, 712, 713,
	715, 717, 718, 714, 716, 719, 0, 720, 0, 0,
	721, 722, 723, 789, 790, 791, 0, 725, 726, 724,
	727, 728, 731, 729, 730, 792, 732, 733, 734, 868,
	0, 316, 0, 735, 736, 793, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	325, 324, 326, 327, 328, 329, 0, 330, 331, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 332, 0,
	333, 334, 335, 0, 336, 337, 338, 339, 340, 341,
	342, 741, 742, 0, 343, 743, 344, 744, 0, 745,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 746, 747, 748, 0, 353, 354, 749, 0, 0,
	0, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	0, 364, 365, 366, 363, 367, 368, 0, 369, 0,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 378,
	379, 0, 380, 381, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 387, 0, 388, 390,
	750, 751, 0, 393, 395, 389, 391, 0, 394, 392,
	396, 397, 0, 398, 399, 400, 0, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 409, 0,
	410, 411, 752, 412, 413, 414, 416, 418, 415, 417,
	419, 420, 421, 422, 423, 753, 754, 424, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 427, 755, 0,
	0, 0, 428, 0, 429, 430, 431, 0, 432, 433,
	0, 0, 434, 435, 436, 756, 757, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 0, 446, 758, 0,
	759, 447, 0, 448, 449, 450, 451, 452, 453, 454,
	760, 761, 762, 548, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 462, 0, 0, 0, 0, 463, 464,
	465, 0, 0, 763, 466, 549, 467, 764, 765, 0,
	766, 0, 468, 469, 471, 0, 767, 0, 470, 472,
	473, 0, 474, 0, 0, 0, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 484, 483, 0, 486, 768,
	485, 0, 487, 488, 0, 0, 489, 490, 491, 492,
	493, 494, 497, 0, 0, 495, 496, 498, 499, 0,
	500, 501, 503, 506, 502, 504, 505, 507, 520, 521,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 523, 0, 522, 0, 524, 525, 526, 527,
	528, 535, 537, 538, 533, 534, 536, 539, 540, 542,
	530, 531, 532, 0, 541, 529, 0, 0, 0, 543,
	544, 545, 546, 0, 769, 547, 770, 550, 551, 0,
	0, 552, 0, 553, 0, 0, 555, 556, 557, 0,
	0, 558, 559, 771, 0, 560, 0, 772, 561, 562,
	554, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 0, 573, 574, 773, 575, 576, 577, 774, 578,
	579, 580, 775, 581, 776, 582, 583, 0, 584, 585,
	586, 0, 587, 588, 589, 590, 591, 592, 593, 594,
	777, 595, 596, 598, 597, 599, 0, 600, 0, 601,
	602, 603, 0, 0, 0, 0, 0, 604, 605, 607,
	0, 608, 609, 610, 611, 606, 612, 613, 614, 615,
	616, 617, 0, 619, 620, 618, 621, 622, 0, 623,
	624, 625, 626, 627, 778, 628, 0, 629, 630, 869,
	639, 640, 631, 632, 634, 641, 633, 642, 643, 644,
	645, 647, 646, 0, 649, 650, 648, 651, 652, 653,
	0, 654, 779, 655, 635, 636, 656, 657, 0, 658,
	659, 660, 661, 662, 663, 664, 780, 0, 665, 0,
	666, 667, 668, 669, 670, 671, 673, 637, 674, 679,
	680, 781, 675, 676, 677, 678, 782, 682, 683, 684,
	685, 0, 686, 687, 0, 681, 672, 0, 688, 689,
	690, 691, 692, 693, 0, 694, 695, 0, 696, 783,
	784, 785, 786, 0, 708, 0, 697, 699, 700, 701,
	702, 787, 703, 788, 0, 704, 705, 706, 707, 698,
	709, 710, 0, 0, 711, 712, 713, 715, 717, 718,
	714, 716, 719, 0, 720, 0, 0, 721, 722, 723,
	789, 790, 791, 0, 725, 726, 724, 727, 728, 731,
	729, 730, 792, 732, 733, 734, 830, 0, 316, 0,
	735, 736, 793, 737, 738, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 741, 742,
	0, 343, 743, 344, 744, 0, 745, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 746, 747,
	748, 0, 353, 354, 749, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 386, 387, 0, 388, 390, 750, 751, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 752,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 753, 754, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 755, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 756, 757, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 758, 0, 759, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 760, 761, 762,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	763, 466, 549, 467, 764, 765, 0, 766, 0, 468,
	469, 471, 0, 767, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 768, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 769, 547, 770, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	771, 0, 560, 0, 772, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 773, 575, 576, 577, 774, 578, 579, 580, 775,
	581, 776, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 777, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 778, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 0, 654, 779,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 780, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 781, 675,
	676, 677, 678, 782, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 783, 784, 785, 786,
	0, 708, 0, 697, 699, 700, 701, 702, 787, 703,
	788, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 789, 790, 791,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 792,
	732, 733, 734, 822, 0, 316, 0, 735, 736, 793,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 325, 324, 326, 327, 328, 329,
	0, 330, 331, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 332, 0, 333, 334, 335, 0, 336, 337,
	338, 339, 340, 341, 342, 741, 742, 0, 343, 743,
	344, 744, 0, 745, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 746, 747, 748, 0, 353,
	354, 749, 0, 0, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 0, 364, 365, 366, 363, 367,
	368, 0, 369, 0, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 378, 379, 0, 380, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	387, 0, 388, 390, 750, 751, 0, 393, 395, 389,
	391, 0, 394, 392, 396, 397, 0, 398, 399, 400,
	0, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 409, 0, 410, 411, 752, 412, 413, 414,
	416, 418, 415, 417, 419, 420, 421, 422, 423, 753,
	754, 424, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 755, 0, 0, 0, 428, 0, 429, 430,
	431, 0, 432, 433, 0, 0, 434, 435, 436, 756,
	757, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	0, 446, 758, 0, 759, 447, 0, 448, 449, 450,
	451, 452, 453, 454, 760, 761, 762, 548, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 462, 0, 0,
	0, 0, 463, 464, 465, 0, 0, 763, 466, 549,
	467, 764, 765, 0, 766, 0, 468, 469, 471, 0,
	767, 0, 470, 472, 473, 0, 474, 0, 0, 0,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 484,
	483, 0, 486, 768, 485, 0, 487, 488, 0, 0,
	489, 490, 491, 492, 493, 494, 497, 0, 0, 495,
	496, 498, 499, 0, 500, 501, 503, 506, 502, 504,
	505, 507, 520, 521, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 523, 0, 522, 0,
	524, 525, 526, 527, 528, 535, 537, 538, 533, 534,
	536, 539, 540, 542, 530, 531, 532, 0, 541, 529,
	0, 0, 0, 543, 544, 545, 546, 0, 769, 547,
	770, 550, 551, 0, 0, 552, 0, 553, 0, 0,
	555, 556, 557, 0, 0, 558, 559, 771, 0, 560,
	0, 772, 561, 562, 554, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 573, 574, 773, 575,
	576, 577, 774, 578, 579, 580, 775, 581, 776, 582,
	583, 0, 584, 585, 586, 0, 587, 588, 589, 590,
	591, 592, 593, 594, 777, 595, 596, 598, 597, 599,
	0, 600, 0, 601, 602, 603, 0, 0, 0, 0,
	0, 604, 605, 607, 0, 608, 609, 610, 611, 606,
	612, 613, 614, 615, 616, 617, 0, 619, 620, 618,
	621, 622, 0, 623, 624, 625, 626, 627, 778, 628,
	0, 629, 630, 638, 639, 640, 631, 632, 634, 641,
	633, 642, 643, 644, 645, 647, 646, 0, 649, 650,
	648, 651, 652, 653, 0, 654, 779, 655, 635, 636,
	656, 657, 0, 658, 659, 660, 661, 662, 663, 664,
	780, 0, 665, 0, 666, 667, 668, 669, 670, 671,
	673, 637, 674, 679, 680, 781, 675, 676, 677, 678,
	782, 682, 683, 684, 685, 0, 686, 687, 0, 681,
	672, 0, 688, 689, 690, 691, 692, 693, 0, 694,
	695, 0, 696, 783, 784, 785, 786, 0, 708, 0,
	697, 699, 700, 701, 702, 787, 703, 788, 0, 704,
	705, 706, 707, 698, 709, 710, 0, 0, 711, 712,
	713, 715, 717, 718, 714, 716, 719, 0, 720, 0,
	0, 721, 722, 723, 789, 790, 791, 0, 725, 726,
	724, 727, 728, 731, 729, 730, 792, 732, 733, 734,
	799, 0, 316, 0, 735, 736, 793, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 4171, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 888, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 887, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 885, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 4063, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 4032, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 4028, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 3971, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 3969, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 3957, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 3954, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 3521, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	869, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 2633, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 0, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 447, 0, 448, 449, 450, 451, 452, 453,
	454, 1467, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 592, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 628, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 316, 0, 0,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 741, 742, 0,
	343, 743, 344, 744, 0, 745, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 746, 747, 748,
	0, 353, 354, 749, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 383, 384,
	385, 386, 387, 0, 388, 390, 750, 751, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 752, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 753, 754, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 755, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 756, 757, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 758, 0, 759, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 760, 761, 762, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 763,
	466, 549, 467, 764, 765, 0, 766, 0, 468, 469,
	471, 0, 767, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 768, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	769, 547, 770, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 771,
	0, 560, 0, 772, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	773, 575, 576, 577, 774, 578, 579, 580, 775, 581,
	776, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 777, 595, 596, 1387,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	778, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 0, 654, 779, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 780, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 781, 675, 676,
	677, 678, 782, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 783, 784, 785, 786, 0,
	708, 0, 697, 699, 700, 701, 702, 787, 703, 788,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 789, 790, 791, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 792, 732,
	733, 734, 316, 0, 0, 0, 735, 736, 793, 737,
	738, 739, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 325, 324, 326, 327, 328, 329, 0, 330, 331,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 332,
	0, 333, 334, 335, 0, 336, 337, 338, 339, 340,
	341, 342, 741, 742, 0, 343, 743, 344, 744, 0,
	745, 345, 346, 347, 348, 349, 350, 351, 0, 0,
	0, 352, 746, 747, 748, 0, 353, 354, 749, 0,
	0, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 0, 364, 365, 366, 363, 367, 368, 0, 369,
	0, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	378, 379, 0, 380, 381, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 386, 387, 0, 388,
	390, 750, 751, 0, 393, 395, 389, 391, 0, 394,
	392, 396, 397, 0, 398, 399, 400, 0, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 409,
	0, 410, 411, 752, 412, 413, 414, 416, 418, 415,
	417, 419, 420, 421, 422, 423, 753, 754, 424, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 755,
	0, 0, 0, 428, 0, 429, 430, 431, 0, 432,
	433, 0, 0, 434, 435, 436, 756, 757, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 0, 446, 758,
	0, 759, 0, 0, 448, 449, 450, 451, 452, 453,
	454, 760, 761, 762, 548, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 462, 0, 0, 0, 0, 463,
	464, 465, 0, 0, 763, 466, 549, 467, 764, 765,
	0, 766, 0, 468, 469, 471, 0, 767, 0, 470,
	472, 473, 0, 474, 0, 0, 0, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 484, 483, 0, 486,
	768, 485, 0, 487, 488, 0, 0, 489, 490, 491,
	492, 493, 494, 497, 0, 0, 495, 496, 498, 499,
	0, 500, 501, 503, 506, 502, 504, 505, 507, 520,
	521, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 523, 0, 522, 0, 524, 525, 526,
	527, 528, 535, 537, 538, 533, 534, 536, 539, 540,
	542, 530, 531, 532, 0, 541, 529, 0, 0, 0,
	543, 544, 545, 546, 0, 769, 547, 770, 550, 551,
	0, 0, 552, 0, 553, 0, 0, 555, 556, 557,
	0, 0, 558, 559, 771, 0, 560, 0, 772, 561,
	562, 554, 563, 564, 565, 0, 567, 568, 569, 570,
	571, 572, 0, 573, 574, 773, 575, 576, 577, 774,
	578, 579, 580, 775, 581, 776, 582, 583, 0, 584,
	585, 586, 0, 587, 588, 589, 590, 591, 0, 593,
	594, 777, 595, 596, 598, 597, 599, 0, 600, 0,
	601, 602, 603, 0, 0, 0, 0, 0, 604, 605,
	607, 0, 608, 609, 610, 611, 606, 612, 613, 614,
	615, 616, 617, 0, 619, 620, 618, 621, 622, 0,
	623, 624, 625, 626, 627, 778, 0, 0, 629, 630,
	638, 639, 640, 631, 632, 634, 641, 633, 642, 643,
	644, 645, 647, 646, 0, 649, 650, 648, 651, 652,
	653, 0, 654, 779, 655, 635, 636, 656, 657, 0,
	658, 659, 660, 661, 662, 663, 664, 780, 0, 665,
	0, 666, 667, 668, 669, 670, 671, 673, 637, 674,
	679, 680, 781, 675, 676, 677, 678, 782, 682, 683,
	684, 685, 0, 686, 687, 0, 681, 672, 0, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 0, 696,
	783, 784, 785, 786, 0, 708, 0, 697, 699, 700,
	701, 702, 787, 703, 788, 0, 704, 705, 706, 707,
	698, 709, 710, 0, 0, 711, 712, 713, 715, 717,
	718, 714, 716, 719, 0, 720, 0, 0, 721, 722,
	723, 789, 790, 791, 0, 725, 726, 724, 727, 728,
	731, 729, 730, 792, 732, 733, 734, 1808, 0, 1513,
	0, 735, 736, 793, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 325, 324,
	326, 327, 328, 329, 0, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 333, 334,
	335, 0, 336, 337, 338, 339, 340, 341, 342, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	347, 348, 349, 350, 351, 0, 0, 0, 352, 0,
	0, 0, 0, 353, 354, 0, 0, 0, 0, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 0, 364,
	365, 366, 363, 367, 368, 0, 369, 0, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 378, 379, 0,
	380, 381, 382, 0, 0, 0, 0, 0, 0, 1515,
	383, 384, 385, 386, 387, 0, 388, 390, 0, 0,
	0, 393, 395, 389, 391, 0, 394, 392, 396, 397,
	0, 398, 399, 400, 0, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 409, 0, 410, 411,
	0, 412, 413, 414, 416, 418, 415, 417, 419, 420,
	421, 422, 423, 0, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 427, 0, 0, 0, 0,
	428, 0, 429, 430, 431, 0, 432, 433, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 0, 446, 0, 0, 0, 447,
	0, 448, 449, 450, 451, 452, 453, 454, 1807, 0,
	0, 548, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 462, 0, 0, 0, 0, 463, 464, 465, 0,
	0, 0, 466, 549, 467, 0, 0, 0, 0, 0,
	468, 469, 471, 0, 0, 0, 470, 472, 473, 0,
	474, 0, 0, 0, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 484, 483, 0, 486, 0, 485, 0,
	487, 488, 0, 0, 489, 490, 491, 492, 493, 494,
	497, 0, 0, 495, 496, 498, 499, 0, 500, 501,
	503, 506, 502, 504, 505, 507, 520, 521, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	523, 0, 522, 0, 524, 525, 526, 527, 528, 535,
	537, 538, 533, 534, 536, 539, 540, 542, 530, 531,
	532, 0, 541, 529, 0, 0, 0, 543, 544, 545,
	546, 0, 0, 547, 0, 550, 551, 0, 0, 552,
	0, 553, 0, 0, 555, 556, 557, 0, 0, 558,
	559, 0, 0, 560, 0, 0, 561, 562, 554, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 0, 582, 583, 0, 584, 585, 586, 0,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 595,
	596, 598, 597, 599, 0, 600, 0, 601, 602, 603,
	0, 0, 0, 0, 0, 604, 605, 607, 0, 608,
	609, 610, 611, 606, 612, 613, 614, 615, 616, 617,
	0, 619, 620, 618, 621, 622, 0, 623, 624, 625,
	626, 627, 0, 628, 0, 629, 630, 638, 639, 640,
	631, 632, 634, 641, 633, 642, 643, 644, 645, 647,
	646, 0, 649, 650, 648, 651, 652, 653, 1516, 654,
	0, 655, 635, 636, 656, 657, 0, 658, 659, 660,
	661, 662, 663, 664, 0, 0, 665, 0, 666, 667,
	668, 669, 670, 671, 673, 637, 674, 679, 680, 0,
	675, 676, 677, 678, 0, 682, 683, 684, 685, 0,
	686, 687, 0, 681, 672, 0, 688, 689, 690, 691,
	692, 693, 0, 694, 695, 0, 696, 0, 0, 0,
	0, 0, 708, 0, 697, 699, 700, 701, 702, 0,
	703, 0, 0, 704, 705, 706, 707, 698, 709, 710,
	0, 0, 711, 712, 713, 715, 717, 718, 714, 716,
	719, 0, 720, 0, 0, 721, 722, 723, 0, 0,
	0, 0, 725, 726, 724, 727, 728, 731, 729, 730,
	0, 732, 733, 734, 1727, 0, 1513, 0, 735, 736,
	0, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 325, 324, 326, 327, 328,
	329, 0, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 333, 334, 335, 0, 336,
	337, 338, 339, 340, 341, 342, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 347, 348, 349,
	350, 351, 0, 0, 0, 352, 0, 0, 0, 0,
	353, 354, 0, 0, 0, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 0, 364, 365, 366, 363,
	367, 368, 0, 369, 0, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 378, 379, 0, 380, 381, 382,
	0, 0, 0, 0, 0, 0, 1515, 383, 384, 385,
	386, 387, 0, 388, 390, 0, 0, 0, 393, 395,
	389, 391, 0, 394, 392, 396, 397, 0, 398, 399,
	400, 0, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 409, 0, 410, 411, 0, 412, 413,
	414, 416, 418, 415, 417, 419, 420, 421, 422, 423,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 0, 0, 0, 0, 428, 0, 429,
	430, 431, 0, 432, 433, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 0, 446, 0, 0, 0, 447, 0, 448, 449,
	450, 451, 452, 453, 454, 1726, 0, 0, 548, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 462, 0,
	0, 0, 0, 463, 464, 465, 0, 0, 0, 466,
	549, 467, 0, 0, 0, 0, 0, 468, 469, 471,
	0, 0, 0, 470, 472, 473, 0, 474, 0, 0,
	0, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	484, 483, 0, 486, 0, 485, 0, 487, 488, 0,
	0, 489, 490, 491, 492, 493, 494, 497, 0, 0,
	495, 496, 498, 499, 0, 500, 501, 503, 506, 502,
	504, 505, 507, 520, 521, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 523, 0, 522,
	0, 524, 525, 526, 527, 528, 535, 537, 538, 533,
	534, 536, 539, 540, 542, 530, 531, 532, 0, 541,
	529, 0, 0, 0, 543, 544, 545, 546, 0, 0,
	547, 0, 550, 551, 0, 0, 552, 0, 553, 0,
	0, 555, 556, 557, 0, 0, 558, 559, 0, 0,
	560, 0, 0, 561, 562, 554, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 0,
	582, 583, 0, 584, 585, 586, 0, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 595, 596, 598, 597,
	599, 0, 600, 0, 601, 602, 603, 0, 0, 0,
	0, 0, 604, 605, 607, 0, 608, 609, 610, 611,
	606, 612, 613, 614, 615, 616, 617, 0, 619, 620,
	618, 621, 622, 0, 623, 624, 625, 626, 627, 0,
	628, 0, 629, 630, 638, 639, 640, 631, 632, 634,
	641, 633, 642, 643, 644, 645, 647, 646, 0, 649,
	650, 648, 651, 652, 653, 1516, 654, 0, 655, 635,
	636, 656, 657, 0, 658, 659, 660, 661, 662, 663,
	664, 0, 0, 665, 0, 666, 667, 668, 669, 670,
	671, 673, 637, 674, 679, 680, 0, 675, 676, 677,
	678, 0, 682, 683, 684, 685, 0, 686, 687, 0,
	681, 672, 0, 688, 689, 690, 691, 692, 693, 0,
	694, 695, 0, 696, 0, 0, 0, 0, 0, 708,
	0, 697, 699, 700, 701, 702, 0, 703, 0, 0,
	704, 705, 706, 707, 698, 709, 710, 0, 0, 711,
	712, 713, 715, 717, 718, 714, 716, 719, 0, 720,
	0, 0, 721, 722, 723, 0, 0, 0, 0, 725,
	726, 724, 727, 728, 731, 729, 730, 0, 732, 733,
	734, 1511, 0, 1513, 0, 735, 736, 0, 737, 738,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 325, 324, 326, 327, 328, 329, 0, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 333, 334, 335, 0, 336, 337, 338, 339,
	340, 341, 342, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 347, 348, 349, 350, 351, 0,
	0, 0, 352, 0, 0, 0, 0, 353, 354, 0,
	0, 0, 0, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 0, 364, 365, 366, 363, 367, 368, 0,
	369, 0, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 378, 379, 0, 380, 381, 382, 0, 0, 0,
	0, 0, 0, 1515, 383, 384, 385, 386, 387, 0,
	388, 390, 0, 0, 0, 393, 395, 389, 391, 0,
	394, 392, 396, 397, 0, 398, 399, 400, 0, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	409, 0, 410, 411, 0, 412, 413, 414, 416, 418,
	415, 417, 419, 420, 421, 422, 423, 0, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 427,
	0, 0, 0, 0, 428, 0, 429, 430, 431, 0,
	432, 433, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 0, 446,
	0, 0, 0, 447, 0, 448, 449, 450, 451, 452,
	453, 454, 1510, 0, 0, 548, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 462, 0, 0, 0, 0,
	463, 464, 465, 0, 0, 0, 466, 549, 467, 0,
	0, 0, 0, 0, 468, 469, 471, 0, 0, 0,
	470, 472, 473, 0, 474, 0, 0, 0, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 484, 483, 0,
	486, 0, 485, 0, 487, 488, 0, 0, 489, 490,
	491, 492, 493, 494, 497, 0, 0, 495, 496, 498,
	499, 0, 500, 501, 503, 506, 502, 504, 505, 507,
	520, 521, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 523, 0, 522, 0, 524, 525,
	526, 527, 528, 535, 537, 538, 533, 534, 536, 539,
	540, 542, 530, 531, 532, 0, 541, 529, 0, 0,
	0, 543, 544, 545, 546, 0, 0, 547, 0, 550,
	551, 0, 0, 552, 0, 553, 0, 0, 555, 556,
	557, 0, 0, 558, 559, 0, 0, 560, 0, 0,
	561, 562, 554, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 0, 582, 583, 0,
	584, 585, 586, 0, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 595, 596, 598, 597, 599, 0, 600,
	0, 601, 602, 603, 0, 0, 0, 0, 0, 604,
	605, 607, 0, 608, 609, 610, 611, 606, 612, 613,
	614, 615, 616, 617, 0, 619, 620, 618, 621, 622,
	0, 623, 624, 625, 626, 627, 0, 628, 0, 629,
	630, 638, 639, 640, 631, 632, 634, 641, 633, 642,
	643, 644, 645, 647, 646, 0, 649, 650, 648, 651,
	652, 653, 1516, 654, 0, 655, 635, 636, 656, 657,
	0, 658, 659, 660, 661, 662, 663, 664, 0, 0,
	665, 0, 666, 667, 668, 669, 670, 671, 673, 637,
	674, 679, 680, 0, 675, 676, 677, 678, 0, 682,
	683, 684, 685, 0, 686, 687, 0, 681, 672, 0,
	688, 689, 690, 691, 692, 693, 0, 694, 695, 0,
	696, 0, 0, 0, 0, 0, 708, 0, 697, 699,
	700, 701, 702, 0, 703, 0, 0, 704, 705, 706,
	707, 698, 709, 710, 0, 0, 711, 712, 713, 715,
	717, 718, 714, 716, 719, 0, 720, 0, 0, 721,
	722, 723, 0, 0, 0, 0, 725, 726, 724, 727,
	728, 731, 729, 730, 0, 732, 733, 734, 2352, 0,
	1513, 0, 735, 736, 0, 737, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 325,
	324, 326, 327, 328, 329, 0, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 333,
	334, 335, 0, 336, 337, 338, 339, 340, 341, 342,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 347, 348, 349, 350, 351, 0, 0, 0, 352,
	0, 0, 0, 0, 353, 354, 0, 0, 0, 0,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 0,
	364, 365, 366, 363, 367, 368, 0, 369, 0, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 378, 379,
	0, 380, 381, 382, 0, 0, 0, 0, 0, 0,
	1515, 383, 384, 385, 386, 387, 0, 388, 390, 0,
	0, 0, 393, 395, 389, 391, 0, 394, 392, 396,
	397, 0, 398, 399, 400, 0, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 409, 0, 410,
	411, 0, 412, 413, 414, 416, 418, 415, 417, 419,
	420, 421, 422, 423, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 427, 0, 0, 0,
	0, 428, 0, 429, 430, 431, 0, 432, 433, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 0, 446, 0, 0, 0,
	447, 0, 448, 449, 450, 451, 452, 453, 454, 0,
	0, 0, 548, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 462, 0, 0, 0, 0, 463, 464, 465,
	0, 0, 0, 466, 549, 467, 0, 0, 0, 0,
	0, 468, 469, 471, 0, 0, 0, 470, 472, 473,
	0, 474, 0, 0, 0, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 484, 483, 0, 486, 0, 485,
	0, 487, 488, 0, 0, 489, 490, 491, 492, 493,
	494, 497, 0, 0, 495, 496, 498, 499, 0, 500,
	501, 503, 506, 502, 504, 505, 507, 520, 521, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 523, 0, 522, 0, 524, 525, 526, 527, 528,
	535, 537, 538, 533, 534, 536, 539, 540, 542, 530,
	531, 532, 0, 541, 529, 0, 0, 0, 543, 544,
	545, 546, 0, 0, 547, 0, 550, 551, 0, 0,
	552, 0, 553, 0, 0, 555, 556, 557, 0, 0,
	558, 559, 0, 0, 560, 0, 0, 561, 562, 554,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 0, 582, 583, 0, 584, 585, 586,
	0, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	595, 596, 598, 597, 599, 0, 600, 0, 601, 602,
	603, 0, 0, 0, 0, 0, 604, 605, 607, 0,
	608, 609, 610, 611, 606, 612, 613, 614, 615, 616,
	617, 0, 619, 620, 618, 621, 622, 0, 623, 624,
	625, 626, 627, 0, 628, 0, 629, 630, 638, 639,
	640, 631, 632, 634, 641, 633, 642, 643, 644, 645,
	647, 646, 0, 649, 650, 648, 651, 652, 653, 1516,
	654, 0, 655, 635, 636, 656, 657, 0, 658, 659,
	660, 661, 662, 663, 664, 0, 0, 665, 0, 666,
	667, 668, 669, 670, 671, 673, 637, 674, 679, 680,
	0, 675, 676, 677, 678, 0, 682, 683, 684, 685,
	0, 686, 687, 0, 681, 672, 0, 688, 689, 690,
	691, 692, 693, 0, 694, 695, 0, 696, 0, 0,
	0, 0, 0, 708, 0, 697, 699, 700, 701, 702,
	0, 703, 0, 0, 704, 705, 706, 707, 698, 709,
	710, 0, 0, 711, 712, 713, 715, 717, 718, 714,
	716, 719, 0, 720, 0, 0, 721, 722, 723, 0,
	0, 0, 0, 725, 726, 724, 727, 728, 731, 729,
	730, 0, 732, 733, 734, 2312, 0, 1513, 0, 735,
	736, 0, 737, 738, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 325, 324, 326, 327,
	328, 329, 0, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 333, 334, 335, 0,
	336, 337, 338, 339, 340, 341, 342, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 0, 0, 0,
	0, 353, 354, 0, 0, 0, 0, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 0, 364, 365, 366,
	363, 367, 368, 0, 369, 0, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 378, 379, 0, 380, 381,
	382, 0, 0, 0, 0, 0, 0, 1515, 383, 384,
	385, 386, 387, 0, 388, 390, 0, 0, 0, 393,
	395, 389, 391, 0, 394, 392, 396, 397, 0, 398,
	399, 400, 0, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 409, 0, 410, 411, 0, 412,
	413, 414, 416, 418, 415, 417, 419, 420, 421, 422,
	423, 0, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 427, 0, 0, 0, 0, 428, 0,
	429, 430, 431, 0, 432, 433, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 0, 446, 0, 0, 0, 447, 0, 448,
	449, 450, 451, 452, 453, 454, 0, 0, 0, 548,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 462,
	0, 0, 0, 0, 463, 464, 465, 0, 0, 0,
	466, 549, 467, 0, 0, 0, 0, 0, 468, 469,
	471, 0, 0, 0, 470, 472, 473, 0, 474, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 484, 483, 0, 486, 0, 485, 0, 487, 488,
	0, 0, 489, 490, 491, 492, 493, 494, 497, 0,
	0, 495, 496, 498, 499, 0, 500, 501, 503, 506,
	502, 504, 505, 507, 520, 521, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 523, 0,
	522, 0, 524, 525, 526, 527, 528, 535, 537, 538,
	533, 534, 536, 539, 540, 542, 530, 531, 532, 0,
	541, 529, 0, 0, 0, 543, 544, 545, 546, 0,
	0, 547, 0, 550, 551, 0, 0, 552, 0, 553,
	0, 0, 555, 556, 557, 0, 0, 558, 559, 0,
	0, 560, 0, 0, 561, 562, 554, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	0, 582, 583, 0, 584, 585, 586, 0, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 595, 596, 598,
	597, 599, 0, 600, 0, 601, 602, 603, 0, 0,
	0, 0, 0, 604, 605, 607, 0, 608, 609, 610,
	611, 606, 612, 613, 614, 615, 616, 617, 0, 619,
	620, 618, 621, 622, 0, 623, 624, 625, 626, 627,
	0, 628, 0, 629, 630, 638, 639, 640, 631, 632,
	634, 641, 633, 642, 643, 644, 645, 647, 646, 0,
	649, 650, 648, 651, 652, 653, 1516, 654, 0, 655,
	635, 636, 656, 657, 0, 658, 659, 660, 661, 662,
	663, 664, 0, 0, 665, 0, 666, 667, 668, 669,
	670, 671, 673, 637, 674, 679, 680, 0, 675, 676,
	677, 678, 0, 682, 683, 684, 685, 0, 686, 687,
	0, 681, 672, 0, 688, 689, 690, 691, 692, 693,
	0, 694, 695, 0, 696, 0, 0, 0, 0, 0,
	708, 0, 697, 699, 700, 701, 702, 0, 703, 0,
	0, 704, 705, 706, 707, 698, 709, 710, 0, 0,
	711, 712, 713, 715, 717, 718, 714, 716, 719, 0,
	720, 0, 0, 721, 722, 723, 0, 0, 0, 0,
	725, 726, 724, 727, 728, 731, 729, 730, 1513, 732,
	733, 734, 0, 0, 0, 0, 735, 736, 0, 737,
	738, 739, 0, 0, 0, 322, 323, 325, 324, 326,
	327, 328, 329, 0, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 333, 334, 335,
	0, 336, 337, 338, 339, 340, 341, 342, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 0, 0,
	0, 0, 353, 354, 0, 0, 0, 0, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 0, 364, 365,
	366, 363, 367, 368, 0, 369, 0, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 378, 379, 0, 380,
	381, 382, 0, 0, 0, 0, 0, 0, 1515, 383,
	384, 385, 386, 387, 0, 388, 390, 0, 0, 0,
	393, 395, 389, 391, 0, 394, 392, 396, 397, 0,
	398, 399, 400, 0, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 409, 0, 410, 411, 0,
	412, 413, 414, 416, 418, 415, 417, 419, 420, 421,
	422, 423, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 0, 0, 0, 0, 428,
	0, 429, 430, 431, 0, 432, 433, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 0, 446, 0, 0, 0, 447, 0,
	448, 449, 450, 451, 452, 453, 454, 0, 0, 0,
	548, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	462, 0, 0, 0, 0, 463, 464, 465, 0, 0,
	0, 466, 549, 467, 0, 0, 0, 0, 0, 468,
	469, 471, 0, 0, 0, 470, 472, 473, 0, 474,
	0, 0, 0, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 484, 483, 0, 486, 0, 485, 0, 487,
	488, 0, 0, 489, 490, 491, 492, 493, 494, 497,
	0, 0, 495, 496, 498, 499, 0, 500, 501, 503,
	506, 502, 504, 505, 507, 520, 521, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 523,
	0, 522, 0, 524, 525, 526, 527, 528, 535, 537,
	538, 533, 534, 536, 539, 540, 542, 530, 531, 532,
	0, 541, 529, 0, 0, 0, 543, 544, 545, 546,
	0, 0, 547, 0, 550, 551, 0, 0, 552, 0,
	553, 0, 0, 555, 556, 557, 0, 0, 558, 559,
	0, 0, 560, 0, 0, 561, 562, 554, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 0, 582, 583, 0, 584, 585, 586, 0, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 595, 596,
	598, 597, 599, 0, 600, 0, 601, 602, 603, 0,
	0, 0, 0, 0, 604, 605, 607, 0, 608, 609,
	610, 611, 606, 612, 613, 614, 615, 616, 617, 0,
	619, 620, 618, 621, 622, 0, 623, 624, 625, 626,
	627, 0, 628, 0, 629, 630, 638, 639, 640, 631,
	632, 634, 641, 633, 642, 643, 644, 645, 647, 646,
	0, 649, 650, 648, 651, 652, 653, 1516, 654, 0,
	655, 635, 636, 656, 657, 0, 658, 659, 660, 661,
	662, 663, 664, 0, 0, 665, 0, 666, 667, 668,
	669, 670, 671, 673, 637, 674, 679, 680, 0, 675,
	676, 677, 678, 0, 682, 683, 684, 685, 0, 686,
	687, 0, 681, 672, 0, 688, 689, 690, 691, 692,
	693, 0, 694, 695, 0, 696, 0, 0, 0, 0,
	0, 708, 0, 697, 699, 700, 701, 702, 0, 703,
	0, 0, 704, 705, 706, 707, 698, 709, 710, 0,
	0, 711, 712, 713, 715, 717, 718, 714, 716, 719,
	0, 720, 0, 0, 721, 722, 723, 0, 0, 0,
	0, 725, 726, 724, 727, 728, 731, 729, 730, 0,
	732, 733, 734, 0, 0, 0, 0, 735, 736, 0,
	737, 738, 739, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 2065, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 2034, 2035,
	0, 2067, 2068, 2069, 2078, 2079, 2080, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 2071, 2065, 2036, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 2084, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	0, 0, 0, 0, 0, 0, 0, 0, 2036, 0,
	2034, 2035, 0, 2067, 2068, 2069, 2078, 2079, 2080, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2053,
	0, 0, 0, 2071, 2065, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 2090, 0, 0, 0, 0, 2042, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 2060, 2061, 2062, 0, 0, 0, 0, 2075,
	0, 2042, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 2075, 0, 0, 0, 2085, 0,
	0, 0, 0, 0, 0, 2064, 2066, 0, 0, 2073,
	0, 0, 0, 2059, 2060, 2061, 2062, 0, 0, 0,
	0, 0, 0, 2042, 2057, 2081, 0, 2082, 0, 0,
	0, 0, 0, 0, 2051, 2052, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 0, 0, 2057,
	2085, 0, 0, 2083, 0, 0, 0, 2064, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 0, 0, 2081, 0, 2082,
	0, 0, 0, 0, 0, 2087, 2051, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2072,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 2072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2076, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0,
	0, 0, 0, 0, 5238, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2048, 2049,
	2055, 2077, 2054, 2050, 0, 2047, 2045, 2046, 2038, 2039,
	2040, 2041, 2043, 2044, 0, 0, 0, 0, 0, 5032,
	0, 0, 0, 0, 0, 2034, 2035, 0, 2067, 2068,
	2069, 2078, 2079, 2080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2071, 2065,
	0, 0, 0, 0, 0, 0, 0, 2037, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	2048, 2049, 2055, 2077, 2054, 2050, 0, 2047, 2045, 2046,
	2038, 2039, 2040, 2041, 2043, 2044, 2090, 0, 0, 0,
	0, 4843, 0, 0, 0, 2036, 0, 2034, 2035, 0,
	2067, 2068, 2069, 2078, 2079, 2080, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2053, 0, 0, 0,
	2071, 2065, 0, 0, 0, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078, 2079,
	2080, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	0, 0, 0, 0, 0, 2071, 2065, 2036, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 2056, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 2053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 2060,
	2061, 2062, 0, 2090, 0, 0, 0, 0, 2042, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 0, 0, 2085, 0, 0, 0, 0,
	0, 0, 2064, 2066, 0, 0, 0, 0, 0, 0,
	2059, 2060, 2061, 2062, 0, 0, 0, 0, 0, 0,
	2042, 0, 2081, 0, 2082, 0, 0, 0, 0, 0,
	0, 2051, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 2059, 2060, 2061, 2062, 0,
	0, 0, 0, 2075, 0, 2042, 2057, 2085, 0, 0,
	0, 0, 0, 0, 2064, 2066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2081, 0, 2082, 0, 0, 0,
	0, 0, 0, 2051, 2052, 0, 0, 0, 2075, 0,
	0, 0, 2085, 0, 0, 2083, 0, 0, 0, 2064,
	2066, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 2057, 2081,
	0, 2082, 0, 0, 0, 0, 0, 2087, 2051, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2057, 0, 0, 0, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2063, 2072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2083, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 2058, 0, 0, 0, 0,
	2034, 2035, 0, 2067, 2068, 2069, 2078, 2079, 2080, 0,
	0, 0, 0, 0, 2063, 0, 0, 0, 0, 0,
	0, 0, 0, 2071, 2065, 0, 0, 2076, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 0, 2089, 0, 0, 0, 0, 0, 0,
	2036, 0, 2076, 2074, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 2048, 2049, 2055, 2077, 2054,
	2050, 2053, 2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043,
	2044, 0, 0, 0, 0, 0, 4741, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2048, 2049, 2055,
	2077, 2054, 2050, 0, 2047, 2045, 2046, 2038, 2039, 2040,
	2041, 2043, 2044, 2059, 2060, 2061, 2062, 0, 4740, 0,
	0, 0, 0, 2042, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0, 2047,
	2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0, 0,
	0, 0, 0, 4739, 0, 0, 2075, 0, 2034, 2035,
	2085, 2067, 2068, 2069, 2078, 2079, 2080, 2064, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2071, 2065, 0, 0, 0, 0, 2081, 0, 2082,
	2037, 0, 0, 0, 0, 0, 2051, 2052, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 2090,
	0, 0, 0, 0, 0, 0, 0, 0, 2036, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 2034,
	2035, 0, 2067, 2068, 2069, 2078, 2079, 2080, 0, 0,
	0, 2059, 2060, 2061, 2062, 0, 0, 0, 0, 0,
	0, 2042, 2071, 2065, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 2075, 0, 0, 0, 2085, 2036,
	0, 0, 0, 0, 0, 2064, 2066, 0, 2058, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2053, 0, 0, 0, 0, 2081, 0, 2082, 0, 0,
	0, 0, 0, 0, 2051, 2052, 0, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 2060, 2061, 2062, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 2075, 0, 0, 2074, 2085,
	0, 0, 0, 0, 0, 0, 2064, 2066, 0, 0,
	2048, 2049, 2055, 2077, 2054, 2050, 0, 2047, 2045, 2046,
	2038, 2039, 2040, 2041, 2043, 2044, 2081, 0, 2082, 0,
	0, 4322, 0, 0, 0, 2051, 2052, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078, 2079,
	2080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 2065, 0, 2076, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 2083,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 2090, 2089, 0, 0, 0, 0, 0,
	0, 2087, 2036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2034, 2035, 0, 2067, 2068, 2069, 2078, 2079, 2080,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2071, 2065, 2074, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 2058, 2048, 2049,
	2055, 2077, 2054, 2050, 2084, 2047, 2045, 2046, 2038, 2039,
	2040, 2041, 2043, 2044, 0, 2059, 2060, 2061, 2062, 3733,
	0, 0, 2090, 0, 0, 2042, 0, 0, 0, 2076,
	0, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 2075, 0,
	0, 0, 2085, 0, 0, 0, 0, 0, 0, 2064,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2081,
	0, 2082, 0, 0, 0, 0, 0, 0, 2051, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 2059, 2060, 2061, 2062, 0, 0,
	0, 0, 0, 2057, 2042, 0, 0, 2074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2048,
	2049, 2055, 2077, 2054, 2050, 0, 2047, 2045, 2046, 2038,
	2039, 2040, 2041, 2043, 2044, 0, 0, 0, 0, 0,
	3732, 0, 0, 0, 0, 0, 0, 2075, 0, 0,
	0, 2085, 2083, 0, 0, 0, 0, 0, 2064, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2072, 0, 0, 0, 0, 2081, 0,
	2082, 0, 0, 0, 2087, 0, 0, 2051, 2052, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 0, 2034, 2035, 0, 2067, 2068, 2069,
	2078, 2079, 2080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 2071, 2065, 0,
	0, 0, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 0,
	2058, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2090, 0, 0, 0, 0,
	0, 0, 2072, 0, 2036, 0, 0, 0, 0, 0,
	0, 0, 2076, 2087, 0, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 2059, 2060, 2061,
	2062, 0, 0, 0, 0, 0, 0, 2042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0, 2047,
	2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0, 0,
	2075, 0, 0, 3731, 2085, 0, 0, 2089, 0, 0,
	0, 2064, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 2082, 0, 0, 0, 0, 0, 0,
	2051, 2052, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 2049, 2055, 2077, 2054, 2050, 0, 2047, 2045,
	2046, 2038, 2039, 2040, 2041, 2043, 2044, 0, 0, 0,
	0, 0, 3730, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 2531, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 2065, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 2065, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2532, 2084, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 2056, 0, 2042, 0, 2431, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 2074, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050,
	0, 2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044,
	2081, 0, 2082, 3695, 2429, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 2083, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2087, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 2533, 0, 0, 0,
	0, 0, 0, 2076, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 2430, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2534, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 2076, 2056, 0, 2042, 5560, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2089,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	2428, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 0, 3795, 2073,
	0, 0, 0, 0, 0, 3794, 0, 0, 0, 0,
	0, 2074, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 5559, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 3665, 2083, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2087, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 3666, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 2076, 2056, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2089,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 0, 5138, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 2083, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2087, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 2076, 2056, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2089,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 2072, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 2083, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2087, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 2076, 2056, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2089,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 4895, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 0, 4545, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 2083, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2087, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 4546, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 2076, 2056, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2089,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 2073,
	0, 0, 0, 0, 0, 3801, 0, 0, 0, 0,
	0, 2074, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 3796, 0, 2083, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2087, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 4303, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 2076, 2056, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2089,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 3734, 0, 2083, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2087, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 3761, 0, 0, 0,
	0, 0, 0, 2076, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 2076, 2056, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2089,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 0, 0, 0, 2042, 2034, 2035, 2073,
	2067, 2068, 2069, 2078, 2079, 2080, 0, 0, 0, 0,
	0, 2074, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 2065, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2037,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	2084, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 2090, 0,
	0, 0, 0, 2083, 0, 0, 0, 2036, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 2056, 2051,
	2052, 0, 0, 0, 2072, 0, 0, 0, 2053, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 0, 2067, 2068, 2069, 2078,
	2079, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2071, 2065, 0, 0,
	0, 0, 0, 2083, 0, 2037, 0, 0, 0, 0,
	2059, 2060, 2061, 2062, 0, 0, 2084, 0, 0, 0,
	2042, 2058, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2087, 0, 0, 0, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 2053, 0, 0, 2085, 0, 0,
	0, 0, 0, 0, 2064, 2066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 2051, 2052, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 0,
	0, 0, 0, 0, 0, 0, 2059, 2060, 2061, 2062,
	0, 0, 0, 2076, 0, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 2089,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 2075,
	0, 0, 0, 2085, 0, 0, 0, 0, 0, 0,
	2064, 2066, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2082, 0, 0, 0, 0, 0, 0, 2051,
	2052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 2645, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 2057, 0, 0, 0, 0, 2063,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 0,
	0, 0, 0, 0, 0, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 1113, 0, 1167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 1121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 1137, 0, 1119, 1118, 0, 2048, 2049, 2055,
	2077, 2054, 2050, 2076, 2047, 2045, 2046, 2038, 2039, 2040,
	2041, 2043, 2044, 0, 0, 0, 0, 0, 1139, 0,
	0, 0, 0, 0, 1120, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 1179, 0, 1150, 0, 0, 2089,
	0, 0, 0, 0, 0, 1134, 1135, 0, 0, 0,
	0, 0, 0, 0, 0, 1155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1168, 1125, 0, 0, 0, 0, 0,
	1126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2049, 2055, 2077, 2054, 2050, 0,
	2047, 2045, 2046, 2038, 2039, 2040, 2041, 2043, 2044, 1166,
	0, 1146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1129, 0, 0, 0, 0,
	0, 0, 0, 0, 1117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1131, 1132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1140, 1138, 0,
	0, 0, 0, 0, 0, 1133, 0, 0, 0, 0,
	1151, 0, 0, 1173, 1172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1124, 0, 0, 1178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1122, 0, 0, 0, 0, 1159, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1170, 1157, 0,
	0, 0, 0, 0, 0, 0, 1177, 1152, 0, 0,
	1143, 1141, 0, 0, 0, 1147, 0, 0, 0, 0,
	0, 0, 0, 1148, 0, 0, 1115, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 1161, 0,
	1149, 1130, 0, 0, 0, 0, 1145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 0, 1153, 0, 1154, 0, 0,
	0, 0, 0, 0, 0, 0, 1128, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158,
}

var sqlPact = [...]int32{
	16623, -1000, -1000, -1000, -1000, -1000, -1000, 223, -1000, -1000,
	222, 219, 217, 215, 214, 213, 212, 211, 210, 209,
	208, -1000, -1000, 207, 205, 204, 203, -1000, -1000, 199,
	198, -1000, 189, -1000, -1000, 185, -1000, 182, 177, 174,
	-1000, -1000, 172, -1000, 171, -1000, -1000, -1000, -1000, 167,
	166, 164, 112239, 111622, 112854, 2599, 141198, 122093, 2207, 98677,
	140581, 98060, 139964, 2435, 9117, 139347, 3105, 161, -1000, 138730,
	159, 157, 156, -1000, 121476, 138113, 119010, 118393, 2037, 86880,
	1837, 1833, -1000, 155, 154, -1000, 6725, 82553, 153, 149,
	148, 147, 2735, 146, -1000, 145, 144, -1000, 143, 141,
	-1000, 15672, 1689, -1000, 140, 139, 138, -1000, 691, 117776,
	136, 135, 134, 2861, 132, 130, 80091, 127, 126, 124,
	2632, 3213, -1000, -1000, 2307, -1000, -1000, 123, 122, 121,
	120, 119, 118, 116, 115, 114, 113, 112, 111, 110,
	109, -1000, 108, 106, 105, 104, 103, 101, -1000, 99,
	97, 96, -1000, 95, -1000, 88, 87, 84, 81, 78,
	77, 75, 67, 66, 65, 64, 62, 61, 58, 56,
	161925, -1000, -1000, 54, -1000, 2027, 1831, 1830, 1826, 1054,
	52, 49, 48, 47, 46, 45, 44, 43, 42, 41,
	40, 39, 35, 34, 33, 32, 31, 30, 28, 25,
	24, 21, 20, 194, 18, 16, 15, 14, 11, 10,
	9, 6, 2919, 3990, -1000, 1732, 840, 1321, 35991, 3378,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 150423,
	141813, 5, -60, 4, -1000, 3791, 1038, 65148, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 304, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 488, 2549, 775, -1000,
	-1000, -1000, 137496, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2598, -31, 99292, -1000, 2278, -1000, -1000, -1000, -1000,
	-1000, 773, -1000, 2594, 2545, 395, 2540, 99292, -1000, -1000,
	-1000, 3838, 3747, 111005, 2790, 4307, 4306, 4305, 4304, 4300,
	149808, 2008, 2858, 4299, 4298, 4296, 4294, 4293, 4292, 4290,
	-1000, 110388, 1159, 109771, 109154, 3859, 136881, 108537, 136264, 152889,
	55047, 813, 3837, -1000, -1000, -1000, -1000, -1000, -1000, 141813,
	-1000, 1146, -1000, -1000, 4289, 2263, 771, 120859, -1000, -1000,
	135647, 1970, -1000, -1000, -1000, 974, 1293, 38519, 38519, 38519,
	297, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3852, -1000,
	-1000, -1000, -1000, 141813, 3045, 3045, 1545, 1549, 1549, 3045,
	3045, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4287,
	4285, 4281, 4275, 4274, -1000, -1000, -1000, 1443, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 97443, 28218, 96826, 96209, 107920,
	135030, 54415, 107303, 106686, 91890, 4271, 4266, 53783, 62628, 3988,
	134413, 152272, 3987, 3986, 1145, 2271, 1589, -1000, -1000, -1000,
	-1000, -1000, -1000, -18, 86265, 4065, 141813, -1000, 296, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 53151, 684, 52519, 689,
	51887, 685, 133796, -1000, -1000, -1000, -1000, -1000, 91263, 3744,
	-1000, 133179, 1633, 2787, 4265, 4262, 1249, 4260, 3724, 1891,
	4259, 4258, 4257, 4256, 4255, 4254, 4253, 1631, 132562, 2997,
	131945, 2001, 151655, 2147, 1141, 106069, 112854, 2960, 131328, 1604,
	1552, -1000, -1000, -1000, -1000, 3504, 3210, 3204, 1435, -1000,
	-1000, -1000, -1000, -1000, 68902, 12837, 12749, -1000, -1000, 13855,
	130711, 72027, 112854, 112854, -1000, -1000, -1000, -1000, -1000, -1000,
	51255, 658, 50623, 779, 130094, -1000, -1000, 69527, 3328, 1189,
	-1000, -1000, -1000, -1000, -1000, 129477, 49991, 421, 49359, 764,
	141813, -1000, 3377, 2221, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2952, 1787, 4070, 3098, 90636,
	2301, 1522, 3789, 3501, 3498, 1654, 2259, 3497, 4252, 2925,
	3170, 3492, 3480, 3465, 3459, 3456, 1795, 2916, 407, 2910,
	35359, 3365, 1892, 48727, 1709, 1653, 3447, 3446, 3445, 4089,
	3928, 2205, 2227, 2366, 2244, 95592, 4251, 4249, 3757, 3440,
	3428, 3186, 3419, 2178, -1000, 3326, 1611, 283, -1000, -1000,
	-1000, -1000, -1000, -1000, 283, 1585, -1000, -1000, -1000, -1000,
	-1000, 100522, -1000, -1000, 1443, -1000, -1000, -1000, 1397, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1732, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2685, -1000,
	2267, -1000, -1000, -1000, 2803, 3728, 3728, 3728, 3832, 462,
	457, -1000, 194, 920, 1234, -1000, -1000, 161472, -1000, -1000,
	55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679, 2444, -1000,
	769, -1000, -1000, 818, -1000, 768, 714, 649, -1000, -1000,
	-1000, -1000, -1000, -1000, 766, -1000, -1000, -1000, -1000, -1000,
	-1000, 4028, -1000, 31430, -1000, -1000, -1000, 506, 763, 55679,
	-1000, -1000, 4115, 4111, 1078, -1000, 272, 1023, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3376, 762, 760, -1000, 759, 758, 756, 754, 752, -1000,
	751, -1000, 747, 746, 745, 744, 742, 739, 733, 732,
	-1000, 2303, -1000, -1000, -1000, -1000, -1000, -1000, 704, 700,
	700, 700, -1000, 1129, -1000, -1000, -1000, 292, 696, 289,
	695, 694, 693, -1000, 730, 728, 727, 726, 724, 723,
	720, 719, 718, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1118, -1000, -1000, -1000, -1000, 1431, -21, 141813, -1000, 632,
	-21, -1000, -1000, 717, -1000, 39801, 39801, 39801, -1000, -1000,
	2589, 55679, -1000, 2781, -1000, -11, -11, 941, 67023, -1000,
	63880, 941, 389, 820, 73269, -1000, 3324, -1000, -1000, 716,
	271, -1000, -1000, -1000, -1000, 28843, 3323, 141813, 141813, 141813,
	112854, 112854, 112854, 141813, 4247, 4246, 3464, 55679, -1000, -1000,
	81936, 154734, 113469, 1395, -19, -1000, -1000, 3964, 85640, 81321,
	3375, 154734, 3374, 3320, 154123, 90009, 285, 3586, -1000, -1000,
	715, 4244, -1000, -1000, -1000, -1000, -1000, 3585, 4243, 4241,
	4239, 141813, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2551,
	3579, -1000, -20, -1000, 117159, 2551, 3568, -1000, -20, 2551,
	3566, -1000, -20, 116544, -1000, -1000, 2551, 3563, -1000, -1000,
	281, 3562, -1000, -1000, 275, 3561, -1000, -1000, 269, -90,
	3557, -1000, -1000, -1000, -1000, -1000, -1000, 161472, -1000, -1000,
	-1000, 153506, -1000, 3760, -1000, 141813, -1000, 55679, -1000, -1000,
	3963, 1661, 3800, 3885, -1000, -1000, -32, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2834, 2820, 1236, 2633, -1000, 3620,
	1688, 38519, 3708, -1000, -1000, -1000, -1000, -1000, 266, 28843,
	3179, -1000, -1000, 141813, -1000, 141813, 3045, 3045, -1000, -1000,
	-1000, 4082, 4074, 3045, 3045, 141813, 141813, -1000, -1000, -1000,
	-1000, -1000, -1000, -32, -1000, 5859, 3556, 1733, -1000, 2627,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2138,
	3555, -1000, 2663, 3554, 2124, -1000, -1000, 6868, -1000, 2623,
	-1000, 158212, 1480, -1000, -1000, -1000, -1000, 2516, 3550, -10,
	-1000, -1000, 2507, -1000, 4066, 3237, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 158112, -1000, 1902,
	-1000, -1000, 2292, 2238, -1000, 1406, 3546, -1000, 3096, 3096,
	105452, 3558, 71402, 69527, 86265, -30, -1000, -1000, -1000, -1000,
	-1000, -91, -1000, 27585, 161472, -1000, -1000, -1000, -1000, 2050,
	161472, 971, -1000, -1000, 3544, -1000, 161472, 958, -1000, -1000,
	3540, -1000, 2914, -1000, 3373, -1000, -1000, -1000, 2741, 89382,
	2737, 1060, -1000, 104837, 2255, 4238, -1000, 4233, -1000, -1000,
	4232, -1000, 4230, 4225, 4224, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 104220, 2588, -1000, -1000, 1584, 1030, 92515, -1000,
	2736, 3881, -1000, 103603, 1140, -1000, 1046, 2733, -1000, 1457,
	115929, 894, 2732, -1000, 4223, 3855, 2984, 1046, 2731, -1000,
	-1000, -1000, -1000, -1000, 1086, -1000, 74499, -1000, 74499, -1000,
	1842, -1000, 149193, -11, 112854, 4028, -1000, -66, -1000, -1000,
	-1000, 1038, -1000, 68274, -1000, 68274, 120242, 92515, 1030, 3319,
	78224, 161152, -1000, 1059, -1000, -1000, 161472, -1000, -1000, -1000,
	2911, -1000, -181, 3065, -1000, 92515, 70777, 3317, 2906, -1000,
	161472, -1000, -1000, -1000, -1000, 161472, -1000, -1000, -1000, 92515,
	1584, -1000, 128860, 102986, -1000, -1000, 1602, 2889, -1000, -1000,
	-1000, 69527, 3316, 1409, 92515, 92515, 92515, 92515, -1000, 128243,
	-1000, -1000, 2352, 1736, 3751, 2216, 112854, -1000, 1969, -1000,
	-1000, -1000, 3774, 3549, 141813, -1000, -1000, 3367, -1000, 85025,
	3367, 115314, -1000, 114699, -1000, 114084, -1000, 112854, -1000, 112854,
	-1000, 4219, 4218, 4217, -1000, -1000, 4216, -1000, 4213, 3766,
	-1000, 731, 48095, 161472, 3764, -1000, 4212, 2235, 3365, 161472,
	-1000, 3538, 1841, 1828, 141813, -1000, -1000, 141813, -1000, 141813,
	-1000, 141813, -1000, -1000, -1000, 2615, 1716, -1000, -1000, 2833,
	-1000, -1000, -1000, 1058, -1000, -1000, 112854, 112854, 112854, 112854,
	112854, 1848, -1000, 47463, 3743, -1000, -1000, 3429, 4211, 1864,
	-1000, 1881, -1000, 3315, 3765, -1000, 3314, 1591, 2048, 265,
	4118, 265, -1000, -1000, 288, -1000, -1000, 148578, -1000, 2803,
	-1000, 141813, -1000, 2800, 3348, 3363, 1963, 2612, 2945, -1000,
	46831, 2896, 59471, 2625, 194, -1000, -1000, 194, 194, 37255,
	-1000, -1000, 38519, 920, 85640, 85640, 28843, 1434, 55679, 55679,
	55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679,
	55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679,
	55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679,
	55679, 55679, 55679, 55679, 2458, 55679, 1394, 55679, 55679, 55679,
	55679, 2234, -1000, -1000, 2142, 538, 2306, 714, -1000, -1000,
	-1000, 4014, 4014, 4014, 1035, 1035, 1035, 20492, 20492, 583,
	4210, 818, -1000, 55679, -1000, 131, 67638, 55679, 29470, -1000,
	457, 7980, 2792, -1000, 456, 30132, -1000, -1000, -1000, 31430,
	649, 46169, 55679, 1091, 161472, -1000, -1000, 1464, 4062, 26952,
	3387, 3163, 713, 924, 923, 34697, 34035, 33373, 32711, 919,
	835, 55679, 55679, 55679, 55679, 55679, 55679, 55679, 55679, -1000,
	-1000, 4073, -1000, 4062, -1000, -1000, -1000, -1000, 4062, 1423,
	1402, 4062, -1000, 4062, 4062, 9227, 9227, 45537, 44905, 44273,
	60103, 43641, 55679, 32079, 43009, 42377, -1000, 61999, 141813, -21,
	3962, 141813, 55679, 378, -1000, 12491, -1000, 378, 378, 712,
	-69, 161472, 2884, 2884, 65773, 2789, 2451, 2451, 2451, -1000,
	941, 21216, 941, 126398, 2459, 941, 941, 256, 293, 443,
	63255, 2781, 125783, 801, 711, 3, 2, 0, -1000, -1000,
	-1, -3, -1000, -1000, 112854, 709, 29470, 28843, 252, 2232,
	-71, 2935, 2933, 2932, 2928, -1000, 2924, 2587, -1000, -1000,
	-1000, 2062, -84, 1390, 112854, 141813, 1992, -1000, -1000, -1000,
	-1000, 86265, -22, 86265, 141813, 3742, 112854, -67, -1000, 154734,
	8432, -89, -1000, 1425, 247, 4062, -1000, -1000, -1000, -1000,
	-1000, 4209, 4208, -1000, 1117, 708, 707, 398, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 704, 700, 700, 700,
	-1000, 292, 696, 289, 695, 694, 693, -1000, -1000, -1000,
	-1000, -1000, 3313, 112854, 141813, 1922, 84410, 102369, -90, 113469,
	154734, -86, -1000, -1000, -1000, -1000, 112854, -1000, -1000, 112854,
	-1000, 75733, -1000, 141813, -1000, -1000, -1000, 4207, -1000, 112854,
	112854, 2551, 3534, -1000, 112854, -1000, 112854, 274, 3522, -1000,
	-1000, 141813, -1000, 112854, 112854, -1000, 141813, 141813, 141813, 154734,
	154734, 270, -1000, 112854, 920, -92, 1257, -32, -1000, -1000,
	-1000, -1000, 1443, -1000, 2067, -1000, -1000, -1000, -1000, -1000,
	-1000, 1365, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1078, -1000, -1000, -1000, -1000, 4053, 4032, -29, -1000, -1000,
	28843, -1000, 2170, -1000, -1000, -1000, -1000, 141813, 141813, -1000,
	-1000, 141813, 141813, -1000, -1000, -34, 1827, 606, 1388, -1000,
	94975, 2729, 3749, 4205, 2978, 3735, 1814, -1000, 1715, 688,
	-1000, 3844, 100522, 3900, 3944, 1383, -1000, 3312, -1000, -1000,
	-1000, 970, 1764, 2021, 1386, 1378, 100522, 2663, -1000, 85640,
	-1000, 3033, 3831, 1549, 1515, 1549, 1549, 1542, 1130, -1000,
	100522, 2019, 1375, 1373, 5689, 1372, 2015, 1362, 3486, -1000,
	-1000, 2585, 2665, -1000, -1000, -1000, -1000, 1870, 3084, -1000,
	2842, 1535, 1535, 141813, -1000, 1359, -1000, -1000, 1791, 1890,
	-1000, -1000, 127628, 1942, -1000, 1357, 1355, 143043, 3985, 2685,
	2482, 841, 2202, -1000, 1420, 1353, 3310, -1000, -1000, -38,
	3899, 3925, 1383, -1000, -1000, 3308, 1351, -1000, 1112, -1000,
	-1000, -1000, 3830, 112854, 28843, 1734, 1731, 1724, 2014, 1348,
	-23, -1000, 3893, 1811, -1000, 3996, 92515, -1000, 2761, 1794,
	-1000, 1584, 1584, 122708, 141813, -1000, -1000, -1000, 3788, 3787,
	-1000, -1000, 1346, 1342, -1000, 1111, 7285, 3679, -1000, 154734,
	1111, 1111, 2094, 3521, 3027, 1884, -1000, 3062, 909, 3054,
	-1000, -1000, -1000, 909, -30, 86265, 141813, 245, -1000, 131,
	55679, 55679, 131, 55679, 131, -1000, 3871, 3519, 3961, -1000,
	3509, 4204, 687, -1000, -1000, 2856, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 683, 2726, 3307, 141813, 168, -1000, 112854,
	-1000, 3960, 127013, -1000, 3505, 154734, 2663, 2725, -1000, -1000,
	101754, -1000, 3489, 2218, 488, 2722, -1000, 753, 4200, 3487,
	-1000, 147963, -1000, 3760, 1361, 3481, 1198, 660, 3959, -1000,
	660, 76359, -1000, 141813, -1000, -11, 7343, 93745, -94, -95,
	442, -1000, 141813, 141813, 3694, 2242, 2222, -1000, 1040, 69527,
	-1000, 69527, -97, -1000, -181, 3047, 1671, 69527, -1000, 1030,
	-123, 909, -1000, 909, -1000, 112854, 3359, -1000, 92515, 69527,
	-1000, 1030, 1030, 1030, 1030, -1000, -1000, -1000, -1000, 4199,
	4198, 4197, 4192, -1000, -1000, 1045, 112854, 141813, 112854, -1000,
	3024, 1768, -1000, 244, -1000, 154734, -1000, 154734, 141813, 112854,
	-1000, -1000, 1045, 141813, 1045, 141813, 1045, 141813, 1045, 1045,
	-1000, -1000, -1000, -1000, -1000, 131, -1000, -1000, 161472, -1000,
	55679, -1000, -1000, 1708, 4190, 1854, -1000, 3350, -1000, 3349,
	-1000, 37, 243, -1000, -1000, 4071, 2149, -1000, 4110, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4189, 3737,
	161472, -1000, 88755, 1974, -1000, -1000, -1000, -1000, 112854, 112854,
	112854, 112854, 141813, 3675, -1000, 141813, 3662, 3672, 112854, -1000,
	4117, -1000, -1000, 100522, -1000, 2800, 3348, -1000, -1000, -1000,
	-1000, -1000, -1000, 1623, 2554, -1000, 2888, -1000, 1745, -1000,
	-1000, -1000, 161472, 60735, -1000, -1000, 161472, 2061, -1000, 58839,
	58207, -1000, -1000, 1899, 112854, 2949, -1000, 2949, -83, -1000,
	158952, 2887, 112854, -29, 38519, -1000, -1000, -1000, -1000, -1000,
	969, 1617, 1617, 1456, 1456, 1456, 1456, 3886, 4136, 2214,
	1110, 9901, 9901, 8138, 8138, 8138, 8138, 8138, 9901, 2196,
	1035, 1035, 2196, 2196, 2196, 2196, 2196, 1035, 1035, 1035,
	9901, 9901, 9901, 1035, 20492, 9112, 11575, 55679, 55679, 1325,
	1984, 538, 10559, 55679, 13002, 13002, 13002, 13002, -1000, 2039,
	-1000, -1000, -1000, -1000, 3306, 682, 60103, 60103, -1000, -1000,
	-1000, -1000, 30781, 55679, -1000, -1000, -1000, -1000, 41715, -1000,
	-1000, 157723, -336, 441, -1000, 242, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 436,
	-59, 36, -1000, 55679, 55679, 55679, 435, -1000, 239, 55679,
	141813, -1000, 18351, 800, -132, -1000, -100, 1558, -1000, 55679,
	-1000, -1000, 1324, -1000, 1323, 1322, 1320, -1000, 678, 431,
	-1000, 238, -1000, 2448, 674, 672, 55679, -1000, -1000, -1000,
	-1000, -1000, 157420, -1000, -1000, 157301, -1000, -1000, 156988, -1000,
	-1000, 156827, -1000, -1000, -1000, -1000, -1000, 161052, 17658, 17174,
	14950, 6776, 14648, 13933, -102, 430, -105, 428, 965, 963,
	427, 424, 423, -110, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -112, 422, -1000, 3305,
	-59, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 419,
	-1000, 415, -1000, 160732, -59, 412, 7696, -1000, 60103, 60103,
	60103, 60103, 411, -1000, 158632, -1000, 160632, 41083, 41083, 41083,
	410, 160312, 55679, -59, -117, -1000, -118, -1000, -1000, -1000,
	-1000, 584, -120, -1000, -135, 1065, 39801, 64521, 28843, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1065, 1065, 55679, -1000, 55679, 2900, -1000, -1000, -1000,
	-1000, 2897, 2727, 2884, 65773, -1000, -1000, -1000, -1000, 126398,
	-1000, 4028, 3230, -1000, 126398, -1000, -1000, 141813, 632, -1000,
	126398, 126398, 28843, 941, -1000, -1000, 141813, 624, 941, 126398,
	814, -1000, -1000, -1000, -1000, -1000, 409, 78849, 36, 234,
	28843, 1046, -1000, -1000, 3005, 3005, 3005, 3005, 3005, 112854,
	-1000, -1000, 154734, 1319, -28, -87, 3046, 3044, 3040, -30,
	86265, -30, -91, 141813, -25, 3994, -262, -1000, 2322, -1000,
	85640, -1000, 816, 1190, 28843, -1000, -1000, -1000, 671, -1000,
	4062, 4062, -1000, 4062, 154734, 3304, 264, 3036, 3034, 3032,
	-1000, 2581, 99292, 227, -90, 154734, -1000, 285, -140, -1000,
	-1000, 83783, 79464, -1000, 2453, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4181, -1000, 2551, -1000, -1000, 112854, 2551, 2551,
	-1000, 112854, 112854, 2551, -1000, 281, -1000, 275, -1000, -1000,
	-90, -1000, 1056, 38519, -1000, 1443, -1000, -1000, 1746, -1000,
	2236, -1000, 1396, -1000, -1000, 38519, -1000, 3697, -1000, 2024,
	-1000, -1000, -1000, -1000, 4629, 141813, 141813, 112854, -1000, 123938,
	141813, -1000, 2414, 154734, -1000, 2720, 147348, 2691, 146733, 85640,
	-1000, -1000, 667, 1019, 2875, 2874, 1195, 141813, 141813, 2873,
	146118, 145503, -1000, 4180, 141813, 2359, 55679, 123938, 3828, 2446,
	5563, 131, 131, -1000, 131, -1000, -1000, 666, 1352, 112854,
	112854, 141813, 154734, 112854, 2051, -1000, -1000, -1000, -1000, -1000,
	101137, -1000, -1000, 1549, -1000, -1000, -1000, 1549, -1000, 1549,
	2663, 2042, 141813, 154734, 112854, -1000, -1000, -1000, -1000, 141813,
	141813, 154734, 2578, 2664, 2575, 3081, -1000, -1000, -1000, -1000,
	-1000, -1000, 154734, 144888, 2201, 144273, 2199, 2198, -1000, -1000,
	-1000, 2182, 2197, 2410, 2009, 141813, -1000, -1000, -1000, -1000,
	-1000, 1646, -1000, 841, 1318, 3302, 55679, 55679, 2380, 131,
	131, -1000, 131, 664, 28843, -1000, 1391, -1000, 3353, 141813,
	4109, 143658, 4108, 141813, 141813, 141813, 154734, 3731, 141813, -26,
	-1000, 1725, -1000, 3996, -1000, 911, -1000, -123, -27, -130,
	-1000, 908, 906, -91, 2263, 141813, 154734, -1000, 143043, 7285,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2353, 2999, 1204,
	141813, 1406, -1000, -1000, 2007, 1317, 1312, 100522, 2362, 2005,
	2106, 154734, 69527, 1042, 69527, 3000, -1000, -1000, 26319, -1000,
	161472, 161472, -1000, 161472, -1000, 83168, 92515, 92515, 141813, -1000,
	76984, 141813, 94360, 1011, 3476, 75116, -91, 1030, 1584, 3397,
	1862, -130, 663, 141813, -1000, -1000, 2663, 3473, 488, 2717,
	-1000, 154734, 1134, 3958, 3472, 662, 4178, 4175, -1000, 112854,
	2574, 2713, -1000, -1000, 142428, 3439, 841, 141813, 1065, 65773,
	2241, -1000, 72654, 1172, 141813, 2144, 218, -1000, -1000, -1000,
	13, 141813, -1000, 819, -1000, -1000, 7343, 7343, 1030, 70152,
	-141, -1000, 233, 651, 905, 904, -1000, 2895, -1000, -181,
	-1000, 92515, 1040, 69527, 3294, -181, 3030, 3286, -1000, -1000,
	1055, 1030, 1568, 3028, 1030, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -13, -1000, 2004,
	2102, 141813, -90, -90, -47, -1000, -1000, 231, -28, -1000,
	1045, -1000, 1045, -1000, 1045, -1000, -1000, -1000, 161472, -1000,
	-1000, -1000, 1840, 1807, 141813, -1000, 141813, 3346, -1000, 141813,
	-1000, -1000, 4174, -1000, -1000, 28843, 141813, 112854, 28843, 112854,
	3345, 3342, -1000, -1000, -1000, 141813, -1000, -1000, 141813, -1000,
	-1000, -1000, -1000, -1000, -1000, 1224, -1000, 2061, 2550, -1000,
	649, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2807, -1000, -1000, 37255, 950, -1000, -1000, 112854, -14, -29,
	55679, 55679, 8363, 7477, 55679, 60103, 60103, -1000, 55679, 7122,
	-1000, -1000, -1000, -1000, -1000, 3281, 647, 55679, 85640, 6344,
	5909, -1000, 408, 12060, 2196, -1000, 55679, -1000, 570, -1000,
	404, 40451, -1000, 159372, 17, -142, -1000, 21864, -59, -143,
	-1000, -1000, 810, -1000, 3463, -1000, 55679, 160212, 2782, 2191,
	2056, 1880, 4062, 4107, 25686, -1000, 77609, 1081, 2491, 156599,
	-1000, -1000, -1000, -1000, 85640, 85640, 55679, 55679, -1000, 55679,
	55679, 55679, -1000, -1000, -1000, 4062, 951, -1000, -1000, -1000,
	951, -1000, -1000, 1549, -1000, 1549, -1000, 55679, -1000, -1000,
	3273, 55679, -1000, 85640, 85640, 60103, 60103, 60103, 60103, 60103,
	60103, 60103, 60103, 60103, 60103, 60103, 60103, 60103, 60103, 60103,
	60103, 60103, 60103, 60103, 60103, 2843, 60103, 4012, 4012, 4012,
	1052, -1000, 3340, 3273, 55679, 55679, 85640, 403, 400, 394,
	-1000, 55679, -59, -1000, -1000, 13245, 644, -1000, 2795, -1000,
	141813, -1000, 3160, -1000, 55679, -1000, -136, -1000, 2781, -1000,
	-1000, 3160, 3160, -148, 161472, 65773, 65773, -1000, 642, 55679,
	2894, -1000, -1000, 799, -328, -1000, 903, -1000, -1000, -1000,
	-1000, -1000, -1000, 893, -1000, 632, -1000, -1000, -1000, 195,
	126398, 624, -1000, 141813, 126398, 798, -1000, -149, -1000, -1000,
	-150, -1000, 125783, 383, 28843, -1000, 1065, 3496, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2902, -262, 154734, 154734, 2003,
	1997, 1987, -30, -91, 2539, -1000, 3178, 4104, -1000, 4063,
	807, 794, 180, 4062, 379, 374, 372, -90, 154734, 154734,
	1983, 1959, 1933, 80706, 3267, 154734, -1000, -1000, -1000, 76984,
	85640, -1000, 85640, -1000, -1000, -1000, -1000, 2551, -1000, -1000,
	-1000, 274, -1000, -1000, -1000, -1000, 2995, -1000, -32, -1000,
	-1000, -1000, 55679, -1000, 1015, -1000, -1000, 3748, 622, 1310,
	1304, -1000, -155, -1000, 892, -1000, -1000, -1000, -1000, -1000,
	3182, -1000, 3471, -1000, 2712, -1000, 1178, 2708, 1759, -1000,
	55679, 618, 2982, 616, 615, 4172, 2351, 4168, 1197, 3470,
	2551, 3462, 2551, -1000, -1000, -1000, 990, -1000, 161472, -156,
	-1000, 2446, -1000, 613, 612, -1000, -34, 1804, 587, 1298,
	1053, -1000, -1000, 55679, 55679, 125168, -1000, 537, 3754, -16,
	-1000, -1000, -1000, 1930, 1297, 1295, -1000, -1000, -1000, -1000,
	-1000, 2663, 1929, 1292, 1291, -1000, -1000, -1000, -1000, -1000,
	-1000, 3413, 2971, 2662, -1000, -1000, -1000, -1000, 2707, -1000,
	141813, -1000, 3458, 141813, 3041, 841, 141813, 3754, 3153, 1051,
	-1000, 3408, 3407, 948, 141813, 55679, 55679, 159892, 159792, -1000,
	1050, -1000, -1000, 55679, -1000, -38, -1000, 1289, 3901, 2705,
	112854, -1000, 2551, 3455, 1288, -1000, 1286, -1000, -1000, -1000,
	3891, 3887, 1313, 1811, 92515, 69527, 2678, -1000, 3866, 2537,
	4027, 3996, 69527, -1000, 122708, 92515, 92515, -1000, -1000, -1000,
	4027, -1000, -1000, -1000, -1000, 88128, -1000, -1000, 1111, 141813,
	154734, 112854, 2040, -1000, -1000, 99292, 99907, 141813, 3027, -90,
	909, -1000, 2899, 909, 1042, 3262, -1000, 2940, -1000, -1000,
	1049, 370, -40, -1000, 1345, 4167, 369, -157, -41, 85640,
	-1000, -1000, -1000, -1000, 2691, 112854, 141813, 1392, 2981, 141813,
	141813, 3957, -1000, 2604, 656, 112854, 946, -1000, 4028, -1000,
	-1000, -1000, 141813, 39801, 122708, -1000, 3880, 112854, 3954, 3454,
	1046, 112854, 131, 112854, 4090, -1000, -1000, 3953, 112854, 3452,
	2572, 2698, 2848, 841, 93130, 1046, 2489, -52, -1000, 2144,
	39151, 3750, -158, -1000, -1000, -1000, 1065, 76359, 65773, 55679,
	4166, -164, -1000, -1000, -1000, -1000, -1000, 92515, 1030, 141813,
	141813, 4165, 92515, 92515, 92515, -44, 611, -1000, 888, 887,
	883, -1000, -1000, -1000, -1000, -1000, -1000, 882, 874, 873,
	872, -1000, -1000, 1040, -1000, -1000, -181, 69527, 1040, 69527,
	131, -1000, 2520, -1000, 112854, 69527, -1000, 25053, 141813, 3024,
	-1000, 87495, -1000, -1000, -1000, -1000, -1000, 1045, -1000, 4103,
	-91, -1000, -1000, -1000, -1000, 2385, 2624, 2385, 2088, 2085,
	-1000, -1000, -1000, 2548, -1000, -1000, -1000, -1000, 2954, 3719,
	28843, 3860, 13002, 55679, 55679, 5923, 1326, 459, 13002, 55679,
	55679, 85640, 161336, -165, 55679, 55679, -1000, 55679, 791, 161472,
	-1000, 4102, 55679, 366, 359, -1000, -1000, -1000, 4041, -1000,
	-1000, -1000, 161472, 55679, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 356, -1000, 151, -1000, -1000, -1000, 151038, -1000, 55679,
	355, 3823, -1000, 354, 350, 10948, 353, 156171, 156126, 156054,
	331, -1000, -1000, 329, 328, 161472, 3340, 161472, -1000, -1000,
	1068, 1068, 1470, 1470, 1470, 1470, 4012, 954, 477, 646,
	521, 521, 521, 839, 1052, 1052, 521, 521, 521, 1052,
	3260, 2839, 609, 8065, -1000, -1000, 161472, 161472, 326, -1000,
	-1000, -1000, -59, 325, 13245, -1000, -1000, 3154, 3822, 161472,
	-1000, 65773, 3154, 3154, -1000, -1000, 2727, 141813, 161472, 65773,
	-1000, 3230, -1000, 23148, 22509, -1000, 28843, -1000, -1000, -175,
	-1000, 85640, -1000, -1000, -1000, 4028, -1000, 78849, -1000, -1000,
	38, -1000, 3496, -1000, 870, -1000, -1000, 92515, 92515, 4164,
	4163, -1000, 4101, 4100, 2468, 4099, 3005, -1000, -262, -163,
	141813, 141813, 141813, -1000, 2536, -1000, 788, 4162, 806, 28843,
	324, -1000, -1000, -1000, -90, -90, 141813, 141813, 141813, 3257,
	112854, 141813, 1797, 154734, -90, -1000, -1000, -1000, -1000, -1000,
	-1000, 3692, 161472, 3339, 3140, 3134, 141813, 141813, -1000, 123938,
	38519, 1540, 124553, 141813, 3449, -1000, 3437, -1000, 1195, 2658,
	155469, 66398, -1000, 66398, 141813, -1000, -1000, -1000, -1000, 2208,
	1871, 4161, 1241, -1000, 3776, 141813, -1000, 141813, -1000, -1000,
	-1000, 123938, -1000, 141813, 141813, 112854, 141813, -1000, 154734, 3418,
	-176, 161472, -46, -1000, 869, -1000, 1476, -1000, 24420, 141813,
	154734, 112854, 141813, 154734, 112854, 141813, -1000, 2970, 3436, 1171,
	141813, -1000, 3435, 141813, 1170, -1000, -1000, 141813, 2408, -1000,
	-1000, 3401, -1000, 161472, 159472, 131, 55679, 3417, -184, 28843,
	-1000, 4097, 4095, 3433, 3782, -1000, 141813, 4094, 141813, 112854,
	3689, -1000, -1000, -1000, -1000, 868, 867, 866, 865, 864,
	4008, 122708, -1000, 1043, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1925, 1285, 1283, 2570, 2569, 2522,
	-47, 2362, 1042, -48, 607, -1000, 1042, -1000, 92515, 69527,
	4158, 2134, 76984, 55679, 55679, -1000, 2972, -1000, 119625, 94360,
	2533, -1000, -1000, 604, 141813, 141813, 603, -1000, 131, -1000,
	4155, 123938, 598, -1000, 2517, -1000, 787, -1000, -1000, 190,
	-185, 154734, 2663, 131, 112854, -1000, 488, 1037, 488, 318,
	-50, -1000, 3451, 1186, 28843, 112854, 3432, 2851, 841, 93130,
	-1000, 1361, 2945, -1000, -51, -1000, 527, 131, 2489, -1000,
	-52, 161472, -1000, 863, 316, -1000, 3687, -1000, -1000, -190,
	-1000, -1000, 3448, 3448, 92515, 69527, 92515, 92515, 92515, 69527,
	92515, -1000, 1040, 3952, -1000, -181, -1000, 2656, 1030, 1030,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28843, 1752,
	-1000, 589, 588, -1000, -1000, -1000, -1000, 3719, 13002, 13002,
	55679, 55679, 55679, 13002, 161336, -197, -1000, 13002, 13002, -59,
	-1000, -1000, 159372, -1000, -1000, -1000, 161472, -1000, 23787, 2398,
	-1000, 155397, -1000, 37255, -1000, -1000, 55679, 55679, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 60103, 3247, 586, 85640,
	-1000, -1000, 314, 1063, 55679, 57575, 2781, 1063, 1063, -1000,
	-198, -1000, -1000, -1000, 4028, -1000, 4028, 38, -1000, 141813,
	-1000, -1000, -1000, 28843, -1000, 92515, -1000, -1000, -1000, -1000,
	-1000, 4153, 4151, 2659, 4150, 4147, -1000, -1000, -1000, 3390,
	-174, -182, -183, -1000, 780, -1000, 4144, -1000, -1000, 179,
	173, 163, 154734, 3243, 160, 3018, 3016, -90, -1000, 131,
	-1000, -1000, -1000, -1000, -1000, -1000, 3014, 3951, -1000, 2194,
	-1000, 141813, 141813, -1000, 141813, -1000, 28843, 141813, 3185, 1377,
	-1000, 1019, 2872, 579, 60103, 1218, 112854, 973, 3127, 3125,
	-1000, 3977, 3819, 3102, -200, -1000, 141813, 55679, 141813, -205,
	-206, 2636, -1000, -1000, 1216, 1349, 55679, 1213, -1000, -1000,
	-1000, 85640, 567, 2551, 2551, -1000, -208, -213, -1000, -1000,
	-1000, 55679, 1281, 141813, 37887, -1000, 4143, 3754, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 141813, 141813, -1000, -1000,
	-1000, 141813, 3754, 141813, -1000, 55679, -1000, 159052, 55679, 1276,
	-1000, -1000, -1000, 4093, 2551, 28843, 2551, -1000, 2551, 3782,
	1240, 92515, 55679, 1644, 69527, 69527, -1000, -1000, -1000, 2601,
	141813, 154734, 112854, 2044, 2044, 3221, -1000, -1000, -1000, 2678,
	2678, -1000, -54, 1042, -1000, 1783, -1000, 161472, 161472, 2395,
	4142, -1000, -1000, -1000, -1000, 2869, -1000, -1000, -1000, 141813,
	2867, 3100, 66398, 546, 545, 141813, 1031, -1000, -214, 94360,
	1011, 991, -1000, 74499, -1000, -1000, -1000, -1000, 488, 3950,
	-1000, 2986, 3943, -1000, 4092, 543, 542, 141813, 2566, 539,
	28843, 3740, 841, 93130, -1000, 3439, 2144, -1000, 2674, 141813,
	3733, -1000, 2945, 538, 1030, 536, 1030, -1000, -216, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1415, 1040,
	-55, -1000, 956, 898, -1000, -1000, -1000, -1000, 112854, 112854,
	55679, 55679, -1000, 13002, 13002, 13002, -1000, 312, -1000, -1000,
	2489, 3818, -1000, -56, 155352, 20392, 5790, 60103, 85640, -219,
	-1000, -1000, 141813, 161472, -57, -1000, 161472, 535, 533, 478,
	-1000, -1000, -1000, 786, 571, -1000, -1000, -1000, -1000, 4141,
	-1000, -1000, -1000, 154734, 154734, 154734, 4140, -1000, 154734, 154734,
	154734, -90, 154734, 154734, 1906, 1894, -1000, 123323, 141813, -1000,
	-1000, 1759, 2552, -1000, -1000, 141813, 2692, -1000, -1000, -1000,
	1047, 55679, 8065, 60103, 532, 55679, -1000, 529, 528, 3940,
	3628, -1000, 2963, 3219, 2174, 66398, -1000, 3719, -1000, 19972,
	-1000, 1182, 2212, -1000, -1000, -1000, -1000, 161472, 60103, 3782,
	66398, -1000, -1000, 525, 518, 161472, 517, 861, 3240, -1000,
	-1000, -1000, -1000, -91, -91, -1000, -1000, 161472, 131, 161472,
	507, 3901, -1000, -1000, -1000, -1000, 2551, 112854, -1000, 161472,
	-1000, -1000, -1000, -1000, 859, -1000, -1000, -1000, 1275, -1000,
	-1000, -1000, -1000, -1000, 4134, 3235, 99292, -1000, -222, 2209,
	85640, -1000, 1011, -1000, -1000, 2533, 505, -1000, 1029, 2904,
	2904, -224, 66398, 66398, -225, 2553, 2967, -1000, 311, 3939,
	991, -1000, 4035, -1000, 1065, -1000, 3936, 131, 3684, -1000,
	131, -1000, 4090, 66398, -1000, 112854, 66398, 2565, 2298, 2828,
	93130, -1000, 2848, -1000, -1000, -227, 141813, 2144, -1000, -1000,
	92515, -1000, -1000, 4055, -1000, 2656, -1000, 141813, -1000, 141813,
	-1000, -1000, -233, -235, -1000, 2339, 55679, 37255, -1000, -1000,
	5790, -238, -1000, -58, -1000, 3935, 57575, 4133, 4131, 4130,
	-1000, -1000, -1000, -262, -262, -262, -1000, -90, -90, -90,
	-90, -90, 141813, 141813, -1000, 2193, -1000, 2691, -1000, -1000,
	3427, -1000, 3155, 502, 19733, 8065, 2799, 141813, 19226, 2663,
	2663, -1000, 3933, 3214, -1000, -1000, 2380, 501, -1000, -1000,
	-1000, -1000, 950, 141813, 1029, 3147, 112854, 8065, 1193, -240,
	2385, 2385, 55679, 36623, 2402, -1000, 55679, -1000, -1000, 3782,
	69527, 154734, -1000, 154734, 2562, -1000, 3202, 6565, -1000, 2553,
	141813, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1182, -246, -248, -1000, -1000, 3768, -1000,
	3682, 2972, 131, -1000, -1000, -1000, 131, -1000, 4124, 1037,
	310, -249, 1186, -251, 112854, 2177, -1000, 841, -1000, 2851,
	1065, 3564, -1000, -254, -1000, -1000, -1000, -256, -261, -1000,
	-1000, 308, 56943, 56943, 56943, -59, -83, -1000, 141813, 498,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 158, 150, -1000,
	-1000, 3396, 940, -1000, 845, 2078, 307, 1188, 282, 165,
	-1000, -1000, -1000, 3102, -1000, 141813, -1000, -1000, -1000, 940,
	488, -1000, 55679, 1182, -263, -1000, 1169, -264, -1000, 1165,
	-271, -1000, 3229, -1000, -272, 2551, -1000, -262, 270, 2044,
	1032, 3863, 2546, 6565, -1000, 4088, 93130, -1000, -1000, -1000,
	2819, -277, -1000, -1000, 2174, 1182, 2380, 2750, -1000, 2395,
	1031, -1000, -1000, -1000, -1000, 1182, 486, 2174, 482, 1674,
	841, -1000, -1000, 1549, 3740, 3553, 1512, 1030, -1000, -1000,
	-1000, 3430, -1000, 61367, 2547, 2079, 158532, 3430, 3430, -1000,
	-1000, 154734, 154734, 141813, 1029, 3846, -1000, 928, 918, 1672,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1065, -287,
	-1000, 2799, 161472, 1029, -1000, 2385, 3012, -1000, 2385, 3222,
	-1000, 2355, -1000, -1000, -1000, -1000, 3211, -1000, 2029, 4002,
	-1000, -1000, 3895, 55679, -1000, -1000, -1000, -1000, -1000, -1000,
	1029, 141813, 2380, 2174, 1029, 2055, 2045, 4123, 1011, 2553,
	2174, 66398, 2380, 66398, 2338, -1000, 141813, -1000, 2298, 1508,
	-1000, 1805, -1000, -1000, 2262, 3972, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -90, -90, -1000, -1000, 855, -1000, 3527,
	-1000, 1209, 2357, 2357, -1000, -1000, 845, -1000, -1000, 481,
	-1000, 479, -1000, 154734, 2512, -1000, -1000, -1000, 161472, -1000,
	-1000, 1029, 2380, 1065, -1000, 4121, -1000, 2553, -1000, 2380,
	-288, 1029, -289, 2426, -1000, -1000, -91, 2177, -1000, 1800,
	76359, 2075, -1000, -1000, 2486, 56311, 55679, -1000, 3998, -1000,
	-1000, 2885, -1000, 3102, 55679, 55679, 270, 73884, 13759, 1065,
	1029, 1354, -1000, 2819, 1029, 1182, 1065, 2174, 1878, 841,
	1674, 76359, -280, -1000, -1000, -1000, 161472, -1000, -1000, -1000,
	-1000, -304, -307, -1000, -130, 122708, -325, -1000, -1000, -1000,
	1354, 1065, -1000, 1101, -1000, -1000, 1065, 2174, 1354, 2380,
	-1000, -1000, 2182, 154734, 2338, -280, -1000, 2380, 1274, -310,
	-1000, -1000, 1354, -1000, 1354, 2380, -1000, 1029, -1000, 1878,
	-1000, -1000, -1000, 473, -1000, -1000, -1000, 1029, 1065, -1000,
	55679, 1065, 1354, -315, 1354, -1000, 2380, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5049, 5047, 21, 5045, 5044, 5041, 5040, 5034, 5033,
	5032, 5030, 5028, 5027, 5023, 5019, 171, 5018, 5017, 5015,
	5014, 5011, 5008, 5006, 5005, 5003, 5002, 4993, 4990, 4987,
	4986, 4985, 4982, 4980, 4979, 4978, 4977, 4976, 4974, 4973,
	4971, 4970, 4965, 4964, 4963, 4962, 4961, 4960, 4959, 4958,
	4957, 4956, 4955, 4954, 4950, 4948, 4947, 4946, 4945, 4943,
	4939, 4937, 4936, 4935, 4934, 4933, 4932, 4930, 4929, 4928,
	4927, 4926, 4925, 4924, 4921, 4920, 4919, 4918, 4914, 4911,
	4910, 4908, 4903, 4902, 60, 4900, 4898, 4895, 4892, 4888,
	4887, 4886, 4885, 4884, 4883, 4879, 4876, 4874, 4873, 4871,
	4870, 4868, 4867, 4866, 4864, 4863, 4861, 73, 4860, 324,
	4859, 4858, 4855, 4854, 4853, 4852, 4850, 4846, 4845, 4844,
	4843, 4842, 4841, 4840, 323, 4839, 28, 200, 4837, 4834,
	15, 4833, 4832, 322, 4831, 4829, 4826, 4825, 4824, 331,
	4822, 4821, 4819, 4818, 4817, 304, 4814, 4812, 4811, 4810,
	4809, 4807, 140, 228, 4806, 4801, 738, 4794, 4793, 4785,
	4783, 4781, 4779, 4777, 299, 311, 4775, 4773, 4771, 306,
	195, 4769, 319, 4768, 4767, 4766, 4765, 4764, 4763, 4762,
	4761, 4760, 4749, 4744, 4739, 4735, 4732, 4730, 4727, 4722,
	4719, 4718, 4717, 4715, 4714, 4710, 4709, 4708, 4707, 4701,
	4695, 4692, 4691, 4690, 4689, 4688, 4687, 4684, 4682, 4674,
	4673, 4672, 4671, 4669, 4667, 4666, 4664, 295, 250, 150,
	4663, 4660, 4658, 4656, 4655, 4652, 318, 317, 4651, 4648,
	4647, 4646, 4644, 3881, 4643, 4642, 4640, 4638, 4637, 4636,
	4633, 4631, 4629, 144, 7, 106, 4628, 4626, 109, 107,
	105, 97, 125, 123, 4625, 4623, 146, 4622, 162, 133,
	4621, 148, 136, 40, 2, 336, 296, 9429, 291, 4620,
	4619, 4614, 303, 237, 4613, 285, 4612, 4611, 4610, 4609,
	4608, 4602, 91, 57, 257, 4601, 170, 4596, 4595, 165,
	204, 221, 214, 207, 211, 87, 61, 126, 99, 78,
	52, 22, 96, 255, 27, 253, 1, 6, 314, 4594,
	307, 13, 172, 14, 46, 4593, 4591, 4590, 4589, 4415,
	129, 4588, 315, 284, 203, 4587, 4586, 4584, 749, 4581,
	4573, 58, 305, 116, 103, 128, 256, 157, 4572, 187,
	201, 41, 4571, 288, 84, 4570, 4568, 124, 114, 11380,
	9601, 4567, 4566, 145, 79, 135, 3950, 199, 181, 241,
	142, 160, 206, 192, 4565, 131, 4561, 220, 180, 212,
	216, 4558, 111, 4554, 3916, 94, 213, 189, 7008, 4552,
	4551, 4549, 100, 4546, 130, 4544, 4543, 80, 25, 5,
	4, 174, 44, 48, 3, 4542, 34, 155, 59, 35,
	4541, 38, 4534, 4528, 4527, 4526, 56, 4523, 66, 197,
	4522, 4520, 325, 4517, 113, 67, 76, 4516, 112, 266,
	4515, 280, 161, 4514, 4513, 227, 233, 236, 215, 262,
	4512, 83, 276, 4511, 4510, 4508, 4507, 4506, 330, 164,
	11, 163, 4505, 4499, 188, 4496, 62, 289, 240, 4494,
	70, 4489, 4487, 226, 63, 173, 327, 205, 267, 151,
	274, 230, 277, 4486, 4483, 4480, 231, 4474, 4467, 273,
	202, 4466, 4465, 270, 335, 110, 55, 10, 210, 98,
	282, 102, 235, 191, 4464, 242, 177, 4463, 185, 4462,
	121, 4461, 329, 224, 260, 53, 33, 17, 118, 132,
	4460, 8, 279, 194, 251, 147, 4459, 8196, 2731, 3469,
	281, 4456, 186, 167, 95, 153, 190, 309, 101, 4455,
	4452, 2909, 4451, 4450, 4449, 4447, 229, 4446, 4445, 261,
	184, 179, 4443, 175, 254, 4442, 122, 85, 68, 30,
	158, 108, 320, 149, 272, 222, 300, 4441, 4439, 4438,
	225, 4437, 86, 152, 244, 4435, 247, 310, 65, 4434,
	292, 4433, 182, 2690, 90, 183, 4432, 271, 4431, 4430,
	4429, 4428, 4427, 4426, 4425, 2685, 283, 4424, 4423, 4421,
	45, 239, 4420, 238, 198, 218, 82, 74, 234, 115,
	4252, 156, 154, 243, 47, 9, 4417, 77, 4416, 4178,
	69, 4414, 0, 15881, 11630, 14705, 4412, 4411, 14979, 4410,
	6065, 4409, 4407, 4406, 263, 93, 4404, 4401, 4399, 137,
	4398, 104, 4396, 4392, 89, 4391, 37, 24, 26, 39,
	31, 515, 346, 4389, 4388, 71, 168, 18, 4387, 321,
	275, 4386, 4380, 4378, 4377, 119, 4375, 54, 4373, 49,
	4372, 4370, 64, 23, 43, 4369, 4367, 252, 193, 3828,
	196, 176, 4366, 134, 4365, 4364, 294, 81, 166, 4363,
	4360, 313, 245, 249, 120, 4359, 301, 4357, 246, 4356,
	92, 36, 4355, 4354, 286, 141, 139, 72, 290, 169,
	50, 4353, 4352, 4349, 4348, 223, 4347, 4346, 4343, 4340,
	4339, 138, 178, 4338, 75, 4337, 4336, 4335, 51, 258,
	217, 4334, 20, 4333, 4332, 4331, 265, 264, 312, 209,
	259, 4329, 4328, 208, 4325, 4324, 4323, 302, 4322, 4319,
	3880, 332, 4317, 42, 4316, 4315, 4314, 32, 4313, 4312,
	248, 3634, 4311, 4310, 12, 4138, 232,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 14, 14, 10, 10, 10, 10, 11, 11, 11,
	11, 11, 63, 63, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	20, 20, 20, 20, 20, 20, 20, 42, 44, 43,
	37, 37, 38, 38, 39, 40, 40, 45, 47, 46,
	48, 49, 49, 50, 50, 50, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 23, 23,
	51, 51, 24, 24, 53, 53, 25, 25, 54, 54,
	671, 671, 671, 672, 672, 673, 673, 673, 28, 56,
	58, 58, 478, 478, 21, 22, 22, 22, 22, 674,
	674, 674, 674, 41, 29, 57, 34, 34, 34, 34,
	34, 246, 246, 246, 246, 27, 27, 52, 52, 292,
	292, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 670, 670, 294, 294, 293, 279, 279, 280, 280,
	281, 281, 675, 675, 295, 295, 295, 296, 296, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 564,
	564, 564, 595, 595, 595, 595, 597, 597, 722, 722,
	723, 723, 723, 723, 723, 155, 155, 452, 452, 452,
	72, 72, 72, 72, 72, 660, 660, 248, 248, 248,
	250, 250, 249, 249, 249, 249, 249, 249, 249, 249,
	96, 96, 97, 97, 287, 287, 286, 286, 286, 286,
	286, 286, 286, 681, 681, 680, 718, 718, 679, 679,
	682, 682, 682, 247, 247, 247, 93, 93, 114, 114,
	151, 151, 151, 151, 151, 151, 151, 151, 152, 152,
	153, 153, 691, 691, 691, 251, 251, 251, 253, 253,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 258, 19, 19, 134, 134,
	134, 134, 134, 134, 134, 129, 129, 599, 599, 600,
	600, 242, 242, 243, 243, 243, 243, 244, 244, 245,
	245, 245, 87, 87, 255, 255, 257, 257, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 75, 75, 75, 75, 75, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 78, 78,
	85, 85, 85, 85, 85, 85, 85, 85, 219, 219,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 92, 92, 92, 92, 92, 103,
	103, 692, 692, 693, 693, 711, 697, 697, 698, 698,
	701, 701, 701, 702, 702, 702, 702, 702, 710, 710,
	710, 710, 710, 704, 703, 705, 705, 706, 706, 708,
	708, 708, 708, 708, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 696, 712, 713, 713, 714, 714, 715, 715, 715,
	122, 122, 122, 717, 717, 716, 716, 699, 699, 700,
	700, 67, 707, 707, 725, 725, 68, 69, 70, 71,
	694, 694, 724, 724, 724, 724, 724, 724, 724, 724,
	724, 724, 724, 724, 724, 724, 724, 724, 724, 726,
	726, 727, 727, 728, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 728, 728, 728, 728, 728, 728, 728,
	728, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	104, 104, 410, 410, 373, 373, 105, 105, 105, 106,
	106, 107, 107, 89, 89, 89, 657, 657, 658, 664,
	729, 729, 555, 555, 554, 554, 109, 109, 451, 451,
	110, 110, 110, 110, 110, 110, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 120, 120, 120, 120, 120, 121, 121, 121, 118,
	118, 118, 115, 115, 115, 113, 113, 113, 119, 119,
	119, 663, 359, 359, 117, 117, 117, 116, 116, 116,
	426, 426, 427, 429, 428, 123, 123, 123, 123, 374,
	124, 124, 124, 124, 124, 124, 124, 124, 127, 127,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 557, 557, 5, 5, 285, 285, 284,
	284, 284, 284, 6, 6, 6, 290, 290, 289, 288,
	125, 125, 125, 519, 519, 130, 130, 130, 467, 467,
	131, 131, 131, 131, 131, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 667, 667, 419, 419, 322, 322, 322,
	322, 143, 143, 143, 143, 144, 144, 144, 144, 145,
	145, 228, 228, 161, 161, 161, 161, 160, 160, 160,
	160, 160, 160, 160, 160, 79, 79, 79, 80, 80,
	81, 81, 82, 82, 83, 83, 84, 84, 84, 84,
	84, 164, 164, 33, 33, 33, 33, 165, 165, 719,
	719, 167, 163, 163, 163, 163, 163, 163, 163, 162,
	162, 166, 166, 166, 166, 168, 170, 170, 170, 170,
	170, 169, 169, 169, 169, 169, 171, 171, 589, 589,
	437, 437, 587, 587, 611, 611, 588, 588, 380, 380,
	380, 380, 380, 381, 381, 381, 598, 598, 598, 598,
	598, 598, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 229, 229, 229, 230, 230, 235, 235, 236,
	236, 236, 237, 237, 237, 234, 234, 234, 231, 231,
	232, 232, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 240, 240, 238, 238, 239, 239, 731, 731,
	730, 730, 241, 241, 241, 241, 241, 200, 200, 200,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 438, 438, 203, 203, 203, 187, 187,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 254,
	254, 254, 254, 254, 179, 179, 179, 179, 179, 179,
	179, 179, 180, 180, 180, 174, 174, 189, 189, 189,
	189, 189, 181, 181, 182, 182, 182, 183, 183, 183,
	183, 211, 211, 186, 186, 186, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 175, 175, 175, 175, 191,
	191, 191, 191, 474, 474, 474, 217, 217, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 214, 214, 214, 214, 214, 214,
	683, 683, 684, 684, 684, 207, 207, 207, 207, 207,
	207, 535, 535, 201, 201, 201, 201, 206, 206, 206,
	206, 185, 185, 185, 185, 209, 209, 209, 209, 457,
	457, 198, 198, 198, 199, 199, 199, 204, 204, 216,
	205, 411, 411, 202, 202, 208, 208, 208, 208, 210,
	210, 210, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 177, 177, 177, 177, 178, 178, 178, 178,
	212, 212, 197, 197, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 732, 732, 193, 193, 193,
	192, 192, 192, 192, 195, 195, 196, 196, 196, 196,
	196, 196, 196, 194, 184, 215, 665, 665, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 659, 659,
	659, 659, 659, 659, 659, 659, 659, 662, 662, 662,
	662, 662, 666, 666, 135, 135, 135, 135, 135, 135,
	135, 146, 146, 146, 146, 146, 146, 146, 149, 149,
	136, 136, 136, 136, 136, 136, 136, 139, 139, 137,
	137, 137, 137, 138, 138, 98, 98, 98, 98, 98,
	18, 18, 18, 99, 99, 313, 313, 263, 263, 263,
	398, 398, 264, 264, 388, 388, 388, 388, 259, 259,
	260, 260, 261, 262, 262, 100, 100, 733, 733, 733,
	676, 676, 676, 677, 677, 677, 677, 677, 677, 382,
	382, 383, 383, 499, 499, 499, 499, 499, 386, 386,
	386, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	396, 397, 397, 389, 389, 395, 394, 394, 393, 393,
	392, 392, 390, 391, 391, 391, 400, 400, 399, 402,
	402, 401, 498, 620, 620, 622, 622, 622, 622, 622,
	622, 622, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 475,
	475, 734, 734, 735, 736, 618, 618, 618, 619, 614,
	614, 615, 615, 615, 615, 615, 384, 384, 385, 385,
	385, 385, 616, 617, 417, 417, 539, 621, 621, 623,
	623, 625, 737, 737, 737, 737, 737, 737, 738, 738,
	738, 497, 497, 496, 496, 495, 495, 408, 408, 626,
	626, 626, 626, 627, 627, 627, 627, 627, 630, 629,
	628, 628, 628, 628, 628, 102, 102, 102, 454, 454,
	453, 453, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	224, 224, 325, 325, 325, 95, 95, 95, 15, 15,
	15, 15, 15, 15, 15, 340, 340, 16, 16, 16,
	16, 678, 678, 678, 101, 101, 101, 101, 101, 101,
	406, 406, 406, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 669,
	669, 668, 668, 326, 326, 740, 740, 108, 108, 108,
	108, 108, 108, 108, 108, 558, 558, 559, 559, 94,
	94, 94, 94, 94, 476, 476, 473, 473, 472, 472,
	416, 416, 537, 537, 537, 538, 330, 330, 331, 331,
	282, 282, 282, 477, 477, 477, 36, 35, 26, 26,
	30, 30, 31, 31, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 32, 32, 60, 60, 60, 60, 61,
	61, 61, 61, 64, 64, 65, 65, 59, 59, 59,
	59, 62, 62, 55, 55, 66, 66, 66, 66, 66,
	685, 687, 687, 686, 686, 690, 690, 690, 690, 690,
	690, 688, 688, 361, 361, 689, 689, 720, 720, 721,
	721, 142, 142, 147, 147, 147, 147, 147, 148, 148,
	148, 148, 150, 150, 150, 150, 159, 159, 220, 220,
	220, 220, 220, 220, 220, 73, 73, 86, 86, 157,
	742, 742, 742, 158, 158, 158, 221, 221, 221, 221,
	222, 222, 223, 223, 741, 741, 323, 323, 492, 492,
	493, 493, 743, 743, 494, 494, 494, 494, 494, 316,
	315, 317, 317, 318, 318, 91, 91, 91, 304, 304,
	303, 306, 306, 305, 307, 307, 308, 308, 301, 301,
	601, 601, 310, 310, 310, 311, 311, 297, 297, 298,
	298, 299, 299, 300, 300, 314, 314, 596, 596, 744,
	744, 133, 133, 133, 227, 227, 372, 372, 372, 485,
	485, 485, 409, 409, 337, 337, 491, 491, 491, 491,
	491, 450, 450, 450, 226, 226, 424, 424, 440, 440,
	441, 441, 551, 551, 442, 140, 140, 141, 141, 156,
	156, 267, 267, 265, 265, 265, 265, 265, 265, 265,
	265, 272, 272, 273, 273, 274, 274, 275, 276, 276,
	276, 276, 430, 430, 277, 277, 277, 266, 266, 266,
	268, 268, 268, 268, 268, 268, 268, 271, 271, 271,
	271, 278, 278, 278, 270, 270, 637, 637, 637, 639,
	639, 641, 641, 640, 640, 636, 636, 638, 638, 739,
	739, 456, 456, 456, 405, 407, 403, 403, 404, 404,
	414, 414, 412, 413, 413, 415, 415, 536, 536, 536,
	283, 283, 283, 447, 447, 447, 447, 448, 448, 481,
	481, 479, 479, 479, 479, 480, 480, 482, 482, 482,
	483, 483, 484, 484, 444, 444, 445, 445, 446, 446,
	446, 446, 515, 515, 269, 269, 269, 421, 421, 421,
	422, 422, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 506, 506, 504, 504, 504, 504, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 541, 542,
	542, 423, 423, 543, 488, 488, 489, 489, 486, 486,
	487, 487, 490, 490, 655, 655, 655, 656, 656, 534,
	534, 544, 544, 544, 544, 544, 544, 530, 530, 531,
	531, 532, 532, 533, 533, 552, 553, 553, 460, 460,
	460, 460, 458, 458, 461, 461, 461, 461, 461, 459,
	459, 545, 545, 545, 545, 449, 449, 225, 225, 546,
	546, 546, 546, 547, 548, 548, 549, 549, 500, 501,
	501, 560, 560, 560, 560, 562, 420, 420, 420, 420,
	420, 613, 612, 612, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 577, 577, 577, 577, 577,
	577, 577, 563, 563, 563, 563, 563, 567, 567, 567,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 568, 568, 573, 573, 574, 574, 574, 569, 570,
	575, 575, 575, 575, 745, 745, 579, 579, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 565, 565, 565,
	572, 572, 572, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 468, 468, 470, 470,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 509, 509, 509, 509, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	631, 631, 631, 631, 631, 631, 631, 631, 511, 511,
	634, 634, 635, 635, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 642, 642, 643, 643, 645,
	645, 646, 646, 647, 648, 648, 648, 649, 650, 650,
	644, 644, 651, 651, 651, 651, 652, 652, 653, 653,
	653, 653, 653, 654, 654, 654, 654, 654, 521, 521,
	522, 522, 528, 528, 528, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	379, 379, 378, 327, 327, 327, 327, 327, 327, 435,
	435, 433, 433, 433, 436, 436, 434, 434, 432, 432,
	431, 431, 518, 518, 516, 516, 520, 520, 462, 462,
	578, 578, 578, 578, 578, 578, 578, 578, 463, 463,
	463, 471, 464, 464, 465, 465, 465, 465, 465, 512,
	513, 466, 466, 466, 514, 514, 523, 527, 527, 526,
	525, 525, 524, 524, 502, 502, 503, 503, 443, 443,
	746, 746, 439, 439, 550, 550, 550, 550, 607, 607,
	376, 376, 425, 425, 375, 375, 367, 367, 368, 368,
	368, 368, 418, 418, 529, 529, 580, 580, 581, 581,
	582, 582, 583, 583, 584, 585, 586, 517, 517, 348,
	347, 334, 335, 346, 345, 344, 333, 336, 341, 342,
	343, 338, 339, 355, 354, 353, 302, 309, 360, 362,
	362, 365, 365, 366, 364, 363, 363, 350, 351, 352,
	556, 332, 369, 369, 370, 370, 370, 371, 371, 371,
	371, 328, 328, 329, 329, 356, 356, 357, 358, 358,
	349, 349, 349, 319, 319, 319, 320, 320, 321, 321,
	594, 594, 591, 591, 591, 592, 592, 592, 695, 593,
	593, 593, 593, 590, 590, 590, 590, 590, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 603,
	603, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 605,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	610, 610,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 9, 7, 9,
	5, 6, 8, 7, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 1, 1, 1, 0, 1, 6, 6,
	4, 6, 2, 1, 4, 8, 7, 10, 9, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 5, 6, 5, 6, 4, 8, 3, 8, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 4,
	4, 2, 1, 1, 3, 1, 3, 2, 4, 3,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 1, 3, 1, 3,
	6, 4, 6, 7, 9, 6, 2, 2, 3, 0,
	8, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 3, 3, 3,
	12, 3, 5, 4, 1, 3, 3, 3, 3, 2,
	4, 4, 4, 1, 1, 2, 1, 4, 1, 0,
	3, 3, 0, 4, 6, 0, 6, 4, 4, 4,
	5, 7, 6, 8, 7, 9, 8, 2, 1, 3,
	1, 3, 3, 3, 0, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 6, 3, 8, 5, 3, 12,
	4, 2, 0, 1, 0, 1, 1, 0, 1, 3,
	1, 3, 3, 3, 3, 2, 2, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 0, 1, 2, 2,
	2, 1, 1, 1, 4, 5, 1, 1, 1, 1,
	3, 3, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 1, 2, 1, 1, 3, 0, 1, 4, 0,
	4, 6, 3, 1, 3, 2, 1, 3, 2, 1,
	3, 5, 1, 2, 1, 0, 6, 6, 6, 8,
	1, 0, 4, 3, 3, 4, 3, 4, 4, 4,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 10, 5, 1, 3, 3, 1,
	1, 0, 2, 0, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 4, 3, 1, 2, 3,
	2, 2, 2, 4, 6, 3, 1, 2, 2, 7,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 7, 4, 7, 8, 8,
	9, 11, 11, 11, 6, 2, 6, 9, 4, 7,
	7, 10, 7, 10, 10, 10, 13, 10, 13, 5,
	8, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 4, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 1, 1,
	2, 1, 2, 2, 2, 9, 2, 1, 0, 1,
	1, 0, 1, 2, 0, 2, 2, 0, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 4, 4, 4,
	3, 3, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 3, 6, 8, 3, 3, 3,
	4, 8, 6, 4, 5, 5, 5, 5, 3, 0,
	1, 1, 1, 1, 4, 4, 3, 4, 4, 3,
	4, 4, 1, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 5, 7, 4, 2, 6, 4,
	3, 2, 3, 4, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 5, 3, 5, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	3, 4, 3, 4, 3, 5, 3, 4, 4, 3,
	4, 5, 3, 4, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 6, 4, 2, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 7,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 5,
	3, 3, 3, 4, 4, 4, 4, 4, 4, 4,
	4, 3, 4, 5, 4, 4, 5, 6, 5, 5,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 6, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 2, 3, 2, 2, 3, 2, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 7, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 3, 3, 6, 5, 8, 3,
	6, 6, 3, 12, 15, 1, 0, 1, 2, 3,
	0, 2, 0, 4, 0, 4, 5, 4, 1, 1,
	1, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 3, 6, 4, 2,
	3, 5, 5, 5, 2, 5, 5, 2, 2, 2,
	0, 1, 1, 3, 4, 11, 12, 10, 5, 3,
	1, 5, 9, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 6, 1, 3, 1, 2, 0, 1,
	2, 3, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 3, 0, 4, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 2, 3, 1,
	4, 2, 3, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	2, 1, 1, 1, 8, 10, 11, 8, 11, 5,
	4, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 2, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 6, 8, 8, 4,
	7, 3, 0, 7, 10, 1, 1, 1, 1, 1,
	2, 3, 0, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 2, 1, 2,
	3, 2, 2, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 15, 17, 3, 1, 0,
	4, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 7,
	10, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 3, 0, 1, 3, 0, 3,
	1, 3, 1, 2, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 2, 2, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 664, -3, -221, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -220, -229, -230, -231, -232, -241, -225, -222,
	-223, -4, -72, -74, -88, -109, -111, -124, -134, -133,
	-135, -143, -151, -146, -129, -79, -156, -160, -172, -224,
	-226, -227, 33, 32, 107, 85, 166, 138, 148, 219,
	418, 470, 482, 435, 153, 458, 440, -166, -167, 504,
	-73, -86, -158, -157, 78, 139, 183, 322, 450, 588,
	53, 158, -7, -15, -33, -19, 30, 49, -75, -76,
	-77, -78, 67, -95, -90, -104, -96, -89, -92, -93,
	-724, 110, -638, -112, -116, -150, -114, -728, 174, 240,
	-136, -137, -138, 400, -144, -145, 461, -147, -148, -149,
	464, 175, -81, -80, 168, -265, -267, -163, -162, -164,
	-228, -173, -174, -175, -176, -177, -178, -180, -181, -183,
	-211, -184, -185, -186, -187, -188, -189, -190, -194, -214,
	-191, -192, -193, -196, -195, -197, -202, -198, -199, -200,
	-201, -203, -204, -206, -207, -208, -209, -210, -212, -213,
	510, -205, -215, -182, -216, 578, 527, 87, 474, 21,
	-8, -9, -10, -11, -12, -13, -14, -18, -17, -66,
	-5, -6, -20, -97, -91, -94, -98, -99, -100, -108,
	-101, -102, -103, -637, -113, -115, -118, -120, -121, -117,
	-119, -122, 459, 635, -268, -266, 661, 640, 595, -179,
	-23, -28, -24, -25, -27, -29, -26, -30, -31, -32,
	-51, -56, -53, -54, -52, -55, -57, -58, -59, -60,
	-61, -62, -63, -64, -65, -35, -41, -42, -36, -37,
	-38, -39, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -21, -22, -34, -67, -68, -70, -69, -71, 622,
	631, -271, -269, -270, -278, 496, 603, 550, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, -374, 2, -350, -356,
	-357, -358, -349, -319, -605, -610, 4, -602, -608, 182,
	250, 360, 21, 22, 24, 23, 25, 26, 27, 28,
	30, 31, 41, 43, 44, 45, 47, 48, 49, 50,
	51, 52, 53, 57, 59, 63, 64, 65, 66, 67,
	68, 69, 73, 78, 79, 84, 85, 86, 87, 88,
	89, 90, 91, 97, 94, 95, 96, 98, 99, 101,
	103, 104, 105, 106, 107, 108, 109, 111, 112, 113,
	115, 116, 117, 125, 126, 127, 128, 129, 131, 138,
	132, 139, 142, 136, 141, 137, 143, 144, 146, 147,
	148, 151, 152, 153, 155, 156, 157, 159, 160, 161,
	163, 164, 166, 167, 168, 171, 169, 172, 170, 173,
	174, 175, 176, 177, 180, 188, 189, 190, 195, 197,
	198, 199, 201, 202, 205, 206, 207, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 220, 224, 226, 227,
	228, 229, 230, 231, 232, 238, 239, 240, 242, 243,
	244, 245, 246, 251, 252, 253, 257, 259, 265, 266,
	271, 267, 272, 273, 275, 279, 280, 281, 282, 283,
	284, 285, 287, 289, 288, 293, 291, 295, 296, 299,
	300, 301, 302, 303, 304, 308, 309, 305, 310, 311,
	313, 314, 317, 315, 318, 319, 316, 320, 323, 324,
	325, 326, 327, 328, 329, 330, 331, 332, 333, 334,
	321, 322, 337, 335, 339, 340, 341, 342, 343, 358,
	353, 354, 355, 347, 348, 344, 349, 345, 346, 350,
	351, 357, 352, 362, 363, 364, 365, 368, 236, 258,
	370, 371, 374, 376, 393, 379, 380, 381, 384, 385,
	388, 391, 392, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 403, 405, 406, 408, 409, 410, 412, 413,
	414, 416, 418, 419, 421, 422, 423, 425, 426, 427,
	428, 429, 430, 431, 432, 434, 435, 437, 436, 438,
	440, 442, 443, 444, 450, 451, 458, 452, 454, 455,
	456, 457, 459, 460, 461, 462, 463, 464, 468, 466,
	467, 469, 470, 472, 473, 474, 475, 476, 478, 480,
	481, 485, 486, 489, 487, 507, 508, 530, 482, 483,
	484, 488, 490, 491, 492, 493, 495, 494, 499, 497,
	498, 500, 501, 502, 504, 506, 509, 510, 512, 513,
	514, 515, 516, 517, 518, 521, 523, 524, 525, 526,
	527, 528, 549, 529, 531, 535, 536, 537, 538, 532,
	533, 548, 540, 541, 542, 543, 545, 546, 551, 552,
	553, 554, 555, 556, 558, 559, 561, 569, 582, 570,
	571, 572, 573, 575, 578, 579, 580, 581, 567, 583,
	584, 587, 588, 589, 593, 590, 594, 591, 592, 595,
	597, 600, 601, 602, 609, 607, 608, 610, 611, 613,
	614, 612, 616, 617, 618, 623, 624, 626, 627, 628,
	37, 54, 55, 58, 60, 62, 74, 75, 76, 80,
	133, 134, 165, 178, 179, 191, 208, 209, 221, 223,
	233, 234, 235, 256, 260, 261, 263, 269, 292, 367,
	369, 386, 390, 407, 411, 415, 417, 433, 477, 505,
	519, 534, 539, 562, 563, 564, 565, 574, 576, 603,
	604, 605, 615, 625, -374, 2, -350, 377, -343, 2,
	-319, -319, 418, 29, 2, 29, 406, 498, 553, 555,
	2, -667, -419, 546, 2, 29, -322, -319, 110, 219,
	496, -343, 2, -667, 219, -419, 26, 546, 2, -319,
	2, 391, 177, 205, 23, 28, 71, 82, 105, 151,
	176, 200, -727, 393, 426, 480, 500, 548, 559, 575,
	2, 608, 314, 497, 550, 250, 128, 580, 488, -678,
	485, 486, 391, 424, 472, 222, 596, -323, 2, 482,
	-319, 314, 2, 664, 101, 79, 477, 501, -169, 2,
	304, 570, -170, -171, -168, 562, -589, 488, 472, 337,
	-319, 664, 664, 664, 29, -332, 2, -319, -332, 2,
	-233, 2, -332, -730, -240, -239, -238, 22, 451, 190,
	285, 203, 241, 342, 421, 201, 51, -233, 2, 550,
	250, 488, 128, 546, -354, 653, -356, -741, 2, 570,
	-741, 2, 664, 664, 2, 550, 397, 608, 497, 205,
	128, 430, 250, 580, 49, 151, 28, 73, 556, 639,
	488, -678, 636, 637, 314, 135, -660, 2, -659, 4,
	-608, -602, -368, -367, 550, 556, 128, -358, -349, 653,
	-357, 664, 664, 664, 664, 2, 272, 273, 428, 427,
	501, 502, 29, 664, 664, 664, 664, 664, 485, 177,
	2, 176, -692, 23, 28, 71, 100, 105, 135, 200,
	393, 426, 500, 548, 552, 559, 575, -677, 529, 73,
	488, -676, -678, 382, 314, 580, 151, -472, 128, 304,
	217, 589, 555, 553, 586, 142, 259, 592, 591, 664,
	664, 664, -127, 2, 661, 33, 32, -126, -130, 153,
	504, -258, 550, 264, 2, -319, 664, 664, 664, 2,
	272, 273, 485, 486, 29, 664, 664, 203, -659, 546,
	2, 664, 664, 664, 2, 29, 272, 273, 485, 486,
	264, 2, 73, 491, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 2, -218, 501, 529, 229, 50, 49,
	79, 29, 425, 84, 398, 129, 135, 160, 581, 220,
	546, 250, 251, 280, 100, 101, -474, 47, 273, 73,
	272, 486, -683, 485, -535, 551, 206, 490, 498, 545,
	91, 285, 482, 570, 572, 110, 597, 473, 628, 430,
	431, 543, 444, 540, 305, 169, 204, 4, 128, 337,
	472, 503, 289, 288, 582, 562, 304, 481, 401, 89,
	664, -739, 2, 550, 570, 2, -741, 2, -741, 2,
	-742, 570, 625, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, -266, -268, -267, 664,
	664, 664, 664, 664, 664, 664, 664, -218, 501, 2,
	79, 29, 29, -412, -414, 585, 262, 162, 383, -265,
	-267, 2, -637, 582, 501, -587, 2, -507, -611, -509,
	651, 652, 644, 547, 72, -378, 359, 629, -521, 135,
	586, 377, -610, -510, -523, 165, 393, 477, -436, 8,
	9, 5, 6, 7, -328, -511, -517, 577, 181, 366,
	-371, 665, 10, 661, -634, -267, -522, 38, 223, 70,
	-591, -370, -329, -563, 263, -369, -349, -631, -632, 4,
	-602, -603, -592, -566, -574, -570, -571, -577, -319, -605,
	82, 119, 120, 118, 123, 122, 307, 306, 124, 121,
	503, 596, 71, 37, 233, 234, 269, 367, 235, 80,
	-633, 152, -604, 260, 261, 519, 55, 433, 191, 134,
	133, 369, 60, 58, 604, -575, 130, 562, 563, 564,
	565, 208, 209, 62, 178, 179, 390, 415, 539, 574,
	576, 221, 292, 46, 114, 204, 255, 237, 268, 270,
	274, 294, 297, 338, 356, 361, 387, 389, 471, 511,
	-745, 605, 534, 74, 75, 196, -639, 436, -640, -343,
	-639, 664, 664, 666, 664, -403, -405, -407, 2, 29,
	149, 661, 2, -540, 2, -541, -545, -267, 286, -544,
	661, -542, 659, -350, 378, -635, 478, -631, -632, -328,
	-349, -370, 4, -602, -604, 663, -408, 661, 128, 488,
	550, 83, 250, 100, 176, 205, -467, 661, -319, 29,
	377, 566, 666, -667, -419, -404, 423, -519, 661, 377,
	380, 203, 380, -667, 64, 98, -717, 233, 2, -716,
	-356, 318, 2, 2, 2, 2, 2, 233, -319, 550,
	127, 284, 2, 2, 2, 2, 2, 2, 2, -428,
	233, 2, -426, -356, 608, -429, 233, 2, -426, -427,
	233, 2, -426, -473, 2, 93, -333, 233, 2, -319,
	-359, 233, 2, -354, -365, 233, 2, -362, -319, -597,
	233, 2, -595, 4, -602, 124, 503, -507, 2, -156,
	2, 64, -319, 608, 2, 507, 2, 661, -169, 2,
	76, 570, 46, 501, -170, 2, -493, 2, -494, -315,
	-316, -317, -552, -318, 271, 422, 432, 632, 140, 359,
	628, -719, 203, 643, 566, -587, -587, -587, -437, 663,
	-235, 57, -332, -731, -730, -731, -585, 29, -580, 8,
	-581, 651, 652, -585, -585, -731, -731, 2, 2, 2,
	2, 2, -492, -493, 2, -545, 233, -350, 2, -347,
	-590, 4, -602, -608, -603, -609, -605, 29, 32, 33,
	34, 36, 38, 39, 40, 42, 61, 70, 71, 77,
	81, 83, 93, 100, 110, 118, 119, 121, 120, 122,
	123, 124, 135, 140, 145, 149, 150, 154, 158, 162,
	181, 183, 196, 200, 203, 219, 222, 225, 241, 254,
	262, 264, 286, 290, 298, 306, 307, 359, 366, 372,
	377, 378, 382, 383, 404, 420, 439, 465, 496, 503,
	522, 544, 550, 560, 566, 568, 577, 585, 586, 596,
	598, 606, 619, 620, 621, 622, -610, 82, 2, -545,
	233, 2, -353, 233, -545, -356, 2, -716, 2, -333,
	2, -507, -671, 558, 172, 452, 2, -375, 233, -350,
	-352, -356, -354, 2, 485, -599, 2, -594, 10, -593,
	5, 4, -602, -608, -603, 2, 2, -507, 2, -510,
	2, -521, 29, -362, 2, -595, 233, 2, 29, 29,
	608, 423, 264, 566, 666, -425, -367, -368, -586, 4,
	8, -418, -319, 663, -507, 2, -156, -139, 2, 196,
	-507, 233, 2, -156, 233, 2, -507, 233, 2, -156,
	233, 2, -319, 2, -679, 2, -718, -599, 233, 98,
	233, -319, 2, 205, -726, 480, 579, 318, 2, 2,
	575, 2, 105, 550, 127, 2, 2, 2, 2, 2,
	2, 2, 550, -338, 2, -319, 196, -554, 264, -362,
	233, -363, 2, 497, -740, 436, -595, 233, 2, 456,
	608, -354, 233, 2, -354, 250, 266, -333, 233, 2,
	555, 553, 555, 553, 203, 2, 264, 2, 264, 2,
	-546, 2, -547, -541, -548, 659, 378, -557, 2, -556,
	-593, 603, -127, 661, -127, 661, 501, 661, -599, -350,
	-350, -507, 2, -156, -139, 2, -507, 2, -156, 2,
	-319, 2, -153, -599, -152, 661, 203, 597, -319, 2,
	-507, 2, -156, -139, 2, -507, 2, -156, 2, -258,
	196, 2, 128, 550, -218, 2, 196, 598, 2, 8,
	2, 241, -254, -599, 490, 188, 431, 601, 2, 507,
	2, 508, 79, -474, 628, 79, 203, 2, 203, 2,
	-457, 2, 622, 423, 203, 2, 2, -665, 2, 377,
	220, 203, 2, 203, 2, 203, 2, 203, 2, 203,
	2, -217, 502, 571, 549, 427, 273, 2, -156, 619,
	-139, 273, 272, -507, 619, 2, -684, 196, 486, -507,
	2, 569, 282, 170, 203, -457, 2, 203, 2, 203,
	2, 203, 2, 5, 2, 43, 428, 530, 2, 271,
	422, 530, 2, 528, 2, -350, 550, 608, 497, 128,
	205, 29, 2, 485, 177, 2, 2, 94, 95, 203,
	2, 203, 2, 218, 203, 2, 444, 203, 550, -438,
	663, -438, 628, 2, -449, -545, -492, 566, -412, -414,
	-218, 507, 2, -272, -447, -274, 196, -479, -480, -275,
	298, 183, 372, -276, -456, 29, 149, -456, -456, 64,
	662, 662, -719, 582, 11, 12, 81, 43, 651, 652,
	653, 654, 194, 655, 656, 649, 650, 648, 641, 642,
	646, 277, 278, 102, 645, 643, 92, 312, 479, 184,
	185, 186, 187, 453, 248, 35, 249, 14, 15, 16,
	-378, 34, 382, 297, 629, 237, 511, 644, 17, 18,
	19, 268, 270, 361, 54, 241, -327, 393, -377, 547,
	72, -507, -507, -507, -507, -507, -507, -507, -507, 389,
	661, -443, -502, 659, -267, 661, 661, 661, 661, -586,
	-267, -507, -521, 662, -434, 661, -267, -521, -516, 661,
	477, 659, 661, -524, -507, 5, 5, 5, 661, 663,
	-642, 623, 196, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 417,
	-568, 661, -567, 661, -567, -567, 609, -565, 661, 631,
	624, 661, -565, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 609, 556, 666, -639,
	-488, 661, 661, -439, -550, -507, 653, -439, -439, 377,
	-431, -507, 114, -460, 274, 338, 204, 294, 471, 255,
	-504, 665, -504, -534, 631, -267, -542, -349, -267, -544,
	661, -540, -534, -128, -586, -109, -124, -133, -156, -172,
	-226, -227, 653, -350, 661, 203, 661, 663, -590, 203,
	-418, -333, -362, -350, -369, -370, -375, -344, -319, 2,
	2, 148, -431, -661, 580, 488, 29, 4, -608, -602,
	-368, 497, -367, 550, 128, 177, 205, -597, -322, 566,
	39, -518, -560, -561, -613, 665, -612, -563, -573, -569,
	-572, 407, 411, -592, 58, 604, -575, 263, 4, -602,
	-604, 260, 261, 519, 55, 433, 191, 134, 133, 369,
	60, 562, 563, 564, 565, 208, 209, 62, 605, 534,
	74, 75, -661, 580, 488, 29, 497, 196, -597, 196,
	203, -597, 2, -599, 2, -295, 666, 69, 462, 165,
	-699, 661, 2, 165, 2, 2, 2, -319, -295, 165,
	666, -428, 233, -295, 165, -295, 165, -376, 233, -375,
	-295, 165, -295, 666, 165, -295, 666, 165, 663, 666,
	165, -597, 2, -473, -589, -431, 39, -493, 2, 135,
	4, 5, -743, 666, 296, -381, 311, 358, 228, 378,
	626, 370, 140, -598, 5, 4, -517, -529, 135, 304,
	263, -580, -582, 9, -583, 651, 652, -588, -587, 117,
	663, -590, -236, 258, 41, -332, -332, -731, -731, 8,
	8, -731, -731, -332, -332, -292, 454, 504, 392, -291,
	25, 30, 153, 252, 343, 601, 171, -393, 253, 459,
	-390, 397, 165, 523, 590, -671, -674, 484, 558, 172,
	452, 96, 370, 504, 392, 454, 165, -453, -455, 39,
	126, 343, 391, 65, 244, 316, 317, 527, 460, 615,
	165, 504, 392, 454, -707, 454, 504, 392, -694, -709,
	343, 66, 467, 533, 239, 526, 617, 177, 495, 293,
	359, 108, 478, 541, 394, 392, -16, -308, 25, 153,
	-310, -303, 504, 30, -674, 106, 454, 640, 635, 459,
	403, 542, 420, -674, -671, 291, -673, 618, 357, -294,
	523, 590, -671, -478, -674, 484, 454, -293, 359, 616,
	-395, -390, 397, 165, 665, 25, 153, 454, 504, 392,
	-722, -723, 30, -586, 2, -290, 241, -289, 25, -285,
	-284, 25, 153, 504, 593, -165, -145, -164, 459, 504,
	-165, 2, 454, 392, -668, -340, -636, 241, 622, 165,
	-340, -340, -545, 233, -688, 196, 2, -681, -152, 287,
	5, 10, -599, -152, -425, 666, 666, -590, 653, 486,
	485, 165, 165, 165, 165, 273, 196, 359, -718, 2,
	359, 622, -711, 2, -356, -727, 2, 2, 2, 2,
	2, 2, 2, -350, 233, -410, 377, -657, -658, -729,
	550, -245, 622, -599, 359, 46, -353, 233, 2, -356,
	608, -668, 359, -676, -355, 233, -350, 39, 661, 359,
	2, -473, 2, 250, -636, 359, -546, -372, -350, -541,
	-372, 504, -343, 39, -504, -350, 662, 666, -557, -557,
	-599, -245, 203, 661, -258, 622, 622, 273, -553, 666,
	-552, 241, -600, -599, -153, -599, 457, 203, 273, -599,
	-657, -333, 2, -350, 2, 550, 275, -152, 203, 241,
	-245, -599, -599, -599, -599, -589, 29, 508, 2, -217,
	502, 571, 95, 508, 2, -350, 550, 128, 250, 85,
	-688, 196, 2, -319, -666, 196, -662, 472, 488, 580,
	-661, -666, -350, 128, -350, 128, -350, 128, -350, -350,
	2, 2, 2, 2, 2, 90, 2, -156, -507, 2,
	90, 2, 49, 524, -684, 196, 2, 569, 2, 569,
	2, -319, -319, -319, -319, 372, 529, 296, 622, -350,
	-350, -353, -351, -356, -356, 490, 551, 581, 486, 177,
	-507, 2, 98, -732, 2, 203, 196, 2, 550, 250,
	550, 250, 128, 203, 79, 128, 29, 203, 550, 483,
	663, 4, -295, 666, -323, -272, -447, -589, -448, -447,
	-273, -272, -275, 196, 432, 591, 343, 509, 279, -480,
	-479, 29, -507, -484, 190, 342, -507, -482, -509, 651,
	652, -581, -583, -430, 370, -266, -266, -266, -415, -536,
	-507, 420, 250, -588, -719, -562, -560, -560, -348, -590,
	562, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, 297, 237, 511,
	54, 241, -507, 566, -507, -507, -507, -507, 335, 359,
	366, 577, 181, 587, 149, 370, -746, 544, 42, -514,
	-267, -435, 661, -528, 36, 522, 29, -521, 661, 2,
	-502, -507, -503, -379, -377, -319, 651, 652, 653, 654,
	655, 656, 641, 642, 643, 14, 15, 16, 646, 650,
	648, 649, 194, 102, 645, 312, 479, 92, 184, 185,
	186, 187, 277, 278, 17, 18, 19, 35, 644, -432,
	-431, -431, 662, 606, 29, 149, 653, 2, 662, 666,
	39, 662, -507, -432, -520, -516, -431, -527, -526, 619,
	-468, -469, 627, 321, 131, 231, 319, -470, 493, -584,
	8, -590, 653, -643, 189, 222, 661, 662, 2, 662,
	2, 662, -507, 2, 662, -507, 2, 662, -507, 2,
	662, -507, 2, 662, 2, 662, 2, -507, -507, -507,
	-507, -507, -507, -507, -431, 8, -584, -584, 562, 562,
	-584, -584, -584, -576, 407, 408, 409, 410, 299, 300,
	301, 302, 411, 412, 413, 414, 327, 328, 329, 330,
	323, 324, 325, 326, 331, 332, 333, 334, 213, 214,
	215, 216, 209, 210, 211, 212, -576, -462, 2, -578,
	-431, 4, 627, 321, 131, 231, 319, 493, 5, -462,
	2, -463, 2, -507, -431, -464, -508, -509, 651, 652,
	644, -378, -465, 2, -507, -432, -507, 61, 290, 568,
	-466, -507, 203, -431, -431, 2, -431, 2, -510, 2,
	-640, 39, -489, -319, -431, -421, 666, 203, 39, -607,
	4, -606, 44, 66, 108, 137, 144, 177, 239, 257,
	267, 293, 394, 466, 467, 495, 526, 541, 573, 617,
	505, -421, -421, 661, 662, 666, -461, 226, 315, 310,
	266, -461, -540, -460, 274, -458, 387, -458, -458, -534,
	-334, 659, 668, -590, -534, -531, -530, 39, -343, 384,
	-534, -534, 663, 662, -533, -532, 39, -343, 660, -655,
	661, 664, 664, 664, 664, 664, -350, 661, -431, -590,
	663, 531, 2, 662, 268, 268, 268, 268, 268, 377,
	478, 662, 566, -663, -359, -365, 498, 551, 206, -425,
	666, -425, -418, 98, -717, 622, -597, -126, 379, 662,
	666, -420, 38, 659, 663, -584, 2, 2, -579, 609,
	661, 661, -469, 661, 203, -663, -365, 551, 498, 206,
	2, -667, 546, -419, -597, 566, -716, -717, -700, 662,
	-702, -710, -695, -704, 241, 386, 256, 606, -591, -560,
	4, -602, -319, 2, -428, -356, -295, 165, -429, -427,
	-295, 666, 165, -333, -354, -359, -362, -365, -319, -595,
	-597, -295, -355, -719, 662, 570, -494, -380, 432, 521,
	455, 499, 546, 9, 9, 666, -590, -237, 487, 343,
	-332, -332, -332, -332, 666, -720, 100, 566, 83, 661,
	488, -312, 305, 566, -498, 233, 83, -614, 100, -336,
	-615, -319, 77, 586, 420, 200, 163, -720, 100, 420,
	-720, 100, 2, 252, 100, 504, 529, 661, 29, 64,
	-545, 43, 43, 29, -672, -673, 291, 203, 628, 550,
	250, 488, 566, 566, -545, -455, -560, 126, 316, 317,
	64, -585, -585, 64, -585, -585, -585, 622, -585, 622,
	-353, -545, 488, 566, 566, -725, -709, 462, 504, 566,
	488, 566, 144, 377, 366, 495, 137, 267, 293, -529,
	-529, -319, 566, 442, 540, 442, 540, 494, -303, -305,
	-170, 494, 540, 305, 566, 566, -170, 29, -218, 463,
	135, -744, 643, 442, 291, -673, 566, 203, 666, 43,
	43, 29, -672, 203, 566, 616, -375, -334, 602, 45,
	602, 45, 602, 566, 45, 488, 566, 666, 45, -287,
	-286, 504, -289, -599, -288, 341, -284, -657, -657, -244,
	-243, -319, 5, -418, 79, 566, 566, -16, 504, -669,
	-324, 113, 349, 309, 350, 104, 346, 103, 345, 111,
	347, 112, 348, 610, 362, 611, 363, 68, 344, 320,
	351, 525, 352, 614, 364, -325, -326, 156, 399, 600,
	128, -595, -16, -16, 504, 392, 454, 165, -689, 241,
	29, -678, 241, -553, 241, -553, -367, -319, 663, -156,
	-507, -507, -156, -507, -156, 49, 165, 39, 165, 2,
	661, 284, 661, -384, 359, 203, -418, -554, 666, -350,
	39, -244, 381, 165, -595, -454, -453, 359, -355, 233,
	2, 165, -740, -408, 359, 159, 661, 430, 2, 165,
	-335, 233, -320, -319, -473, -297, 554, 165, -451, 598,
	-485, -156, 661, 135, 39, -485, -440, -441, -551, -442,
	-336, 661, -343, -504, -127, -556, 662, 662, 662, -258,
	-409, -337, -336, 127, 434, 434, -251, 622, -152, -153,
	662, 666, -553, 241, 532, -153, -599, -245, -245, -553,
	-553, -350, 196, -599, -152, -245, -245, -245, -245, 2,
	2, 2, 2, -457, -350, -333, -375, -350, -361, 241,
	29, 663, -597, -597, -365, -366, -364, -319, -359, -457,
	-333, -457, -333, -457, -333, -457, -457, -156, -507, 529,
	2, 501, 196, 196, 663, -457, 663, 8, -411, 465,
	5, 2, 99, -599, 2, 430, 128, 550, 397, 250,
	-350, -375, -350, -375, -333, 128, -333, 129, 128, -350,
	4, -545, -448, -273, 378, 279, 509, -482, -483, -509,
	477, 478, -483, 477, 478, 8, 9, 8, 9, -277,
	513, 365, -427, 666, -282, 40, 145, 279, -350, -588,
	628, 161, -507, -507, 566, -746, 544, -514, 161, -507,
	335, 366, 577, 181, 587, 149, 370, 203, 661, -508,
	-508, 662, -433, -507, -507, 660, 670, 662, 663, 662,
	-414, 666, -412, -507, -431, -431, 662, 663, -431, -418,
	660, 660, 666, 662, -525, -526, 154, -507, 566, 566,
	566, 566, 661, 662, 663, -648, 388, 661, 661, -507,
	662, 662, 662, 662, 39, 666, 666, 666, 662, 666,
	666, 666, 662, 662, 662, 666, 662, 628, 628, 662,
	662, 662, 662, 666, 662, 666, 662, 203, 662, 662,
	-471, 404, 662, 11, 12, 651, 652, 653, 654, 194,
	655, 656, 649, 650, 648, 641, 642, 643, 92, 312,
	479, 14, 15, 16, -378, 268, 241, -508, -508, -508,
	-508, 662, -512, -513, 203, 196, 39, -466, -466, -466,
	662, 203, -431, 662, 662, 661, -641, 314, 359, 662,
	666, 662, -501, -500, 620, -550, -422, 2, -540, -345,
	-590, -501, -501, -431, -507, 274, 274, -459, 598, 377,
	-461, -540, -531, -586, -506, -505, 198, 40, 145, 353,
	354, 355, 236, 199, -531, -343, -488, -531, -531, -590,
	-534, -343, -486, 661, -534, -530, 662, -656, -586, 662,
	-423, -543, -635, -414, 663, -590, -255, -636, -219, 5,
	366, -219, -219, -219, -219, -350, -597, 566, 566, 241,
	241, 241, -425, -418, 26, -687, 622, 405, -560, 659,
	660, 8, -590, 661, -584, -584, -584, -597, 203, 203,
	241, 241, 241, 377, -667, 203, -595, -295, 662, 666,
	-695, -704, -710, -704, 386, 2, -295, -428, -295, -295,
	-375, -376, -295, -295, -295, -452, 622, -587, -493, 584,
	88, 432, 562, -587, 125, 487, -291, 454, 504, -336,
	-336, -350, -262, -261, -259, -319, 5, -360, -319, 217,
	443, -595, 359, -498, 233, -296, 359, 233, -344, -560,
	661, -475, 624, 279, 279, 598, -336, -344, 279, 233,
	-336, 233, -344, 2, -344, -670, 432, 371, -507, -260,
	-259, 64, -391, 303, 430, 360, -292, 454, 504, 392,
	-156, -156, -156, 661, -719, 598, 148, -350, -375, -350,
	-360, -595, -355, 504, 392, 454, 356, -369, -585, -585,
	-585, -453, 504, 392, 454, -360, -595, -353, -319, -360,
	-595, 377, 366, 377, 137, 267, -595, -302, 233, -319,
	442, -302, 233, 442, 442, 442, 442, 217, 443, 488,
	-333, 442, 628, 48, -744, 566, 203, -507, -507, -293,
	-156, -156, -156, 661, -334, -294, -478, 454, 5, 233,
	-336, 5, -336, 233, 5, -319, -336, -360, -595, -723,
	25, 153, -336, 666, 283, 264, 622, -680, 204, 485,
	437, -290, 643, -245, 666, 643, 643, -360, -595, -324,
	399, -681, 366, 5, 10, 594, -333, -668, -340, 488,
	566, 566, -545, -685, -686, 219, 470, 488, 473, -597,
	-152, -248, 622, -152, -242, 245, 653, -660, -599, -599,
	-319, -697, -698, -701, -702, -319, -382, -385, -383, -336,
	-499, -498, -618, -619, -614, 297, 250, 586, 266, 182,
	100, -263, -264, 624, 622, 165, -373, -350, 659, -245,
	-658, -555, 182, 496, 661, -362, -363, 165, -408, 359,
	-595, 608, 39, 165, 661, 2, 2, -354, 377, 359,
	-335, 233, -298, 155, -744, -333, -501, -422, -450, -491,
	465, 377, -409, 603, -343, -450, -424, 666, 203, 643,
	663, -409, -549, 653, -127, -127, -245, 661, -599, 662,
	666, 663, 661, 643, 643, -253, 381, -252, 157, 281,
	265, 515, 516, 517, 518, 147, 514, 132, 340, 246,
	556, 489, 607, -553, -599, -251, -153, 203, -553, 241,
	203, -82, 622, -245, 550, 241, -245, 665, 488, 473,
	-319, 663, -457, -457, -457, 501, 501, -319, -319, 196,
	-418, 2, -346, -590, -333, -350, -347, -375, 196, 196,
	-333, -333, 591, -483, 378, 308, -536, -283, 630, -350,
	665, -507, -507, 161, 161, -507, -508, -508, -507, 161,
	203, 661, -507, -518, 34, 34, 662, 666, -503, -507,
	-377, 662, 606, -414, -414, 662, 653, -590, 665, 662,
	-516, 158, -507, 560, 321, 231, 319, -470, 319, -470,
	-470, -584, 5, -590, 653, -649, -339, 661, -319, 620,
	-413, 383, 662, -562, -560, -507, -507, -507, -507, -507,
	-584, -565, -565, -580, -580, -507, -512, -507, -562, -560,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	149, 359, 370, -508, -513, -512, -507, -507, -560, 662,
	662, 662, -431, -126, 661, 314, -319, -444, 222, -507,
	-553, 666, -444, -444, 662, -540, -540, 661, -507, 274,
	660, 666, 669, 643, 643, -488, 663, -530, -486, -487,
	-490, -319, -531, 660, 662, 666, 662, 666, -533, 662,
	-590, -501, -257, -256, 146, 57, 115, 143, 366, 374,
	202, 227, 429, 161, 197, 155, 268, -687, -597, -597,
	488, 488, 488, 380, 219, 5, 8, 659, 660, 663,
	-584, 662, 662, 662, -597, -597, 488, 488, 488, -661,
	580, 488, 29, 203, -597, -702, -704, -704, -295, -295,
	127, 343, -507, -234, 622, 624, 566, 566, 662, 666,
	643, 64, 241, 165, 359, 600, 359, -615, 163, -620,
	-507, 661, 250, 661, 661, 2, -279, -280, -281, 153,
	504, 25, -721, 2, 598, 165, -295, 165, -295, 626,
	662, 666, -391, 661, 661, 566, 488, -312, 566, 622,
	-431, -507, -246, 135, -589, -674, 665, -674, 665, 488,
	566, 566, 488, 566, 566, 176, 257, 366, 359, -319,
	165, -319, 233, -744, -319, -674, -674, 241, 622, 180,
	180, 628, -302, -507, -507, 196, 566, 622, -431, 566,
	-564, 52, 27, 359, -354, -295, 165, 566, 566, 580,
	504, -286, -599, -152, -249, 157, 469, 147, 281, 246,
	49, 380, -681, -152, -243, -599, -599, -681, -599, 366,
	-16, -360, -595, -355, 504, 392, 454, -667, -667, 219,
	-365, -689, -553, -250, 381, -249, -553, -248, 203, 264,
	622, 662, 666, 135, 643, 2, 662, 662, 666, 666,
	-621, -296, -350, -335, 250, 250, -342, -320, 39, 374,
	374, 661, -350, -105, 622, -552, -586, -341, -319, -439,
	-244, 46, -353, 39, 165, -668, -355, -156, -355, -558,
	-559, 5, 39, -350, 165, 377, 359, -299, 289, -744,
	-594, -636, -414, -450, -439, 360, 97, 662, -501, -441,
	-422, -507, 2, 662, -599, -245, -258, -337, 2, -600,
	-599, -599, 666, 661, 643, 643, 643, 643, 643, 643,
	643, -251, -553, -152, -251, -153, -156, 381, -350, -152,
	653, -360, -361, 653, -457, 5, -397, -396, 397, 370,
	-397, 477, 477, 378, 190, 285, -282, -334, -507, -507,
	161, 34, 34, -507, -507, -518, 662, -507, -507, -431,
	660, 5, -507, 662, 662, 8, -507, 662, 663, -650,
	-319, -507, 662, 64, 662, 662, 666, 666, 662, 662,
	662, 662, 662, 662, 662, -513, 203, 149, 370, 661,
	662, 662, -126, -515, 225, 64, -540, -515, -515, -459,
	-418, -540, -505, -334, 659, -334, 659, -590, 662, 666,
	-560, -586, -543, 663, -256, 643, -599, -599, 2, 2,
	5, 5, 429, 359, 366, 5, -219, -687, -687, 622,
	-365, -365, -365, 380, 660, 2, 659, -590, 662, -365,
	-365, -365, 203, -663, -365, 551, 206, -597, 127, 196,
	230, 230, -336, -336, -261, -587, 550, 477, -302, 420,
	-498, 165, 165, -622, 100, -624, 81, 182, 110, 359,
	366, 586, 420, 77, 135, 377, 439, -734, -735, -736,
	39, 633, 634, 662, -416, -537, -635, 661, -319, -416,
	-418, 359, 537, 135, 377, 359, 135, 377, 616, 127,
	2, 580, 84, -336, -344, -259, -418, -418, -350, -360,
	-595, 173, 662, 666, 643, 2, 653, 653, -360, -595,
	-355, -360, -595, -353, -319, 257, 165, 603, -302, 165,
	-302, 603, -302, 395, 180, 566, -156, -507, 173, 662,
	-334, 5, 5, 165, -331, 81, -336, 5, -336, -354,
	127, 643, 643, 643, 643, 643, 31, -681, -243, 622,
	488, 566, 566, 377, 377, 380, -685, -686, -248, 666,
	661, -248, -600, -152, 2, 467, -701, -507, -507, -398,
	252, -336, -619, -616, -617, 420, -499, -623, -625, 182,
	420, -386, 661, -335, -320, 661, -156, 2, -262, 661,
	-384, 381, 660, 203, 662, -595, -454, -156, -355, -408,
	-406, 622, -408, 662, 666, 159, -476, 598, -334, -350,
	165, -300, 288, -744, -594, -297, -481, -479, 150, 661,
	377, -156, -414, 643, 662, 127, 662, -252, -253, -599,
	-152, -599, -599, -599, -152, -599, -251, -691, 39, -553,
	-83, -84, 250, 100, 402, -245, -245, -347, 550, 250,
	661, 661, -282, -507, -507, -507, 662, -414, -590, 653,
	-644, 397, 662, -536, -507, -507, -508, 203, 661, -518,
	662, -645, 621, -507, -445, -446, -507, 475, 116, 223,
	-645, -645, 662, -586, -586, -490, -599, 2, 2, 366,
	2, 2, 2, 566, 566, 566, 659, 2, 203, 203,
	203, -597, 203, 203, 241, 241, -156, 241, 39, 442,
	-498, -344, -344, -348, -341, 182, 233, 366, 616, -475,
	279, 661, -508, 591, -350, 661, 2, 232, 232, 31,
	64, -737, 140, 254, 662, 666, -538, -330, -319, -507,
	-538, 662, 662, 366, 591, 366, 616, -507, 591, -560,
	661, -295, -295, 662, 662, -507, 566, -589, 107, -587,
	2, -674, -302, -418, -418, -674, -333, -507, 196, -507,
	566, 5, -295, -348, -295, -295, -331, 580, -599, -507,
	577, 181, -152, -152, 376, -360, -595, -355, -690, 551,
	498, 581, 490, 206, 476, -690, 196, -249, -250, -248,
	-693, 505, -392, -393, 2, -621, 279, -341, 279, 243,
	164, -416, 661, 661, -418, -733, 622, 662, -382, -263,
	-106, -107, 567, -552, -664, -372, -408, 39, 343, 127,
	39, 5, 661, 661, -319, 377, 661, -334, -314, 98,
	-744, -594, -298, -450, 360, -418, 100, -481, -514, -245,
	661, -245, 662, 556, -251, 666, 29, 661, 29, 661,
	-350, -375, -431, -431, 662, -414, 64, 666, 662, 662,
	-508, -518, 662, -646, -647, -339, 666, 661, 661, 506,
	660, 660, 2, -597, -597, -597, 2, -597, -597, -597,
	-597, -597, 488, 488, -302, 420, -319, -615, -624, -341,
	359, -264, 598, 622, -507, -508, -321, 661, -507, 661,
	661, 39, 135, 254, 141, 238, -497, -738, 109, 538,
	242, -537, -282, 662, -496, 598, 439, -508, -331, -416,
	661, 661, 661, 643, 203, -156, 661, -564, -295, -354,
	643, 566, 2, 203, -667, 662, -680, -703, -704, -263,
	661, -264, -387, 86, 101, 136, 232, 207, 251, 529,
	535, 29, -387, 662, -416, -416, 662, -388, 377, 127,
	343, 662, 39, -107, 9, -501, 39, -156, 127, -156,
	-558, -416, -350, -416, 377, -304, -303, 298, -594, -299,
	662, -344, -450, -600, -586, 4, -84, -418, -418, 662,
	662, -651, 430, 478, 224, -431, -415, 662, 666, 39,
	-446, 2, 2, 2, -687, -687, -687, -365, -365, 442,
	-296, 165, 226, 662, -626, 313, -319, 662, -454, -454,
	39, 141, 238, -394, -390, 661, -283, -538, -264, 226,
	-350, -675, 598, 662, -400, -399, -396, -402, -401, -396,
	-431, -587, 107, 395, -431, -331, -152, -597, -597, 377,
	-682, 204, -705, -706, -708, 39, 284, 573, 621, -709,
	-388, -417, -539, -336, -496, 662, 662, 87, 127, -398,
	-156, -156, 2, -406, 662, 662, -476, 662, -350, -301,
	-601, 442, 444, -744, -300, -501, 150, 662, 662, 662,
	662, -652, -653, 54, 583, 117, -507, -652, -652, -647,
	-649, 203, 203, 182, -495, 631, -627, -630, -629, 638,
	512, 204, 396, 662, 537, 615, 662, 662, -737, -418,
	-495, -408, -507, -496, 662, 666, 603, 662, 666, 603,
	662, 203, 662, -295, -687, -295, -690, -247, 622, 49,
	-715, -712, 53, 466, -708, -696, 5, -594, -313, -312,
	662, 666, -497, -496, -394, 419, 142, 153, -392, -733,
	-496, 661, -497, 661, -311, -310, -744, -580, -314, 150,
	360, 591, -245, -654, 163, -653, 416, 195, 477, 416,
	195, -654, -654, -597, -597, -341, -264, 59, -629, 638,
	-630, 638, 591, 142, -501, 662, -626, -264, -399, 241,
	-401, 203, 395, 203, 485, -681, 31, 44, -507, -264,
	-539, -394, -497, -264, 478, 478, 2, -263, -388, -497,
	-416, -394, -416, -307, -308, -309, -418, -304, 360, 591,
	504, 117, 222, 561, 343, 34, 643, -628, 343, 462,
	69, 504, -628, -627, 661, 661, -597, 381, -714, -264,
	-394, -501, 2, -388, -394, 662, -264, 662, -596, 392,
	-301, 504, -440, 477, 385, -653, -507, 24, 366, 135,
	-737, -431, -431, -295, -244, 661, -713, 158, -3, -712,
	-501, -264, -477, 359, 616, -313, -264, -496, -501, -497,
	-306, -305, 494, -744, -311, -440, -501, 662, 662, -244,
	667, -477, -501, 616, -501, -497, -477, -394, -595, -307,
	-501, -389, -390, 566, 662, -477, -477, -394, -264, -306,
	661, -264, -501, -431, -501, -477, 662, -477, -389,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 1756,
	1758, 730, 731, 733, 734, 735, 737, 738, 740, 742,
	744, 745, 746, 748, 749, 751, 752, 753, 754, 755,
	757, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 853, 855, 0,
	1738, 1740, 1742, 1744, 0, 0, -2, -2, 0, 0,
	-2, -2, 45, 46, 48, 50, 0, -2, 422, 424,
	426, 428, 0, 460, 462, 463, 465, 467, 468, 470,
	472, -2, 0, 656, 657, 659, 661, 663, -2, 0,
	1314, 1316, 1318, 0, 841, 843, 0, 1321, 1323, 1325,
	0, 0, 865, 866, 0, 1859, -2, 857, 859, 861,
	863, 942, 944, 946, 948, 950, 952, 954, 956, 958,
	960, 962, 963, 965, 967, 969, 971, 973, 975, 976,
	978, 980, 982, 983, 985, 986, 988, 990, 992, 994,
	996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014,
	-2, 1017, 1018, 1019, 1021, -2, 0, -2, -2, 1752,
	52, 54, 56, 58, 60, 62, 64, 66, 68, 70,
	72, 74, 76, 78, 601, 603, 605, 607, 609, 612,
	614, 616, 618, 1917, 665, 667, 669, 671, 673, 675,
	677, 679, 0, 0, -2, 1931, 0, 0, 0, 1112,
	80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
	149, 150, 151, 152, 153, 154, 155, 156, 93, 94,
	95, 97, 98, 99, 100, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 146, 147, 91, 120, 121, 122, 123, 124, 0,
	0, 1890, 1892, 1894, 1896, -2, 0, 0, 8, 12,
	14, 16, 18, 20, 22, 24, 26, 28, 30, 32,
	36, 38, 40, 42, 1757, 1759, 732, 736, 739, 741,
	743, 747, 750, 756, 758, 760, 715, 716, 719, 2647,
	2665, 2666, 2667, 2670, 2671, 2672, 2673, 2674, 2675, 3209,
	3290, 3291, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775,
	2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785,
	2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795,
	2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
	2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875,
	2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885,
	2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895,
	2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905,
	2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915,
	2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925,
	2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935,
	2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945,
	2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955,
	2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965,
	2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975,
	2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985,
	2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995,
	2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005,
	3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015,
	3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025,
	3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035,
	3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045,
	3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055,
	3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065,
	3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075,
	3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085,
	3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095,
	3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105,
	3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115,
	3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144,
	3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154,
	3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164,
	3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174,
	3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184,
	3185, 3186, 3187, 3188, 717, 718, 1508, 0, 799, 797,
	2630, 800, 2958, 802, 804, 650, 651, 652, 653, 654,
	655, 0, 834, 3063, 815, 1929, 835, 837, 838, 839,
	840, 794, 792, 0, 839, 834, 2703, 3063, 832, 1736,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 581, 1571, 1572, 1573, 1721, 1722, 3014,
	1767, 0, 286, 854, -2, -2, 3173, -2, 896, 897,
	-2, -2, 911, 915, 906, 3178, 0, 3017, 2999, -2,
	918, 1739, 1741, 1743, 1022, 1023, 1024, 2651, 1028, 1026,
	1038, 1039, 1042, 0, 1059, -2, 0, 2699, 2981, -2,
	-2, 1060, 1061, -2, -2, -2, -2, 1040, 1041, 0,
	0, 0, 0, 0, 2067, 2068, 2634, 1769, 1761, 1764,
	1762, 1763, 47, 49, 51, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 296, -2,
	-2, -2, -2, 0, 0, 3069, 2762, 2598, 2667, 2601,
	2596, 423, 425, 427, 429, 430, 0, 0, 0, 0,
	0, 0, 0, 461, 464, 466, 469, 471, -2, 0,
	473, 0, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 1380, 1381, 1638, 0, 0, 0, -2, 658,
	660, 662, 720, 721, 0, 1918, 1918, 728, 729, -2,
	0, 0, 0, 0, 384, 375, 1315, 1317, 1319, 1320,
	0, 0, 0, 0, 0, 842, 844, 0, 0, 3063,
	347, 1322, 1324, 1326, 1327, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 858, 860, 862, 864, 943, 945,
	947, 949, 951, 953, 955, 957, 959, 961, 964, 966,
	968, 970, 972, 974, 977, 979, 981, 984, 987, 989,
	991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009,
	1011, 1013, 1015, 1016, 1067, 0, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 1182, 0, 0, 0, -2, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, -2, 0, 1283, 0, 0, 1070, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 0, 1155, 1180, 1181, 1191,
	1020, 0, 1551, 1919, 1769, 1746, 1747, 1748, 1753, 1755,
	1749, 1750, 1751, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 73, 75, 77, 79, 602, 604, 606,
	608, 610, 613, 615, 617, 619, -2, 1888, 1889, 666,
	668, 670, 672, 674, 676, 678, 680, 845, 0, 848,
	0, 1072, 847, -2, 0, 1923, 1923, 1923, 0, 0,
	1889, 1887, 0, 0, 0, 851, 852, 922, 923, 2210,
	0, 0, 0, 0, 0, 0, 0, 0, 2470, 2298,
	0, 924, -2, 2331, 2333, 3147, 2930, 3173, 2469, 2335,
	2336, 2337, 2338, 2339, 0, 2341, 2342, 2343, 2344, 2345,
	2346, 0, 2348, 0, 2353, 2354, 2355, 0, 3154, 2573,
	2661, -2, 0, 0, 3161, 2657, 0, 2436, 2371, -2,
	-2, 2684, 2663, 2142, 2143, 2144, 2145, 2146, -2, -2,
	3192, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 0, 3135, 3155, 3156, 3162, 3164, 3157, 3144,
	2396, 2778, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 2169, 2178, -2, -2, -2,
	-2, -2, -2, -2, 3148, 3149, 3167, 3170, 3177, 3182,
	3183, 3153, 3163, 3191, 3193, 3194, 3195, 3196, 3197, 3198,
	3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208,
	2170, -2, -2, -2, -2, 0, 1906, 2974, 1909, 2015,
	1907, 1891, 1893, 0, 1895, 0, 0, 0, 1900, 1926,
	1924, 0, 1975, 1904, 1905, 1998, 1998, 2030, 0, 2003,
	0, 2030, 1918, 2061, 0, 2009, 3004, 2372, 2373, 0,
	2667, 2662, -2, -2, 3189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 795, 0, 801, 803,
	0, 0, 0, 0, 834, 833, 1928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 3155, 542, 543,
	546, 0, 584, 585, 586, 587, 588, 3155, 0, 0,
	0, 0, 594, 595, 596, 597, 598, 599, 600, 256,
	3155, 685, 714, 710, 0, 256, 3155, 688, 713, 256,
	3155, 691, 712, 0, 694, 1636, 256, 3155, 697, 2626,
	256, 3155, 700, 702, 256, 3155, 706, 2641, 2639, 707,
	0, 709, 276, 272, 273, 274, 275, 1732, 1733, 1734,
	1735, 0, 1766, 1637, 856, 0, 882, 0, 894, 895,
	3143, -2, 0, 3028, 899, 900, -2, 902, 1770, 1774,
	1775, 1776, 1777, 1778, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 889, 890, 909, 910, 916, 919, 0,
	1031, 1027, 1043, 0, 1058, 0, 1059, 1059, 2615, 2606,
	2607, 0, 0, 1059, 1059, 0, 0, 1062, 1063, 1064,
	1065, 1066, 1760, -2, 90, 0, 3155, 2061, 92, 0,
	2620, 2693, 2694, 2695, 2696, 2697, 3190, 3210, 3211, 3212,
	3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222,
	3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232,
	3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242,
	3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252,
	3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262,
	3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272,
	3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282,
	3283, 3284, 3285, 3286, 3287, 3288, 3289, 3192, 96, 0,
	3155, 101, 0, 3155, 0, -2, 125, 561, 126, 0,
	148, 0, 176, -2, -2, -2, 157, 0, 3155, 0,
	2595, -2, 0, 268, -2, 0, 785, 387, 388, 2680,
	2681, 2689, 2690, 2691, 2692, 376, 377, 0, 776, 0,
	885, 2470, 0, 0, 1352, -2, 0, 1564, 1566, 1566,
	0, -2, 0, 0, 0, 1303, 2592, 2597, 1304, 1305,
	2616, 1306, 2602, 0, 431, 432, 433, 434, 435, 0,
	436, 3155, 438, 439, 0, 441, 442, 3155, 444, 445,
	0, 447, 0, 449, 0, 311, 328, 326, 3155, 0,
	3155, 475, 478, 0, 582, 0, 579, 0, 563, 564,
	0, 566, 0, 0, 0, 571, 572, 574, 575, 576,
	577, 578, 0, 623, 621, 2631, 641, 401, 0, -2,
	3155, 0, 1349, 0, 0, 1616, -2, 0, 1557, -2,
	0, 1623, 3155, 1619, 0, -2, 0, 1916, 3155, 1787,
	1384, 1385, 1386, 1387, 2075, 647, 0, 1823, 0, 1825,
	0, 1845, 2069, 1998, 0, 0, 2074, 0, -2, 773,
	2650, -2, 723, 0, 724, 0, -2, 0, 401, 0,
	0, 1330, 1332, 1333, 1335, 1336, 1339, 1340, 1341, 1342,
	0, 1344, 2047, 348, 350, 0, 0, 0, 0, 1329,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 0,
	641, 867, 0, 0, 1068, 1069, 0, 0, 1087, 1088,
	1089, 0, 0, 401, -2, -2, -2, -2, 1098, 0,
	1106, 1109, -2, 0, 0, 0, 0, 1116, 0, 1121,
	1122, 1123, 0, -2, 0, 1130, 1132, 1313, 1135, 0,
	1313, 0, 1137, 0, 1141, 0, 1144, 0, 1146, 0,
	1148, -2, -2, -2, 1156, 1157, -2, 1162, -2, 0,
	1166, -2, 0, 1169, 0, 1172, -2, 0, 1182, 1178,
	1179, 0, 0, 0, 0, 1199, 1200, 0, 1204, 0,
	1213, 0, 1216, 1217, 1218, 0, 0, 1223, 1224, 0,
	1226, 1227, 1228, 1230, 1231, 1232, 0, 3102, 3025, 2762,
	2810, 0, 1241, -2, 2799, 1251, 1253, 0, -2, 0,
	1269, 0, 1273, 0, 0, 1282, 0, 0, 0, 1071,
	0, 1080, 1081, 1082, 256, 2065, 1745, 0, -2, 0,
	846, 0, 850, 1948, 1874, 1871, 0, 1945, 1946, 1875,
	0, 0, 0, 1882, 0, 1921, 1922, 0, 0, 0,
	1861, 1862, 0, 0, 0, 0, 0, 0, 2475, 2476,
	2477, 2478, 2491, 2479, 2480, 2490, 2488, 2489, 2481, 2482,
	2487, 2501, 2502, 2492, 2493, 2483, 2496, 2494, 2495, 2497,
	2498, 2499, 2500, 0, 0, 2506, 0, 2484, 2485, 2486,
	2514, 0, 0, 2515, 0, 2517, 0, 2507, 2503, 2504,
	2505, 0, 2277, 2279, 2581, 0, 0, 0, 2513, 2508,
	2509, 2215, 2216, 2217, 2218, 2219, 2252, 2256, 2257, 0,
	0, 2332, 2578, 2577, 2334, 0, 0, 2529, 0, 2347,
	-2, 0, 2470, 2524, 0, 0, 2356, 2357, 2358, 0,
	0, 2529, 0, 0, 2572, 2368, 2369, 2207, 0, 0,
	2438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2156,
	2155, 0, 2157, 0, 2158, 2159, 2166, 2179, 0, 0,
	0, 0, 2183, 0, 0, 0, 0, 0, 0, 0,
	2553, -2, 0, 0, 0, 0, 2171, 0, 0, 1908,
	0, 0, 0, 1979, 2582, 2586, 2587, 1979, 1979, 0,
	0, 2530, 2058, 2058, 0, 0, 2053, 2053, 2053, 2051,
	2030, 0, 2030, 2040, 0, 2030, 2030, 0, -2, 2003,
	0, 0, 2044, 0, 2024, 761, 763, 765, 767, 768,
	769, 771, 2062, 2063, 0, 0, 0, 0, 2668, 0,
	0, 0, 0, 0, 0, 2653, 0, 0, 2625, 456,
	457, 0, 0, 0, 3082, 3017, 0, -2, -2, -2,
	-2, 3025, 0, 0, 2762, 2799, 2810, 806, 836, 0,
	1918, 0, 2532, 2090, 2094, 0, 2096, 2097, 2098, 2099,
	2100, 0, 0, 2091, -2, 2167, 2169, 2190, 2685, 2686,
	2687, 2150, 2151, 2152, 2153, 2154, 2162, 2149, 2149, 2149,
	2160, 2189, 2181, 2189, 2185, 2135, 2136, 2137, 2172, 2173,
	2174, 2175, 0, 3082, 3017, 0, -2, 0, 818, 0,
	0, 0, 1856, 338, 339, 540, 0, 254, 255, 0,
	545, 0, 583, 0, 590, 591, 592, 0, 681, 0,
	0, 256, 3155, 686, 0, 689, 0, 256, 3155, 2590,
	695, 0, 698, 0, 0, 704, 0, 0, 0, 0,
	0, 256, 1858, 0, 0, 0, 0, -2, 904, 912,
	913, 914, 0, 1772, 0, 1779, 933, 934, 935, 1781,
	1782, 0, 1784, 907, 936, 937, 938, 939, 940, 941,
	0, 2604, 2605, 2610, 2611, 0, 0, 905, 926, 908,
	0, 920, 1034, 1029, 1030, 1044, 1045, 0, 0, 2608,
	2609, 0, 0, 1050, 1051, 158, 1718, 0, 0, 209,
	0, 1718, 1718, 0, 0, 0, 0, 237, 0, 0,
	1418, 0, 0, 0, 0, 176, 194, 205, 170, 171,
	172, 0, 0, 0, 0, 0, 0, 102, 1530, 0,
	1533, 0, 0, 0, 0, 0, 0, 0, 1546, 1549,
	0, 0, 0, 0, 555, 0, 529, 0, 0, 552,
	560, 0, 0, 516, 517, 518, 519, 0, 0, 524,
	0, 0, 0, 0, 530, 0, 128, 129, 0, 0,
	134, 135, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 1820, 0, 184, 176, 0, 0, 175, 177, 160,
	0, 0, 176, 180, 195, 207, 0, 243, 0, 183,
	245, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 278, 0, 0, 313, 783, 0, 786, 0, 775,
	777, 641, 641, 0, 0, 883, 887, 888, 0, 0,
	884, 886, 0, 0, 1558, 0, 0, 0, 1915, 0,
	0, 0, 0, 3155, 1716, 0, 1699, 0, 2047, 2858,
	-2, -2, 348, 2047, 1302, 0, 0, 2668, 2600, 0,
	0, 0, 0, 0, 0, 448, 0, 0, 0, 337,
	0, 0, 0, 480, 485, 0, 573, 562, 565, 567,
	568, 569, 611, 1477, 3155, 0, 0, 645, 636, 0,
	640, 0, 0, 644, 0, 0, 1529, 3155, 1527, 2635,
	0, 1555, 0, 1615, 1508, 3155, 2633, 0, 0, 0,
	1624, 2677, 1633, 1637, 1808, 0, 649, 0, 1826, 1828,
	0, 0, 2070, 0, 2072, 1998, 1918, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 1343, 357, 0,
	2046, 0, 0, 389, 2047, 348, 2987, 0, 1328, 401,
	401, 2047, 869, 2047, 871, 0, 0, 1090, 0, 0,
	1093, 401, 401, 401, 401, 1104, 1105, 1107, 1108, -2,
	-2, -2, -2, 1110, 1111, 1210, 0, 0, 0, 1209,
	1714, 0, 1126, 1129, 1133, 0, 1286, 2999, 3017, 3082,
	1311, 1134, 1210, 2762, 1210, 2762, 1210, 2762, 1210, 1210,
	1150, 1194, 1206, 1161, 1168, 0, 1163, 1167, 1170, 1173,
	0, 1175, 1183, 0, -2, 0, 1186, 0, 1188, 0,
	1190, 1210, 1202, 1211, 1214, 0, 1222, 1225, 0, 1233,
	1234, 1235, 1236, 2648, 1237, 1238, 1239, 1240, -2, 0,
	1244, 1245, 0, 0, 1260, 1265, 1266, 1262, 0, 0,
	0, 0, 0, 0, 1276, 1277, 0, 0, 0, 1285,
	0, 1083, 1550, 0, 1754, 1948, 1874, 849, 1865, 1947,
	1866, 1873, 1876, 0, 0, 1878, 0, 1880, 0, 1943,
	1944, 1951, 1952, 0, 1962, 1963, 1955, 0, -2, 0,
	0, 1958, 1959, 1884, 0, 1901, 1902, 1903, 1932, 1935,
	1652, 0, 3290, 892, 0, 2211, 2085, 2212, 2213, 2619,
	0, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, -2, -2, -2, -2, -2, -2, -2, -2, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	-2, -2, -2, 2253, 2254, 2255, -2, 2516, 2518, 0,
	2581, 0, -2, 0, -2, -2, -2, -2, 2274, 0,
	2276, 2281, 2283, 2285, 0, 0, 0, 0, 2580, 2295,
	2564, 2565, 0, 0, 2472, 2473, 2474, 2280, 0, 2299,
	2579, 2576, 0, 0, 2510, 0, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 0,
	2528, 1931, 2360, 0, 0, 0, 0, 2367, 2352, 2526,
	0, 2525, 0, 0, 0, 2536, 0, 2571, 2567, 0,
	2617, 2206, 2193, 2194, 2195, 2196, 2197, 2198, 2208, 0,
	2614, 2654, 2660, 2446, 0, 0, 0, 2397, 2398, 2399,
	2400, 2401, 0, 2403, 2404, 0, 2406, 2407, 0, 2409,
	2410, 0, 2412, 2413, 2414, 2415, 2416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 0, 0, 2418, 0,
	2539, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	2420, 0, 2422, 2530, 2550, 0, 0, 2300, 0, 0,
	0, 0, 0, 2425, 2530, 2558, 0, 0, 0, 0,
	0, 2530, 0, 2563, 0, 2432, 0, 2434, 1113, 1114,
	1910, 0, 0, 2016, 0, 2080, 0, 0, 0, 2585,
	2588, 2589, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123,
	3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133,
	3134, 2080, 2080, 0, 1974, 0, 0, 2054, 2055, 2056,
	2057, 0, 0, 2058, 0, 2048, 2052, 2049, 2050, 2040,
	1995, 0, 0, 2621, 2040, 2001, 2039, 0, 2015, 2029,
	2040, 2040, 0, -2, 2005, 2043, 0, 2018, 2030, 0,
	0, 762, 764, 766, 770, 772, 0, 0, 1931, -2,
	0, -2, 403, 1507, 0, 0, 0, 0, 0, 0,
	796, 798, 0, 0, 701, 0, 0, 0, 0, 1292,
	0, 1294, 1295, 0, 1297, 0, 1702, 790, 0, 793,
	0, 2081, 2084, 0, 0, 2095, 2101, 2102, 0, -2,
	0, 0, 2191, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 3063, 0, 829, 0, 544, 256, 0, 548,
	549, 0, 0, 497, 498, 499, 500, 502, 2688, 503,
	-2, -2, 0, 593, 256, 711, 683, 0, 256, 256,
	692, 0, 0, 256, 703, 256, 2642, 256, 2640, 277,
	708, 1857, 289, 0, 891, 0, 1771, 1780, 0, 930,
	0, 932, 0, 2612, 2613, 0, 921, 0, 1032, 0,
	1046, 1047, 1048, 1049, 0, 0, 0, 0, 1717, 0,
	0, 1662, 0, 0, 213, 3155, 0, 258, 0, 0,
	1470, 2627, 0, 1460, 0, 0, 2786, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 173, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 1532, 1534, 1541, 1543,
	0, 1537, 1538, 0, 1540, 1542, 1544, 0, 1547, 0,
	0, 0, 0, 0, 0, 551, 553, 554, 529, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 525, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 136, 140,
	1567, 3023, 0, 0, 0, 0, 1568, 1569, 1570, 1796,
	1797, 0, 1819, 1820, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 182, 0, 2594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	314, 0, 787, 0, 788, 0, 778, 401, 780, 781,
	397, 394, 396, 782, 0, 0, 0, 1560, 0, 1611,
	1609, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 0, 0, 0,
	0, -2, 1562, 1563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 392, 2593, 2603, 0, 1337,
	1338, 437, 440, 443, 446, 295, 0, 0, 0, 477,
	487, 0, 1390, 1362, 0, 0, 622, 401, 641, 643,
	0, 399, 2933, 2646, 1347, 1525, 1528, 0, 1508, 3155,
	1579, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 3155, 2622, 2676, 2677, 1810, 1820, 0, 2080, 0,
	1843, 1829, 0, 0, 0, 1843, 1847, 1848, 1850, 1851,
	0, 0, 2071, 2077, 722, 774, 1918, 1918, 401, 0,
	0, 1832, 1834, 0, 0, 0, 340, 0, 351, 2047,
	349, 0, 357, 0, 0, 2047, 348, 0, 635, 868,
	873, 401, 0, 0, 401, 1094, 1095, 1096, 1097, 1152,
	1196, 1208, 1264, 1115, 1117, 1118, 1119, 0, 1124, 0,
	0, 0, 1312, 1307, 1308, 1309, 2643, 2639, 1310, 1136,
	1210, 1139, 1210, 1142, 1210, 1145, 1147, 1165, 1171, 1184,
	1177, 1185, 0, 0, 0, 1198, 0, 0, 1220, 0,
	1229, 1243, -2, 1248, 1249, 0, 0, 0, 0, 0,
	0, 0, 1270, 1271, 1272, 1274, 1279, 1278, 0, 1284,
	1084, 2066, 1869, 1870, 1872, 0, 1881, 0, 0, 1957,
	-2, -2, 1956, 1960, 1961, -2, -2, -2, -2, 1877,
	0, 1886, 1883, 0, 1942, 1650, 1651, 0, 0, 893,
	0, 0, -2, -2, 0, 0, 0, 2296, 0, -2,
	2275, 2278, 2282, 2284, 2286, 0, 0, 0, 0, 0,
	0, 2519, 0, 2521, 2297, 2574, 2577, 2512, 0, 2468,
	0, 0, 1930, 1931, 1931, 0, 2366, 0, 2527, 0,
	2534, 2535, 0, 2359, 0, 2568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2370, 0, 0, 0, 0,
	2402, 2405, 2408, 2411, 0, 0, 0, 0, 2391, 0,
	0, 0, 2395, 2161, 2147, 0, 2189, 2187, 2188, 2182,
	2189, 2186, 2139, 0, 2138, 0, 2417, 0, 2419, 2421,
	0, 0, 2423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2303, 2304, 2305,
	2325, 2424, 2556, 2557, 0, 0, 0, 0, 0, 0,
	2430, 0, 2562, 2431, 2433, 1918, 0, 1911, 0, 2014,
	0, 1976, 1965, 2079, 0, 2583, 2047, 1978, 1980, 2584,
	2624, 1965, 1965, 0, 2531, 0, 0, 2034, 0, 0,
	0, 2036, 1999, 0, 0, 1993, 0, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 2000, 2015, 2038, 2002, 2006, 2654,
	0, 2018, 2042, 0, 2040, 0, 2025, 0, 2027, 2064,
	0, 2011, 2044, 0, 0, 2669, 2080, 0, 450, 458,
	459, 451, 452, 453, 454, 0, 1702, 0, 0, 0,
	0, 0, 1293, 1296, 0, 814, 0, 0, 2533, 0,
	2086, 0, 2092, 0, 0, 0, 0, 816, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 541, 547, 0,
	0, 496, 0, 495, 501, 589, 682, 256, 687, 690,
	2591, 256, 696, 699, 705, 285, 0, 881, -2, 928,
	929, 931, 0, 927, 1037, 1033, 210, 1718, 0, 0,
	0, 1658, 0, 1373, 0, 1368, 1369, 1660, 2638, 1664,
	1670, 1673, 0, 215, 3155, 227, 0, 3155, 0, 1434,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 3155,
	256, 3155, 256, 231, 233, 236, 0, 242, 238, 0,
	1370, 0, 1422, 0, 0, 1425, 159, 1718, 0, 0,
	162, 166, 178, 0, 0, 0, 192, 0, 0, 0,
	1675, 1679, 1687, 0, 0, 0, 1535, 1536, 1539, 1545,
	1548, 103, 0, 0, 0, 1683, 1685, 1691, 556, 557,
	558, 0, 0, 0, 520, 521, 127, 130, 3155, 2636,
	0, 132, 3155, 0, 141, 1820, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	164, 168, 179, 0, 1693, 161, 181, 0, 271, 0,
	0, 261, 256, 3155, 0, 263, 0, 264, 265, 279,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 784, 0, 779, 0, 0, 0, 1350, 1351, 1610,
	0, 1553, 1554, 323, 324, 0, 1565, 1559, 0, 0,
	0, 0, 0, 1695, 1696, 0, 0, 0, 1716, 1711,
	2047, 291, 0, 2047, 299, 0, 2599, 0, 327, 336,
	474, 0, 486, 488, 490, 0, 0, 0, 1389, 1488,
	1391, 1393, 1394, 1395, 258, 0, 2677, 1460, 2845, 2677,
	0, 0, 1357, 0, 0, 0, 628, 624, 0, 633,
	637, 638, 0, 0, 0, -2, 0, 0, 0, 0,
	-2, 0, 0, 0, 1626, 1620, 1621, 0, 0, 0,
	0, 3155, 1812, 1820, 0, 1916, 1931, 648, 1821, 1843,
	0, 0, 0, 1831, 1827, 1824, 2080, 0, 0, 0,
	0, 0, 2073, 2076, 725, 726, 378, 0, 401, 0,
	0, 0, 0, 0, 0, 355, 0, 358, 0, 0,
	0, 363, 364, 365, 366, 367, 368, 0, 0, 0,
	0, 373, 374, 357, 390, 342, 2047, 0, 357, 0,
	0, 870, 0, 1085, 0, 0, 1092, 0, 0, 1714,
	1128, 0, 1138, 1140, 1143, 1187, 1189, 1210, 1201, 0,
	1221, 1247, 1254, 2623, 1255, 1412, 0, 1412, 0, 0,
	1275, 1281, 1879, 0, 1954, 1885, 1936, 1937, 0, 1652,
	0, 2214, 2259, 0, 0, -2, 0, 0, 2263, 0,
	0, 0, -2, 0, 0, 0, 2520, 2522, 0, 2576,
	2511, 2361, 0, 0, 0, 2365, 2349, 2350, 0, 2471,
	2537, 2566, 2570, 0, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 0, 2618, 2655, 2659, 2444, 2445, 2449, 2632, 0,
	0, 0, 2374, 0, 0, 0, 0, 0, 0, 0,
	0, 2180, 2184, 0, 0, 2538, 2549, 2551, 2301, 2302,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	-2, -2, -2, 2319, 2320, 2321, -2, -2, -2, 2326,
	0, 0, 0, 2552, 2554, 2555, 2559, 2560, 0, 2427,
	2428, 2429, 2561, 0, 1918, 1912, 2017, 1973, 0, 2078,
	1977, 0, 1973, 1973, 1925, 2032, 0, 0, 2060, 0,
	1996, 0, 1997, 0, 0, 2037, 0, 2004, 2041, 0,
	2020, 2022, 2007, 2008, 2026, 0, 2010, 0, 2013, 2361,
	-2, 402, 404, 406, 0, 409, 410, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 805, 1702, 1702,
	0, 0, 0, 807, 0, 791, 0, 0, 2088, 0,
	0, 2164, 2168, 2192, 820, 822, 0, 0, 0, 0,
	3082, 3017, 0, 0, 819, 550, 493, 494, 684, 693,
	287, 0, 2045, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 257, 0, 1469, 0, 1432,
	0, 0, 1459, 0, 0, 1475, 217, 218, 219, 0,
	0, 0, 0, 229, 0, 0, 225, 0, 235, 241,
	240, 0, 1419, 0, 0, 0, 0, 1663, 0, 0,
	0, 189, 190, 191, 0, 196, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 138, 0, 0, 0, 143, 144, 0, 0, 1802,
	1803, 0, 1790, 186, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 1649, 281, 0, 0, 0, 0,
	0, 315, 316, 317, 318, 0, 303, 305, 0, 0,
	0, 0, 325, 0, 398, 393, 395, 1552, 1613, 1614,
	1561, 1676, 1680, 1688, 0, 0, 0, 0, 0, 839,
	1715, 0, 299, 297, 0, 300, 299, 293, 0, 0,
	0, 0, 0, 0, 0, 570, 1360, 1476, 0, 0,
	1478, 1396, 1400, 0, 2677, 2677, 0, 2629, 0, 1358,
	0, 0, 1477, 620, 0, 627, 0, 642, 2628, 0,
	0, 0, 1529, 0, 0, 1556, 1508, 1582, 1508, 0,
	1625, 1627, 0, 1635, 0, 0, 0, 1814, 1820, 0,
	1807, 1808, 1950, 1822, 1841, -2, 0, 0, 1931, 1849,
	1846, 1852, 1853, 0, 0, 381, 0, 1833, 1835, 0,
	1331, 1334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 357, 354, 344, 2047, 385, 0, 401, 401,
	1120, 1713, 1125, 2644, 1197, 1219, 1256, 1411, 0, 0,
	1258, 0, 0, 1953, 1940, 1941, 1938, 1652, 2261, 2265,
	0, 0, 0, 2267, -2, 0, 2289, -2, -2, 2523,
	2575, 2340, 1931, 2362, 2364, 2351, 2569, 2209, 0, 2451,
	2448, 0, 2435, 0, 2386, 2387, 0, 0, 2390, 2392,
	2393, 2394, 2148, 2141, 2140, 2548, 0, 0, 0, 0,
	2426, 1913, 0, 2440, 0, 0, 1981, 2440, 2440, 2033,
	0, 2035, 1994, 1982, 0, 1991, 0, 2655, 2019, 0,
	2023, 2028, 2012, 0, 407, 0, 411, 412, 413, 414,
	416, 0, 0, 0, 0, 0, 455, 808, 809, 0,
	0, 0, 0, 1701, 2082, 2087, 0, 2093, 2163, 0,
	0, 0, 0, 0, 0, 0, 0, 830, 288, 0,
	1035, 1036, 211, 212, 1374, 1372, 1667, 1671, 1668, 0,
	214, 0, 0, 1433, 0, 1436, 0, 0, 0, 0,
	1443, 1460, 0, 0, 0, 0, 0, 0, 1462, 0,
	1461, 0, 0, 1492, 0, 1640, 1647, 0, -2, 0,
	0, 0, 221, 247, 0, 0, 0, 0, 250, 1719,
	223, 0, 0, 256, 256, 1371, 0, 0, 1659, 1661,
	1674, 0, 0, 0, 0, 199, 0, 0, 1677, 1681,
	1689, 1684, 1686, 1692, 559, 515, 0, 0, 133, 142,
	1793, 0, 0, 0, 1804, 0, 185, 0, 0, 0,
	1694, 269, 270, 0, 256, 0, 256, 262, 256, 1649,
	0, 0, 0, 0, 0, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 1697, 1698, 290, 0,
	0, 292, 391, 299, 476, 484, 489, 491, 492, 1421,
	0, 1488, 1480, 1481, 1482, 0, 1392, 1487, 1489, 0,
	0, 1397, 0, 0, 0, 0, 1377, 1359, 0, 1390,
	1362, 0, 625, 0, 400, 1348, 1526, 1574, 1508, 0,
	1577, 0, 0, 1617, 0, 0, 0, 0, 0, 0,
	0, 1816, 1820, 0, 1809, 1810, 1843, 1949, 0, 0,
	0, 1830, 1950, 0, 401, 0, 401, 359, 0, 360,
	361, 362, 369, 370, 371, 372, 343, 346, 0, 357,
	872, 874, 0, 0, 880, 1086, 1091, 1410, 0, 0,
	0, 0, 1939, 2269, -2, -2, 2290, 0, 2656, 2658,
	1931, 0, 2437, 1933, 0, 0, -2, 0, 0, 0,
	1914, 1897, 0, 1972, 1964, 1966, 1968, 3002, 2757, 3154,
	1898, 1899, 2059, 0, 0, 2021, 408, 417, 418, 0,
	420, 421, 810, 0, 0, 0, 0, 2089, 0, 0,
	0, 817, 0, 0, 0, 0, 1025, 0, 0, 1669,
	216, 0, 0, 1437, 1438, 1440, 0, 1442, 1444, 1445,
	1362, 0, 1449, 0, 2679, 0, 1454, 1457, 1458, 0,
	0, 1471, 1493, 0, 1502, 0, 1642, 1652, 1646, 0,
	1644, 1504, 0, 220, 249, 222, 251, 246, 0, 1649,
	0, 224, 234, 0, 0, 163, 0, 0, 2750, 202,
	200, 198, 131, 137, 139, 145, 1656, 188, 0, 165,
	0, 271, 280, 1648, 282, 266, 256, 0, 302, 304,
	306, 307, 308, 309, 0, 1678, 1682, 1690, 0, 1705,
	1706, 1707, 1708, 1709, 0, 0, 0, 301, 0, 0,
	0, 483, 1362, 1420, 1361, 1479, 0, 1490, 1362, 0,
	0, 0, 0, 0, 0, 1364, 0, 1363, 0, 0,
	626, 629, 0, 632, 2080, 639, 0, 0, 0, 1581,
	0, 1628, 1626, 0, 1634, 0, 0, 0, 1789, 0,
	0, 1811, 1812, 646, 1836, 0, 0, 1843, 1854, 380,
	0, 383, 356, 0, 345, 0, 876, 0, 878, 0,
	1257, 1259, 0, 0, 2363, 2455, 0, 0, 2388, 2389,
	-2, 0, 2329, 2439, 2441, 0, 0, 0, 0, 0,
	1983, 1992, 419, 1702, 1702, 1702, 2083, 824, 825, 827,
	821, 823, 0, 0, 1665, 0, 1672, 258, 1435, 1439,
	0, 1446, 0, 0, 0, 1450, 1512, 0, 0, 1529,
	1529, 1463, 0, 0, 1496, 1497, 1417, 0, 1498, 1499,
	1500, 1641, 1942, 1647, 1362, 0, 0, 248, 253, 0,
	0, 0, 0, 0, 0, 187, 0, 260, 283, 1649,
	0, 0, 1710, 0, 0, 298, 332, 506, 504, 1364,
	0, 1491, 1398, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1399, 1504, 0, 0, 1468, 1375, 0, 1378,
	0, 1360, 0, 630, 631, 634, 0, 1575, 0, 1582,
	0, 0, 1635, 0, 0, 1799, 1788, 1820, 1813, 1814,
	2080, 0, 1844, 0, 352, 353, 875, 0, 0, 1267,
	1268, 0, 0, 0, 0, 2450, 1934, 2330, 0, 0,
	1967, 1969, 1970, 1971, 811, 812, 813, 0, 0, 1666,
	228, 0, 1506, 1448, 1517, 0, 0, 0, 0, 0,
	1464, 1494, 1495, 1492, 1416, 0, 1645, 1643, 1473, 1506,
	1508, 226, 0, 1504, 0, 1426, 0, 0, 1429, 0,
	0, 203, 2750, 201, 0, 256, 789, 1702, 256, 0,
	335, 0, 539, 505, 507, 0, 0, 511, 512, 513,
	1356, 0, 1484, 1486, 1502, 1504, 1417, 0, 1379, 1421,
	1377, 1576, 1580, 1578, 1618, 1504, 0, 1502, 0, 1806,
	1820, 1800, 1801, 0, 1816, 0, 0, 401, 877, 879,
	2447, 2467, 2456, -2, 3085, 2758, 0, 2467, 2467, 2442,
	2443, 0, 0, 0, 1362, 0, 1451, 1513, 1514, 0,
	1509, 1510, 1511, 2678, 1452, 1453, 1455, 1456, 2080, 0,
	1503, 1512, 252, 1362, 1423, 0, 0, 1424, 0, 0,
	206, 0, 208, 284, 1700, 1703, 0, 310, 0, 0,
	479, 537, 0, 0, 508, 509, 531, 510, 1353, 1355,
	1362, 0, 1417, 1502, 1362, 0, 0, 0, 1362, 1364,
	1502, 0, 1417, 0, 1795, 1805, 0, 1815, 1789, 0,
	1839, 0, 382, 2452, 0, 0, 2458, 2459, 2460, 2461,
	2462, 2453, 2454, 826, 828, 1441, 1447, 0, 1515, 0,
	1516, 0, 0, 0, 1472, 1501, 1517, 232, 1427, 0,
	1430, 0, 204, 0, 0, 330, 331, 536, 532, 1483,
	1485, 1362, 1417, 2080, 1365, 0, 1367, 1364, 1376, 1417,
	0, 1362, 0, 1818, 1794, 1798, 2637, 1799, 1837, 0,
	0, 0, 2464, 2465, 0, 0, 0, 1518, 0, 1521,
	1522, 0, 1519, 1492, 0, 0, 256, 0, 1918, 2080,
	1362, 1655, 1366, 1356, 1362, 1504, 2080, 1502, 1792, 1820,
	1806, 0, 2080, 2463, 2466, 2457, 1505, 1520, 1523, 1524,
	1474, 0, 0, 1704, 333, 0, 0, 538, 533, 534,
	1655, 2080, 1467, 0, 1654, 1354, 2080, 1502, 1655, 1417,
	1785, 1791, 0, 0, 1795, 2080, 1840, 1414, 0, 0,
	535, 1465, 1655, 1653, 1655, 1417, 1631, 1362, 1817, 1792,
	1838, 1428, 1413, 0, 334, 1466, 1629, 1362, 2080, 1786,
	0, 2080, 1655, 0, 1655, 1632, 1414, 1630, 1431,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 649, 3, 655, 650, 3,
	661, 662, 653, 651, 666, 652, 663, 654, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 670, 667,
	641, 643, 642, 646, 665, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 659, 3, 660, 656, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 668, 648, 669, 644,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 645, 57984, 647,
	57985, 657, 57986, 658, 57987, 664, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1784
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1810
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1824
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1915
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1919
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1930
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1942
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1995
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2011
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2066
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2079
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2092
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2128
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2162
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2186
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2195
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2216
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2224
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2260
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2271
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2283
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = true
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = false
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2386
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2422
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2430
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2441
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2451
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2461
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2470
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2481
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2487
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2518
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2609
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2653
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2663
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2666
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2672
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2717
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2724
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = nil
		}
	case 248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = true
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = false
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = nil
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3010
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3107
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3115
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3297
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3362
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = nil
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3462
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3535
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3734
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3743
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3749
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3754
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3759
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3791
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3867
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3881
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3953
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4099
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4120
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4130
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4149
		{
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "CREATE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4164
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4167
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4188
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = true
		}
	case 482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = false
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = true
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = false
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4230
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4284
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4285
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4287
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4312
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4319
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			return unimplemented(sqllex, "create window function")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4391
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4392
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4526
		{
		}
	case 555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4527
		{
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = true
		}
	case 561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = false
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4577
		{
			return unimplemented(sqllex, "create access method")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return unimplemented(sqllex, "create cast")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4585
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			return unimplemented(sqllex, "create publication")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4588
		{
			return unimplemented(sqllex, "create rule")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			return unimplemented(sqllex, "create server")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4596
		{
		}
	case 580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4597
		{
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4600
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4601
		{
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			return unimplemented(sqllex, "drop server")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4670
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4702
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4713
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4749
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4767
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4798
		{
		}
	case 641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4800
		{
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.str = ""
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4818
		{

			sqlVAL.union.val = nil
		}
	case 646:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "DELETE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4846
		{
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4857
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4882
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "DROP")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4905
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5083
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5122
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5149
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5158
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5182
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5190
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5201
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5209
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "DELETE")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "INSERT")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "DELETE")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "INSERT")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5380
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5413
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5421
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5454
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5505
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5555
		{
			return helpWith(sqllex, "GRANT")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5706
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5719
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{
			return helpWith(sqllex, "RESET")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5748
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			return helpWith(sqllex, "RESET")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5778
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "USE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5796
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5797
		{
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "USE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5821
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5865
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5929
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5937
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5944
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5945
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5975
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5981
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5990
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5995
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6017
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6042
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6058
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6062
		{
			return unimplemented(sqllex, "set from current")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6089
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6106
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = tree.Low
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = tree.Normal
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = tree.High
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6242
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = true
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = false
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = true
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = false
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = false
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6387
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6439
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = int64(1)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = int64(1)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = int64(1)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6495
		{
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6498
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6503
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6513
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6518
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6523
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6535
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.str = "client_encoding"
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6555
		{
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6557
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.str = "timezone"
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6563
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6598
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6606
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6619
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6627
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6699
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6738
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6743
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6752
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6758
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6772
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6783
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6806
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6817
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6835
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6865
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6875
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6888
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6903
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6914
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6927
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6936
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6963
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6968
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = true
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = true
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = false
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7004
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7005
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7006
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7023
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7049
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7050
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7066
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7074
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7082
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7118
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7123
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7125
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7129
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = true
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = false
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7144
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7149
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7208
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7218
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7223
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = true
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = false
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7241
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7255
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7266
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7270
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7280
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7291
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7305
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7313
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7318
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7323
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7327
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7341
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7357
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7362
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7367
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7372
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7377
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7397
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7410
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7415
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7427
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7432
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7443
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7454
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7472
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7480
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7501
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7506
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7511
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7515
		{
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7524
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7538
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7547
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7559
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7625
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7635
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7648
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7783
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7886
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7894
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7945
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7946
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7947
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7948
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7954
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7955
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7956
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7996
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8009
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8041
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8049
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8060
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8096
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8124
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8160
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8175
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8203
		{

			sqlVAL.union.val = nil
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8209
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.str = ""
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8219
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = nil
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8242
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8246
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8282
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8295
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8309
		{
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8310
		{
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8311
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8366
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8403
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8409
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.str = ""
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8548
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8655
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8700
		{

			sqlVAL.union.val = true
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = false
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8710
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8714
		{
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8717
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8817
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8828
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8845
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8855
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8870
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8938
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8940
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8941
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8942
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9025
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9110
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9119
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9127
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9138
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9166
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9168
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9172
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9175
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9183
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9199
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9230
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9264
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.str = ""
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9284
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = true
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9307
		{

			sqlVAL.union.val = true
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = false
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9324
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9338
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9350
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9362
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9373
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9384
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = false
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = true
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = true
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = nil
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9531
		{
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9532
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9557
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9559
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9561
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9563
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9565
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9567
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9602
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9620
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9639
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9656
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9673
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9677
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = false
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = true
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = false
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = true
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = false
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9731
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9737
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9743
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9751
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.str = ""
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.str = ""
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = true
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = false
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = false
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9818
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9824
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10049
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10055
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10067
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10073
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10087
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10093
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10152
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = true
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = false
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10216
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.str = ""
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10251
		{
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10252
		{
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10255
		{
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10256
		{
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10267
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10294
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10344
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10352
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10363
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10368
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10369
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10388
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10401
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10412
		{
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10429
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10435
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10443
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10450
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10454
		{
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10455
		{
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10498
		{
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.str = ""
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.str = ""
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10629
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10634
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{

		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10666
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.str = ""
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.str = ""
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.str = ""
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.str = ""
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10721
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10746
		{
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10747
		{
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10776
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10794
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10901
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10939
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10992
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11007
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11151
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11186
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11187
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11188
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11249
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11293
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11309
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = true
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = false
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11362
		{
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11363
		{
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = nil
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11376
		{
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11377
		{
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = true
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = false
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = false
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = true
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11406
		{
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11407
		{
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11410
		{
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11411
		{
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11452
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11464
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11469
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11495
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11528
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11583
		{
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11584
		{
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11587
		{
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11588
		{
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11622
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11623
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11624
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11654
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11656
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11671
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11693
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11703
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11740
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11752
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11771
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11813
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11823
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11858
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11869
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11899
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = nil
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = true
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = false
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.str = tree.AstFull
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.str = tree.AstRight
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.str = tree.AstInner
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12113
		{
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12114
		{
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.str = tree.AstHash
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.str = ""
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12183
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12188
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12218
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12224
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12230
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12240
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = true
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = false
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = true
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = false
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12289
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12302
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12310
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12311
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12329
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12331
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12339
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12352
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12359
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12408
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12420
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12421
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12433
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = types.Geography
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12470
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12478
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12504
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12512
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = nil
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = types.Int2
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = types.Int
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = types.Float4
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = types.Float
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12555
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12563
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12571
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = types.Bool
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12585
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = types.Float
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12604
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12610
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12632
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = types.String
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = true
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = false
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = types.Date
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12681
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12689
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12703
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12712
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12720
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12737
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = true
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = false
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12749
		{
			sqlVAL.union.val = false
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12753
		{
			sqlVAL.union.val = types.Interval
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12757
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12761
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12788
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12796
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12804
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12818
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12845
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12860
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = nil
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12882
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12890
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12950
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12955
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12959
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13051
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13095
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13099
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13107
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13213
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13217
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13229
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13262
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13266
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13270
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13274
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13278
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13282
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13286
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13290
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13298
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13306
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13328
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13340
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13344
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13348
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13352
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13356
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13360
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13372
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13376
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13380
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13384
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13392
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13396
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13400
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13420
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13432
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13436
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13444
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13466
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13480
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13488
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13524
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13528
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13532
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13536
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13540
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13545
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13547
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13551
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13555
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13559
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13563
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13571
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13580
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13587
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13591
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13595
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13605
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13610
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13614
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13618
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13622
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13626
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13629
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13640
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13641
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13643
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13656
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13665
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13718
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13731
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13743
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13752
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13753
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13762
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13766
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13784
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13810
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13814
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13818
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13822
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13826
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13830
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13834
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13838
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13846
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13856
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13861
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13870
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13879
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13888
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13897
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13899
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13902
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13907
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13909
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13912
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13917
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13922
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13931
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13932
		{
			return unimplemented(sqllex, "treat")
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13938
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13953
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13958
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13964
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13968
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13974
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13978
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13989
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13995
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13999
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14005
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14013
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14017
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14021
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14028
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14048
		{
			sqlVAL.str = ""
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14054
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14058
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14064
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14072
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14080
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14088
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14094
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14107
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14135
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14139
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14143
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14147
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14154
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14163
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14167
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14171
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14175
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14180
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14193
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14197
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14204
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14216
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14220
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14224
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14240
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14241
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14242
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14243
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14244
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14245
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14246
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14247
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14248
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14249
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14250
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14251
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14253
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14254
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14255
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14256
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14257
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14258
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14259
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14260
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14261
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14262
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14263
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14264
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14265
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14266
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14267
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14268
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14269
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14270
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14271
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14272
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14273
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14274
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14275
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14280
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14296
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14303
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14304
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14305
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14306
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14329
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14333
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14339
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14343
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14347
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14358
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14362
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14368
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14372
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14379
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14389
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14395
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14399
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14405
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14409
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14415
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14419
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14425
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14429
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14452
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14456
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14460
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14466
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14473
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14477
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14494
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14498
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14502
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14506
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14510
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14516
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14522
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14528
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14532
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14536
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14542
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14554
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14561
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14571
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14577
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14581
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14588
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14594
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14598
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14605
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14611
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14615
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14620
		{
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14621
		{
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14625
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14629
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14635
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14644
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14648
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14652
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14664
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14674
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14678
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14697
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14705
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14728
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14737
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14741
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14745
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14749
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14755
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14759
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14774
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14778
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14790
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14794
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14803
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14814
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14823
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14831
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14848
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14933
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14941
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14945
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14951
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14961
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14967
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14974
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15001
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15008
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15012
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2656:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15016
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2658:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15030
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15034
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15038
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15051
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15060
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15078
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15091
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15098
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15123
		{
			sqlVAL.str = ""
		}
	case 2678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15129
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15133
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
