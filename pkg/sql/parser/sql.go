// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:932
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14609

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1733,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 452,
	-2, 0,
	-1, 71,
	8, 909,
	29, 909,
	621, 909,
	622, 909,
	-2, 0,
	-1, 72,
	8, 909,
	29, 909,
	621, 909,
	622, 909,
	-2, 0,
	-1, 79,
	254, 268,
	543, 268,
	-2, 0,
	-1, 93,
	242, 1464,
	256, 1464,
	272, 448,
	410, 448,
	422, 1211,
	463, 448,
	477, 1211,
	527, 1211,
	555, 448,
	582, 1211,
	-2, 0,
	-1, 99,
	137, 1733,
	249, 1733,
	566, 1733,
	567, 1733,
	-2, 0,
	-1, 117,
	156, 1704,
	176, 1704,
	189, 1704,
	252, 1704,
	285, 1704,
	359, 1704,
	370, 1704,
	561, 1704,
	-2, 1675,
	-1, 159,
	164, 1041,
	271, 1041,
	413, 1002,
	482, 1002,
	526, 1002,
	546, 1041,
	548, 1002,
	-2, 0,
	-1, 164,
	4, 1735,
	21, 1735,
	22, 1735,
	23, 1735,
	24, 1735,
	25, 1735,
	26, 1735,
	27, 1735,
	28, 1735,
	30, 1735,
	31, 1735,
	37, 1735,
	41, 1735,
	43, 1735,
	44, 1735,
	46, 1735,
	47, 1735,
	48, 1735,
	49, 1735,
	50, 1735,
	51, 1735,
	52, 1735,
	53, 1735,
	54, 1735,
	56, 1735,
	57, 1735,
	58, 1735,
	59, 1735,
	61, 1735,
	62, 1735,
	63, 1735,
	64, 1735,
	65, 1735,
	66, 1735,
	67, 1735,
	71, 1735,
	72, 1735,
	73, 1735,
	74, 1735,
	76, 1735,
	77, 1735,
	78, 1735,
	82, 1735,
	83, 1735,
	84, 1735,
	85, 1735,
	86, 1735,
	87, 1735,
	88, 1735,
	89, 1735,
	92, 1735,
	93, 1735,
	94, 1735,
	95, 1735,
	96, 1735,
	98, 1735,
	100, 1735,
	101, 1735,
	102, 1735,
	103, 1735,
	104, 1735,
	105, 1735,
	107, 1735,
	108, 1735,
	109, 1735,
	111, 1735,
	112, 1735,
	113, 1735,
	121, 1735,
	122, 1735,
	123, 1735,
	124, 1735,
	125, 1735,
	127, 1735,
	128, 1735,
	129, 1735,
	130, 1735,
	132, 1735,
	133, 1735,
	134, 1735,
	136, 1735,
	137, 1735,
	138, 1735,
	140, 1735,
	141, 1735,
	142, 1735,
	145, 1735,
	146, 1735,
	147, 1735,
	149, 1735,
	150, 1735,
	151, 1735,
	153, 1735,
	154, 1735,
	155, 1735,
	157, 1735,
	158, 1735,
	159, 1735,
	160, 1735,
	161, 1735,
	162, 1735,
	163, 1735,
	164, 1735,
	165, 1735,
	166, 1735,
	167, 1735,
	168, 1735,
	169, 1735,
	170, 1735,
	171, 1735,
	172, 1735,
	173, 1735,
	175, 1735,
	181, 1735,
	182, 1735,
	183, 1735,
	184, 1735,
	188, 1735,
	190, 1735,
	191, 1735,
	192, 1735,
	194, 1735,
	195, 1735,
	198, 1735,
	199, 1735,
	200, 1735,
	201, 1735,
	202, 1735,
	203, 1735,
	204, 1735,
	205, 1735,
	206, 1735,
	207, 1735,
	208, 1735,
	209, 1735,
	210, 1735,
	211, 1735,
	213, 1735,
	214, 1735,
	216, 1735,
	217, 1735,
	219, 1735,
	220, 1735,
	221, 1735,
	222, 1735,
	223, 1735,
	224, 1735,
	225, 1735,
	226, 1735,
	227, 1735,
	228, 1735,
	229, 1735,
	231, 1735,
	232, 1735,
	234, 1735,
	235, 1735,
	236, 1735,
	237, 1735,
	238, 1735,
	242, 1735,
	243, 1735,
	244, 1735,
	245, 1735,
	248, 1735,
	249, 1735,
	250, 1735,
	251, 1735,
	253, 1735,
	255, 1735,
	256, 1735,
	258, 1735,
	260, 1735,
	261, 1735,
	262, 1735,
	264, 1735,
	268, 1735,
	269, 1735,
	270, 1735,
	271, 1735,
	272, 1735,
	273, 1735,
	275, 1735,
	276, 1735,
	277, 1735,
	279, 1735,
	280, 1735,
	282, 1735,
	283, 1735,
	286, 1735,
	287, 1735,
	288, 1735,
	289, 1735,
	290, 1735,
	291, 1735,
	292, 1735,
	295, 1735,
	296, 1735,
	297, 1735,
	298, 1735,
	300, 1735,
	301, 1735,
	302, 1735,
	303, 1735,
	304, 1735,
	305, 1735,
	306, 1735,
	307, 1735,
	308, 1735,
	309, 1735,
	310, 1735,
	311, 1735,
	312, 1735,
	313, 1735,
	314, 1735,
	315, 1735,
	316, 1735,
	317, 1735,
	318, 1735,
	319, 1735,
	320, 1735,
	321, 1735,
	322, 1735,
	324, 1735,
	326, 1735,
	327, 1735,
	328, 1735,
	329, 1735,
	330, 1735,
	331, 1735,
	332, 1735,
	333, 1735,
	334, 1735,
	335, 1735,
	336, 1735,
	337, 1735,
	338, 1735,
	339, 1735,
	340, 1735,
	341, 1735,
	342, 1735,
	344, 1735,
	345, 1735,
	347, 1735,
	349, 1735,
	350, 1735,
	351, 1735,
	352, 1735,
	354, 1735,
	355, 1735,
	356, 1735,
	357, 1735,
	358, 1735,
	361, 1735,
	363, 1735,
	365, 1735,
	366, 1735,
	367, 1735,
	368, 1735,
	371, 1735,
	372, 1735,
	373, 1735,
	375, 1735,
	377, 1735,
	378, 1735,
	379, 1735,
	380, 1735,
	381, 1735,
	382, 1735,
	383, 1735,
	384, 1735,
	385, 1735,
	386, 1735,
	387, 1735,
	388, 1735,
	389, 1735,
	391, 1735,
	392, 1735,
	393, 1735,
	394, 1735,
	395, 1735,
	396, 1735,
	397, 1735,
	398, 1735,
	399, 1735,
	400, 1735,
	401, 1735,
	402, 1735,
	403, 1735,
	404, 1735,
	405, 1735,
	407, 1735,
	408, 1735,
	409, 1735,
	411, 1735,
	412, 1735,
	413, 1735,
	414, 1735,
	415, 1735,
	416, 1735,
	417, 1735,
	418, 1735,
	419, 1735,
	420, 1735,
	421, 1735,
	422, 1735,
	423, 1735,
	424, 1735,
	426, 1735,
	428, 1735,
	429, 1735,
	430, 1735,
	436, 1735,
	437, 1735,
	438, 1735,
	440, 1735,
	441, 1735,
	442, 1735,
	443, 1735,
	444, 1735,
	445, 1735,
	446, 1735,
	447, 1735,
	448, 1735,
	449, 1735,
	451, 1735,
	452, 1735,
	453, 1735,
	455, 1735,
	456, 1735,
	457, 1735,
	458, 1735,
	459, 1735,
	460, 1735,
	461, 1735,
	463, 1735,
	464, 1735,
	465, 1735,
	466, 1735,
	467, 1735,
	468, 1735,
	469, 1735,
	470, 1735,
	471, 1735,
	472, 1735,
	473, 1735,
	474, 1735,
	475, 1735,
	477, 1735,
	478, 1735,
	479, 1735,
	480, 1735,
	481, 1735,
	482, 1735,
	484, 1735,
	485, 1735,
	486, 1735,
	487, 1735,
	488, 1735,
	489, 1735,
	491, 1735,
	492, 1735,
	493, 1735,
	494, 1735,
	495, 1735,
	496, 1735,
	497, 1735,
	498, 1735,
	500, 1735,
	502, 1735,
	503, 1735,
	504, 1735,
	505, 1735,
	506, 1735,
	507, 1735,
	508, 1735,
	509, 1735,
	510, 1735,
	511, 1735,
	512, 1735,
	513, 1735,
	514, 1735,
	515, 1735,
	516, 1735,
	517, 1735,
	518, 1735,
	519, 1735,
	520, 1735,
	522, 1735,
	523, 1735,
	525, 1735,
	526, 1735,
	528, 1735,
	529, 1735,
	530, 1735,
	531, 1735,
	532, 1735,
	533, 1735,
	535, 1735,
	536, 1735,
	538, 1735,
	539, 1735,
	540, 1735,
	541, 1735,
	542, 1735,
	544, 1735,
	546, 1735,
	547, 1735,
	548, 1735,
	549, 1735,
	550, 1735,
	551, 1735,
	552, 1735,
	554, 1735,
	555, 1735,
	556, 1735,
	557, 1735,
	559, 1735,
	560, 1735,
	563, 1735,
	564, 1735,
	565, 1735,
	566, 1735,
	567, 1735,
	568, 1735,
	569, 1735,
	570, 1735,
	572, 1735,
	575, 1735,
	576, 1735,
	577, 1735,
	578, 1735,
	579, 1735,
	580, 1735,
	582, 1735,
	583, 1735,
	584, 1735,
	585, 1735,
	586, 1735,
	587, 1735,
	588, 1735,
	589, 1735,
	594, 1735,
	595, 1735,
	596, 1735,
	597, 1735,
	598, 1735,
	599, 1735,
	-2, 0,
	-1, 165,
	1, 1583,
	135, 1583,
	260, 1583,
	346, 1583,
	408, 1583,
	418, 1583,
	603, 1583,
	634, 1583,
	-2, 0,
	-1, 167,
	1, 1583,
	634, 1583,
	-2, 0,
	-1, 168,
	1, 1583,
	634, 1583,
	-2, 0,
	-1, 169,
	1, 1583,
	543, 1583,
	634, 1583,
	-2, 0,
	-1, 201,
	156, 1703,
	176, 1703,
	189, 1703,
	252, 1703,
	285, 1703,
	359, 1703,
	370, 1703,
	561, 1703,
	-2, 1678,
	-1, 252,
	4, 1742,
	5, 1742,
	6, 1742,
	7, 1742,
	8, 1742,
	9, 1742,
	10, 1742,
	21, 1742,
	22, 1742,
	23, 1742,
	24, 1742,
	25, 1742,
	26, 1742,
	27, 1742,
	28, 1742,
	30, 1742,
	31, 1742,
	37, 1742,
	38, 1742,
	41, 1742,
	43, 1742,
	44, 1742,
	45, 1742,
	46, 1742,
	47, 1742,
	48, 1742,
	49, 1742,
	50, 1742,
	51, 1742,
	52, 1742,
	53, 1742,
	54, 1742,
	56, 1742,
	57, 1742,
	58, 1742,
	59, 1742,
	61, 1742,
	62, 1742,
	63, 1742,
	64, 1742,
	65, 1742,
	66, 1742,
	67, 1742,
	68, 1742,
	69, 1742,
	70, 1742,
	71, 1742,
	72, 1742,
	73, 1742,
	74, 1742,
	76, 1742,
	77, 1742,
	78, 1742,
	80, 1742,
	82, 1742,
	83, 1742,
	84, 1742,
	85, 1742,
	86, 1742,
	87, 1742,
	88, 1742,
	89, 1742,
	92, 1742,
	93, 1742,
	94, 1742,
	95, 1742,
	96, 1742,
	98, 1742,
	100, 1742,
	101, 1742,
	102, 1742,
	103, 1742,
	104, 1742,
	105, 1742,
	107, 1742,
	108, 1742,
	109, 1742,
	110, 1742,
	111, 1742,
	112, 1742,
	113, 1742,
	114, 1742,
	115, 1742,
	116, 1742,
	117, 1742,
	118, 1742,
	119, 1742,
	120, 1742,
	121, 1742,
	122, 1742,
	123, 1742,
	124, 1742,
	125, 1742,
	126, 1742,
	127, 1742,
	128, 1742,
	129, 1742,
	130, 1742,
	131, 1742,
	132, 1742,
	133, 1742,
	134, 1742,
	136, 1742,
	137, 1742,
	138, 1742,
	140, 1742,
	141, 1742,
	142, 1742,
	145, 1742,
	146, 1742,
	147, 1742,
	149, 1742,
	150, 1742,
	151, 1742,
	153, 1742,
	154, 1742,
	155, 1742,
	157, 1742,
	158, 1742,
	159, 1742,
	160, 1742,
	161, 1742,
	162, 1742,
	163, 1742,
	164, 1742,
	165, 1742,
	166, 1742,
	167, 1742,
	168, 1742,
	169, 1742,
	170, 1742,
	171, 1742,
	172, 1742,
	173, 1742,
	174, 1742,
	175, 1742,
	181, 1742,
	182, 1742,
	183, 1742,
	184, 1742,
	188, 1742,
	190, 1742,
	191, 1742,
	192, 1742,
	194, 1742,
	195, 1742,
	197, 1742,
	198, 1742,
	199, 1742,
	200, 1742,
	201, 1742,
	202, 1742,
	203, 1742,
	204, 1742,
	205, 1742,
	206, 1742,
	207, 1742,
	208, 1742,
	209, 1742,
	210, 1742,
	211, 1742,
	213, 1742,
	214, 1742,
	216, 1742,
	217, 1742,
	219, 1742,
	220, 1742,
	221, 1742,
	222, 1742,
	223, 1742,
	224, 1742,
	225, 1742,
	226, 1742,
	227, 1742,
	228, 1742,
	229, 1742,
	230, 1742,
	231, 1742,
	232, 1742,
	234, 1742,
	235, 1742,
	236, 1742,
	237, 1742,
	238, 1742,
	242, 1742,
	243, 1742,
	244, 1742,
	245, 1742,
	247, 1742,
	248, 1742,
	249, 1742,
	250, 1742,
	251, 1742,
	253, 1742,
	255, 1742,
	256, 1742,
	257, 1742,
	258, 1742,
	259, 1742,
	260, 1742,
	261, 1742,
	262, 1742,
	263, 1742,
	264, 1742,
	268, 1742,
	269, 1742,
	270, 1742,
	271, 1742,
	272, 1742,
	273, 1742,
	275, 1742,
	276, 1742,
	277, 1742,
	279, 1742,
	280, 1742,
	281, 1742,
	282, 1742,
	283, 1742,
	284, 1742,
	286, 1742,
	287, 1742,
	288, 1742,
	289, 1742,
	290, 1742,
	291, 1742,
	292, 1742,
	293, 1742,
	294, 1742,
	295, 1742,
	296, 1742,
	297, 1742,
	298, 1742,
	300, 1742,
	301, 1742,
	302, 1742,
	303, 1742,
	304, 1742,
	305, 1742,
	306, 1742,
	307, 1742,
	308, 1742,
	309, 1742,
	310, 1742,
	311, 1742,
	312, 1742,
	313, 1742,
	314, 1742,
	315, 1742,
	316, 1742,
	317, 1742,
	318, 1742,
	319, 1742,
	320, 1742,
	321, 1742,
	322, 1742,
	324, 1742,
	325, 1742,
	326, 1742,
	327, 1742,
	328, 1742,
	329, 1742,
	330, 1742,
	331, 1742,
	332, 1742,
	333, 1742,
	334, 1742,
	335, 1742,
	336, 1742,
	337, 1742,
	338, 1742,
	339, 1742,
	340, 1742,
	341, 1742,
	342, 1742,
	343, 1742,
	344, 1742,
	345, 1742,
	346, 1742,
	347, 1742,
	348, 1742,
	349, 1742,
	350, 1742,
	351, 1742,
	352, 1742,
	353, 1742,
	354, 1742,
	355, 1742,
	356, 1742,
	357, 1742,
	358, 1742,
	361, 1742,
	363, 1742,
	366, 1742,
	367, 1742,
	368, 1742,
	371, 1742,
	372, 1742,
	373, 1742,
	374, 1742,
	375, 1742,
	376, 1742,
	377, 1742,
	378, 1742,
	379, 1742,
	380, 1742,
	381, 1742,
	382, 1742,
	383, 1742,
	384, 1742,
	385, 1742,
	386, 1742,
	387, 1742,
	388, 1742,
	389, 1742,
	391, 1742,
	392, 1742,
	393, 1742,
	394, 1742,
	395, 1742,
	396, 1742,
	397, 1742,
	398, 1742,
	399, 1742,
	400, 1742,
	401, 1742,
	402, 1742,
	403, 1742,
	404, 1742,
	405, 1742,
	407, 1742,
	408, 1742,
	409, 1742,
	411, 1742,
	412, 1742,
	413, 1742,
	414, 1742,
	415, 1742,
	416, 1742,
	417, 1742,
	418, 1742,
	419, 1742,
	420, 1742,
	421, 1742,
	422, 1742,
	423, 1742,
	424, 1742,
	426, 1742,
	428, 1742,
	429, 1742,
	430, 1742,
	436, 1742,
	437, 1742,
	438, 1742,
	440, 1742,
	441, 1742,
	442, 1742,
	443, 1742,
	444, 1742,
	445, 1742,
	446, 1742,
	447, 1742,
	448, 1742,
	449, 1742,
	451, 1742,
	452, 1742,
	453, 1742,
	454, 1742,
	455, 1742,
	456, 1742,
	457, 1742,
	458, 1742,
	459, 1742,
	460, 1742,
	461, 1742,
	463, 1742,
	464, 1742,
	465, 1742,
	466, 1742,
	467, 1742,
	468, 1742,
	469, 1742,
	470, 1742,
	471, 1742,
	472, 1742,
	473, 1742,
	474, 1742,
	475, 1742,
	477, 1742,
	478, 1742,
	479, 1742,
	480, 1742,
	481, 1742,
	482, 1742,
	483, 1742,
	484, 1742,
	485, 1742,
	486, 1742,
	487, 1742,
	488, 1742,
	489, 1742,
	490, 1742,
	491, 1742,
	492, 1742,
	493, 1742,
	494, 1742,
	495, 1742,
	496, 1742,
	497, 1742,
	498, 1742,
	500, 1742,
	502, 1742,
	503, 1742,
	504, 1742,
	505, 1742,
	506, 1742,
	507, 1742,
	508, 1742,
	509, 1742,
	510, 1742,
	511, 1742,
	512, 1742,
	513, 1742,
	514, 1742,
	515, 1742,
	516, 1742,
	517, 1742,
	518, 1742,
	519, 1742,
	520, 1742,
	522, 1742,
	523, 1742,
	524, 1742,
	525, 1742,
	526, 1742,
	528, 1742,
	529, 1742,
	530, 1742,
	531, 1742,
	532, 1742,
	533, 1742,
	535, 1742,
	536, 1742,
	538, 1742,
	539, 1742,
	540, 1742,
	541, 1742,
	542, 1742,
	544, 1742,
	546, 1742,
	547, 1742,
	548, 1742,
	549, 1742,
	550, 1742,
	551, 1742,
	552, 1742,
	553, 1742,
	554, 1742,
	555, 1742,
	556, 1742,
	557, 1742,
	559, 1742,
	560, 1742,
	562, 1742,
	563, 1742,
	564, 1742,
	565, 1742,
	566, 1742,
	567, 1742,
	568, 1742,
	569, 1742,
	570, 1742,
	571, 1742,
	572, 1742,
	575, 1742,
	576, 1742,
	577, 1742,
	578, 1742,
	579, 1742,
	580, 1742,
	582, 1742,
	583, 1742,
	584, 1742,
	585, 1742,
	586, 1742,
	587, 1742,
	588, 1742,
	589, 1742,
	594, 1742,
	595, 1742,
	596, 1742,
	597, 1742,
	598, 1742,
	599, 1742,
	600, 1742,
	614, 1742,
	621, 1742,
	622, 1742,
	623, 1742,
	631, 1742,
	635, 1742,
	-2, 0,
	-1, 797,
	4, 1462,
	21, 1462,
	22, 1462,
	23, 1462,
	24, 1462,
	25, 1462,
	26, 1462,
	27, 1462,
	28, 1462,
	30, 1462,
	31, 1462,
	37, 1462,
	41, 1462,
	43, 1462,
	44, 1462,
	46, 1462,
	47, 1462,
	48, 1462,
	49, 1462,
	50, 1462,
	51, 1462,
	52, 1462,
	53, 1462,
	54, 1462,
	56, 1462,
	57, 1462,
	58, 1462,
	59, 1462,
	61, 1462,
	62, 1462,
	63, 1462,
	64, 1462,
	65, 1462,
	66, 1462,
	67, 1462,
	71, 1462,
	72, 1462,
	73, 1462,
	74, 1462,
	76, 1462,
	77, 1462,
	78, 1462,
	82, 1462,
	83, 1462,
	84, 1462,
	85, 1462,
	86, 1462,
	87, 1462,
	88, 1462,
	89, 1462,
	92, 1462,
	93, 1462,
	94, 1462,
	95, 1462,
	96, 1462,
	98, 1462,
	100, 1462,
	101, 1462,
	102, 1462,
	103, 1462,
	104, 1462,
	105, 1462,
	107, 1462,
	108, 1462,
	109, 1462,
	111, 1462,
	112, 1462,
	113, 1462,
	121, 1462,
	122, 1462,
	123, 1462,
	124, 1462,
	125, 1462,
	127, 1462,
	128, 1462,
	129, 1462,
	130, 1462,
	132, 1462,
	133, 1462,
	134, 1462,
	136, 1462,
	137, 1462,
	138, 1462,
	140, 1462,
	141, 1462,
	142, 1462,
	145, 1462,
	146, 1462,
	147, 1462,
	149, 1462,
	150, 1462,
	151, 1462,
	153, 1462,
	154, 1462,
	155, 1462,
	157, 1462,
	158, 1462,
	159, 1462,
	160, 1462,
	161, 1462,
	162, 1462,
	163, 1462,
	164, 1462,
	165, 1462,
	166, 1462,
	167, 1462,
	168, 1462,
	169, 1462,
	170, 1462,
	171, 1462,
	172, 1462,
	173, 1462,
	175, 1462,
	181, 1462,
	182, 1462,
	183, 1462,
	184, 1462,
	188, 1462,
	190, 1462,
	191, 1462,
	192, 1462,
	194, 1462,
	195, 1462,
	198, 1462,
	199, 1462,
	200, 1462,
	201, 1462,
	202, 1462,
	203, 1462,
	204, 1462,
	205, 1462,
	206, 1462,
	207, 1462,
	208, 1462,
	209, 1462,
	210, 1462,
	211, 1462,
	213, 1462,
	214, 1462,
	216, 1462,
	217, 1462,
	219, 1462,
	220, 1462,
	221, 1462,
	222, 1462,
	223, 1462,
	224, 1462,
	225, 1462,
	226, 1462,
	227, 1462,
	228, 1462,
	229, 1462,
	231, 1462,
	232, 1462,
	234, 1462,
	235, 1462,
	236, 1462,
	237, 1462,
	238, 1462,
	242, 1462,
	243, 1462,
	244, 1462,
	245, 1462,
	248, 1462,
	249, 1462,
	250, 1462,
	251, 1462,
	253, 1462,
	255, 1462,
	256, 1462,
	258, 1462,
	260, 1462,
	261, 1462,
	262, 1462,
	264, 1462,
	268, 1462,
	269, 1462,
	270, 1462,
	271, 1462,
	272, 1462,
	273, 1462,
	275, 1462,
	276, 1462,
	277, 1462,
	279, 1462,
	280, 1462,
	282, 1462,
	283, 1462,
	286, 1462,
	287, 1462,
	288, 1462,
	289, 1462,
	290, 1462,
	291, 1462,
	292, 1462,
	295, 1462,
	296, 1462,
	297, 1462,
	298, 1462,
	300, 1462,
	301, 1462,
	302, 1462,
	303, 1462,
	304, 1462,
	305, 1462,
	306, 1462,
	307, 1462,
	308, 1462,
	309, 1462,
	310, 1462,
	311, 1462,
	312, 1462,
	313, 1462,
	314, 1462,
	315, 1462,
	316, 1462,
	317, 1462,
	318, 1462,
	319, 1462,
	320, 1462,
	321, 1462,
	322, 1462,
	324, 1462,
	326, 1462,
	327, 1462,
	328, 1462,
	329, 1462,
	330, 1462,
	331, 1462,
	332, 1462,
	333, 1462,
	334, 1462,
	335, 1462,
	336, 1462,
	337, 1462,
	338, 1462,
	339, 1462,
	340, 1462,
	341, 1462,
	342, 1462,
	344, 1462,
	345, 1462,
	347, 1462,
	349, 1462,
	350, 1462,
	351, 1462,
	352, 1462,
	354, 1462,
	355, 1462,
	356, 1462,
	357, 1462,
	358, 1462,
	361, 1462,
	363, 1462,
	366, 1462,
	367, 1462,
	368, 1462,
	371, 1462,
	372, 1462,
	373, 1462,
	375, 1462,
	377, 1462,
	378, 1462,
	379, 1462,
	380, 1462,
	381, 1462,
	382, 1462,
	383, 1462,
	384, 1462,
	385, 1462,
	386, 1462,
	387, 1462,
	388, 1462,
	389, 1462,
	391, 1462,
	392, 1462,
	393, 1462,
	394, 1462,
	395, 1462,
	396, 1462,
	397, 1462,
	398, 1462,
	399, 1462,
	400, 1462,
	401, 1462,
	402, 1462,
	403, 1462,
	404, 1462,
	405, 1462,
	407, 1462,
	408, 1462,
	409, 1462,
	411, 1462,
	412, 1462,
	413, 1462,
	414, 1462,
	415, 1462,
	416, 1462,
	417, 1462,
	418, 1462,
	419, 1462,
	420, 1462,
	421, 1462,
	422, 1462,
	423, 1462,
	424, 1462,
	426, 1462,
	428, 1462,
	429, 1462,
	430, 1462,
	436, 1462,
	437, 1462,
	438, 1462,
	440, 1462,
	441, 1462,
	442, 1462,
	443, 1462,
	444, 1462,
	445, 1462,
	446, 1462,
	447, 1462,
	448, 1462,
	449, 1462,
	451, 1462,
	452, 1462,
	453, 1462,
	455, 1462,
	456, 1462,
	457, 1462,
	458, 1462,
	459, 1462,
	460, 1462,
	461, 1462,
	463, 1462,
	464, 1462,
	465, 1462,
	466, 1462,
	467, 1462,
	468, 1462,
	469, 1462,
	470, 1462,
	471, 1462,
	472, 1462,
	473, 1462,
	474, 1462,
	475, 1462,
	477, 1462,
	478, 1462,
	479, 1462,
	480, 1462,
	481, 1462,
	482, 1462,
	484, 1462,
	485, 1462,
	486, 1462,
	487, 1462,
	488, 1462,
	489, 1462,
	491, 1462,
	492, 1462,
	493, 1462,
	494, 1462,
	495, 1462,
	496, 1462,
	497, 1462,
	498, 1462,
	500, 1462,
	502, 1462,
	503, 1462,
	504, 1462,
	505, 1462,
	506, 1462,
	507, 1462,
	508, 1462,
	509, 1462,
	510, 1462,
	511, 1462,
	512, 1462,
	513, 1462,
	514, 1462,
	515, 1462,
	516, 1462,
	517, 1462,
	518, 1462,
	519, 1462,
	520, 1462,
	522, 1462,
	523, 1462,
	525, 1462,
	526, 1462,
	528, 1462,
	529, 1462,
	530, 1462,
	531, 1462,
	532, 1462,
	533, 1462,
	535, 1462,
	536, 1462,
	538, 1462,
	539, 1462,
	540, 1462,
	541, 1462,
	542, 1462,
	544, 1462,
	546, 1462,
	547, 1462,
	548, 1462,
	549, 1462,
	550, 1462,
	551, 1462,
	552, 1462,
	554, 1462,
	555, 1462,
	556, 1462,
	557, 1462,
	559, 1462,
	560, 1462,
	563, 1462,
	564, 1462,
	565, 1462,
	566, 1462,
	567, 1462,
	568, 1462,
	569, 1462,
	570, 1462,
	572, 1462,
	575, 1462,
	576, 1462,
	577, 1462,
	578, 1462,
	579, 1462,
	580, 1462,
	582, 1462,
	583, 1462,
	584, 1462,
	585, 1462,
	586, 1462,
	587, 1462,
	588, 1462,
	589, 1462,
	594, 1462,
	595, 1462,
	596, 1462,
	597, 1462,
	598, 1462,
	599, 1462,
	-2, 0,
	-1, 816,
	196, 2538,
	543, 2538,
	613, 2538,
	633, 2538,
	-2, 0,
	-1, 817,
	196, 2524,
	543, 2524,
	613, 2524,
	633, 2524,
	-2, 0,
	-1, 819,
	196, 2805,
	543, 2805,
	613, 2805,
	633, 2805,
	-2, 0,
	-1, 822,
	196, 2654,
	543, 2654,
	613, 2654,
	633, 2654,
	-2, 0,
	-1, 823,
	196, 2849,
	543, 2849,
	613, 2849,
	633, 2849,
	-2, 0,
	-1, 831,
	196, 2682,
	543, 2682,
	613, 2682,
	633, 2682,
	-2, 775,
	-1, 847,
	8, 908,
	29, 908,
	621, 908,
	622, 908,
	-2, 913,
	-1, 851,
	1, 2592,
	634, 2592,
	-2, 913,
	-1, 852,
	1, 2642,
	634, 2642,
	-2, 913,
	-1, 855,
	1, 2687,
	634, 2687,
	-2, 906,
	-1, 856,
	1, 2743,
	634, 2743,
	-2, 907,
	-1, 857,
	1, 2597,
	634, 2597,
	-2, 910,
	-1, 858,
	1, 2511,
	634, 2511,
	-2, 911,
	-1, 893,
	633, 2470,
	636, 2470,
	-2, 1128,
	-1, 894,
	633, 2472,
	636, 2472,
	-2, 1129,
	-1, 895,
	633, 2471,
	636, 2471,
	-2, 1130,
	-1, 896,
	636, 2396,
	-2, 1131,
	-1, 921,
	189, 287,
	-2, 0,
	-1, 945,
	45, 2443,
	-2, 0,
	-1, 946,
	582, 1440,
	-2, 1212,
	-1, 962,
	4, 1876,
	21, 1876,
	22, 1876,
	23, 1876,
	24, 1876,
	25, 1876,
	26, 1876,
	27, 1876,
	28, 1876,
	30, 1876,
	31, 1876,
	37, 1876,
	41, 1876,
	43, 1876,
	44, 1876,
	46, 1876,
	47, 1876,
	48, 1876,
	49, 1876,
	50, 1876,
	51, 1876,
	52, 1876,
	53, 1876,
	54, 1876,
	56, 1876,
	57, 1876,
	58, 1876,
	59, 1876,
	61, 1876,
	62, 1876,
	63, 1876,
	64, 1876,
	65, 1876,
	66, 1876,
	67, 1876,
	71, 1876,
	72, 1876,
	73, 1876,
	74, 1876,
	76, 1876,
	77, 1876,
	78, 1876,
	82, 1876,
	83, 1876,
	84, 1876,
	85, 1876,
	86, 1876,
	87, 1876,
	88, 1876,
	89, 1876,
	92, 1876,
	93, 1876,
	94, 1876,
	95, 1876,
	96, 1876,
	98, 1876,
	100, 1876,
	101, 1876,
	102, 1876,
	103, 1876,
	104, 1876,
	105, 1876,
	107, 1876,
	108, 1876,
	109, 1876,
	111, 1876,
	112, 1876,
	113, 1876,
	121, 1876,
	122, 1876,
	123, 1876,
	124, 1876,
	125, 1876,
	127, 1876,
	128, 1876,
	129, 1876,
	130, 1876,
	132, 1876,
	133, 1876,
	134, 1876,
	136, 1876,
	137, 1876,
	138, 1876,
	140, 1876,
	141, 1876,
	142, 1876,
	145, 1876,
	146, 1876,
	147, 1876,
	149, 1876,
	150, 1876,
	151, 1876,
	153, 1876,
	154, 1876,
	155, 1876,
	157, 1876,
	158, 1876,
	159, 1876,
	160, 1876,
	161, 1876,
	162, 1876,
	163, 1876,
	164, 1876,
	165, 1876,
	166, 1876,
	167, 1876,
	168, 1876,
	169, 1876,
	170, 1876,
	171, 1876,
	172, 1876,
	173, 1876,
	175, 1876,
	181, 1876,
	182, 1876,
	183, 1876,
	184, 1876,
	188, 1876,
	190, 1876,
	191, 1876,
	192, 1876,
	194, 1876,
	195, 1876,
	198, 1876,
	199, 1876,
	200, 1876,
	201, 1876,
	202, 1876,
	203, 1876,
	204, 1876,
	205, 1876,
	206, 1876,
	207, 1876,
	208, 1876,
	209, 1876,
	210, 1876,
	211, 1876,
	213, 1876,
	214, 1876,
	216, 1876,
	217, 1876,
	219, 1876,
	220, 1876,
	221, 1876,
	222, 1876,
	223, 1876,
	224, 1876,
	225, 1876,
	226, 1876,
	227, 1876,
	228, 1876,
	229, 1876,
	231, 1876,
	232, 1876,
	234, 1876,
	235, 1876,
	236, 1876,
	237, 1876,
	238, 1876,
	242, 1876,
	243, 1876,
	244, 1876,
	245, 1876,
	248, 1876,
	249, 1876,
	250, 1876,
	251, 1876,
	253, 1876,
	255, 1876,
	256, 1876,
	258, 1876,
	260, 1876,
	261, 1876,
	262, 1876,
	264, 1876,
	268, 1876,
	269, 1876,
	270, 1876,
	271, 1876,
	272, 1876,
	273, 1876,
	275, 1876,
	276, 1876,
	277, 1876,
	279, 1876,
	280, 1876,
	282, 1876,
	283, 1876,
	286, 1876,
	287, 1876,
	288, 1876,
	289, 1876,
	290, 1876,
	291, 1876,
	292, 1876,
	295, 1876,
	296, 1876,
	297, 1876,
	298, 1876,
	300, 1876,
	301, 1876,
	302, 1876,
	303, 1876,
	304, 1876,
	305, 1876,
	306, 1876,
	307, 1876,
	308, 1876,
	309, 1876,
	310, 1876,
	311, 1876,
	312, 1876,
	313, 1876,
	314, 1876,
	315, 1876,
	316, 1876,
	317, 1876,
	318, 1876,
	319, 1876,
	320, 1876,
	321, 1876,
	322, 1876,
	324, 1876,
	326, 1876,
	327, 1876,
	328, 1876,
	329, 1876,
	330, 1876,
	331, 1876,
	332, 1876,
	333, 1876,
	334, 1876,
	335, 1876,
	336, 1876,
	337, 1876,
	338, 1876,
	339, 1876,
	340, 1876,
	341, 1876,
	342, 1876,
	344, 1876,
	345, 1876,
	347, 1876,
	349, 1876,
	350, 1876,
	351, 1876,
	352, 1876,
	354, 1876,
	355, 1876,
	356, 1876,
	357, 1876,
	358, 1876,
	361, 1876,
	363, 1876,
	366, 1876,
	367, 1876,
	368, 1876,
	371, 1876,
	372, 1876,
	373, 1876,
	375, 1876,
	377, 1876,
	378, 1876,
	379, 1876,
	380, 1876,
	381, 1876,
	382, 1876,
	383, 1876,
	384, 1876,
	385, 1876,
	386, 1876,
	387, 1876,
	388, 1876,
	389, 1876,
	391, 1876,
	392, 1876,
	393, 1876,
	394, 1876,
	395, 1876,
	396, 1876,
	397, 1876,
	398, 1876,
	399, 1876,
	400, 1876,
	401, 1876,
	402, 1876,
	403, 1876,
	404, 1876,
	405, 1876,
	407, 1876,
	408, 1876,
	409, 1876,
	411, 1876,
	412, 1876,
	413, 1876,
	414, 1876,
	415, 1876,
	416, 1876,
	417, 1876,
	418, 1876,
	419, 1876,
	420, 1876,
	421, 1876,
	422, 1876,
	423, 1876,
	424, 1876,
	426, 1876,
	428, 1876,
	429, 1876,
	430, 1876,
	436, 1876,
	437, 1876,
	438, 1876,
	440, 1876,
	441, 1876,
	442, 1876,
	443, 1876,
	444, 1876,
	445, 1876,
	446, 1876,
	447, 1876,
	448, 1876,
	449, 1876,
	451, 1876,
	452, 1876,
	453, 1876,
	455, 1876,
	456, 1876,
	457, 1876,
	458, 1876,
	459, 1876,
	460, 1876,
	461, 1876,
	463, 1876,
	464, 1876,
	465, 1876,
	466, 1876,
	467, 1876,
	468, 1876,
	469, 1876,
	470, 1876,
	471, 1876,
	472, 1876,
	473, 1876,
	474, 1876,
	475, 1876,
	477, 1876,
	478, 1876,
	479, 1876,
	480, 1876,
	481, 1876,
	482, 1876,
	484, 1876,
	485, 1876,
	486, 1876,
	487, 1876,
	488, 1876,
	489, 1876,
	491, 1876,
	492, 1876,
	493, 1876,
	494, 1876,
	495, 1876,
	496, 1876,
	497, 1876,
	498, 1876,
	500, 1876,
	502, 1876,
	503, 1876,
	504, 1876,
	505, 1876,
	506, 1876,
	507, 1876,
	508, 1876,
	509, 1876,
	510, 1876,
	511, 1876,
	512, 1876,
	513, 1876,
	514, 1876,
	515, 1876,
	516, 1876,
	517, 1876,
	518, 1876,
	519, 1876,
	520, 1876,
	522, 1876,
	523, 1876,
	525, 1876,
	526, 1876,
	528, 1876,
	529, 1876,
	530, 1876,
	531, 1876,
	532, 1876,
	533, 1876,
	535, 1876,
	536, 1876,
	538, 1876,
	539, 1876,
	540, 1876,
	541, 1876,
	542, 1876,
	544, 1876,
	546, 1876,
	547, 1876,
	548, 1876,
	549, 1876,
	550, 1876,
	551, 1876,
	552, 1876,
	554, 1876,
	555, 1876,
	556, 1876,
	557, 1876,
	559, 1876,
	560, 1876,
	563, 1876,
	564, 1876,
	565, 1876,
	566, 1876,
	567, 1876,
	568, 1876,
	569, 1876,
	570, 1876,
	572, 1876,
	575, 1876,
	576, 1876,
	577, 1876,
	578, 1876,
	579, 1876,
	580, 1876,
	582, 1876,
	583, 1876,
	584, 1876,
	585, 1876,
	586, 1876,
	587, 1876,
	588, 1876,
	589, 1876,
	594, 1876,
	595, 1876,
	596, 1876,
	597, 1876,
	598, 1876,
	599, 1876,
	-2, 0,
	-1, 972,
	272, 452,
	-2, 0,
	-1, 1050,
	196, 950,
	-2, 0,
	-1, 1051,
	413, 1003,
	482, 1003,
	526, 1003,
	548, 1003,
	-2, 0,
	-1, 1052,
	413, 1002,
	482, 1002,
	526, 1002,
	548, 1002,
	-2, 926,
	-1, 1056,
	1, 1055,
	630, 1055,
	632, 1055,
	634, 1055,
	-2, 0,
	-1, 1058,
	1, 977,
	630, 977,
	632, 977,
	634, 977,
	-2, 0,
	-1, 1059,
	1, 981,
	630, 981,
	632, 981,
	634, 981,
	-2, 0,
	-1, 1060,
	1, 1127,
	189, 1127,
	630, 1127,
	632, 1127,
	634, 1127,
	-2, 0,
	-1, 1068,
	1, 1008,
	630, 1008,
	632, 1008,
	634, 1008,
	-2, 0,
	-1, 1075,
	1, 1055,
	630, 1055,
	632, 1055,
	634, 1055,
	-2, 0,
	-1, 1076,
	1, 1057,
	630, 1057,
	632, 1057,
	634, 1057,
	-2, 0,
	-1, 1077,
	1, 1060,
	630, 1060,
	632, 1060,
	634, 1060,
	-2, 0,
	-1, 1085,
	1, 1090,
	630, 1090,
	632, 1090,
	634, 1090,
	-2, 0,
	-1, 1086,
	1, 1092,
	630, 1092,
	632, 1092,
	634, 1092,
	-2, 0,
	-1, 1091,
	1, 1120,
	630, 1120,
	632, 1120,
	634, 1120,
	-2, 0,
	-1, 1146,
	176, 1746,
	189, 1746,
	285, 1746,
	359, 1746,
	-2, 1682,
	-1, 1162,
	176, 1745,
	189, 1745,
	285, 1745,
	359, 1745,
	-2, 1679,
	-1, 1189,
	633, 2469,
	-2, 783,
	-1, 1218,
	5, 2461,
	631, 2459,
	-2, 2450,
	-1, 1226,
	5, 2482,
	631, 2479,
	-2, 2470,
	-1, 1227,
	5, 2483,
	631, 2480,
	-2, 2471,
	-1, 1235,
	633, 2467,
	-2, 2449,
	-1, 1236,
	631, 2937,
	-2, 2468,
	-1, 1259,
	631, 2936,
	-2, 2484,
	-1, 1260,
	5, 1951,
	-2, 2907,
	-1, 1261,
	5, 1952,
	-2, 2908,
	-1, 1262,
	5, 1953,
	-2, 2922,
	-1, 1263,
	5, 1954,
	-2, 2886,
	-1, 1264,
	5, 1955,
	-2, 2920,
	-1, 1265,
	5, 1963,
	-2, 2899,
	-1, 1266,
	5, 1950,
	-2, 2895,
	-1, 1267,
	5, 1950,
	-2, 2894,
	-1, 1268,
	5, 1950,
	-2, 2913,
	-1, 1269,
	5, 1961,
	-2, 2888,
	-1, 1270,
	5, 1966,
	-2, 2887,
	-1, 1271,
	5, 1968,
	-2, 2932,
	-1, 1274,
	5, 1990,
	-2, 2925,
	-1, 1275,
	5, 1982,
	-2, 2926,
	-1, 1276,
	5, 1990,
	-2, 2927,
	-1, 1277,
	5, 1986,
	-2, 2928,
	-1, 1278,
	5, 1936,
	-2, 2900,
	-1, 1279,
	5, 1937,
	-2, 2901,
	-1, 1280,
	5, 1938,
	-2, 2889,
	-1, 1308,
	5, 1973,
	-2, 2933,
	-1, 1309,
	5, 1974,
	-2, 2923,
	-1, 1310,
	5, 1975,
	583, 1975,
	-2, 2890,
	-1, 1311,
	5, 1976,
	583, 1976,
	-2, 2891,
	-1, 1349,
	631, 2479,
	-2, 2470,
	-1, 1350,
	631, 2480,
	-2, 2471,
	-1, 1448,
	196, 2849,
	543, 2849,
	613, 2849,
	633, 2849,
	-2, 0,
	-1, 1453,
	1, 759,
	634, 759,
	-2, 1591,
	-1, 1600,
	379, 2444,
	440, 2444,
	484, 2444,
	623, 2444,
	-2, 2434,
	-1, 1606,
	196, 147,
	279, 147,
	344, 147,
	589, 147,
	-2, 2845,
	-1, 1607,
	196, 148,
	279, 148,
	344, 148,
	589, 148,
	-2, 2583,
	-1, 1608,
	196, 149,
	279, 149,
	344, 149,
	589, 149,
	-2, 2766,
	-1, 1614,
	635, 2444,
	-2, 2446,
	-1, 1638,
	1, 1437,
	445, 1392,
	484, 1392,
	606, 1392,
	630, 1437,
	632, 1437,
	634, 1437,
	-2, 1731,
	-1, 1644,
	212, 1534,
	233, 1534,
	453, 1534,
	-2, 0,
	-1, 1693,
	422, 1211,
	582, 1211,
	-2, 447,
	-1, 1710,
	45, 2442,
	-2, 1174,
	-1, 1717,
	1, 1437,
	630, 1437,
	632, 1437,
	634, 1437,
	-2, 1731,
	-1, 1725,
	4, 1462,
	21, 1462,
	22, 1462,
	23, 1462,
	24, 1462,
	25, 1462,
	26, 1462,
	27, 1462,
	28, 1462,
	30, 1462,
	31, 1462,
	37, 1462,
	41, 1462,
	43, 1462,
	44, 1462,
	46, 1462,
	47, 1462,
	48, 1462,
	49, 1462,
	50, 1462,
	51, 1462,
	52, 1462,
	53, 1462,
	54, 1462,
	56, 1462,
	57, 1462,
	58, 1462,
	59, 1462,
	61, 1462,
	62, 1462,
	63, 1462,
	64, 1462,
	65, 1462,
	66, 1462,
	67, 1462,
	71, 1462,
	72, 1462,
	73, 1462,
	74, 1462,
	76, 1462,
	77, 1462,
	78, 1462,
	82, 1462,
	83, 1462,
	84, 1462,
	85, 1462,
	86, 1462,
	87, 1462,
	88, 1462,
	89, 1462,
	92, 1462,
	93, 1462,
	94, 1462,
	95, 1462,
	96, 1462,
	98, 1462,
	100, 1462,
	101, 1462,
	102, 1462,
	103, 1462,
	104, 1462,
	105, 1462,
	107, 1462,
	108, 1462,
	109, 1462,
	111, 1462,
	112, 1462,
	113, 1462,
	121, 1462,
	122, 1462,
	123, 1462,
	124, 1462,
	125, 1462,
	127, 1462,
	128, 1462,
	129, 1462,
	130, 1462,
	132, 1462,
	133, 1462,
	134, 1462,
	136, 1462,
	137, 1462,
	138, 1462,
	140, 1462,
	141, 1462,
	142, 1462,
	145, 1462,
	146, 1462,
	147, 1462,
	149, 1462,
	150, 1462,
	151, 1462,
	153, 1462,
	154, 1462,
	155, 1462,
	157, 1462,
	158, 1462,
	159, 1462,
	160, 1462,
	161, 1462,
	162, 1462,
	163, 1462,
	164, 1462,
	165, 1462,
	166, 1462,
	167, 1462,
	168, 1462,
	169, 1462,
	170, 1462,
	171, 1462,
	172, 1462,
	173, 1462,
	181, 1462,
	182, 1462,
	183, 1462,
	184, 1462,
	188, 1462,
	190, 1462,
	191, 1462,
	192, 1462,
	194, 1462,
	195, 1462,
	198, 1462,
	199, 1462,
	200, 1462,
	201, 1462,
	202, 1462,
	203, 1462,
	204, 1462,
	205, 1462,
	206, 1462,
	207, 1462,
	208, 1462,
	209, 1462,
	210, 1462,
	211, 1462,
	213, 1462,
	214, 1462,
	216, 1462,
	217, 1462,
	219, 1462,
	220, 1462,
	221, 1462,
	222, 1462,
	223, 1462,
	224, 1462,
	225, 1462,
	226, 1462,
	227, 1462,
	228, 1462,
	229, 1462,
	231, 1462,
	232, 1462,
	234, 1462,
	235, 1462,
	236, 1462,
	237, 1462,
	238, 1462,
	243, 1462,
	244, 1462,
	245, 1462,
	248, 1462,
	249, 1462,
	250, 1462,
	251, 1462,
	253, 1462,
	255, 1462,
	256, 1462,
	258, 1462,
	260, 1462,
	261, 1462,
	262, 1462,
	264, 1462,
	268, 1462,
	269, 1462,
	270, 1462,
	271, 1462,
	272, 1462,
	273, 1462,
	275, 1462,
	276, 1462,
	277, 1462,
	279, 1462,
	280, 1462,
	282, 1462,
	283, 1462,
	286, 1462,
	287, 1462,
	288, 1462,
	289, 1462,
	290, 1462,
	291, 1462,
	292, 1462,
	295, 1462,
	296, 1462,
	297, 1462,
	298, 1462,
	300, 1462,
	301, 1462,
	302, 1462,
	303, 1462,
	304, 1462,
	305, 1462,
	306, 1462,
	307, 1462,
	308, 1462,
	309, 1462,
	310, 1462,
	311, 1462,
	312, 1462,
	313, 1462,
	314, 1462,
	315, 1462,
	316, 1462,
	317, 1462,
	318, 1462,
	319, 1462,
	320, 1462,
	321, 1462,
	322, 1462,
	324, 1462,
	326, 1462,
	327, 1462,
	328, 1462,
	329, 1462,
	330, 1462,
	331, 1462,
	332, 1462,
	333, 1462,
	334, 1462,
	335, 1462,
	336, 1462,
	337, 1462,
	338, 1462,
	339, 1462,
	340, 1462,
	341, 1462,
	342, 1462,
	344, 1462,
	345, 1462,
	349, 1462,
	350, 1462,
	351, 1462,
	352, 1462,
	354, 1462,
	355, 1462,
	356, 1462,
	357, 1462,
	358, 1462,
	361, 1462,
	363, 1462,
	364, 1462,
	366, 1462,
	367, 1462,
	368, 1462,
	371, 1462,
	372, 1462,
	373, 1462,
	375, 1462,
	377, 1462,
	378, 1462,
	379, 1462,
	380, 1462,
	381, 1462,
	382, 1462,
	383, 1462,
	384, 1462,
	385, 1462,
	386, 1462,
	387, 1462,
	388, 1462,
	389, 1462,
	391, 1462,
	392, 1462,
	393, 1462,
	394, 1462,
	395, 1462,
	396, 1462,
	397, 1462,
	398, 1462,
	399, 1462,
	400, 1462,
	401, 1462,
	402, 1462,
	403, 1462,
	404, 1462,
	405, 1462,
	407, 1462,
	408, 1462,
	409, 1462,
	411, 1462,
	412, 1462,
	413, 1462,
	414, 1462,
	415, 1462,
	416, 1462,
	417, 1462,
	418, 1462,
	419, 1462,
	420, 1462,
	421, 1462,
	422, 1462,
	423, 1462,
	424, 1462,
	426, 1462,
	428, 1462,
	429, 1462,
	430, 1462,
	436, 1462,
	437, 1462,
	438, 1462,
	440, 1462,
	441, 1462,
	442, 1462,
	443, 1462,
	444, 1462,
	445, 1462,
	446, 1462,
	447, 1462,
	448, 1462,
	449, 1462,
	451, 1462,
	452, 1462,
	453, 1462,
	455, 1462,
	456, 1462,
	457, 1462,
	458, 1462,
	459, 1462,
	460, 1462,
	461, 1462,
	463, 1462,
	464, 1462,
	465, 1462,
	466, 1462,
	467, 1462,
	468, 1462,
	469, 1462,
	470, 1462,
	471, 1462,
	472, 1462,
	473, 1462,
	474, 1462,
	475, 1462,
	477, 1462,
	478, 1462,
	479, 1462,
	480, 1462,
	481, 1462,
	482, 1462,
	484, 1462,
	485, 1462,
	486, 1462,
	487, 1462,
	488, 1462,
	489, 1462,
	491, 1462,
	492, 1462,
	493, 1462,
	494, 1462,
	495, 1462,
	496, 1462,
	497, 1462,
	498, 1462,
	500, 1462,
	502, 1462,
	503, 1462,
	504, 1462,
	505, 1462,
	506, 1462,
	507, 1462,
	508, 1462,
	509, 1462,
	510, 1462,
	511, 1462,
	512, 1462,
	513, 1462,
	514, 1462,
	515, 1462,
	516, 1462,
	517, 1462,
	518, 1462,
	519, 1462,
	520, 1462,
	522, 1462,
	523, 1462,
	525, 1462,
	526, 1462,
	528, 1462,
	529, 1462,
	530, 1462,
	531, 1462,
	532, 1462,
	533, 1462,
	535, 1462,
	536, 1462,
	538, 1462,
	539, 1462,
	540, 1462,
	541, 1462,
	542, 1462,
	544, 1462,
	546, 1462,
	547, 1462,
	548, 1462,
	549, 1462,
	550, 1462,
	551, 1462,
	552, 1462,
	554, 1462,
	555, 1462,
	556, 1462,
	557, 1462,
	559, 1462,
	560, 1462,
	563, 1462,
	564, 1462,
	565, 1462,
	566, 1462,
	567, 1462,
	568, 1462,
	569, 1462,
	570, 1462,
	572, 1462,
	575, 1462,
	576, 1462,
	577, 1462,
	578, 1462,
	579, 1462,
	580, 1462,
	582, 1462,
	583, 1462,
	584, 1462,
	585, 1462,
	586, 1462,
	587, 1462,
	588, 1462,
	589, 1462,
	594, 1462,
	595, 1462,
	596, 1462,
	597, 1462,
	598, 1462,
	599, 1462,
	-2, 0,
	-1, 1748,
	1, 594,
	630, 594,
	632, 594,
	634, 594,
	-2, 1702,
	-1, 1751,
	4, 2931,
	11, 2931,
	12, 2931,
	14, 2931,
	15, 2931,
	16, 2931,
	17, 2931,
	18, 2931,
	19, 2931,
	21, 2931,
	22, 2931,
	23, 2931,
	24, 2931,
	25, 2931,
	26, 2931,
	27, 2931,
	28, 2931,
	30, 2931,
	31, 2931,
	34, 2931,
	35, 2931,
	37, 2931,
	39, 2931,
	41, 2931,
	43, 2931,
	44, 2931,
	46, 2931,
	47, 2931,
	48, 2931,
	49, 2931,
	50, 2931,
	51, 2931,
	52, 2931,
	53, 2931,
	54, 2931,
	56, 2931,
	57, 2931,
	58, 2931,
	59, 2931,
	61, 2931,
	62, 2931,
	63, 2931,
	64, 2931,
	65, 2931,
	66, 2931,
	67, 2931,
	70, 2931,
	71, 2931,
	72, 2931,
	73, 2931,
	74, 2931,
	76, 2931,
	77, 2931,
	78, 2931,
	79, 2931,
	82, 2931,
	83, 2931,
	84, 2931,
	85, 2931,
	86, 2931,
	87, 2931,
	88, 2931,
	89, 2931,
	90, 2931,
	92, 2931,
	93, 2931,
	94, 2931,
	95, 2931,
	96, 2931,
	98, 2931,
	99, 2931,
	100, 2931,
	101, 2931,
	102, 2931,
	103, 2931,
	104, 2931,
	105, 2931,
	107, 2931,
	108, 2931,
	109, 2931,
	110, 2931,
	111, 2931,
	112, 2931,
	113, 2931,
	121, 2931,
	122, 2931,
	123, 2931,
	124, 2931,
	125, 2931,
	127, 2931,
	128, 2931,
	129, 2931,
	130, 2931,
	132, 2931,
	133, 2931,
	134, 2931,
	136, 2931,
	137, 2931,
	138, 2931,
	140, 2931,
	141, 2931,
	142, 2931,
	145, 2931,
	146, 2931,
	147, 2931,
	149, 2931,
	150, 2931,
	151, 2931,
	153, 2931,
	154, 2931,
	155, 2931,
	157, 2931,
	158, 2931,
	159, 2931,
	160, 2931,
	161, 2931,
	162, 2931,
	163, 2931,
	164, 2931,
	165, 2931,
	166, 2931,
	167, 2931,
	168, 2931,
	169, 2931,
	170, 2931,
	171, 2931,
	172, 2931,
	173, 2931,
	177, 2931,
	178, 2931,
	179, 2931,
	180, 2931,
	181, 2931,
	182, 2931,
	183, 2931,
	184, 2931,
	187, 2931,
	188, 2931,
	190, 2931,
	191, 2931,
	192, 2931,
	194, 2931,
	195, 2931,
	197, 2931,
	198, 2931,
	199, 2931,
	200, 2931,
	201, 2931,
	202, 2931,
	203, 2931,
	204, 2931,
	205, 2931,
	206, 2931,
	207, 2931,
	208, 2931,
	209, 2931,
	210, 2931,
	211, 2931,
	213, 2931,
	214, 2931,
	216, 2931,
	217, 2931,
	219, 2931,
	220, 2931,
	221, 2931,
	222, 2931,
	223, 2931,
	224, 2931,
	225, 2931,
	226, 2931,
	227, 2931,
	228, 2931,
	229, 2931,
	230, 2931,
	231, 2931,
	232, 2931,
	233, 2931,
	234, 2931,
	235, 2931,
	236, 2931,
	237, 2931,
	238, 2931,
	240, 2931,
	241, 2931,
	243, 2931,
	244, 2931,
	245, 2931,
	247, 2931,
	248, 2931,
	249, 2931,
	250, 2931,
	251, 2931,
	253, 2931,
	255, 2931,
	256, 2931,
	257, 2931,
	258, 2931,
	259, 2931,
	260, 2931,
	261, 2931,
	262, 2931,
	263, 2931,
	264, 2931,
	266, 2931,
	267, 2931,
	268, 2931,
	269, 2931,
	270, 2931,
	271, 2931,
	272, 2931,
	273, 2931,
	275, 2931,
	276, 2931,
	277, 2931,
	279, 2931,
	280, 2931,
	281, 2931,
	282, 2931,
	283, 2931,
	284, 2931,
	286, 2931,
	287, 2931,
	288, 2931,
	289, 2931,
	290, 2931,
	291, 2931,
	292, 2931,
	295, 2931,
	296, 2931,
	297, 2931,
	298, 2931,
	299, 2931,
	300, 2931,
	301, 2931,
	302, 2931,
	303, 2931,
	304, 2931,
	305, 2931,
	306, 2931,
	307, 2931,
	308, 2931,
	309, 2931,
	310, 2931,
	311, 2931,
	312, 2931,
	313, 2931,
	314, 2931,
	315, 2931,
	316, 2931,
	317, 2931,
	318, 2931,
	319, 2931,
	320, 2931,
	321, 2931,
	322, 2931,
	324, 2931,
	325, 2931,
	326, 2931,
	327, 2931,
	328, 2931,
	329, 2931,
	330, 2931,
	331, 2931,
	332, 2931,
	333, 2931,
	334, 2931,
	335, 2931,
	336, 2931,
	337, 2931,
	338, 2931,
	339, 2931,
	340, 2931,
	341, 2931,
	342, 2931,
	344, 2931,
	345, 2931,
	348, 2931,
	349, 2931,
	350, 2931,
	351, 2931,
	352, 2931,
	354, 2931,
	355, 2931,
	356, 2931,
	357, 2931,
	358, 2931,
	361, 2931,
	363, 2931,
	366, 2931,
	367, 2931,
	368, 2931,
	369, 2931,
	371, 2931,
	372, 2931,
	373, 2931,
	375, 2931,
	377, 2931,
	378, 2931,
	379, 2931,
	380, 2931,
	381, 2931,
	382, 2931,
	383, 2931,
	384, 2931,
	385, 2931,
	386, 2931,
	387, 2931,
	388, 2931,
	389, 2931,
	391, 2931,
	392, 2931,
	393, 2931,
	394, 2931,
	395, 2931,
	396, 2931,
	397, 2931,
	398, 2931,
	399, 2931,
	400, 2931,
	401, 2931,
	402, 2931,
	403, 2931,
	404, 2931,
	405, 2931,
	407, 2931,
	408, 2931,
	409, 2931,
	411, 2931,
	412, 2931,
	413, 2931,
	414, 2931,
	415, 2931,
	416, 2931,
	417, 2931,
	418, 2931,
	419, 2931,
	420, 2931,
	421, 2931,
	422, 2931,
	423, 2931,
	424, 2931,
	426, 2931,
	428, 2931,
	429, 2931,
	430, 2931,
	436, 2931,
	437, 2931,
	438, 2931,
	439, 2931,
	440, 2931,
	441, 2931,
	442, 2931,
	443, 2931,
	444, 2931,
	445, 2931,
	446, 2931,
	447, 2931,
	448, 2931,
	449, 2931,
	451, 2931,
	452, 2931,
	453, 2931,
	454, 2931,
	455, 2931,
	456, 2931,
	457, 2931,
	458, 2931,
	459, 2931,
	460, 2931,
	461, 2931,
	462, 2931,
	463, 2931,
	464, 2931,
	465, 2931,
	466, 2931,
	467, 2931,
	468, 2931,
	469, 2931,
	470, 2931,
	471, 2931,
	472, 2931,
	473, 2931,
	474, 2931,
	475, 2931,
	477, 2931,
	478, 2931,
	479, 2931,
	480, 2931,
	481, 2931,
	482, 2931,
	484, 2931,
	485, 2931,
	486, 2931,
	487, 2931,
	488, 2931,
	489, 2931,
	490, 2931,
	491, 2931,
	492, 2931,
	493, 2931,
	494, 2931,
	495, 2931,
	496, 2931,
	497, 2931,
	498, 2931,
	500, 2931,
	502, 2931,
	503, 2931,
	504, 2931,
	505, 2931,
	506, 2931,
	507, 2931,
	508, 2931,
	509, 2931,
	510, 2931,
	511, 2931,
	512, 2931,
	513, 2931,
	514, 2931,
	515, 2931,
	516, 2931,
	517, 2931,
	518, 2931,
	519, 2931,
	520, 2931,
	522, 2931,
	523, 2931,
	524, 2931,
	525, 2931,
	526, 2931,
	528, 2931,
	529, 2931,
	530, 2931,
	531, 2931,
	532, 2931,
	533, 2931,
	535, 2931,
	536, 2931,
	538, 2931,
	539, 2931,
	540, 2931,
	541, 2931,
	542, 2931,
	544, 2931,
	546, 2931,
	547, 2931,
	548, 2931,
	549, 2931,
	550, 2931,
	551, 2931,
	552, 2931,
	554, 2931,
	555, 2931,
	556, 2931,
	557, 2931,
	559, 2931,
	560, 2931,
	563, 2931,
	564, 2931,
	565, 2931,
	566, 2931,
	567, 2931,
	568, 2931,
	569, 2931,
	570, 2931,
	572, 2931,
	575, 2931,
	576, 2931,
	577, 2931,
	578, 2931,
	579, 2931,
	580, 2931,
	582, 2931,
	583, 2931,
	584, 2931,
	585, 2931,
	586, 2931,
	587, 2931,
	588, 2931,
	589, 2931,
	594, 2931,
	595, 2931,
	596, 2931,
	597, 2931,
	598, 2931,
	599, 2931,
	600, 2931,
	602, 2931,
	611, 2931,
	612, 2931,
	613, 2931,
	614, 2931,
	615, 2931,
	616, 2931,
	618, 2931,
	619, 2931,
	620, 2931,
	621, 2931,
	622, 2931,
	623, 2931,
	624, 2931,
	625, 2931,
	626, 2931,
	629, 2931,
	632, 2931,
	633, 2931,
	635, 2931,
	636, 2931,
	-2, 0,
	-1, 1756,
	196, 2805,
	543, 2805,
	613, 2805,
	633, 2805,
	-2, 0,
	-1, 1804,
	196, 951,
	-2, 2797,
	-1, 1805,
	196, 952,
	-2, 2590,
	-1, 1806,
	196, 953,
	-2, 2752,
	-1, 1811,
	413, 1003,
	482, 1003,
	526, 1003,
	548, 1003,
	-2, 0,
	-1, 1822,
	1, 1534,
	233, 1534,
	630, 1534,
	632, 1534,
	634, 1534,
	-2, 0,
	-1, 1839,
	1, 998,
	630, 998,
	632, 998,
	634, 998,
	-2, 0,
	-1, 1840,
	1, 1042,
	630, 1042,
	632, 1042,
	634, 1042,
	-2, 0,
	-1, 1841,
	1, 1050,
	630, 1050,
	632, 1050,
	634, 1050,
	-2, 0,
	-1, 1844,
	1, 1007,
	630, 1007,
	632, 1007,
	634, 1007,
	-2, 0,
	-1, 1846,
	1, 1013,
	630, 1013,
	632, 1013,
	634, 1013,
	-2, 0,
	-1, 1849,
	1, 1009,
	630, 1009,
	632, 1009,
	634, 1009,
	-2, 0,
	-1, 1854,
	1, 1023,
	630, 1023,
	632, 1023,
	634, 1023,
	-2, 0,
	-1, 1888,
	1, 2787,
	630, 2787,
	632, 2787,
	633, 2787,
	634, 2787,
	-2, 0,
	-1, 1892,
	1, 1101,
	630, 1101,
	632, 1101,
	634, 1101,
	-2, 0,
	-1, 1910,
	1, 1586,
	634, 1586,
	-2, 1591,
	-1, 1913,
	176, 1745,
	189, 1745,
	285, 1745,
	359, 1745,
	-2, 1683,
	-1, 2013,
	156, 1704,
	176, 1704,
	189, 1704,
	252, 1704,
	285, 1704,
	359, 1704,
	370, 1704,
	561, 1704,
	-2, 2155,
	-1, 2074,
	632, 2330,
	-2, 0,
	-1, 2110,
	156, 1704,
	176, 1704,
	189, 1704,
	252, 1704,
	285, 1704,
	359, 1704,
	370, 1704,
	561, 1704,
	-2, 1837,
	-1, 2150,
	543, 2802,
	633, 2802,
	636, 2802,
	-2, 0,
	-1, 2167,
	631, 1978,
	-2, 1966,
	-1, 2199,
	196, 2802,
	633, 2802,
	636, 2802,
	-2, 0,
	-1, 2242,
	1, 761,
	634, 761,
	-2, 1591,
	-1, 2417,
	233, 282,
	-2, 2478,
	-1, 2418,
	233, 283,
	-2, 338,
	-1, 2530,
	1, 1000,
	630, 1000,
	632, 1000,
	634, 1000,
	-2, 0,
	-1, 2531,
	1, 1044,
	630, 1044,
	632, 1044,
	634, 1044,
	-2, 0,
	-1, 2532,
	1, 1052,
	630, 1052,
	632, 1052,
	634, 1052,
	-2, 0,
	-1, 2533,
	1, 1103,
	630, 1103,
	632, 1103,
	634, 1103,
	-2, 0,
	-1, 2574,
	1, 1025,
	630, 1025,
	632, 1025,
	634, 1025,
	-2, 0,
	-1, 2596,
	1, 1086,
	630, 1086,
	632, 1086,
	634, 1086,
	-2, 0,
	-1, 2644,
	460, 1772,
	461, 1772,
	-2, 2011,
	-1, 2675,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2031,
	-1, 2676,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2032,
	-1, 2677,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2033,
	-1, 2678,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2034,
	-1, 2679,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2035,
	-1, 2680,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2036,
	-1, 2681,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2037,
	-1, 2682,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2038,
	-1, 2694,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2050,
	-1, 2695,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2051,
	-1, 2696,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2052,
	-1, 2700,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2059,
	-1, 2706,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2063,
	-1, 2708,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2071,
	-1, 2709,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2072,
	-1, 2710,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2073,
	-1, 2711,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2074,
	-1, 2885,
	5, 2482,
	196, 2341,
	631, 2479,
	-2, 2470,
	-1, 2886,
	196, 2342,
	-2, 2882,
	-1, 2887,
	196, 2343,
	-2, 2680,
	-1, 2888,
	196, 2344,
	-2, 2556,
	-1, 2889,
	196, 2345,
	-2, 2618,
	-1, 2890,
	196, 2346,
	-2, 2665,
	-1, 2891,
	196, 2347,
	-2, 2800,
	-1, 2892,
	196, 2348,
	-2, 2138,
	-1, 2964,
	1, 1838,
	2, 1838,
	110, 1838,
	156, 1838,
	176, 1838,
	189, 1838,
	197, 1838,
	215, 1838,
	218, 1838,
	247, 1838,
	252, 1838,
	263, 1838,
	281, 1838,
	285, 1838,
	325, 1838,
	359, 1838,
	364, 1838,
	370, 1838,
	450, 1838,
	454, 1838,
	561, 1838,
	573, 1838,
	591, 1838,
	592, 1838,
	593, 1838,
	603, 1838,
	630, 1838,
	632, 1838,
	634, 1838,
	636, 1838,
	-2, 1837,
	-1, 2977,
	631, 2451,
	-2, 2465,
	-1, 2979,
	1, 355,
	591, 355,
	-2, 1731,
	-1, 3009,
	631, 1977,
	-2, 1967,
	-1, 3224,
	1, 1437,
	445, 1392,
	484, 1392,
	606, 1392,
	630, 1437,
	632, 1437,
	634, 1437,
	-2, 1731,
	-1, 3406,
	365, 1775,
	-2, 2921,
	-1, 3407,
	365, 1776,
	-2, 2784,
	-1, 3411,
	460, 2407,
	461, 2407,
	-2, 2136,
	-1, 3412,
	460, 2411,
	461, 2411,
	-2, 2137,
	-1, 3413,
	460, 2408,
	461, 2408,
	-2, 2136,
	-1, 3414,
	460, 2412,
	461, 2412,
	-2, 2137,
	-1, 3427,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2061,
	-1, 3428,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2065,
	-1, 3434,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2067,
	-1, 3661,
	1, 756,
	630, 756,
	632, 756,
	634, 756,
	-2, 1591,
	-1, 3860,
	45, 2442,
	-2, 1175,
	-1, 3865,
	1, 1437,
	630, 1437,
	632, 1437,
	634, 1437,
	-2, 1731,
	-1, 3974,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2069,
	-1, 3981,
	257, 0,
	259, 0,
	348, 0,
	-2, 2088,
	-1, 4049,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2117,
	-1, 4050,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2118,
	-1, 4051,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2119,
	-1, 4055,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2123,
	-1, 4056,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2124,
	-1, 4057,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2125,
	-1, 4105,
	631, 2452,
	-2, 2466,
	-1, 4322,
	633, 3038,
	-2, 1657,
	-1, 4381,
	257, 0,
	259, 0,
	348, 0,
	-2, 2089,
	-1, 4384,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2092,
	-1, 4385,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2094,
	-1, 4508,
	633, 2467,
	-2, 1472,
	-1, 4672,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2093,
	-1, 4673,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2095,
	-1, 4684,
	257, 0,
	-2, 2128,
	-1, 4878,
	257, 0,
	-2, 2129,
	-1, 5099,
	53, 0,
	230, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2885,
}

const sqlPrivate = 57344

const sqlLast = 147521

var sqlAct = [...]int{
	292, 5217, 5034, 5290, 1429, 3565, 4919, 5145, 3298, 3148,
	5161, 4927, 5033, 4745, 5098, 5085, 5111, 3178, 5231, 4990,
	3080, 3845, 3846, 5045, 4971, 5024, 5067, 5112, 4847, 4364,
	5170, 5048, 5113, 2414, 4504, 1426, 1485, 4824, 4795, 4122,
	3857, 2302, 4811, 5109, 2492, 4014, 5097, 4882, 4625, 4619,
	4630, 4586, 3268, 2654, 4750, 1421, 1654, 4660, 4693, 1774,
	3966, 4559, 1172, 2504, 1342, 4314, 3687, 4306, 3882, 4610,
	4830, 4612, 4956, 2502, 3690, 4485, 2917, 4505, 4229, 3081,
	895, 2723, 1353, 1419, 756, 3830, 3420, 4635, 3876, 1922,
	3750, 4279, 3819, 4260, 3693, 2662, 3320, 2154, 2224, 3912,
	1504, 1163, 4262, 3835, 1624, 2311, 3287, 3910, 895, 3837,
	3282, 828, 3834, 2116, 3256, 4689, 2155, 3675, 3812, 3676,
	1229, 2991, 1272, 2655, 3811, 3284, 3163, 3677, 4108, 2465,
	1597, 3588, 3611, 4363, 3571, 4420, 1171, 191, 3580, 3351,
	3618, 767, 3548, 3299, 3315, 2401, 1772, 3569, 2211, 2403,
	970, 4, 3179, 974, 2085, 3231, 5146, 2339, 3714, 2323,
	286, 892, 285, 2390, 2957, 4075, 2659, 3547, 4883, 2060,
	2021, 1991, 2736, 3404, 3314, 1712, 2801, 965, 2452, 890,
	1424, 2402, 3260, 1819, 3193, 2956, 2388, 2380, 824, 2368,
	2134, 2959, 1412, 2361, 1222, 3269, 1468, 2290, 1398, 1910,
	2294, 2086, 2792, 2222, 1220, 1227, 1333, 2937, 1487, 2626,
	2720, 2643, 2624, 801, 3292, 1409, 2992, 1715, 1749, 896,
	897, 2383, 3105, 3838, 1626, 1455, 2451, 1045, 3066, 2803,
	2914, 3106, 4991, 2105, 3020, 2795, 191, 1336, 2927, 2055,
	901, 2095, 904, 743, 1483, 2946, 1190, 765, 2102, 1315,
	2881, 2005, 844, 2847, 1923, 1350, 201, 2773, 202, 1924,
	116, 2625, 809, 2627, 1854, 820, 2411, 1839, 901, 991,
	904, 1332, 120, 1747, 1740, 2392, 2478, 1648, 5162, 1218,
	106, 5218, 1605, 1480, 2648, 1203, 46, 45, 760, 757,
	43, 769, 885, 784, 34, 32, 30, 1338, 1929, 946,
	3457, 1313, 1909, 1660, 1066, 3451, 4089, 947, 4090, 2213,
	5301, 3567, 4123, 5293, 2936, 2213, 2213, 3792, 5107, 2213,
	2213, 5281, 837, 840, 5280, 2936, 4718, 4715, 2936, 1937,
	1938, 2500, 1970, 1971, 1972, 1981, 1982, 1983, 2213, 5250,
	5248, 5191, 5147, 4749, 4749, 2423, 5148, 5137, 4712, 1167,
	5135, 2936, 1974, 1968, 2936, 2234, 3891, 1167, 5132, 5129,
	5095, 1940, 5133, 5130, 2423, 5094, 3892, 1937, 1938, 2423,
	1784, 1987, 5093, 5083, 5081, 5076, 3325, 4749, 4749, 4833,
	5071, 5070, 5043, 5010, 4749, 4749, 4749, 3000, 1993, 1330,
	5003, 1968, 5002, 3628, 2936, 3646, 2936, 1939, 4995, 1940,
	4970, 4967, 2423, 4949, 2423, 4749, 4880, 4576, 1959, 4861,
	3000, 4826, 4768, 4340, 4767, 4156, 2423, 1956, 2423, 4756,
	4755, 4748, 1464, 2423, 4749, 4749, 1993, 1156, 3518, 3519,
	4700, 3536, 3537, 3538, 2423, 1939, 4674, 4456, 1316, 1316,
	3000, 2231, 3262, 4646, 3792, 4643, 1225, 3325, 1147, 3792,
	1146, 4379, 4554, 4532, 4383, 2501, 2936, 2936, 3000, 4330,
	1464, 4324, 4276, 3905, 1168, 3905, 4277, 4187, 4155, 4100,
	4098, 4188, 4156, 4101, 4099, 4082, 2493, 1937, 1938, 2936,
	2234, 3998, 1845, 3994, 3904, 2423, 2231, 2936, 3905, 3022,
	1653, 2423, 2798, 4079, 1368, 1962, 1963, 1964, 1965, 2234,
	3564, 1968, 3559, 1162, 2936, 1945, 2936, 3533, 3558, 1940,
	3509, 3643, 2936, 3507, 3510, 2929, 3499, 3508, 3497, 3261,
	3500, 3468, 2936, 3466, 3324, 2936, 3309, 3308, 3325, 3467,
	2488, 2488, 1376, 3045, 1348, 2999, 1993, 2936, 2996, 3000,
	2989, 3518, 3519, 1945, 2936, 1939, 2981, 3419, 1978, 1317,
	2423, 1988, 2935, 1319, 2936, 1320, 2936, 1662, 1967, 1969,
	252, 5011, 2749, 2750, 2751, 2768, 2769, 2770, 2487, 4884,
	4875, 4863, 2488, 4833, 3325, 1984, 4079, 1985, 2928, 4623,
	4576, 2234, 2234, 2771, 1954, 1955, 2231, 1369, 4533, 2799,
	4340, 4278, 3155, 2316, 3065, 2248, 1967, 1969, 2212, 2228,
	3261, 1369, 1976, 2422, 3524, 3173, 3056, 2081, 1647, 4205,
	3969, 254, 3939, 2103, 3893, 2936, 2373, 1960, 1993, 1821,
	3533, 252, 2973, 3456, 2972, 2971, 2970, 2969, 1321, 1318,
	1155, 1154, 1153, 1152, 3894, 4866, 1151, 1150, 2761, 1149,
	1145, 1144, 1143, 1937, 1938, 1142, 1141, 2757, 1140, 1139,
	99, 1765, 1138, 1945, 1137, 1960, 1136, 3518, 3519, 3374,
	3277, 1135, 253, 1134, 1133, 1132, 1986, 1131, 1130, 1662,
	1129, 2800, 254, 2797, 3540, 1940, 1128, 246, 1127, 1126,
	1108, 3518, 3519, 1043, 1042, 1041, 247, 1975, 1040, 2214,
	1039, 1038, 1037, 1036, 1035, 2214, 2214, 1034, 1990, 2214,
	2214, 1345, 1033, 1032, 1031, 1030, 1967, 1969, 1029, 1028,
	1027, 1939, 1026, 1025, 1024, 203, 3534, 3524, 2214, 1023,
	1022, 1021, 1020, 253, 1019, 2762, 2763, 2764, 2765, 1018,
	1224, 1017, 1016, 1015, 1014, 2756, 1990, 1013, 1012, 1011,
	1010, 1009, 1008, 1007, 996, 995, 994, 989, 988, 981,
	980, 979, 2566, 964, 963, 920, 4438, 1966, 2231, 966,
	919, 918, 917, 908, 5122, 1960, 2231, 2231, 907, 906,
	905, 867, 866, 1674, 835, 834, 203, 833, 815, 4395,
	1961, 1937, 1938, 280, 279, 278, 41, 78, 277, 969,
	968, 276, 275, 274, 273, 272, 271, 1990, 270, 269,
	268, 267, 1431, 1227, 4132, 79, 3891, 1668, 1979, 266,
	265, 264, 263, 1940, 2766, 2767, 262, 261, 1961, 1945,
	260, 259, 84, 258, 3261, 257, 256, 255, 4637, 3534,
	1227, 1227, 1227, 3524, 4094, 1369, 3073, 3906, 1662, 3614,
	2802, 3479, 1992, 3462, 252, 3453, 1990, 2759, 3354, 1939,
	3241, 1653, 3004, 2978, 2963, 2063, 2830, 3524, 3562, 2828,
	2063, 2616, 2062, 93, 2275, 2233, 1661, 2062, 3073, 2106,
	2814, 1507, 2812, 2129, 2032, 1227, 1904, 1656, 2234, 3535,
	1992, 1227, 1629, 1227, 3032, 2212, 1431, 1476, 2231, 2228,
	1638, 2066, 1472, 1473, 1474, 254, 2061, 1459, 2023, 1936,
	4887, 1352, 5121, 3563, 972, 5118, 5096, 2619, 5080, 4975,
	1990, 1227, 4872, 1227, 4740, 1227, 4688, 51, 1977, 115,
	4644, 4864, 1629, 3279, 4622, 99, 112, 4462, 1961, 1951,
	1952, 1958, 1980, 1957, 1953, 4418, 1950, 1948, 1949, 1941,
	1942, 1943, 1944, 1946, 1947, 3534, 253, 1329, 1431, 4417,
	4405, 2231, 1717, 4411, 4404, 2928, 252, 1945, 252, 4410,
	1615, 246, 4409, 2796, 4402, 4401, 1788, 4399, 1629, 3534,
	247, 159, 1369, 4394, 1610, 1629, 1949, 1941, 1942, 1943,
	1944, 1946, 1947, 4391, 1227, 1344, 1227, 4390, 2030, 100,
	1992, 1629, 3535, 4275, 1403, 1406, 3013, 1673, 4136, 203,
	1227, 4135, 1227, 4289, 4134, 4104, 4070, 254, 4069, 254,
	2760, 1451, 1990, 1651, 4068, 4193, 1416, 3990, 3985, 3609,
	3555, 3546, 3517, 1453, 3514, 3513, 1990, 3511, 3530, 3531,
	3532, 1667, 3506, 1721, 1724, 3529, 3527, 3528, 3520, 3521,
	3522, 3523, 3525, 3526, 3505, 3504, 2025, 3071, 4639, 2023,
	1990, 1629, 1769, 1662, 3518, 3519, 3501, 3498, 253, 901,
	253, 904, 3478, 3518, 3519, 1636, 1602, 2024, 3461, 2022,
	1847, 1227, 1992, 246, 1227, 246, 1500, 3454, 1594, 1599,
	3452, 3310, 247, 2964, 247, 1445, 2785, 1941, 1942, 1943,
	1944, 1946, 1947, 1936, 1490, 1491, 2430, 2468, 1479, 2428,
	1935, 5296, 5239, 5238, 5160, 191, 191, 5158, 3535, 3518,
	3519, 203, 1437, 203, 1354, 4016, 5035, 4290, 1650, 1649,
	1170, 4954, 3295, 4939, 4935, 252, 1710, 4934, 4933, 1632,
	1741, 1482, 3535, 4913, 4203, 1492, 1493, 4912, 3278, 4910,
	4886, 4885, 4859, 104, 2726, 1727, 1752, 1754, 3529, 3527,
	3528, 3520, 3521, 3522, 3523, 3525, 3526, 1789, 4845, 2746,
	2747, 2748, 2772, 2758, 2752, 4842, 2754, 2755, 2753, 2740,
	2741, 2742, 2743, 2744, 2745, 3070, 254, 4841, 1227, 1227,
	1227, 1227, 1227, 1227, 1227, 1227, 1459, 4834, 3560, 1459,
	4822, 4821, 1750, 4764, 1201, 4735, 4686, 4669, 4668, 4606,
	4602, 4599, 199, 107, 3518, 3519, 111, 3070, 4577, 4437,
	4416, 1227, 4341, 4191, 4190, 4171, 4170, 1227, 4168, 3070,
	2732, 4085, 4073, 3980, 2010, 3907, 252, 253, 1168, 3901,
	3524, 3868, 3772, 252, 1743, 3725, 3692, 4867, 3637, 3524,
	3635, 973, 246, 3483, 3482, 3477, 159, 252, 1914, 3443,
	3255, 247, 3098, 1941, 1942, 1943, 1944, 1946, 1947, 1863,
	2069, 2068, 2067, 4889, 3529, 3527, 3528, 3520, 3521, 3522,
	3523, 3525, 3526, 4290, 1794, 2064, 2056, 254, 2054, 3011,
	203, 252, 3010, 2975, 254, 3524, 1937, 1938, 1764, 3527,
	3528, 3520, 3521, 3522, 3523, 3525, 3526, 2968, 254, 2934,
	2810, 3002, 2009, 2128, 1783, 2084, 2078, 2077, 2076, 2075,
	1968, 164, 2074, 2073, 2072, 4638, 1908, 2071, 1940, 2070,
	2051, 2050, 2012, 1227, 1227, 1227, 2049, 204, 253, 1227,
	2048, 2047, 254, 2046, 2045, 253, 1350, 2044, 1350, 2043,
	252, 2042, 3534, 246, 2041, 1993, 2040, 2039, 2038, 253,
	246, 3534, 247, 1507, 1939, 2037, 2036, 1812, 2025, 247,
	2011, 2008, 2003, 200, 246, 1227, 1444, 1373, 895, 1431,
	1364, 4888, 1848, 247, 2172, 895, 4609, 1431, 4458, 1431,
	3524, 203, 4387, 253, 4131, 1915, 4097, 1746, 967, 4088,
	3465, 254, 2966, 1943, 1944, 1946, 1947, 4713, 246, 2083,
	4535, 4460, 203, 4130, 2151, 2092, 2024, 247, 3633, 2006,
	3897, 2132, 2201, 2124, 2203, 1469, 1937, 1938, 1911, 3518,
	3519, 3149, 5230, 1990, 1486, 1919, 4943, 1918, 1147, 1471,
	1146, 4936, 1990, 3728, 4835, 2140, 203, 4642, 4580, 1431,
	252, 2145, 253, 4579, 4578, 1227, 2065, 1913, 1940, 1346,
	4534, 4440, 4348, 4347, 4346, 4345, 1486, 246, 2139, 4344,
	4343, 4342, 1945, 4157, 1932, 1933, 247, 252, 4092, 1227,
	5114, 1168, 2113, 4091, 2236, 3606, 191, 1507, 2089, 2090,
	1486, 2351, 3909, 1464, 1939, 3908, 2829, 3796, 3794, 2827,
	3793, 254, 1486, 1746, 2166, 203, 2169, 5187, 5185, 1470,
	2813, 4831, 2811, 2305, 2266, 3535, 1316, 2057, 2058, 4293,
	2063, 3124, 5110, 1484, 3535, 1967, 1969, 2062, 254, 1464,
	3191, 2240, 1459, 4865, 2106, 3967, 252, 1906, 901, 2146,
	904, 2273, 4220, 3503, 3762, 901, 2195, 904, 3502, 4186,
	3425, 1811, 253, 4739, 3694, 3109, 1467, 1124, 2133, 2254,
	4283, 4906, 2218, 2137, 2239, 2220, 3848, 246, 3847, 4905,
	1464, 2225, 4151, 2493, 4152, 2227, 247, 2034, 2046, 253,
	2230, 2046, 2114, 1990, 1960, 2111, 1328, 254, 2160, 4906,
	1820, 4825, 2104, 5143, 246, 4620, 252, 3321, 3820, 4566,
	1436, 1821, 1864, 247, 252, 203, 1125, 2405, 1168, 4298,
	4272, 2216, 4226, 4217, 2260, 2259, 4196, 3935, 1486, 2268,
	3659, 2587, 2498, 2370, 2031, 1348, 2082, 1348, 2436, 4690,
	3567, 4018, 3294, 2793, 4759, 3471, 2123, 2122, 253, 5119,
	2121, 3009, 2079, 2108, 2119, 2118, 2117, 254, 2138, 2404,
	2521, 3828, 2350, 246, 2059, 254, 1629, 1629, 2242, 2462,
	4731, 1745, 247, 1720, 1465, 1990, 2238, 1507, 2152, 1643,
	1440, 1402, 5134, 3528, 3520, 3521, 3522, 3523, 3525, 3526,
	3170, 5131, 4547, 3520, 3521, 3522, 3523, 3525, 3526, 4545,
	3887, 203, 3167, 4162, 3165, 4928, 4626, 1777, 253, 2469,
	5042, 2316, 1798, 3697, 3107, 2798, 253, 4181, 1659, 3291,
	1666, 5120, 1672, 246, 3803, 2415, 2420, 5188, 2347, 2384,
	2355, 246, 247, 5222, 5167, 4762, 2365, 5189, 4758, 4737,
	247, 3522, 3523, 3525, 3526, 3961, 3151, 4790, 3663, 4521,
	959, 2263, 4239, 2280, 1687, 2281, 1695, 1961, 3353, 1122,
	5292, 203, 1120, 1843, 1118, 2288, 2289, 2243, 1116, 203,
	1113, 3083, 2269, 2261, 1629, 1104, 1629, 1745, 1629, 2360,
	3046, 2596, 1471, 2314, 2593, 2580, 2578, 2282, 2283, 4944,
	4783, 1763, 3069, 1768, 2286, 2287, 1629, 1629, 4770, 1461,
	3069, 2255, 1345, 1861, 1345, 2310, 1862, 1782, 3067, 1787,
	1629, 2360, 2799, 2322, 1645, 4569, 3067, 4568, 2634, 1992,
	4237, 2357, 1629, 4236, 4238, 1629, 1629, 1629, 901, 4228,
	904, 3233, 2531, 4211, 3520, 3521, 3522, 3523, 3525, 3526,
	2594, 4210, 4208, 2407, 2408, 4207, 4195, 4154, 1696, 895,
	4153, 2385, 1470, 4165, 1471, 2344, 3809, 2358, 3808, 3764,
	2080, 3627, 960, 3476, 3475, 2458, 3474, 3473, 2522, 2595,
	2409, 1227, 3429, 2265, 1454, 1846, 1842, 3189, 3188, 4760,
	2632, 3172, 3634, 2463, 3727, 1466, 2360, 1650, 1649, 3086,
	3161, 4800, 3153, 3665, 2800, 4519, 2797, 2475, 2532, 1796,
	1465, 2343, 3143, 4516, 2340, 4732, 3142, 2356, 3134, 1227,
	1860, 2264, 3003, 2364, 1948, 1949, 1941, 1942, 1943, 1944,
	1946, 1947, 3133, 3694, 1470, 2394, 1166, 3132, 2394, 2843,
	2842, 2397, 3114, 2393, 2496, 3760, 2393, 3113, 3074, 2990,
	2526, 2707, 1912, 2506, 807, 2421, 1227, 1462, 1227, 2664,
	2442, 3288, 5223, 5168, 2483, 1227, 3936, 1463, 2172, 2172,
	1507, 2472, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227,
	1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227,
	1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227,
	1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1750, 1227,
	1750, 1227, 1227, 1227, 1227, 2513, 4477, 1465, 2444, 901,
	2551, 904, 2485, 2443, 2614, 1791, 1733, 807, 1732, 2405,
	2493, 4467, 1165, 2094, 2359, 1461, 1743, 1227, 2480, 2477,
	2480, 1227, 1227, 2636, 1168, 2481, 1168, 2512, 2633, 1227,
	4667, 4536, 1445, 1227, 3017, 1227, 1227, 2489, 2623, 2490,
	2994, 1947, 5225, 1507, 3526, 2315, 2359, 1488, 1489, 1227,
	1227, 1227, 1227, 2802, 2517, 1227, 1227, 1227, 1227, 1227,
	1227, 1227, 1227, 4476, 2660, 2661, 2618, 2634, 2166, 2166,
	2169, 2169, 1902, 1813, 2312, 3128, 1344, 2793, 1344, 1488,
	1489, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227,
	2530, 1227, 3085, 1646, 3111, 1227, 3761, 2774, 2775, 2541,
	2098, 1466, 2605, 1488, 1489, 3382, 2631, 1350, 4515, 2308,
	1704, 2774, 2790, 3137, 1507, 1488, 1489, 3053, 1691, 4500,
	1110, 2359, 1461, 1350, 864, 1843, 4517, 1792, 2722, 2632,
	1167, 2574, 1464, 2722, 1905, 1731, 2120, 1730, 2838, 1227,
	1507, 4801, 2313, 2324, 5226, 2353, 2647, 3328, 3141, 4921,
	2101, 2608, 2160, 2160, 4799, 4493, 5188, 2884, 2884, 2898,
	4797, 2774, 755, 1462, 2918, 2920, 2096, 1878, 2328, 962,
	961, 2926, 2309, 1463, 806, 1859, 2796, 4513, 2386, 3169,
	2980, 1821, 1709, 1874, 2099, 2620, 2622, 2635, 2621, 750,
	2628, 2738, 1388, 1821, 1840, 3135, 1147, 3369, 2651, 1147,
	1147, 2652, 2653, 3138, 3097, 2789, 2585, 2538, 1466, 5116,
	4796, 4494, 3662, 3168, 2993, 2976, 1880, 2630, 3402, 2572,
	1809, 3417, 2535, 3385, 5254, 3166, 2325, 3164, 2097, 2730,
	2124, 2270, 2271, 2398, 2529, 5224, 2728, 1443, 1842, 4798,
	2951, 2943, 862, 2395, 4192, 1431, 1431, 806, 3084, 3040,
	2295, 1917, 3068, 3096, 2482, 2296, 3947, 2113, 3946, 5228,
	1841, 3371, 2387, 3016, 2802, 3049, 2734, 3582, 4252, 2607,
	1462, 4007, 957, 1797, 956, 3744, 1005, 4004, 4923, 1168,
	1463, 3041, 2396, 1316, 3736, 3136, 1507, 2633, 3051, 1168,
	808, 4896, 2787, 1168, 1114, 3019, 2840, 1114, 3038, 1114,
	191, 2841, 4567, 1115, 2844, 1114, 2845, 2846, 4209, 3228,
	2965, 4206, 4139, 2942, 2997, 4666, 1716, 2704, 3668, 2579,
	2577, 1164, 3035, 1856, 4126, 2539, 3052, 4178, 3015, 4253,
	2336, 1459, 2893, 2880, 3940, 2172, 3745, 2922, 2932, 2933,
	2329, 2924, 2909, 2319, 1096, 3737, 2950, 3050, 2955, 2944,
	4518, 2961, 2962, 3815, 3440, 2948, 2949, 2100, 1464, 4005,
	2111, 3416, 3807, 808, 3384, 2631, 2065, 5234, 3758, 1160,
	3229, 1714, 2297, 4251, 5209, 3027, 5200, 3171, 3043, 3110,
	3743, 3031, 3131, 1168, 1507, 3438, 1348, 2604, 3112, 3735,
	2301, 2337, 4511, 2615, 5117, 3042, 5208, 3381, 3005, 2988,
	1629, 5256, 1348, 3060, 2320, 2316, 5175, 2330, 2331, 3075,
	4514, 2427, 2426, 4369, 3227, 2341, 3012, 1431, 3409, 3410,
	2346, 3224, 3037, 997, 3026, 1875, 4489, 4368, 3029, 3034,
	3030, 2057, 2058, 4490, 2326, 2335, 982, 1900, 1227, 1227,
	2802, 1227, 3941, 3816, 4495, 2213, 3044, 3021, 2318, 4176,
	998, 3117, 3813, 3147, 3182, 2166, 3036, 2169, 2718, 3072,
	3884, 3378, 1693, 987, 1097, 1464, 895, 5227, 1431, 2298,
	2303, 863, 3267, 5019, 4929, 3129, 3581, 2314, 5007, 3885,
	4723, 3162, 2327, 3047, 2316, 5087, 4492, 5088, 3757, 2716,
	3756, 3753, 3116, 2348, 2702, 3150, 2374, 2705, 290, 1629,
	4951, 2381, 2400, 5115, 1716, 4496, 2098, 1795, 3383, 1096,
	3319, 3664, 1629, 3302, 1629, 3318, 1872, 3259, 805, 1822,
	1629, 3311, 1690, 865, 3101, 2371, 3316, 861, 2802, 3078,
	1793, 1629, 1629, 3435, 1160, 3088, 3091, 2342, 3115, 2160,
	1346, 1176, 1346, 3059, 3140, 3061, 3062, 909, 2701, 3063,
	3064, 3130, 751, 1345, 2606, 2299, 2101, 1431, 3275, 1431,
	4922, 4512, 3183, 2399, 3436, 3884, 3331, 3332, 3441, 1345,
	3190, 3322, 2945, 1876, 916, 3225, 3226, 1644, 3339, 3340,
	3341, 1227, 3775, 3122, 3123, 3125, 3126, 3127, 3139, 3145,
	2099, 3709, 3355, 901, 3356, 904, 1387, 3159, 3152, 3681,
	3922, 1371, 3271, 4596, 3721, 2354, 5174, 3431, 2306, 2332,
	2537, 2052, 2721, 3920, 3175, 3357, 1102, 1101, 2375, 1358,
	3631, 3176, 3177, 3913, 3800, 3069, 901, 3265, 904, 1097,
	5232, 2352, 5198, 5153, 191, 1360, 3234, 2712, 752, 2094,
	2371, 3089, 4491, 5154, 5053, 1111, 2567, 5252, 3349, 4365,
	1227, 3708, 1650, 3239, 2306, 4662, 1227, 1227, 3313, 4679,
	3323, 2713, 1355, 4548, 1098, 3719, 3329, 774, 2714, 2784,
	2304, 3253, 2719, 1877, 2573, 3306, 2395, 5005, 1006, 2002,
	3481, 2947, 999, 1000, 4501, 4502, 3304, 2979, 4265, 1873,
	753, 2333, 754, 3814, 2371, 983, 984, 1158, 4263, 1096,
	3286, 2729, 3715, 1189, 1808, 1810, 3297, 2534, 1361, 3720,
	3924, 5257, 1227, 1227, 3387, 2396, 3389, 3307, 1227, 2528,
	1879, 1442, 5006, 1750, 1160, 2960, 2098, 3915, 1167, 4020,
	3346, 1227, 1227, 4449, 2900, 1916, 1362, 1227, 1227, 5241,
	4450, 3348, 3914, 1227, 4608, 3305, 3359, 5233, 3361, 2315,
	3363, 2367, 3365, 3366, 2703, 4265, 3360, 3236, 3362, 3717,
	3364, 4355, 3238, 2100, 3437, 4263, 3234, 4613, 4710, 2338,
	3146, 4572, 1159, 4127, 3439, 3375, 2101, 3358, 2366, 2352,
	1359, 1102, 1101, 1377, 5235, 4267, 4177, 4614, 1227, 1227,
	1227, 1375, 2096, 1827, 1227, 1099, 2354, 3432, 4370, 3923,
	4661, 2300, 4448, 3963, 1227, 3400, 910, 911, 4972, 5059,
	2099, 3390, 4989, 2362, 3392, 4844, 4965, 4266, 3682, 1097,
	5173, 1227, 4571, 1100, 4570, 2214, 4312, 3408, 3716, 1098,
	2349, 3872, 3645, 2987, 4597, 2351, 3397, 1344, 2450, 2091,
	3911, 1374, 3399, 1367, 3398, 742, 2313, 4791, 3326, 4288,
	2378, 3464, 4267, 1344, 2097, 3333, 4059, 3334, 2647, 3418,
	1927, 3403, 2584, 4414, 1926, 3459, 3460, 4366, 2715, 2650,
	3463, 4957, 2317, 2256, 2345, 1926, 2363, 1921, 2717, 1103,
	5262, 3619, 4853, 4757, 4266, 4958, 4707, 3455, 3688, 1001,
	1002, 3186, 4903, 2253, 4313, 4232, 4212, 4163, 4161, 3873,
	3864, 5152, 985, 986, 4973, 3684, 3276, 3270, 3257, 2353,
	2476, 2376, 2470, 1227, 1227, 1227, 1227, 2464, 2456, 4959,
	2435, 2434, 1227, 1227, 1227, 3430, 2640, 1227, 4003, 1684,
	1379, 4838, 4074, 5025, 3118, 3964, 3073, 4147, 4992, 1227,
	1350, 1507, 814, 2586, 1926, 1227, 4663, 1227, 3574, 3575,
	3090, 2249, 4315, 4631, 3254, 2377, 1350, 2938, 913, 912,
	1099, 4371, 1390, 4087, 4817, 3921, 3916, 3917, 3918, 3919,
	2251, 1102, 1101, 1925, 1507, 4815, 4734, 3700, 3696, 3695,
	3423, 3579, 4261, 2100, 1925, 3401, 1350, 4961, 1100, 1507,
	2518, 3578, 1850, 1849, 2941, 2510, 2350, 1168, 2499, 4264,
	4271, 1431, 2432, 3557, 3470, 3925, 2002, 1844, 4121, 1356,
	2986, 2172, 4960, 2985, 4611, 1507, 2984, 2252, 2983, 1098,
	2982, 3576, 1165, 3262, 1725, 1431, 914, 915, 4587, 1739,
	4962, 1737, 1004, 1431, 4916, 2940, 3626, 3647, 1726, 3094,
	2939, 4284, 2279, 4169, 1103, 4746, 2954, 1927, 2474, 4819,
	3612, 4372, 3599, 1925, 3823, 1227, 2391, 4158, 1927, 4060,
	3641, 5195, 853, 4721, 4719, 1357, 4264, 1227, 3352, 3232,
	4061, 3937, 2641, 3932, 3644, 3629, 3586, 4415, 2305, 3327,
	3237, 3235, 2503, 2404, 1801, 1431, 5031, 4917, 3613, 3683,
	3584, 2172, 3608, 3776, 4742, 4741, 4471, 3672, 3673, 854,
	4470, 5039, 5261, 5022, 4421, 4076, 4453, 2809, 1227, 4711,
	4729, 4974, 1897, 5061, 2305, 3119, 3120, 3660, 1899, 3698,
	5199, 5197, 3702, 5136, 1431, 4947, 4818, 3632, 3733, 3666,
	1459, 2166, 4937, 2169, 3621, 3622, 3623, 3624, 4837, 3617,
	3568, 3653, 3605, 1431, 4148, 1431, 3585, 3747, 1896, 3749,
	1099, 3597, 3552, 3553, 3554, 1828, 4747, 3600, 3601, 3590,
	3598, 4730, 3583, 2600, 1227, 1227, 1894, 1868, 2370, 1866,
	3763, 4717, 1507, 1838, 3699, 2370, 1157, 3704, 1100, 1836,
	3706, 5032, 4918, 1431, 1834, 3649, 4685, 3786, 3651, 3652,
	1832, 3685, 4464, 3655, 1830, 3656, 3778, 3657, 3780, 4413,
	1431, 3784, 1824, 1818, 3798, 3790, 1816, 3691, 3603, 1735,
	3604, 2166, 4270, 2169, 3549, 2160, 3979, 3933, 3930, 1348,
	3730, 3765, 3642, 3242, 3512, 2576, 3245, 4159, 3247, 3620,
	3442, 3791, 1629, 3258, 1103, 1348, 3712, 3650, 3754, 3160,
	3154, 813, 3108, 3014, 2613, 1431, 1629, 3654, 1629, 2278,
	3638, 3639, 1507, 3640, 3734, 2609, 3661, 2520, 3591, 895,
	1629, 2509, 2494, 2131, 2389, 1348, 2127, 1901, 1776, 4803,
	4469, 3550, 3680, 1629, 3748, 3293, 3669, 2543, 3293, 2413,
	3817, 1738, 3958, 1736, 1003, 1431, 3833, 3957, 3949, 3865,
	1921, 3373, 3372, 3336, 4963, 2160, 5108, 2629, 3773, 1855,
	4964, 1346, 1350, 2546, 2455, 3818, 3880, 3821, 3878, 3718,
	3589, 3596, 1898, 3732, 3777, 3853, 3726, 1346, 2433, 4453,
	2202, 2200, 2035, 1790, 1629, 3316, 3739, 284, 1189, 1189,
	1189, 1708, 3746, 1312, 3316, 3742, 1629, 2808, 1629, 5021,
	1112, 3856, 1895, 3264, 5171, 4549, 3759, 4219, 3595, 4218,
	2602, 4553, 4531, 4629, 4558, 3768, 4544, 2601, 4482, 4624,
	1893, 1867, 3367, 1865, 3863, 3900, 3774, 1837, 4481, 1591,
	4311, 3787, 3785, 1835, 4302, 3871, 3889, 4235, 1833, 3740,
	3805, 3795, 4000, 3741, 1831, 4214, 1345, 3799, 1829, 3797,
	3140, 4184, 1507, 3938, 4182, 1507, 1823, 1817, 4160, 3867,
	1815, 3862, 1345, 1734, 3849, 3289, 3281, 3874, 3274, 3266,
	3250, 2138, 2575, 3249, 3230, 3033, 3806, 3028, 2431, 901,
	2429, 904, 2406, 2372, 2334, 2321, 3804, 2307, 2235, 2232,
	1227, 2229, 1345, 3928, 3877, 2226, 1227, 1227, 3825, 3116,
	1227, 1227, 1227, 2221, 1227, 3950, 2219, 3810, 2215, 3881,
	3854, 2206, 3861, 1227, 2172, 191, 191, 3860, 3859, 3592,
	3593, 3594, 1227, 5166, 2542, 5092, 2412, 1227, 1930, 3788,
	2144, 4613, 5189, 1507, 2381, 2257, 3421, 1325, 4915, 3886,
	2245, 2246, 1227, 3393, 3929, 3394, 3391, 3223, 3895, 5073,
	1507, 4614, 3879, 4983, 3956, 3955, 3898, 3899, 3888, 4645,
	2172, 2172, 1227, 1227, 1326, 1227, 1227, 1227, 1117, 1119,
	1121, 2612, 4565, 4468, 3317, 3667, 2274, 1689, 4855, 3095,
	4848, 4323, 2316, 1227, 1891, 1892, 2533, 1227, 1411, 2172,
	2172, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227,
	1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227,
	1227, 3982, 1227, 3965, 3943, 4032, 3944, 4033, 3945, 2610,
	1227, 1227, 2172, 5072, 3069, 1168, 2473, 1227, 3069, 2570,
	3992, 3993, 2565, 2540, 2166, 3422, 2169, 4522, 1227, 1410,
	3067, 1348, 1931, 4560, 3092, 3953, 3187, 3962, 1159, 1350,
	1350, 3789, 1814, 1227, 3959, 3099, 4874, 3960, 4744, 1937,
	1938, 1937, 1938, 4422, 842, 4400, 2611, 2244, 3713, 3100,
	3121, 1934, 1438, 2419, 1378, 5183, 2660, 4023, 1327, 1478,
	2166, 2166, 2169, 2169, 1481, 1507, 281, 5144, 3248, 3100,
	4299, 1940, 4106, 3167, 3987, 3989, 2457, 1449, 1431, 1431,
	4231, 3165, 3174, 4071, 3156, 2660, 4038, 3102, 3999, 2166,
	2166, 2169, 2169, 1431, 1431, 1411, 895, 1431, 2160, 1871,
	4015, 4006, 4008, 4009, 4230, 3926, 4022, 1939, 1411, 1939,
	1344, 3931, 5030, 4124, 4125, 739, 1227, 859, 4067, 5012,
	3158, 4030, 2166, 4982, 2169, 4031, 1344, 3104, 4137, 4138,
	5229, 4093, 4144, 4035, 3157, 4037, 845, 845, 4976, 4914,
	4063, 3103, 4839, 1227, 2160, 2160, 4810, 191, 4722, 4309,
	4301, 4287, 4103, 3866, 3296, 3922, 1344, 4010, 2925, 2241,
	2153, 4072, 4743, 4083, 4084, 3144, 4064, 5063, 3920, 1642,
	1641, 1635, 5064, 2160, 2160, 1161, 1227, 1227, 3913, 3630,
	4029, 2391, 5260, 3518, 3519, 1937, 1938, 5063, 1345, 4978,
	4080, 4081, 5064, 5202, 2285, 3055, 2284, 3054, 1800, 1652,
	1653, 4392, 2804, 1653, 1799, 4129, 2160, 3376, 2839, 2285,
	2284, 1870, 4308, 4840, 1869, 1227, 1227, 4784, 4095, 4562,
	4164, 4557, 4556, 1227, 4451, 4447, 4446, 4388, 4362, 4128,
	4011, 3782, 3779, 3379, 2029, 2028, 3396, 2617, 5245, 5210,
	4096, 5078, 5016, 5015, 1629, 1629, 5014, 1629, 4946, 4145,
	4945, 1629, 4197, 4146, 1629, 4892, 901, 4140, 904, 1431,
	4890, 4813, 4774, 4249, 4714, 3924, 4709, 4708, 4706, 4705,
	4703, 4604, 4584, 4520, 4459, 4445, 4444, 4443, 4336, 4329,
	4274, 4180, 3915, 4172, 2172, 4202, 4204, 3870, 3869, 4201,
	3705, 1591, 3648, 3380, 3370, 3345, 3344, 3914, 3343, 4227,
	3342, 4183, 3280, 4185, 4221, 3252, 4243, 3251, 1348, 1348,
	3093, 3024, 4233, 3018, 3007, 3006, 2995, 4133, 2733, 2603,
	2571, 4257, 4189, 2564, 2563, 2562, 2561, 4194, 2560, 1629,
	2471, 2445, 2441, 2440, 2439, 1227, 2438, 4316, 2437, 3722,
	3723, 2209, 3724, 1350, 1227, 2208, 4325, 4296, 4254, 4255,
	2207, 4078, 3116, 1629, 3923, 4280, 2205, 1505, 1629, 1629,
	1629, 2143, 3302, 2142, 1890, 4269, 1889, 1825, 1703, 4331,
	1702, 1701, 1700, 1699, 4294, 1698, 3316, 1697, 1692, 4234,
	1688, 1629, 1686, 1629, 1685, 1619, 1618, 1617, 1629, 4250,
	1507, 1498, 1497, 3769, 3770, 4240, 3771, 1496, 4333, 1495,
	3691, 4282, 4320, 1494, 2166, 1441, 2169, 1189, 4273, 3183,
	1397, 1396, 1395, 1394, 4247, 1591, 4295, 1393, 1392, 4286,
	1507, 4337, 4258, 1227, 1227, 1391, 1389, 1384, 1383, 1227,
	1227, 2172, 4319, 4317, 1227, 1227, 1382, 1227, 1381, 1380,
	4351, 1307, 1227, 4300, 971, 8, 1235, 4305, 4248, 2247,
	1123, 1109, 4920, 1227, 4499, 4498, 4497, 2599, 98, 1694,
	933, 4303, 92, 2379, 4179, 1072, 5060, 4950, 1677, 1227,
	941, 5041, 1344, 4349, 4297, 1345, 1345, 3707, 4352, 4318,
	3192, 2545, 1826, 2547, 3607, 4326, 2967, 5004, 2160, 4321,
	4327, 4396, 3480, 4881, 288, 288, 288, 4678, 745, 746,
	4335, 761, 745, 761, 772, 4373, 2807, 812, 4334, 2033,
	3561, 832, 94, 4386, 1211, 1257, 839, 839, 839, 839,
	3921, 3916, 3917, 3918, 3919, 4595, 288, 4594, 4382, 4353,
	1350, 4360, 4483, 4166, 3836, 4591, 4590, 2157, 1350, 2159,
	4367, 1175, 1507, 1507, 1510, 1507, 4374, 978, 5086, 2258,
	5251, 2166, 1350, 2169, 288, 1217, 2272, 2267, 3008, 2883,
	3925, 1234, 1231, 1629, 1629, 2161, 2163, 1420, 1233, 1232,
	2162, 2053, 1230, 2156, 1346, 4307, 3300, 3896, 1744, 1742,
	1074, 4359, 4361, 1507, 1185, 2262, 2727, 2791, 3469, 2026,
	1346, 1191, 4427, 1213, 2788, 1591, 1372, 1202, 3587, 3566,
	4259, 3883, 2295, 4268, 4102, 2639, 951, 2296, 1227, 3515,
	2794, 1363, 2906, 2899, 4454, 4455, 3612, 2895, 3658, 1350,
	1346, 1350, 1348, 3290, 4472, 4473, 1907, 4692, 4412, 2004,
	3301, 1903, 4457, 1475, 1195, 2160, 2725, 2017, 3447, 2649,
	1600, 3890, 2295, 1614, 1420, 4463, 1431, 2296, 4466, 3610,
	4530, 3001, 5066, 4523, 4019, 4509, 1507, 3377, 1431, 2449,
	191, 1431, 4539, 4435, 4423, 4542, 4424, 4425, 4430, 4432,
	4475, 4429, 4428, 4426, 4419, 1324, 1227, 1323, 4510, 1507,
	1370, 1322, 5047, 4506, 4436, 4506, 4439, 5044, 2369, 4598,
	3831, 3832, 2250, 745, 745, 3048, 2737, 4526, 4527, 3850,
	4478, 288, 1207, 1613, 2591, 3951, 4561, 3572, 4563, 4524,
	4285, 4350, 4452, 4465, 4480, 1705, 4751, 1420, 1420, 1219,
	1989, 1629, 1629, 3219, 2297, 3218, 4474, 4909, 1460, 1458,
	1457, 1456, 5219, 3185, 2382, 4175, 4174, 4173, 251, 3415,
	1928, 1920, 2301, 248, 250, 249, 3711, 4107, 4588, 3616,
	1431, 1802, 5142, 4199, 4615, 4546, 3822, 25, 846, 1344,
	1344, 847, 1507, 848, 2297, 3058, 4525, 1629, 2277, 1477,
	4150, 24, 4564, 23, 22, 4632, 21, 121, 44, 20,
	163, 4583, 2301, 161, 4582, 138, 158, 157, 4540, 1345,
	130, 156, 4543, 1629, 1629, 1629, 1629, 1629, 1629, 1629,
	155, 154, 4575, 4616, 153, 4555, 4585, 152, 160, 1348,
	151, 4581, 150, 145, 149, 148, 1507, 1348, 147, 146,
	144, 2298, 2303, 142, 143, 137, 141, 4574, 1227, 1227,
	1227, 1348, 140, 4573, 4529, 139, 136, 4589, 4621, 2130,
	135, 4593, 134, 133, 4600, 132, 1507, 4538, 131, 129,
	4541, 1227, 4664, 4650, 1227, 1227, 4607, 4654, 4605, 4636,
	4601, 2298, 2303, 162, 1227, 128, 127, 2172, 205, 126,
	125, 4633, 1227, 1227, 124, 4634, 123, 4641, 1591, 122,
	825, 826, 4618, 63, 62, 118, 119, 19, 4627, 1507,
	4647, 1629, 42, 14, 67, 68, 18, 4656, 1348, 4648,
	1348, 13, 37, 97, 110, 109, 108, 2299, 38, 2644,
	105, 4670, 36, 17, 16, 1431, 4665, 15, 103, 102,
	101, 35, 33, 11, 9, 39, 2115, 12, 5, 196,
	195, 198, 194, 197, 96, 1622, 1346, 1507, 193, 192,
	95, 4675, 31, 10, 188, 1227, 4829, 2299, 4292, 87,
	4716, 190, 189, 187, 186, 185, 2293, 88, 1227, 85,
	2306, 184, 91, 2276, 4687, 183, 86, 1227, 90, 89,
	29, 1591, 2172, 6, 4681, 1679, 1345, 66, 4728, 7,
	4659, 3934, 1227, 113, 1345, 1227, 114, 2166, 40, 2169,
	4698, 4699, 83, 82, 81, 4701, 80, 4702, 1345, 28,
	2306, 1227, 65, 27, 1227, 180, 229, 4725, 228, 4726,
	227, 1507, 226, 4754, 225, 224, 223, 2291, 222, 1431,
	217, 221, 2304, 4793, 219, 218, 220, 216, 1758, 1629,
	1629, 1629, 4727, 242, 241, 4724, 4733, 240, 239, 2305,
	238, 232, 1591, 231, 1773, 237, 236, 4773, 235, 234,
	1350, 233, 4777, 230, 4778, 2901, 245, 3670, 76, 215,
	4802, 2292, 2304, 214, 213, 1345, 211, 1345, 1591, 207,
	210, 2160, 212, 1344, 209, 208, 4789, 3833, 4812, 4828,
	1507, 206, 244, 1629, 4820, 4776, 243, 4816, 4763, 4807,
	4808, 4849, 2166, 4775, 2169, 4771, 77, 178, 179, 75,
	177, 3671, 176, 4304, 1803, 175, 4786, 174, 173, 4823,
	172, 171, 74, 182, 4506, 181, 26, 2, 1, 1227,
	1227, 4805, 4765, 4766, 0, 0, 4809, 1614, 0, 4804,
	4814, 0, 4832, 4657, 0, 4658, 1227, 2172, 0, 4858,
	0, 4860, 4827, 2424, 0, 4854, 0, 0, 0, 4794,
	0, 4836, 0, 2300, 4852, 0, 0, 0, 4785, 0,
	4787, 0, 4788, 1431, 0, 0, 1431, 0, 1431, 1431,
	4354, 0, 0, 4851, 4857, 0, 2160, 1614, 0, 4856,
	0, 4636, 0, 0, 0, 0, 1227, 4850, 1227, 0,
	1227, 4779, 0, 2300, 1365, 4870, 4871, 0, 4891, 0,
	1350, 4893, 0, 4894, 4895, 4862, 4846, 4904, 4792, 0,
	0, 0, 0, 1227, 1591, 1350, 4869, 0, 0, 0,
	4902, 0, 0, 1346, 1346, 0, 0, 0, 1386, 0,
	4873, 0, 0, 0, 4879, 0, 0, 0, 0, 0,
	288, 0, 288, 288, 0, 1415, 288, 1425, 0, 4932,
	0, 0, 4901, 0, 0, 4900, 0, 2166, 1439, 2169,
	1344, 0, 4897, 0, 4506, 0, 832, 0, 1344, 832,
	0, 0, 1350, 1350, 0, 4931, 0, 4924, 0, 4506,
	0, 0, 1344, 4953, 0, 0, 1227, 0, 4925, 0,
	4955, 0, 839, 1350, 0, 0, 1350, 0, 3518, 3519,
	1629, 3536, 3537, 3538, 0, 0, 4968, 4969, 0, 0,
	1629, 0, 1591, 4940, 0, 0, 288, 0, 288, 288,
	1415, 4378, 288, 288, 4942, 1227, 1227, 4986, 0, 1348,
	4988, 1425, 0, 0, 0, 1227, 4506, 4506, 4948, 0,
	0, 2160, 4966, 0, 0, 288, 0, 1655, 0, 1344,
	4977, 1344, 0, 4832, 4980, 4979, 0, 4506, 0, 4985,
	4506, 0, 0, 1675, 0, 0, 0, 4994, 0, 0,
	1682, 4999, 5000, 4998, 5001, 4997, 0, 3533, 0, 5009,
	4996, 5017, 0, 0, 0, 0, 1227, 1227, 4941, 1707,
	1227, 0, 1425, 5013, 1629, 1431, 288, 288, 1431, 1415,
	5038, 5008, 5018, 0, 4993, 0, 0, 0, 0, 0,
	0, 0, 0, 5046, 5049, 5028, 5029, 5020, 0, 0,
	832, 0, 288, 288, 0, 5068, 2663, 0, 5065, 5069,
	5057, 5037, 0, 5058, 1770, 5062, 5036, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 5051,
	978, 5091, 5089, 5056, 5055, 0, 1227, 1227, 1227, 0,
	0, 4551, 5050, 0, 0, 0, 5054, 1634, 0, 0,
	0, 0, 0, 0, 3524, 0, 0, 5074, 0, 1348,
	0, 0, 2461, 0, 5079, 0, 5082, 0, 0, 0,
	0, 0, 0, 1227, 1348, 5090, 1345, 5123, 0, 0,
	0, 0, 0, 5103, 5104, 5128, 0, 0, 5106, 5105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2805,
	0, 0, 0, 0, 4603, 0, 5149, 2305, 0, 0,
	0, 288, 5150, 5125, 5151, 0, 0, 1346, 4617, 0,
	5159, 0, 5124, 5157, 3540, 0, 5163, 5139, 5141, 0,
	1227, 1348, 1348, 0, 0, 0, 288, 0, 1431, 0,
	0, 4640, 0, 5156, 5172, 0, 4812, 5155, 0, 5165,
	0, 0, 1348, 5126, 0, 1348, 5164, 0, 0, 5190,
	0, 0, 5182, 0, 5178, 5179, 3534, 0, 5169, 0,
	0, 5186, 0, 5180, 0, 5184, 0, 0, 0, 5181,
	0, 5193, 5192, 0, 5194, 0, 0, 5206, 0, 1350,
	5046, 1350, 5205, 5049, 5213, 5196, 2977, 0, 0, 5068,
	5203, 3405, 5215, 0, 5207, 5204, 0, 5211, 5201, 0,
	0, 5212, 0, 0, 0, 5221, 0, 0, 0, 0,
	0, 0, 0, 5214, 0, 5216, 1345, 0, 0, 0,
	1431, 0, 0, 2592, 5138, 0, 0, 5140, 5236, 5237,
	0, 1345, 0, 5244, 0, 0, 0, 1990, 0, 5243,
	5220, 0, 0, 4506, 0, 4506, 5247, 0, 5242, 0,
	1227, 1227, 0, 5255, 0, 5240, 5246, 5253, 5249, 1227,
	1227, 0, 0, 0, 5258, 3302, 0, 0, 5269, 0,
	0, 5263, 2901, 2901, 5271, 5274, 4720, 5275, 0, 5267,
	5273, 5279, 5276, 5278, 5277, 0, 5270, 0, 1345, 1345,
	5272, 0, 0, 0, 1346, 3302, 5283, 1431, 5284, 5288,
	5285, 5287, 1346, 5291, 5289, 0, 5282, 0, 5286, 1345,
	0, 0, 1345, 0, 0, 0, 1346, 1227, 5294, 3535,
	0, 5298, 0, 5300, 5291, 5302, 0, 0, 0, 5295,
	0, 745, 3057, 0, 0, 5264, 5265, 5297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 288, 0, 288, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 2015, 0, 0, 4110, 2020,
	0, 1655, 1415, 2135, 288, 0, 288, 2141, 0, 0,
	0, 2491, 0, 1346, 288, 1346, 761, 0, 0, 0,
	0, 288, 0, 5299, 0, 0, 0, 0, 0, 2505,
	2507, 0, 0, 0, 4500, 0, 0, 2210, 0, 5266,
	0, 0, 0, 2511, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 4111, 0, 2519, 288, 0, 2523, 2524,
	2525, 0, 0, 0, 0, 0, 0, 0, 0, 1591,
	4493, 0, 0, 0, 4486, 0, 0, 0, 0, 0,
	4112, 0, 4109, 0, 2901, 2901, 2901, 2901, 1348, 832,
	1348, 4120, 4484, 0, 0, 3444, 3445, 4118, 3530, 3531,
	3532, 4488, 1591, 0, 0, 3529, 3527, 3528, 3520, 3521,
	3522, 3523, 3525, 3526, 0, 1420, 0, 1591, 0, 0,
	0, 0, 0, 1937, 1938, 0, 4494, 839, 0, 839,
	1344, 0, 4119, 0, 0, 0, 0, 4115, 0, 839,
	839, 0, 0, 1591, 0, 1344, 0, 1968, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 1937, 1938, 0,
	0, 0, 4116, 0, 1420, 0, 0, 0, 0, 0,
	4487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 1993, 1189, 0, 0, 0, 0, 0, 1940,
	0, 1939, 0, 0, 0, 1189, 1420, 1420, 0, 0,
	0, 0, 1344, 1344, 0, 0, 0, 0, 3518, 3519,
	0, 3536, 3537, 3538, 0, 0, 1993, 0, 4938, 0,
	0, 0, 0, 1344, 0, 1939, 1344, 0, 0, 0,
	0, 3984, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4952, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4984, 3542, 3543, 3544,
	3545, 0, 0, 0, 0, 0, 0, 3533, 0, 0,
	288, 0, 0, 0, 288, 4113, 0, 0, 0, 1945,
	1591, 0, 1600, 4114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 1963, 1964, 1965, 0, 0, 0,
	0, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	1614, 4489, 0, 0, 0, 0, 0, 0, 4490, 0,
	0, 288, 1967, 1969, 0, 288, 0, 4117, 0, 4495,
	0, 288, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1591, 0, 0, 288, 3524, 288, 1967, 1969, 0, 745,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4492, 0, 832, 0, 0, 0, 978, 0, 0,
	0, 1960, 0, 5075, 0, 0, 0, 0, 0, 5077,
	4496, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 1415,
	288, 79, 0, 0, 1346, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 3540, 832, 0, 0, 84, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	2544, 0, 0, 0, 0, 288, 288, 0, 288, 0,
	288, 0, 288, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 3534, 0, 0, 93,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 2581,
	0, 0, 2582, 0, 2583, 0, 0, 0, 1420, 0,
	1591, 0, 0, 1591, 0, 0, 1990, 0, 0, 288,
	288, 288, 288, 0, 0, 0, 0, 0, 0, 1344,
	972, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 115, 0, 4491, 0, 812,
	0, 99, 112, 832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 1961, 1614, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 4501,
	4502, 1591, 0, 0, 0, 0, 0, 0, 1961, 1346,
	0, 0, 2901, 2901, 0, 0, 0, 3573, 1591, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 3184, 0, 0, 0, 0, 0, 0,
	3602, 0, 0, 0, 0, 0, 2739, 0, 0, 3535,
	0, 0, 0, 0, 0, 3615, 1346, 1346, 0, 0,
	1992, 0, 3518, 3519, 0, 3536, 3537, 3538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	1346, 3636, 0, 0, 0, 3983, 0, 0, 0, 0,
	0, 0, 2901, 2901, 2901, 2901, 2901, 2901, 2901, 2901,
	2901, 2901, 2901, 2901, 2901, 2901, 2901, 2901, 2901, 2901,
	2901, 2901, 0, 2901, 0, 0, 0, 0, 745, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 3533, 745, 1591, 0, 0, 0, 0, 0, 288,
	0, 745, 0, 3330, 1950, 1948, 1949, 1941, 1942, 1943,
	1944, 1946, 1947, 288, 3337, 3338, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 3518, 3519, 2731, 3536, 3537,
	3538, 0, 0, 0, 288, 1425, 0, 0, 0, 0,
	0, 0, 0, 2015, 0, 3975, 3976, 0, 3530, 3531,
	3532, 0, 0, 0, 0, 3529, 3527, 3528, 3520, 3521,
	3522, 3523, 3525, 3526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 107,
	0, 0, 111, 288, 1425, 0, 0, 761, 3524, 761,
	0, 0, 0, 3023, 0, 0, 0, 0, 1634, 288,
	0, 0, 288, 0, 3533, 1634, 288, 0, 288, 252,
	0, 0, 0, 1415, 0, 288, 288, 973, 1425, 1425,
	3039, 0, 159, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4039, 4040, 4041, 4042, 4043,
	4044, 4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053,
	4054, 4055, 4056, 4057, 4058, 0, 4062, 0, 3540, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 3615, 839,
	839, 0, 0, 839, 839, 0, 0, 0, 0, 0,
	0, 0, 3082, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	3534, 3524, 0, 204, 0, 0, 0, 0, 288, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 832, 0, 0, 247, 0, 0, 0, 200,
	1614, 1614, 0, 1346, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 203, 0, 0, 0, 1182, 0,
	0, 288, 288, 3180, 1655, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 1937, 1938,
	0, 1970, 1971, 1972, 1981, 1982, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3952, 288,
	3240, 1505, 1968, 3534, 0, 0, 0, 0, 1591, 1614,
	1940, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	288, 2461, 288, 0, 0, 0, 0, 1993, 1591, 288,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 3285,
	0, 0, 0, 3535, 0, 0, 0, 1959, 0, 3082,
	0, 745, 0, 0, 0, 0, 1956, 0, 0, 0,
	3180, 978, 3082, 0, 0, 0, 0, 0, 0, 3996,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 4012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 1415, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1425, 288, 0, 0,
	1415, 0, 1415, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 1963, 1964, 1965, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	1591, 1591, 0, 1591, 0, 0, 3535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1420,
	0, 288, 288, 288, 288, 1415, 0, 0, 1415, 0,
	0, 288, 0, 0, 0, 0, 288, 1978, 0, 0,
	1988, 1591, 3530, 3531, 3532, 0, 0, 1967, 1969, 3529,
	3527, 3528, 3520, 3521, 3522, 3523, 3525, 3526, 0, 0,
	0, 0, 0, 0, 0, 0, 1189, 288, 0, 0,
	0, 4105, 0, 1954, 1955, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 1591, 0, 0, 3518, 3519, 0,
	3536, 3537, 3538, 1614, 0, 0, 0, 0, 0, 0,
	0, 1212, 117, 0, 0, 0, 0, 1591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1937, 1938, 3530, 3531, 3532, 0, 0,
	0, 0, 3529, 3527, 3528, 3520, 3521, 3522, 3523, 3525,
	3526, 0, 0, 0, 0, 0, 0, 1968, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 1990, 0, 0,
	0, 0, 0, 0, 1634, 0, 3533, 0, 0, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 0, 0, 0, 0,
	1591, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 3801, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 3826, 1591, 1634, 1634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3855, 0, 0, 0,
	0, 0, 0, 3524, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 1591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	1963, 1964, 1965, 1148, 0, 0, 0, 0, 0, 1945,
	0, 1992, 0, 0, 0, 1169, 0, 3903, 0, 3541,
	0, 0, 0, 0, 0, 0, 288, 1591, 0, 3927,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 3540, 0, 2901, 0, 745, 0, 0,
	0, 0, 745, 0, 0, 745, 0, 0, 745, 745,
	0, 0, 1967, 1969, 745, 0, 1334, 0, 0, 0,
	0, 0, 288, 0, 0, 1591, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 3534, 0, 1977, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 78, 1951, 1952,
	1958, 1980, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942,
	1943, 1944, 1946, 1947, 0, 79, 0, 0, 0, 0,
	0, 1960, 0, 1189, 0, 288, 2901, 0, 0, 288,
	288, 0, 84, 0, 0, 0, 0, 1634, 1634, 1634,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 1591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3082, 3082, 288, 1990, 3678, 2135, 0,
	0, 0, 0, 93, 3082, 0, 2141, 0, 0, 0,
	0, 0, 0, 0, 0, 3082, 2141, 0, 3082, 2141,
	0, 0, 2141, 0, 0, 3678, 1420, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 288, 288, 2135,
	0, 288, 0, 0, 972, 0, 0, 0, 1591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2135, 115,
	288, 4434, 3752, 0, 3752, 99, 112, 0, 4684, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 3535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 3082, 0, 3082, 0, 3783, 3082, 2135, 4461,
	0, 3082, 0, 0, 0, 0, 0, 0, 0, 0,
	2461, 0, 0, 0, 1961, 2135, 0, 0, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2901, 0, 4736,
	1415, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 1992, 3827, 0, 0,
	0, 3829, 3082, 0, 0, 288, 0, 0, 288, 0,
	0, 3858, 0, 1425, 0, 0, 0, 0, 0, 2901,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 3285, 0, 0, 1415, 0, 288, 0,
	0, 3082, 0, 745, 2901, 0, 0, 3530, 3531, 3532,
	3082, 0, 0, 0, 3529, 3527, 3528, 3520, 3521, 3522,
	3523, 3525, 3526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2998, 0, 0, 0, 1957, 1953, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	0, 3942, 0, 104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3948, 0, 0, 0, 1655, 0, 0, 0, 1415,
	288, 0, 288, 0, 0, 0, 0, 0, 1415, 0,
	0, 1415, 0, 0, 0, 0, 0, 4241, 4242, 0,
	0, 0, 1505, 0, 4244, 0, 0, 4245, 0, 0,
	4878, 0, 199, 107, 0, 0, 111, 0, 0, 0,
	288, 0, 0, 0, 0, 1189, 0, 0, 0, 0,
	0, 0, 4676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 0, 0, 1937, 1938,
	0, 973, 0, 0, 0, 0, 159, 0, 0, 1420,
	0, 0, 4908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 4676, 0, 0, 4017, 0,
	1940, 0, 0, 0, 0, 0, 0, 4930, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4332, 1993, 0, 0,
	0, 2505, 4338, 4339, 0, 117, 1939, 0, 0, 0,
	0, 164, 0, 2663, 0, 0, 0, 1959, 0, 2461,
	0, 0, 0, 0, 0, 0, 1956, 204, 0, 0,
	0, 4357, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 1420, 0, 0, 0,
	246, 0, 0, 0, 0, 1634, 1634, 0, 0, 247,
	0, 0, 0, 200, 0, 288, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4377, 0, 0, 0, 0, 2663, 203, 0,
	745, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 1963, 1964, 1965, 0, 0,
	0, 0, 0, 117, 1945, 117, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 1634, 1634, 1634, 1634,
	1634, 1634, 1634, 1634, 1634, 1634, 1634, 1634, 1634, 1634,
	1634, 1634, 1634, 1634, 1634, 0, 1634, 1967, 1969, 1169,
	117, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 117, 0,
	0, 0, 0, 1954, 1955, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 117, 0, 4441, 4442, 0, 0,
	0, 0, 0, 0, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982, 1983,
	4213, 0, 0, 4215, 4216, 0, 0, 0, 0, 0,
	3752, 0, 0, 0, 1974, 1968, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 288, 0, 0, 0, 0,
	117, 0, 0, 1987, 0, 0, 0, 0, 0, 3180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1993, 0, 0, 0, 2135, 0, 288, 0, 0, 1939,
	761, 761, 1425, 1973, 0, 0, 0, 1990, 0, 0,
	1959, 0, 0, 0, 0, 288, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 288, 3285, 0, 0,
	3285, 2141, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 3858, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 2505, 0, 1966, 0, 0, 0,
	0, 0, 0, 1148, 0, 0, 0, 0, 3082, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 3180, 1961,
	0, 978, 3082, 0, 2007, 0, 0, 1962, 1963, 1964,
	1965, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 2013, 0, 0, 0, 2019, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 2135, 0, 0,
	0, 0, 0, 0, 0, 0, 4649, 0, 4651, 4652,
	4653, 0, 4655, 0, 0, 0, 0, 0, 0, 0,
	1978, 1992, 0, 1988, 0, 0, 0, 0, 0, 0,
	1967, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 1614, 0, 1984, 0, 1985,
	0, 0, 0, 0, 0, 0, 1954, 1955, 0, 1973,
	3518, 3519, 0, 3536, 3537, 3538, 0, 0, 0, 0,
	0, 0, 0, 4397, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 1973, 0, 4704, 0, 0, 2107, 1973, 2110,
	0, 117, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942,
	1943, 1944, 1946, 1947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 1986, 3533,
	0, 0, 1655, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 1420, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1425, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 1425, 0, 288, 1425,
	1973, 0, 0, 0, 0, 1973, 0, 0, 0, 79,
	3082, 3082, 0, 3678, 0, 0, 3752, 3082, 0, 1973,
	0, 0, 0, 0, 1973, 4508, 84, 4508, 1655, 1966,
	0, 0, 0, 0, 0, 0, 3524, 0, 0, 3082,
	0, 2141, 4806, 0, 0, 3678, 0, 1655, 1655, 288,
	2135, 0, 1961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2135, 0, 288, 2135, 93, 288, 0,
	0, 3752, 0, 0, 0, 0, 0, 0, 1937, 1938,
	1979, 0, 0, 0, 1981, 1982, 1983, 0, 0, 0,
	1973, 0, 3082, 0, 3082, 288, 1973, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 3540, 0, 972, 0,
	1940, 0, 0, 0, 1992, 0, 0, 0, 0, 0,
	1987, 51, 0, 115, 0, 0, 0, 0, 0, 99,
	112, 0, 0, 0, 3082, 3082, 0, 1993, 0, 0,
	3285, 3285, 0, 0, 0, 0, 1939, 3678, 3534, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 288,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 2876, 2877, 2878, 2879,
	2872, 2873, 2874, 2875, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950, 1948,
	1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0, 0,
	0, 0, 3493, 0, 0, 0, 3494, 0, 0, 1990,
	0, 0, 0, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
	1973, 0, 0, 0, 1962, 1963, 1964, 1965, 0, 0,
	0, 0, 0, 1973, 1945, 0, 0, 0, 0, 0,
	2852, 2853, 2854, 2855, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2864, 2865, 2866, 2867, 2860, 2861,
	2862, 2863, 2868, 2869, 2870, 2871, 0, 1978, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 1967, 1969, 0,
	0, 3535, 2905, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2505, 0, 1169, 1973, 1169, 0, 0,
	0, 0, 1973, 1954, 1955, 0, 0, 0, 3082, 2141,
	0, 2141, 0, 0, 3858, 0, 0, 104, 0, 0,
	0, 1976, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4752, 0, 4752, 1960, 2848, 2849, 2850,
	2851, 2856, 2857, 2858, 2859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3752, 1655, 0, 1655, 1415, 199, 107, 1634, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 2135, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 973, 0, 1990, 0, 0,
	159, 0, 0, 3858, 0, 0, 4508, 0, 0, 1655,
	3530, 3531, 3532, 3082, 0, 0, 0, 3529, 3527, 3528,
	3520, 3521, 3522, 3523, 3525, 3526, 0, 0, 0, 0,
	0, 0, 0, 4843, 0, 0, 0, 0, 254, 1634,
	0, 0, 0, 0, 0, 1655, 0, 0, 0, 0,
	0, 1148, 0, 0, 1148, 1148, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 288, 288, 0, 0, 0, 0, 1961,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 4017, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 1979, 0, 0,
	2724, 0, 0, 247, 0, 0, 0, 200, 0, 0,
	0, 1937, 1938, 0, 0, 0, 0, 0, 3752, 4899,
	1169, 0, 0, 1937, 1938, 0, 3858, 0, 0, 0,
	2013, 1992, 1755, 0, 2013, 1968, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 4508, 1968, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 4508, 0, 0, 0, 0, 0, 2093, 0, 0,
	1993, 0, 0, 0, 0, 0, 0, 0, 0, 1939,
	0, 0, 1993, 0, 0, 0, 0, 288, 0, 0,
	1959, 1939, 0, 0, 0, 0, 0, 0, 0, 1956,
	761, 0, 1959, 0, 0, 0, 0, 1977, 1334, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 4508, 4508,
	1634, 1980, 1957, 1953, 2110, 1950, 1948, 1949, 1941, 1942,
	1943, 1944, 1946, 1947, 0, 0, 0, 0, 0, 4508,
	0, 288, 4508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2141, 0, 0, 3978, 0, 0, 0, 0,
	0, 0, 1655, 0, 1655, 117, 0, 3973, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 1962, 1963, 1964,
	1965, 0, 0, 0, 0, 0, 0, 1945, 0, 1962,
	1963, 1964, 1965, 1425, 0, 0, 0, 1634, 0, 1945,
	0, 0, 0, 0, 0, 0, 0, 5026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4752, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 1969, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 3082, 1967, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 1955, 0, 0,
	0, 0, 1174, 0, 0, 0, 1973, 0, 1954, 1955,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 4017, 0,
	0, 1960, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 1973, 1973, 1973, 1973, 1973,
	1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
	1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
	1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
	1990, 0, 0, 0, 0, 1973, 0, 1973, 1973, 1973,
	1973, 0, 1990, 0, 0, 0, 0, 0, 0, 2905,
	2905, 0, 0, 0, 0, 3858, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 1966,
	0, 117, 0, 117, 0, 3082, 0, 0, 0, 0,
	0, 1966, 0, 0, 0, 4508, 0, 4508, 0, 0,
	1655, 78, 1961, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 117, 0, 1973, 84, 0, 1973, 117,
	0, 1973, 0, 0, 1973, 0, 0, 0, 0, 0,
	1973, 1973, 1973, 1973, 1973, 1973, 1973, 0, 0, 0,
	0, 3082, 0, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 93, 3180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 117, 972, 3539,
	0, 2905, 2905, 2905, 2905, 0, 0, 1973, 0, 1973,
	0, 51, 0, 115, 1973, 0, 0, 0, 0, 99,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 1953, 0, 1950, 1948,
	1949, 1941, 1942, 1943, 1944, 1946, 1947, 1957, 1953, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1937, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1968, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 2724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2013, 0,
	0, 0, 1993, 0, 0, 0, 0, 0, 0, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	1963, 1964, 1965, 0, 0, 0, 0, 0, 0, 1945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1434, 0, 0, 0, 0, 0, 199, 107, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 1174, 1174,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 0,
	0, 0, 1967, 1969, 0, 973, 0, 0, 0, 0,
	159, 0, 1973, 1973, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 1955,
	0, 1334, 1604, 0, 0, 0, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 78, 1334, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 79, 0, 0, 0, 1657, 0,
	1663, 0, 1669, 0, 0, 164, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982,
	1983, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 93, 247, 0, 1974, 1968, 200, 0, 0,
	0, 0, 0, 0, 1940, 0, 0, 1973, 0, 0,
	0, 1761, 1990, 1766, 1987, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 1780, 0, 1785,
	0, 1993, 0, 972, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 1959, 0, 0, 99, 112, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 0, 1973, 1973, 0, 2905,
	2905, 1966, 0, 1973, 117, 117, 0, 117, 0, 0,
	0, 0, 0, 3539, 3539, 0, 0, 1973, 1973, 0,
	0, 0, 0, 0, 1961, 0, 0, 1973, 1851, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 117, 117,
	0, 117, 0, 0, 0, 0, 0, 0, 1962, 1963,
	1964, 1965, 0, 0, 0, 0, 0, 0, 1945, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 2905,
	2905, 2905, 2905, 2905, 2905, 2905, 2905, 2905, 2905, 2905,
	2905, 2905, 2905, 2905, 2905, 2905, 2905, 2905, 2905, 0,
	2905, 3539, 3539, 3539, 3539, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 1967, 1969, 0, 0, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 0, 0, 0, 1973, 0, 1984, 0,
	1985, 0, 0, 0, 0, 0, 0, 1954, 1955, 0,
	0, 0, 0, 0, 0, 0, 3210, 0, 2014, 0,
	0, 0, 0, 0, 2027, 1976, 0, 1957, 1953, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	1960, 0, 0, 1334, 0, 0, 1169, 0, 0, 0,
	3200, 3198, 104, 0, 0, 0, 0, 3202, 3204, 3194,
	117, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1975, 199, 107, 0, 170, 111, 0, 0, 0, 0,
	0, 1990, 0, 78, 0, 48, 47, 0, 0, 1973,
	2087, 2087, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 252, 0, 0, 165, 0, 0, 0, 0,
	973, 0, 0, 0, 0, 159, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 50, 0, 167, 0,
	1966, 0, 0, 0, 0, 1973, 1973, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 49, 0, 93,
	0, 0, 0, 1961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 52, 70, 0, 0,
	0, 1979, 0, 0, 0, 53, 204, 0, 0, 0,
	59, 0, 0, 0, 253, 168, 3196, 0, 0, 0,
	0, 0, 0, 51, 0, 115, 0, 3212, 0, 246,
	0, 99, 112, 0, 0, 1992, 0, 1223, 247, 71,
	0, 0, 200, 0, 0, 0, 1174, 0, 0, 0,
	0, 3211, 3201, 3199, 3203, 3205, 3195, 3197, 3213, 3215,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 3207,
	3209, 3217, 0, 0, 0, 54, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 287, 287, 287, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	1334, 1334, 0, 0, 0, 3221, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 902, 0, 0,
	0, 0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950,
	1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0,
	0, 0, 0, 2782, 0, 902, 0, 2783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	1973, 0, 0, 1973, 3539, 3539, 1973, 0, 0, 0,
	1973, 0, 72, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 1973, 1973, 1973, 1973, 0, 0,
	0, 0, 0, 1973, 3214, 1973, 0, 0, 3539, 3539,
	3539, 3539, 3539, 3539, 3539, 3539, 3539, 3539, 3539, 3539,
	3539, 3539, 3539, 3539, 3539, 3539, 3539, 3539, 0, 104,
	0, 3539, 0, 0, 1973, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 55, 0, 0,
	0, 0, 0, 0, 0, 1973, 868, 0, 0, 0,
	0, 0, 0, 0, 58, 0, 0, 0, 0, 61,
	0, 0, 1347, 0, 0, 3222, 0, 0, 0, 73,
	0, 0, 879, 0, 3206, 3208, 3216, 60, 199, 107,
	0, 0, 111, 0, 0, 0, 56, 0, 0, 0,
	169, 0, 881, 0, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 252,
	0, 0, 0, 0, 0, 880, 0, 64, 0, 0,
	0, 0, 159, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 117, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 873, 0,
	0, 0, 0, 0, 0, 889, 0, 0, 0, 0,
	0, 1973, 1973, 0, 1334, 0, 0, 164, 0, 878,
	0, 0, 0, 0, 0, 0, 0, 0, 2568, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 2597, 0, 0, 200,
	0, 0, 877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 807,
	0, 0, 0, 0, 203, 0, 0, 3, 0, 0,
	0, 0, 0, 2638, 0, 2642, 0, 0, 0, 0,
	0, 0, 2656, 0, 0, 0, 875, 1973, 0, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 0, 2706, 0, 2708, 2709,
	2710, 2711, 0, 0, 1973, 1973, 0, 0, 0, 1973,
	1973, 0, 0, 1973, 1973, 888, 0, 0, 1973, 0,
	0, 0, 1973, 0, 2735, 0, 0, 1973, 1937, 1938,
	0, 0, 0, 0, 0, 117, 2014, 0, 0, 0,
	2786, 1334, 2905, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 1968, 0, 0, 0, 2816, 2819, 2822, 2825,
	1940, 0, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1993, 0, 0,
	2897, 0, 2908, 2910, 2915, 0, 1939, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 2905, 0, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 806,
	0, 0, 3433, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 884, 117, 0, 0, 0,
	0, 872, 0, 0, 1962, 1963, 1964, 1965, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 882, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 1967, 1969, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	876, 287, 0, 287, 287, 0, 0, 287, 0, 0,
	0, 0, 0, 1954, 1955, 808, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 871, 1259, 0, 0,
	1973, 1973, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 1973, 3539, 2905, 0, 1960, 0, 0, 0,
	1973, 886, 887, 1973, 883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 287,
	287, 0, 0, 287, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3539, 2905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 902, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	1973, 2905, 0, 0, 0, 0, 0, 1990, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 287, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3243, 3244, 0, 3246, 0,
	0, 0, 0, 287, 287, 0, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 1937, 1938, 0, 1970,
	1971, 1972, 1981, 1982, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3539, 0, 1974,
	1968, 0, 0, 0, 0, 0, 0, 0, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 1973, 3539, 0, 0,
	1973, 1992, 0, 0, 0, 1993, 0, 0, 0, 0,
	0, 0, 1351, 0, 1939, 0, 0, 0, 0, 3539,
	0, 0, 287, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 3368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2724, 0, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942,
	1943, 1944, 1946, 1947, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 1963, 1964, 1965, 0, 0, 0, 0,
	0, 0, 1945, 1994, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 1967, 1969, 0, 0, 3427,
	3428, 0, 0, 0, 0, 3434, 0, 0, 0, 0,
	0, 1973, 1984, 0, 1985, 0, 0, 0, 0, 0,
	0, 1954, 1955, 117, 3448, 3449, 0, 0, 0, 0,
	2786, 0, 0, 0, 0, 0, 1973, 0, 0, 1976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982,
	1983, 0, 0, 0, 0, 3458, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 1974, 1968, 0, 0, 0,
	0, 3472, 0, 2109, 1940, 1347, 1937, 1938, 0, 287,
	0, 0, 0, 1986, 1987, 0, 0, 0, 3484, 0,
	0, 0, 0, 0, 0, 287, 2109, 287, 0, 0,
	1968, 1993, 0, 0, 1975, 902, 0, 0, 1940, 0,
	1939, 0, 902, 0, 0, 1990, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 1993, 0, 0, 0, 0,
	287, 0, 0, 0, 1939, 0, 0, 287, 1973, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2915,
	2915, 2915, 0, 0, 0, 0, 0, 1961, 117, 0,
	0, 0, 0, 0, 117, 0, 2087, 0, 1962, 1963,
	1964, 1965, 0, 0, 3577, 0, 0, 0, 1945, 0,
	3426, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 1963, 1964, 1965, 0, 0, 0, 0,
	0, 0, 1945, 0, 0, 0, 0, 0, 0, 1992,
	0, 1978, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 1967, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	1985, 0, 0, 0, 0, 0, 0, 1954, 1955, 0,
	0, 0, 0, 0, 0, 1967, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	1960, 1954, 1955, 0, 1174, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1951, 1952, 1958, 1980,
	1957, 1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944,
	1946, 1947, 0, 0, 1960, 0, 0, 0, 0, 792,
	0, 4403, 0, 0, 0, 3710, 0, 0, 0, 1986,
	0, 287, 0, 0, 0, 902, 0, 0, 0, 0,
	775, 0, 0, 0, 0, 776, 0, 0, 0, 0,
	1975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 3766, 3767, 0, 0, 0, 777, 0, 0, 1351,
	0, 0, 287, 0, 0, 1990, 287, 778, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 779,
	1966, 0, 0, 0, 287, 0, 287, 0, 0, 1351,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 798, 0, 1961, 0, 0, 1340, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 1351, 0, 1961, 287, 0,
	0, 287, 1351, 0, 0, 0, 0, 781, 0, 0,
	0, 0, 0, 0, 283, 283, 741, 0, 1351, 0,
	0, 0, 0, 287, 0, 1992, 0, 0, 0, 0,
	782, 0, 0, 0, 0, 783, 902, 287, 0, 287,
	0, 287, 0, 287, 0, 287, 0, 0, 0, 0,
	0, 0, 807, 0, 0, 0, 0, 0, 0, 1992,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 287, 287, 287, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950,
	1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3986, 794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944,
	1946, 1947, 0, 0, 0, 0, 0, 2656, 0, 0,
	0, 0, 0, 3970, 3971, 0, 0, 3974, 0, 0,
	0, 3977, 0, 0, 0, 0, 0, 0, 0, 0,
	3981, 0, 0, 0, 0, 0, 0, 0, 0, 3988,
	0, 0, 0, 0, 3577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 804, 0, 785, 0, 4001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4024,
	4025, 0, 4026, 4027, 4028, 0, 0, 805, 0, 786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4034, 0, 0, 0, 4036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 806, 0, 0, 0, 0, 4065, 4066, 0,
	787, 0, 0, 0, 1347, 802, 803, 0, 800, 0,
	0, 0, 0, 0, 795, 4077, 0, 788, 0, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4086, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 789, 1351, 796, 1351, 0, 0, 0, 0,
	0, 0, 0, 790, 0, 0, 0, 0, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 791, 0,
	0, 0, 0, 799, 0, 0, 0, 0, 0, 0,
	0, 2173, 0, 0, 287, 0, 0, 0, 808, 0,
	0, 0, 0, 4149, 0, 0, 0, 0, 0, 793,
	287, 0, 0, 287, 0, 0, 0, 287, 0, 287,
	0, 0, 0, 0, 0, 0, 287, 287, 0, 0,
	4167, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4198, 0, 0, 0, 0, 0,
	0, 0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 1974, 1968, 0, 0, 0,
	0, 0, 4222, 4223, 1940, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1993, 287, 0, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	902, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 4328, 0, 0, 0, 0, 0, 0, 1962, 1963,
	1964, 1965, 0, 0, 0, 0, 0, 0, 1945, 0,
	0, 287, 0, 902, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 1351, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 1967, 1969, 0, 0, 0, 0, 0, 0, 0,
	4375, 4376, 0, 0, 0, 287, 4380, 4381, 1984, 0,
	1985, 4384, 4385, 0, 0, 0, 0, 1954, 1955, 4389,
	0, 0, 0, 0, 0, 287, 0, 287, 0, 0,
	4393, 0, 0, 0, 0, 1976, 0, 0, 287, 0,
	1401, 0, 1401, 1401, 0, 0, 4398, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 1351, 0, 1351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 1351, 0, 0, 0, 0, 0,
	0, 0, 287, 287, 287, 287, 0, 1351, 0, 1986,
	0, 0, 287, 0, 0, 0, 0, 287, 0, 1351,
	0, 0, 1351, 1351, 1351, 0, 1502, 0, 0, 0,
	1975, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1961, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 2173, 2173, 1351, 0, 0,
	0, 0, 0, 4552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950,
	1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 4671, 4672, 4673, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 1347, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 2656, 0,
	0, 4682, 4683, 1347, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4691,
	4694, 0, 0, 1044, 0, 1096, 0, 0, 0, 0,
	0, 0, 0, 2109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	1052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1067, 0, 1050,
	1049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	287, 287, 1069, 0, 0, 0, 0, 0, 1051, 0,
	0, 0, 0, 1054, 0, 4753, 0, 0, 1107, 0,
	1079, 0, 0, 0, 4761, 0, 0, 0, 1064, 1065,
	0, 0, 0, 0, 0, 0, 287, 1084, 0, 4769,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1097, 1056, 0, 4780, 0,
	0, 4782, 1057, 1351, 0, 0, 0, 0, 2125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 287,
	0, 0, 287, 0, 2136, 1058, 1612, 0, 0, 2109,
	0, 0, 0, 0, 1094, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1095, 1401,
	0, 0, 0, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 1060, 0, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1061, 1062, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1070, 1068, 0, 0, 0, 0, 287, 0,
	1063, 0, 0, 0, 1080, 0, 0, 1102, 1101, 0,
	0, 0, 0, 0, 0, 0, 902, 0, 0, 0,
	0, 0, 1104, 1093, 0, 0, 287, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4907, 0, 792, 0, 4911, 0, 287,
	0, 0, 0, 0, 0, 1098, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	0, 776, 0, 0, 0, 0, 1351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 1351, 0, 0, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 1351,
	0, 0, 777, 0, 0, 1055, 0, 0, 1106, 0,
	0, 0, 0, 778, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1053, 4981, 0, 779, 0, 1088, 1089, 0,
	0, 287, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2656, 0, 0, 1099, 1086, 780, 0,
	0, 287, 4694, 0, 0, 1105, 1081, 0, 0, 1073,
	1071, 0, 0, 1076, 0, 0, 0, 0, 0, 1077,
	0, 0, 1046, 781, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2447, 0, 0, 0, 2454, 782, 0, 1047, 0,
	0, 783, 0, 0, 1174, 0, 0, 2467, 0, 1092,
	0, 1090, 0, 1078, 0, 0, 0, 0, 807, 1075,
	0, 0, 0, 2479, 0, 2479, 0, 0, 0, 0,
	1103, 2486, 0, 0, 0, 0, 0, 0, 1082, 0,
	1083, 0, 0, 0, 0, 797, 0, 0, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5102, 5102, 5102, 0, 2454, 0, 0,
	2515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2536, 0, 794, 0, 1347, 1347, 0, 0,
	5127, 0, 0, 0, 0, 0, 2552, 0, 2554, 0,
	2556, 0, 2558, 0, 2559, 0, 0, 0, 1236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5102, 0, 2588,
	2589, 2590, 0, 902, 0, 0, 289, 289, 289, 0,
	0, 0, 0, 785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 805, 0, 786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 806, 0,
	0, 0, 0, 0, 0, 0, 787, 0, 0, 0,
	0, 802, 803, 0, 800, 0, 0, 1351, 1351, 0,
	795, 0, 0, 788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 0, 0, 0, 5102, 5259, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 0, 0, 1351, 0, 789, 0,
	796, 0, 0, 0, 0, 0, 0, 287, 0, 790,
	0, 0, 0, 0, 0, 0, 0, 0, 2173, 0,
	0, 0, 1351, 0, 791, 0, 287, 0, 0, 799,
	0, 0, 0, 0, 0, 1937, 1938, 287, 1970, 1971,
	1972, 1981, 1982, 1983, 808, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 793, 0, 0, 1974, 1968,
	287, 0, 0, 0, 0, 287, 0, 1940, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 2974, 0, 0, 0, 0, 0, 0,
	1347, 0, 0, 0, 1993, 0, 0, 0, 2173, 0,
	0, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3025,
	0, 0, 1401, 0, 0, 0, 1401, 0, 1401, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2467, 0, 0, 0, 0,
	0, 1962, 1963, 1964, 1965, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 1978, 1351, 0, 1988, 0, 1351,
	0, 0, 0, 0, 1967, 1969, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	1351, 1984, 0, 1985, 0, 1347, 0, 0, 0, 0,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 2109,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 1612,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 2454, 2454, 1351, 0, 1351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2109, 0, 2109, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 1975, 0, 0, 0, 0, 0, 1351,
	0, 0, 1351, 0, 1990, 0, 287, 0, 0, 287,
	3263, 0, 0, 0, 0, 0, 0, 0, 0, 2467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2173, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3335, 0, 0, 0, 0, 0,
	1351, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 3347, 0, 3350, 1351, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 2173, 2173, 0,
	287, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2173, 2173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3386, 1612, 3388, 1612, 0, 0, 0, 0, 2173,
	0, 3395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 289, 289, 1351, 1351, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 3424, 0, 0, 293, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3495, 0, 0, 0, 0, 0, 0, 0, 289, 1511,
	289, 289, 0, 0, 289, 289, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 289, 894, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 289,
	922, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 287, 0, 0,
	0, 924, 0, 1511, 289, 289, 925, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 2109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 1351, 0, 1351, 0, 0, 926, 1351, 943,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 927, 0, 0, 0, 1511,
	928, 2173, 0, 0, 0, 0, 0, 0, 1228, 0,
	0, 0, 0, 0, 287, 287, 0, 0, 0, 0,
	0, 0, 952, 0, 0, 0, 0, 0, 0, 929,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 1351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 923, 0,
	1351, 0, 0, 0, 0, 1351, 1351, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 930, 0, 0, 3625, 0, 931, 2109, 1351, 0,
	1351, 0, 0, 0, 0, 1351, 0, 1351, 954, 0,
	0, 0, 2109, 807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1401, 0, 1351, 287, 1612,
	1612, 0, 0, 0, 0, 0, 0, 0, 2173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2109,
	2109, 0, 0, 0, 0, 3674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 953,
	2109, 0, 287, 2109, 0, 0, 0, 0, 0, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3729, 3731, 0,
	0, 2467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 1351, 0, 0, 0, 1351,
	1351, 0, 1351, 0, 0, 0, 0, 932, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 287, 934, 0,
	1351, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1351, 1511, 0, 0, 0, 0, 289, 289, 289, 0,
	935, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1351, 287, 1351, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 806, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 3851, 921, 0, 2454, 945,
	0, 0, 0, 1351, 0, 0, 0, 0, 936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1351, 0, 0, 0,
	0, 0, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 937, 0, 1511, 0, 938, 957, 0,
	956, 0, 0, 0, 939, 0, 0, 0, 1351, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	958, 0, 955, 0, 0, 0, 0, 0, 0, 808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 1351, 0, 0, 0, 0, 0,
	3954, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2109, 0, 2109, 0,
	1351, 1351, 1351, 1351, 1351, 1351, 1351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3968, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2173, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 1511, 1511, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 1351, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 289, 1351, 0, 0, 289, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 289, 0, 2173,
	1630, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 1511, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 1511, 0, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 1511, 289,
	0, 0, 289, 1630, 0, 0, 1351, 1351, 1351, 0,
	1511, 0, 0, 1511, 1511, 1511, 0, 0, 0, 1630,
	0, 0, 0, 0, 289, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 289, 0,
	289, 0, 289, 0, 289, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 289, 289, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2467, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 1351, 0, 0, 2467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2467, 0, 1631, 0, 0, 4310,
	0, 1511, 0, 1631, 0, 0, 0, 0, 0, 1351,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1351, 0, 0, 1351, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 1937, 1938, 1351, 1970, 1971,
	1972, 1981, 1982, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4356, 0, 0, 0, 0, 1974, 1968,
	0, 0, 1511, 0, 0, 0, 0, 1940, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 1511, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 0, 0,
	0, 0, 0, 1939, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 1351, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 894, 0, 0, 0,
	0, 0, 0, 894, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 289, 0, 0, 0, 289, 0,
	289, 0, 0, 0, 0, 0, 0, 289, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 1962, 1963, 1964, 1965, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 1508, 0, 1988, 0, 0,
	0, 0, 0, 0, 1967, 1969, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 1984, 0, 1985, 0, 0, 0, 0, 0, 0,
	1954, 1955, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 4528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 2467, 0, 0, 0, 0,
	0, 289, 1511, 0, 0, 0, 1351, 0, 1351, 0,
	0, 0, 0, 289, 289, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 289, 0, 0, 0, 0, 2467,
	0, 289, 0, 0, 1630, 1630, 0, 0, 0, 4628,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 1511, 1966, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 1511,
	1511, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 289, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 1630, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 1630, 1630, 0, 0, 0, 0,
	0, 0, 0, 289, 289, 289, 289, 0, 1630, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 289, 0,
	1630, 0, 0, 1630, 1630, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 894, 0, 289,
	0, 0, 0, 4738, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3492, 0, 0, 0, 1631, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1937, 1938, 0,
	1970, 1971, 1972, 1981, 1982, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1974, 1968, 1631, 0, 1631, 0, 1631, 0, 0, 1940,
	0, 0, 0, 4868, 1612, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1631, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 0, 1631, 0,
	0, 1508, 0, 0, 0, 1939, 0, 0, 0, 0,
	1631, 0, 0, 1631, 1631, 1631, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 1962, 1963, 1964, 1965, 0, 0, 0,
	0, 0, 1511, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 4987, 0, 1511, 0, 0, 1978, 0, 0, 1988,
	0, 0, 0, 0, 0, 0, 1967, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 289, 289, 1984, 0, 1985, 0, 0, 0, 0,
	0, 0, 1954, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1976, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5040, 0, 0, 0,
	0, 1509, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	289, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 5084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	1511, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 1511, 0, 1511, 0, 1961, 0,
	1511, 0, 0, 0, 0, 0, 0, 289, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	289, 1511, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 894, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1630, 0, 1511, 0, 1511, 0, 1630, 0,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 1630,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	1511, 0, 289, 1511, 289, 0, 0, 1951, 1952, 1958,
	1980, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942, 1943,
	1944, 1946, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1937, 1938, 0, 1970, 1971,
	1972, 1981, 1982, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 1968,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 0, 0,
	1631, 0, 1631, 1939, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 1631,
	1631, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1962, 1963, 1964, 1965, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 1967, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 1985, 0, 0, 0, 0, 0, 1508,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 1508, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 1511, 0, 1511, 0, 1508, 0, 1511,
	0, 0, 1511, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 289, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 1990, 0, 289, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 0, 0, 0, 0, 1511, 1511, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 1511,
	0, 1511, 0, 0, 0, 289, 1511, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 1937, 1938, 1509,
	1970, 1971, 1972, 1981, 1982, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	1974, 1968, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	1630, 0, 0, 0, 0, 0, 1993, 0, 0, 0,
	0, 0, 0, 0, 1630, 1939, 1630, 0, 0, 0,
	1508, 0, 0, 1509, 0, 0, 1959, 894, 1630, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 1630, 0, 0, 1977, 0, 0, 0, 0, 0,
	1511, 1511, 0, 1511, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 1511, 1511, 0, 0, 0, 0, 0, 0, 0,
	3490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 1630, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 1630, 0, 1630, 0, 0, 0,
	0, 0, 0, 1962, 1963, 1964, 1965, 0, 0, 0,
	0, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 1508, 1511, 0, 1978, 289, 0, 1988,
	289, 0, 0, 0, 0, 0, 1967, 1969, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 1984, 0, 1985, 0, 289, 0, 0,
	0, 0, 1954, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1976, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	1511, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	1631, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 1631, 0, 1508, 0,
	1509, 289, 0, 0, 0, 0, 0, 0, 1631, 0,
	1511, 289, 0, 0, 0, 1511, 0, 0, 0, 0,
	0, 1631, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 1511, 1961, 1511,
	1509, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 894, 0, 1979, 0, 0, 1937,
	1938, 0, 1970, 1971, 1972, 1981, 1982, 1983, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 0, 0, 0,
	0, 0, 1974, 1968, 0, 289, 0, 0, 0, 0,
	1992, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 1993, 0,
	0, 0, 0, 0, 0, 0, 0, 1939, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 1977, 1511, 1511, 1511,
	0, 0, 0, 0, 0, 0, 0, 1951, 1952, 1958,
	1980, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942, 1943,
	1944, 1946, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 1630, 0, 1630, 0, 0, 0, 1630,
	0, 0, 1630, 0, 0, 0, 0, 0, 1511, 0,
	0, 1511, 0, 0, 0, 1962, 1963, 1964, 1965, 0,
	0, 0, 0, 0, 0, 1945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 289, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	0, 1988, 0, 0, 0, 0, 0, 1630, 1967, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 1985, 0, 0,
	0, 1630, 0, 0, 1954, 1955, 1630, 1630, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 0, 0, 0, 0, 1630,
	0, 1630, 0, 0, 0, 0, 1630, 1960, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 1511, 0,
	0, 0, 1631, 1631, 0, 1631, 0, 0, 1511, 1631,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 1508, 0, 1508, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 1630, 1630, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 1979, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 1631, 1631, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 0, 0, 0, 0, 0, 289, 1631,
	0, 1631, 0, 0, 0, 0, 1631, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1951,
	1952, 1958, 1980, 1957, 1953, 0, 1950, 1948, 1949, 1941,
	1942, 1943, 1944, 1946, 1947, 0, 0, 0, 0, 1630,
	1630, 0, 0, 0, 2783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 1509, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 0, 0,
	0, 1631, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 1937, 1938, 0,
	1970, 1971, 1972, 1981, 1982, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	1974, 1968, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 1508, 0, 1630,
	0, 0, 0, 0, 1509, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 1963, 1964, 1965, 0, 0, 0,
	1509, 0, 0, 1945, 0, 1631, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 1630, 1630,
	0, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 0, 1988,
	0, 0, 0, 0, 1509, 0, 1967, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 1985, 0, 0, 1508, 0,
	0, 1630, 1954, 1955, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1976, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 1631, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1951, 1952, 1958,
	1980, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942, 1943,
	1944, 1946, 1947, 0, 0, 0, 0, 0, 5027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 1512, 305, 306, 1513, 1514, 1515, 0, 1516,
	687, 1517, 1518, 1519, 307, 1520, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 1521, 692, 319, 320, 321, 322, 323,
	324, 1522, 1523, 0, 325, 693, 694, 695, 1524, 326,
	327, 696, 1525, 1592, 1526, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 1527, 337, 338, 339, 336, 340,
	1528, 341, 1631, 342, 343, 344, 345, 346, 347, 1529,
	348, 349, 350, 1291, 351, 352, 353, 1530, 1531, 1533,
	1532, 1534, 1535, 1536, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 1537, 364, 360, 362, 1538, 365,
	363, 366, 1539, 367, 368, 369, 1540, 1541, 370, 371,
	372, 1542, 373, 374, 375, 1543, 376, 377, 378, 1544,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 1545, 294, 1546,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 1547, 397, 398, 399, 1548, 400, 401, 1549,
	1292, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 1550, 414, 705, 1551, 706,
	415, 1552, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 1294, 423, 424, 1553, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 1554,
	1293, 512, 433, 710, 711, 1555, 712, 1556, 434, 435,
	1295, 713, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1557, 446, 448,
	447, 1558, 449, 714, 1298, 450, 451, 1299, 1559, 452,
	453, 454, 455, 456, 457, 460, 1560, 1561, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 1562,
	296, 1302, 506, 507, 508, 509, 1563, 715, 510, 716,
	513, 514, 1564, 0, 515, 0, 516, 1565, 1566, 518,
	519, 520, 1567, 1568, 521, 522, 717, 1303, 523, 1304,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 1569, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 1570,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 1571, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 1572, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 1573,
	605, 606, 604, 607, 608, 609, 1574, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 1575, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 1576, 640, 641, 0, 636, 627,
	1577, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	1578, 650, 728, 729, 730, 731, 1579, 660, 1580, 651,
	652, 653, 654, 732, 655, 733, 1581, 656, 657, 658,
	659, 0, 661, 662, 1582, 1583, 663, 664, 666, 668,
	669, 665, 667, 670, 1584, 671, 1585, 0, 672, 673,
	674, 734, 735, 736, 1586, 676, 675, 677, 678, 679,
	737, 680, 681, 1587, 1588, 1589, 1590, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 2952, 0, 0, 0, 0, 0, 0, 0,
	2953, 297, 298, 300, 299, 301, 302, 303, 304, 1512,
	305, 306, 1513, 1514, 1515, 0, 1516, 687, 1517, 1518,
	1519, 307, 1520, 308, 309, 1290, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	1521, 692, 319, 320, 321, 322, 323, 324, 1522, 1523,
	0, 325, 693, 694, 695, 1524, 326, 327, 696, 1525,
	1592, 1526, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 1527, 337, 338, 339, 336, 340, 1528, 341, 0,
	342, 343, 344, 345, 346, 347, 1529, 348, 349, 350,
	1291, 351, 352, 353, 1530, 1531, 1533, 1532, 1534, 1535,
	1536, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 1537, 364, 360, 362, 1538, 365, 363, 366, 1539,
	367, 368, 369, 1540, 1541, 370, 371, 372, 1542, 373,
	374, 375, 1543, 376, 377, 378, 1544, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 1545, 294, 1546, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 1547,
	397, 398, 399, 1548, 400, 401, 1549, 1292, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 1550, 414, 705, 1551, 706, 415, 1552, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1294, 423, 424, 1553, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 1554, 1293, 512, 433,
	710, 711, 1555, 712, 1556, 434, 435, 1295, 713, 1296,
	436, 437, 438, 1297, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1557, 446, 448, 447, 1558, 449,
	714, 1298, 450, 451, 1299, 1559, 452, 453, 454, 455,
	456, 457, 460, 1560, 1561, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1300, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1301, 504, 492, 1562, 296, 1302, 506,
	507, 508, 509, 1563, 715, 510, 716, 513, 514, 1564,
	0, 515, 0, 516, 1565, 1566, 518, 519, 520, 1567,
	1568, 521, 522, 717, 1303, 523, 1304, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	1569, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 1570, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 1571, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	1572, 579, 580, 581, 1305, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 1573, 605, 606, 604,
	607, 608, 609, 1574, 610, 611, 593, 594, 612, 613,
	1306, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 1575, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 1576, 640, 641, 0, 636, 627, 1577, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 1578, 650, 728,
	729, 730, 731, 1579, 660, 1580, 651, 652, 653, 654,
	732, 655, 733, 1581, 656, 657, 658, 659, 0, 661,
	662, 1582, 1583, 663, 664, 666, 668, 669, 665, 667,
	670, 1584, 671, 1585, 0, 672, 673, 674, 734, 735,
	736, 1586, 676, 675, 677, 678, 679, 737, 680, 681,
	1587, 1588, 1589, 1590, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 3995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3997, 297, 298, 300, 299,
	301, 302, 303, 304, 1512, 305, 306, 1513, 1514, 1515,
	0, 1516, 687, 1517, 1518, 1519, 307, 1520, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 1521, 692, 319, 320, 321,
	322, 323, 324, 1522, 1523, 0, 325, 693, 694, 695,
	1524, 326, 327, 696, 1525, 1592, 1526, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 1527, 337, 338, 339,
	336, 340, 1528, 341, 0, 342, 343, 344, 345, 346,
	347, 1529, 348, 349, 350, 1291, 351, 352, 353, 1530,
	1531, 1533, 1532, 1534, 1535, 1536, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 1537, 364, 360, 362,
	1538, 365, 363, 366, 1539, 367, 368, 369, 1540, 1541,
	370, 371, 372, 1542, 373, 374, 375, 1543, 376, 377,
	378, 1544, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 1545,
	294, 1546, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 1547, 397, 398, 399, 1548, 400,
	401, 1549, 1292, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 1550, 414, 705,
	1551, 706, 415, 1552, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1294, 423, 424, 1553, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 1554, 1293, 512, 433, 710, 711, 1555, 712, 1556,
	434, 435, 1295, 713, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1557,
	446, 448, 447, 1558, 449, 714, 1298, 450, 451, 1299,
	1559, 452, 453, 454, 455, 456, 457, 460, 1560, 1561,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1562, 296, 1302, 506, 507, 508, 509, 1563, 715,
	510, 716, 513, 514, 1564, 0, 515, 0, 516, 1565,
	1566, 518, 519, 520, 1567, 1568, 521, 522, 717, 1303,
	523, 1304, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 1569, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 1570, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	1571, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 1572, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 1573, 605, 606, 604, 607, 608, 609, 1574, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 1575, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 1576, 640, 641, 0,
	636, 627, 1577, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 1578, 650, 728, 729, 730, 731, 1579, 660,
	1580, 651, 652, 653, 654, 732, 655, 733, 1581, 656,
	657, 658, 659, 0, 661, 662, 1582, 1583, 663, 664,
	666, 668, 669, 665, 667, 670, 1584, 671, 1585, 0,
	672, 673, 674, 734, 735, 736, 1586, 676, 675, 677,
	678, 679, 737, 680, 681, 1587, 1588, 1589, 1590, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4433, 297, 298, 300, 299, 301,
	302, 303, 304, 1512, 305, 306, 1513, 1514, 1515, 0,
	1516, 687, 1517, 1518, 1519, 307, 1520, 308, 309, 1290,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 1521, 692, 319, 320, 321, 322,
	323, 324, 1522, 1523, 0, 325, 693, 694, 695, 1524,
	326, 327, 696, 1525, 1592, 1526, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1527, 337, 338, 339, 336,
	340, 1528, 341, 0, 342, 343, 344, 345, 346, 347,
	1529, 348, 349, 350, 1291, 351, 352, 353, 1530, 1531,
	1533, 1532, 1534, 1535, 1536, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 1537, 364, 360, 362, 1538,
	365, 363, 366, 1539, 367, 368, 369, 1540, 1541, 370,
	371, 372, 1542, 373, 374, 375, 1543, 376, 377, 378,
	1544, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 1545, 294,
	1546, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 1547, 397, 398, 399, 1548, 400, 401,
	1549, 1292, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1550, 414, 705, 1551,
	706, 415, 1552, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1294, 423, 424, 1553, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1554, 1293, 512, 433, 710, 711, 1555, 712, 1556, 434,
	435, 1295, 713, 1296, 436, 437, 438, 1297, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1557, 446,
	448, 447, 1558, 449, 714, 1298, 450, 451, 1299, 1559,
	452, 453, 454, 455, 456, 457, 460, 1560, 1561, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1300,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1301, 504, 492,
	1562, 296, 1302, 506, 507, 508, 509, 1563, 715, 510,
	716, 513, 514, 1564, 0, 515, 0, 516, 1565, 1566,
	518, 519, 520, 1567, 1568, 521, 522, 717, 1303, 523,
	1304, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1569, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	1570, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 1571,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 1572, 579, 580, 581, 1305, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	1573, 605, 606, 604, 607, 608, 609, 1574, 610, 611,
	593, 594, 612, 613, 1306, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 1575, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 1576, 640, 641, 0, 636,
	627, 1577, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 1578, 650, 728, 729, 730, 731, 1579, 660, 1580,
	651, 652, 653, 654, 732, 655, 733, 1581, 656, 657,
	658, 659, 0, 661, 662, 1582, 1583, 663, 664, 666,
	668, 669, 665, 667, 670, 1584, 671, 1585, 0, 672,
	673, 674, 734, 735, 736, 1586, 676, 675, 677, 678,
	679, 737, 680, 681, 1587, 1588, 1589, 1590, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4431, 297, 298, 300, 299, 301, 302,
	303, 304, 1512, 305, 306, 1513, 1514, 1515, 0, 1516,
	687, 1517, 1518, 1519, 307, 1520, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 1521, 692, 319, 320, 321, 322, 323,
	324, 1522, 1523, 0, 325, 693, 694, 695, 1524, 326,
	327, 696, 1525, 1592, 1526, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 1527, 337, 338, 339, 336, 340,
	1528, 341, 0, 342, 343, 344, 345, 346, 347, 1529,
	348, 349, 350, 1291, 351, 352, 353, 1530, 1531, 1533,
	1532, 1534, 1535, 1536, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 1537, 364, 360, 362, 1538, 365,
	363, 366, 1539, 367, 368, 369, 1540, 1541, 370, 371,
	372, 1542, 373, 374, 375, 1543, 376, 377, 378, 1544,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 1545, 294, 1546,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 1547, 397, 398, 399, 1548, 400, 401, 1549,
	1292, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 1550, 414, 705, 1551, 706,
	415, 1552, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 1294, 423, 424, 1553, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 1554,
	1293, 512, 433, 710, 711, 1555, 712, 1556, 434, 435,
	1295, 713, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1557, 446, 448,
	447, 1558, 449, 714, 1298, 450, 451, 1299, 1559, 452,
	453, 454, 455, 456, 457, 460, 1560, 1561, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 1562,
	296, 1302, 506, 507, 508, 509, 1563, 715, 510, 716,
	513, 514, 1564, 0, 515, 0, 516, 1565, 1566, 518,
	519, 520, 1567, 1568, 521, 522, 717, 1303, 523, 1304,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 1569, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 1570,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 1571, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 1572, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 1573,
	605, 606, 604, 607, 608, 609, 1574, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 1575, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 1576, 640, 641, 0, 636, 627,
	1577, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	1578, 650, 728, 729, 730, 731, 1579, 660, 1580, 651,
	652, 653, 654, 732, 655, 733, 1581, 656, 657, 658,
	659, 0, 661, 662, 1582, 1583, 663, 664, 666, 668,
	669, 665, 667, 670, 1584, 671, 1585, 0, 672, 673,
	674, 734, 735, 736, 1586, 676, 675, 677, 678, 679,
	737, 680, 681, 1587, 1588, 1589, 1590, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4677, 297, 298, 300,
	299, 301, 302, 303, 304, 1512, 305, 306, 1513, 1514,
	1515, 0, 1516, 687, 1517, 1518, 1519, 307, 1520, 308,
	309, 1290, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 1521, 692, 319, 320,
	321, 322, 323, 324, 1522, 1523, 0, 325, 693, 694,
	695, 1524, 326, 327, 696, 1525, 1592, 1526, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 1527, 337, 338,
	339, 336, 340, 1528, 341, 0, 342, 343, 344, 345,
	346, 347, 1529, 348, 349, 350, 1291, 351, 352, 353,
	1530, 1531, 1533, 1532, 1534, 1535, 1536, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 1537, 364, 360,
	362, 1538, 365, 363, 366, 1539, 367, 368, 369, 1540,
	1541, 370, 371, 372, 1542, 373, 374, 375, 1543, 376,
	377, 378, 1544, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	1545, 294, 1546, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 1547, 397, 398, 399, 1548,
	400, 401, 1549, 1292, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 1550, 414,
	705, 1551, 706, 415, 1552, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 1294, 423, 424, 1553,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 1554, 1293, 512, 433, 710, 711, 1555, 712,
	1556, 434, 435, 1295, 713, 1296, 436, 437, 438, 1297,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1557, 446, 448, 447, 1558, 449, 714, 1298, 450, 451,
	1299, 1559, 452, 453, 454, 455, 456, 457, 460, 1560,
	1561, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1300, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1301,
	504, 492, 1562, 296, 1302, 506, 507, 508, 509, 1563,
	715, 510, 716, 513, 514, 1564, 0, 515, 0, 516,
	1565, 1566, 518, 519, 520, 1567, 1568, 521, 522, 717,
	1303, 523, 1304, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 1569, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 1570, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 1571, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 1572, 579, 580, 581,
	1305, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 1573, 605, 606, 604, 607, 608, 609, 1574,
	610, 611, 593, 594, 612, 613, 1306, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 1575, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 1576, 640, 641,
	0, 636, 627, 1577, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 1578, 650, 728, 729, 730, 731, 1579,
	660, 1580, 651, 652, 653, 654, 732, 655, 733, 1581,
	656, 657, 658, 659, 0, 661, 662, 1582, 1583, 663,
	664, 666, 668, 669, 665, 667, 670, 1584, 671, 1585,
	0, 672, 673, 674, 734, 735, 736, 1586, 676, 675,
	677, 678, 679, 737, 680, 681, 1587, 1588, 1589, 1590,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4537,
	297, 298, 300, 299, 301, 302, 303, 304, 1512, 305,
	306, 1513, 1514, 1515, 0, 1516, 687, 1517, 1518, 1519,
	307, 1520, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 1521,
	692, 319, 320, 321, 322, 323, 324, 1522, 1523, 0,
	325, 693, 694, 695, 1524, 326, 327, 696, 1525, 1592,
	1526, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	1527, 337, 338, 339, 336, 340, 1528, 341, 0, 342,
	343, 344, 345, 346, 347, 1529, 348, 349, 350, 1291,
	351, 352, 353, 1530, 1531, 1533, 1532, 1534, 1535, 1536,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	1537, 364, 360, 362, 1538, 365, 363, 366, 1539, 367,
	368, 369, 1540, 1541, 370, 371, 372, 1542, 373, 374,
	375, 1543, 376, 377, 378, 1544, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 1545, 294, 1546, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 1547, 397,
	398, 399, 1548, 400, 401, 1549, 1292, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 1550, 414, 705, 1551, 706, 415, 1552, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1294,
	423, 424, 1553, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 1554, 1293, 512, 433, 710,
	711, 1555, 712, 1556, 434, 435, 1295, 713, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 1557, 446, 448, 447, 1558, 449, 714,
	1298, 450, 451, 1299, 1559, 452, 453, 454, 455, 456,
	457, 460, 1560, 1561, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1562, 296, 1302, 506, 507,
	508, 509, 1563, 715, 510, 716, 513, 514, 1564, 0,
	515, 0, 516, 1565, 1566, 518, 519, 520, 1567, 1568,
	521, 522, 717, 1303, 523, 1304, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 1569,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 1570, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 1571, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 1572,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 1573, 605, 606, 604, 607,
	608, 609, 1574, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	1575, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	1576, 640, 641, 0, 636, 627, 1577, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 1578, 650, 728, 729,
	730, 731, 1579, 660, 1580, 651, 652, 653, 654, 732,
	655, 733, 1581, 656, 657, 658, 659, 0, 661, 662,
	1582, 1583, 663, 664, 666, 668, 669, 665, 667, 670,
	1584, 671, 1585, 0, 672, 673, 674, 734, 735, 736,
	1586, 676, 675, 677, 678, 679, 737, 680, 681, 1587,
	1588, 1589, 1590, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4358, 297, 298, 300, 299, 301, 302, 303,
	304, 1512, 305, 306, 1513, 1514, 1515, 0, 1516, 687,
	1517, 1518, 1519, 307, 1520, 308, 309, 1290, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 1521, 692, 319, 320, 321, 322, 323, 324,
	1522, 1523, 0, 325, 693, 694, 695, 1524, 326, 327,
	696, 1525, 1592, 1526, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1527, 337, 338, 339, 336, 340, 1528,
	341, 0, 342, 343, 344, 345, 346, 347, 1529, 348,
	349, 350, 1291, 351, 352, 353, 1530, 1531, 1533, 1532,
	1534, 1535, 1536, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 1537, 364, 360, 362, 1538, 365, 363,
	366, 1539, 367, 368, 369, 1540, 1541, 370, 371, 372,
	1542, 373, 374, 375, 1543, 376, 377, 378, 1544, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 1545, 294, 1546, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 1547, 397, 398, 399, 1548, 400, 401, 1549, 1292,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 1550, 414, 705, 1551, 706, 415,
	1552, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 1294, 423, 424, 1553, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 1554, 1293,
	512, 433, 710, 711, 1555, 712, 1556, 434, 435, 1295,
	713, 1296, 436, 437, 438, 1297, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1557, 446, 448, 447,
	1558, 449, 714, 1298, 450, 451, 1299, 1559, 452, 453,
	454, 455, 456, 457, 460, 1560, 1561, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1300, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1301, 504, 492, 1562, 296,
	1302, 506, 507, 508, 509, 1563, 715, 510, 716, 513,
	514, 1564, 0, 515, 0, 516, 1565, 1566, 518, 519,
	520, 1567, 1568, 521, 522, 717, 1303, 523, 1304, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 1569, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 1570, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 1571, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 1572, 579, 580, 581, 1305, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 1573, 605,
	606, 604, 607, 608, 609, 1574, 610, 611, 593, 594,
	612, 613, 1306, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 1575, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 1576, 640, 641, 0, 636, 627, 1577,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 1578,
	650, 728, 729, 730, 731, 1579, 660, 1580, 651, 652,
	653, 654, 732, 655, 733, 1581, 656, 657, 658, 659,
	0, 661, 662, 1582, 1583, 663, 664, 666, 668, 669,
	665, 667, 670, 1584, 671, 1585, 0, 672, 673, 674,
	734, 735, 736, 1586, 676, 675, 677, 678, 679, 737,
	680, 681, 1587, 1588, 1589, 1590, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4013, 297, 298, 300, 299,
	301, 302, 303, 304, 1512, 305, 306, 1513, 1514, 1515,
	0, 1516, 687, 1517, 1518, 1519, 307, 1520, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 1521, 692, 319, 320, 321,
	322, 323, 324, 1522, 1523, 0, 325, 693, 694, 695,
	1524, 326, 327, 696, 1525, 1592, 1526, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 1527, 337, 338, 339,
	336, 340, 1528, 341, 0, 342, 343, 344, 345, 346,
	347, 1529, 348, 349, 350, 1291, 351, 352, 353, 1530,
	1531, 1533, 1532, 1534, 1535, 1536, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 1537, 364, 360, 362,
	1538, 365, 363, 366, 1539, 367, 368, 369, 1540, 1541,
	370, 371, 372, 1542, 373, 374, 375, 1543, 376, 377,
	378, 1544, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 1545,
	294, 1546, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 1547, 397, 398, 399, 1548, 400,
	401, 1549, 1292, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 1550, 414, 705,
	1551, 706, 415, 1552, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1294, 423, 424, 1553, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 1554, 1293, 512, 433, 710, 711, 1555, 712, 1556,
	434, 435, 1295, 713, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1557,
	446, 448, 447, 1558, 449, 714, 1298, 450, 451, 1299,
	1559, 452, 453, 454, 455, 456, 457, 460, 1560, 1561,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1562, 296, 1302, 506, 507, 508, 509, 1563, 715,
	510, 716, 513, 514, 1564, 0, 515, 0, 516, 1565,
	1566, 518, 519, 520, 1567, 1568, 521, 522, 717, 1303,
	523, 1304, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 1569, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 1570, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	1571, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 1572, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 1573, 605, 606, 604, 607, 608, 609, 1574, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 1575, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 1576, 640, 641, 0,
	636, 627, 1577, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 1578, 650, 728, 729, 730, 731, 1579, 660,
	1580, 651, 652, 653, 654, 732, 655, 733, 1581, 656,
	657, 658, 659, 0, 661, 662, 1582, 1583, 663, 664,
	666, 668, 669, 665, 667, 670, 1584, 671, 1585, 0,
	672, 673, 674, 734, 735, 736, 1586, 676, 675, 677,
	678, 679, 737, 680, 681, 1587, 1588, 1589, 1590, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3824, 297,
	298, 300, 299, 301, 302, 303, 304, 1512, 305, 306,
	1513, 1514, 1515, 0, 1516, 687, 1517, 1518, 1519, 307,
	1520, 308, 309, 1290, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 1521, 692,
	319, 320, 321, 322, 323, 324, 1522, 1523, 0, 325,
	693, 694, 695, 1524, 326, 327, 696, 1525, 1592, 1526,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 1527,
	337, 338, 339, 336, 340, 1528, 341, 0, 342, 343,
	344, 345, 346, 347, 1529, 348, 349, 350, 1291, 351,
	352, 353, 1530, 1531, 1533, 1532, 1534, 1535, 1536, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 1537,
	364, 360, 362, 1538, 365, 363, 366, 1539, 367, 368,
	369, 1540, 1541, 370, 371, 372, 1542, 373, 374, 375,
	1543, 376, 377, 378, 1544, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 1545, 294, 1546, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 1547, 397, 398,
	399, 1548, 400, 401, 1549, 1292, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	1550, 414, 705, 1551, 706, 415, 1552, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 1294, 423,
	424, 1553, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 1554, 1293, 512, 433, 710, 711,
	1555, 712, 1556, 434, 435, 1295, 713, 1296, 436, 437,
	438, 1297, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1557, 446, 448, 447, 1558, 449, 714, 1298,
	450, 451, 1299, 1559, 452, 453, 454, 455, 456, 457,
	460, 1560, 1561, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1300, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1301, 504, 492, 1562, 296, 1302, 506, 507, 508,
	509, 1563, 715, 510, 716, 513, 514, 1564, 0, 515,
	0, 516, 1565, 1566, 518, 519, 520, 1567, 1568, 521,
	522, 717, 1303, 523, 1304, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 1569, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 1570, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 1571, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 1572, 579,
	580, 581, 1305, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 1573, 605, 606, 604, 607, 608,
	609, 1574, 610, 611, 593, 594, 612, 613, 1306, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 1575,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 1576,
	640, 641, 0, 636, 627, 1577, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 1578, 650, 728, 729, 730,
	731, 1579, 660, 1580, 651, 652, 653, 654, 732, 655,
	733, 1581, 656, 657, 658, 659, 0, 661, 662, 1582,
	1583, 663, 664, 666, 668, 669, 665, 667, 670, 1584,
	671, 1585, 0, 672, 673, 674, 734, 735, 736, 1586,
	676, 675, 677, 678, 679, 737, 680, 681, 1587, 1588,
	1589, 1590, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2806, 297, 298, 300, 299, 301, 302, 303, 304,
	1512, 305, 306, 1513, 1514, 1515, 0, 1516, 687, 1517,
	1518, 1519, 307, 1520, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 1521, 692, 319, 320, 321, 322, 323, 324, 1522,
	1523, 0, 325, 693, 694, 695, 1524, 326, 327, 696,
	1525, 1592, 1526, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1527, 337, 338, 339, 336, 340, 1528, 341,
	0, 342, 343, 344, 345, 346, 347, 1529, 348, 349,
	350, 1291, 351, 352, 353, 1530, 1531, 1533, 1532, 1534,
	1535, 1536, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 1537, 364, 360, 362, 1538, 365, 363, 366,
	1539, 367, 368, 369, 1540, 1541, 370, 371, 372, 1542,
	373, 374, 375, 1543, 376, 377, 378, 1544, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 1545, 294, 1546, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	1547, 397, 398, 399, 1548, 400, 401, 1549, 1292, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1550, 414, 705, 1551, 706, 415, 1552,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1294, 423, 424, 1553, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1554, 1293, 512,
	433, 710, 711, 1555, 712, 1556, 434, 435, 1295, 713,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1557, 446, 448, 447, 1558,
	449, 714, 1298, 450, 451, 1299, 1559, 452, 453, 454,
	455, 456, 457, 460, 1560, 1561, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 1562, 296, 1302,
	506, 507, 508, 509, 1563, 715, 510, 716, 513, 514,
	1564, 0, 515, 0, 516, 1565, 1566, 518, 519, 520,
	1567, 1568, 521, 522, 717, 1303, 523, 1304, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1569, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 1570, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 1571, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 1572, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 1573, 605, 606,
	604, 607, 608, 609, 1574, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 1575, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 1576, 640, 641, 0, 636, 627, 1577, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 1578, 650,
	728, 729, 730, 731, 1579, 660, 1580, 651, 652, 653,
	654, 732, 655, 733, 1581, 656, 657, 658, 659, 0,
	661, 662, 1582, 1583, 663, 664, 666, 668, 669, 665,
	667, 670, 1584, 671, 1585, 0, 672, 673, 674, 734,
	735, 736, 1586, 676, 675, 677, 678, 679, 737, 680,
	681, 1587, 1588, 1589, 1590, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 1503, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2425, 297, 298, 300, 299, 301,
	302, 303, 304, 1512, 305, 306, 1513, 1514, 1515, 0,
	1516, 687, 1517, 1518, 1519, 307, 1520, 308, 309, 1290,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 1521, 692, 319, 320, 321, 322,
	323, 324, 1522, 1523, 0, 325, 693, 694, 695, 1524,
	326, 327, 696, 1525, 1592, 1526, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1527, 337, 338, 339, 336,
	340, 1528, 341, 0, 342, 343, 344, 345, 346, 347,
	1529, 348, 349, 350, 1291, 351, 352, 353, 1530, 1531,
	1533, 1532, 1534, 1535, 1536, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 1537, 364, 360, 362, 1538,
	365, 363, 366, 1539, 367, 368, 369, 1540, 1541, 370,
	371, 372, 1542, 373, 374, 375, 1543, 376, 377, 378,
	1544, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 1545, 294,
	1546, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 1547, 397, 398, 399, 1548, 400, 401,
	1549, 1292, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1550, 414, 705, 1551,
	706, 415, 1552, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1294, 423, 424, 1553, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1554, 1293, 512, 433, 710, 711, 1555, 712, 1556, 434,
	435, 1295, 713, 1296, 436, 437, 438, 1297, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1557, 446,
	448, 447, 1558, 449, 714, 1298, 450, 451, 1299, 1559,
	452, 453, 454, 455, 456, 457, 460, 1560, 1561, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1300,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1301, 504, 492,
	1562, 296, 1302, 506, 507, 508, 509, 1563, 715, 510,
	716, 513, 514, 1564, 0, 515, 0, 516, 1565, 1566,
	518, 519, 520, 1567, 1568, 521, 522, 717, 1303, 523,
	1304, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1569, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	1570, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 1571,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 1572, 579, 580, 581, 1305, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	1573, 605, 606, 604, 607, 608, 609, 1574, 610, 611,
	593, 594, 612, 613, 1306, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 1575, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 1576, 640, 641, 0, 636,
	627, 1577, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 1578, 650, 728, 729, 730, 731, 1579, 660, 1580,
	651, 652, 653, 654, 732, 655, 733, 1581, 656, 657,
	658, 659, 0, 661, 662, 1582, 1583, 663, 664, 666,
	668, 669, 665, 667, 670, 1584, 671, 1585, 0, 672,
	673, 674, 734, 735, 736, 1586, 676, 675, 677, 678,
	679, 737, 680, 681, 1587, 1588, 1589, 1590, 682, 683,
	738, 684, 685, 686, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 1512,
	305, 306, 1513, 1514, 1515, 0, 1516, 687, 1517, 1518,
	1519, 307, 1520, 308, 309, 1290, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	1521, 692, 319, 320, 321, 322, 323, 324, 1522, 1523,
	0, 325, 693, 694, 695, 1524, 326, 327, 696, 1525,
	1592, 1526, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 1527, 337, 338, 339, 336, 340, 1528, 341, 0,
	342, 343, 344, 345, 346, 347, 1529, 348, 349, 350,
	1291, 351, 352, 353, 1530, 1531, 1533, 1532, 1534, 1535,
	1536, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 1537, 364, 360, 362, 1538, 365, 363, 366, 1539,
	367, 368, 369, 1540, 1541, 370, 371, 372, 1542, 373,
	374, 375, 1543, 376, 377, 378, 1544, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 1545, 294, 1546, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 1547,
	397, 398, 399, 1548, 400, 401, 1549, 1292, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 1550, 414, 705, 1551, 706, 415, 1552, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1294, 423, 424, 1553, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 1554, 1293, 512, 433,
	710, 711, 1555, 712, 1556, 434, 435, 1295, 713, 1296,
	436, 437, 438, 1297, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1557, 446, 448, 447, 1558, 449,
	714, 1298, 450, 451, 1299, 1559, 452, 453, 454, 455,
	456, 457, 460, 1560, 1561, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1300, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1301, 504, 492, 1562, 296, 1302, 506,
	507, 508, 509, 1563, 715, 510, 716, 513, 514, 1564,
	0, 515, 0, 516, 1565, 1566, 518, 519, 520, 1567,
	1568, 521, 522, 717, 1303, 523, 1304, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	1569, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 1570, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 1571, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	1572, 579, 580, 581, 1305, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 1573, 605, 606, 604,
	607, 608, 609, 1574, 610, 611, 593, 594, 612, 613,
	1306, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 1575, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 1576, 640, 641, 0, 636, 627, 1577, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 1578, 650, 728,
	729, 730, 731, 1579, 660, 1580, 651, 652, 653, 654,
	732, 655, 733, 1581, 656, 657, 658, 659, 0, 661,
	662, 1582, 1583, 663, 664, 666, 668, 669, 665, 667,
	670, 1584, 671, 1585, 0, 672, 673, 674, 734, 735,
	736, 1586, 676, 675, 677, 678, 679, 737, 680, 681,
	1587, 1588, 1589, 1590, 682, 683, 738, 684, 685, 686,
	2781, 0, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 2778, 305, 306,
	0, 0, 0, 0, 0, 1250, 1214, 0, 0, 307,
	0, 308, 309, 1290, 310, 311, 312, 313, 314, 315,
	316, 688, 1263, 0, 317, 1270, 318, 1269, 0, 1280,
	319, 320, 321, 322, 323, 324, 1216, 1249, 1181, 325,
	1310, 1311, 695, 0, 326, 327, 1256, 0, 1237, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1291, 351,
	352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354,
	355, 356, 357, 358, 1273, 359, 361, 1267, 1266, 1186,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 2779, 0, 370, 1258, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1192, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1281,
	1282, 392, 1205, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1265, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1292, 402, 403, 404, 1278,
	1279, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1288, 0, 1215, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1251, 1252, 1255, 511, 1294, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1293, 512, 433, 1260, 1261,
	0, 1221, 0, 434, 435, 1295, 1253, 1296, 436, 437,
	438, 1297, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1289, 1298,
	450, 451, 1299, 0, 452, 453, 454, 455, 456, 457,
	460, 1244, 1243, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1300, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1301, 504, 492, 1183, 296, 1302, 506, 507, 508,
	509, 1206, 1254, 510, 1268, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1303, 523, 1304, 1283, 524, 525, 1193, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1284,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1264, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1305, 582, 583, 584, 585, 586, 1194, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1247, 610, 611, 593, 594, 612, 613, 1306, 614,
	615, 616, 617, 618, 619, 620, 1262, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1309, 630, 631, 632, 633, 1285, 637, 638, 639, 0,
	640, 641, 1180, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1274, 1275, 1276,
	1277, 0, 660, 0, 651, 652, 653, 654, 1286, 655,
	1287, 1204, 656, 657, 658, 659, 0, 661, 662, 0,
	1187, 663, 664, 666, 668, 669, 665, 667, 670, 1248,
	671, 0, 0, 672, 673, 674, 734, 1271, 1308, 2777,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1179, 0, 0, 0, 0, 0, 0, 1177,
	1178, 2780, 0, 0, 0, 0, 0, 0, 0, 1210,
	2776, 0, 1170, 1208, 1226, 1198, 1199, 1200, 1196, 1197,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1250, 1214, 0,
	0, 307, 0, 308, 309, 1290, 310, 311, 312, 313,
	314, 315, 316, 688, 1263, 0, 317, 1270, 318, 1269,
	0, 1280, 319, 320, 321, 322, 323, 324, 1216, 1249,
	1181, 325, 1310, 1311, 695, 0, 326, 327, 1256, 0,
	1237, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241,
	1245, 354, 355, 356, 357, 358, 1273, 359, 361, 1267,
	1266, 1186, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1258, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1192,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1281, 1282, 392, 1205, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1265, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1292, 402, 403,
	404, 1278, 1279, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1288, 0, 1215, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1251, 1252, 1255, 511,
	1294, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1293, 512, 433,
	1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296,
	436, 437, 438, 1297, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1289, 1298, 450, 451, 1299, 0, 452, 453, 454, 455,
	456, 457, 460, 1244, 1243, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1300, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1301, 504, 492, 1183, 296, 1302, 506,
	507, 508, 509, 1206, 1254, 510, 1268, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1303, 523, 1304, 1283, 524, 525,
	1193, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1284, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1264,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1305, 582, 583, 584, 585, 586,
	1194, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 252, 605, 606, 604,
	607, 608, 609, 1247, 610, 611, 593, 594, 612, 613,
	1306, 614, 615, 616, 617, 618, 619, 620, 1262, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1309, 630, 631, 632, 633, 1285, 637, 638,
	639, 0, 640, 641, 1180, 636, 627, 254, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1274,
	1275, 1276, 1277, 0, 660, 0, 651, 652, 653, 654,
	1286, 655, 1287, 1204, 656, 657, 658, 659, 0, 661,
	662, 0, 1187, 663, 664, 666, 668, 669, 665, 667,
	670, 1248, 671, 0, 0, 672, 673, 674, 1751, 1271,
	1308, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 246, 682, 683, 738, 684, 685, 686,
	1184, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1179, 0, 0, 0, 0, 0,
	0, 1177, 1178, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	0, 2018, 2016, 0, 0, 1208, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 296, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 252, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 254, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 661, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 1751, 1271, 1308,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 246, 682, 683, 738, 684, 685, 686, 1184,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1179, 0, 0, 0, 0, 0, 0,
	1177, 1178, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0,
	2018, 3446, 0, 0, 1208, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1250, 1214, 0, 0, 307,
	0, 308, 309, 1290, 310, 311, 312, 313, 314, 315,
	316, 688, 1263, 0, 317, 1270, 318, 1269, 0, 1280,
	319, 320, 321, 322, 323, 324, 1216, 1249, 1181, 325,
	1310, 1311, 695, 0, 326, 327, 1256, 0, 1237, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1291, 351,
	352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354,
	355, 356, 357, 358, 1273, 359, 361, 1267, 1266, 1186,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1258, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1192, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1281,
	1282, 392, 1205, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1265, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1292, 402, 403, 404, 1278,
	1279, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1288, 0, 1215, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1251, 1252, 1255, 511, 1294, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1293, 512, 433, 1260, 1261,
	0, 1221, 0, 434, 435, 1295, 1253, 1296, 436, 437,
	438, 1297, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1289, 1298,
	450, 451, 1299, 0, 452, 453, 454, 455, 456, 457,
	460, 1244, 1243, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1300, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1301, 504, 492, 1183, 296, 1302, 506, 507, 508,
	509, 1206, 1254, 510, 1268, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1303, 523, 1304, 1283, 524, 525, 1193, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1284,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1264, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1305, 582, 583, 584, 585, 586, 1194, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 252, 605, 606, 604, 607, 608,
	609, 1247, 610, 611, 593, 594, 612, 613, 1306, 614,
	615, 616, 617, 618, 619, 620, 1262, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1309, 630, 631, 632, 633, 1285, 637, 638, 639, 0,
	640, 641, 1180, 636, 627, 254, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1274, 1275, 1276,
	1277, 0, 660, 0, 651, 652, 653, 654, 1286, 655,
	1287, 1204, 656, 657, 658, 659, 0, 661, 662, 0,
	1187, 663, 664, 666, 668, 669, 665, 667, 670, 1248,
	671, 0, 0, 672, 673, 674, 1751, 1271, 1308, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 246, 682, 683, 738, 684, 685, 686, 1184, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1179, 0, 0, 0, 0, 0, 0, 1177,
	1178, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0, 2018,
	2016, 0, 0, 1208, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1250, 1214, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 1263, 0, 317, 1270, 318, 1269, 2911, 1280, 319,
	320, 321, 322, 323, 324, 1216, 1249, 1181, 325, 1310,
	1311, 695, 0, 326, 327, 1256, 0, 1237, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355,
	356, 357, 358, 1273, 359, 361, 1267, 1266, 1186, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1258, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1192, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1281, 1282,
	392, 1205, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1265, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 2916, 1292, 402, 403, 404, 1278, 1279,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1288, 0, 1215, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1251, 1252, 1255, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1293, 512, 433, 1260, 1261, 0,
	1221, 0, 434, 435, 1295, 1253, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 2912, 449, 1289, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	1244, 1243, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 1183, 296, 1302, 506, 507, 508, 509,
	1206, 1254, 510, 1268, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 1283, 524, 525, 1193, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1284, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1264, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 1194, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1247, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 1262, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1309,
	630, 631, 632, 633, 1285, 637, 638, 639, 0, 640,
	641, 1180, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1274, 1275, 1276, 1277,
	0, 660, 2913, 651, 652, 653, 654, 1286, 655, 1287,
	1204, 656, 657, 658, 659, 0, 661, 662, 0, 1187,
	663, 664, 666, 668, 669, 665, 667, 670, 1248, 671,
	0, 0, 672, 673, 674, 734, 1271, 1308, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1184, 0, 0,
	0, 2826, 0, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	0, 1179, 0, 0, 0, 0, 0, 0, 1177, 1178,
	297, 298, 300, 299, 301, 302, 303, 304, 1210, 305,
	306, 0, 1208, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 296, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 661, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 1271, 1308,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1179, 0, 0, 0, 0, 0, 0,
	1177, 1178, 0, 0, 0, 0, 0, 0, 0, 0,
	1210, 2824, 0, 2823, 1208, 1226, 1198, 1199, 1200, 1196,
	1197, 1209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1250, 1214,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 1263, 0, 317, 1270, 318,
	1269, 0, 1280, 319, 320, 321, 322, 323, 324, 1216,
	1249, 1181, 325, 1310, 1311, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 1273, 359, 361,
	1267, 1266, 1186, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1258, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1192, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 1205, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1265, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 1278, 1279, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 1215, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 1183, 296, 1302,
	506, 507, 508, 509, 1206, 1254, 510, 1268, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 1193, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1264, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 1194, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 1262,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1309, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 1180, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1274, 1275, 1276, 1277, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 1204, 656, 657, 658, 659, 0,
	661, 662, 0, 1187, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	1271, 1308, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1179, 0, 0, 0, 0,
	0, 0, 1177, 1178, 0, 0, 0, 0, 0, 0,
	0, 0, 1210, 2821, 0, 2820, 1208, 1226, 1198, 1199,
	1200, 1196, 1197, 1209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	1250, 1214, 0, 0, 307, 0, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 1263, 0, 317,
	1270, 318, 1269, 0, 1280, 319, 320, 321, 322, 323,
	324, 1216, 1249, 1181, 325, 1310, 1311, 695, 0, 326,
	327, 1256, 0, 1237, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1291, 351, 352, 353, 1240, 1238, 1239,
	1246, 1242, 1241, 1245, 354, 355, 356, 357, 358, 1273,
	359, 361, 1267, 1266, 1186, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1258,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1192, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1281, 1282, 392, 1205, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1265, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1292, 402, 403, 404, 1278, 1279, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1288, 0, 1215,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1251,
	1252, 1255, 511, 1294, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1293, 512, 433, 1260, 1261, 0, 1221, 0, 434, 435,
	1295, 1253, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1289, 1298, 450, 451, 1299, 0, 452,
	453, 454, 455, 456, 457, 460, 1244, 1243, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 1183,
	296, 1302, 506, 507, 508, 509, 1206, 1254, 510, 1268,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1303, 523, 1304,
	1283, 524, 525, 1193, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1284, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1264, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 1194, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1247, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 1262, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1309, 630, 631, 632, 633,
	1285, 637, 638, 639, 0, 640, 641, 1180, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1274, 1275, 1276, 1277, 0, 660, 0, 651,
	652, 653, 654, 1286, 655, 1287, 1204, 656, 657, 658,
	659, 0, 661, 662, 0, 1187, 663, 664, 666, 668,
	669, 665, 667, 670, 1248, 671, 0, 0, 672, 673,
	674, 734, 1271, 1308, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1179, 0, 0,
	0, 0, 0, 0, 1177, 1178, 0, 0, 0, 0,
	0, 0, 0, 0, 1210, 2818, 0, 2817, 1208, 1226,
	1198, 1199, 1200, 1196, 1197, 1209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 1250, 1214, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 1263,
	0, 317, 1270, 318, 1269, 0, 1280, 319, 320, 321,
	322, 323, 324, 1216, 1249, 1181, 325, 1310, 1311, 695,
	0, 326, 327, 1256, 0, 1237, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1291, 351, 352, 353, 1240,
	1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356, 357,
	358, 1273, 359, 361, 1267, 1266, 1186, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1258, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1192, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1281, 1282, 392, 1205,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1265,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 1278, 1279, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1288,
	0, 1215, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1251, 1252, 1255, 511, 1294, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1293, 512, 433, 1260, 1261, 0, 1221, 0,
	434, 435, 1295, 1253, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1289, 1298, 450, 451, 1299,
	0, 452, 453, 454, 455, 456, 457, 460, 1244, 1243,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1183, 296, 1302, 506, 507, 508, 509, 1206, 1254,
	510, 1268, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 1283, 524, 525, 1193, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1284, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1264, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 1194, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1247, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 1262, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1309, 630, 631,
	632, 633, 1285, 637, 638, 639, 0, 640, 641, 1180,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1274, 1275, 1276, 1277, 0, 660,
	0, 651, 652, 653, 654, 1286, 655, 1287, 1204, 656,
	657, 658, 659, 0, 661, 662, 0, 1187, 663, 664,
	666, 668, 669, 665, 667, 670, 1248, 671, 0, 0,
	672, 673, 674, 734, 1271, 1308, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1179,
	0, 0, 0, 0, 0, 0, 1177, 1178, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 2815, 0, 1853,
	1208, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1250, 1214, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 1263, 0, 317, 1270, 318, 1269, 0, 1280, 319,
	320, 321, 322, 323, 324, 1216, 1249, 1181, 325, 1310,
	1311, 695, 0, 326, 327, 1256, 0, 1237, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355,
	356, 357, 358, 1273, 359, 361, 1267, 1266, 1186, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1258, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1192, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1281, 1282,
	392, 1205, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1265, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1292, 402, 403, 404, 1278, 1279,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1288, 0, 1215, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1251, 1252, 1255, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1293, 512, 433, 1260, 1261, 0,
	1221, 0, 434, 435, 1295, 1253, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1289, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	1244, 1243, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 1183, 296, 1302, 506, 507, 508, 509,
	1206, 1254, 510, 1268, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 1283, 524, 525, 1193, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1284, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1264, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 1194, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1247, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 1262, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1309,
	630, 631, 632, 633, 1285, 637, 638, 639, 0, 640,
	641, 1180, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1274, 1275, 1276, 1277,
	0, 660, 0, 651, 652, 653, 654, 1286, 655, 1287,
	1204, 656, 657, 658, 659, 0, 661, 662, 0, 1187,
	663, 664, 666, 668, 669, 665, 667, 670, 1248, 671,
	0, 0, 672, 673, 674, 734, 1271, 1308, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1852, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1184, 0, 0,
	0, 1173, 0, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	0, 1179, 0, 0, 0, 0, 0, 0, 1177, 1178,
	297, 298, 300, 299, 301, 302, 303, 304, 1210, 305,
	306, 0, 1208, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 296, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 1188, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 661, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 1271, 1308,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1184,
	0, 0, 0, 0, 0, 1226, 1198, 1199, 1200, 1196,
	1197, 1209, 0, 1179, 0, 0, 0, 0, 0, 0,
	1177, 1178, 297, 298, 300, 299, 301, 302, 303, 304,
	1210, 305, 306, 0, 1208, 0, 0, 0, 1250, 1214,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 1263, 0, 317, 1270, 318,
	1269, 0, 1280, 319, 320, 321, 322, 323, 324, 1216,
	1249, 1181, 325, 1310, 1311, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 5052, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 1273, 359, 361,
	1267, 1266, 1186, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1258, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1192, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 1205, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1265, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 1278, 1279, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 1215, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 1183, 296, 1302,
	506, 507, 508, 509, 1206, 1254, 510, 1268, 513, 514,
	0, 0, 515, 0, 516, 1188, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 1193, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1264, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 1194, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 1262,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1309, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 1180, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1274, 1275, 1276, 1277, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 1204, 656, 657, 658, 659, 0,
	661, 662, 0, 1187, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	1271, 1308, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1184, 0, 0, 0, 0, 0, 1226, 1198, 1199,
	1200, 1196, 1197, 1209, 0, 1179, 0, 0, 0, 0,
	0, 0, 1177, 1178, 297, 298, 300, 299, 301, 302,
	303, 304, 1210, 305, 306, 0, 1208, 0, 0, 0,
	1250, 1214, 0, 0, 307, 0, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 1263, 0, 317,
	1270, 318, 1269, 0, 1280, 319, 320, 321, 322, 323,
	324, 1216, 1249, 1181, 325, 1310, 1311, 695, 0, 326,
	327, 1256, 0, 1237, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1291, 351, 352, 353, 1240, 1238, 1239,
	1246, 1242, 1241, 1245, 354, 355, 356, 357, 358, 1273,
	359, 361, 1267, 1266, 1186, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1258,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1192, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1281, 1282, 392, 1205, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1265, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1292, 402, 403, 404, 1278, 1279, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1288, 0, 1215,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1251,
	1252, 1255, 511, 1294, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 2658, 430, 431, 432, 0,
	1293, 512, 433, 1260, 1261, 0, 1221, 0, 434, 435,
	1295, 1253, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1289, 1298, 450, 451, 1299, 0, 452,
	453, 454, 455, 456, 457, 460, 1244, 1243, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 1183,
	296, 1302, 506, 507, 508, 509, 1206, 1254, 510, 1268,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1303, 523, 1304,
	1283, 524, 525, 1193, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1284, 543, 722, 544, 545, 2657,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1264, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 1194, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1247, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 1262, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1309, 630, 631, 632, 633,
	1285, 637, 638, 639, 0, 640, 641, 1180, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1274, 1275, 1276, 1277, 0, 660, 0, 651,
	652, 653, 654, 1286, 655, 1287, 1204, 656, 657, 658,
	659, 0, 661, 662, 0, 1187, 663, 664, 666, 668,
	669, 665, 667, 670, 1248, 671, 0, 0, 672, 673,
	674, 734, 1271, 1308, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1184, 0, 0, 0, 0, 0, 1226,
	1198, 1199, 1200, 1196, 1197, 1209, 0, 1179, 0, 0,
	0, 0, 0, 0, 1177, 1178, 297, 298, 300, 299,
	301, 302, 303, 304, 1210, 305, 306, 0, 1208, 0,
	0, 0, 1250, 1214, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 1263,
	0, 317, 1270, 318, 1269, 0, 1280, 319, 320, 321,
	322, 323, 324, 1216, 1249, 1181, 325, 1310, 1311, 695,
	0, 326, 327, 1256, 0, 1237, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 4772,
	347, 0, 348, 349, 350, 1291, 351, 352, 353, 1240,
	1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356, 357,
	358, 1273, 359, 361, 1267, 1266, 1186, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1258, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1192, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1281, 1282, 392, 1205,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1265,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 1278, 1279, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1288,
	0, 1215, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1251, 1252, 1255, 511, 1294, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1293, 512, 433, 1260, 1261, 0, 1221, 0,
	434, 435, 1295, 1253, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1289, 1298, 450, 451, 1299,
	0, 452, 453, 454, 455, 456, 457, 460, 1244, 1243,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1183, 296, 1302, 506, 507, 508, 509, 1206, 1254,
	510, 1268, 513, 514, 0, 0, 515, 0, 516, 1188,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 1283, 524, 525, 1193, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1284, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1264, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 1194, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1247, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 1262, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1309, 630, 631,
	632, 633, 1285, 637, 638, 639, 0, 640, 641, 1180,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1274, 1275, 1276, 1277, 0, 660,
	0, 651, 652, 653, 654, 1286, 655, 1287, 1204, 656,
	657, 658, 659, 0, 661, 662, 0, 1187, 663, 664,
	666, 668, 669, 665, 667, 670, 1248, 671, 0, 0,
	672, 673, 674, 734, 1271, 1308, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1184, 0, 0, 0, 0,
	0, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0, 1179,
	0, 0, 0, 0, 0, 0, 1177, 1178, 297, 298,
	300, 299, 301, 302, 303, 304, 1210, 305, 306, 0,
	1208, 0, 0, 0, 1250, 1214, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 1263, 0, 317, 1270, 318, 1269, 0, 1280, 319,
	320, 321, 322, 323, 324, 1216, 1249, 1181, 325, 1310,
	1311, 695, 0, 326, 327, 1256, 0, 1237, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355,
	356, 357, 358, 1273, 359, 361, 1267, 1266, 1186, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1258, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1192, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1281, 1282,
	392, 1205, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1265, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1292, 402, 403, 404, 1278, 1279,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1288, 0, 1215, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1251, 1252, 1255, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1293, 512, 433, 1260, 1261, 0,
	1221, 0, 434, 435, 1295, 1253, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1289, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	1244, 1243, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 1183, 296, 1302, 506, 507, 508, 509,
	1206, 1254, 510, 1268, 513, 514, 0, 0, 515, 0,
	516, 1188, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 1283, 524, 525, 1193, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1284, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1264, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 1194, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1247, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 1262, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1309,
	630, 631, 632, 633, 1285, 637, 638, 639, 0, 640,
	641, 1180, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1274, 1275, 1276, 1277,
	0, 660, 0, 651, 652, 653, 654, 1286, 655, 1287,
	1204, 656, 657, 658, 659, 0, 661, 662, 0, 1187,
	663, 664, 666, 668, 669, 665, 667, 670, 1248, 671,
	0, 0, 672, 673, 674, 734, 1271, 1308, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1184, 0, 0,
	0, 0, 0, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	0, 1179, 0, 0, 0, 0, 0, 0, 1177, 1178,
	297, 298, 300, 299, 301, 302, 303, 304, 1210, 305,
	306, 0, 1208, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 4322, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 661, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 1271, 1308,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1179, 0, 0, 0, 0, 0, 0,
	1177, 1178, 2088, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	1210, 0, 0, 0, 1208, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 296, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 661, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 1271, 1308,
	3991, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1184,
	0, 0, 0, 0, 0, 1226, 1198, 1199, 1200, 1196,
	1197, 1209, 0, 1179, 0, 0, 0, 0, 0, 0,
	1177, 1178, 297, 298, 300, 299, 301, 302, 303, 304,
	1210, 305, 306, 0, 1208, 0, 0, 0, 1250, 1214,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 1263, 0, 317, 1270, 318,
	1269, 0, 1280, 319, 320, 321, 322, 323, 324, 1216,
	1249, 1181, 325, 1310, 1311, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 1273, 359, 361,
	1267, 1266, 1186, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1258, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1192, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 1205, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1265, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 1278, 1279, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 1215, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 1183, 296, 1302,
	506, 507, 508, 509, 1206, 1254, 510, 1268, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 1193, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1264, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 1194, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 1262,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1309, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 1180, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1274, 1275, 1276, 1277, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 1204, 656, 657, 658, 659, 0,
	661, 662, 0, 1187, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	1271, 1308, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1179, 0, 0, 0, 0,
	0, 0, 1177, 1178, 2088, 1226, 1198, 1199, 1200, 1196,
	1197, 1209, 1210, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1250, 1214,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 1263, 0, 317, 1270, 318,
	1269, 0, 1280, 319, 320, 321, 322, 323, 324, 1216,
	1249, 1181, 325, 1310, 1311, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 1273, 359, 361,
	1267, 1266, 1186, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1258, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1192, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 1205, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1265, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 2916, 1292, 402,
	403, 404, 1278, 1279, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 1215, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 1183, 296, 1302,
	506, 507, 508, 509, 1206, 1254, 510, 1268, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 1193, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1264, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 1194, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 1262,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1309, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 1180, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1274, 1275, 1276, 1277, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 1204, 656, 657, 658, 659, 0,
	661, 662, 0, 1187, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	1271, 1308, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1184, 0, 0, 0, 0, 0, 1226, 1198, 1199,
	1200, 1196, 1197, 1209, 0, 1179, 0, 0, 0, 0,
	0, 0, 1177, 1178, 297, 298, 300, 299, 301, 302,
	303, 304, 1210, 305, 306, 0, 1208, 0, 0, 0,
	1250, 1214, 0, 0, 307, 0, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 1263, 0, 317,
	1270, 318, 1269, 0, 1280, 319, 320, 321, 322, 323,
	324, 1216, 1249, 1181, 325, 1310, 1311, 695, 0, 326,
	327, 1256, 0, 1237, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1291, 351, 352, 353, 1240, 1238, 1239,
	1246, 1242, 1241, 1245, 354, 355, 356, 357, 358, 1273,
	359, 361, 1267, 1266, 1186, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1258,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1192, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1281, 1282, 392, 1205, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1265, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1292, 402, 403, 404, 1278, 1279, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1288, 0, 1215,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1251,
	1252, 1255, 511, 1294, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1293, 512, 433, 1260, 1261, 0, 1221, 0, 434, 435,
	1295, 1253, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1289, 1298, 450, 451, 1299, 0, 452,
	453, 454, 455, 456, 457, 460, 1244, 1243, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 1183,
	296, 1302, 506, 507, 508, 509, 1206, 1254, 510, 1268,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1303, 523, 1304,
	1283, 524, 525, 1193, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1284, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1264, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 1194, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1247, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 1262, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1309, 630, 631, 632, 633,
	1285, 637, 638, 639, 0, 640, 641, 1180, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1274, 1275, 1276, 1277, 0, 660, 0, 651,
	652, 653, 654, 1286, 655, 1287, 1204, 656, 657, 658,
	659, 0, 661, 662, 0, 1187, 663, 664, 666, 668,
	669, 665, 667, 670, 1248, 671, 0, 0, 672, 673,
	674, 734, 1271, 1308, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1179, 0, 0,
	0, 0, 0, 0, 1177, 1178, 0, 0, 0, 0,
	0, 0, 0, 0, 1210, 2016, 0, 2921, 1208, 1226,
	1198, 1199, 1200, 1196, 1197, 1209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 1250, 1214, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 1263,
	0, 317, 1270, 318, 1269, 0, 1280, 319, 320, 321,
	322, 323, 324, 1216, 1249, 1181, 325, 1310, 1311, 695,
	0, 326, 327, 1256, 0, 1237, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1291, 351, 352, 353, 1240,
	1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356, 357,
	358, 1273, 359, 361, 1267, 1266, 1186, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1258, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1192, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1281, 1282, 392, 1205,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1265,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 1278, 1279, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1288,
	0, 1215, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1251, 1252, 1255, 511, 1294, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1293, 512, 433, 1260, 1261, 0, 1221, 0,
	434, 435, 1295, 1253, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1289, 1298, 450, 451, 1299,
	0, 452, 453, 454, 455, 456, 457, 460, 1244, 1243,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1183, 296, 1302, 506, 507, 508, 509, 1206, 1254,
	510, 1268, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 1283, 524, 525, 1193, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1284, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1264, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 1194, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1247, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 1262, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1309, 630, 631,
	632, 633, 1285, 637, 638, 639, 0, 640, 641, 1180,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1274, 1275, 1276, 1277, 0, 660,
	0, 651, 652, 653, 654, 1286, 655, 1287, 1204, 656,
	657, 658, 659, 0, 661, 662, 0, 1187, 663, 664,
	666, 668, 669, 665, 667, 670, 1248, 671, 0, 0,
	672, 673, 674, 734, 1271, 1308, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1184, 0, 0, 0, 2919,
	0, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0, 1179,
	0, 0, 0, 0, 0, 0, 1177, 1178, 297, 298,
	300, 299, 301, 302, 303, 304, 1210, 305, 306, 0,
	1208, 0, 0, 0, 1250, 1214, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 1263, 0, 317, 1270, 318, 1269, 0, 1280, 319,
	320, 321, 322, 323, 324, 1216, 1249, 1181, 325, 1310,
	1311, 695, 0, 326, 327, 1256, 0, 1237, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355,
	356, 357, 358, 1273, 359, 361, 1267, 1266, 1186, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1258, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1192, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1281, 1282,
	392, 1205, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1265, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1292, 402, 403, 404, 1278, 1279,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1288, 0, 1215, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1251, 1252, 1255, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1293, 512, 433, 1260, 1261, 0,
	1221, 0, 434, 435, 1295, 1253, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1289, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	1244, 1243, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 1183, 296, 1302, 506, 507, 508, 509,
	1206, 1254, 510, 1268, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 1283, 524, 525, 1193, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1284, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1264, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 1194, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1247, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 1262, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1309,
	630, 631, 632, 633, 1285, 637, 638, 639, 0, 640,
	641, 1180, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1274, 1275, 1276, 1277,
	0, 660, 0, 651, 652, 653, 654, 1286, 655, 1287,
	1204, 656, 657, 658, 659, 0, 661, 662, 0, 1187,
	663, 664, 666, 668, 669, 665, 667, 670, 1248, 671,
	0, 0, 672, 673, 674, 734, 1271, 1308, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1184, 0, 0,
	0, 2907, 0, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	0, 1179, 0, 0, 0, 0, 0, 0, 1177, 1178,
	297, 298, 300, 299, 301, 302, 303, 304, 1210, 305,
	306, 0, 1208, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 296, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 661, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 1271, 1308,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1184,
	0, 0, 0, 2896, 0, 1226, 1198, 1199, 1200, 1196,
	1197, 1209, 0, 1179, 0, 0, 0, 0, 0, 0,
	1177, 1178, 297, 298, 300, 299, 301, 302, 303, 304,
	1210, 305, 306, 0, 1208, 0, 0, 0, 1250, 1214,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 1263, 0, 317, 1270, 318,
	1269, 0, 1280, 319, 320, 321, 322, 323, 324, 1216,
	1249, 1181, 325, 1310, 1311, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 1273, 359, 361,
	1267, 1266, 1186, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1258, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1192, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 1205, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1265, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 1278, 1279, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 1215, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 1183, 296, 1302,
	506, 507, 508, 509, 1206, 1254, 510, 1268, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 1193, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1264, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 1194, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 1262,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1309, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 1180, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1274, 1275, 1276, 1277, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 1204, 656, 657, 658, 659, 0,
	661, 662, 0, 1187, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	1271, 1308, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1184, 0, 0, 0, 2894, 0, 2885, 2892, 1199,
	1200, 1196, 1197, 1209, 0, 1179, 0, 0, 0, 0,
	0, 0, 1177, 1178, 297, 298, 300, 299, 301, 302,
	303, 304, 1210, 305, 306, 0, 1208, 0, 0, 0,
	1250, 1214, 0, 0, 307, 0, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 1263, 0, 317,
	1270, 318, 1269, 0, 1280, 319, 320, 321, 322, 323,
	324, 1216, 1249, 1181, 325, 1310, 1311, 695, 0, 326,
	327, 1256, 0, 1237, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1291, 351, 352, 353, 1240, 1238, 1239,
	1246, 1242, 1241, 1245, 354, 355, 356, 357, 358, 1273,
	2888, 361, 1267, 1266, 1186, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1258,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1192, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1281, 1282, 392, 1205, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1265, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1292, 402, 403, 404, 1278, 1279, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1288, 0, 1215,
	415, 0, 416, 417, 418, 419, 420, 2889, 422, 1251,
	1252, 1255, 511, 1294, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1293, 512, 433, 1260, 1261, 0, 1221, 0, 434, 435,
	1295, 1253, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1289, 1298, 450, 451, 1299, 0, 452,
	453, 454, 455, 456, 457, 460, 1244, 1243, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 2890,
	470, 2887, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 1183,
	296, 1302, 506, 507, 508, 509, 1206, 1254, 510, 1268,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1303, 523, 1304,
	1283, 524, 525, 1193, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1284, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1264, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 1194, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 2891, 0,
	605, 606, 604, 607, 608, 609, 1247, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 1262, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1309, 630, 631, 632, 633,
	1285, 637, 638, 639, 0, 640, 641, 1180, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1274, 1275, 1276, 1277, 0, 660, 0, 651,
	652, 653, 654, 1286, 655, 1287, 1204, 656, 657, 658,
	659, 0, 661, 662, 0, 1187, 663, 664, 666, 668,
	669, 665, 667, 670, 1248, 671, 0, 0, 672, 673,
	674, 734, 1271, 1308, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 2886, 686, 1184, 0, 0, 0, 2882, 0, 2885,
	2892, 1199, 1200, 1196, 1197, 1209, 0, 1179, 0, 0,
	0, 0, 0, 0, 1177, 1178, 297, 298, 300, 299,
	301, 302, 303, 304, 1210, 305, 306, 0, 1208, 0,
	0, 0, 1250, 1214, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 1263,
	0, 317, 1270, 318, 1269, 0, 1280, 319, 320, 321,
	322, 323, 324, 1216, 1249, 1181, 325, 1310, 1311, 695,
	0, 326, 327, 1256, 0, 1237, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1291, 351, 352, 353, 1240,
	1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356, 357,
	358, 1273, 2888, 361, 1267, 1266, 1186, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1258, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1192, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1281, 1282, 392, 1205,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1265,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 1278, 1279, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1288,
	0, 1215, 415, 0, 416, 417, 418, 419, 420, 2889,
	422, 1251, 1252, 1255, 511, 1294, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1293, 512, 433, 1260, 1261, 0, 1221, 0,
	434, 435, 1295, 1253, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1289, 1298, 450, 451, 1299,
	0, 452, 453, 454, 455, 456, 457, 460, 1244, 1243,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 2890, 470, 2887, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1183, 296, 1302, 506, 507, 508, 509, 1206, 1254,
	510, 1268, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 1283, 524, 525, 1193, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1284, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1264, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 1194, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	2891, 0, 605, 606, 604, 607, 608, 609, 1247, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 1262, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1309, 630, 631,
	632, 633, 1285, 637, 638, 639, 0, 640, 641, 1180,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1274, 1275, 1276, 1277, 0, 660,
	0, 651, 652, 653, 654, 1286, 655, 1287, 1204, 656,
	657, 658, 659, 0, 661, 662, 0, 1187, 663, 664,
	666, 668, 669, 665, 667, 670, 1248, 671, 0, 0,
	672, 673, 674, 734, 1271, 1308, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 2886, 686, 1184, 0, 0, 0, 0,
	0, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0, 1179,
	0, 0, 0, 0, 0, 0, 1177, 1178, 297, 298,
	300, 299, 301, 302, 303, 304, 1210, 305, 306, 0,
	1208, 0, 0, 0, 1250, 1214, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 1263, 0, 317, 1270, 318, 1269, 0, 1280, 319,
	320, 321, 322, 323, 324, 1216, 1249, 1181, 325, 1310,
	1311, 695, 0, 326, 327, 1256, 0, 1237, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355,
	356, 357, 358, 1273, 359, 361, 1267, 1266, 1186, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1258, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1192, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1281, 1282,
	392, 1205, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1265, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1292, 402, 403, 404, 1278, 1279,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1288, 0, 1215, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1251, 1252, 1255, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1293, 512, 433, 1260, 1261, 0,
	1221, 0, 434, 435, 1295, 1253, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1289, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	1244, 1243, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 1183, 296, 1302, 506, 507, 508, 509,
	1206, 1254, 510, 1268, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 1283, 524, 525, 1193, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1284, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1264, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 1194, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1247, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 1262, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1309,
	630, 631, 632, 633, 1285, 637, 638, 639, 0, 640,
	641, 1180, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1274, 1275, 1276, 1277,
	0, 660, 0, 651, 652, 653, 654, 1286, 655, 1287,
	1204, 656, 657, 658, 659, 0, 661, 662, 0, 1187,
	663, 664, 666, 668, 669, 665, 667, 670, 1248, 671,
	0, 0, 672, 673, 674, 734, 1271, 1308, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1179, 0, 0, 0, 0, 0, 0, 1177, 1178,
	0, 0, 0, 0, 0, 0, 2024, 0, 1210, 0,
	0, 0, 1208, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 2637, 305,
	306, 0, 0, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 296, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 661, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 1271, 1308,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1184,
	0, 0, 0, 2598, 0, 1226, 1198, 1199, 1200, 1196,
	1197, 1209, 0, 1179, 0, 0, 0, 0, 0, 0,
	1177, 1178, 297, 298, 300, 299, 301, 302, 303, 304,
	1210, 305, 306, 0, 1208, 0, 0, 0, 1250, 1214,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 1263, 0, 317, 1270, 318,
	1269, 0, 1280, 319, 320, 321, 322, 323, 324, 1216,
	1249, 1181, 325, 1310, 1311, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 1273, 359, 361,
	1267, 1266, 1186, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1258, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1192, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 1205, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1265, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 1278, 1279, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 1215, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 1183, 296, 1302,
	506, 507, 508, 509, 1206, 1254, 510, 1268, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 1193, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1264, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 1194, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 1262,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1309, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 1180, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1274, 1275, 1276, 1277, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 1204, 656, 657, 658, 659, 0,
	661, 662, 0, 1187, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	1271, 1308, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1184, 0, 0, 0, 2569, 0, 1226, 1198, 1199,
	1200, 1196, 1197, 1209, 0, 1179, 0, 0, 0, 0,
	0, 0, 1177, 1178, 297, 298, 300, 299, 301, 302,
	303, 304, 1210, 305, 306, 0, 1208, 0, 0, 0,
	1250, 1214, 0, 0, 307, 0, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 1263, 0, 317,
	1270, 318, 1269, 0, 1280, 319, 320, 321, 322, 323,
	324, 1216, 1249, 1181, 325, 1310, 1311, 695, 0, 326,
	327, 1256, 0, 1237, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1291, 351, 352, 353, 1240, 1238, 1239,
	1246, 1242, 1241, 1245, 354, 355, 356, 357, 358, 1273,
	359, 361, 1267, 1266, 1186, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1258,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1192, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1281, 1282, 392, 1205, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1265, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1292, 402, 403, 404, 1278, 1279, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1288, 0, 1215,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1251,
	1252, 1255, 511, 1294, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1293, 512, 433, 1260, 1261, 0, 1221, 0, 434, 435,
	1295, 1253, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1289, 1298, 450, 451, 1299, 0, 452,
	453, 454, 455, 456, 457, 460, 1244, 1243, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 1183,
	296, 1302, 506, 507, 508, 509, 1206, 1254, 510, 1268,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1303, 523, 1304,
	1283, 524, 525, 1193, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1284, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1264, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 1194, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1247, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 1262, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1309, 630, 631, 632, 633,
	1285, 637, 638, 639, 0, 640, 641, 1180, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1274, 1275, 1276, 1277, 0, 660, 0, 651,
	652, 653, 654, 1286, 655, 1287, 1204, 656, 657, 658,
	659, 0, 661, 662, 0, 1187, 663, 664, 666, 668,
	669, 665, 667, 670, 1248, 671, 0, 0, 672, 673,
	674, 734, 1271, 1308, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1184, 0, 0, 0, 1858, 0, 1226,
	1198, 1199, 1200, 1196, 1197, 1209, 0, 1179, 0, 0,
	0, 0, 0, 0, 1177, 1178, 297, 298, 300, 299,
	301, 302, 303, 304, 1210, 305, 306, 0, 1208, 0,
	0, 0, 1250, 1214, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 1263,
	0, 317, 1270, 318, 1269, 0, 1280, 319, 320, 321,
	322, 323, 324, 1216, 1249, 1181, 325, 1310, 1311, 695,
	0, 326, 327, 1256, 0, 1237, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1291, 351, 352, 353, 1240,
	1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356, 357,
	358, 1273, 359, 361, 1267, 1266, 1186, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1258, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1192, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1281, 1282, 392, 1205,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1265,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 1278, 1279, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1288,
	0, 1215, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1251, 1252, 1255, 511, 1294, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1293, 512, 433, 1260, 1261, 0, 1221, 0,
	434, 435, 1295, 1253, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1289, 1298, 450, 451, 1299,
	0, 452, 453, 454, 455, 456, 457, 460, 1244, 1243,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1183, 296, 1302, 506, 507, 508, 509, 1206, 1254,
	510, 1268, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 1283, 524, 525, 1193, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1284, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1264, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 1194, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1247, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 1262, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1309, 630, 631,
	632, 633, 1285, 637, 638, 639, 0, 640, 641, 1180,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1274, 1275, 1276, 1277, 0, 660,
	0, 651, 652, 653, 654, 1286, 655, 1287, 1204, 656,
	657, 658, 659, 0, 661, 662, 0, 1187, 663, 664,
	666, 668, 669, 665, 667, 670, 1248, 671, 0, 0,
	672, 673, 674, 734, 1271, 1308, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1184, 0, 0, 0, 1786,
	0, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0, 1179,
	0, 0, 0, 0, 0, 0, 1177, 1178, 297, 298,
	300, 299, 301, 302, 303, 304, 1210, 305, 306, 0,
	1208, 0, 0, 0, 1250, 1214, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 1263, 0, 317, 1270, 318, 1269, 0, 1280, 319,
	320, 321, 322, 323, 324, 1216, 1249, 1181, 325, 1310,
	1311, 695, 0, 326, 327, 1256, 0, 1237, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355,
	356, 357, 358, 1273, 359, 361, 1267, 1266, 1186, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1258, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1192, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1281, 1282,
	392, 1205, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1265, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1292, 402, 403, 404, 1278, 1279,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1288, 0, 1215, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1251, 1252, 1255, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1293, 512, 433, 1260, 1261, 0,
	1221, 0, 434, 435, 1295, 1253, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1289, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	1244, 1243, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 1183, 296, 1302, 506, 507, 508, 509,
	1206, 1254, 510, 1268, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 1283, 524, 525, 1193, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1284, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1264, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 1194, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1247, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 1262, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1309,
	630, 631, 632, 633, 1285, 637, 638, 639, 0, 640,
	641, 1180, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1274, 1275, 1276, 1277,
	0, 660, 0, 651, 652, 653, 654, 1286, 655, 1287,
	1204, 656, 657, 658, 659, 0, 661, 662, 0, 1187,
	663, 664, 666, 668, 669, 665, 667, 670, 1248, 671,
	0, 0, 672, 673, 674, 734, 1271, 1308, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1184, 0, 0,
	0, 1781, 0, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	0, 1179, 0, 0, 0, 0, 0, 0, 1177, 1178,
	297, 298, 300, 299, 301, 302, 303, 304, 1210, 305,
	306, 0, 1208, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 296, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 661, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 1271, 1308,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1184,
	0, 0, 0, 1767, 0, 1226, 1198, 1199, 1200, 1196,
	1197, 1209, 0, 1179, 0, 0, 0, 0, 0, 0,
	1177, 1178, 297, 298, 300, 299, 301, 302, 303, 304,
	1210, 305, 306, 0, 1208, 0, 0, 0, 1250, 1214,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 1263, 0, 317, 1270, 318,
	1269, 0, 1280, 319, 320, 321, 322, 323, 324, 1216,
	1249, 1181, 325, 1310, 1311, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 1273, 359, 361,
	1267, 1266, 1186, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1258, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1192, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 1205, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1265, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 1278, 1279, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 1215, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 1183, 296, 1302,
	506, 507, 508, 509, 1206, 1254, 510, 1268, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 1193, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1264, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 1194, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 1262,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1309, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 1180, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1274, 1275, 1276, 1277, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 1204, 656, 657, 658, 659, 0,
	661, 662, 0, 1187, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	1271, 1308, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1184, 0, 0, 0, 1762, 0, 1226, 1198, 1199,
	1200, 1196, 1197, 1209, 0, 1179, 0, 0, 0, 0,
	0, 0, 1177, 1178, 297, 298, 300, 299, 301, 302,
	303, 304, 1210, 305, 306, 0, 1208, 0, 0, 0,
	1250, 1214, 0, 0, 307, 0, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 1263, 0, 317,
	1270, 318, 1269, 0, 1280, 319, 320, 321, 322, 323,
	324, 1216, 1249, 1181, 325, 1310, 1311, 695, 0, 326,
	327, 1256, 0, 1237, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1291, 351, 352, 353, 1240, 1238, 1239,
	1246, 1242, 1241, 1245, 354, 355, 356, 357, 358, 1273,
	359, 361, 1267, 1266, 1186, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1258,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1192, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1281, 1282, 392, 1205, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1265, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1292, 402, 403, 404, 1278, 1279, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1288, 0, 1215,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1251,
	1252, 1255, 511, 1294, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1293, 512, 433, 1260, 1261, 0, 1221, 0, 434, 435,
	1295, 1253, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1289, 1298, 450, 451, 1299, 0, 452,
	453, 454, 455, 456, 457, 460, 1244, 1243, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 1183,
	296, 1302, 506, 507, 508, 509, 1206, 1254, 510, 1268,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1303, 523, 1304,
	1283, 524, 525, 1193, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1284, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1264, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 1194, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1247, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 1262, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1309, 630, 631, 632, 633,
	1285, 637, 638, 639, 0, 640, 641, 1180, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1274, 1275, 1276, 1277, 0, 660, 0, 651,
	652, 653, 654, 1286, 655, 1287, 1204, 656, 657, 658,
	659, 0, 661, 662, 0, 1187, 663, 664, 666, 668,
	669, 665, 667, 670, 1248, 671, 0, 0, 672, 673,
	674, 734, 1271, 1308, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1184, 0, 0, 0, 1671, 0, 1226,
	1198, 1199, 1200, 1196, 1197, 1209, 0, 1179, 0, 0,
	0, 0, 0, 0, 1177, 1178, 297, 298, 300, 299,
	301, 302, 303, 304, 1210, 305, 306, 0, 1208, 0,
	0, 0, 1250, 1214, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 1263,
	0, 317, 1270, 318, 1269, 0, 1280, 319, 320, 321,
	322, 323, 324, 1216, 1249, 1181, 325, 1310, 1311, 695,
	0, 326, 327, 1256, 0, 1237, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1291, 351, 352, 353, 1240,
	1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356, 357,
	358, 1273, 359, 361, 1267, 1266, 1186, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1258, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1192, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1281, 1282, 392, 1205,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1265,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 1278, 1279, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1288,
	0, 1215, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1670, 1252, 1255, 511, 1294, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1293, 512, 433, 1260, 1261, 0, 1221, 0,
	434, 435, 1295, 1253, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1289, 1298, 450, 451, 1299,
	0, 452, 453, 454, 455, 456, 457, 460, 1244, 1243,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1183, 296, 1302, 506, 507, 508, 509, 1206, 1254,
	510, 1268, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 1283, 524, 525, 1193, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1284, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1264, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 1194, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1247, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 1262, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1309, 630, 631,
	632, 633, 1285, 637, 638, 639, 0, 640, 641, 1180,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1274, 1275, 1276, 1277, 0, 660,
	0, 651, 652, 653, 654, 1286, 655, 1287, 1204, 656,
	657, 658, 659, 0, 661, 662, 0, 1187, 663, 664,
	666, 668, 669, 665, 667, 670, 1248, 671, 0, 0,
	672, 673, 674, 734, 1271, 1308, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1184, 0, 0, 0, 1665,
	0, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0, 1179,
	0, 0, 0, 0, 0, 0, 1177, 1178, 297, 298,
	300, 299, 301, 302, 303, 304, 1210, 305, 306, 0,
	1208, 0, 0, 0, 1250, 1214, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 1263, 0, 317, 1270, 318, 1269, 0, 1280, 319,
	320, 321, 322, 323, 324, 1216, 1249, 1181, 325, 1310,
	1311, 695, 0, 326, 327, 1256, 0, 1237, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355,
	356, 357, 358, 1273, 359, 361, 1267, 1266, 1186, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1258, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1192, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1281, 1282,
	392, 1205, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1265, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1292, 402, 403, 404, 1278, 1279,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1288, 0, 1215, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1664, 1252, 1255, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1293, 512, 433, 1260, 1261, 0,
	1221, 0, 434, 435, 1295, 1253, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1289, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	1244, 1243, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 1183, 296, 1302, 506, 507, 508, 509,
	1206, 1254, 510, 1268, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 1283, 524, 525, 1193, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1284, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1264, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 1194, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1247, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 1262, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1309,
	630, 631, 632, 633, 1285, 637, 638, 639, 0, 640,
	641, 1180, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1274, 1275, 1276, 1277,
	0, 660, 0, 651, 652, 653, 654, 1286, 655, 1287,
	1204, 656, 657, 658, 659, 0, 661, 662, 0, 1187,
	663, 664, 666, 668, 669, 665, 667, 670, 1248, 671,
	0, 0, 672, 673, 674, 734, 1271, 1308, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1184, 0, 0,
	0, 1658, 0, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	0, 1179, 0, 0, 0, 0, 0, 0, 1177, 1178,
	297, 298, 300, 299, 301, 302, 303, 304, 1210, 305,
	306, 0, 1208, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 296, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 661, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 1271, 1308,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1184,
	0, 0, 0, 1621, 0, 1226, 1198, 1199, 1200, 1196,
	1197, 1209, 0, 1179, 0, 0, 0, 0, 0, 0,
	1177, 1178, 297, 298, 300, 299, 301, 302, 303, 304,
	1210, 305, 306, 0, 1208, 0, 0, 0, 1250, 1214,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 1263, 0, 317, 1270, 318,
	1269, 0, 1280, 319, 320, 321, 322, 323, 324, 1216,
	1249, 1181, 325, 1310, 1311, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 1273, 359, 361,
	1267, 1266, 1186, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1258, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1192, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 1205, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1265, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 1278, 1279, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 1215, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 1183, 296, 1302,
	506, 507, 508, 509, 1206, 1254, 510, 1268, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 1193, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1264, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 1194, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 1262,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1309, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 1180, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1274, 1275, 1276, 1277, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 1204, 656, 657, 658, 659, 0,
	661, 662, 0, 1187, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	1271, 1308, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1184, 0, 0, 0, 1603, 0, 1226, 1198, 1199,
	1200, 1196, 1197, 1209, 0, 1179, 0, 0, 0, 0,
	0, 0, 1177, 1178, 297, 298, 300, 299, 301, 302,
	303, 304, 1210, 305, 306, 0, 1208, 0, 0, 0,
	1250, 1214, 0, 0, 307, 0, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 1263, 0, 317,
	1270, 318, 1269, 0, 1280, 319, 320, 321, 322, 323,
	324, 1216, 1249, 1181, 325, 1310, 1311, 695, 0, 326,
	327, 1256, 0, 1237, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1291, 351, 352, 353, 1240, 1238, 1239,
	1246, 1242, 1241, 1245, 354, 355, 356, 357, 358, 1273,
	359, 361, 1267, 1266, 1186, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1258,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1192, 381, 382, 383, 385, 387, 384, 1607,
	388, 389, 390, 391, 1281, 1282, 392, 1205, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1265, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1292, 402, 403, 404, 1278, 1279, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1288, 0, 1215,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1251,
	1252, 1255, 511, 1294, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1293, 512, 433, 1260, 1261, 0, 1221, 0, 434, 435,
	1295, 1253, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1289, 1298, 450, 451, 1299, 0, 452,
	453, 454, 455, 456, 457, 460, 1244, 1243, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 1183,
	296, 1302, 506, 507, 508, 509, 1206, 1254, 510, 1268,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1303, 523, 1304,
	1283, 524, 525, 1193, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1284, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1264, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 1608, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 1194, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1247, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 1262, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1309, 630, 631, 632, 633,
	1285, 637, 638, 639, 0, 640, 641, 1180, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 1606, 649,
	0, 650, 1274, 1275, 1276, 1277, 0, 660, 0, 651,
	652, 653, 654, 1286, 655, 1287, 1204, 656, 657, 658,
	659, 0, 661, 662, 0, 1187, 663, 664, 666, 668,
	669, 665, 667, 670, 1248, 671, 0, 0, 672, 673,
	674, 734, 1271, 1308, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1184, 0, 0, 0, 1435, 0, 1226,
	1198, 1199, 1200, 1196, 1197, 1209, 0, 1179, 0, 0,
	0, 0, 0, 0, 1177, 1178, 297, 298, 300, 299,
	301, 302, 303, 304, 1210, 305, 306, 0, 1208, 0,
	0, 0, 1250, 1214, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 1263,
	0, 317, 1270, 318, 1269, 0, 1280, 319, 320, 321,
	322, 323, 324, 1216, 1249, 1181, 325, 1310, 1311, 695,
	0, 326, 327, 1256, 0, 1237, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1291, 351, 352, 353, 1240,
	1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356, 357,
	358, 1273, 359, 361, 1267, 1266, 1186, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1258, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1192, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1281, 1282, 392, 1205,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1265,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 1278, 1279, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1288,
	0, 1215, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1251, 1252, 1255, 511, 1294, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1293, 512, 433, 1260, 1261, 0, 1221, 0,
	434, 435, 1295, 1253, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1289, 1298, 450, 451, 1299,
	0, 452, 453, 454, 455, 456, 457, 460, 1244, 1243,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1183, 296, 1302, 506, 507, 508, 509, 1206, 1254,
	510, 1268, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 1283, 524, 525, 1193, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1284, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1264, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 1194, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1247, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 1262, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1309, 630, 631,
	632, 633, 1285, 637, 638, 639, 0, 640, 641, 1180,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1274, 1275, 1276, 1277, 0, 660,
	0, 651, 652, 653, 654, 1286, 655, 1287, 1204, 656,
	657, 658, 659, 0, 661, 662, 0, 1187, 663, 664,
	666, 668, 669, 665, 667, 670, 1248, 671, 0, 0,
	672, 673, 674, 734, 1271, 1308, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1184, 0, 0, 0, 0,
	0, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0, 1179,
	0, 0, 0, 0, 0, 0, 1177, 1178, 297, 298,
	300, 299, 301, 302, 303, 304, 1210, 305, 306, 0,
	1208, 0, 0, 0, 1250, 1214, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 1263, 0, 317, 1270, 318, 1269, 0, 1280, 319,
	320, 321, 322, 323, 324, 1216, 1249, 1181, 325, 1310,
	1311, 695, 0, 326, 327, 1256, 0, 1237, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355,
	356, 357, 358, 1273, 359, 361, 1267, 1266, 1186, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1258, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1192, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1281, 1282,
	392, 1205, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1265, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1292, 402, 403, 404, 1278, 1279,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1288, 0, 1215, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1251, 1252, 1255, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1293, 512, 433, 1260, 1261, 0,
	1221, 0, 434, 435, 1295, 1253, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1289, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	1244, 1243, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 1183, 296, 1302, 506, 507, 508, 509,
	1206, 1254, 510, 1268, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 1283, 524, 525, 1193, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1284, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1264, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 1194, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1247, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 1262, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1309,
	630, 631, 632, 633, 1285, 637, 638, 639, 0, 640,
	641, 1180, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1274, 1275, 1276, 1277,
	0, 660, 0, 651, 652, 653, 654, 1286, 655, 1287,
	1204, 656, 657, 658, 659, 0, 661, 662, 0, 1187,
	663, 664, 666, 668, 669, 665, 667, 670, 1248, 671,
	0, 0, 672, 673, 674, 734, 1271, 1308, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1184, 0, 0,
	0, 0, 0, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	0, 1179, 0, 0, 0, 0, 0, 0, 1177, 1178,
	297, 298, 300, 299, 301, 302, 303, 304, 1210, 305,
	306, 0, 1208, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 5101, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 296, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 5100, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 1271, 1308,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1184,
	0, 0, 0, 0, 0, 1226, 1198, 1199, 1200, 1196,
	1197, 1209, 0, 1179, 0, 0, 0, 0, 0, 0,
	1177, 1178, 297, 298, 300, 299, 301, 302, 303, 304,
	1210, 305, 306, 0, 1208, 0, 0, 0, 1250, 1214,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 5099, 1263, 0, 317, 1270, 318,
	1269, 0, 1280, 319, 320, 321, 322, 323, 324, 1216,
	1249, 1181, 325, 1310, 1311, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 5101, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 1273, 359, 361,
	1267, 1266, 1186, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1258, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1192, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 1205, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1265, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 1278, 1279, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 1215, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 1183, 296, 1302,
	506, 507, 508, 509, 1206, 1254, 510, 1268, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 1193, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1264, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 1194, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 1262,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1309, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 1180, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1274, 1275, 1276, 1277, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 1204, 656, 657, 658, 659, 0,
	5100, 662, 0, 1187, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	1271, 1308, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1184, 0, 0, 0, 0, 0, 1226, 1198, 1199,
	1200, 1196, 1197, 1209, 0, 1179, 0, 0, 0, 0,
	0, 0, 1177, 1178, 297, 298, 300, 299, 301, 302,
	303, 304, 1210, 305, 306, 0, 1208, 0, 0, 0,
	1250, 1214, 0, 0, 307, 0, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 1263, 0, 317,
	1270, 318, 1269, 0, 1280, 319, 320, 321, 322, 323,
	324, 1216, 1249, 1181, 325, 1310, 1311, 695, 0, 326,
	327, 1256, 0, 1237, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1291, 351, 4696, 353, 1240, 1238, 1239,
	1246, 1242, 1241, 1245, 354, 355, 356, 357, 358, 1273,
	359, 361, 1267, 1266, 1186, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1258,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1192, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1281, 1282, 392, 1205, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1265, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1292, 402, 403, 404, 1278, 1279, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1288, 0, 4697,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1251,
	1252, 1255, 511, 1294, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1293, 512, 433, 1260, 1261, 0, 1221, 0, 434, 435,
	1295, 1253, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1289, 1298, 450, 451, 1299, 0, 452,
	453, 454, 455, 456, 457, 460, 1244, 1243, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 1183,
	296, 1302, 506, 507, 508, 509, 1206, 1254, 510, 1268,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1303, 523, 1304,
	1283, 524, 525, 1193, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1284, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1264, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1305, 582, 583,
	584, 4695, 586, 1194, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1247, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 1262, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1309, 630, 631, 632, 633,
	1285, 637, 638, 639, 0, 640, 641, 1180, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1274, 1275, 1276, 1277, 0, 660, 0, 651,
	652, 653, 654, 1286, 655, 1287, 1204, 656, 657, 658,
	659, 0, 661, 662, 0, 1187, 663, 664, 666, 668,
	669, 665, 667, 670, 1248, 671, 0, 0, 672, 673,
	674, 734, 1271, 1308, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1184, 0, 0, 0, 0, 0, 1226,
	1198, 1199, 1200, 3413, 3414, 1209, 0, 1179, 0, 0,
	0, 0, 0, 0, 1177, 1178, 297, 298, 300, 299,
	301, 302, 303, 304, 1210, 305, 306, 0, 1208, 0,
	0, 0, 1250, 1214, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 1263,
	0, 317, 1270, 318, 1269, 0, 1280, 319, 320, 321,
	322, 323, 324, 1216, 1249, 1181, 325, 1310, 1311, 695,
	0, 326, 327, 1256, 0, 1237, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1291, 351, 352, 353, 1240,
	1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356, 357,
	358, 1273, 359, 361, 1267, 1266, 1186, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1258, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1192, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1281, 1282, 392, 1205,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1265,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 1278, 1279, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1288,
	0, 1215, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1251, 1252, 1255, 511, 1294, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1293, 512, 433, 1260, 1261, 0, 1221, 0,
	434, 435, 1295, 1253, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1289, 1298, 450, 451, 1299,
	0, 452, 453, 454, 455, 456, 457, 460, 1244, 1243,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1183, 296, 1302, 506, 507, 508, 509, 1206, 1254,
	510, 1268, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 1283, 524, 525, 1193, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1284, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1264, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 1194, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1247, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 1262, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1309, 630, 631,
	632, 633, 1285, 637, 638, 639, 0, 640, 641, 1180,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1274, 1275, 1276, 1277, 0, 660,
	0, 651, 652, 653, 654, 1286, 655, 1287, 1204, 656,
	657, 658, 659, 0, 661, 662, 0, 1187, 663, 664,
	666, 668, 669, 665, 667, 670, 1248, 671, 0, 0,
	672, 673, 674, 734, 1271, 1308, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1184, 0, 0, 0, 0,
	0, 1226, 1198, 1199, 1200, 3411, 3412, 1209, 0, 1179,
	0, 0, 0, 0, 0, 0, 1177, 1178, 297, 298,
	300, 299, 301, 302, 303, 304, 1210, 305, 306, 0,
	1208, 0, 0, 0, 1250, 1214, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 1263, 0, 317, 1270, 318, 1269, 0, 1280, 319,
	320, 321, 322, 323, 324, 1216, 1249, 1181, 325, 1310,
	1311, 695, 0, 326, 327, 1256, 0, 1237, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355,
	356, 357, 358, 1273, 359, 361, 1267, 1266, 1186, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1258, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1192, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1281, 1282,
	392, 1205, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1265, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1292, 402, 403, 404, 1278, 1279,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1288, 0, 1215, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1251, 1252, 1255, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1293, 512, 433, 1260, 1261, 0,
	1221, 0, 434, 435, 1295, 1253, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1289, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	1244, 1243, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 1183, 296, 1302, 506, 507, 508, 509,
	1206, 1254, 510, 1268, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 1283, 524, 525, 1193, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1284, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1264, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 1194, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1247, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 1262, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1309,
	630, 631, 632, 633, 1285, 637, 638, 639, 0, 640,
	641, 1180, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1274, 1275, 1276, 1277,
	0, 660, 0, 651, 652, 653, 654, 1286, 655, 1287,
	1204, 656, 657, 658, 659, 0, 661, 662, 0, 1187,
	663, 664, 666, 668, 669, 665, 667, 670, 1248, 671,
	0, 0, 672, 673, 674, 734, 1271, 1308, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1184, 0, 0,
	0, 0, 0, 1226, 1198, 1199, 1200, 1196, 1197, 1209,
	0, 1179, 0, 0, 0, 0, 0, 0, 1177, 1178,
	297, 298, 300, 299, 301, 302, 303, 304, 1210, 305,
	306, 0, 1208, 0, 0, 0, 1250, 1214, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 1263, 0, 317, 1270, 318, 1269, 0,
	1280, 319, 320, 321, 322, 323, 324, 1216, 1249, 1181,
	325, 1310, 1311, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 1273, 359, 361, 1267, 1266,
	1186, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1258, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1192, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 1205, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1265, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	1278, 1279, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 1215, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 1260,
	1261, 0, 1221, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 1183, 296, 1302, 506, 507,
	508, 509, 1206, 1254, 510, 1268, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 1193,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1264, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 1194,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 1262, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1309, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 1180, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1274, 1275,
	1276, 1277, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 1204, 656, 657, 658, 659, 0, 661, 662,
	0, 1187, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 1271, 1308,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1184,
	0, 0, 0, 0, 0, 1226, 1198, 1199, 1200, 1196,
	1197, 1209, 0, 1179, 0, 0, 0, 0, 0, 0,
	2645, 2646, 297, 298, 300, 299, 301, 302, 303, 304,
	1210, 305, 306, 0, 1208, 0, 0, 0, 1250, 1214,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 1263, 0, 317, 1270, 318,
	1269, 0, 1280, 319, 320, 321, 322, 323, 324, 1216,
	1249, 0, 325, 1310, 1311, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 1273, 359, 361,
	1267, 1266, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1258, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1192, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 1205, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1265, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 1278, 1279, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 1215, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 1260, 1261, 0, 1221, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 0, 296, 1302,
	506, 507, 508, 509, 1206, 1254, 510, 1268, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 1193, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1264, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 1194, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 1262,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1309, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1274, 1275, 1276, 1277, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 1204, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	1271, 1308, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 1226, 1198, 1199,
	1200, 1196, 1197, 1209, 0, 2904, 0, 0, 0, 0,
	0, 0, 2902, 2903, 297, 298, 300, 299, 301, 302,
	303, 304, 1210, 305, 306, 0, 1208, 0, 0, 0,
	1250, 1214, 0, 0, 307, 0, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 1263, 0, 317,
	1270, 318, 1269, 0, 1280, 319, 320, 321, 322, 323,
	324, 1216, 1249, 0, 325, 1310, 1311, 695, 0, 326,
	327, 1256, 0, 1237, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1291, 351, 352, 353, 1240, 1238, 1239,
	1246, 1242, 1241, 1245, 354, 355, 356, 357, 358, 1273,
	359, 361, 1267, 1266, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1258,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1192, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1281, 1282, 392, 1205, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1265, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1292, 402, 403, 404, 1278, 1279, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1288, 0, 1215,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1251,
	1252, 1255, 511, 1294, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1293, 512, 433, 1260, 1261, 0, 1221, 0, 434, 435,
	1295, 1253, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1289, 1298, 450, 451, 1299, 0, 452,
	453, 454, 455, 456, 457, 460, 1244, 1243, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 0,
	296, 1302, 506, 507, 508, 509, 1206, 1254, 510, 1268,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1303, 523, 1304,
	1283, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1284, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1264, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 3406, 3407, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1247, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 1262, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1309, 630, 631, 632, 633,
	1285, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1274, 1275, 1276, 1277, 0, 660, 0, 651,
	652, 653, 654, 1286, 655, 1287, 1204, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 1248, 671, 0, 0, 672, 673,
	674, 734, 1271, 1308, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 1226,
	1198, 1199, 1200, 1196, 1197, 1209, 0, 0, 0, 0,
	0, 0, 0, 0, 2270, 2271, 297, 298, 300, 299,
	301, 302, 303, 304, 1210, 305, 306, 0, 1208, 0,
	0, 0, 1250, 1214, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 0, 1263,
	0, 317, 1270, 318, 1269, 0, 1280, 319, 320, 321,
	322, 323, 324, 1216, 1249, 1181, 325, 1310, 1311, 695,
	0, 326, 327, 1256, 0, 1237, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1291, 351, 352, 5101, 1240,
	1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356, 357,
	358, 1273, 359, 361, 1267, 1266, 1186, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1258, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1192, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1281, 1282, 392, 1205,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1265,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 1278, 1279, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1288,
	0, 1215, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1251, 1252, 1255, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1293, 512, 433, 1260, 1261, 0, 1221, 0,
	434, 435, 0, 1253, 0, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 1289, 1298, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 1244, 1243,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 1183, 296, 0, 506, 507, 508, 509, 1206, 1254,
	510, 1268, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 1283, 524, 525, 1193, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1284, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 1264, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 1194, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1247, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 1262, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1309, 630, 631,
	632, 633, 1285, 637, 638, 639, 0, 640, 641, 1180,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1274, 1275, 1276, 1277, 0, 660,
	0, 651, 652, 653, 654, 1286, 655, 1287, 1204, 656,
	657, 658, 659, 0, 5100, 662, 0, 1187, 663, 664,
	666, 668, 669, 665, 667, 670, 1248, 671, 0, 0,
	672, 673, 674, 734, 1271, 1308, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 2923,
	0, 1226, 1198, 1199, 1200, 1196, 1197, 1209, 0, 0,
	0, 0, 0, 0, 0, 0, 1177, 1178, 297, 298,
	300, 299, 301, 302, 303, 304, 1210, 305, 306, 0,
	1208, 0, 0, 0, 1250, 1214, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 1263, 0, 317, 1270, 318, 1269, 0, 1280, 319,
	320, 321, 322, 323, 324, 0, 1249, 0, 325, 1310,
	1311, 695, 0, 326, 327, 1256, 0, 1237, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355,
	356, 357, 358, 1273, 359, 361, 1267, 1266, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1258, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1281, 1282,
	392, 1205, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1265, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1292, 402, 403, 404, 1278, 1279,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1288, 0, 1215, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1251, 1252, 1255, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1293, 512, 433, 1260, 1261, 0,
	1221, 0, 434, 435, 1295, 1253, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1289, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	1244, 1243, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 0, 296, 1302, 506, 507, 508, 509,
	1206, 1254, 510, 1268, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 1283, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1284, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1264, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 1194, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1247, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 1262, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1309,
	630, 631, 632, 633, 1285, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1274, 1275, 1276, 1277,
	0, 660, 0, 651, 652, 653, 654, 1286, 655, 1287,
	1204, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 1248, 671,
	0, 0, 672, 673, 674, 734, 1271, 1308, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 1633, 0,
	1226, 1198, 1199, 1200, 1196, 1197, 1209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 1210, 0,
	0, 0, 1208, 1250, 1214, 0, 0, 307, 0, 308,
	309, 1290, 310, 311, 312, 313, 314, 315, 316, 688,
	1263, 0, 317, 1270, 318, 1269, 0, 1280, 319, 320,
	321, 322, 323, 324, 0, 1249, 0, 325, 1310, 1311,
	695, 0, 326, 327, 1256, 0, 1237, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1291, 351, 352, 353,
	1240, 1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356,
	357, 358, 1273, 359, 361, 1267, 1266, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1258, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1281, 1282, 392,
	1205, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1265, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1292, 402, 403, 404, 1278, 1279, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1288, 0, 1215, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1251, 1252, 1255, 511, 1294, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1293, 512, 433, 1260, 1261, 0, 1221,
	0, 434, 435, 1295, 1253, 1296, 436, 437, 438, 1297,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1289, 1298, 450, 451,
	1299, 0, 452, 453, 454, 455, 456, 457, 460, 1244,
	1243, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1300, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1301,
	504, 492, 0, 296, 1302, 506, 507, 508, 509, 1206,
	1254, 510, 1268, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1303, 523, 1304, 1283, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1284, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1264, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1305, 582, 583, 584, 585, 586, 1194, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1247,
	610, 611, 593, 594, 612, 613, 1306, 614, 615, 616,
	617, 618, 619, 620, 1262, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1309, 630,
	631, 632, 633, 1285, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1274, 1275, 1276, 1277, 0,
	660, 0, 651, 652, 653, 654, 1286, 655, 1287, 1204,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 1248, 671, 0,
	0, 672, 673, 674, 734, 1271, 1308, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 1170, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 1210, 0, 0,
	0, 1208, 1250, 0, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 1249, 0, 325, 693, 694, 695,
	0, 326, 327, 1256, 0, 1237, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1291, 351, 352, 353, 1240,
	1238, 1239, 1246, 1242, 1241, 1245, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1281, 1282, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1288,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1251, 1252, 1255, 511, 1294, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1293, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 1295, 1253, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1335,
	446, 448, 447, 0, 449, 1289, 1298, 450, 451, 1299,
	0, 452, 453, 454, 455, 456, 457, 460, 1244, 1243,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 0, 296, 1302, 506, 507, 508, 509, 0, 1254,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	1341, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 1283, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 1284, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 724, 1343, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 252, 605, 606, 604, 607, 608, 609, 1247, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 1285, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 254, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 1286, 655, 1287, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 1248, 671, 0, 0,
	672, 673, 674, 1751, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 246, 682,
	683, 738, 684, 685, 686, 1349, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 1339, 0, 2112, 0, 1250, 0,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	1249, 0, 325, 693, 694, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1335, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 0, 296, 1302,
	506, 507, 508, 509, 0, 1254, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 1341, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 724, 1343, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 252, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 254, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 1751,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 246, 682, 683, 738, 684, 685,
	686, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3570, 0, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 0, 2112, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 1250,
	0, 0, 0, 307, 0, 308, 309, 1290, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 1249, 0, 325, 693, 694, 695, 0, 326, 327,
	1256, 0, 1237, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246,
	1242, 1241, 1245, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1281, 1282, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1292,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1288, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1251, 1252,
	1255, 511, 1294, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1293,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 1295,
	1253, 1296, 436, 437, 438, 1297, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1335, 446, 448, 447,
	0, 449, 1289, 1298, 450, 451, 1299, 0, 452, 453,
	454, 455, 456, 457, 460, 1244, 1243, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1300, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1301, 504, 492, 0, 296,
	1302, 506, 507, 508, 509, 0, 1254, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 1341, 518, 519,
	520, 0, 0, 521, 522, 717, 1303, 523, 1304, 1283,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1284, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1305, 582, 583, 584,
	585, 586, 724, 1343, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1247, 610, 611, 593, 594,
	612, 613, 1306, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 1285,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 1286, 655, 1287, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 1248, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 1331, 0, 1349, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1250, 0,
	0, 1339, 307, 1337, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	1249, 0, 325, 693, 694, 695, 0, 326, 327, 1256,
	0, 1237, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242,
	1241, 1245, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1281, 1282, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1288, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1251, 1252, 1255,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1293, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1295, 1253,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1335, 446, 448, 447, 0,
	449, 1289, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 1244, 1243, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 0, 296, 1302,
	506, 507, 508, 509, 0, 1254, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 1341, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 1283, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1284, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 724, 1343, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1247, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 1285, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 1286, 655, 1287, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 1248, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 1349, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1250, 0, 0,
	1339, 307, 1337, 308, 309, 1290, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 1249,
	0, 325, 693, 694, 695, 0, 326, 327, 1256, 0,
	1237, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1291, 351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241,
	1245, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1281, 1282, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1292, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1288, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1251, 1252, 1255, 511,
	1294, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1293, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1295, 1253, 1296,
	436, 437, 438, 1297, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1335, 446, 448, 447, 0, 449,
	1289, 1298, 450, 451, 1299, 0, 452, 453, 454, 455,
	456, 457, 460, 1244, 1243, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1300, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1301, 504, 492, 0, 296, 1302, 506,
	507, 508, 509, 0, 1254, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 1341, 518, 519, 520, 0,
	0, 521, 522, 717, 1303, 523, 1304, 1283, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1284, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1305, 582, 583, 584, 585, 586,
	724, 1343, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1247, 610, 611, 593, 594, 612, 613,
	1306, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 1285, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	1286, 655, 1287, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 1248, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 1349, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1250, 0, 0, 1339,
	307, 1337, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 1249, 0,
	325, 693, 694, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 0, 296, 1302, 506, 507,
	508, 509, 0, 1254, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 1349, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1250, 0, 0, 0, 307,
	4507, 308, 309, 1290, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 1249, 0, 325,
	693, 694, 695, 0, 326, 327, 1256, 0, 1237, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1291, 351,
	352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1281,
	1282, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1292, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1288, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1251, 1252, 1255, 511, 1294, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1293, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 1295, 1253, 1296, 436, 437,
	438, 1297, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1289, 1298,
	450, 451, 1299, 0, 452, 453, 454, 455, 456, 457,
	460, 1244, 1243, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1300, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1301, 504, 492, 0, 296, 1302, 506, 507, 508,
	509, 0, 1254, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1303, 523, 1304, 1283, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1284,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1305, 582, 583, 584, 585, 586, 724, 1343,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1247, 610, 611, 593, 594, 612, 613, 1306, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 1285, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 1286, 655,
	1287, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 1248,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 2749, 2750,
	2751, 2768, 2769, 2770, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 2771,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 2008,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 1993, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 2761, 0, 337, 338, 339, 336,
	340, 0, 341, 2757, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 2762, 2763, 2764, 2765, 393, 394, 395, 702, 0,
	0, 2756, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	2766, 2767, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 2759, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 2760, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 1992, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 1170, 0, 1628, 2746, 2747, 2748, 2772, 2758,
	2752, 0, 2754, 2755, 2753, 2740, 2741, 2742, 2743, 2744,
	2745, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 1290, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	1592, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1291, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1292, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1294, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1293, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1295, 713, 1296,
	436, 437, 438, 1297, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 1298, 450, 451, 1299, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1300, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1301, 504, 492, 0, 0, 1302, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1303, 523, 1304, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1305, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 252, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	1306, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 254, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 1751, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 246, 682, 683, 738, 684, 685, 686,
	0, 1748, 247, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 203, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 1592,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1293, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1295, 713, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 0, 0, 1302, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 252, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 254, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 1751, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 246, 682, 683, 738, 684, 685, 686, 1628,
	1627, 247, 0, 0, 0, 1625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	203, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	1290, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 1592, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1291, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1292, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1294, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1293, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 1295, 713, 1296, 436, 437, 438, 1297, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 1298, 450, 451, 1299,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1300, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1301, 504,
	492, 0, 0, 1302, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1303,
	523, 1304, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1305,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 1306, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1628, 1627, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 1775, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 1290, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 1592, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1291, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1292, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1294, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1293, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1295, 713,
	1296, 436, 437, 438, 1297, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 1298, 450, 451, 1299, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1300, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1301, 504, 492, 0, 0, 1302,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1303, 523, 1304, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1305, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 1306, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1628, 1627, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 3902, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 1290, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 1592, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1291, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1292, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 1294, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 1293, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 1295, 713, 1296, 436, 437, 438,
	1297, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 1298, 450,
	451, 1299, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1300, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1301, 504, 492, 0, 0, 1302, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1303, 523, 1304, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	2508, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1305, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 1306, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1628, 2417, 0,
	0, 0, 0, 2418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 1775, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 1290, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 1592, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1291, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1292, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 1294, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	1293, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	1295, 713, 1296, 436, 437, 438, 1297, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 2416, 448,
	447, 0, 449, 714, 1298, 450, 451, 1299, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1300, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1301, 504, 492, 0,
	0, 1302, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1303, 523, 1304,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1305, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 1306, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1628, 1627, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 1775, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 1592,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1293, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1295, 713, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 0, 0, 1302, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	1170, 0, 291, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	1757, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 252, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 254, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 1751, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 246, 682, 683, 738, 684, 685, 686, 0, 0,
	247, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 203,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 3181, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 2126, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 5268, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 291, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 3852, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 291, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 1745, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 1349, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1250, 0, 0, 0,
	307, 3303, 308, 309, 1290, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 1249, 0,
	325, 693, 694, 695, 0, 326, 327, 1256, 0, 1237,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1291,
	351, 352, 353, 1240, 1238, 1239, 1246, 1242, 1241, 1245,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1281, 1282, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1292, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1288, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1251, 1252, 1255, 511, 1294,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1293, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1295, 1253, 1296, 436,
	437, 438, 1297, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1289,
	1298, 450, 451, 1299, 0, 452, 453, 454, 455, 456,
	457, 460, 1244, 1243, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1300, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1301, 504, 492, 0, 296, 1302, 506, 507,
	508, 509, 0, 1254, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1303, 523, 1304, 1283, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1284, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1305, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1247, 610, 611, 593, 594, 612, 613, 1306,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 1285, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 1286,
	655, 1287, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	1248, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 4016, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 993, 0, 893, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 2495, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 900, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 990, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 992, 0, 636, 627, 898, 642, 643,
	644, 645, 646, 899, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	2171, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 903, 0, 0, 0, 307, 0, 308,
	309, 1290, 310, 311, 312, 313, 314, 315, 316, 0,
	2177, 0, 317, 2167, 318, 2183, 0, 2190, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 2193, 2194,
	0, 0, 326, 327, 0, 0, 1592, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1291, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 1273, 359, 361, 2181, 2180, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1258, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 0, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	2179, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1292, 402, 403, 404, 2188, 2189, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 0, 0, 0, 511, 1294, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1293, 512, 433, 2174, 2175, 0, 2170,
	0, 434, 435, 1295, 0, 1296, 436, 437, 438, 1297,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 0, 1298, 450, 451,
	1299, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1300, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1301,
	504, 492, 0, 0, 1302, 506, 507, 508, 509, 0,
	0, 510, 2182, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 0,
	1303, 523, 1304, 0, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 2164,
	537, 538, 539, 2165, 540, 541, 542, 0, 543, 0,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 2178, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1305, 582, 583, 584, 585, 586, 0, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 1306, 614, 615, 616,
	617, 618, 619, 620, 2176, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 2192, 630,
	631, 632, 633, 0, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 2184, 2185, 2186, 2187, 0,
	660, 0, 651, 652, 653, 654, 0, 655, 0, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 0, 2168, 2191, 0, 676, 675,
	677, 678, 679, 0, 680, 681, 0, 0, 0, 0,
	682, 683, 0, 684, 685, 686, 893, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 4143, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 2158, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 900, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 4142, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 898,
	642, 643, 644, 645, 646, 899, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 4141, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 893, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 2198, 305,
	306, 0, 0, 0, 0, 903, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 900, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	2197, 600, 601, 602, 603, 0, 2199, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 898, 642, 643, 644,
	645, 646, 899, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 2196, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	893, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 2149, 305, 306, 0, 0,
	0, 0, 903, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	900, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 2148, 600, 601,
	602, 603, 0, 2150, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 898, 642, 643, 644, 645, 646, 899,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 2147, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 891, 0, 893, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 903,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 900, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 898, 642, 643, 644, 645, 646, 899, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 893, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 903, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 900, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 898, 642,
	643, 644, 645, 646, 899, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 893, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 903, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 900, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 2548, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 2549,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 898, 642, 643, 644, 645,
	646, 899, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 2550, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 291,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 903, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 1628, 1627, 0, 0, 0, 0, 1625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 903, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 1290, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 1592, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1291, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1292, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 1294, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1293, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 1295, 713, 1296, 436, 437,
	438, 1297, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 1298,
	450, 451, 1299, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1300, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1301, 504, 492, 0, 0, 1302, 506, 507, 508,
	509, 4246, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1303, 523, 1304, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1305, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 1306, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1628, 1627,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 1290,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 1592, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1291, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1292, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1294, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1293, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 1295, 713, 1296, 436, 437, 438, 1297, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 1298, 450, 451, 1299, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1300,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1301, 504, 492,
	0, 0, 1302, 506, 507, 508, 509, 3802, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1303, 523,
	1304, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1305, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 1306, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1807, 0, 1628, 1627, 0, 0,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 1290, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 1592, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1291, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 1805, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1292,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 1294, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 1293,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 1295,
	713, 1296, 436, 437, 438, 1297, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 1298, 450, 451, 1299, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1300, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1301, 504, 492, 0, 0,
	1302, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1303, 523, 1304, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 1806,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1305, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 1804, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 1306, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1678, 0, 1628, 1627, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 1290, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	1592, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1291, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1292, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1680, 708, 709, 511,
	1294, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1293, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1295, 713, 1296,
	436, 437, 438, 1297, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 1298, 450, 451, 1299, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1300, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1301, 504, 492, 0, 0, 1302, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1303, 523, 1304, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1305, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	1306, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1623, 0, 1628, 1627, 0, 0, 0, 0, 1625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 1290, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 1592, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1291, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1292, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 1294, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1293, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 1295, 713, 1296, 436, 437,
	438, 1297, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 1298,
	450, 451, 1299, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1300, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1301, 504, 492, 0, 0, 1302, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1303, 523, 1304, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1305, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 1306, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1628, 1627,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 1290,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 1592, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1291, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1292, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1294, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1293, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 1295, 713, 1296, 436, 437, 438, 1297, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 1298, 450, 451, 1299, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1300,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1301, 504, 492,
	0, 0, 1302, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1303, 523,
	1304, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1305, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 1306, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1628, 1627, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 1290, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	1592, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1291, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1292, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1294, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1293, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1295, 713, 1296,
	436, 437, 438, 1297, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 1298, 450, 451, 1299, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1300, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1301, 504, 492, 0, 0, 1302, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1303, 523, 1304, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1305, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	1306, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1628, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 1290, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 1592, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1291, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1292, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 1294, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1293, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 1295, 713, 1296, 436, 437, 438, 1297,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 1298, 450, 451,
	1299, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1300, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1301,
	504, 492, 0, 0, 1302, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1303, 523, 1304, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1305, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 1306, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 3083, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 3844,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 3087,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 3843, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 3086, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 3840, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 3842, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 3839, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 3085, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 3841, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 3083, 326, 327, 696, 0, 0, 3077,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 3079, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 3087, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 3086, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 3076, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 3085, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	3084, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1887, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 1886, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	1885, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 1888, 591, 592, 599, 600, 601,
	602, 603, 0, 1884, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 1882, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 1883, 675,
	677, 678, 679, 737, 680, 681, 1596, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1598, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 1341,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1593, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1595, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 1341, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1499, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1501, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 1341, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	771, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 770, 303, 304, 759, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 762, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	768, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 764, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 758, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 759, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 762, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 763, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 764, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 759, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 762, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 763, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 764, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 759, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 762, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	4256, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 764, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 2453, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 1341, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 3738,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 3273, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	3272, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 2516, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 2460, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 2459, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	2446, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 2448, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	2410, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 1341,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1723, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1722, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1616, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1609, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1611, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1418, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1417, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1408, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1407, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1405, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1404, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1400, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1399, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	740, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 282, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 762, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	763, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 764, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 2557, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 2555, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	2553, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 2466, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 2223, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	2217, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 977, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 976, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 975,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 860, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 849, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	858, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 851, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 857, 401, 853, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 854, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 852, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 855,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 856, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 850, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	843, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	849, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 858, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 851, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 857, 401, 853, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 854, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 852, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 855, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 856, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 850, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 3843,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	4592, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1446, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 1449, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 1447, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 831, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 830, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 829, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 1450, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 827, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1446, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 1449, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 1447, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 831, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 830, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 829, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 1450, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 827,
	729, 730, 731, 0, 660, 0, 651, 1448, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	838, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 836, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 749, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 748, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	747, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 3181, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 4898, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 3679,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 4479, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 4200, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 2958, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 3181, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 3312, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	2354, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 830,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 829, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 827, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 2527,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	2514, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1779, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1771, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 821, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 817,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 822, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 831, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 830, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 829, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 1756, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 827, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1729, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1728, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1713, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1711, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1706, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1683, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1681, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1676, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1637, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1601, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1452, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 830, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 829, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 827, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1423, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1422, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1414, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1413, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 1366, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 841, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 821, 0, 291, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 817, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 816, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 822, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 831, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 830,
	583, 584, 585, 586, 818, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 829, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 819, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 827, 729, 730, 731, 0, 660, 0,
	651, 823, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 810, 0, 291, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 811, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 773, 0, 291, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	766, 0, 291, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 744, 0,
	291, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 3875, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 830,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 829, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 827, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 3781, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 3755, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 3751, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 3703, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	3701, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 3689, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 3686, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 3283, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 291, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 0, 713, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 0, 523, 0, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 811, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 291, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 2484, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 0, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 291, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1385, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 1314, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 0,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 0, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 0, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 0, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1719, 0, 1430, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 0, 318, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 0, 0, 0, 0, 326, 327, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	1432, 354, 355, 356, 357, 358, 0, 359, 361, 0,
	0, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 0,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 0, 0, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 0, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1718, 0, 0, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	0, 0, 0, 0, 0, 434, 435, 0, 0, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	0, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 0, 510, 0, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 0, 0, 523, 0, 0, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 0, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 0,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	0, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1433, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 0, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 0, 630, 631, 632, 633, 0, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 0,
	0, 0, 0, 0, 660, 0, 651, 652, 653, 654,
	0, 655, 0, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 0, 0,
	0, 0, 676, 675, 677, 678, 679, 0, 680, 681,
	1640, 0, 1430, 0, 682, 683, 0, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 0, 318, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	0, 0, 0, 0, 326, 327, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 1432, 354,
	355, 356, 357, 358, 0, 359, 361, 0, 0, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 0, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 0, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1639, 0, 0, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 0, 0,
	0, 0, 0, 434, 435, 0, 0, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 0, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 0, 510, 0, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 0, 0, 523, 0, 0, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 0, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 0, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 0, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1433, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 0, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	0, 630, 631, 632, 633, 0, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 0, 0, 0,
	0, 0, 660, 0, 651, 652, 653, 654, 0, 655,
	0, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 0, 0, 0, 0,
	676, 675, 677, 678, 679, 0, 680, 681, 1428, 0,
	1430, 0, 682, 683, 0, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 0, 318, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 0, 0,
	0, 0, 326, 327, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 1432, 354, 355, 356,
	357, 358, 0, 359, 361, 0, 0, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 0, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	0, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1427, 0, 0, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 0, 0, 0, 0,
	0, 434, 435, 0, 0, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 0, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	0, 510, 0, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 0,
	0, 523, 0, 0, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 0,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 0, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 0, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1433,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 0, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 0, 630,
	631, 632, 633, 0, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 0, 0, 0, 0, 0,
	660, 0, 651, 652, 653, 654, 0, 655, 0, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 0, 0, 0, 0, 676, 675,
	677, 678, 679, 0, 680, 681, 2237, 0, 1430, 0,
	682, 683, 0, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 0,
	317, 0, 318, 0, 0, 0, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 0, 0, 0, 0,
	326, 327, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 1432, 354, 355, 356, 357, 358,
	0, 359, 361, 0, 0, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 0, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 0, 0, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 0, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	0, 0, 0, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 0, 0, 0, 0, 0, 434,
	435, 0, 0, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 0, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 0, 510,
	0, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 0, 0, 523,
	0, 0, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 0, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 0, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 0, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 0, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1433, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 0, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 0, 630, 631, 632,
	633, 0, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 0, 0, 0, 0, 0, 660, 0,
	651, 652, 653, 654, 0, 655, 0, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 0, 0, 0, 0, 676, 675, 677, 678,
	679, 0, 680, 681, 2204, 0, 1430, 0, 682, 683,
	0, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 0, 317, 0,
	318, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 0, 0, 0, 0, 326, 327,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 1432, 354, 355, 356, 357, 358, 0, 359,
	361, 0, 0, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 0, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 0, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 0, 0,
	0, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 0, 0, 0, 0, 0, 434, 435, 0,
	0, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 0, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 0, 510, 0, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 0, 0, 523, 0, 0,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 0, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 0, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 0, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 0, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1433, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	0, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 0, 630, 631, 632, 633, 0,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 0, 0, 0, 0, 0, 660, 0, 651, 652,
	653, 654, 0, 655, 0, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	0, 0, 0, 0, 676, 675, 677, 678, 679, 1430,
	680, 681, 0, 0, 0, 0, 682, 683, 0, 684,
	685, 686, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	0, 317, 0, 318, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 0, 0, 0,
	0, 326, 327, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 1432, 354, 355, 356, 357,
	358, 0, 359, 361, 0, 0, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 0, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 0,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 0, 0, 0, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 0, 0, 0, 0, 0,
	434, 435, 0, 0, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 0, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 0,
	510, 0, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 0, 0,
	523, 0, 0, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 0, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 0, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 0, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1433, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 0, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 0, 630, 631,
	632, 633, 0, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 0, 0, 0, 0, 0, 660,
	0, 651, 652, 653, 654, 0, 655, 0, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 0, 0, 0, 0, 676, 675, 677,
	678, 679, 0, 680, 681, 0, 0, 0, 0, 682,
	683, 0, 684, 685, 686, 1937, 1938, 0, 1970, 1971,
	1972, 1981, 1982, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 1968,
	0, 0, 0, 0, 0, 1937, 1938, 1940, 1970, 1971,
	1972, 1981, 1982, 1983, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 1968,
	0, 0, 0, 0, 1993, 0, 0, 1940, 0, 0,
	0, 0, 0, 1939, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1993, 0, 0, 0, 0, 0,
	0, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1962, 1963, 1964, 1965, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1962, 1963, 1964, 1965, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 1967, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 1985, 1978, 0, 0, 1988, 0, 0,
	1954, 1955, 0, 0, 1967, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 1984, 0, 1985, 0, 0, 0, 0, 0, 0,
	1954, 1955, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 1966, 0, 1937, 1938, 0, 1970, 1971,
	1972, 1981, 1982, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 1961, 0, 1974, 1968,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 0, 0,
	0, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 1992, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 0, 0, 0, 1977, 0, 5023, 0, 0, 0,
	0, 1962, 1963, 1964, 1965, 1951, 1952, 1958, 1980, 1957,
	1953, 1945, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 0, 0, 0, 0, 0, 4926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1937, 1938, 0, 1970, 1971, 1972, 1981,
	1982, 1983, 0, 0, 1978, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 1967, 1969, 1974, 1968, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 1984, 0, 1985, 0, 1987, 0, 0, 0, 0,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 0, 0, 1976, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 1962,
	1963, 1964, 1965, 0, 0, 0, 0, 0, 0, 1945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982, 1983,
	0, 0, 1978, 1966, 0, 1988, 0, 0, 0, 0,
	0, 0, 1967, 1969, 1974, 1968, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 1961, 0, 0, 1984,
	0, 1985, 0, 1987, 0, 0, 0, 0, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1993, 0, 0, 0, 1979, 0, 1976, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 1962, 1963, 1964,
	1965, 0, 0, 0, 1977, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 0, 0, 0, 0, 0, 4877, 0, 0, 1937,
	1938, 0, 1970, 1971, 1972, 1981, 1982, 1983, 0, 0,
	1978, 1966, 0, 1988, 0, 0, 0, 0, 0, 0,
	1967, 1969, 1974, 1968, 0, 0, 0, 0, 0, 0,
	0, 1940, 0, 0, 1961, 0, 0, 1984, 0, 1985,
	0, 1987, 0, 0, 0, 0, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1993, 0,
	0, 0, 1979, 0, 1976, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 1962, 1963, 1964, 1965, 0,
	0, 0, 1977, 0, 0, 1945, 0, 0, 0, 0,
	0, 0, 0, 1951, 1952, 1958, 1980, 1957, 1953, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	0, 0, 0, 0, 4876, 0, 0, 1937, 1938, 0,
	1970, 1971, 1972, 1981, 1982, 1983, 0, 0, 1978, 1966,
	0, 1988, 0, 0, 0, 0, 0, 0, 1967, 1969,
	1974, 1968, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 1961, 0, 0, 1984, 0, 1985, 0, 1987,
	0, 0, 0, 0, 1954, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 0, 0, 0,
	1979, 0, 1976, 0, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 1962, 1963, 1964, 1965, 0, 0, 0,
	1977, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950, 1948,
	1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0, 0,
	0, 0, 4680, 0, 0, 1937, 1938, 0, 1970, 1971,
	1972, 1981, 1982, 1983, 0, 0, 1978, 1966, 0, 1988,
	0, 0, 0, 0, 0, 0, 1967, 1969, 1974, 1968,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	1961, 0, 0, 1984, 0, 1985, 0, 1987, 0, 0,
	0, 0, 1954, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 1979, 0,
	1976, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 1962, 1963, 1964, 1965, 0, 0, 0, 1977, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 1951,
	1952, 1958, 1980, 1957, 1953, 0, 1950, 1948, 1949, 1941,
	1942, 1943, 1944, 1946, 1947, 0, 0, 0, 0, 0,
	4503, 0, 0, 1937, 1938, 0, 1970, 1971, 1972, 1981,
	1982, 1983, 0, 0, 1978, 1966, 0, 1988, 0, 0,
	0, 0, 0, 0, 1967, 1969, 1974, 1968, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 1961, 0,
	0, 1984, 0, 1985, 0, 1987, 0, 0, 0, 0,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 1979, 0, 1976, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 1962,
	1963, 1964, 1965, 0, 0, 0, 1977, 0, 0, 1945,
	0, 0, 0, 0, 0, 0, 0, 1951, 1952, 1958,
	1980, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942, 1943,
	1944, 1946, 1947, 0, 0, 0, 0, 0, 4408, 0,
	0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982, 1983,
	0, 0, 1978, 1966, 0, 1988, 0, 0, 0, 0,
	0, 0, 1967, 1969, 1974, 1968, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 1961, 0, 0, 1984,
	0, 1985, 0, 1987, 0, 0, 0, 0, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1993, 0, 0, 0, 1979, 0, 1976, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 1962, 1963, 1964,
	1965, 0, 0, 0, 1977, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 0, 0, 0, 0, 0, 4407, 0, 0, 1937,
	1938, 0, 1970, 1971, 1972, 1981, 1982, 1983, 0, 0,
	1978, 1966, 0, 1988, 0, 0, 0, 0, 0, 0,
	1967, 1969, 1974, 1968, 0, 0, 0, 0, 0, 0,
	0, 1940, 0, 0, 1961, 0, 0, 1984, 0, 1985,
	0, 1987, 0, 0, 0, 0, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1993, 0,
	0, 0, 1979, 0, 1976, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 1962, 1963, 1964, 1965, 0,
	0, 0, 1977, 0, 0, 1945, 0, 0, 0, 0,
	0, 0, 0, 1951, 1952, 1958, 1980, 1957, 1953, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	0, 0, 0, 0, 4406, 0, 0, 1937, 1938, 0,
	1970, 1971, 1972, 1981, 1982, 1983, 0, 0, 1978, 1966,
	0, 1988, 0, 0, 0, 0, 0, 0, 1967, 1969,
	1974, 1968, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 1961, 0, 0, 1984, 0, 1985, 0, 1987,
	0, 0, 0, 0, 1954, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 0, 0, 0,
	1979, 0, 1976, 0, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 1962, 1963, 1964, 1965, 0, 0, 0,
	1977, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950, 1948,
	1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0, 0,
	0, 0, 4021, 0, 0, 1937, 1938, 0, 1970, 1971,
	1972, 1981, 1982, 1983, 0, 0, 1978, 1966, 0, 1988,
	0, 0, 0, 0, 0, 0, 1967, 1969, 1974, 1968,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	1961, 0, 0, 1984, 0, 1985, 0, 1987, 0, 0,
	0, 0, 1954, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 1979, 0,
	1976, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 1962, 1963, 1964, 1965, 0, 0, 0, 1977, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 1951,
	1952, 1958, 1980, 1957, 1953, 0, 1950, 1948, 1949, 1941,
	1942, 1943, 1944, 1946, 1947, 0, 0, 0, 0, 0,
	3488, 0, 0, 1937, 1938, 0, 1970, 1971, 1972, 1981,
	1982, 1983, 0, 0, 1978, 1966, 0, 1988, 0, 0,
	0, 0, 0, 0, 1967, 1969, 1974, 1968, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 1961, 0,
	0, 1984, 0, 1985, 0, 1987, 0, 0, 0, 0,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 1979, 0, 1976, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 1962,
	1963, 1964, 1965, 0, 0, 0, 1977, 0, 0, 1945,
	0, 0, 0, 0, 0, 0, 0, 1951, 1952, 1958,
	1980, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942, 1943,
	1944, 1946, 1947, 0, 0, 0, 0, 0, 3487, 0,
	0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982, 1983,
	0, 0, 1978, 1966, 0, 1988, 0, 0, 0, 0,
	0, 0, 1967, 1969, 1974, 1968, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 1961, 0, 0, 1984,
	0, 1985, 0, 1987, 0, 0, 0, 0, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1993, 0, 0, 0, 1979, 0, 1976, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 1962, 1963, 1964,
	1965, 0, 0, 0, 1977, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 0, 0, 0, 0, 0, 3486, 0, 0, 0,
	0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982, 1983,
	1978, 1966, 0, 1988, 0, 2384, 0, 0, 0, 0,
	1967, 1969, 0, 0, 1974, 1968, 0, 0, 0, 0,
	0, 0, 0, 1940, 1961, 0, 0, 1984, 0, 1985,
	0, 0, 0, 1987, 0, 0, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1993, 0, 1979, 0, 1976, 0, 0, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 2385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 1962, 1963, 1964,
	1965, 0, 1977, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 1951, 1952, 1958, 1980, 1957, 1953, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	0, 0, 0, 0, 3485, 0, 0, 0, 0, 1937,
	1938, 0, 1970, 1971, 1972, 1981, 1982, 1983, 0, 1966,
	1978, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	1967, 1969, 1974, 1968, 0, 0, 0, 0, 0, 0,
	0, 1940, 1961, 0, 0, 0, 0, 1984, 0, 1985,
	0, 1987, 0, 0, 0, 0, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1993, 0,
	1979, 0, 0, 0, 1976, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	0, 0, 2316, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 2314, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 1962, 1963, 1964, 1965, 0,
	1977, 0, 0, 0, 0, 1945, 0, 0, 0, 0,
	0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950, 1948,
	1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0, 0,
	3450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 1966,
	0, 1988, 0, 0, 0, 0, 0, 0, 1967, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1961, 0, 0, 1984, 0, 1985, 0, 0,
	0, 0, 0, 0, 1954, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 2386, 0, 0, 0, 0, 0,
	1979, 0, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1937, 1938, 1960, 1970, 1971,
	1972, 1981, 1982, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1992, 0, 0, 0, 1974, 1968,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 2387, 0,
	0, 0, 0, 1939, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 1990, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950, 1948,
	1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2315, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 1962, 1963, 1964, 1965, 0, 0, 0, 0, 0,
	0, 1945, 5177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1937, 1938, 0, 1970, 1971, 1972, 1981,
	1982, 1983, 0, 0, 1978, 0, 0, 1988, 0, 0,
	0, 0, 1992, 0, 1967, 1969, 1974, 1968, 0, 0,
	0, 0, 0, 2313, 0, 1940, 0, 0, 0, 0,
	0, 1984, 0, 1985, 0, 1987, 0, 0, 0, 0,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 0, 0, 1976, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1951,
	1952, 1958, 1980, 1957, 1953, 0, 1950, 1948, 1949, 1941,
	1942, 1943, 1944, 1946, 1947, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 1962,
	1963, 1964, 1965, 0, 0, 0, 0, 0, 0, 1945,
	0, 3550, 0, 0, 0, 0, 5176, 0, 3549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982, 1983,
	0, 0, 1978, 1966, 0, 1988, 0, 0, 0, 0,
	0, 0, 1967, 1969, 1974, 1968, 0, 0, 0, 0,
	3421, 0, 0, 1940, 0, 0, 1961, 0, 0, 1984,
	0, 1985, 0, 1987, 0, 0, 0, 0, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1993, 0, 0, 0, 1979, 0, 1976, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3422,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 1962, 1963, 1964,
	1965, 0, 0, 0, 1977, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 0, 2931, 0, 0, 0, 0, 0, 0, 1937,
	1938, 0, 1970, 1971, 1972, 1981, 1982, 1983, 0, 0,
	1978, 1966, 0, 1988, 0, 0, 0, 0, 0, 0,
	1967, 1969, 1974, 1968, 0, 0, 0, 2930, 0, 0,
	0, 1940, 0, 0, 1961, 0, 0, 1984, 0, 1985,
	0, 1987, 0, 0, 0, 0, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1993, 0,
	0, 0, 1979, 0, 1976, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 1962, 1963, 1964, 1965, 0,
	0, 0, 1977, 0, 0, 1945, 0, 0, 0, 0,
	0, 0, 0, 1951, 1952, 1958, 1980, 1957, 1953, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 1937, 1938, 0,
	1970, 1971, 1972, 1981, 1982, 1983, 0, 0, 1978, 1966,
	0, 1988, 0, 0, 0, 0, 0, 0, 1967, 1969,
	1974, 1968, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 1961, 0, 0, 1984, 0, 1985, 0, 1987,
	0, 0, 0, 0, 1954, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 0, 0, 0,
	1979, 0, 1976, 0, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 1962, 1963, 1964, 1965, 0, 0, 0,
	1977, 0, 0, 1945, 0, 4781, 0, 0, 0, 0,
	0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950, 1948,
	1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 1937, 1938, 0, 1970, 1971,
	1972, 1981, 1982, 1983, 0, 0, 1978, 1966, 0, 1988,
	0, 0, 0, 0, 0, 0, 1967, 1969, 1974, 1968,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	1961, 0, 0, 1984, 0, 1985, 0, 1987, 0, 0,
	0, 0, 1954, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 1979, 0,
	1976, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 1962, 1963, 1964, 1965, 0, 0, 0, 1977, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 1951,
	1952, 1958, 1980, 1957, 1953, 0, 1950, 1948, 1949, 1941,
	1942, 1943, 1944, 1946, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 1937, 1938, 0, 1970, 1971, 1972, 1981,
	1982, 1983, 0, 0, 1978, 1966, 0, 1988, 0, 0,
	0, 0, 0, 0, 1967, 1969, 1974, 1968, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 1961, 0,
	0, 1984, 0, 1985, 0, 1987, 0, 0, 0, 0,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 1979, 0, 1976, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 1167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 1962,
	1963, 1964, 1965, 0, 0, 0, 1977, 0, 0, 1945,
	0, 0, 0, 0, 0, 0, 0, 1951, 1952, 1958,
	1980, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942, 1943,
	1944, 1946, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982, 1983,
	0, 0, 1978, 1966, 0, 1988, 0, 0, 0, 0,
	0, 0, 1967, 1969, 1974, 1968, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 1961, 0, 0, 1984,
	0, 1985, 0, 1987, 0, 0, 0, 0, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1993, 0, 0, 0, 1979, 0, 1976, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 1962, 1963, 1964,
	1965, 0, 0, 0, 1977, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 1937,
	1938, 0, 1970, 1971, 1972, 1981, 1982, 1983, 0, 0,
	1978, 1966, 0, 1988, 0, 0, 0, 0, 0, 0,
	1967, 1969, 1974, 1968, 0, 0, 0, 0, 0, 0,
	0, 1940, 0, 0, 1961, 0, 0, 1984, 0, 1985,
	0, 1987, 0, 0, 0, 0, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1993, 0,
	0, 0, 1979, 0, 1976, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 1962, 1963, 1964, 1965, 0,
	0, 0, 1977, 0, 0, 1945, 0, 4224, 0, 0,
	0, 0, 0, 1951, 1952, 1958, 1980, 1957, 1953, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 1937, 1938, 0,
	1970, 1971, 1972, 1981, 1982, 1983, 0, 0, 1978, 1966,
	0, 1988, 0, 0, 0, 0, 0, 0, 1967, 1969,
	1974, 1968, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 1961, 0, 0, 1984, 0, 1985, 0, 1987,
	0, 0, 0, 0, 1954, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 0, 0, 0,
	1979, 0, 1976, 0, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 1962, 1963, 1964, 1965, 0, 0, 0,
	1977, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950, 1948,
	1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 1966, 0, 1988,
	0, 0, 0, 0, 0, 0, 1967, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 1984, 0, 1985, 0, 0, 0, 0,
	0, 0, 1954, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	1976, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1937, 1938, 1960, 1970, 1971, 1972, 1981,
	1982, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 0, 0, 0, 1974, 1968, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 0, 0, 0, 0,
	0, 1939, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 1990, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1951,
	1952, 1958, 1980, 1957, 1953, 0, 1950, 1948, 1949, 1941,
	1942, 1943, 1944, 1946, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 1962,
	1963, 1964, 1965, 0, 0, 0, 0, 0, 0, 1945,
	0, 0, 0, 0, 0, 0, 0, 0, 3556, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1937, 1938, 0, 1970, 1971, 1972, 1981,
	1982, 1983, 1978, 0, 0, 1988, 0, 0, 0, 0,
	1992, 0, 1967, 1969, 0, 0, 1974, 1968, 0, 0,
	0, 3551, 0, 4002, 0, 1940, 0, 0, 0, 1984,
	0, 1985, 0, 0, 0, 1987, 0, 0, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 1976, 0, 0, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1951, 1952, 1958,
	1980, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942, 1943,
	1944, 1946, 1947, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 1962,
	1963, 1964, 1965, 0, 0, 0, 0, 0, 0, 1945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1937, 1938, 0, 1970, 1971, 1972, 1981, 1982, 1983,
	0, 1966, 1978, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 1967, 1969, 1974, 1968, 0, 0, 0, 0,
	0, 0, 0, 1940, 1961, 0, 0, 0, 0, 1984,
	0, 1985, 0, 1987, 0, 0, 0, 0, 1954, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1993, 0, 1979, 0, 0, 0, 1976, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 1962, 1963, 1964,
	1965, 0, 1977, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 1951, 1952, 1958, 1980, 1957, 1953, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1937,
	1938, 0, 1970, 1971, 1972, 1981, 1982, 1983, 0, 0,
	1978, 1966, 0, 1988, 0, 0, 0, 0, 0, 0,
	1967, 1969, 1974, 1968, 0, 0, 0, 3489, 0, 0,
	0, 1940, 0, 0, 1961, 0, 0, 1984, 0, 1985,
	0, 1987, 0, 0, 0, 0, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1993, 0,
	0, 0, 1979, 0, 1976, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 1960,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 1962, 1963, 1964, 1965, 0,
	3516, 0, 1977, 0, 0, 1945, 0, 0, 0, 0,
	0, 0, 0, 1951, 1952, 1958, 1980, 1957, 1953, 0,
	1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 1937, 1938, 0,
	1970, 1971, 1972, 1981, 1982, 1983, 0, 0, 1978, 1966,
	0, 1988, 0, 0, 0, 0, 0, 0, 1967, 1969,
	1974, 1968, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 1961, 0, 0, 1984, 0, 1985, 0, 1987,
	0, 0, 0, 0, 1954, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 0, 0, 0,
	1979, 0, 1976, 0, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 1962, 1963, 1964, 1965, 0, 0, 0,
	1977, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 1951, 1952, 1958, 1980, 1957, 1953, 0, 1950, 1948,
	1949, 1941, 1942, 1943, 1944, 1946, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 1937, 1938, 0, 1970, 1971,
	1972, 1981, 1982, 1983, 0, 0, 1978, 1966, 0, 1988,
	0, 0, 0, 0, 0, 0, 1967, 1969, 1974, 1968,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	1961, 0, 0, 1984, 0, 1985, 0, 1987, 0, 0,
	0, 0, 1954, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 1979, 0,
	1976, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 1960, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 1962, 1963, 1964, 1965, 0, 0, 0, 1977, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 1951,
	1952, 1958, 1980, 1957, 1953, 0, 1950, 1948, 1949, 1941,
	1942, 1943, 1944, 1946, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1937, 1938, 0, 1970, 1971,
	1972, 1981, 1982, 1983, 1978, 1966, 0, 1988, 0, 0,
	0, 0, 0, 0, 1967, 1969, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 1940, 1961, 0,
	0, 1984, 0, 1985, 0, 0, 0, 1987, 0, 0,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1993, 0, 1979, 0, 1976, 0,
	0, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	1992, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 2497,
	0, 1962, 1963, 1964, 1965, 0, 1977, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 1951, 1952, 1958,
	1980, 1957, 1953, 0, 1950, 1948, 1949, 1941, 1942, 1943,
	1944, 1946, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 1978, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 1967, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 1984, 0, 1985, 0, 0, 0, 0, 0, 0,
	1954, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1951, 1952, 1958, 1980, 1957,
	1953, 0, 1950, 1948, 1949, 1941, 1942, 1943, 1944, 1946,
	1947,
}

var sqlPact = [...]int{
	10053, -1000, -1000, -1000, -1000, 193, -1000, -1000, 192, 191,
	189, 187, 186, 183, 182, 178, 177, 176, 175, -1000,
	-1000, 167, 166, 165, 164, -1000, -1000, 162, -1000, -1000,
	161, -1000, 160, 159, 158, -1000, -1000, 157, -1000, 154,
	-1000, -1000, -1000, -1000, 151, 150, 149, 99326, 98738, 99912,
	2471, 126336, 108716, 2150, 88166, 125748, 87578, 125160, 2279, 11857,
	124572, 2930, 144, -1000, 123984, 143, 141, 140, -1000, 108128,
	123396, 105778, 105190, 1990, -1000, 138, 137, -1000, 10464, 76944,
	136, 135, 134, 129, 2535, 128, -1000, 127, 126, -1000,
	-1000, 121, -1000, 14778, 1593, -1000, 120, 119, -1000, 757,
	104602, 117, 116, 115, 2424, 114, 113, 74000, 112, 111,
	110, 2411, 3020, -1000, -1000, 2195, -1000, -1000, 109, 108,
	107, 106, 105, 104, 103, 100, 99, 98, 97, 95,
	90, -1000, 88, 87, 86, 85, 80, -1000, 79, 78,
	76, -1000, 75, -1000, 74, 71, 70, 69, 68, 63,
	60, 59, 58, 57, 56, 54, 51, 50, 49, 13191,
	-1000, -1000, 46, -1000, 2108, 1748, 1746, 1742, 1740, 1737,
	1000, 45, 44, 42, 36, 34, 33, 31, 30, 29,
	27, 22, 20, 18, 15, 14, 12, 11, 8, 7,
	6, 145, 5, 3, 2, -1, -2, -3, -4, 2685,
	3696, -1000, 1750, 1118, 33819, 3134, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 135126, 126922, -5, -81,
	-6, -1000, 3465, 945, 61591, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 268, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 483, 2528, 739, -1000, -1000, -1000, 122808, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2469, -49, -1000, 2182,
	-1000, -1000, -1000, -1000, -1000, 736, -1000, 2467, 2414, 336,
	2406, -1000, -1000, -1000, 3541, 2615, 3987, 3986, 3984, 3976,
	3975, 134540, 2059, 3974, 2680, 3973, 3966, 3965, 3961, 3960,
	3959, 3958, -1000, 98150, 1079, 97562, 96974, 3567, 122222, 96386,
	121634, 137476, 51975, 1110, 3539, -1000, -1000, -1000, -1000, -1000,
	-1000, 126922, -1000, 1078, -1000, -1000, 3953, 2225, 735, 107540,
	-1000, -1000, 121046, 1852, -1000, -1000, -1000, 947, 1219, 36227,
	36227, 36227, 254, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3553, -1000, -1000, -1000, -1000, 126922, 2856, 2856, 1484, 1416,
	1416, 2856, 2856, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3951, 3947, 3945, 3940, 3939, -1000, -1000, -1000, 86990,
	26404, 86402, 85814, 120458, 51373, 95798, 95210, 3935, 3934, 3933,
	50771, 81698, 59196, 3692, 119870, 136888, 3691, 3690, 1077, 2158,
	1540, -1000, -1000, -1000, -1000, -1000, -1000, -28, 78705, 3745,
	126922, -1000, 244, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	50169, 864, 49567, 805, 48965, 771, 119282, -1000, -1000, -1000,
	-1000, 81100, -1000, 118694, 2614, 3932, 3930, 1183, 3928, 3405,
	1985, 3926, 2010, 1273, 3925, 3923, 3921, 3920, 3919, 3918,
	3916, 1573, 118106, 3132, 1662, 117518, 1884, 136300, 1071, 94622,
	99912, 2772, 116930, 1595, 1466, -1000, -1000, -1000, -1000, 3197,
	3019, 3017, 1128, -1000, -1000, -1000, -1000, 65149, 9131, 8101,
	-1000, -1000, 13503, 116342, 68129, 99912, 99912, -1000, -1000, -1000,
	-1000, -1000, -1000, 48363, 649, 47761, 1050, 115754, -1000, -1000,
	65745, 3062, 1115, -1000, -1000, -1000, -1000, -1000, 115166, 47159,
	368, 46557, 964, 126922, -1000, 3124, 1993, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2495, 1690, 3746, 2841,
	80502, 2208, 1464, 3505, 3194, 3191, 1578, 2100, 3190, 3915,
	2781, 3182, 3178, 3172, 3167, 3161, 1702, 2735, 480, 2721,
	33217, 3100, 1844, 45955, 1619, 1590, 3157, 3155, 3759, 3606,
	2092, 2171, 2155, 2204, 85226, 3914, 3912, 3422, 3154, 3136,
	2891, 3106, 1997, -1000, 3061, 1535, 243, -1000, -1000, -1000,
	-1000, -1000, -1000, 1525, -1000, -1000, -1000, -1000, -1000, 90510,
	-1000, -1000, 1519, -1000, -1000, 1519, -1000, -1000, -1000, -1000,
	-1000, 1379, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1750, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2330, -1000, 2239,
	-1000, -1000, -1000, 2678, 3429, 3429, 3429, 3538, 468, 461,
	-1000, 145, -1000, -1000, 146684, -1000, -1000, 52577, 52577, 52577,
	52577, 52577, 52577, 52577, 52577, 2293, -1000, 731, -1000, -1000,
	780, -1000, 730, 671, 593, -1000, -1000, -1000, -1000, -1000,
	-1000, 729, -1000, -1000, -1000, -1000, -1000, -1000, 3742, -1000,
	29468, -1000, -1000, -1000, 438, 727, 52577, -1000, -1000, 3780,
	3779, 983, -1000, 241, 973, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3123, 725, 724,
	-1000, 717, 716, 715, 713, 710, -1000, 708, -1000, 706,
	703, 702, 700, 699, 695, 690, 689, -1000, 2198, -1000,
	-1000, -1000, -1000, -1000, -1000, 647, 645, 645, 645, -1000,
	1061, -1000, -1000, -1000, 265, 644, 260, 631, 630, 629,
	-1000, 688, 686, 683, 682, 681, 678, 677, 676, 675,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1049, -1000, -1000,
	-1000, -1000, 1307, -29, 126922, -1000, 483, -29, -1000, -1000,
	674, -1000, 38051, 38051, 38051, -1000, -1000, 2465, 52577, -1000,
	2519, -1000, -22, -22, 922, 63358, -1000, 60391, 922, 482,
	790, 69304, -1000, 3060, -1000, -1000, 672, 240, -1000, -1000,
	-1000, -1000, 27000, 3057, 126922, 126922, 126922, 99912, 99912, 99912,
	126922, 3911, 3909, 3318, 52577, -1000, -1000, 76356, 139235, 100498,
	-1000, -1000, 3671, 74586, 75769, 3122, 139235, 3121, 138652, 3904,
	-1000, -1000, -1000, -1000, -1000, 3282, 3898, 3893, 3889, -1000,
	126922, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 249, 3279,
	-1000, -1000, 104014, 249, 3277, -1000, 249, 3274, -1000, 103428,
	-1000, -1000, 2368, 3266, -1000, -1000, 253, 3262, -1000, -1000,
	-1000, 252, 3260, -1000, -1000, 232, -137, 3259, -1000, -1000,
	-1000, -1000, -1000, -1000, 146684, -1000, -1000, -1000, 138064, -1000,
	3427, -1000, 126922, -1000, 52577, -1000, -1000, 3670, 1745, 3466,
	3582, -1000, -1000, -41, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2658, 2662, 1184, 2506, -1000, 3330, 1600, 36227, 3393,
	-1000, -1000, -1000, -1000, -1000, 231, 27000, 2991, -1000, -1000,
	126922, -1000, 126922, 2856, 2856, -1000, -1000, -1000, 3752, 3751,
	2856, 2856, 126922, 126922, -1000, -1000, -1000, -1000, -1000, -1000,
	4127, 3258, 1597, -1000, 2505, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1954, 3256, -1000, 2094, 3255, 1941,
	-1000, -1000, 2380, -1000, 143198, 1522, -1000, -1000, -1000, -1000,
	2301, 3254, -19, -1000, -1000, 2461, -1000, -1000, -1000, -1000,
	142990, -1000, 3021, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1788, -1000, -1000, 2221, 2113, -1000, 1406, 3253,
	-1000, 2840, 2840, 94034, 3267, 67533, 65745, 78705, -33, -1000,
	-1000, -1000, -1000, -1000, -145, -1000, 25801, 146684, -1000, -1000,
	-1000, -1000, 1933, 146684, 940, -1000, -1000, 3251, -1000, 146684,
	937, -1000, -1000, 3249, -1000, 2730, -1000, 3119, -1000, -1000,
	2565, 2564, 1025, -1000, 3886, -1000, -1000, 3884, -1000, 3882,
	3881, 3880, -1000, 1732, 2098, 3879, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 93448, 2464, -1000, -1000, 89924, 3105,
	-1000, 2562, 3581, -1000, 92860, 1067, -1000, 1004, 2561, -1000,
	102842, 1058, 2556, -1000, 3878, 3554, 2796, 1004, 2554, -1000,
	-1000, -1000, -1000, -1000, 1022, -1000, 71063, -1000, 71063, -1000,
	1760, -1000, 133954, -22, 99912, 3742, -1000, -64, -1000, -1000,
	-1000, 945, -1000, 64550, -1000, 64550, 106952, 82294, 970, 3056,
	73411, 146476, -1000, 1019, -1000, -1000, 146684, -1000, -1000, -1000,
	2726, -1000, -181, 2839, -1000, 82294, 66937, 3055, 2723, -1000,
	146684, -1000, -1000, -1000, -1000, 146684, -1000, -1000, -1000, 82294,
	89924, -1000, 114578, 92272, -1000, -1000, 1517, 2716, -1000, -1000,
	-1000, 82294, 3051, 1407, 82294, 82294, 82294, -1000, 113990, -1000,
	-1000, 2222, 1330, 3423, 2210, 99912, -1000, 2073, -1000, -1000,
	-1000, 3480, 3265, 126922, -1000, -1000, 3104, -1000, 78118, 102256,
	-1000, 101670, -1000, 101084, -1000, 99912, -1000, 99912, -1000, 3876,
	3874, 3873, -1000, -1000, 3872, -1000, 3871, 3474, -1000, 750,
	45353, 146684, 3471, -1000, 3868, 2161, 3100, 146684, -1000, 3213,
	1764, 1763, 126922, -1000, -1000, 126922, -1000, 126922, -1000, -1000,
	-1000, 2493, 1689, -1000, -1000, 2650, -1000, -1000, -1000, 1018,
	-1000, -1000, 99912, 99912, 99912, 99912, 1292, -1000, 44751, -1000,
	-1000, 3151, 3867, 1850, -1000, 2017, -1000, 3049, 3472, -1000,
	3038, 1467, 1917, 228, 3783, -1000, -1000, 271, -1000, -1000,
	-41, -1000, 133368, -1000, 2678, -1000, 126922, -1000, 2689, 3091,
	3098, 1789, 2491, 2758, -1000, 44149, 2733, 56189, 2502, 145,
	-1000, -1000, 145, 145, 35023, -1000, -1000, 74586, 74586, 27000,
	1390, 52577, 52577, 52577, 52577, 52577, 52577, 52577, 52577, 52577,
	52577, 52577, 52577, 52577, 52577, 52577, 52577, 52577, 52577, 52577,
	52577, 52577, 52577, 52577, 52577, 52577, 52577, 52577, 52577, 52577,
	52577, 52577, 52577, 52577, 52577, 52577, 52577, 2254, 52577, 1378,
	52577, 52577, 52577, 52577, 2305, -1000, -1000, 2081, 513, 2190,
	671, -1000, -1000, -1000, 3724, 3724, 3724, 632, 632, 632,
	146894, 146894, 589, 3866, 780, -1000, 52577, -1000, 84, 63944,
	52577, 27598, -1000, 461, 9701, 2620, -1000, 454, 28230, -1000,
	-1000, -1000, 29468, 593, 43517, 52577, 1033, 146684, -1000, -1000,
	1568, 3744, 25198, 3145, 2882, 669, 870, 868, 32585, 31953,
	31321, 30689, 857, 854, 52577, 52577, 52577, 52577, 52577, 52577,
	52577, 52577, -1000, -1000, 3750, -1000, 3744, -1000, -1000, -1000,
	-1000, 3744, 1371, 1370, 3744, -1000, 3744, 3744, 8114, 8114,
	42915, 42313, 41711, 56791, 41109, 52577, 30087, 40507, 39905, -1000,
	58597, 126922, -29, 3669, 52577, 319, -1000, 144108, -1000, 319,
	319, 668, -80, 146684, 2728, 2728, 62180, 2299, 2297, 2297,
	2297, -1000, 922, 19733, 922, 112232, 2344, 922, 922, 221,
	267, 451, 59795, 2519, 112232, 762, 666, -7, -8, -9,
	-1000, -1000, -10, -12, -1000, -1000, 99912, 652, 27598, 27000,
	220, 2168, -86, 2753, 2751, -1000, 2749, 2746, -1000, 2743,
	2459, -1000, -1000, -1000, 1928, -92, 1376, 99912, 126922, 1502,
	3864, -55, -1000, 6967, -97, -1000, 1263, 219, 3744, -1000,
	-1000, -1000, -1000, -1000, 3863, 3862, -1000, 1048, 651, 648,
	365, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 647,
	645, 645, 645, -1000, 265, 644, 260, 631, 630, 629,
	-1000, -1000, -1000, -1000, -1000, 3037, 99912, 126922, 1496, 3861,
	88752, -137, 100498, -54, -1000, -1000, 126922, -1000, -1000, -1000,
	3859, -1000, 99912, -1000, -1000, 99912, 249, 3248, -1000, 99912,
	-1000, 99912, 248, 3246, -1000, -1000, 126922, -1000, 99912, 99912,
	-1000, 126922, 126922, 126922, 139235, 139235, 242, -1000, 99912, 886,
	-99, 1213, -41, -1000, -1000, -1000, -1000, 1519, -1000, 1837,
	-1000, -1000, -1000, -1000, -1000, -1000, 1584, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 983, -1000, -1000, -1000, -1000,
	3738, 3736, -30, -1000, -1000, 27000, -1000, 2063, -1000, -1000,
	-1000, -1000, 126922, 126922, -1000, -1000, 126922, 126922, -1000, -1000,
	-42, 1699, 576, 1375, -1000, 84638, 2534, 3477, 3858, 2785,
	3412, 1759, -1000, 1687, 621, -1000, 3556, 90510, 3594, 3648,
	1415, -1000, 3036, -1000, -1000, -1000, 946, 1842, 1907, 1374,
	1369, 90510, 2094, -1000, 74586, -1000, 2802, 3537, 1416, 1448,
	1416, 1416, 1472, -1000, 90510, 1901, 1364, 1359, 1345, -1000,
	-1000, 1757, 1675, -1000, -1000, 113404, 1620, -1000, 1343, 1339,
	3686, 2330, 2312, 808, 2057, -1000, 1447, 1329, 3034, -1000,
	-1000, -44, 3591, 3641, 1415, -1000, 3033, 1327, -1000, -1000,
	-1000, 3536, 99912, 27000, 1640, 1638, 1626, 1896, 1318, -31,
	-1000, 3588, 1684, -1000, 89924, 89924, 109302, 126922, 3706, 82294,
	-1000, 2553, -1000, -1000, -1000, 3501, 3499, -1000, -1000, 1315,
	1314, -1000, 1036, 9910, 3353, -1000, 139235, 1036, 1036, 1920,
	3245, 2826, 1782, -1000, 2838, 880, 2837, -1000, -1000, -1000,
	880, -33, 78705, 126922, 217, -1000, 84, 52577, 52577, 84,
	52577, 84, -1000, 3570, 3244, 3241, 3855, -1000, -1000, -1000,
	-1000, -1000, 3853, 2072, 2672, -1000, -1000, 619, 2552, 3027,
	126922, 188, -1000, 99912, 3158, 77531, 3240, 139235, 2094, 2551,
	-1000, -1000, 91684, -1000, 3239, 483, 2550, -1000, 507, 3850,
	3237, -1000, 132782, -1000, 3427, 1400, 3236, 1126, 991, 3665,
	-1000, 991, 71650, -1000, 126922, -1000, -22, 5743, 83466, -105,
	-106, 449, -1000, 112818, 126922, 126922, 3381, 2085, 2080, -1000,
	994, 65745, -1000, 65745, -108, -1000, -181, 2836, 1627, 65745,
	-1000, 970, -117, 880, -1000, 880, -1000, 99912, 3094, -1000,
	82294, 82294, -1000, 970, 970, 970, -1000, -1000, -1000, -1000,
	3848, 3846, 3844, 3843, -1000, -1000, 998, 99912, 126922, 99912,
	-1000, 2825, 1709, -1000, 215, -1000, 139235, -1000, 139235, 126922,
	99912, -1000, 998, 126922, 998, 126922, 998, 126922, 998, 998,
	-1000, -1000, -1000, -1000, -1000, 84, -1000, -1000, 146684, -1000,
	52577, -1000, -1000, 1680, 3842, 1770, -1000, 3093, -1000, 3092,
	-1000, 26, -1000, -1000, 3749, 2001, -1000, 3778, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3841, 146684, -1000, 1971,
	-1000, -1000, -1000, -1000, 99912, 99912, 99912, 99912, 126922, 3352,
	-1000, 126922, 3348, 3351, 99912, -1000, 3782, -1000, -1000, 90510,
	-1000, 2689, 3091, -1000, -1000, -1000, -1000, -1000, -1000, 1530,
	2430, -1000, 2707, -1000, 1720, -1000, -1000, -1000, 146684, 57393,
	-1000, -1000, 146684, 1948, -1000, 55587, 54985, -1000, -1000, 1859,
	99912, 2760, -1000, 2760, -89, -1000, 143900, 2702, 99912, -1000,
	-1000, -1000, -1000, -1000, 941, 770, 770, 1405, 1405, 1405,
	1405, 3578, 356, 466, 1275, 8207, 8207, 5496, 5496, 5496,
	5496, 5496, 8207, 5462, 632, 632, 5462, 5462, 5462, 5462,
	5462, 632, 632, 632, 8207, 8207, 8207, 632, 146894, 17806,
	11555, 52577, 52577, 1309, 2076, 513, 10767, 52577, 6722, 6722,
	6722, 6722, -1000, 2201, -1000, -1000, -1000, -1000, 3024, 618,
	56791, 56791, -1000, -1000, -1000, -1000, 28849, 52577, -1000, -1000,
	-1000, -1000, 39273, -1000, -1000, 142780, -334, 448, -1000, 212,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 445, -82, -13, -1000, 52577, 52577, 52577,
	436, -1000, 210, 52577, 126922, -1000, 18288, 760, -107, -1000,
	-111, 1477, -1000, 52577, -1000, -1000, 1304, -1000, 1303, 1301,
	1300, -1000, 614, 430, -1000, 208, -1000, 2295, 613, 612,
	52577, -1000, -1000, -1000, -1000, -1000, 142572, -1000, -1000, 142364,
	-1000, -1000, 142156, -1000, -1000, 141948, -1000, -1000, -1000, -1000,
	-1000, 146268, 17314, 16606, 15894, 7730, 14054, 12491, -114, 425,
	-116, 424, 939, 934, 413, 412, 400, -119, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-122, 395, -1000, 3018, -82, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 393, -1000, 392, -1000, 146060, -82, 390,
	6686, -1000, 56791, 56791, 56791, 56791, 389, -1000, 143692, -1000,
	145852, 38671, 38671, 38671, 388, 145642, 52577, -82, -124, -1000,
	-130, -1000, -1000, -1000, -1000, 557, -132, 1029, 38051, 61002,
	27000, -1000, 1029, 1029, 52577, -1000, 52577, 2718, -1000, -1000,
	-1000, -1000, 2708, 1893, 2728, 62180, -1000, -1000, -1000, -1000,
	112232, -1000, 3742, 3109, -1000, 112232, -1000, -1000, 126922, 483,
	-1000, 112232, 112232, 27000, 922, -1000, 922, 112232, 843, -1000,
	-1000, -1000, -1000, -1000, 387, 72239, -13, 206, 27000, 1004,
	-1000, -1000, 2866, 2866, 2866, 2866, 2866, 99912, -1000, -1000,
	139235, 1298, -37, -150, 2832, -1000, 3703, -1000, 2219, -1000,
	74586, -1000, 779, 1232, 27000, -1000, -1000, -1000, 607, -1000,
	3744, 3744, -1000, 3744, 139235, 3016, 315, 2831, -1000, 2458,
	-35, 199, 139235, 3840, -1000, -1000, 249, -1000, 99912, 249,
	249, -1000, 99912, 99912, 2368, -1000, 253, -1000, 252, -1000,
	-1000, -137, -1000, 1017, 36227, -1000, 1519, -1000, -1000, 1642,
	-1000, 2083, -1000, 1334, -1000, -1000, 36227, -1000, 3384, -1000,
	1838, -1000, -1000, -1000, -1000, 4167, 126922, 126922, 99912, -1000,
	110474, 126922, -1000, 2379, 139235, -1000, 2549, 132196, 2532, 131610,
	74586, -1000, -1000, 605, 949, 2701, 2700, 1120, 126922, 126922,
	2699, 131024, 130438, -1000, 3838, 126922, 2223, 52577, 110474, 3535,
	2402, 2215, 84, 84, -1000, 84, -1000, -1000, 604, 1291,
	99912, 99912, 126922, 139235, 99912, 1895, -1000, -1000, -1000, -1000,
	-1000, 91096, -1000, -1000, 1416, -1000, -1000, -1000, 1416, 2094,
	1886, 126922, 139235, 99912, 139235, 129852, 2053, 129266, 2052, -1000,
	-1000, 2050, 1887, 126922, -1000, -1000, -1000, -1000, 1487, -1000,
	808, 1296, 3015, 52577, 52577, 2247, 84, 84, -1000, 84,
	601, 27000, 2132, -1000, 3078, 126922, 3777, 128680, 3776, 126922,
	126922, 126922, 139235, 3434, 126922, -1000, -117, -36, -192, -1000,
	877, 875, -145, -1000, 3706, -1000, 874, 2225, 126922, 139235,
	-1000, 128094, 9910, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2229, 79904, 1135, 126922, 1406, -1000, -1000, 1881, 1295, 1293,
	90510, 2230, 1872, 1977, 139235, 65745, 995, 65745, 2807, -1000,
	-1000, 24595, -1000, 146684, 146684, -1000, 146684, -1000, 77531, 82294,
	126922, -1000, -1000, 1059, 126922, 84052, 963, 3235, 70476, -145,
	970, 89924, 82294, 3156, 126922, 2759, 126922, -1000, -1000, 2094,
	3232, 483, 2544, -1000, 139235, 3664, 3230, 600, 3836, 3835,
	-1000, 99912, 2457, 2543, -1000, -1000, 127508, 3275, 808, 126922,
	1029, 62180, 2105, -1000, 68718, 1102, 126922, 2000, 170, -1000,
	-1000, -1000, 1, 126922, -1000, 787, -1000, -1000, 5743, 5743,
	970, -192, 598, 66341, -148, -1000, 204, 594, 872, 869,
	-1000, 2462, -1000, -181, -1000, 82294, 994, 65745, 3012, -181,
	2830, 3011, -1000, -1000, 1014, -1000, 1409, 2828, 970, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-23, -1000, 1853, 1976, 126922, -137, -137, -50, -37, -1000,
	998, -1000, 998, -1000, 998, -1000, -1000, -1000, 146684, -1000,
	-1000, -1000, 1767, 1765, 126922, -1000, 3089, -1000, 126922, -1000,
	-1000, 27000, 126922, 99912, 27000, 99912, 3088, 3083, -1000, -1000,
	-1000, 126922, -1000, -1000, 126922, -1000, -1000, -1000, -1000, -1000,
	-1000, 1159, -1000, 1948, 2428, -1000, 593, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2630, -1000, -38, 35023,
	924, -1000, -1000, 99912, -25, 52577, 52577, 9372, 8712, 52577,
	56791, 56791, -1000, 52577, 8700, -1000, -1000, -1000, -1000, -1000,
	3010, 592, 52577, 74586, 6011, 5547, -1000, 386, 11521, 5462,
	-1000, 52577, -1000, 548, -1000, 385, 37449, -1000, 144524, -21,
	-149, -1000, 20350, -82, -151, -1000, -1000, 777, -1000, 3220,
	-1000, 52577, 145356, 2610, 2043, 1955, 1779, 3744, 3775, 23992,
	-1000, 72825, 1030, 2349, 141740, -1000, -1000, -1000, -1000, 74586,
	74586, 52577, 52577, -1000, 52577, 52577, 52577, -1000, -1000, -1000,
	3744, 915, -1000, -1000, -1000, 915, -1000, -1000, 1416, -1000,
	1416, -1000, 52577, -1000, -1000, 3008, 52577, -1000, 74586, 74586,
	56791, 56791, 56791, 56791, 56791, 56791, 56791, 56791, 56791, 56791,
	56791, 56791, 56791, 56791, 56791, 56791, 56791, 56791, 56791, 56791,
	2703, 56791, 3722, 3722, 3722, 1193, -1000, 3072, 3008, 52577,
	52577, 74586, 382, 376, 374, -1000, 52577, -82, -1000, -1000,
	9626, 591, -1000, 2621, -1000, 2880, -1000, 52577, -1000, -143,
	-1000, 2519, -1000, -1000, 2880, 2880, -157, 146684, 62180, 62180,
	-1000, 590, 52577, 2690, -1000, -1000, 759, -330, -1000, 860,
	-1000, -1000, -1000, -1000, -1000, -1000, 855, -1000, 483, -1000,
	-1000, -1000, 201, 112232, 112232, 756, -1000, -162, -1000, -1000,
	-163, -1000, 3663, 373, 27000, -1000, 1029, 5292, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2741, -281, 139235, 139235, 1843,
	2396, 3774, -1000, 3747, 774, 754, 171, 3744, 372, 369,
	366, -137, 139235, 139235, 1831, 75182, 139235, -1000, -1000, -1000,
	249, -1000, -1000, -1000, 248, -1000, -1000, -1000, -1000, 2804,
	-1000, -41, -1000, -1000, -1000, 52577, -1000, 969, -1000, -1000,
	3473, 588, 1287, 1284, -1000, -164, -1000, 850, -1000, -1000,
	-1000, -1000, 2984, -1000, 3229, -1000, 2542, -1000, 1108, 2541,
	1676, -1000, 52577, 587, 2791, 585, 584, 3831, 2292, 3829,
	1124, 3225, 2368, 3222, 2368, -1000, -1000, -1000, 942, -1000,
	146684, -165, -1000, 2402, -1000, 583, 582, -1000, -42, 1691,
	544, 1283, 1013, -1000, -1000, 52577, 52577, 111646, -1000, 499,
	3418, -26, -1000, -1000, -1000, 1830, 1282, 1279, -1000, -1000,
	-1000, -1000, 2094, 1827, 1278, 1270, -1000, -1000, -1000, -1000,
	-1000, 2540, -1000, 126922, -1000, 3216, 126922, 126922, 1010, -1000,
	3166, 3164, 933, 126922, 52577, 52577, 145148, 144940, -1000, 1009,
	-1000, -1000, 52577, -1000, -44, 1266, 3603, 2539, 99912, -1000,
	2368, 3208, 1260, -1000, 1257, -1000, -1000, -1000, 3587, 3579,
	1248, -1000, 109302, 82294, 82294, 3706, 65745, -1000, -1000, -1000,
	82294, -1000, -1000, 79308, -1000, -1000, 1036, 126922, 139235, 99912,
	1879, -1000, -1000, 88752, 89338, 126922, 2826, -137, 880, -1000,
	2604, 880, 995, 3006, -1000, 2736, -1000, 1007, 99912, 3828,
	361, -170, -45, 74586, -1000, -1000, -1000, -1000, 2532, 99912,
	126922, 1308, 2789, 126922, 126922, 3662, -1000, 2478, 642, 99912,
	916, -1000, 3742, -1000, -1000, -1000, 126922, -1000, -1000, 1006,
	-1000, 3575, 99912, 3661, 3205, 1004, 84, 99912, 3757, -1000,
	-1000, 3660, 99912, 3201, 2452, 2538, 2665, 808, 82880, 1004,
	2348, -60, -1000, 2000, 36829, 3416, -171, -1000, -1000, -1000,
	1029, 71650, 62180, 52577, 3827, -173, -1000, -1000, -1000, -1000,
	-1000, 109302, 82294, 970, 126922, 126922, 3826, 82294, 82294, 82294,
	-46, 581, -1000, 848, 847, 846, -1000, -1000, -1000, -1000,
	-1000, -1000, 842, 841, 840, 839, 994, -1000, -1000, -181,
	65745, 994, 65745, 84, -1000, 2383, 99912, 82294, -1000, 23389,
	126922, 2825, -1000, -1000, -1000, -1000, -1000, -1000, 998, 3773,
	-145, -1000, -1000, -1000, 2256, 2500, 2256, 1957, 1943, -1000,
	-1000, -1000, 2423, -1000, -1000, -1000, -1000, 2768, 3426, 27000,
	3580, 6722, 52577, 52577, 7437, 4837, 417, 6722, 52577, 52577,
	74586, 6387, -178, 52577, 52577, -1000, 52577, 752, 146684, -1000,
	3772, 52577, 355, 351, -1000, -1000, -1000, 3743, -1000, -1000,
	-1000, 146684, 52577, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	341, -1000, 146, -1000, -1000, -1000, 135712, -1000, 52577, 335,
	3532, -1000, 333, 332, 11225, 318, 141532, 141324, 141116, 330,
	-1000, -1000, 327, 321, 146684, 3072, 146684, -1000, -1000, 1098,
	1098, 1408, 1408, 1408, 1408, 3722, 1043, 1052, 670, 530,
	530, 530, 646, 1193, 1193, 530, 530, 530, 1193, 2993,
	2710, 579, 7989, -1000, -1000, 146684, 146684, 317, -1000, -1000,
	-1000, -82, 303, 9626, -1000, 2876, 3530, 146684, -1000, 62180,
	2876, 2876, -1000, -1000, 1893, 126922, 146684, 62180, -1000, 3109,
	-1000, 21574, 20965, -1000, 27000, -1000, -1000, -1000, -1000, 3742,
	-1000, 72239, -1000, 578, -1000, 123, -1000, 5292, -1000, 838,
	-1000, -1000, 82294, 82294, 3825, 3824, 3823, 3771, 3770, 2377,
	3769, 2866, -1000, 2884, -281, -156, 126922, -1000, -1000, 748,
	3822, 772, 27000, 295, -1000, -1000, -1000, -137, -137, 126922,
	2986, 99912, 126922, 1473, -137, -1000, -1000, -1000, 3380, 146684,
	3071, 2867, 2863, 126922, 126922, -1000, 110474, 36227, 1526, 111060,
	126922, 3199, -1000, 3189, -1000, 1120, 5345, 140908, 62769, -1000,
	62769, 126922, -1000, -1000, -1000, -1000, 2036, 1752, 3821, 1173,
	-1000, 3485, 126922, -1000, 126922, -1000, -1000, -1000, 110474, -1000,
	126922, 126922, 99912, 126922, -1000, 139235, 3175, -179, 146684, -48,
	-1000, 837, -1000, 1398, -1000, 22786, 126922, 139235, 99912, 126922,
	139235, 99912, 3187, 1101, 126922, -1000, 1094, 2272, -1000, -1000,
	3162, -1000, 146684, 144732, 84, 52577, 3174, -180, 27000, -1000,
	3767, 3766, 3185, 3494, -1000, 126922, 3764, 126922, 99912, 3379,
	-1000, -1000, -1000, 996, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1821, 1254, 1252, 2450, 2448, 2394, -50, 2230, 995,
	-56, 577, -1000, 831, -1000, -1000, 830, 825, 995, -1000,
	82294, 65745, 3820, 483, -1000, 2774, -1000, 106364, 84052, 2418,
	-1000, -1000, 570, 126922, 126922, 569, -1000, 84, -1000, 3819,
	110474, 568, -1000, 2366, -1000, 746, -1000, -1000, 2636, 139235,
	2094, 84, 99912, -1000, 992, 483, 292, -57, -1000, 3196,
	1113, 27000, 99912, 3184, 2667, 808, 82880, -1000, 1400, 2758,
	-1000, -58, -1000, 684, 84, 2348, -1000, -60, 146684, -1000,
	824, -187, 288, -1000, 3366, -1000, -1000, -189, -1000, -1000,
	3577, 3577, 82294, 65745, 82294, 82294, 82294, 65745, 82294, -1000,
	994, 880, -1000, -181, -1000, 2548, -1000, 970, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 27000, 1778, -1000, 567, 566,
	-1000, -1000, -1000, -1000, 3426, 6722, 6722, 52577, 52577, 52577,
	6722, 6387, -196, -1000, 6722, 6722, -82, -1000, -1000, 144524,
	-1000, -1000, -1000, 146684, -1000, 22183, 2266, -1000, 140700, -1000,
	35023, -1000, -1000, 52577, 52577, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 56791, 2980, 565, 74586, -1000, -1000, 284,
	1027, 52577, 54383, 2519, 1027, 1027, -1000, -202, -1000, -1000,
	-1000, 3742, -1000, 3742, 123, -1000, -1000, 3818, 27000, -1000,
	82294, -1000, -1000, -1000, -1000, -1000, -1000, 3817, 3816, 2523,
	3815, 3814, -1000, 2391, -1000, -1000, 3097, -195, 768, -1000,
	3812, -1000, -1000, 131, 139235, 2965, 130, 2821, -1000, 84,
	-1000, -1000, -1000, -1000, -1000, -1000, 2820, 3659, -1000, 2042,
	-1000, 126922, 126922, -1000, 126922, -1000, 27000, 126922, 2925, 1297,
	-1000, 949, 2698, 564, 56791, 1153, 99912, 912, 2860, 2859,
	-1000, 3681, 3525, 2900, -211, -1000, 126922, 52577, 126922, -212,
	-213, 2520, -1000, -1000, 1152, 1271, 52577, 1149, -1000, -1000,
	-1000, 74586, 562, 2368, 2368, -1000, -218, -220, -1000, -1000,
	-1000, 52577, 1235, 126922, 35625, -1000, 3810, 3418, -1000, -1000,
	-1000, -1000, -1000, -1000, 126922, 126922, -1000, 126922, 126922, -1000,
	52577, -1000, 144316, 52577, 1227, -1000, -1000, -1000, 3762, 2368,
	27000, 2368, -1000, 2368, 3494, 1171, 2474, 126922, 139235, 99912,
	1672, 1672, 3070, -1000, -1000, -1000, 2537, 2537, 82294, 65745,
	65745, -1000, -62, 995, -1000, 3657, 2261, 3809, -1000, -1000,
	-1000, -1000, 2697, -1000, -1000, -1000, 126922, 2686, 2881, 62769,
	560, 559, 126922, 988, -1000, -221, 84052, 963, 957, -1000,
	-63, 556, -1000, 821, -1000, -1000, -1000, -1000, 483, -1000,
	2798, 3653, -1000, 3758, 546, 534, 126922, 2441, 527, 27000,
	3414, 808, 82880, -1000, 3275, 2000, -1000, 2525, 126922, 3411,
	-1000, 2758, 513, -1000, 970, 511, 970, -1000, -223, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 994, -65,
	-1000, 892, 606, -1000, -1000, -1000, 99912, 99912, 52577, 52577,
	-1000, 6722, 6722, 6722, -1000, 280, -1000, -1000, 2348, 3523,
	-1000, -66, 140492, 140284, 6124, 56791, 74586, -226, -1000, -1000,
	126922, 146684, -67, -1000, 146684, 510, 509, 415, -1000, -1000,
	-1000, 741, 633, -1000, -1000, -1000, -1000, 3808, -1000, -1000,
	-1000, -1000, 139235, 3803, -1000, 139235, -137, 139235, 139235, 1810,
	-1000, 109888, 126922, -1000, -1000, 1676, 2070, -1000, -1000, 126922,
	2536, -1000, -1000, -1000, 986, 52577, 7989, 56791, 508, 52577,
	-1000, 506, 502, 3650, 3337, -1000, 2778, 2941, 2034, 62769,
	-1000, 3426, -1000, 139854, -1000, 1112, 2039, -1000, -1000, -1000,
	-1000, 146684, 56791, 3494, 62769, -1000, -1000, 497, 496, 146684,
	493, 818, 2926, -1000, -1000, -1000, -1000, -145, -145, -1000,
	146684, 84, 146684, 492, 3603, -1000, -1000, -1000, -1000, 2368,
	99912, 813, -1000, -1000, -1000, 1226, -1000, -1000, -1000, -1000,
	3798, 3796, 2919, 88752, -1000, -229, -1000, -1000, -1000, 2067,
	84, 963, -1000, -1000, 2418, 490, -1000, 958, 2777, 2777,
	-231, 62769, 62769, -232, 2434, 2771, -1000, 277, 3649, 957,
	-1000, 3730, -1000, 3340, 3340, 52577, 3634, 3360, -1000, 84,
	-1000, 3757, 62769, -1000, 99912, 62769, 2438, 2189, 2643, 82880,
	-1000, 2665, -1000, -1000, -234, 126922, 2000, -1000, -1000, 82294,
	-1000, -1000, -1000, 2548, -1000, 126922, -1000, 126922, -1000, -1000,
	-240, -242, -1000, 2251, 52577, 35023, -1000, -1000, 6124, -249,
	-1000, -75, -1000, 3630, 54383, 3794, 3791, 3790, -1000, -1000,
	-1000, -281, -1000, -137, -137, -137, 126922, -1000, 2035, -1000,
	2532, -1000, -1000, 3170, -1000, 2874, 486, 139824, 7989, 2623,
	126922, 19016, 2094, 2094, -1000, 3623, 2940, -1000, -1000, 2247,
	485, -1000, -1000, -1000, -1000, 924, 126922, 958, 2872, 99912,
	7989, 1117, -250, 2256, 2256, 52577, 34421, 2253, -1000, 52577,
	-1000, -1000, 3494, 65745, 139235, -1000, -1000, 139235, 2435, -1000,
	2906, 3732, -1000, 2434, 126922, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1112, -251, -252,
	-1000, -1000, 3468, -1000, 3356, 2774, 84, -1000, -1000, -1000,
	-257, 146684, 84, 3789, 992, 276, -258, 1113, -259, 99912,
	2047, -1000, 808, -1000, 2667, 1029, 3311, -1000, -260, -1000,
	-267, -272, -1000, -1000, 274, 53781, 53781, 53781, -82, -89,
	-1000, 126922, 484, -1000, -1000, -1000, -1000, -1000, 122, -1000,
	-1000, 3111, 910, -1000, 861, 2002, 273, 1114, 270, 132,
	-1000, -1000, -1000, 2900, -1000, 126922, -1000, -1000, -1000, 910,
	483, -1000, 52577, 1112, -273, -1000, 1093, -274, -1000, 1084,
	-282, -1000, 2917, -1000, -285, 2368, -1000, -281, 242, 1672,
	990, 3569, -1000, -1000, -1000, 2634, -290, -1000, -1000, 2034,
	1112, 2247, 2486, -1000, 2261, 988, -1000, -1000, -1000, -1000,
	-1000, 1112, 476, 2034, 473, 1616, 808, -1000, -1000, 1416,
	3414, 3309, 1367, 970, -1000, -1000, -1000, 3177, -1000, 57995,
	2408, 1936, 143484, 3177, 3177, -1000, -1000, 139235, 126922, 958,
	3547, -1000, 889, 888, 1580, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1029, -291, -1000, 2623, 146684, 958, -1000,
	2256, 2818, -1000, 2256, 2915, -1000, 2241, -1000, -1000, -1000,
	-1000, 2914, -1000, 1898, 3712, -1000, -1000, 958, 126922, 2247,
	2034, 958, 1925, 1903, 3787, 963, 2434, 2034, 62769, 2247,
	62769, 2232, -1000, 126922, -1000, 2189, 1366, -1000, 1741, -1000,
	-1000, 1919, 3646, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-137, -1000, -1000, 809, -1000, 3325, -1000, 1141, 2290, 2290,
	-1000, -1000, 861, -1000, -1000, 472, -1000, 471, -1000, 139235,
	2361, -1000, -1000, -1000, -1000, 958, 2247, 1029, -1000, 3786,
	-1000, 2434, -1000, 2247, -292, 958, -293, 2258, -1000, -1000,
	-145, 2047, -1000, 1730, 71650, 1931, -1000, -1000, 2329, 53179,
	52577, -1000, 3708, -1000, -1000, 2739, -1000, 2900, 52577, 52577,
	242, 69890, 1029, 958, -1000, -1000, 2634, 958, 1112, 1029,
	2034, -1000, 808, 1616, 71650, -280, -1000, -1000, -1000, 146684,
	-1000, -1000, -1000, -1000, -308, -311, -1000, -192, 109302, -1000,
	1029, -1000, 1029, 2034, -1000, 2247, 139235, 2232, -280, -1000,
	2247, 1197, -319, -1000, -1000, 2247, 958, -1000, -1000, -1000,
	-1000, -1000, 470, -1000, 958, 1029, 52577, 1029, -1000, -322,
	-1000, 2247, -1000,
}

var sqlPgo = [...]int{
	0, 4668, 4667, 4666, 4665, 4663, 4662, 4661, 4660, 4658,
	4657, 4655, 4652, 4650, 4649, 157, 4648, 4647, 4646, 4636,
	4632, 4631, 4625, 4624, 4622, 4620, 4619, 4616, 4614, 4613,
	4609, 4608, 4606, 4603, 4601, 4599, 4598, 4596, 4595, 4593,
	4591, 4590, 4588, 4587, 4584, 4583, 4577, 4576, 4575, 4574,
	4571, 4570, 4568, 4566, 4565, 4564, 4562, 4560, 4558, 4556,
	4555, 4553, 4552, 4549, 4546, 4544, 4543, 4542, 4538, 4536,
	4533, 4531, 4530, 57, 4529, 4527, 4523, 4520, 4519, 4518,
	4516, 4515, 4512, 4511, 4509, 4507, 4505, 4504, 4503, 4502,
	4501, 4499, 4498, 4496, 70, 4494, 296, 4493, 4492, 4490,
	4489, 4488, 4484, 4483, 4482, 4481, 4480, 4479, 4478, 295,
	4477, 150, 177, 4476, 4475, 3994, 4474, 4473, 294, 4472,
	4471, 4470, 4469, 4468, 303, 4467, 4464, 4463, 4462, 4460,
	280, 4458, 4456, 4455, 4454, 4453, 4452, 59, 146, 4451,
	4446, 786, 4445, 4444, 4443, 4442, 4437, 4436, 4435, 272,
	275, 4434, 4433, 4431, 265, 188, 4430, 290, 4429, 4426,
	4424, 4420, 4419, 4418, 4416, 4415, 4413, 4399, 4398, 4395,
	4393, 4392, 4390, 4386, 4385, 4382, 4376, 4375, 4374, 4373,
	4370, 4369, 4368, 4365, 4364, 4363, 4362, 4360, 4358, 4357,
	4354, 4351, 4350, 4341, 4340, 4337, 4336, 4335, 4333, 4330,
	267, 227, 140, 4329, 4328, 287, 286, 4327, 4326, 4324,
	4323, 4321, 3594, 4320, 4319, 4318, 4315, 4313, 4311, 4308,
	4307, 4306, 152, 17, 44, 4303, 4302, 92, 102, 93,
	96, 99, 107, 4301, 4299, 128, 4297, 153, 127, 4296,
	119, 117, 21, 22, 260, 258, 6711, 256, 4295, 4294,
	4293, 263, 209, 4291, 259, 4290, 4289, 4288, 4287, 4286,
	4285, 86, 60, 221, 4284, 4283, 163, 186, 200, 197,
	189, 193, 148, 66, 106, 88, 65, 50, 15, 90,
	232, 19, 1, 281, 4282, 278, 10, 156, 7, 28,
	4281, 4280, 4279, 4278, 3996, 125, 4277, 288, 262, 184,
	4275, 4273, 4270, 1194, 4269, 4266, 61, 252, 192, 126,
	110, 20, 144, 4265, 168, 181, 40, 4260, 191, 74,
	4257, 4255, 100, 95, 10227, 11986, 4254, 4253, 130, 83,
	129, 3317, 162, 160, 216, 190, 139, 180, 175, 55,
	220, 219, 194, 279, 4252, 276, 4249, 3616, 98, 203,
	171, 6378, 4246, 4245, 4242, 85, 4241, 114, 4240, 4239,
	72, 24, 3, 2, 158, 42, 41, 12, 4238, 29,
	133, 51, 23, 4237, 31, 4232, 4231, 4230, 4227, 49,
	4225, 82, 174, 4209, 4207, 300, 4204, 101, 53, 34,
	4202, 56, 234, 4201, 238, 147, 4199, 4191, 277, 198,
	4189, 76, 257, 4188, 4187, 4186, 4184, 4183, 4181, 154,
	8, 143, 4180, 4179, 165, 4177, 58, 261, 212, 4176,
	68, 4173, 4168, 195, 52, 159, 298, 183, 245, 138,
	241, 207, 250, 4167, 4163, 4162, 230, 4161, 4160, 235,
	176, 4159, 4156, 215, 304, 94, 48, 89, 254, 87,
	211, 173, 4155, 214, 4154, 4151, 302, 199, 225, 43,
	11, 6, 103, 112, 4149, 5, 251, 172, 248, 131,
	4148, 8767, 2724, 2531, 246, 4147, 167, 142, 81, 135,
	170, 285, 97, 4146, 4144, 4134, 4143, 4141, 4139, 4138,
	202, 4137, 4136, 4135, 164, 185, 233, 4130, 123, 77,
	54, 26, 134, 271, 297, 132, 237, 206, 274, 4129,
	4128, 4127, 201, 4126, 73, 331, 182, 218, 273, 67,
	4125, 116, 4123, 166, 204, 78, 169, 4122, 239, 4121,
	4120, 4119, 4118, 4116, 4115, 4112, 122, 253, 4111, 4109,
	4108, 36, 208, 4107, 284, 229, 244, 113, 62, 4106,
	111, 3036, 4105, 120, 224, 104, 4, 4100, 35, 4099,
	3603, 63, 4098, 0, 14888, 11047, 13828, 14648, 4094, 2488,
	4091, 4089, 4087, 223, 79, 4086, 4085, 4084, 109, 4083,
	91, 4082, 4077, 75, 4075, 25, 16, 18, 32, 27,
	730, 446, 4065, 4064, 64, 149, 136, 4062, 301, 249,
	4060, 4059, 4056, 4047, 115, 4043, 47, 4042, 45, 4041,
	4037, 46, 14, 30, 4036, 4034, 161, 4033, 121, 226,
	178, 4032, 179, 4031, 84, 145, 4030, 4027, 4024, 71,
	69, 282, 222, 231, 105, 4021, 299, 4020, 213, 4018,
	4017, 33, 4016, 4015, 264, 124, 118, 39, 266, 155,
	38, 196, 228, 4014, 4013, 187, 4012, 4010, 4009, 293,
	4008, 3614, 283, 4007, 37, 4006, 4005, 4004, 13, 4002,
	4001, 217, 3330, 4000, 3999, 9, 3991, 210,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 631, 631, 631,
	632, 632, 633, 633, 633, 26, 51, 19, 20, 20,
	20, 20, 634, 634, 634, 634, 39, 27, 52, 32,
	32, 32, 32, 32, 225, 225, 225, 225, 25, 25,
	47, 47, 269, 269, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 627, 627, 271, 271, 270, 258,
	258, 259, 259, 260, 260, 635, 635, 272, 272, 272,
	273, 273, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 525, 525, 525, 556, 556, 556, 556, 558,
	558, 654, 654, 655, 655, 655, 655, 655, 140, 140,
	422, 422, 422, 61, 61, 61, 61, 61, 622, 622,
	227, 227, 227, 229, 229, 228, 228, 228, 228, 228,
	85, 85, 641, 641, 640, 639, 639, 639, 642, 642,
	642, 226, 226, 226, 136, 136, 136, 136, 136, 136,
	136, 136, 137, 137, 138, 138, 230, 230, 230, 232,
	232, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 237, 18, 18, 18, 119, 119,
	119, 119, 119, 119, 119, 114, 114, 560, 560, 561,
	561, 221, 221, 222, 222, 222, 222, 223, 223, 224,
	224, 224, 76, 76, 234, 234, 236, 236, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 64, 64, 64, 64, 64, 65, 65, 65, 65,
	65, 65, 66, 66, 66, 66, 66, 66, 67, 67,
	74, 74, 74, 74, 74, 74, 74, 74, 202, 202,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 82, 82, 82, 82, 82, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 657, 657, 658,
	658, 659, 659, 660, 660, 660, 660, 660, 660, 660,
	660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
	660, 660, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 91,
	91, 383, 383, 346, 346, 92, 92, 92, 93, 93,
	94, 94, 78, 78, 619, 619, 620, 620, 620, 620,
	516, 516, 79, 628, 628, 628, 630, 630, 629, 629,
	96, 96, 421, 421, 97, 97, 97, 97, 97, 97,
	98, 98, 98, 98, 98, 98, 98, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 106, 106, 106, 106, 106, 107, 107, 107, 104,
	104, 104, 101, 101, 101, 100, 100, 100, 105, 105,
	105, 618, 334, 334, 103, 103, 103, 102, 102, 102,
	399, 399, 108, 108, 108, 108, 347, 109, 109, 109,
	109, 109, 109, 109, 109, 112, 112, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	518, 518, 4, 4, 264, 264, 263, 263, 263, 263,
	5, 5, 5, 267, 267, 266, 265, 110, 110, 110,
	483, 483, 115, 115, 115, 437, 437, 116, 116, 116,
	116, 116, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 624, 624, 392, 392, 297, 297, 297,
	297, 128, 128, 128, 128, 129, 129, 129, 129, 130,
	130, 207, 207, 146, 146, 146, 146, 145, 145, 145,
	145, 145, 145, 145, 145, 68, 68, 68, 69, 69,
	70, 70, 71, 71, 72, 72, 73, 73, 73, 73,
	73, 149, 149, 31, 31, 31, 31, 150, 150, 651,
	651, 152, 148, 148, 148, 148, 148, 147, 147, 151,
	151, 151, 151, 153, 155, 155, 155, 155, 155, 154,
	154, 154, 154, 154, 156, 156, 550, 550, 407, 407,
	548, 548, 570, 570, 549, 549, 353, 353, 353, 353,
	353, 354, 354, 354, 559, 559, 559, 559, 559, 559,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 208, 208, 208, 209,
	209, 214, 214, 215, 215, 215, 216, 216, 216, 213,
	213, 213, 210, 210, 211, 211, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 219, 219, 217, 217,
	218, 218, 662, 662, 661, 661, 220, 220, 220, 220,
	220, 183, 183, 183, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 408, 408, 186, 186, 186,
	170, 170, 158, 158, 158, 158, 158, 158, 158, 158,
	233, 233, 233, 233, 163, 163, 163, 163, 163, 163,
	163, 163, 164, 164, 164, 159, 159, 172, 172, 172,
	172, 172, 165, 165, 166, 166, 166, 167, 167, 167,
	167, 194, 194, 169, 169, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 160, 160, 160, 160, 174, 174,
	174, 174, 444, 444, 444, 200, 200, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 197, 197, 197, 197, 197, 197, 643,
	643, 644, 644, 644, 190, 190, 190, 190, 190, 190,
	497, 497, 184, 184, 184, 184, 189, 189, 189, 189,
	192, 192, 192, 192, 427, 427, 181, 181, 181, 182,
	182, 182, 187, 187, 199, 188, 384, 384, 185, 185,
	191, 191, 191, 191, 193, 193, 193, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 162, 162, 162, 162,
	195, 195, 180, 180, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 663, 663, 176, 176, 176,
	175, 175, 175, 175, 178, 178, 179, 179, 179, 179,
	179, 179, 179, 177, 168, 198, 621, 621, 616, 616,
	616, 616, 616, 616, 616, 616, 616, 617, 617, 617,
	617, 623, 623, 120, 120, 120, 120, 120, 120, 120,
	131, 131, 131, 131, 131, 131, 131, 134, 134, 121,
	121, 121, 121, 121, 121, 121, 124, 124, 122, 122,
	122, 122, 123, 123, 86, 86, 86, 86, 86, 17,
	17, 17, 87, 87, 288, 288, 242, 242, 242, 371,
	371, 243, 243, 361, 361, 361, 361, 238, 238, 239,
	239, 240, 241, 241, 88, 88, 664, 664, 664, 636,
	636, 636, 637, 637, 637, 637, 637, 637, 355, 355,
	356, 356, 463, 463, 463, 463, 463, 359, 359, 359,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 369,
	370, 370, 362, 362, 368, 367, 367, 366, 366, 365,
	365, 363, 364, 364, 364, 373, 373, 372, 375, 375,
	374, 462, 579, 579, 581, 581, 581, 581, 581, 581,
	581, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 445, 445,
	665, 665, 666, 667, 577, 577, 577, 578, 573, 573,
	574, 574, 574, 574, 574, 357, 357, 358, 358, 358,
	358, 575, 576, 390, 390, 501, 580, 580, 582, 582,
	584, 668, 668, 668, 668, 668, 668, 669, 669, 669,
	461, 461, 460, 460, 459, 459, 381, 381, 585, 585,
	585, 585, 586, 586, 586, 586, 586, 589, 588, 587,
	587, 587, 587, 587, 90, 90, 90, 424, 424, 423,
	423, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 204, 204, 300, 300,
	300, 84, 84, 84, 14, 14, 14, 14, 14, 14,
	14, 315, 315, 15, 15, 15, 638, 638, 638, 89,
	89, 89, 89, 89, 89, 379, 379, 379, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 626, 626, 625, 625, 301, 301,
	671, 671, 95, 95, 95, 95, 95, 95, 95, 95,
	519, 519, 520, 520, 83, 83, 83, 83, 83, 446,
	446, 443, 443, 442, 442, 389, 389, 499, 499, 499,
	500, 305, 305, 306, 306, 261, 261, 261, 34, 33,
	24, 24, 28, 28, 29, 29, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 30, 30, 54, 54, 54,
	54, 55, 55, 55, 55, 58, 58, 59, 59, 53,
	53, 53, 53, 56, 56, 50, 50, 60, 60, 60,
	60, 60, 645, 647, 647, 646, 646, 650, 650, 650,
	650, 650, 650, 648, 648, 336, 336, 649, 649, 652,
	652, 653, 653, 127, 127, 132, 132, 132, 132, 132,
	133, 133, 133, 133, 135, 135, 135, 135, 144, 144,
	203, 203, 203, 203, 203, 203, 203, 62, 62, 62,
	62, 75, 75, 75, 75, 142, 673, 673, 673, 143,
	143, 143, 672, 672, 298, 298, 456, 456, 457, 457,
	674, 674, 458, 458, 458, 458, 458, 291, 290, 292,
	292, 293, 293, 81, 81, 81, 281, 281, 280, 282,
	282, 283, 283, 278, 278, 562, 562, 285, 285, 285,
	286, 286, 274, 274, 275, 275, 276, 276, 277, 277,
	289, 289, 557, 557, 675, 675, 118, 118, 118, 206,
	206, 345, 345, 345, 453, 453, 453, 382, 382, 312,
	312, 455, 455, 455, 455, 455, 420, 420, 420, 205,
	205, 397, 397, 410, 410, 411, 411, 513, 513, 412,
	125, 125, 126, 126, 141, 141, 246, 246, 244, 244,
	244, 244, 244, 244, 244, 244, 251, 251, 252, 252,
	253, 253, 254, 255, 255, 255, 255, 400, 400, 256,
	256, 256, 245, 245, 245, 247, 247, 247, 247, 247,
	247, 247, 250, 250, 250, 250, 257, 257, 257, 249,
	249, 596, 596, 596, 598, 598, 600, 600, 599, 599,
	595, 595, 597, 597, 670, 670, 426, 426, 426, 378,
	380, 376, 376, 377, 377, 387, 387, 385, 386, 386,
	388, 388, 498, 498, 498, 262, 262, 262, 417, 417,
	417, 417, 418, 418, 449, 449, 447, 447, 447, 447,
	448, 448, 450, 450, 450, 451, 451, 452, 452, 414,
	414, 415, 415, 416, 416, 416, 416, 479, 479, 248,
	248, 248, 394, 394, 394, 395, 395, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 470, 470,
	468, 468, 468, 468, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 503, 504, 504, 396, 396, 505, 454,
	454, 614, 614, 614, 615, 615, 496, 496, 506, 506,
	506, 506, 506, 506, 494, 494, 495, 495, 514, 515,
	515, 430, 430, 430, 430, 428, 428, 431, 431, 431,
	431, 431, 429, 429, 507, 507, 507, 507, 419, 419,
	508, 508, 508, 508, 509, 510, 510, 511, 511, 464,
	465, 465, 521, 521, 521, 521, 523, 393, 393, 393,
	393, 393, 572, 571, 571, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 538, 538, 538, 538,
	538, 538, 538, 524, 524, 524, 524, 524, 528, 528,
	528, 527, 527, 527, 527, 527, 527, 527, 527, 527,
	527, 527, 529, 529, 534, 534, 535, 535, 535, 530,
	531, 536, 536, 536, 536, 676, 676, 540, 540, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 526, 526,
	526, 533, 533, 533, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 438, 438, 440,
	440, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 473, 473, 473, 473, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 590, 590, 590, 590, 590, 590, 590, 590, 475,
	475, 593, 593, 594, 594, 591, 591, 591, 591, 591,
	591, 591, 591, 591, 591, 591, 591, 591, 591, 591,
	591, 591, 591, 591, 591, 591, 591, 591, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 601, 601, 602, 602,
	604, 604, 605, 605, 606, 607, 607, 607, 608, 609,
	609, 603, 603, 610, 610, 610, 610, 611, 611, 612,
	612, 612, 612, 612, 613, 613, 613, 613, 613, 485,
	485, 486, 486, 492, 492, 492, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 352, 352, 351, 302, 302, 302, 302, 302, 302,
	405, 405, 403, 403, 403, 406, 406, 404, 404, 402,
	402, 401, 401, 482, 482, 480, 480, 484, 484, 432,
	432, 539, 539, 539, 539, 539, 539, 539, 539, 433,
	433, 433, 441, 434, 434, 435, 435, 435, 435, 435,
	476, 477, 436, 436, 436, 478, 478, 487, 491, 491,
	490, 489, 489, 488, 488, 466, 466, 467, 467, 413,
	413, 677, 677, 409, 409, 512, 512, 512, 512, 349,
	349, 398, 398, 348, 348, 340, 340, 341, 341, 341,
	341, 391, 391, 493, 493, 541, 541, 542, 542, 543,
	543, 544, 544, 545, 546, 547, 481, 481, 323, 322,
	309, 310, 321, 320, 319, 308, 311, 316, 317, 318,
	313, 314, 330, 329, 328, 279, 284, 335, 337, 337,
	339, 339, 338, 338, 325, 326, 327, 517, 307, 342,
	342, 343, 343, 343, 344, 344, 344, 344, 303, 303,
	304, 304, 331, 331, 332, 333, 333, 324, 324, 324,
	294, 294, 294, 295, 295, 296, 296, 555, 555, 552,
	552, 552, 553, 553, 553, 554, 554, 554, 554, 551,
	551, 551, 551, 551, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 564, 564, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 566, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 569, 569,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 2, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 6, 3, 8, 5, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 3, 2, 1, 4, 3,
	2, 0, 7, 2, 5, 0, 1, 3, 3, 1,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 4, 3, 1, 2, 3, 2, 2, 2,
	4, 6, 3, 1, 2, 2, 7, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 7, 4, 7, 8, 8, 9, 11, 5,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	13, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 1, 2, 2, 2, 9,
	2, 1, 0, 1, 1, 0, 1, 2, 0, 2,
	2, 0, 2, 2, 2, 2, 1, 2, 3, 3,
	4, 4, 4, 4, 3, 3, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 3, 5, 7, 3,
	3, 3, 4, 8, 6, 4, 5, 5, 5, 3,
	0, 1, 1, 1, 4, 4, 3, 4, 4, 3,
	4, 4, 1, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 5, 7, 4, 2, 6, 4,
	3, 2, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 5, 3, 5, 3, 3, 4,
	4, 5, 0, 1, 1, 1, 1, 3, 2, 3,
	4, 3, 4, 3, 5, 3, 4, 4, 3, 4,
	5, 3, 4, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 7, 5, 2, 0, 3, 3,
	4, 3, 3, 3, 5, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 6, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	7, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 1, 1, 1,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 3, 6, 4, 2, 3,
	5, 5, 5, 2, 5, 5, 2, 2, 2, 0,
	1, 1, 3, 4, 10, 11, 9, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 6, 1, 3, 1, 2, 0, 1, 2,
	3, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 3, 0, 4, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 3, 2,
	2, 4, 7, 3, 4, 6, 5, 7, 5, 5,
	3, 3, 0, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 8, 11, 5, 4, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 16, 19, 15, 18, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 14, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 7, 10, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 634, -111, -108, -76, -74, -115, -116,
	-97, -117, -110, -139, -144, -125, -126, -127, -140, -146,
	-203, -208, -209, -210, -211, -220, -3, -61, -63, -77,
	-96, -98, -109, -119, -118, -120, -128, -136, -131, -114,
	-68, -141, -145, -157, -204, -205, -206, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 453, 465, 421, 147,
	444, 426, -151, -152, 484, -62, -75, -143, -142, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -84, -80, -91, -85, -78,
	-79, -82, -656, 106, -597, -99, -102, -135, -660, 168,
	232, -121, -122, -123, 386, -129, -130, 446, -132, -133,
	-134, 449, 169, -70, -69, 162, -244, -246, -148, -147,
	-149, -207, -158, -159, -160, -161, -162, -164, -165, -167,
	-194, -168, -169, -170, -171, -172, -173, -177, -197, -174,
	-175, -176, -179, -178, -180, -185, -181, -182, -183, -184,
	-186, -187, -189, -190, -191, -192, -193, -195, -196, 489,
	-188, -198, -166, -199, 554, 52, 505, 85, 152, 457,
	21, -7, -8, -9, -10, -11, -12, -13, -17, -16,
	-60, -4, -5, -81, -83, -86, -87, -88, -95, -89,
	-90, -596, -100, -101, -104, -106, -107, -103, -105, 445,
	606, -247, -245, 631, 570, -163, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -46, -51, -48, -49,
	-47, -50, -52, -53, -54, -55, -56, -57, -58, -59,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -45, -19, -20, -32, 593, 602, -250, -248,
	-249, -257, 476, 578, 527, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, -347, 2, -325, -331, -332, -333, -324, -294, -566,
	-569, 4, -563, -567, 175, 242, 347, 21, 22, 24,
	23, 25, 26, 27, 28, 30, 31, 41, 43, 44,
	46, 47, 48, 49, 50, 51, 52, 56, 58, 62,
	63, 64, 65, 66, 67, 71, 76, 77, 82, 83,
	84, 85, 86, 87, 88, 89, 95, 92, 93, 94,
	96, 98, 100, 101, 102, 103, 104, 105, 107, 108,
	109, 111, 112, 113, 121, 122, 123, 124, 125, 127,
	133, 128, 134, 137, 132, 136, 138, 140, 141, 142,
	145, 146, 147, 149, 150, 151, 153, 154, 155, 157,
	158, 160, 161, 162, 165, 163, 166, 164, 167, 168,
	169, 170, 173, 181, 182, 183, 188, 190, 191, 192,
	194, 195, 198, 199, 200, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 217, 219, 220, 221, 222,
	223, 224, 225, 231, 232, 234, 235, 236, 237, 238,
	243, 244, 245, 249, 255, 256, 260, 261, 262, 264,
	268, 269, 270, 271, 272, 273, 275, 277, 276, 279,
	282, 283, 286, 287, 288, 289, 290, 291, 295, 296,
	292, 297, 298, 300, 301, 304, 302, 305, 306, 303,
	307, 310, 311, 312, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 308, 309, 324, 322, 326, 327, 328,
	329, 330, 345, 340, 341, 342, 334, 335, 331, 336,
	332, 333, 337, 338, 344, 339, 349, 350, 351, 352,
	355, 229, 248, 357, 358, 361, 363, 380, 366, 367,
	368, 371, 372, 375, 378, 379, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 391, 392, 394, 395, 396,
	398, 399, 400, 402, 404, 405, 407, 408, 409, 411,
	412, 413, 414, 415, 416, 417, 418, 420, 421, 423,
	422, 424, 426, 428, 429, 430, 436, 437, 444, 438,
	440, 441, 442, 443, 445, 446, 447, 448, 449, 451,
	452, 453, 455, 456, 457, 458, 459, 461, 463, 464,
	468, 469, 470, 486, 487, 508, 465, 466, 467, 471,
	472, 473, 474, 475, 479, 477, 478, 480, 481, 482,
	484, 485, 488, 489, 491, 492, 493, 494, 495, 496,
	497, 500, 502, 503, 504, 505, 506, 526, 507, 509,
	513, 514, 515, 516, 510, 511, 525, 518, 519, 520,
	522, 523, 528, 529, 530, 531, 532, 533, 535, 536,
	538, 546, 547, 548, 549, 551, 554, 555, 556, 557,
	544, 559, 560, 563, 564, 568, 565, 569, 566, 567,
	570, 572, 575, 576, 577, 583, 582, 584, 585, 586,
	588, 589, 594, 595, 597, 598, 599, 37, 53, 54,
	57, 59, 61, 72, 73, 74, 78, 129, 130, 159,
	171, 172, 184, 201, 202, 214, 216, 226, 227, 228,
	250, 251, 253, 258, 280, 354, 356, 373, 377, 393,
	397, 401, 403, 419, 460, 498, 512, 517, 539, 540,
	541, 542, 550, 552, 578, 579, 580, 587, 596, -347,
	2, -325, 364, -318, 2, -294, -294, 404, 29, 2,
	29, 392, 478, 530, 532, 2, -624, -392, 2, 29,
	-297, -294, 106, 212, 476, -318, 2, -624, 212, -392,
	26, 2, -294, 2, 378, 23, 28, 69, 80, 102,
	145, 170, 193, 198, -659, 380, 412, 463, 480, 525,
	536, 551, 2, 582, 301, 477, 527, 242, 124, 556,
	471, -638, 468, 469, 378, 410, 455, 215, 571, -298,
	2, 465, -294, 301, 2, 634, 98, 77, 460, 481,
	-154, 2, 291, 547, -155, -156, -153, 539, -550, 471,
	455, 324, -294, 634, 634, 634, 29, -307, 2, -294,
	-307, 2, -212, 2, -307, -661, -219, -218, -217, 22,
	437, 183, 273, 196, 233, 329, 407, 194, 50, -212,
	2, 527, 242, 471, 124, 523, 634, 634, 2, 527,
	383, 582, 477, 124, 416, 242, 556, 198, 145, 28,
	71, 48, 533, 610, 471, -638, 607, 608, 301, 131,
	-622, 2, -616, 4, -567, -563, -341, -340, 527, 533,
	124, -333, -324, 623, -332, 634, 634, 634, 634, 2,
	261, 262, 414, 413, 481, 482, 29, 634, 634, 634,
	634, 468, 2, 170, 23, 28, 69, 97, 102, 131,
	193, 198, 369, -657, 380, 412, 480, 525, 529, 536,
	551, -637, 507, 71, 443, 471, -636, -638, 301, 556,
	145, -442, 124, 291, 210, 564, 532, 530, 562, 137,
	249, 567, 566, 634, 634, -112, 2, 631, 33, 32,
	-111, -115, 147, 484, -237, 527, 254, 2, -294, 634,
	634, 634, 2, 261, 262, 468, 469, 29, 634, 634,
	196, -616, 523, 2, 634, 634, 634, 2, 29, 261,
	262, 468, 469, 254, 2, 71, 473, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 2, -201, 481, 507, 222, 49,
	48, 77, 29, 411, 82, 384, 125, 131, 154, 557,
	213, 242, 243, 269, 97, 98, -444, 46, 262, 71,
	261, 469, -643, 468, -497, 528, 472, 478, 522, 89,
	273, 465, 547, 549, 106, 572, 456, 599, 416, 417,
	520, 430, 518, 292, 163, 197, 4, 124, 324, 455,
	483, 277, 276, 539, 291, 464, 387, 87, 634, -670,
	2, 527, -672, 2, 547, 547, 2, -672, 2, -672,
	2, -672, 2, -673, 547, 596, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, -245, -247, -246, 634,
	634, 634, 634, 634, 634, 634, -201, 481, 2, 77,
	29, 29, -385, -387, 561, 252, 156, 370, -244, -246,
	2, -596, -548, 2, -471, -570, -473, 621, 622, 614,
	524, 70, -351, 346, 600, -485, 131, 562, 364, -569,
	-474, -487, 159, 380, 460, -406, 8, 9, 5, 6,
	7, -303, -475, -481, 553, 174, 353, -344, 635, 10,
	631, -593, -246, -486, 38, 216, 68, -552, -343, -304,
	-524, 253, -342, -324, -590, -591, 4, -563, -564, -553,
	-527, -535, -531, -532, -538, -294, -566, 80, 115, 116,
	114, 119, 118, 294, 293, 120, 117, 483, 571, 69,
	37, 226, 227, 258, 354, 228, 78, -592, 146, -565,
	250, 251, 498, 54, 419, 184, 130, 129, 356, 59,
	57, 579, -536, 126, 539, 540, 541, 542, 201, 202,
	61, 171, 172, 377, 401, 517, 550, 552, 214, 280,
	45, 110, 197, 247, 230, 257, 259, 263, 281, 284,
	325, 343, 348, 374, 376, 454, 490, -676, 580, 512,
	72, 73, 189, -598, 422, -599, -318, -598, 634, 634,
	636, 634, -376, -378, -380, 2, 29, 143, 631, 2,
	-502, 2, -503, -507, -246, 274, -506, 631, -504, 629,
	-325, 365, -594, 461, -590, -591, -303, -324, -343, 4,
	-563, -565, 633, -381, 631, 124, 471, 527, 81, 242,
	97, 170, 198, -437, 631, -294, 29, 364, 543, 636,
	-377, 409, -483, 631, 364, 367, 196, 367, 63, 305,
	2, 2, 2, 2, 2, 226, -294, 527, 123, 2,
	272, 2, 2, 2, 2, 2, 2, 2, -399, 226,
	2, -325, 582, -399, 226, 2, -399, 226, 2, -443,
	2, 91, -308, 226, 2, -294, -334, 226, 2, -329,
	-331, -339, 226, 2, -337, -294, -558, 226, 2, -556,
	4, -563, 120, 483, -471, 2, -141, 2, 63, -294,
	582, 2, 486, 2, 631, -154, 2, 74, 547, 45,
	481, -155, 2, -457, 2, -458, -290, -291, -292, -514,
	-293, 260, 408, 418, 603, 135, 346, 599, -651, 196,
	613, 543, -548, -548, -548, -407, 633, -214, 56, -307,
	-662, -661, -662, -546, 29, -541, 8, -542, 621, 622,
	-546, -546, -662, -662, 2, 2, 2, 2, 2, 2,
	-507, 226, -325, 2, -322, -551, 4, -563, -567, -564,
	-568, -566, 29, 32, 33, 34, 36, 38, 39, 40,
	42, 60, 68, 69, 75, 79, 81, 91, 97, 106,
	114, 115, 117, 116, 118, 119, 120, 131, 135, 139,
	143, 144, 148, 152, 156, 174, 176, 189, 193, 196,
	212, 215, 218, 233, 246, 252, 254, 274, 278, 285,
	293, 294, 346, 353, 359, 364, 365, 369, 370, 390,
	406, 425, 450, 476, 483, 501, 521, 527, 537, 543,
	545, 553, 561, 562, 571, 573, 581, 590, 591, 592,
	593, -569, 80, 2, -507, 226, 2, -328, 226, -507,
	-331, 2, -308, 2, -471, -631, 535, 166, 438, 2,
	-348, 226, -325, -327, -331, -329, 2, 2, 2, 2,
	-471, 2, -560, 2, -555, 10, -554, 5, 4, -563,
	-567, -564, -474, 2, -485, 29, -337, 2, -556, 226,
	2, 29, 29, 582, 409, 254, 543, 636, -398, -340,
	-341, -547, 4, 8, -391, -294, 633, -471, 2, -141,
	-124, 2, 189, -471, 226, 2, -141, 226, 2, -471,
	226, 2, -141, 226, 2, -294, 2, -639, 2, -560,
	226, 226, -294, 2, 305, 2, 2, 551, 2, 102,
	527, 123, 2, 442, -658, 463, 555, 2, 2, 2,
	2, 2, 2, 2, 527, -313, 2, -294, 189, 510,
	-337, 226, -338, 2, 477, -671, 422, -556, 226, 2,
	582, -329, 226, 2, -329, 242, 256, -308, 226, 2,
	532, 530, 532, 530, 196, 2, 254, 2, 254, 2,
	-508, 2, -509, -503, -510, 629, 365, -518, 2, -517,
	-554, 578, -112, 631, -112, 631, 481, 631, -560, -325,
	-325, -471, 2, -141, -124, 2, -471, 2, -141, 2,
	-294, 2, -138, -560, -137, 631, 196, 572, -294, 2,
	-471, 2, -141, -124, 2, -471, 2, -141, 2, -237,
	189, 2, 124, 527, -201, 2, 189, 573, 2, 8,
	2, 233, -233, -560, 472, 181, 417, 2, 486, 2,
	487, 77, -444, 599, 77, 196, 2, 196, 2, -427,
	2, 593, 409, 196, 2, 2, -621, 2, 364, 196,
	2, 196, 2, 196, 2, 196, 2, 196, 2, -200,
	482, 548, 526, 413, 262, 2, -141, 590, -124, 262,
	261, -471, 590, 2, -644, 189, 469, -471, 2, 546,
	271, 164, 196, -427, 2, 196, 2, 196, 2, 5,
	2, 43, 414, 508, 2, 260, 408, 508, 2, 506,
	2, -325, 527, 582, 477, 124, 29, 2, 468, 2,
	2, 92, 93, 196, 2, 196, 2, 211, 196, 2,
	430, 196, 527, -408, 633, 599, 2, -419, -507, -456,
	-457, -456, 543, -385, -387, -201, 486, 2, -251, -417,
	-253, 189, -447, -448, -254, 285, 176, 359, -255, -426,
	29, 143, -426, -426, 63, 632, 632, 11, 12, 79,
	43, 621, 622, 623, 624, 187, 625, 626, 619, 620,
	618, 611, 612, 616, 266, 267, 99, 615, 613, 90,
	299, 462, 177, 178, 179, 180, 439, 240, 35, 241,
	14, 15, 16, -351, 34, 369, 284, 600, 230, 490,
	614, 17, 18, 19, 257, 259, 348, 53, 233, -302,
	380, -350, 524, 70, -471, -471, -471, -471, -471, -471,
	-471, -471, 376, 631, -413, -466, 629, -246, 631, 631,
	631, 631, -547, -246, -471, -485, 632, -404, 631, -246,
	-485, -480, 631, 460, 629, 631, -488, -471, 5, 5,
	5, 631, 633, -601, 594, 189, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 403, -529, 631, -528, 631, -528, -528, 583,
	-526, 631, 602, 595, 631, -526, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 583,
	533, 636, -598, -381, 631, -409, -512, -471, 623, -409,
	-409, 364, -401, -471, 110, -430, 263, 325, 197, 281,
	454, 247, -468, 635, -468, -496, 602, -246, -504, -324,
	-246, -506, 631, -502, -496, -113, -547, -96, -109, -118,
	-141, -157, -205, -206, 623, -325, 631, 196, 631, 633,
	-551, 196, -391, -308, -335, -294, -325, -342, -343, -348,
	-319, -294, 2, 2, 142, -401, -616, 556, 471, 29,
	477, -558, -297, 39, -482, -521, -522, -572, 635, -571,
	-524, -534, -530, -533, 393, 397, -553, 57, 579, -536,
	253, 4, -563, -565, 250, 251, 498, 54, 419, 184,
	130, 129, 356, 59, 539, 540, 541, 542, 201, 202,
	61, 580, 512, 72, 73, -616, 556, 471, 29, 477,
	189, -558, 189, -558, 2, 2, 159, 2, 2, 2,
	-294, -272, 636, 67, 447, 159, -399, 226, -272, 159,
	-272, 159, -349, 226, -348, -272, 159, -272, 636, 159,
	-272, 636, 159, 633, 636, 159, -558, 2, -443, -550,
	-401, 39, -457, 2, 131, 4, 5, -674, 636, 283,
	-354, 298, 345, 221, 365, 597, 357, 135, -559, 5,
	4, -481, -493, 131, 291, 253, -541, -543, 9, -544,
	621, 622, -549, -548, 113, 633, -551, -215, 248, 41,
	-307, -307, -662, -662, 8, 8, -662, -662, -307, -307,
	-269, 440, 484, 379, -268, 25, 30, 147, 244, 330,
	576, 165, -366, 245, 445, -363, 383, 159, 502, 565,
	-631, -634, 467, 535, 166, 438, 94, 357, 484, 379,
	440, 159, -423, -425, 39, 122, 330, 378, 64, 236,
	303, 304, 505, 587, 159, 484, 379, 440, 379, -15,
	-283, 25, 147, -285, -280, 484, 30, -634, 103, 440,
	606, 445, 389, 519, 406, -634, -631, 279, -633, 589,
	344, -271, 502, 565, -631, -634, 467, 440, -270, -368,
	-363, 383, 159, 635, 25, 147, 440, 484, 379, -654,
	-655, 30, -264, -263, 25, 147, 484, 568, -267, 233,
	-266, 25, -150, -130, -149, 445, 484, -150, 2, 440,
	379, -625, -315, -595, 233, 593, 159, -315, -315, -507,
	226, -648, 189, 2, -641, -137, 275, 5, 10, -560,
	-137, -398, 636, 636, -551, 623, 469, 468, 159, 159,
	159, 159, 262, 189, 346, 346, 593, 2, 2, 2,
	2, 2, 198, -636, -659, 2, 2, -325, 226, -383,
	364, -619, -620, 527, -325, 189, 346, 45, -328, 226,
	2, -331, 582, -625, 346, -330, 226, -325, 39, 631,
	346, 2, -443, 2, 242, -595, 346, -508, -345, -325,
	-503, -345, 484, -318, 39, -468, -325, 632, 636, -518,
	-518, -560, -224, 593, 196, 631, -237, 593, 593, 262,
	-515, 636, -514, 233, -561, -560, -138, -560, 443, 196,
	262, -560, -619, -308, 2, -325, 2, 527, 264, -560,
	196, 233, -224, -560, -560, -560, -550, 29, 487, 2,
	-200, 482, 548, 93, 487, 2, -325, 527, 124, 242,
	83, -648, 189, 2, -294, -623, 189, -617, 455, 471,
	556, -616, -325, 124, -325, 124, -325, 124, -325, -325,
	2, 2, 2, 2, 2, 88, 2, -141, -471, 2,
	88, 2, 48, 503, -644, 189, 2, 546, 2, 546,
	2, -294, -294, -294, 359, 507, 283, 593, -325, -325,
	-325, -326, -331, 472, 528, 557, 469, -471, 2, -663,
	2, 196, 189, 2, 527, 242, 527, 242, 124, 196,
	77, 124, 29, 196, 527, 466, 633, 4, -272, 636,
	-298, -251, -417, -550, -418, -417, -252, -251, -254, 189,
	418, 566, 330, 488, 268, -448, -447, 29, -471, -452,
	183, 329, -471, -450, -473, 621, 622, -542, -544, -400,
	357, -245, -245, -245, -388, -498, -471, 406, 242, -523,
	-521, -521, -323, -551, 539, -471, -471, -471, -471, -471,
	-471, -471, -471, -471, -471, -471, -471, -471, -471, -471,
	-471, -471, -471, -471, -471, -471, -471, -471, -471, -471,
	-471, -471, -471, -471, -471, -471, -471, -471, -471, -471,
	-471, 284, 230, 490, 53, 233, -471, 543, -471, -471,
	-471, -471, 322, 346, 353, 553, 174, 563, 143, 357,
	-677, 521, 42, -478, -246, -405, 631, -492, 36, 501,
	29, -485, 631, 2, -466, -471, -467, -352, -350, -294,
	621, 622, 623, 624, 625, 626, 611, 612, 613, 14,
	15, 16, 616, 620, 618, 619, 187, 99, 615, 299,
	462, 90, 177, 178, 179, 180, 266, 267, 17, 18,
	19, 35, 614, -402, -401, -401, 632, 581, 29, 143,
	623, 2, 632, 636, 39, 632, -471, -402, -484, -480,
	-401, -491, -490, 590, -438, -439, 598, 308, 127, 224,
	306, -440, 475, -545, 8, -551, 623, -602, 182, 215,
	631, 632, 2, 632, 2, 632, -471, 2, 632, -471,
	2, 632, -471, 2, 632, -471, 2, 632, 2, 632,
	2, -471, -471, -471, -471, -471, -471, -471, -401, 8,
	-545, -545, 539, 539, -545, -545, -545, -537, 393, 394,
	395, 396, 286, 287, 288, 289, 397, 398, 399, 400,
	314, 315, 316, 317, 310, 311, 312, 313, 318, 319,
	320, 321, 206, 207, 208, 209, 202, 203, 204, 205,
	-537, -432, 2, -539, -401, 4, 598, 308, 127, 224,
	306, 475, 5, -432, 2, -433, 2, -471, -401, -434,
	-472, -473, 621, 622, 614, -351, -435, 2, -471, -402,
	-471, 60, 278, 545, -436, -471, 196, -401, -401, 2,
	-401, 2, -474, 2, -599, 39, -401, -394, 636, 196,
	39, 4, -394, -394, 631, 632, 636, -431, 219, 302,
	297, 256, -431, -502, -430, 263, -428, 374, -428, -428,
	-496, -309, 629, 637, -551, -496, -495, -494, 39, -318,
	371, -496, -496, 633, 632, -495, 630, -614, 631, 634,
	634, 634, 634, 634, -325, 631, -401, -551, 633, 509,
	2, 632, 257, 257, 257, 257, 257, 364, 461, 632,
	543, -618, -334, -339, 528, 2, 593, -111, 366, 632,
	636, -393, 38, 629, 633, -545, 2, 2, -540, 583,
	631, 631, -439, 631, 196, -618, -339, 528, 2, -624,
	-392, -392, 543, -294, 2, -325, -399, -272, 159, -399,
	-399, -272, 636, 159, -308, -329, -334, -337, -339, -294,
	-556, -558, -272, -330, -651, 632, 547, -458, -353, 418,
	500, 441, 479, 523, 9, 9, 636, -551, -216, 470,
	330, -307, -307, -307, -307, 636, -652, 97, 543, 81,
	631, 471, -287, 292, 543, -462, 226, 81, -573, 97,
	-311, -574, -294, 75, 562, 406, 193, 157, -652, 97,
	406, -652, 97, 2, 244, 97, 484, 507, 631, 29,
	63, -507, 43, 43, 29, -632, -633, 279, 196, 599,
	527, 242, 471, 543, 543, -507, -425, -521, 122, 303,
	304, 63, -546, -546, 63, -546, -546, -546, 593, -328,
	-507, 471, 543, 543, 543, 428, 518, 428, 518, -280,
	-155, 518, 543, 543, 29, -201, 448, 131, -675, 613,
	428, 279, -633, 543, 196, 636, 43, 43, 29, -632,
	196, 543, -348, -309, 577, 44, 577, 44, 577, 543,
	44, 471, 543, 636, 44, -263, -619, -619, -223, -222,
	-294, 5, -391, -266, -560, -265, 328, 77, 543, 543,
	-15, 484, -626, -299, 109, 336, 296, 337, 101, 333,
	100, 332, 107, 334, 108, 335, 584, 349, 585, 350,
	66, 331, 307, 338, 504, 339, 586, 351, -300, -301,
	150, 385, 575, 124, -556, -15, -15, 484, 379, 440,
	159, -649, 233, 29, -638, 233, -515, 233, -515, -340,
	-294, 633, -141, -471, -471, -141, -471, -141, 48, 159,
	159, 2, 2, -671, 272, 631, -357, 346, 196, -391,
	-516, 636, 254, -325, 175, -616, 159, -556, -424, -423,
	346, -330, 226, 2, 159, -381, 346, 153, 631, 416,
	2, 159, -310, 226, -295, -294, -443, -274, 531, 159,
	-421, 573, -453, -141, 631, 131, 39, -453, -410, -411,
	-513, -412, -311, 631, -318, -468, -112, -517, 632, 632,
	632, -223, 368, -237, -382, -312, -311, 123, 420, 420,
	-230, 593, -137, -138, 632, 636, -515, 233, 510, -138,
	-560, -224, -224, -515, -515, -325, 189, -560, -560, -224,
	-224, -224, 2, 2, 2, 2, -427, -325, -308, -348,
	-325, -336, 233, 29, 633, -558, -558, -339, -334, -427,
	-308, -427, -308, -427, -308, -427, -427, -141, -471, 507,
	2, 481, 189, 189, 633, -427, 8, -384, 450, 5,
	2, 416, 124, 527, 383, 242, -325, -348, -325, -348,
	-308, 124, -308, 125, 124, -325, 4, -507, -418, -252,
	365, 268, 488, -450, -451, -473, 460, 461, -451, 460,
	461, 8, 9, 8, 9, -256, 492, 352, -399, 636,
	-261, 40, 139, 268, -325, 599, 155, -471, -471, 543,
	-677, 521, -478, 155, -471, 322, 353, 553, 174, 563,
	143, 357, 196, 631, -472, -472, 632, -403, -471, -471,
	630, 639, 632, 633, 632, -387, 636, -385, -471, -401,
	-401, 632, 633, -401, -391, 630, 630, 636, 632, -489,
	-490, 148, -471, 543, 543, 543, 543, 631, 632, 633,
	-607, 375, 631, 631, -471, 632, 632, 632, 632, 39,
	636, 636, 636, 632, 636, 636, 636, 632, 632, 632,
	636, 632, 599, 599, 632, 632, 632, 632, 636, 632,
	636, 632, 196, 632, 632, -441, 390, 632, 11, 12,
	621, 622, 623, 624, 187, 625, 626, 619, 620, 618,
	611, 612, 613, 90, 299, 462, 14, 15, 16, -351,
	257, 233, -472, -472, -472, -472, 632, -476, -477, 196,
	189, 39, -436, -436, -436, 632, 196, -401, 632, 632,
	631, -600, 301, 346, 632, -465, -464, 591, -512, -395,
	2, -502, -320, -551, -465, -465, -401, -471, 263, 263,
	-429, 573, 364, -431, -502, -495, -547, -470, -469, 191,
	40, 139, 340, 341, 342, 229, 192, -495, -318, -381,
	-495, -495, -551, -496, -496, -494, 632, -615, -547, 632,
	-396, -505, -594, -387, 633, -551, -234, -595, -202, 5,
	353, -202, -202, -202, -202, -325, -558, 543, 543, 233,
	26, 391, -521, 629, 630, 8, -551, 631, -545, -545,
	-545, -558, 196, 196, 233, 364, 196, -556, 2, -272,
	-399, -272, -272, -348, -349, -272, -272, -272, -422, 593,
	-548, -457, 560, 86, 418, 539, -548, 121, 470, -268,
	440, 484, -311, -311, -325, -241, -240, -238, -294, 5,
	-335, 210, 429, -556, 346, -462, 226, -273, 346, 226,
	-319, -521, 631, -445, 595, 268, 268, 573, -311, -319,
	268, 226, -311, 226, -319, 2, -319, -627, 418, 358,
	-471, -239, -238, 63, -364, 290, 416, 347, -269, 440,
	484, 379, -141, -141, -141, 631, -651, 573, 142, -325,
	-348, -325, -335, -556, -330, 484, 379, 440, 343, -342,
	-546, -546, -423, 484, 379, 440, -335, -556, -328, -556,
	-279, 226, -294, 428, -279, 226, 428, 428, 471, -308,
	428, 599, 47, -675, 543, 196, -471, -471, -270, -141,
	-141, -141, 631, -309, -271, 440, 5, 226, -311, 5,
	-311, 226, 5, -294, -311, -335, -556, -655, 25, 147,
	-311, -224, 636, 613, 613, -267, 613, -335, -556, -299,
	385, -560, 353, 569, -308, -625, -315, 471, 543, 543,
	-507, -645, -646, 212, 453, 471, 456, -558, -137, -227,
	593, -137, -221, 237, 623, -622, -560, -294, 582, -294,
	-355, -358, -356, -311, -463, -462, -577, -578, -573, 284,
	242, 562, 256, 175, 97, -242, -243, 595, 593, 159,
	-346, -325, 629, -224, -620, -560, 175, -316, -294, -516,
	-337, -338, 159, -381, 346, -556, 39, 159, 631, 2,
	2, -329, 364, 346, -310, 226, -275, 149, -675, -308,
	-465, -395, -420, -455, 450, 364, -382, 578, -318, -420,
	-397, 636, 196, 613, 633, -382, -511, 623, -112, -112,
	-224, 631, 631, -560, 632, 636, 633, 631, 613, 613,
	-232, 368, -231, 151, 270, 255, 494, 495, 496, 497,
	141, 493, 128, 327, 238, 533, -515, -560, -230, -138,
	196, -515, 233, 196, -71, 593, 527, 233, -224, 635,
	471, 456, -294, -427, -427, -427, 481, 481, -294, 189,
	-391, -321, -551, -308, -325, -322, -348, 189, 189, -308,
	-308, 566, -451, 365, 295, -498, -262, 601, -325, 635,
	-471, -471, 155, 155, -471, -472, -472, -471, 155, 196,
	631, -471, -482, 34, 34, 632, 636, -467, -471, -350,
	632, 581, -387, -387, 632, 623, -551, 635, 632, -480,
	152, -471, 537, 308, 224, 306, -440, 306, -440, -440,
	-545, 5, -551, 623, -608, -314, 631, -294, 591, -386,
	370, 632, -523, -521, -471, -471, -471, -471, -471, -545,
	-526, -526, -541, -541, -471, -476, -471, -523, -521, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, 143,
	346, 357, -472, -477, -476, -471, -471, -521, 632, 632,
	632, -401, -111, 631, 301, -414, 215, -471, -515, 636,
	-414, -414, 632, -502, -502, 631, -471, 263, 630, 636,
	638, 613, 613, -381, 633, -494, -495, 630, 632, 636,
	632, 636, -454, 39, 632, -551, -465, -236, -235, 140,
	56, 111, 138, 353, 361, 195, 220, 415, 155, 190,
	149, 257, -647, 593, -558, -558, 471, 367, 5, 8,
	629, 630, 633, -545, 632, 632, 632, -558, -558, 471,
	-616, 556, 471, 29, -558, -272, -272, 123, 330, -471,
	-213, 593, 595, 543, 543, 632, 636, 613, 63, 233,
	159, 346, 575, 346, -574, 157, -579, -471, 631, 242,
	631, 631, 2, -258, -259, -260, 147, 484, 25, -653,
	2, 573, 159, -272, 159, -272, 597, 632, 636, -364,
	631, 631, 543, 471, -287, 543, 593, -401, -471, -225,
	131, -550, -634, 635, -634, 635, 471, 543, 543, 471,
	543, 543, 346, -294, 159, -294, -294, 593, 173, 173,
	599, -279, -471, -471, 189, 543, 593, -401, 543, -525,
	51, 27, 346, -329, -272, 159, 543, 543, 556, 484,
	-222, -560, -560, -137, -560, -560, 353, -15, -335, -556,
	-330, 484, 379, 440, -624, -624, 212, -339, -649, -515,
	-229, 368, -228, 151, 452, 141, 270, 238, -515, -227,
	196, 254, 593, -330, 2, 632, 632, 636, 636, -580,
	-273, -325, -310, 242, 242, -317, -295, 39, 361, 361,
	631, -325, -92, 593, -514, -547, -316, -628, 593, 45,
	-328, 39, 159, -625, -141, -330, -519, -520, 5, 39,
	-325, 159, 364, 346, -276, 277, -675, -555, -595, -387,
	-420, -409, 347, 95, 632, -465, -411, -395, -471, 2,
	632, -223, -560, -224, -237, -312, 2, -561, -560, -560,
	636, 631, 613, 613, 613, 613, 613, 613, 613, -230,
	-515, -137, -230, -138, -141, 368, -325, -560, 623, -335,
	-336, -427, 5, -370, -369, 383, 357, -370, 460, 460,
	365, 183, 273, -261, -309, -471, -471, 155, 34, 34,
	-471, -471, -482, 632, -471, -471, -401, 630, 5, -471,
	632, 632, 8, -471, 632, 633, -609, -294, -471, 632,
	63, 632, 632, 636, 636, 632, 632, 632, 632, 632,
	632, 632, -477, 196, 143, 357, 631, 632, 632, -111,
	-479, 218, 63, -502, -479, -479, -429, -391, -502, -469,
	-309, 629, -309, 629, -551, -547, -505, 631, 633, -235,
	613, -560, -560, 2, 2, 2, 5, 5, 415, 346,
	353, 5, -202, 212, -647, -647, 593, -339, 630, 2,
	629, -551, 632, -339, 196, -618, -339, 528, 123, 189,
	223, 223, -311, -311, -240, -548, 527, 460, -279, 406,
	-462, 159, 159, -581, 97, -583, 79, 175, 106, 346,
	353, 562, 406, 75, 131, 364, 425, -665, -666, -667,
	39, 604, 605, 632, -389, -499, -594, 631, -294, -389,
	-391, 346, 515, 131, 364, 346, 131, 364, 588, 123,
	2, 556, 82, -311, -319, -238, -391, -391, -325, -335,
	-556, 167, 632, 636, 613, 2, 623, 623, -335, -556,
	-330, -335, -556, -328, 159, 578, -279, 578, 381, 173,
	543, -141, -471, 167, 632, -309, 5, 5, 159, -306,
	79, -311, 5, -311, -329, 123, 593, 471, 543, 543,
	364, 364, 367, -645, -646, -227, 636, 631, 613, 613,
	613, -227, -561, -137, 2, -381, -371, 244, -311, -578,
	-575, -576, 406, -463, -582, -584, 175, 406, -359, 631,
	-310, -295, 631, -141, 2, -241, 631, -357, 368, 630,
	-630, 368, -629, 121, 141, -556, -424, -141, -330, -379,
	593, -381, 632, 636, 153, -446, 573, -309, -325, 159,
	-277, 276, -675, -555, -274, -449, -447, 144, 631, 364,
	-141, -387, 613, 632, 632, 123, 632, -231, -232, -560,
	-137, -560, -560, -560, -137, -560, -230, -515, -515, -72,
	-73, 242, 97, 388, -224, -322, 527, 242, 631, 631,
	-261, -471, -471, -471, 632, -387, -551, 623, -603, 383,
	632, -498, -471, -471, -472, 196, 631, -482, 632, -604,
	592, -471, -415, -416, -471, 458, 112, 216, -604, -604,
	632, -547, -547, 2, -560, 2, 2, 353, 2, 2,
	367, 2, 543, 629, 2, 196, -558, 196, 196, 233,
	-141, 233, 39, 428, -462, -319, -319, -323, -316, 175,
	226, 353, 588, -445, 268, 631, -472, 566, -325, 631,
	2, 225, 225, 31, 63, -668, 135, 246, 632, 636,
	-500, -305, -294, -471, -500, 632, 632, 353, 566, 353,
	588, -471, 566, -521, 631, -272, -272, 632, 632, -471,
	543, -550, 104, -548, 2, -634, -279, -391, -391, -308,
	-471, 189, -471, 543, 5, -272, -323, -272, -272, -306,
	556, 363, -335, -556, -330, -650, 528, 478, 557, 472,
	199, 459, -650, 189, -228, -229, -560, -137, -137, -227,
	39, -365, -366, 2, -580, 268, -316, 268, 235, 158,
	-389, 631, 631, -391, -664, 593, 632, -355, -242, -93,
	-94, 544, -514, 636, 631, 613, -381, 330, 123, 39,
	5, 631, 631, -294, 364, 631, -309, -289, 96, -675,
	-555, -275, -420, 347, -391, 97, -449, -478, -224, 631,
	-224, 632, -230, 636, 29, 631, 29, 631, -325, -348,
	-401, -401, 632, -387, 63, 636, 632, 632, -472, -482,
	632, -605, -606, -314, 636, 631, 631, 485, 630, 630,
	2, -558, 2, -558, -558, -558, 471, -279, 406, -294,
	-574, -583, -316, 346, -243, 573, 593, -471, -472, -296,
	631, -471, 631, 631, 39, 131, 246, 136, 231, -461,
	-669, 105, 516, 234, -499, -261, 632, -460, 573, 425,
	-472, -306, -389, 631, 631, 631, 613, 196, -141, 631,
	-525, -272, -329, 613, 543, 2, 2, 196, -624, 632,
	-640, 423, -141, -242, 631, -243, -360, 84, 98, 132,
	225, 200, 243, 507, 513, 29, -360, 632, -389, -389,
	632, -361, 364, 123, 330, 632, 39, -94, 9, -629,
	-630, -471, 39, 123, -141, -519, -389, -325, -389, 364,
	-281, -280, 285, -555, -276, 632, -319, -420, -561, -73,
	-391, -391, 632, 632, -610, 416, 461, 217, -401, -388,
	632, 636, 39, -416, 2, 2, 2, -647, -339, 428,
	-273, 159, 219, 632, -585, 300, -294, 632, -424, -424,
	39, 136, 231, -367, -363, 631, -262, -500, -243, 219,
	-325, -635, 573, 632, -373, -372, -369, -375, -374, -369,
	-401, -548, 104, 381, -401, -306, -137, -558, -558, 364,
	-642, 197, -641, 5, 10, -361, -390, -501, -311, -460,
	632, 632, 85, 123, -371, -141, 632, -141, 2, -379,
	632, 632, -446, 632, -325, -278, -562, 428, 430, -675,
	-277, -465, 144, 632, 632, 632, 632, -611, -612, 53,
	559, 113, -471, -611, -611, -606, -608, 196, 175, -459,
	602, -586, -589, -588, 609, 491, 197, 382, 632, 515,
	587, 632, 632, -668, -391, -459, -381, -471, -460, 632,
	636, 578, 632, 636, 578, 632, 196, 632, -272, -647,
	-272, -650, -226, 593, 48, -288, -287, 632, 636, -461,
	-460, -367, 405, 137, 147, -365, -664, -460, 631, -461,
	631, -286, -285, -675, -541, -289, 144, 347, 566, -224,
	-613, 157, -612, 402, 188, 460, 402, 188, -613, -613,
	-558, -316, -243, 58, -588, 609, -589, 609, 566, 137,
	-465, 632, -585, -243, -372, 233, -374, 196, 381, 196,
	468, -641, 31, -243, -501, -367, -461, -243, 461, 461,
	2, -242, -361, -461, -389, -367, -389, -282, -283, -284,
	-391, -281, 347, 566, 484, 113, 215, 538, 330, 34,
	613, -587, 330, 447, 67, 484, -587, -586, 631, 631,
	-558, 368, -243, -367, -465, 2, -361, -367, 632, -243,
	632, -557, 379, -278, 484, -410, 460, 372, -612, -471,
	24, 353, 131, -668, -401, -401, -272, -223, 631, -465,
	-243, -288, -243, -460, -465, -461, -675, -286, -410, -465,
	632, 632, -223, -465, -465, -461, -367, -556, -282, -465,
	-362, -363, 543, 632, -367, -243, 631, -243, -465, -401,
	-465, 632, -362,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 597, 598, 600, 601,
	602, 604, 605, 607, 609, 611, 612, 613, 615, 616,
	618, 619, 620, 621, 622, 624, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 713, 715, 0, 1560, 1562, 1564, 1566, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	372, 374, 376, 378, 0, 410, 412, 413, 415, 417,
	418, 419, 421, -2, 0, 530, 531, 533, 535, -2,
	0, 1143, 1145, 1147, 0, 701, 703, 0, 1150, 1152,
	1154, 0, 0, 725, 726, 0, 1674, -2, 717, 719,
	721, 723, 800, 802, 804, 806, 808, 810, 812, 814,
	816, 818, 819, 821, 823, 825, 827, 829, 830, 832,
	834, 836, 837, 839, 840, 842, 844, 846, 848, 850,
	852, 854, 856, 858, 860, 862, 864, 866, 868, -2,
	871, 872, 873, 875, -2, -2, 0, -2, -2, -2,
	1578, 49, 51, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 472, 474, 476, 478, 480, 483, 485,
	487, 1732, 537, 539, 541, 543, 545, 547, 549, 0,
	0, -2, 1746, 0, 0, 962, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 127, 128, 129, 130,
	131, 132, 133, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 124, 125, 84, 0, 0, 1705, 1707,
	1709, 1711, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 33, 35, 37,
	39, 599, 603, 606, 608, 610, 614, 617, 623, 625,
	627, 582, 583, 586, 2444, 2462, 2463, 2464, 2467, 2468,
	2469, 2470, 2471, 2472, 2956, 3037, 3038, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746,
	2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756,
	2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766,
	2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776,
	2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786,
	2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796,
	2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806,
	2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816,
	2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826,
	2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836,
	2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856,
	2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866,
	2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876,
	2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886,
	2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896,
	2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906,
	2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916,
	2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926,
	2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 584,
	585, 1337, 0, 666, 664, 2429, 667, 2741, 669, 671,
	524, 525, 526, 527, 528, 529, 0, 694, 680, 1744,
	695, 697, 698, 699, 700, 661, 659, 0, 699, 694,
	2499, 692, 1558, 1559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 451, 1396, 1397, 1398, 1543,
	1544, 2793, 1585, 0, 259, 714, -2, -2, 2921, -2,
	754, 755, -2, -2, 769, 773, 764, 2925, 0, 2796,
	2779, -2, 776, 1561, 1563, 1565, 876, 877, 878, 2448,
	882, 880, 892, 893, 896, 0, 913, -2, 0, 2495,
	2764, -2, -2, 914, 915, -2, -2, -2, -2, 894,
	895, 0, 0, 0, 0, 0, 44, 46, 48, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 269, -2, -2, -2, -2, 0, 0, 2844,
	2554, 2397, 2464, 2400, 2395, 373, 375, 377, 379, 380,
	0, 0, 0, 0, 0, 0, 0, 411, 414, 416,
	420, -2, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1217, 1209, 1210, 1463, 0,
	0, 0, -2, 532, 534, 587, 588, 0, 1733, 1733,
	595, 596, -2, 0, 0, 0, 0, 334, 324, 1144,
	1146, 1148, 1149, 0, 0, 0, 0, 0, 702, 704,
	0, 0, 2838, 301, 1151, 1153, 1155, 1156, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 718, 720, 722,
	724, 801, 803, 805, 807, 809, 811, 813, 815, 817,
	820, 822, 824, 826, 828, 831, 833, 835, 838, 841,
	843, 845, 847, 849, 851, 853, 855, 857, 859, 861,
	863, 865, 867, 869, 870, 921, 0, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 1031, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 0, 1123, 0, 0, 924, 927, 928, 929,
	930, 931, 932, 0, 1004, 1029, 1030, 1040, 874, 0,
	1377, 1734, 1587, 1568, 1582, 1587, 1570, 1571, 1572, 1573,
	1574, 1579, 1581, 1575, 1576, 1577, 50, 52, 54, 56,
	58, 60, 62, 64, 66, 68, 70, 72, 473, 475,
	477, 479, 481, 484, 486, 488, -2, 1703, 1704, 538,
	540, 542, 544, 546, 548, 550, 705, 0, 708, 0,
	926, 707, -2, 0, 1738, 1738, 1738, 0, 0, 1704,
	1702, 0, 711, 712, 780, 781, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 2271, 2099, 0, 782, -2,
	2132, 2134, 2896, 2714, 2921, 2270, 2136, 2137, 2138, 2139,
	2140, 0, 2142, 2143, 2144, 2145, 2146, 2147, 0, 2149,
	0, 2154, 2155, 2156, 0, 2903, 2374, 2458, -2, 0,
	0, 2909, 2454, 0, 2237, 2172, -2, -2, 2481, 2460,
	1943, 1944, 1945, 1946, 1947, -2, -2, 2939, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 0,
	2884, 2904, 2905, 2910, 2912, 2906, 2893, 2197, 2568, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1970, 1979, -2, -2, -2, -2, -2, -2,
	-2, 2897, 2898, 2915, 2918, 2924, 2929, 2930, 2902, 2911,
	2938, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948,
	2949, 2950, 2951, 2952, 2953, 2954, 2955, 1971, -2, -2,
	-2, -2, 0, 1721, 2757, 1724, 1337, 1722, 1706, 1708,
	0, 1710, 0, 0, 0, 1715, 1741, 1739, 0, 1790,
	1719, 1720, 1813, 1813, 1837, 0, 1818, 0, 1837, 1733,
	1864, 0, 1824, 2784, 2173, 2174, 0, 2464, 2459, -2,
	-2, 2936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 668, 670, 0, 0, 0,
	693, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 455, 456, 457, 458, 2904, 0, 0, 0, 463,
	0, 465, 466, 467, 468, 469, 470, 471, 229, 2904,
	555, 580, 0, 229, 2904, 558, 229, 2904, 561, 0,
	564, 1461, 229, 2904, 567, 2425, 229, 2904, 570, 572,
	2433, 229, 2904, 576, 2440, 2438, 577, 0, 579, 249,
	245, 246, 247, 248, 1554, 1555, 1556, 1557, 0, 1584,
	1462, 716, 0, 742, 0, 752, 753, 2892, -2, 0,
	2805, 757, 758, -2, 760, 1588, 1592, 1593, 1594, 1595,
	1596, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	749, 750, 767, 768, 774, 777, 0, 885, 881, 897,
	0, 912, 0, 913, 913, 2414, 2405, 2406, 0, 0,
	913, 913, 0, 0, 916, 917, 918, 919, 920, 83,
	0, 2904, 1864, 85, 0, 2419, 2489, 2490, 2491, 2492,
	2493, 2937, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964,
	2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974,
	2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984,
	2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994,
	2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004,
	3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014,
	3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024,
	3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034,
	3035, 3036, 2939, 89, 0, 2904, 94, 0, 2904, 0,
	-2, 110, 0, 126, 0, 153, -2, -2, -2, 134,
	0, 2904, 0, 2394, -2, 0, 241, 325, 326, 327,
	0, 643, 0, 652, 337, 338, 2477, 2478, 2485, 2486,
	2487, 2488, 0, 745, 2271, 0, 0, 1181, -2, 0,
	1390, 1392, 1392, 0, -2, 0, 0, 0, 1133, 2391,
	2396, 1134, 1135, 2415, 1136, 2401, 0, 381, 382, 383,
	384, 385, 0, 386, 2904, 388, 389, 0, 391, 392,
	2904, 394, 395, 0, 397, 0, 399, 0, 281, 285,
	2904, 2904, 424, 427, 0, 429, 430, 0, 432, 0,
	0, 0, 436, -2, 452, 0, 449, 439, 440, 442,
	443, 444, 445, 446, 0, 492, 490, 2430, 0, 0,
	-2, 2904, 0, 1178, 0, 0, 1441, -2, 0, 1383,
	0, 1448, 2904, 1444, 0, -2, 0, 1731, 2904, 1605,
	1213, 1214, 1215, 1216, 1876, 521, 0, 1638, 0, 1640,
	0, 1660, 1870, 1813, 0, 0, 1875, 0, -2, 640,
	2447, -2, 590, 0, 591, 0, -2, 0, 351, 0,
	0, 1159, 1161, 1162, 1164, 1165, 1168, 1169, 1170, 1171,
	0, 1173, 1850, 302, 304, 0, 0, 0, 0, 1158,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 0,
	0, 727, 0, 0, 922, 923, 0, 0, 939, 940,
	941, 0, 0, 351, -2, -2, -2, 949, 0, 956,
	959, -2, 0, 0, 0, 0, 966, 0, 971, 972,
	973, 0, -2, 0, 980, 982, 1142, 984, 0, 0,
	986, 0, 990, 0, 993, 0, 995, 0, 997, -2,
	-2, -2, 1005, 1006, -2, 1011, -2, 0, 1015, -2,
	0, 1018, 0, 1021, -2, 0, 1031, 1027, 1028, 0,
	0, 0, 0, 1048, 1049, 0, 1058, 0, 1061, 1062,
	1063, 0, 0, 1068, 1069, 0, 1071, 1072, 1073, 1075,
	1076, 1077, 0, 2873, 2802, 2554, 0, 1085, -2, 1091,
	1093, 0, -2, 0, 1109, 0, 1113, 0, 0, 1122,
	0, 0, 0, 925, 0, 933, 934, 229, 1868, 1567,
	-2, 1569, 0, -2, 0, 706, 0, 710, 1763, 1689,
	1686, 0, 1760, 1761, 1690, 0, 0, 0, 1697, 0,
	1736, 1737, 0, 0, 0, 1676, 1677, 0, 0, 0,
	0, 2276, 2277, 2278, 2279, 2292, 2280, 2281, 2291, 2289,
	2290, 2282, 2283, 2288, 2302, 2303, 2293, 2294, 2284, 2297,
	2295, 2296, 2298, 2299, 2300, 2301, 0, 0, 2307, 0,
	2285, 2286, 2287, 2315, 0, 0, 2316, 0, 2318, 0,
	2308, 2304, 2305, 2306, 0, 2078, 2080, 2382, 0, 0,
	0, 2314, 2309, 2310, 2016, 2017, 2018, 2019, 2020, 2053,
	2057, 2058, 0, 0, 2133, 2379, 2378, 2135, 0, 0,
	2330, 0, 2148, -2, 0, 2271, 2325, 0, 0, 2157,
	2158, 2159, 0, 0, 2330, 0, 0, 2373, 2169, 2170,
	2008, 0, 0, 2239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 1956, 0, 1958, 0, 1959, 1960, 1967,
	1980, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 2354, -2, 0, 0, 0, 0, 1972,
	0, 0, 1723, 0, 0, 1794, 2383, 2387, 2388, 1794,
	1794, 0, 0, 2331, 1861, 1861, 0, 0, 1856, 1856,
	1856, 1854, 1837, 0, 1837, 1847, 0, 1837, 1837, 0,
	-2, 1818, 0, 0, 1847, 0, 1831, 628, 630, 632,
	634, 635, 636, 638, 1865, 1866, 0, 0, 0, 0,
	2465, 0, 0, 0, 0, 2437, 0, 0, 2450, 0,
	0, 2424, 406, 407, 0, 0, 0, 2855, 2796, 0,
	-2, 673, 696, 1733, 0, 2333, 1891, 1895, 0, 1897,
	1898, 1899, 1900, 1901, 0, 0, 1892, -2, 1968, 1970,
	1991, 2482, 2483, 2484, 1951, 1952, 1953, 1954, 1955, 1963,
	1950, 1950, 1950, 1961, 1990, 1982, 1990, 1986, 1936, 1937,
	1938, 1973, 1974, 1975, 1976, 0, 2855, 2796, 0, -2,
	0, 683, 0, 0, 1671, 453, 0, 460, 461, 462,
	0, 551, 0, 227, 228, 0, 229, 2904, 556, 0,
	559, 0, 229, 2904, 2389, 565, 0, 568, 0, 0,
	574, 0, 0, 0, 0, 0, 229, 1673, 0, 0,
	0, 0, -2, 762, 770, 771, 772, 0, 1590, 0,
	1597, 791, 792, 793, 1599, 1600, 0, 1602, 765, 794,
	795, 796, 797, 798, 799, 0, 2403, 2404, 2409, 2410,
	0, 0, 763, 784, 766, 0, 778, 888, 883, 884,
	898, 899, 0, 0, 2407, 2408, 0, 0, 904, 905,
	135, 1540, 0, 0, 182, 0, 1540, 1540, 0, 0,
	0, 0, 210, 0, 0, 1247, 0, 0, 0, 0,
	153, 167, 178, 147, 148, 149, 0, 0, 0, 0,
	0, 0, 95, 1359, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 1375, 0, 0, 0, 0, 0, 112,
	113, 0, 0, 118, 119, 0, 0, 166, 0, 0,
	0, 0, 0, 1635, 0, 157, 153, 0, 0, 152,
	154, 137, 0, 0, 153, 168, 180, 0, 216, 218,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	251, 0, 642, 644, 0, 0, 0, 0, 650, 0,
	653, 0, 743, 747, 748, 0, 0, 744, 746, 0,
	0, 1384, 0, 0, 0, 1730, 0, 0, 0, 0,
	2904, 1538, 0, 1521, 0, 1850, 2643, -2, -2, 302,
	1850, 1132, 0, 0, 2465, 2399, 0, 0, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 428, 431, 433,
	434, 435, 0, 1440, 0, 441, 482, 1306, 2904, 0,
	0, 511, 504, 0, 507, 0, 0, 0, 1358, 2904,
	1356, 2434, 0, 1381, 0, 1337, 2904, 2432, 0, 0,
	0, 1449, 2474, 1458, 1462, 1623, 0, 523, 0, 1641,
	1643, 0, 0, 1871, 0, 1873, 1813, 1733, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 1172,
	308, 0, 1849, 0, 0, 339, 1850, 302, 2770, 0,
	1157, 351, 351, 1850, 729, 1850, 731, 0, 0, 942,
	0, 0, 945, 351, 351, 351, 954, 955, 957, 958,
	-2, -2, -2, -2, 960, 961, 1055, 0, 0, 0,
	1054, 1536, 0, 976, 979, 983, 0, 1126, 2779, 2796,
	2855, 1140, 1055, 2554, 1055, 2554, 1055, 2554, 1055, 1055,
	999, 1043, 1051, 1010, 1017, 0, 1012, 1016, 1019, 1022,
	0, 1024, 1032, 0, -2, 0, 1035, 0, 1037, 0,
	1039, 1055, 1056, 1059, 0, 1067, 1070, 0, 1078, 1079,
	1080, 1081, 2445, 1082, 1083, 1084, -2, 1088, 1089, 0,
	1100, 1105, 1106, 1102, 0, 0, 0, 0, 0, 0,
	1116, 1117, 0, 0, 0, 1125, 0, 935, 1376, 0,
	1580, 1763, 1689, 709, 1680, 1762, 1681, 1688, 1691, 0,
	0, 1693, 0, 1695, 0, 1758, 1759, 1766, 1767, 0,
	1777, 1778, 1770, 0, -2, 0, 0, 1773, 1774, 1699,
	0, 1716, 1717, 1718, 1747, 1750, 1477, 0, 3037, 2012,
	1886, 2013, 2014, 2418, 0, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, -2, -2, -2, -2, -2,
	-2, -2, -2, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, -2, -2, -2, 2054, 2055, 2056,
	-2, 2317, 2319, 0, 2382, 0, -2, 0, -2, -2,
	-2, -2, 2075, 0, 2077, 2082, 2084, 2086, 0, 0,
	0, 0, 2381, 2096, 2365, 2366, 0, 0, 2273, 2274,
	2275, 2081, 0, 2100, 2380, 2377, 0, 0, 2311, 0,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 0, 2329, 1746, 2161, 0, 0, 0,
	0, 2168, 2153, 2327, 0, 2326, 0, 0, 0, 2337,
	0, 2372, 2368, 0, 2416, 2007, 1994, 1995, 1996, 1997,
	1998, 1999, 2009, 0, 2413, 2451, 2457, 2247, 0, 0,
	0, 2198, 2199, 2200, 2201, 2202, 0, 2204, 2205, 0,
	2207, 2208, 0, 2210, 2211, 0, 2213, 2214, 2215, 2216,
	2217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	0, 0, 2219, 0, 2340, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2221, 0, 2223, 2331, 2351, 0,
	0, 2101, 0, 0, 0, 0, 0, 2226, 2331, 2359,
	0, 0, 0, 0, 0, 2331, 0, 2364, 0, 2233,
	0, 2235, 963, 964, 1725, 0, 0, 1881, 0, 0,
	0, 2386, 1881, 1881, 0, 1789, 0, 0, 1857, 1858,
	1859, 1860, 0, 0, 1861, 0, 1851, 1855, 1852, 1853,
	1847, 1810, 0, 0, 2420, 1847, 1816, 1846, 0, 1337,
	1836, 1847, 1847, 0, -2, 1820, 1837, 0, 0, 629,
	631, 633, 637, 639, 0, 0, 1746, -2, 0, -2,
	353, 1336, 0, 0, 0, 0, 0, 0, 663, 665,
	0, 0, 571, 0, 0, 679, 0, 657, 0, 660,
	0, 1882, 1885, 0, 0, 1896, 1902, 1903, 0, -2,
	0, 0, 1992, 0, 0, 0, 0, 0, 691, 0,
	694, 0, 0, 0, 464, 581, 229, 553, 0, 229,
	229, 562, 0, 0, 229, 573, 229, 2441, 229, 2439,
	250, 578, 1672, 262, 0, 751, 0, 1589, 1598, 0,
	788, 0, 790, 0, 2411, 2412, 0, 779, 0, 886,
	0, 900, 901, 902, 903, 0, 0, 0, 0, 1539,
	0, 0, 1484, 0, 0, 186, 2904, 0, 231, 0,
	0, 1299, 2426, 0, 1289, 0, 0, 2576, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 150, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 1360, 1361, 1363, 1370,
	1372, 0, 1366, 1367, 0, 1369, 1371, 1373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	1393, 0, 0, 0, 1394, 1395, 1611, 1612, 0, 1634,
	1635, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 2393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 645, 351, 647, 648, 347,
	344, 346, 649, 654, 0, 655, 0, 0, 0, 0,
	1386, 0, 1436, 1434, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	0, 0, 0, 0, -2, 1388, 1389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 342, 2392,
	2402, 0, 1166, 1167, 387, 390, 393, 396, 268, 0,
	0, 426, 437, 0, 0, 1219, 1191, 0, 0, 491,
	351, 0, 0, 506, 0, 511, 2443, 1176, 1354, 1357,
	0, 1337, 2904, 1404, 0, 0, 0, 0, 0, 0,
	1447, 0, 0, 2904, 2421, 2473, 2474, 1625, 1635, 0,
	1881, 0, 1658, 1644, 0, 0, 0, 1658, 1662, 1663,
	1665, 1666, 0, 0, 1872, 1878, 589, 641, 1733, 1733,
	351, 349, 2717, 0, 0, 1647, 1649, 0, 0, 0,
	294, 0, 305, 1850, 303, 0, 308, 0, 0, 1850,
	302, 0, 503, 728, 733, 937, 0, 0, 351, 946,
	947, 948, 1001, 1045, 1053, 1104, 965, 967, 968, 969,
	0, 974, 0, 0, 0, 1141, 1137, 1138, 1139, 985,
	1055, 988, 1055, 991, 1055, 994, 996, 1014, 1020, 1033,
	1026, 1034, 0, 0, 0, 1047, 0, 1065, 0, 1074,
	1087, 0, 0, 0, 0, 0, 0, 0, 1110, 1111,
	1112, 1114, 1119, 1118, 0, 1124, 936, 1869, 1684, 1685,
	1687, 0, 1696, 0, 0, 1772, -2, -2, 1771, 1775,
	1776, -2, -2, -2, -2, 1692, 0, 1701, 1698, 0,
	1757, 1475, 1476, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 2097, 0, -2, 2076, 2079, 2083, 2085, 2087,
	0, 0, 0, 0, 0, 0, 2320, 0, 2322, 2098,
	2375, 2378, 2313, 0, 2269, 0, 0, 1745, 1746, 1746,
	0, 2167, 0, 2328, 0, 2335, 2336, 0, 2160, 0,
	2369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2171, 0, 0, 0, 0, 2203, 2206, 2209, 2212, 0,
	0, 0, 0, 2192, 0, 0, 0, 2196, 1962, 1948,
	0, 1990, 1988, 1989, 1983, 1990, 1987, 1940, 0, 1939,
	0, 2218, 0, 2220, 2222, 0, 0, 2224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2104, 2105, 2106, 2126, 2225, 2357, 2358, 0,
	0, 0, 0, 0, 0, 2231, 0, 2363, 2232, 2234,
	1733, 0, 1726, 0, 1791, 1780, 1880, 0, 2384, 1850,
	1793, 1795, 2385, 2423, 1780, 1780, 0, 2332, 0, 0,
	1841, 0, 0, 0, 1843, 1814, 0, 0, 1808, 0,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1815, 1337, 1845,
	1817, 1821, 2451, 0, 1847, 0, 1832, 0, 1834, 1867,
	0, 1826, 1829, 0, 0, 2466, 1881, 0, 400, 408,
	409, 401, 402, 403, 404, 0, 1524, 0, 0, 0,
	0, 0, 2334, 0, 1887, 0, 1893, 0, 0, 0,
	0, 681, 0, 0, 0, 0, 0, 1670, 459, 552,
	229, 557, 560, 2390, 229, 566, 569, 575, 258, 0,
	741, -2, 786, 787, 789, 0, 785, 891, 887, 183,
	1540, 0, 0, 0, 1480, 0, 1202, 0, 1197, 1198,
	1482, 1486, 1492, 1495, 0, 188, 2904, 200, 0, 2904,
	0, 1263, 0, 0, 0, 0, 0, 0, 1542, 0,
	0, 2904, 229, 2904, 229, 204, 206, 209, 0, 215,
	211, 0, 1199, 0, 1251, 0, 0, 1254, 136, 1540,
	0, 0, 139, 143, 155, 0, 0, 0, 165, 0,
	0, 0, 1497, 1501, 1509, 0, 0, 0, 1364, 1365,
	1368, 1374, 96, 0, 0, 0, 1505, 1507, 1513, 111,
	114, 2904, 2435, 0, 116, 2904, 0, 0, 0, 1479,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 141,
	145, 156, 0, 1515, 138, 0, 244, 0, 0, 234,
	229, 2904, 0, 236, 0, 237, 238, 252, 0, 0,
	0, 646, 0, 0, 0, 651, 0, 1179, 1180, 1435,
	0, 1379, 1380, 0, 1391, 1385, 0, 0, 0, 0,
	0, 1517, 1518, 0, 0, 0, 1538, 1533, 1850, 264,
	0, 1850, 272, 0, 2398, 0, 286, 423, 0, 0,
	0, 0, 1218, 1317, 1220, 1222, 1223, 1224, 231, 0,
	2474, 1289, 2632, 2474, 0, 0, 1186, 0, 0, 0,
	497, 493, 0, 502, 505, 510, 0, 509, 2427, 515,
	-2, 0, 0, 0, 0, -2, 0, 0, 1451, 1445,
	1446, 0, 0, 0, 0, 2904, 1627, 1635, 0, 1731,
	1746, 522, 1636, 1658, 0, 0, 0, 1646, 1642, 1639,
	1881, 0, 0, 0, 0, 0, 1874, 1877, 592, 593,
	328, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	306, 0, 309, 0, 0, 0, 314, 315, 316, 317,
	318, 319, 0, 0, 0, 0, 308, 340, 296, 1850,
	0, 308, 0, 0, 730, 0, 0, 0, 944, 0,
	0, 1536, 978, 987, 989, 992, 1036, 1038, 1055, 0,
	1066, 1094, 2422, 1095, 1241, 0, 1241, 0, 0, 1115,
	1121, 1694, 0, 1769, 1700, 1751, 1752, 0, 1477, 0,
	2015, 2060, 0, 0, -2, 0, 0, 2064, 0, 0,
	0, -2, 0, 0, 0, 2321, 2323, 0, 2377, 2312,
	2162, 0, 0, 0, 2166, 2150, 2151, 0, 2272, 2338,
	2367, 2371, 0, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	0, 2417, 2452, 2456, 2245, 2246, 2250, 2431, 0, 0,
	0, 2175, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 1985, 0, 0, 2339, 2350, 2352, 2102, 2103, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, -2,
	-2, -2, 2120, 2121, 2122, -2, -2, -2, 2127, 0,
	0, 0, 2353, 2355, 2356, 2360, 2361, 0, 2228, 2229,
	2230, 2362, 0, 1733, 1727, 1788, 0, 1879, 1792, 0,
	1788, 1788, 1740, 1839, 0, 0, 1863, 0, 1811, 0,
	1812, 0, 0, 1844, 0, 1819, 1822, 1823, 1833, 0,
	1825, 0, 1828, 0, 2162, -2, 352, 354, 356, 0,
	359, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 672, 0, 1524, 1524, 0, 674, 658, 0,
	0, 1889, 0, 0, 1965, 1969, 1993, 685, 687, 0,
	0, 2855, 2796, 0, 684, 554, 563, 260, 0, 1848,
	0, 0, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 230, 0, 1298, 0, 1261, 0, 0, 1288,
	0, 0, 1304, 190, 191, 192, 0, 0, 0, 0,
	202, 0, 0, 198, 0, 208, 214, 213, 0, 1248,
	0, 0, 0, 0, 1485, 0, 0, 0, 162, 163,
	164, 0, 169, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 0, 0, 1617, 1618,
	0, 1608, 159, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 1474, 254, 0, 0, 0, 0, 0,
	348, 343, 345, 0, 1378, 1438, 1439, 1387, 1498, 1502,
	1510, 0, 0, 0, 0, 0, 699, 1537, 0, 272,
	270, 0, 273, 0, 276, 277, 0, 0, 272, 266,
	0, 0, 0, 1337, 438, 1189, 1305, 0, 0, 1307,
	1225, 1229, 0, 2474, 2474, 0, 2428, 0, 1187, 0,
	0, 1306, 489, 0, 496, 0, 508, 512, 0, 0,
	1358, 0, 0, 1382, 1407, 1337, 0, 1450, 1452, 0,
	1460, 0, 0, 0, 1629, 1635, 0, 1622, 1623, 1765,
	1637, 1656, -2, 0, 0, 1746, 1664, 1661, 1667, 1668,
	0, 0, 0, 331, 0, 1648, 1650, 0, 1160, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	308, 1850, 298, 1850, 335, 0, 938, 351, 970, 1535,
	975, 1046, 1064, 1096, 1240, 0, 0, 1098, 0, 0,
	1768, 1755, 1756, 1753, 1477, 2062, 2066, 0, 0, 0,
	2068, -2, 0, 2090, -2, -2, 2324, 2376, 2141, 1746,
	2163, 2165, 2152, 2370, 2010, 0, 2252, 2249, 0, 2236,
	0, 2187, 2188, 0, 0, 2191, 2193, 2194, 2195, 1949,
	1942, 1941, 2349, 0, 0, 0, 0, 2227, 1728, 0,
	2241, 0, 0, 1796, 2241, 2241, 1840, 0, 1842, 1809,
	1797, 0, 1806, 0, 2452, 1835, 1827, 0, 0, 357,
	0, 361, 362, 363, 364, 365, 366, 0, 0, 0,
	0, 0, 405, 0, 675, 676, 0, 0, 1883, 1888,
	0, 1894, 1964, 0, 0, 0, 0, 0, 261, 0,
	889, 890, 184, 185, 1203, 1201, 1489, 1493, 1490, 0,
	187, 0, 0, 1262, 0, 1265, 0, 0, 0, 0,
	1272, 1289, 0, 0, 0, 0, 0, 0, 1291, 0,
	1290, 0, 0, 1321, 0, 1465, 1472, 0, -2, 0,
	0, 0, 194, 220, 0, 0, 0, 0, 223, 1541,
	196, 0, 0, 229, 229, 1200, 0, 0, 1481, 1483,
	1496, 0, 0, 0, 0, 172, 0, 0, 1499, 1503,
	1511, 1506, 1508, 1514, 0, 0, 117, 0, 0, 1619,
	0, 158, 0, 0, 0, 1516, 242, 243, 0, 229,
	0, 229, 235, 229, 1474, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 1520, 263, 0, 0, 0, 0,
	0, 265, 341, 272, 425, 0, 1250, 0, 1317, 1309,
	1310, 1311, 0, 1221, 1316, 1318, 0, 0, 1226, 0,
	0, 0, 0, 1206, 1188, 0, 1219, 1191, 0, 494,
	513, 0, 516, 0, 519, 1177, 1355, 1399, 1337, 1402,
	0, 0, 1442, 0, 0, 0, 0, 0, 0, 0,
	1631, 1635, 0, 1624, 1625, 1658, 1764, 0, 0, 0,
	1645, 1765, 0, 350, 351, 0, 351, 310, 0, 311,
	312, 313, 320, 321, 322, 323, 297, 300, 308, 732,
	734, 0, 0, 740, 943, 1239, 0, 0, 0, 0,
	1754, 2070, -2, -2, 2091, 0, 2453, 2455, 1746, 0,
	2238, 1748, 0, 0, -2, 0, 0, 0, 1729, 1712,
	0, 1787, 1779, 1781, 1783, 2782, 2549, 2903, 1713, 1714,
	1862, 0, 0, 1830, 358, 367, 368, 0, 370, 371,
	1523, 677, 0, 0, 1890, 0, 682, 0, 0, 0,
	879, 0, 0, 1491, 189, 0, 0, 1266, 1267, 1269,
	0, 1271, 1273, 1274, 1191, 0, 1278, 0, 2476, 0,
	1283, 1286, 1287, 0, 0, 1300, 1322, 0, 1331, 0,
	1467, 1477, 1471, 0, 1469, 1333, 0, 193, 222, 195,
	224, 219, 0, 1474, 0, 197, 207, 0, 0, 140,
	0, 0, 2543, 175, 173, 171, 115, 121, 123, 1478,
	161, 0, 142, 0, 244, 253, 1473, 255, 239, 229,
	0, 0, 1500, 1504, 1512, 0, 1527, 1528, 1529, 1530,
	0, 0, 0, 0, 274, 0, 275, 278, 279, 0,
	0, 1191, 1249, 1190, 1308, 0, 1319, 1191, 0, 0,
	0, 0, 0, 0, 1193, 0, 1192, 0, 0, 495,
	498, 0, 501, 0, 0, 0, 0, 0, 1406, 0,
	1453, 1451, 0, 1459, 0, 0, 0, 1607, 0, 0,
	1626, 1627, 520, 1651, 0, 0, 1658, 1669, 330, 0,
	333, 307, 299, 0, 736, 0, 738, 0, 1097, 1099,
	0, 0, 2164, 2256, 0, 0, 2189, 2190, -2, 0,
	2130, 2240, 2242, 0, 0, 0, 0, 0, 1798, 1807,
	369, 1524, 1884, 689, 686, 688, 0, 1487, 0, 1494,
	231, 1264, 1268, 0, 1275, 0, 0, 0, 1279, 1341,
	0, 0, 1358, 1358, 1292, 0, 0, 1325, 1326, 1246,
	0, 1327, 1328, 1329, 1466, 1757, 1472, 1191, 0, 0,
	221, 226, 0, 0, 0, 0, 0, 0, 160, 0,
	233, 256, 1474, 0, 0, 1531, 1532, 0, 0, 271,
	290, 0, 1400, 1193, 0, 1320, 1227, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1228, 1333, 0, 0,
	1297, 1204, 0, 1207, 0, 1189, 0, 499, 500, 517,
	0, 518, 0, 0, 1407, 0, 0, 1460, 0, 0,
	1614, 1606, 1635, 1628, 1629, 1881, 0, 1659, 0, 735,
	0, 0, 1107, 1108, 0, 0, 0, 0, 2251, 1749,
	2131, 0, 0, 1782, 1784, 1785, 1786, 678, 0, 1488,
	201, 0, 1335, 1277, 1346, 0, 0, 0, 0, 0,
	1293, 1323, 1324, 1321, 1245, 0, 1470, 1468, 1302, 1335,
	1337, 199, 0, 1333, 0, 1255, 0, 0, 1258, 0,
	0, 176, 2543, 174, 0, 229, 656, 1524, 229, 0,
	293, 0, 284, 282, 283, 1185, 0, 1313, 1315, 1331,
	1333, 1246, 0, 1208, 1250, 1206, 514, 1401, 1405, 1403,
	1443, 1333, 0, 1331, 0, 1621, 1635, 1615, 1616, 0,
	1631, 0, 0, 351, 737, 739, 2248, 2268, 2257, -2,
	2858, 2550, 0, 2268, 2268, 2243, 2244, 0, 0, 1191,
	0, 1280, 1342, 1343, 0, 1338, 1339, 1340, 2475, 1281,
	1282, 1284, 1285, 1881, 0, 1332, 1341, 225, 1191, 1252,
	0, 0, 1253, 0, 0, 179, 0, 181, 257, 1522,
	1525, 0, 280, 0, 0, 1182, 1184, 1191, 0, 1246,
	1331, 1191, 0, 0, 0, 1191, 1193, 1331, 0, 1246,
	0, 1610, 1620, 0, 1630, 1607, 0, 1654, 0, 332,
	2253, 0, 0, 2259, 2260, 2261, 2262, 2263, 2254, 2255,
	690, 1270, 1276, 0, 1344, 0, 1345, 0, 0, 0,
	1301, 1330, 1346, 205, 1256, 0, 1259, 0, 177, 0,
	0, 288, 289, 1312, 1314, 1191, 1246, 1881, 1194, 0,
	1196, 1193, 1205, 1246, 0, 1191, 0, 1633, 1609, 1613,
	2436, 1614, 1652, 0, 0, 0, 2265, 2266, 0, 0,
	0, 1347, 0, 1350, 1351, 0, 1348, 1321, 0, 0,
	229, 0, 1881, 1191, 1296, 1195, 1185, 1191, 1333, 1881,
	1331, 1603, 1635, 1621, 0, 1881, 2264, 2267, 2258, 1334,
	1349, 1352, 1353, 1303, 0, 0, 1526, 291, 0, 1294,
	1881, 1183, 1881, 1331, 1456, 1246, 0, 1610, 1881, 1655,
	1243, 0, 0, 1295, 1454, 1246, 1191, 1632, 1604, 1653,
	1257, 1242, 0, 292, 1191, 1881, 0, 1881, 1457, 0,
	1455, 1243, 1260,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 619, 3, 625, 620, 3,
	631, 632, 623, 621, 636, 622, 633, 624, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 639, 3,
	611, 613, 612, 616, 635, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 629, 3, 630, 626, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 637, 618, 638, 614,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 615, 57954, 617,
	57955, 627, 57956, 628, 57957, 634, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1566
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1595
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1604
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1620
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1621
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1708
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1741
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1784
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1788
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1795
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1807
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1817
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1925
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1957
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1975
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1981
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1990
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2011
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2019
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2055
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2066
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2078
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2099
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2161
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2170
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2181
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2189
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2200
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2210
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2220
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2229
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2240
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2246
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2272
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2277
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2368
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2412
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2422
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2425
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2431
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2483
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2632
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2678
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2682
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2866
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2874
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2901
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3028
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3333
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3342
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3348
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3353
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3358
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3390
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = nil
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3466
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3540
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3552
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3569
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3698
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3719
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3724
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3729
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3748
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "CREATE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3763
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3766
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplemented(sqllex, "create access method")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3773
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplemented(sqllex, "create cast")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			return unimplemented(sqllex, "create publication")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3785
		{
			return unimplemented(sqllex, "create rule")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			return unimplemented(sqllex, "create server")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3789
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
		}
	case 448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3794
		{
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3797
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3798
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3801
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3802
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3820
		{
			return unimplemented(sqllex, "drop server")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3821
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3832
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3871
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3949
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4005
		{

			sqlVAL.union.val = nil
		}
	case 512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "DELETE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4092
		{
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4104
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4118
		{
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "DROP")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4314
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4318
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4323
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4384
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4400
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4408
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4416
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4435
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "DELETE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			return helpWith(sqllex, "INSERT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4447
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4457
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4462
		{
			return helpWith(sqllex, "DELETE")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "INSERT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4470
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4606
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4639
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4680
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4730
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4746
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4749
		{
			return helpWith(sqllex, "GRANT")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4842
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4855
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "RESET")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "RESET")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "USE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4932
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4933
		{
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4934
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "USE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4975
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5065
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5073
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5141
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5166
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			return unimplemented(sqllex, "set from current")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5197
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5202
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5237
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = tree.Low
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = tree.Normal
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = tree.High
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5374
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5380
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5397
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5449
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = true
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = false
		}
	case 891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = false
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5514
		{
			return helpWith(sqllex, "FETCH")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5527
		{
			return helpWith(sqllex, "MOVE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5566
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = int64(1)
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = int64(-1)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = int64(1)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = int64(1)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = int64(-1)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5622
		{
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5625
		{
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5626
		{
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5635
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5640
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5645
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5650
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.str = "client_encoding"
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.str = "timezone"
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5684
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5712
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5727
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.expr(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5799
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5834
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5854
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5902
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5913
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5931
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5961
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5984
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5992
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6003
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6025
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6036
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6041
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6052
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6057
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = true
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = true
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = false
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6093
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6094
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6095
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6138
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6139
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6155
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6163
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6171
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6207
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6212
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6214
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6218
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = true
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = false
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6238
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = true
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = false
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6316
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6323
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6331
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6341
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6352
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6374
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6379
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6384
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6388
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6402
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6418
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6423
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6428
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6433
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6449
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6462
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6467
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6478
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6489
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6507
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6515
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6536
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6541
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6546
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6550
		{
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6559
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6573
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6582
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6660
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6670
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6816
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6859
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6878
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6928
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6930
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6931
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6942
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6943
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6944
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6955
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6983
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6996
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7036
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7047
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7083
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7111
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7147
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7162
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{

			sqlVAL.union.val = nil
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7196
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.str = ""
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = nil
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7229
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7233
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7269
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7282
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7296
		{
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7298
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7379
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7393
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7396
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7397
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.str = ""
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7535
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7642
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7687
		{

			sqlVAL.union.val = true
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = false
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7697
		{
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7701
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7704
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7801
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7829
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7839
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7854
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7922
		{
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7923
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7924
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7925
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8009
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8094
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8103
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8111
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8122
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8145
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8147
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8149
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8154
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8157
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8159
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8172
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8176
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8203
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8237
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.str = ""
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = true
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8271
		{

			sqlVAL.union.val = true
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = false
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8286
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8300
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8312
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8324
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8334
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8344
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8348
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = true
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = true
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = nil
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8491
		{
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8492
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8517
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8519
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8521
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8523
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8525
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8527
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8562
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8579
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8597
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8613
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8629
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8633
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = false
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = true
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = false
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = true
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = false
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8687
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8693
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8699
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.str = ""
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.str = ""
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8766
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8772
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8997
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9003
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9015
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9021
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9035
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9041
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9100
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = true
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = false
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = tree.Types
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9160
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9164
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.str = ""
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9199
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9200
		{
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9204
		{
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9215
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9300
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9336
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9341
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9354
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9369
		{
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9370
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9387
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9390
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9391
		{
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9419
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9434
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9438
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9528
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.str = ""
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9551
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9556
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9573
		{

		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9588
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.str = ""
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.str = ""
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.str = ""
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.str = ""
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9643
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9668
		{
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9669
		{
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9729
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9861
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9893
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9914
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9929
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10073
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10108
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10109
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10110
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10171
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10215
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10231
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = true
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = false
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10285
		{
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = nil
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10299
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = true
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = false
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = false
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = true
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10328
		{
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10329
		{
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10333
		{
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10374
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10386
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10391
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10417
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10450
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10544
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10545
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10546
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10576
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10578
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10593
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10615
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10625
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10662
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10674
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10693
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10735
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10745
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10780
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10791
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10821
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10854
		{
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = nil
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = true
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = false
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.str = tree.AstFull
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.str = tree.AstRight
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.str = tree.AstInner
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10973
		{
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10974
		{
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.str = tree.AstHash
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.str = ""
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11043
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11048
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11066
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11072
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11078
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11088
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = true
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = false
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = true
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = false
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11137
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11150
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11158
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11159
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11177
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11187
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11207
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11216
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11256
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11268
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11269
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = types.Geography
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11318
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11326
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11360
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = nil
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = types.Int2
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = types.Int
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = types.Float4
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = types.Float
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11403
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11411
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11419
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = types.Bool
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11433
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = types.Float
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11452
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11458
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11480
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = types.String
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = true
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = false
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = types.Date
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11529
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11537
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11551
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11560
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11568
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11585
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = true
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = false
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = false
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = types.Interval
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11609
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11693
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = nil
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11738
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11798
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11947
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11955
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12076
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12142
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12164
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12272
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12280
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12381
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12407
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12416
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12431
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12465
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12476
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12477
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12492
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12501
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12567
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12666
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12692
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12697
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12706
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12715
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12724
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12733
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12738
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12743
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12753
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12758
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12767
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12768
		{
			return unimplemented(sqllex, "treat")
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12789
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12794
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12804
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12821
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12841
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.str = ""
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12890
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12894
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12916
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12930
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12943
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12983
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12990
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13011
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13040
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13052
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13095
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13096
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13100
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13101
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13104
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13116
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13140
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13142
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13165
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13194
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13198
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13241
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13245
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13251
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13261
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13265
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13288
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13292
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13296
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13313
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13330
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13338
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13342
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13346
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13352
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13358
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13372
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13378
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13390
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13397
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13407
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13413
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13417
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13430
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13441
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13447
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13451
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13456
		{
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13457
		{
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13461
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13471
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13480
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13484
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13488
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13496
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13500
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13506
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13529
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13537
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13560
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13569
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13573
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13577
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13581
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13587
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13606
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13610
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13622
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13626
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13635
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13646
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13655
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13663
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13680
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13765
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13773
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13777
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13783
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13795
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13822
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13833
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13837
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13851
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13855
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13859
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13881
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13899
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13912
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13919
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13944
		{
			sqlVAL.str = ""
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13950
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13954
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
