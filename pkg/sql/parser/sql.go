// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:874
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13700

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1592,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 416,
	-2, 0,
	-1, 74,
	244, 243,
	518, 243,
	-2, 0,
	-1, 88,
	232, 1328,
	246, 1328,
	262, 412,
	392, 412,
	403, 1082,
	442, 412,
	455, 1082,
	502, 1082,
	529, 412,
	555, 1082,
	-2, 0,
	-1, 94,
	133, 1592,
	239, 1592,
	540, 1592,
	541, 1592,
	-2, 0,
	-1, 112,
	151, 1563,
	170, 1563,
	183, 1563,
	242, 1563,
	275, 1563,
	343, 1563,
	353, 1563,
	535, 1563,
	-2, 1534,
	-1, 153,
	159, 923,
	261, 923,
	395, 884,
	460, 884,
	501, 884,
	521, 923,
	523, 884,
	-2, 0,
	-1, 157,
	4, 1594,
	21, 1594,
	22, 1594,
	23, 1594,
	24, 1594,
	25, 1594,
	26, 1594,
	27, 1594,
	29, 1594,
	30, 1594,
	36, 1594,
	41, 1594,
	42, 1594,
	44, 1594,
	45, 1594,
	46, 1594,
	47, 1594,
	48, 1594,
	49, 1594,
	50, 1594,
	51, 1594,
	53, 1594,
	54, 1594,
	55, 1594,
	56, 1594,
	58, 1594,
	59, 1594,
	60, 1594,
	61, 1594,
	62, 1594,
	63, 1594,
	64, 1594,
	68, 1594,
	69, 1594,
	70, 1594,
	71, 1594,
	73, 1594,
	74, 1594,
	75, 1594,
	79, 1594,
	80, 1594,
	81, 1594,
	82, 1594,
	83, 1594,
	84, 1594,
	85, 1594,
	88, 1594,
	89, 1594,
	90, 1594,
	91, 1594,
	92, 1594,
	94, 1594,
	96, 1594,
	97, 1594,
	98, 1594,
	99, 1594,
	100, 1594,
	101, 1594,
	103, 1594,
	104, 1594,
	105, 1594,
	107, 1594,
	108, 1594,
	109, 1594,
	117, 1594,
	118, 1594,
	119, 1594,
	120, 1594,
	121, 1594,
	123, 1594,
	124, 1594,
	125, 1594,
	126, 1594,
	128, 1594,
	129, 1594,
	130, 1594,
	132, 1594,
	133, 1594,
	134, 1594,
	136, 1594,
	137, 1594,
	138, 1594,
	141, 1594,
	142, 1594,
	143, 1594,
	145, 1594,
	146, 1594,
	148, 1594,
	149, 1594,
	150, 1594,
	152, 1594,
	153, 1594,
	154, 1594,
	155, 1594,
	156, 1594,
	157, 1594,
	158, 1594,
	159, 1594,
	160, 1594,
	161, 1594,
	162, 1594,
	163, 1594,
	164, 1594,
	165, 1594,
	166, 1594,
	167, 1594,
	169, 1594,
	175, 1594,
	176, 1594,
	177, 1594,
	178, 1594,
	182, 1594,
	184, 1594,
	185, 1594,
	186, 1594,
	190, 1594,
	191, 1594,
	192, 1594,
	193, 1594,
	194, 1594,
	195, 1594,
	196, 1594,
	197, 1594,
	198, 1594,
	199, 1594,
	200, 1594,
	201, 1594,
	202, 1594,
	203, 1594,
	205, 1594,
	206, 1594,
	208, 1594,
	209, 1594,
	211, 1594,
	212, 1594,
	213, 1594,
	214, 1594,
	215, 1594,
	216, 1594,
	217, 1594,
	218, 1594,
	219, 1594,
	221, 1594,
	222, 1594,
	224, 1594,
	225, 1594,
	226, 1594,
	227, 1594,
	228, 1594,
	232, 1594,
	233, 1594,
	234, 1594,
	235, 1594,
	236, 1594,
	239, 1594,
	240, 1594,
	241, 1594,
	243, 1594,
	245, 1594,
	246, 1594,
	248, 1594,
	250, 1594,
	251, 1594,
	252, 1594,
	254, 1594,
	258, 1594,
	259, 1594,
	260, 1594,
	261, 1594,
	262, 1594,
	263, 1594,
	265, 1594,
	266, 1594,
	267, 1594,
	269, 1594,
	270, 1594,
	272, 1594,
	273, 1594,
	276, 1594,
	277, 1594,
	278, 1594,
	279, 1594,
	280, 1594,
	281, 1594,
	282, 1594,
	285, 1594,
	286, 1594,
	287, 1594,
	288, 1594,
	290, 1594,
	291, 1594,
	292, 1594,
	293, 1594,
	294, 1594,
	295, 1594,
	296, 1594,
	297, 1594,
	298, 1594,
	299, 1594,
	300, 1594,
	301, 1594,
	302, 1594,
	303, 1594,
	304, 1594,
	305, 1594,
	306, 1594,
	307, 1594,
	308, 1594,
	309, 1594,
	310, 1594,
	311, 1594,
	313, 1594,
	315, 1594,
	316, 1594,
	317, 1594,
	318, 1594,
	319, 1594,
	320, 1594,
	321, 1594,
	322, 1594,
	323, 1594,
	324, 1594,
	325, 1594,
	326, 1594,
	327, 1594,
	328, 1594,
	330, 1594,
	331, 1594,
	333, 1594,
	335, 1594,
	336, 1594,
	338, 1594,
	339, 1594,
	340, 1594,
	341, 1594,
	342, 1594,
	345, 1594,
	348, 1594,
	349, 1594,
	350, 1594,
	351, 1594,
	354, 1594,
	355, 1594,
	356, 1594,
	358, 1594,
	360, 1594,
	361, 1594,
	362, 1594,
	363, 1594,
	364, 1594,
	365, 1594,
	366, 1594,
	367, 1594,
	368, 1594,
	369, 1594,
	370, 1594,
	371, 1594,
	372, 1594,
	374, 1594,
	375, 1594,
	376, 1594,
	377, 1594,
	378, 1594,
	379, 1594,
	380, 1594,
	381, 1594,
	382, 1594,
	383, 1594,
	384, 1594,
	385, 1594,
	386, 1594,
	387, 1594,
	388, 1594,
	390, 1594,
	391, 1594,
	393, 1594,
	394, 1594,
	395, 1594,
	396, 1594,
	397, 1594,
	398, 1594,
	399, 1594,
	400, 1594,
	401, 1594,
	402, 1594,
	403, 1594,
	404, 1594,
	405, 1594,
	407, 1594,
	409, 1594,
	410, 1594,
	411, 1594,
	417, 1594,
	419, 1594,
	420, 1594,
	421, 1594,
	422, 1594,
	423, 1594,
	424, 1594,
	425, 1594,
	426, 1594,
	427, 1594,
	428, 1594,
	430, 1594,
	431, 1594,
	432, 1594,
	434, 1594,
	435, 1594,
	436, 1594,
	437, 1594,
	438, 1594,
	439, 1594,
	440, 1594,
	442, 1594,
	443, 1594,
	444, 1594,
	445, 1594,
	446, 1594,
	447, 1594,
	448, 1594,
	449, 1594,
	450, 1594,
	451, 1594,
	452, 1594,
	453, 1594,
	455, 1594,
	456, 1594,
	457, 1594,
	458, 1594,
	459, 1594,
	460, 1594,
	462, 1594,
	463, 1594,
	464, 1594,
	465, 1594,
	466, 1594,
	467, 1594,
	469, 1594,
	470, 1594,
	471, 1594,
	472, 1594,
	473, 1594,
	474, 1594,
	475, 1594,
	476, 1594,
	478, 1594,
	480, 1594,
	481, 1594,
	482, 1594,
	483, 1594,
	484, 1594,
	485, 1594,
	486, 1594,
	487, 1594,
	488, 1594,
	489, 1594,
	490, 1594,
	491, 1594,
	492, 1594,
	493, 1594,
	494, 1594,
	495, 1594,
	497, 1594,
	498, 1594,
	500, 1594,
	501, 1594,
	503, 1594,
	504, 1594,
	505, 1594,
	506, 1594,
	507, 1594,
	508, 1594,
	509, 1594,
	510, 1594,
	511, 1594,
	513, 1594,
	514, 1594,
	515, 1594,
	516, 1594,
	517, 1594,
	519, 1594,
	521, 1594,
	522, 1594,
	523, 1594,
	524, 1594,
	525, 1594,
	526, 1594,
	528, 1594,
	529, 1594,
	530, 1594,
	531, 1594,
	533, 1594,
	534, 1594,
	537, 1594,
	538, 1594,
	539, 1594,
	540, 1594,
	541, 1594,
	542, 1594,
	543, 1594,
	545, 1594,
	548, 1594,
	549, 1594,
	550, 1594,
	551, 1594,
	552, 1594,
	553, 1594,
	555, 1594,
	556, 1594,
	557, 1594,
	558, 1594,
	559, 1594,
	560, 1594,
	565, 1594,
	566, 1594,
	567, 1594,
	568, 1594,
	569, 1594,
	570, 1594,
	-2, 0,
	-1, 158,
	1, 1445,
	131, 1445,
	250, 1445,
	332, 1445,
	390, 1445,
	399, 1445,
	574, 1445,
	603, 1445,
	-2, 0,
	-1, 160,
	1, 1445,
	603, 1445,
	-2, 0,
	-1, 161,
	1, 1445,
	603, 1445,
	-2, 0,
	-1, 162,
	1, 1445,
	518, 1445,
	603, 1445,
	-2, 0,
	-1, 191,
	151, 1562,
	170, 1562,
	183, 1562,
	242, 1562,
	275, 1562,
	343, 1562,
	353, 1562,
	535, 1562,
	-2, 1537,
	-1, 239,
	4, 1601,
	5, 1601,
	6, 1601,
	7, 1601,
	8, 1601,
	9, 1601,
	10, 1601,
	21, 1601,
	22, 1601,
	23, 1601,
	24, 1601,
	25, 1601,
	26, 1601,
	27, 1601,
	29, 1601,
	30, 1601,
	36, 1601,
	37, 1601,
	41, 1601,
	42, 1601,
	43, 1601,
	44, 1601,
	45, 1601,
	46, 1601,
	47, 1601,
	48, 1601,
	49, 1601,
	50, 1601,
	51, 1601,
	53, 1601,
	54, 1601,
	55, 1601,
	56, 1601,
	58, 1601,
	59, 1601,
	60, 1601,
	61, 1601,
	62, 1601,
	63, 1601,
	64, 1601,
	65, 1601,
	66, 1601,
	67, 1601,
	68, 1601,
	69, 1601,
	70, 1601,
	71, 1601,
	73, 1601,
	74, 1601,
	75, 1601,
	77, 1601,
	79, 1601,
	80, 1601,
	81, 1601,
	82, 1601,
	83, 1601,
	84, 1601,
	85, 1601,
	88, 1601,
	89, 1601,
	90, 1601,
	91, 1601,
	92, 1601,
	94, 1601,
	96, 1601,
	97, 1601,
	98, 1601,
	99, 1601,
	100, 1601,
	101, 1601,
	103, 1601,
	104, 1601,
	105, 1601,
	106, 1601,
	107, 1601,
	108, 1601,
	109, 1601,
	110, 1601,
	111, 1601,
	112, 1601,
	113, 1601,
	114, 1601,
	115, 1601,
	116, 1601,
	117, 1601,
	118, 1601,
	119, 1601,
	120, 1601,
	121, 1601,
	122, 1601,
	123, 1601,
	124, 1601,
	125, 1601,
	126, 1601,
	127, 1601,
	128, 1601,
	129, 1601,
	130, 1601,
	132, 1601,
	133, 1601,
	134, 1601,
	136, 1601,
	137, 1601,
	138, 1601,
	141, 1601,
	142, 1601,
	143, 1601,
	145, 1601,
	146, 1601,
	148, 1601,
	149, 1601,
	150, 1601,
	152, 1601,
	153, 1601,
	154, 1601,
	155, 1601,
	156, 1601,
	157, 1601,
	158, 1601,
	159, 1601,
	160, 1601,
	161, 1601,
	162, 1601,
	163, 1601,
	164, 1601,
	165, 1601,
	166, 1601,
	167, 1601,
	168, 1601,
	169, 1601,
	175, 1601,
	176, 1601,
	177, 1601,
	178, 1601,
	182, 1601,
	184, 1601,
	185, 1601,
	186, 1601,
	189, 1601,
	190, 1601,
	191, 1601,
	192, 1601,
	193, 1601,
	194, 1601,
	195, 1601,
	196, 1601,
	197, 1601,
	198, 1601,
	199, 1601,
	200, 1601,
	201, 1601,
	202, 1601,
	203, 1601,
	205, 1601,
	206, 1601,
	208, 1601,
	209, 1601,
	211, 1601,
	212, 1601,
	213, 1601,
	214, 1601,
	215, 1601,
	216, 1601,
	217, 1601,
	218, 1601,
	219, 1601,
	220, 1601,
	221, 1601,
	222, 1601,
	224, 1601,
	225, 1601,
	226, 1601,
	227, 1601,
	228, 1601,
	232, 1601,
	233, 1601,
	234, 1601,
	235, 1601,
	236, 1601,
	238, 1601,
	239, 1601,
	240, 1601,
	241, 1601,
	243, 1601,
	245, 1601,
	246, 1601,
	247, 1601,
	248, 1601,
	249, 1601,
	250, 1601,
	251, 1601,
	252, 1601,
	253, 1601,
	254, 1601,
	258, 1601,
	259, 1601,
	260, 1601,
	261, 1601,
	262, 1601,
	263, 1601,
	265, 1601,
	266, 1601,
	267, 1601,
	269, 1601,
	270, 1601,
	271, 1601,
	272, 1601,
	273, 1601,
	274, 1601,
	276, 1601,
	277, 1601,
	278, 1601,
	279, 1601,
	280, 1601,
	281, 1601,
	282, 1601,
	283, 1601,
	284, 1601,
	285, 1601,
	286, 1601,
	287, 1601,
	288, 1601,
	290, 1601,
	291, 1601,
	292, 1601,
	293, 1601,
	294, 1601,
	295, 1601,
	296, 1601,
	297, 1601,
	298, 1601,
	299, 1601,
	300, 1601,
	301, 1601,
	302, 1601,
	303, 1601,
	304, 1601,
	305, 1601,
	306, 1601,
	307, 1601,
	308, 1601,
	309, 1601,
	310, 1601,
	311, 1601,
	313, 1601,
	314, 1601,
	315, 1601,
	316, 1601,
	317, 1601,
	318, 1601,
	319, 1601,
	320, 1601,
	321, 1601,
	322, 1601,
	323, 1601,
	324, 1601,
	325, 1601,
	326, 1601,
	327, 1601,
	328, 1601,
	329, 1601,
	330, 1601,
	331, 1601,
	332, 1601,
	333, 1601,
	334, 1601,
	335, 1601,
	336, 1601,
	337, 1601,
	338, 1601,
	339, 1601,
	340, 1601,
	341, 1601,
	342, 1601,
	345, 1601,
	349, 1601,
	350, 1601,
	351, 1601,
	354, 1601,
	355, 1601,
	356, 1601,
	357, 1601,
	358, 1601,
	359, 1601,
	360, 1601,
	361, 1601,
	362, 1601,
	363, 1601,
	364, 1601,
	365, 1601,
	366, 1601,
	367, 1601,
	368, 1601,
	369, 1601,
	370, 1601,
	371, 1601,
	372, 1601,
	374, 1601,
	375, 1601,
	376, 1601,
	377, 1601,
	378, 1601,
	379, 1601,
	380, 1601,
	381, 1601,
	382, 1601,
	383, 1601,
	384, 1601,
	385, 1601,
	386, 1601,
	387, 1601,
	388, 1601,
	390, 1601,
	391, 1601,
	393, 1601,
	394, 1601,
	395, 1601,
	396, 1601,
	397, 1601,
	398, 1601,
	399, 1601,
	400, 1601,
	401, 1601,
	402, 1601,
	403, 1601,
	404, 1601,
	405, 1601,
	407, 1601,
	409, 1601,
	410, 1601,
	411, 1601,
	417, 1601,
	419, 1601,
	420, 1601,
	421, 1601,
	422, 1601,
	423, 1601,
	424, 1601,
	425, 1601,
	426, 1601,
	427, 1601,
	428, 1601,
	430, 1601,
	431, 1601,
	432, 1601,
	433, 1601,
	434, 1601,
	435, 1601,
	436, 1601,
	437, 1601,
	438, 1601,
	439, 1601,
	440, 1601,
	442, 1601,
	443, 1601,
	444, 1601,
	445, 1601,
	446, 1601,
	447, 1601,
	448, 1601,
	449, 1601,
	450, 1601,
	451, 1601,
	452, 1601,
	453, 1601,
	455, 1601,
	456, 1601,
	457, 1601,
	458, 1601,
	459, 1601,
	460, 1601,
	461, 1601,
	462, 1601,
	463, 1601,
	464, 1601,
	465, 1601,
	466, 1601,
	467, 1601,
	468, 1601,
	469, 1601,
	470, 1601,
	471, 1601,
	472, 1601,
	473, 1601,
	474, 1601,
	475, 1601,
	476, 1601,
	478, 1601,
	480, 1601,
	481, 1601,
	482, 1601,
	483, 1601,
	484, 1601,
	485, 1601,
	486, 1601,
	487, 1601,
	488, 1601,
	489, 1601,
	490, 1601,
	491, 1601,
	492, 1601,
	493, 1601,
	494, 1601,
	495, 1601,
	497, 1601,
	498, 1601,
	499, 1601,
	500, 1601,
	501, 1601,
	503, 1601,
	504, 1601,
	505, 1601,
	506, 1601,
	507, 1601,
	508, 1601,
	509, 1601,
	510, 1601,
	511, 1601,
	513, 1601,
	514, 1601,
	515, 1601,
	516, 1601,
	517, 1601,
	519, 1601,
	521, 1601,
	522, 1601,
	523, 1601,
	524, 1601,
	525, 1601,
	526, 1601,
	527, 1601,
	528, 1601,
	529, 1601,
	530, 1601,
	531, 1601,
	533, 1601,
	534, 1601,
	536, 1601,
	537, 1601,
	538, 1601,
	539, 1601,
	540, 1601,
	541, 1601,
	542, 1601,
	543, 1601,
	544, 1601,
	545, 1601,
	548, 1601,
	549, 1601,
	550, 1601,
	551, 1601,
	552, 1601,
	553, 1601,
	555, 1601,
	556, 1601,
	557, 1601,
	558, 1601,
	559, 1601,
	560, 1601,
	565, 1601,
	566, 1601,
	567, 1601,
	568, 1601,
	569, 1601,
	570, 1601,
	571, 1601,
	584, 1601,
	591, 1601,
	592, 1601,
	593, 1601,
	600, 1601,
	604, 1601,
	-2, 0,
	-1, 751,
	4, 1326,
	21, 1326,
	22, 1326,
	23, 1326,
	24, 1326,
	25, 1326,
	26, 1326,
	27, 1326,
	29, 1326,
	30, 1326,
	36, 1326,
	41, 1326,
	42, 1326,
	44, 1326,
	45, 1326,
	46, 1326,
	47, 1326,
	48, 1326,
	49, 1326,
	50, 1326,
	51, 1326,
	53, 1326,
	54, 1326,
	55, 1326,
	56, 1326,
	58, 1326,
	59, 1326,
	60, 1326,
	61, 1326,
	62, 1326,
	63, 1326,
	64, 1326,
	68, 1326,
	69, 1326,
	70, 1326,
	71, 1326,
	73, 1326,
	74, 1326,
	75, 1326,
	79, 1326,
	80, 1326,
	81, 1326,
	82, 1326,
	83, 1326,
	84, 1326,
	85, 1326,
	88, 1326,
	89, 1326,
	90, 1326,
	91, 1326,
	92, 1326,
	94, 1326,
	96, 1326,
	97, 1326,
	98, 1326,
	99, 1326,
	100, 1326,
	101, 1326,
	103, 1326,
	104, 1326,
	105, 1326,
	107, 1326,
	108, 1326,
	109, 1326,
	117, 1326,
	118, 1326,
	119, 1326,
	120, 1326,
	121, 1326,
	123, 1326,
	124, 1326,
	125, 1326,
	126, 1326,
	128, 1326,
	129, 1326,
	130, 1326,
	132, 1326,
	133, 1326,
	134, 1326,
	136, 1326,
	137, 1326,
	138, 1326,
	141, 1326,
	142, 1326,
	143, 1326,
	145, 1326,
	146, 1326,
	148, 1326,
	149, 1326,
	150, 1326,
	152, 1326,
	153, 1326,
	154, 1326,
	155, 1326,
	156, 1326,
	157, 1326,
	158, 1326,
	159, 1326,
	160, 1326,
	161, 1326,
	162, 1326,
	163, 1326,
	164, 1326,
	165, 1326,
	166, 1326,
	167, 1326,
	169, 1326,
	175, 1326,
	176, 1326,
	177, 1326,
	178, 1326,
	182, 1326,
	184, 1326,
	185, 1326,
	186, 1326,
	190, 1326,
	191, 1326,
	192, 1326,
	193, 1326,
	194, 1326,
	195, 1326,
	196, 1326,
	197, 1326,
	198, 1326,
	199, 1326,
	200, 1326,
	201, 1326,
	202, 1326,
	203, 1326,
	205, 1326,
	206, 1326,
	208, 1326,
	209, 1326,
	211, 1326,
	212, 1326,
	213, 1326,
	214, 1326,
	215, 1326,
	216, 1326,
	217, 1326,
	218, 1326,
	219, 1326,
	221, 1326,
	222, 1326,
	224, 1326,
	225, 1326,
	226, 1326,
	227, 1326,
	228, 1326,
	232, 1326,
	233, 1326,
	234, 1326,
	235, 1326,
	236, 1326,
	239, 1326,
	240, 1326,
	241, 1326,
	243, 1326,
	245, 1326,
	246, 1326,
	248, 1326,
	250, 1326,
	251, 1326,
	252, 1326,
	254, 1326,
	258, 1326,
	259, 1326,
	260, 1326,
	261, 1326,
	262, 1326,
	263, 1326,
	265, 1326,
	266, 1326,
	267, 1326,
	269, 1326,
	270, 1326,
	272, 1326,
	273, 1326,
	276, 1326,
	277, 1326,
	278, 1326,
	279, 1326,
	280, 1326,
	281, 1326,
	282, 1326,
	285, 1326,
	286, 1326,
	287, 1326,
	288, 1326,
	290, 1326,
	291, 1326,
	292, 1326,
	293, 1326,
	294, 1326,
	295, 1326,
	296, 1326,
	297, 1326,
	298, 1326,
	299, 1326,
	300, 1326,
	301, 1326,
	302, 1326,
	303, 1326,
	304, 1326,
	305, 1326,
	306, 1326,
	307, 1326,
	308, 1326,
	309, 1326,
	310, 1326,
	311, 1326,
	313, 1326,
	315, 1326,
	316, 1326,
	317, 1326,
	318, 1326,
	319, 1326,
	320, 1326,
	321, 1326,
	322, 1326,
	323, 1326,
	324, 1326,
	325, 1326,
	326, 1326,
	327, 1326,
	328, 1326,
	330, 1326,
	331, 1326,
	333, 1326,
	335, 1326,
	336, 1326,
	338, 1326,
	339, 1326,
	340, 1326,
	341, 1326,
	342, 1326,
	345, 1326,
	349, 1326,
	350, 1326,
	351, 1326,
	354, 1326,
	355, 1326,
	356, 1326,
	358, 1326,
	360, 1326,
	361, 1326,
	362, 1326,
	363, 1326,
	364, 1326,
	365, 1326,
	366, 1326,
	367, 1326,
	368, 1326,
	369, 1326,
	370, 1326,
	371, 1326,
	372, 1326,
	374, 1326,
	375, 1326,
	376, 1326,
	377, 1326,
	378, 1326,
	379, 1326,
	380, 1326,
	381, 1326,
	382, 1326,
	383, 1326,
	384, 1326,
	385, 1326,
	386, 1326,
	387, 1326,
	388, 1326,
	390, 1326,
	391, 1326,
	393, 1326,
	394, 1326,
	395, 1326,
	396, 1326,
	397, 1326,
	398, 1326,
	399, 1326,
	400, 1326,
	401, 1326,
	402, 1326,
	403, 1326,
	404, 1326,
	405, 1326,
	407, 1326,
	409, 1326,
	410, 1326,
	411, 1326,
	417, 1326,
	419, 1326,
	420, 1326,
	421, 1326,
	422, 1326,
	423, 1326,
	424, 1326,
	425, 1326,
	426, 1326,
	427, 1326,
	428, 1326,
	430, 1326,
	431, 1326,
	432, 1326,
	434, 1326,
	435, 1326,
	436, 1326,
	437, 1326,
	438, 1326,
	439, 1326,
	440, 1326,
	442, 1326,
	443, 1326,
	444, 1326,
	445, 1326,
	446, 1326,
	447, 1326,
	448, 1326,
	449, 1326,
	450, 1326,
	451, 1326,
	452, 1326,
	453, 1326,
	455, 1326,
	456, 1326,
	457, 1326,
	458, 1326,
	459, 1326,
	460, 1326,
	462, 1326,
	463, 1326,
	464, 1326,
	465, 1326,
	466, 1326,
	467, 1326,
	469, 1326,
	470, 1326,
	471, 1326,
	472, 1326,
	473, 1326,
	474, 1326,
	475, 1326,
	476, 1326,
	478, 1326,
	480, 1326,
	481, 1326,
	482, 1326,
	483, 1326,
	484, 1326,
	485, 1326,
	486, 1326,
	487, 1326,
	488, 1326,
	489, 1326,
	490, 1326,
	491, 1326,
	492, 1326,
	493, 1326,
	494, 1326,
	495, 1326,
	497, 1326,
	498, 1326,
	500, 1326,
	501, 1326,
	503, 1326,
	504, 1326,
	505, 1326,
	506, 1326,
	507, 1326,
	508, 1326,
	509, 1326,
	510, 1326,
	511, 1326,
	513, 1326,
	514, 1326,
	515, 1326,
	516, 1326,
	517, 1326,
	519, 1326,
	521, 1326,
	522, 1326,
	523, 1326,
	524, 1326,
	525, 1326,
	526, 1326,
	528, 1326,
	529, 1326,
	530, 1326,
	531, 1326,
	533, 1326,
	534, 1326,
	537, 1326,
	538, 1326,
	539, 1326,
	540, 1326,
	541, 1326,
	542, 1326,
	543, 1326,
	545, 1326,
	548, 1326,
	549, 1326,
	550, 1326,
	551, 1326,
	552, 1326,
	553, 1326,
	555, 1326,
	556, 1326,
	557, 1326,
	558, 1326,
	559, 1326,
	560, 1326,
	565, 1326,
	566, 1326,
	567, 1326,
	568, 1326,
	569, 1326,
	570, 1326,
	-2, 0,
	-1, 770,
	188, 2392,
	518, 2392,
	583, 2392,
	602, 2392,
	-2, 0,
	-1, 771,
	188, 2379,
	518, 2379,
	583, 2379,
	602, 2379,
	-2, 0,
	-1, 773,
	188, 2642,
	518, 2642,
	583, 2642,
	602, 2642,
	-2, 0,
	-1, 776,
	188, 2504,
	518, 2504,
	583, 2504,
	602, 2504,
	-2, 0,
	-1, 777,
	188, 2683,
	518, 2683,
	583, 2683,
	602, 2683,
	-2, 0,
	-1, 785,
	188, 2531,
	518, 2531,
	583, 2531,
	602, 2531,
	-2, 710,
	-1, 820,
	602, 2328,
	605, 2328,
	-2, 1003,
	-1, 821,
	602, 2330,
	605, 2330,
	-2, 1004,
	-1, 822,
	602, 2329,
	605, 2329,
	-2, 1005,
	-1, 823,
	605, 2254,
	-2, 1006,
	-1, 848,
	183, 264,
	-2, 0,
	-1, 872,
	43, 2301,
	-2, 0,
	-1, 873,
	555, 1304,
	-2, 1083,
	-1, 889,
	4, 1734,
	21, 1734,
	22, 1734,
	23, 1734,
	24, 1734,
	25, 1734,
	26, 1734,
	27, 1734,
	29, 1734,
	30, 1734,
	36, 1734,
	41, 1734,
	42, 1734,
	44, 1734,
	45, 1734,
	46, 1734,
	47, 1734,
	48, 1734,
	49, 1734,
	50, 1734,
	51, 1734,
	53, 1734,
	54, 1734,
	55, 1734,
	56, 1734,
	58, 1734,
	59, 1734,
	60, 1734,
	61, 1734,
	62, 1734,
	63, 1734,
	64, 1734,
	68, 1734,
	69, 1734,
	70, 1734,
	71, 1734,
	73, 1734,
	74, 1734,
	75, 1734,
	79, 1734,
	80, 1734,
	81, 1734,
	82, 1734,
	83, 1734,
	84, 1734,
	85, 1734,
	88, 1734,
	89, 1734,
	90, 1734,
	91, 1734,
	92, 1734,
	94, 1734,
	96, 1734,
	97, 1734,
	98, 1734,
	99, 1734,
	100, 1734,
	101, 1734,
	103, 1734,
	104, 1734,
	105, 1734,
	107, 1734,
	108, 1734,
	109, 1734,
	117, 1734,
	118, 1734,
	119, 1734,
	120, 1734,
	121, 1734,
	123, 1734,
	124, 1734,
	125, 1734,
	126, 1734,
	128, 1734,
	129, 1734,
	130, 1734,
	132, 1734,
	133, 1734,
	134, 1734,
	136, 1734,
	137, 1734,
	138, 1734,
	141, 1734,
	142, 1734,
	143, 1734,
	145, 1734,
	146, 1734,
	148, 1734,
	149, 1734,
	150, 1734,
	152, 1734,
	153, 1734,
	154, 1734,
	155, 1734,
	156, 1734,
	157, 1734,
	158, 1734,
	159, 1734,
	160, 1734,
	161, 1734,
	162, 1734,
	163, 1734,
	164, 1734,
	165, 1734,
	166, 1734,
	167, 1734,
	169, 1734,
	175, 1734,
	176, 1734,
	177, 1734,
	178, 1734,
	182, 1734,
	184, 1734,
	185, 1734,
	186, 1734,
	190, 1734,
	191, 1734,
	192, 1734,
	193, 1734,
	194, 1734,
	195, 1734,
	196, 1734,
	197, 1734,
	198, 1734,
	199, 1734,
	200, 1734,
	201, 1734,
	202, 1734,
	203, 1734,
	205, 1734,
	206, 1734,
	208, 1734,
	209, 1734,
	211, 1734,
	212, 1734,
	213, 1734,
	214, 1734,
	215, 1734,
	216, 1734,
	217, 1734,
	218, 1734,
	219, 1734,
	221, 1734,
	222, 1734,
	224, 1734,
	225, 1734,
	226, 1734,
	227, 1734,
	228, 1734,
	232, 1734,
	233, 1734,
	234, 1734,
	235, 1734,
	236, 1734,
	239, 1734,
	240, 1734,
	241, 1734,
	243, 1734,
	245, 1734,
	246, 1734,
	248, 1734,
	250, 1734,
	251, 1734,
	252, 1734,
	254, 1734,
	258, 1734,
	259, 1734,
	260, 1734,
	261, 1734,
	262, 1734,
	263, 1734,
	265, 1734,
	266, 1734,
	267, 1734,
	269, 1734,
	270, 1734,
	272, 1734,
	273, 1734,
	276, 1734,
	277, 1734,
	278, 1734,
	279, 1734,
	280, 1734,
	281, 1734,
	282, 1734,
	285, 1734,
	286, 1734,
	287, 1734,
	288, 1734,
	290, 1734,
	291, 1734,
	292, 1734,
	293, 1734,
	294, 1734,
	295, 1734,
	296, 1734,
	297, 1734,
	298, 1734,
	299, 1734,
	300, 1734,
	301, 1734,
	302, 1734,
	303, 1734,
	304, 1734,
	305, 1734,
	306, 1734,
	307, 1734,
	308, 1734,
	309, 1734,
	310, 1734,
	311, 1734,
	313, 1734,
	315, 1734,
	316, 1734,
	317, 1734,
	318, 1734,
	319, 1734,
	320, 1734,
	321, 1734,
	322, 1734,
	323, 1734,
	324, 1734,
	325, 1734,
	326, 1734,
	327, 1734,
	328, 1734,
	330, 1734,
	331, 1734,
	333, 1734,
	335, 1734,
	336, 1734,
	338, 1734,
	339, 1734,
	340, 1734,
	341, 1734,
	342, 1734,
	345, 1734,
	349, 1734,
	350, 1734,
	351, 1734,
	354, 1734,
	355, 1734,
	356, 1734,
	358, 1734,
	360, 1734,
	361, 1734,
	362, 1734,
	363, 1734,
	364, 1734,
	365, 1734,
	366, 1734,
	367, 1734,
	368, 1734,
	369, 1734,
	370, 1734,
	371, 1734,
	372, 1734,
	374, 1734,
	375, 1734,
	376, 1734,
	377, 1734,
	378, 1734,
	379, 1734,
	380, 1734,
	381, 1734,
	382, 1734,
	383, 1734,
	384, 1734,
	385, 1734,
	386, 1734,
	387, 1734,
	388, 1734,
	390, 1734,
	391, 1734,
	393, 1734,
	394, 1734,
	395, 1734,
	396, 1734,
	397, 1734,
	398, 1734,
	399, 1734,
	400, 1734,
	401, 1734,
	402, 1734,
	403, 1734,
	404, 1734,
	405, 1734,
	407, 1734,
	409, 1734,
	410, 1734,
	411, 1734,
	417, 1734,
	419, 1734,
	420, 1734,
	421, 1734,
	422, 1734,
	423, 1734,
	424, 1734,
	425, 1734,
	426, 1734,
	427, 1734,
	428, 1734,
	430, 1734,
	431, 1734,
	432, 1734,
	434, 1734,
	435, 1734,
	436, 1734,
	437, 1734,
	438, 1734,
	439, 1734,
	440, 1734,
	442, 1734,
	443, 1734,
	444, 1734,
	445, 1734,
	446, 1734,
	447, 1734,
	448, 1734,
	449, 1734,
	450, 1734,
	451, 1734,
	452, 1734,
	453, 1734,
	455, 1734,
	456, 1734,
	457, 1734,
	458, 1734,
	459, 1734,
	460, 1734,
	462, 1734,
	463, 1734,
	464, 1734,
	465, 1734,
	466, 1734,
	467, 1734,
	469, 1734,
	470, 1734,
	471, 1734,
	472, 1734,
	473, 1734,
	474, 1734,
	475, 1734,
	476, 1734,
	478, 1734,
	480, 1734,
	481, 1734,
	482, 1734,
	483, 1734,
	484, 1734,
	485, 1734,
	486, 1734,
	487, 1734,
	488, 1734,
	489, 1734,
	490, 1734,
	491, 1734,
	492, 1734,
	493, 1734,
	494, 1734,
	495, 1734,
	497, 1734,
	498, 1734,
	500, 1734,
	501, 1734,
	503, 1734,
	504, 1734,
	505, 1734,
	506, 1734,
	507, 1734,
	508, 1734,
	509, 1734,
	510, 1734,
	511, 1734,
	513, 1734,
	514, 1734,
	515, 1734,
	516, 1734,
	517, 1734,
	519, 1734,
	521, 1734,
	522, 1734,
	523, 1734,
	524, 1734,
	525, 1734,
	526, 1734,
	528, 1734,
	529, 1734,
	530, 1734,
	531, 1734,
	533, 1734,
	534, 1734,
	537, 1734,
	538, 1734,
	539, 1734,
	540, 1734,
	541, 1734,
	542, 1734,
	543, 1734,
	545, 1734,
	548, 1734,
	549, 1734,
	550, 1734,
	551, 1734,
	552, 1734,
	553, 1734,
	555, 1734,
	556, 1734,
	557, 1734,
	558, 1734,
	559, 1734,
	560, 1734,
	565, 1734,
	566, 1734,
	567, 1734,
	568, 1734,
	569, 1734,
	570, 1734,
	-2, 0,
	-1, 899,
	262, 416,
	-2, 0,
	-1, 976,
	395, 885,
	460, 885,
	501, 885,
	523, 885,
	-2, 0,
	-1, 977,
	395, 884,
	460, 884,
	501, 884,
	523, 884,
	-2, 820,
	-1, 981,
	1, 937,
	599, 937,
	601, 937,
	603, 937,
	-2, 0,
	-1, 983,
	1, 859,
	599, 859,
	601, 859,
	603, 859,
	-2, 0,
	-1, 984,
	1, 863,
	599, 863,
	601, 863,
	603, 863,
	-2, 0,
	-1, 985,
	1, 1002,
	183, 1002,
	599, 1002,
	601, 1002,
	603, 1002,
	-2, 0,
	-1, 993,
	1, 890,
	599, 890,
	601, 890,
	603, 890,
	-2, 0,
	-1, 1000,
	1, 937,
	599, 937,
	601, 937,
	603, 937,
	-2, 0,
	-1, 1001,
	1, 939,
	599, 939,
	601, 939,
	603, 939,
	-2, 0,
	-1, 1002,
	1, 942,
	599, 942,
	601, 942,
	603, 942,
	-2, 0,
	-1, 1008,
	1, 966,
	599, 966,
	601, 966,
	603, 966,
	-2, 0,
	-1, 1009,
	1, 968,
	599, 968,
	601, 968,
	603, 968,
	-2, 0,
	-1, 1014,
	1, 996,
	599, 996,
	601, 996,
	603, 996,
	-2, 0,
	-1, 1064,
	170, 1605,
	183, 1605,
	275, 1605,
	343, 1605,
	-2, 1541,
	-1, 1079,
	170, 1604,
	183, 1604,
	275, 1604,
	343, 1604,
	-2, 1538,
	-1, 1106,
	602, 2327,
	-2, 718,
	-1, 1135,
	5, 2319,
	600, 2317,
	-2, 2308,
	-1, 1143,
	5, 2340,
	600, 2337,
	-2, 2328,
	-1, 1144,
	5, 2341,
	600, 2338,
	-2, 2329,
	-1, 1152,
	602, 2325,
	-2, 2307,
	-1, 1153,
	600, 2767,
	-2, 2326,
	-1, 1176,
	600, 2766,
	-2, 2342,
	-1, 1177,
	5, 1809,
	-2, 2737,
	-1, 1178,
	5, 1810,
	-2, 2738,
	-1, 1179,
	5, 1811,
	-2, 2752,
	-1, 1180,
	5, 1812,
	-2, 2716,
	-1, 1181,
	5, 1813,
	-2, 2750,
	-1, 1182,
	5, 1821,
	-2, 2729,
	-1, 1183,
	5, 1808,
	-2, 2725,
	-1, 1184,
	5, 1808,
	-2, 2724,
	-1, 1185,
	5, 1808,
	-2, 2743,
	-1, 1186,
	5, 1819,
	-2, 2718,
	-1, 1187,
	5, 1824,
	-2, 2717,
	-1, 1188,
	5, 1826,
	-2, 2762,
	-1, 1191,
	5, 1848,
	-2, 2755,
	-1, 1192,
	5, 1840,
	-2, 2756,
	-1, 1193,
	5, 1848,
	-2, 2757,
	-1, 1194,
	5, 1844,
	-2, 2758,
	-1, 1195,
	5, 1794,
	-2, 2730,
	-1, 1196,
	5, 1795,
	-2, 2731,
	-1, 1197,
	5, 1796,
	-2, 2719,
	-1, 1225,
	5, 1831,
	-2, 2763,
	-1, 1226,
	5, 1832,
	-2, 2753,
	-1, 1227,
	5, 1833,
	556, 1833,
	-2, 2720,
	-1, 1228,
	5, 1834,
	556, 1834,
	-2, 2721,
	-1, 1265,
	600, 2337,
	-2, 2328,
	-1, 1266,
	600, 2338,
	-2, 2329,
	-1, 1368,
	188, 2683,
	518, 2683,
	583, 2683,
	602, 2683,
	-2, 0,
	-1, 1373,
	1, 695,
	603, 695,
	-2, 1453,
	-1, 1501,
	362, 2302,
	419, 2302,
	462, 2302,
	593, 2302,
	-2, 2292,
	-1, 1512,
	604, 2302,
	-2, 2304,
	-1, 1520,
	1, 1301,
	424, 1265,
	462, 1265,
	577, 1265,
	599, 1301,
	601, 1301,
	603, 1301,
	-2, 1590,
	-1, 1526,
	204, 1398,
	223, 1398,
	432, 1398,
	-2, 0,
	-1, 1574,
	403, 1082,
	555, 1082,
	-2, 411,
	-1, 1591,
	43, 2300,
	-2, 1048,
	-1, 1598,
	1, 1301,
	599, 1301,
	601, 1301,
	603, 1301,
	-2, 1590,
	-1, 1606,
	4, 1326,
	21, 1326,
	22, 1326,
	23, 1326,
	24, 1326,
	25, 1326,
	26, 1326,
	27, 1326,
	29, 1326,
	30, 1326,
	36, 1326,
	41, 1326,
	42, 1326,
	44, 1326,
	45, 1326,
	46, 1326,
	47, 1326,
	48, 1326,
	49, 1326,
	50, 1326,
	51, 1326,
	53, 1326,
	54, 1326,
	55, 1326,
	56, 1326,
	58, 1326,
	59, 1326,
	60, 1326,
	61, 1326,
	62, 1326,
	63, 1326,
	64, 1326,
	68, 1326,
	69, 1326,
	70, 1326,
	71, 1326,
	73, 1326,
	74, 1326,
	75, 1326,
	79, 1326,
	80, 1326,
	81, 1326,
	82, 1326,
	83, 1326,
	84, 1326,
	85, 1326,
	88, 1326,
	89, 1326,
	90, 1326,
	91, 1326,
	92, 1326,
	94, 1326,
	96, 1326,
	97, 1326,
	98, 1326,
	99, 1326,
	100, 1326,
	101, 1326,
	103, 1326,
	104, 1326,
	105, 1326,
	107, 1326,
	108, 1326,
	109, 1326,
	117, 1326,
	118, 1326,
	119, 1326,
	120, 1326,
	121, 1326,
	123, 1326,
	124, 1326,
	125, 1326,
	126, 1326,
	128, 1326,
	129, 1326,
	130, 1326,
	132, 1326,
	133, 1326,
	134, 1326,
	136, 1326,
	137, 1326,
	138, 1326,
	141, 1326,
	142, 1326,
	143, 1326,
	145, 1326,
	146, 1326,
	148, 1326,
	149, 1326,
	150, 1326,
	152, 1326,
	153, 1326,
	154, 1326,
	155, 1326,
	156, 1326,
	157, 1326,
	158, 1326,
	159, 1326,
	160, 1326,
	161, 1326,
	162, 1326,
	163, 1326,
	164, 1326,
	165, 1326,
	166, 1326,
	167, 1326,
	175, 1326,
	176, 1326,
	177, 1326,
	178, 1326,
	182, 1326,
	184, 1326,
	185, 1326,
	186, 1326,
	190, 1326,
	191, 1326,
	192, 1326,
	193, 1326,
	194, 1326,
	195, 1326,
	196, 1326,
	197, 1326,
	198, 1326,
	199, 1326,
	200, 1326,
	201, 1326,
	202, 1326,
	203, 1326,
	205, 1326,
	206, 1326,
	208, 1326,
	209, 1326,
	211, 1326,
	212, 1326,
	213, 1326,
	214, 1326,
	215, 1326,
	216, 1326,
	217, 1326,
	218, 1326,
	219, 1326,
	221, 1326,
	222, 1326,
	224, 1326,
	225, 1326,
	226, 1326,
	227, 1326,
	228, 1326,
	233, 1326,
	234, 1326,
	235, 1326,
	236, 1326,
	239, 1326,
	240, 1326,
	241, 1326,
	243, 1326,
	245, 1326,
	246, 1326,
	248, 1326,
	250, 1326,
	251, 1326,
	252, 1326,
	254, 1326,
	258, 1326,
	259, 1326,
	260, 1326,
	261, 1326,
	262, 1326,
	263, 1326,
	265, 1326,
	266, 1326,
	267, 1326,
	269, 1326,
	270, 1326,
	272, 1326,
	273, 1326,
	276, 1326,
	277, 1326,
	278, 1326,
	279, 1326,
	280, 1326,
	281, 1326,
	282, 1326,
	285, 1326,
	286, 1326,
	287, 1326,
	288, 1326,
	290, 1326,
	291, 1326,
	292, 1326,
	293, 1326,
	294, 1326,
	295, 1326,
	296, 1326,
	297, 1326,
	298, 1326,
	299, 1326,
	300, 1326,
	301, 1326,
	302, 1326,
	303, 1326,
	304, 1326,
	305, 1326,
	306, 1326,
	307, 1326,
	308, 1326,
	309, 1326,
	310, 1326,
	311, 1326,
	313, 1326,
	315, 1326,
	316, 1326,
	317, 1326,
	318, 1326,
	319, 1326,
	320, 1326,
	321, 1326,
	322, 1326,
	323, 1326,
	324, 1326,
	325, 1326,
	326, 1326,
	327, 1326,
	328, 1326,
	330, 1326,
	331, 1326,
	335, 1326,
	336, 1326,
	338, 1326,
	339, 1326,
	340, 1326,
	341, 1326,
	342, 1326,
	345, 1326,
	347, 1326,
	349, 1326,
	350, 1326,
	351, 1326,
	354, 1326,
	355, 1326,
	356, 1326,
	358, 1326,
	360, 1326,
	361, 1326,
	362, 1326,
	363, 1326,
	364, 1326,
	365, 1326,
	366, 1326,
	367, 1326,
	368, 1326,
	369, 1326,
	370, 1326,
	371, 1326,
	372, 1326,
	374, 1326,
	375, 1326,
	376, 1326,
	377, 1326,
	378, 1326,
	379, 1326,
	380, 1326,
	381, 1326,
	382, 1326,
	383, 1326,
	384, 1326,
	385, 1326,
	386, 1326,
	387, 1326,
	388, 1326,
	390, 1326,
	391, 1326,
	393, 1326,
	394, 1326,
	395, 1326,
	396, 1326,
	397, 1326,
	398, 1326,
	399, 1326,
	400, 1326,
	401, 1326,
	402, 1326,
	403, 1326,
	404, 1326,
	405, 1326,
	407, 1326,
	409, 1326,
	410, 1326,
	411, 1326,
	417, 1326,
	419, 1326,
	420, 1326,
	421, 1326,
	422, 1326,
	423, 1326,
	424, 1326,
	425, 1326,
	426, 1326,
	427, 1326,
	428, 1326,
	430, 1326,
	431, 1326,
	432, 1326,
	434, 1326,
	435, 1326,
	436, 1326,
	437, 1326,
	438, 1326,
	439, 1326,
	440, 1326,
	442, 1326,
	443, 1326,
	444, 1326,
	445, 1326,
	446, 1326,
	447, 1326,
	448, 1326,
	449, 1326,
	450, 1326,
	451, 1326,
	452, 1326,
	453, 1326,
	455, 1326,
	456, 1326,
	457, 1326,
	458, 1326,
	459, 1326,
	460, 1326,
	462, 1326,
	463, 1326,
	464, 1326,
	465, 1326,
	466, 1326,
	467, 1326,
	469, 1326,
	470, 1326,
	471, 1326,
	472, 1326,
	473, 1326,
	474, 1326,
	475, 1326,
	476, 1326,
	478, 1326,
	480, 1326,
	481, 1326,
	482, 1326,
	483, 1326,
	484, 1326,
	485, 1326,
	486, 1326,
	487, 1326,
	488, 1326,
	489, 1326,
	490, 1326,
	491, 1326,
	492, 1326,
	493, 1326,
	494, 1326,
	495, 1326,
	497, 1326,
	498, 1326,
	500, 1326,
	501, 1326,
	503, 1326,
	504, 1326,
	505, 1326,
	506, 1326,
	507, 1326,
	508, 1326,
	509, 1326,
	510, 1326,
	511, 1326,
	513, 1326,
	514, 1326,
	515, 1326,
	516, 1326,
	517, 1326,
	519, 1326,
	521, 1326,
	522, 1326,
	523, 1326,
	524, 1326,
	525, 1326,
	526, 1326,
	528, 1326,
	529, 1326,
	530, 1326,
	531, 1326,
	533, 1326,
	534, 1326,
	537, 1326,
	538, 1326,
	539, 1326,
	540, 1326,
	541, 1326,
	542, 1326,
	543, 1326,
	545, 1326,
	548, 1326,
	549, 1326,
	550, 1326,
	551, 1326,
	552, 1326,
	553, 1326,
	555, 1326,
	556, 1326,
	557, 1326,
	558, 1326,
	559, 1326,
	560, 1326,
	565, 1326,
	566, 1326,
	567, 1326,
	568, 1326,
	569, 1326,
	570, 1326,
	-2, 0,
	-1, 1629,
	1, 556,
	599, 556,
	601, 556,
	603, 556,
	-2, 1561,
	-1, 1632,
	4, 2761,
	11, 2761,
	12, 2761,
	14, 2761,
	15, 2761,
	16, 2761,
	17, 2761,
	18, 2761,
	19, 2761,
	21, 2761,
	22, 2761,
	23, 2761,
	24, 2761,
	25, 2761,
	26, 2761,
	27, 2761,
	29, 2761,
	30, 2761,
	33, 2761,
	34, 2761,
	36, 2761,
	38, 2761,
	41, 2761,
	42, 2761,
	44, 2761,
	45, 2761,
	46, 2761,
	47, 2761,
	48, 2761,
	49, 2761,
	50, 2761,
	51, 2761,
	53, 2761,
	54, 2761,
	55, 2761,
	56, 2761,
	58, 2761,
	59, 2761,
	60, 2761,
	61, 2761,
	62, 2761,
	63, 2761,
	64, 2761,
	67, 2761,
	68, 2761,
	69, 2761,
	70, 2761,
	71, 2761,
	73, 2761,
	74, 2761,
	75, 2761,
	76, 2761,
	79, 2761,
	80, 2761,
	81, 2761,
	82, 2761,
	83, 2761,
	84, 2761,
	85, 2761,
	86, 2761,
	88, 2761,
	89, 2761,
	90, 2761,
	91, 2761,
	92, 2761,
	94, 2761,
	95, 2761,
	96, 2761,
	97, 2761,
	98, 2761,
	99, 2761,
	100, 2761,
	101, 2761,
	103, 2761,
	104, 2761,
	105, 2761,
	106, 2761,
	107, 2761,
	108, 2761,
	109, 2761,
	117, 2761,
	118, 2761,
	119, 2761,
	120, 2761,
	121, 2761,
	123, 2761,
	124, 2761,
	125, 2761,
	126, 2761,
	128, 2761,
	129, 2761,
	130, 2761,
	132, 2761,
	133, 2761,
	134, 2761,
	136, 2761,
	137, 2761,
	138, 2761,
	141, 2761,
	142, 2761,
	143, 2761,
	145, 2761,
	146, 2761,
	148, 2761,
	149, 2761,
	150, 2761,
	152, 2761,
	153, 2761,
	154, 2761,
	155, 2761,
	156, 2761,
	157, 2761,
	158, 2761,
	159, 2761,
	160, 2761,
	161, 2761,
	162, 2761,
	163, 2761,
	164, 2761,
	165, 2761,
	166, 2761,
	167, 2761,
	171, 2761,
	172, 2761,
	173, 2761,
	174, 2761,
	175, 2761,
	176, 2761,
	177, 2761,
	178, 2761,
	181, 2761,
	182, 2761,
	184, 2761,
	185, 2761,
	186, 2761,
	189, 2761,
	190, 2761,
	191, 2761,
	192, 2761,
	193, 2761,
	194, 2761,
	195, 2761,
	196, 2761,
	197, 2761,
	198, 2761,
	199, 2761,
	200, 2761,
	201, 2761,
	202, 2761,
	203, 2761,
	205, 2761,
	206, 2761,
	208, 2761,
	209, 2761,
	211, 2761,
	212, 2761,
	213, 2761,
	214, 2761,
	215, 2761,
	216, 2761,
	217, 2761,
	218, 2761,
	219, 2761,
	220, 2761,
	221, 2761,
	222, 2761,
	223, 2761,
	224, 2761,
	225, 2761,
	226, 2761,
	227, 2761,
	228, 2761,
	230, 2761,
	231, 2761,
	233, 2761,
	234, 2761,
	235, 2761,
	236, 2761,
	238, 2761,
	239, 2761,
	240, 2761,
	241, 2761,
	243, 2761,
	245, 2761,
	246, 2761,
	247, 2761,
	248, 2761,
	249, 2761,
	250, 2761,
	251, 2761,
	252, 2761,
	253, 2761,
	254, 2761,
	256, 2761,
	257, 2761,
	258, 2761,
	259, 2761,
	260, 2761,
	261, 2761,
	262, 2761,
	263, 2761,
	265, 2761,
	266, 2761,
	267, 2761,
	269, 2761,
	270, 2761,
	271, 2761,
	272, 2761,
	273, 2761,
	274, 2761,
	276, 2761,
	277, 2761,
	278, 2761,
	279, 2761,
	280, 2761,
	281, 2761,
	282, 2761,
	285, 2761,
	286, 2761,
	287, 2761,
	288, 2761,
	289, 2761,
	290, 2761,
	291, 2761,
	292, 2761,
	293, 2761,
	294, 2761,
	295, 2761,
	296, 2761,
	297, 2761,
	298, 2761,
	299, 2761,
	300, 2761,
	301, 2761,
	302, 2761,
	303, 2761,
	304, 2761,
	305, 2761,
	306, 2761,
	307, 2761,
	308, 2761,
	309, 2761,
	310, 2761,
	311, 2761,
	313, 2761,
	314, 2761,
	315, 2761,
	316, 2761,
	317, 2761,
	318, 2761,
	319, 2761,
	320, 2761,
	321, 2761,
	322, 2761,
	323, 2761,
	324, 2761,
	325, 2761,
	326, 2761,
	327, 2761,
	328, 2761,
	330, 2761,
	331, 2761,
	334, 2761,
	335, 2761,
	336, 2761,
	338, 2761,
	339, 2761,
	340, 2761,
	341, 2761,
	342, 2761,
	345, 2761,
	349, 2761,
	350, 2761,
	351, 2761,
	352, 2761,
	354, 2761,
	355, 2761,
	356, 2761,
	358, 2761,
	360, 2761,
	361, 2761,
	362, 2761,
	363, 2761,
	364, 2761,
	365, 2761,
	366, 2761,
	367, 2761,
	368, 2761,
	369, 2761,
	370, 2761,
	371, 2761,
	372, 2761,
	374, 2761,
	375, 2761,
	376, 2761,
	377, 2761,
	378, 2761,
	379, 2761,
	380, 2761,
	381, 2761,
	382, 2761,
	383, 2761,
	384, 2761,
	385, 2761,
	386, 2761,
	387, 2761,
	388, 2761,
	390, 2761,
	391, 2761,
	393, 2761,
	394, 2761,
	395, 2761,
	396, 2761,
	397, 2761,
	398, 2761,
	399, 2761,
	400, 2761,
	401, 2761,
	402, 2761,
	403, 2761,
	404, 2761,
	405, 2761,
	407, 2761,
	409, 2761,
	410, 2761,
	411, 2761,
	417, 2761,
	418, 2761,
	419, 2761,
	420, 2761,
	421, 2761,
	422, 2761,
	423, 2761,
	424, 2761,
	425, 2761,
	426, 2761,
	427, 2761,
	428, 2761,
	430, 2761,
	431, 2761,
	432, 2761,
	433, 2761,
	434, 2761,
	435, 2761,
	436, 2761,
	437, 2761,
	438, 2761,
	439, 2761,
	440, 2761,
	441, 2761,
	442, 2761,
	443, 2761,
	444, 2761,
	445, 2761,
	446, 2761,
	447, 2761,
	448, 2761,
	449, 2761,
	450, 2761,
	451, 2761,
	452, 2761,
	453, 2761,
	455, 2761,
	456, 2761,
	457, 2761,
	458, 2761,
	459, 2761,
	460, 2761,
	462, 2761,
	463, 2761,
	464, 2761,
	465, 2761,
	466, 2761,
	467, 2761,
	468, 2761,
	469, 2761,
	470, 2761,
	471, 2761,
	472, 2761,
	473, 2761,
	474, 2761,
	475, 2761,
	476, 2761,
	478, 2761,
	480, 2761,
	481, 2761,
	482, 2761,
	483, 2761,
	484, 2761,
	485, 2761,
	486, 2761,
	487, 2761,
	488, 2761,
	489, 2761,
	490, 2761,
	491, 2761,
	492, 2761,
	493, 2761,
	494, 2761,
	495, 2761,
	497, 2761,
	498, 2761,
	499, 2761,
	500, 2761,
	501, 2761,
	503, 2761,
	504, 2761,
	505, 2761,
	506, 2761,
	507, 2761,
	508, 2761,
	509, 2761,
	510, 2761,
	511, 2761,
	513, 2761,
	514, 2761,
	515, 2761,
	516, 2761,
	517, 2761,
	519, 2761,
	521, 2761,
	522, 2761,
	523, 2761,
	524, 2761,
	525, 2761,
	526, 2761,
	528, 2761,
	529, 2761,
	530, 2761,
	531, 2761,
	533, 2761,
	534, 2761,
	537, 2761,
	538, 2761,
	539, 2761,
	540, 2761,
	541, 2761,
	542, 2761,
	543, 2761,
	545, 2761,
	548, 2761,
	549, 2761,
	550, 2761,
	551, 2761,
	552, 2761,
	553, 2761,
	555, 2761,
	556, 2761,
	557, 2761,
	558, 2761,
	559, 2761,
	560, 2761,
	565, 2761,
	566, 2761,
	567, 2761,
	568, 2761,
	569, 2761,
	570, 2761,
	571, 2761,
	573, 2761,
	581, 2761,
	582, 2761,
	583, 2761,
	584, 2761,
	585, 2761,
	586, 2761,
	588, 2761,
	589, 2761,
	590, 2761,
	591, 2761,
	592, 2761,
	593, 2761,
	594, 2761,
	595, 2761,
	596, 2761,
	598, 2761,
	601, 2761,
	602, 2761,
	604, 2761,
	605, 2761,
	-2, 0,
	-1, 1637,
	188, 2642,
	518, 2642,
	583, 2642,
	602, 2642,
	-2, 0,
	-1, 1690,
	395, 885,
	460, 885,
	501, 885,
	523, 885,
	-2, 0,
	-1, 1701,
	1, 1398,
	599, 1398,
	601, 1398,
	603, 1398,
	-2, 0,
	-1, 1718,
	1, 880,
	599, 880,
	601, 880,
	603, 880,
	-2, 0,
	-1, 1719,
	1, 924,
	599, 924,
	601, 924,
	603, 924,
	-2, 0,
	-1, 1720,
	1, 932,
	599, 932,
	601, 932,
	603, 932,
	-2, 0,
	-1, 1723,
	1, 889,
	599, 889,
	601, 889,
	603, 889,
	-2, 0,
	-1, 1725,
	1, 895,
	599, 895,
	601, 895,
	603, 895,
	-2, 0,
	-1, 1728,
	1, 891,
	599, 891,
	601, 891,
	603, 891,
	-2, 0,
	-1, 1733,
	1, 905,
	599, 905,
	601, 905,
	603, 905,
	-2, 0,
	-1, 1764,
	1, 2625,
	599, 2625,
	601, 2625,
	602, 2625,
	603, 2625,
	-2, 0,
	-1, 1768,
	1, 977,
	599, 977,
	601, 977,
	603, 977,
	-2, 0,
	-1, 1783,
	1, 1448,
	603, 1448,
	-2, 1453,
	-1, 1786,
	170, 1604,
	183, 1604,
	275, 1604,
	343, 1604,
	-2, 1542,
	-1, 1886,
	151, 1563,
	170, 1563,
	183, 1563,
	242, 1563,
	275, 1563,
	343, 1563,
	353, 1563,
	535, 1563,
	-2, 2013,
	-1, 1947,
	601, 2188,
	-2, 0,
	-1, 1982,
	151, 1563,
	170, 1563,
	183, 1563,
	242, 1563,
	275, 1563,
	343, 1563,
	353, 1563,
	535, 1563,
	-2, 1695,
	-1, 2021,
	518, 2639,
	602, 2639,
	605, 2639,
	-2, 0,
	-1, 2038,
	600, 1836,
	-2, 1824,
	-1, 2070,
	188, 2639,
	602, 2639,
	605, 2639,
	-2, 0,
	-1, 2112,
	1, 697,
	603, 697,
	-2, 1453,
	-1, 2252,
	223, 259,
	-2, 2336,
	-1, 2253,
	223, 260,
	-2, 313,
	-1, 2363,
	1, 882,
	599, 882,
	601, 882,
	603, 882,
	-2, 0,
	-1, 2364,
	1, 926,
	599, 926,
	601, 926,
	603, 926,
	-2, 0,
	-1, 2365,
	1, 934,
	599, 934,
	601, 934,
	603, 934,
	-2, 0,
	-1, 2366,
	1, 979,
	599, 979,
	601, 979,
	603, 979,
	-2, 0,
	-1, 2407,
	1, 907,
	599, 907,
	601, 907,
	603, 907,
	-2, 0,
	-1, 2425,
	1, 962,
	599, 962,
	601, 962,
	603, 962,
	-2, 0,
	-1, 2470,
	439, 1631,
	440, 1631,
	-2, 1869,
	-1, 2501,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1889,
	-1, 2502,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1890,
	-1, 2503,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1891,
	-1, 2504,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1892,
	-1, 2505,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1893,
	-1, 2506,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1894,
	-1, 2507,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1895,
	-1, 2508,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1896,
	-1, 2520,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1908,
	-1, 2521,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1909,
	-1, 2522,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1910,
	-1, 2526,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1917,
	-1, 2532,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1921,
	-1, 2534,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1929,
	-1, 2535,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1930,
	-1, 2536,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1931,
	-1, 2537,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1932,
	-1, 2711,
	5, 2340,
	188, 2199,
	600, 2337,
	-2, 2328,
	-1, 2712,
	188, 2200,
	-2, 2712,
	-1, 2713,
	188, 2201,
	-2, 2530,
	-1, 2714,
	188, 2202,
	-2, 2410,
	-1, 2715,
	188, 2203,
	-2, 2467,
	-1, 2716,
	188, 2204,
	-2, 2515,
	-1, 2717,
	188, 2205,
	-2, 2637,
	-1, 2718,
	188, 2206,
	-2, 1996,
	-1, 2789,
	1, 1696,
	2, 1696,
	106, 1696,
	151, 1696,
	170, 1696,
	183, 1696,
	189, 1696,
	207, 1696,
	210, 1696,
	238, 1696,
	242, 1696,
	253, 1696,
	271, 1696,
	275, 1696,
	314, 1696,
	343, 1696,
	347, 1696,
	353, 1696,
	429, 1696,
	433, 1696,
	535, 1696,
	546, 1696,
	562, 1696,
	563, 1696,
	564, 1696,
	574, 1696,
	599, 1696,
	601, 1696,
	603, 1696,
	605, 1696,
	-2, 1695,
	-1, 2802,
	600, 2309,
	-2, 2323,
	-1, 2804,
	1, 330,
	562, 330,
	-2, 1590,
	-1, 2834,
	600, 1835,
	-2, 1825,
	-1, 3019,
	1, 1301,
	424, 1265,
	462, 1265,
	577, 1265,
	599, 1301,
	601, 1301,
	603, 1301,
	-2, 1590,
	-1, 3207,
	348, 1634,
	-2, 2751,
	-1, 3208,
	348, 1635,
	-2, 2622,
	-1, 3212,
	439, 2265,
	440, 2265,
	-2, 1994,
	-1, 3213,
	439, 2269,
	440, 2269,
	-2, 1995,
	-1, 3214,
	439, 2266,
	440, 2266,
	-2, 1994,
	-1, 3215,
	439, 2270,
	440, 2270,
	-2, 1995,
	-1, 3228,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1919,
	-1, 3229,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1923,
	-1, 3235,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1925,
	-1, 3460,
	1, 692,
	599, 692,
	601, 692,
	603, 692,
	-2, 1453,
	-1, 3624,
	43, 2300,
	-2, 1049,
	-1, 3629,
	1, 1301,
	599, 1301,
	601, 1301,
	603, 1301,
	-2, 1590,
	-1, 3741,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1927,
	-1, 3748,
	247, 0,
	249, 0,
	334, 0,
	-2, 1946,
	-1, 3816,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1975,
	-1, 3817,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1976,
	-1, 3818,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1977,
	-1, 3822,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1981,
	-1, 3823,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1982,
	-1, 3824,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1983,
	-1, 3872,
	600, 2310,
	-2, 2324,
	-1, 4047,
	602, 2868,
	-2, 1516,
	-1, 4109,
	247, 0,
	249, 0,
	334, 0,
	-2, 1947,
	-1, 4112,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1950,
	-1, 4113,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1952,
	-1, 4214,
	602, 2325,
	-2, 1336,
	-1, 4369,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1951,
	-1, 4370,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1953,
	-1, 4381,
	247, 0,
	-2, 1986,
	-1, 4569,
	247, 0,
	-2, 1987,
	-1, 4770,
	50, 0,
	220, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 2715,
}

const sqlPrivate = 57344

const sqlLast = 135166

var sqlAct = [...]int{
	275, 4763, 3613, 4966, 4603, 4874, 3107, 3094, 3366, 4431,
	4887, 4828, 4611, 4780, 4751, 4769, 2896, 4639, 4903, 4762,
	4635, 4660, 3612, 4738, 4719, 4210, 4696, 4781, 4413, 4782,
	2249, 4716, 4491, 4092, 2162, 4498, 2940, 4522, 2326, 4476,
	3781, 4841, 4573, 2744, 1269, 4436, 4323, 2965, 4768, 4284,
	4318, 3733, 4390, 1340, 4031, 4358, 1135, 4305, 2480, 1089,
	4039, 4307, 3646, 1258, 3967, 4211, 4507, 1535, 4298, 711,
	3221, 1333, 4259, 2338, 3064, 822, 1344, 3540, 4191, 4536,
	2549, 4012, 1795, 2012, 4328, 3640, 2081, 3608, 1346, 1080,
	2488, 3483, 782, 2299, 3994, 1655, 1988, 3996, 2170, 3116,
	2025, 2094, 3687, 822, 3689, 3131, 2978, 3118, 3083, 4386,
	3050, 1407, 3590, 1335, 3875, 3411, 3589, 2336, 3389, 2026,
	4148, 2481, 3597, 3109, 722, 3381, 3349, 4091, 1498, 897,
	4, 3126, 3095, 1957, 1698, 3078, 3080, 3115, 3370, 2236,
	3418, 3372, 1088, 182, 3026, 2197, 4875, 901, 3502, 2238,
	2629, 2181, 2898, 3842, 2485, 1933, 3348, 2627, 4574, 1894,
	2562, 3054, 1864, 2782, 3478, 3205, 269, 2237, 817, 1505,
	1338, 1142, 3125, 2995, 1593, 2213, 2939, 2232, 778, 2220,
	3065, 2784, 2150, 892, 1139, 268, 2154, 1783, 1312, 2092,
	1326, 1388, 2762, 1958, 2618, 1144, 2546, 2140, 2469, 2450,
	2817, 2452, 755, 3088, 3610, 2006, 1653, 1630, 1596, 819,
	2286, 823, 2884, 4661, 2921, 3119, 970, 1375, 3988, 2741,
	824, 2816, 2781, 3060, 2771, 111, 2621, 1252, 1967, 1928,
	1231, 698, 2752, 2599, 1974, 720, 1878, 182, 1796, 1797,
	2707, 828, 1266, 2673, 191, 763, 192, 2451, 2453, 1249,
	1733, 1323, 2246, 1146, 1628, 2285, 774, 1977, 2312, 1621,
	831, 1718, 1530, 2169, 4829, 4888, 2474, 1141, 1120, 828,
	1248, 712, 3061, 723, 715, 738, 812, 44, 873, 43,
	41, 32, 1254, 30, 28, 1229, 1782, 3258, 831, 991,
	1541, 874, 1802, 3856, 3252, 3857, 2083, 3368, 1264, 4979,
	2083, 1189, 4969, 2761, 1084, 4809, 3665, 2083, 267, 1810,
	1811, 1137, 918, 2083, 2083, 2083, 4406, 163, 4953, 4952,
	1534, 3665, 2761, 2761, 4403, 73, 4942, 46, 45, 4923,
	2258, 4921, 1841, 4435, 4860, 4435, 1084, 4817, 2258, 1813,
	3655, 4818, 74, 4806, 4804, 158, 2258, 2761, 2761, 4801,
	4798, 4766, 4765, 4802, 4799, 2258, 2258, 4764, 79, 4759,
	4758, 2104, 4749, 2104, 2104, 1866, 4435, 4747, 4744, 67,
	3656, 4435, 4510, 4714, 1812, 4685, 48, 4435, 160, 2825,
	2258, 1724, 1664, 1246, 1832, 4678, 4677, 4672, 4671, 2761,
	2761, 4435, 4435, 1829, 3445, 4665, 47, 4631, 88, 2258,
	4571, 4275, 4553, 4172, 2825, 4550, 4076, 1074, 4547, 2258,
	4500, 2101, 4435, 1261, 4501, 1232, 1232, 4454, 4453, 1085,
	4442, 2258, 2258, 1384, 2258, 50, 68, 1065, 4441, 1064,
	3428, 4434, 4435, 4397, 51, 4435, 3443, 2258, 4371, 57,
	3319, 3320, 2825, 161, 2258, 1118, 4347, 2754, 4105, 3267,
	2104, 49, 4336, 110, 2337, 3268, 3665, 4254, 94, 107,
	4237, 2761, 4111, 4055, 2761, 1384, 2825, 3682, 3220, 1835,
	1836, 1837, 1838, 4049, 94, 1810, 1811, 3682, 4010, 1818,
	1079, 3867, 4011, 1810, 1811, 3868, 3865, 3849, 3765, 3761,
	3866, 2761, 2258, 2761, 2845, 3681, 3846, 3672, 1841, 3682,
	52, 3673, 3365, 3360, 3359, 1813, 2761, 2761, 2761, 1260,
	3310, 2821, 3308, 1813, 3311, 3334, 3309, 2101, 95, 3300,
	1233, 3298, 3269, 3301, 1290, 2761, 2761, 2624, 1840, 1842,
	3135, 1866, 3105, 3104, 2104, 2868, 2322, 2322, 2824, 2761,
	1812, 2814, 2825, 2806, 1283, 2761, 2760, 2258, 1812, 2321,
	2761, 2761, 2258, 2322, 1827, 1828, 2761, 1235, 4686, 1236,
	239, 4575, 1543, 1543, 4566, 4554, 4510, 2104, 3319, 3320,
	3846, 3337, 3338, 3339, 2753, 4316, 4275, 2101, 1284, 4238,
	4076, 2258, 3673, 2968, 1810, 1811, 2883, 1833, 3257, 2174,
	2119, 2082, 2098, 3056, 2257, 2988, 2881, 1953, 1529, 1810,
	1811, 3950, 3736, 3710, 1975, 2225, 3657, 1841, 241, 1700,
	3325, 2798, 2797, 2796, 1813, 2795, 2794, 1237, 2625, 1234,
	1073, 1072, 1841, 1071, 1070, 3658, 3319, 3320, 1069, 1813,
	239, 1284, 1068, 1067, 1063, 1062, 1061, 1060, 1059, 1058,
	1866, 1057, 1056, 3334, 1055, 1818, 1054, 3179, 4166, 1812,
	1053, 3319, 3320, 1818, 1052, 1866, 1051, 240, 2084, 1832,
	1050, 1863, 2084, 1049, 1812, 99, 1810, 1811, 1829, 2084,
	233, 1048, 1047, 1046, 1832, 2084, 2084, 2084, 241, 234,
	3319, 3320, 1028, 53, 968, 967, 966, 1262, 965, 964,
	963, 962, 961, 960, 1840, 1842, 1813, 959, 56, 958,
	2626, 957, 2623, 59, 2399, 956, 193, 955, 954, 4557,
	953, 952, 951, 69, 950, 949, 1839, 948, 3335, 58,
	190, 102, 947, 3745, 106, 946, 945, 240, 54, 944,
	943, 1812, 162, 2101, 942, 941, 940, 939, 3325, 1834,
	55, 938, 1555, 937, 1835, 1836, 1837, 1838, 936, 935,
	239, 934, 933, 1833, 1818, 922, 1349, 1144, 62, 1835,
	1836, 1837, 1838, 153, 921, 920, 239, 916, 915, 1818,
	908, 907, 906, 891, 890, 847, 193, 846, 159, 153,
	845, 844, 835, 834, 1144, 1144, 1144, 3655, 833, 832,
	798, 789, 1863, 788, 787, 1549, 3325, 1865, 241, 769,
	3091, 263, 1410, 1840, 1842, 262, 1410, 261, 260, 1534,
	259, 1284, 258, 1349, 241, 257, 256, 255, 1840, 1842,
	1646, 3325, 254, 253, 157, 252, 251, 1863, 250, 1827,
	1828, 249, 248, 239, 239, 1863, 1818, 2258, 1144, 194,
	1144, 2855, 1144, 1392, 1393, 1394, 3335, 240, 2082, 1349,
	3325, 1379, 2656, 2101, 2101, 2098, 2445, 2628, 247, 246,
	233, 245, 1833, 240, 2753, 244, 243, 1542, 242, 234,
	3336, 4123, 1668, 3890, 3861, 1349, 233, 1833, 3683, 1513,
	3414, 241, 241, 1830, 1826, 234, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 1349, 193, 3280, 2654, 3,
	4791, 4330, 1349, 3263, 3363, 1834, 3254, 3159, 1508, 3036,
	2829, 1144, 193, 1144, 2640, 2803, 2788, 2148, 1349, 1978,
	1863, 2638, 2329, 1533, 3319, 3320, 1144, 1650, 1144, 3335,
	240, 240, 2103, 2001, 1905, 1537, 1863, 1396, 1317, 1320,
	1726, 1284, 3073, 233, 233, 3364, 1896, 1809, 1602, 1605,
	1936, 1863, 234, 234, 1330, 1371, 1554, 1935, 3335, 1268,
	4790, 4787, 4767, 1865, 4746, 1373, 3319, 3320, 1936, 4646,
	4563, 4555, 4426, 2622, 4578, 1935, 1349, 4385, 1863, 193,
	193, 1903, 1518, 1631, 1939, 1245, 4337, 4315, 4178, 4146,
	4145, 1839, 828, 4139, 4138, 1503, 1144, 4137, 3336, 1144,
	4130, 1543, 1934, 1863, 2838, 2302, 1839, 4129, 2328, 1548,
	4127, 831, 4122, 4119, 1834, 4118, 4015, 3330, 3328, 3329,
	3321, 3322, 3323, 3324, 3326, 3327, 4009, 3894, 3893, 1834,
	1365, 3892, 1863, 3319, 3320, 3871, 3837, 1532, 182, 182,
	3836, 3835, 3757, 1591, 3752, 3409, 1531, 3356, 1543, 3347,
	1403, 3318, 1495, 1500, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 3315, 1334, 1814, 1815, 1816, 1817, 1819, 1820, 3314,
	1608, 3312, 1865, 3435, 3307, 3306, 3305, 1669, 1357, 1633,
	1635, 3336, 3302, 3299, 3279, 3262, 3255, 1865, 3253, 1087,
	3106, 2789, 2611, 1809, 3325, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 3948, 1808, 1897, 1379, 1895, 4332, 1379,
	3336, 1898, 1501, 1896, 2265, 1512, 1334, 2263, 4973, 4913,
	1085, 4912, 4016, 4876, 4827, 4825, 1270, 239, 1144, 3783,
	4706, 4638, 4622, 4619, 1144, 1742, 3325, 4618, 3331, 3332,
	3333, 4617, 4597, 4596, 4594, 3330, 3328, 3329, 3321, 3322,
	3323, 3324, 3326, 3327, 1787, 4577, 239, 1622, 1830, 1826,
	1624, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	4576, 4551, 4535, 2827, 4534, 241, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 1334, 1334, 2552, 1674, 4520,
	4517, 3075, 4516, 4511, 239, 4450, 4421, 4383, 4366, 4365,
	4344, 4343, 1645, 3325, 241, 4301, 3321, 3322, 3323, 3324,
	3326, 3327, 4276, 3361, 4165, 4404, 4144, 1663, 4077, 4069,
	4066, 3936, 1885, 3935, 240, 3918, 3917, 3915, 3330, 3328,
	3329, 3321, 3322, 3323, 3324, 3326, 3327, 233, 3852, 1144,
	1144, 1144, 241, 3840, 3335, 1144, 234, 239, 1816, 1817,
	1819, 1820, 1266, 240, 1266, 3661, 3747, 1883, 3328, 3329,
	3321, 3322, 3323, 3324, 3326, 3327, 233, 1691, 3684, 1410,
	3666, 4016, 239, 3090, 2558, 234, 3632, 1955, 3557, 1781,
	1144, 4558, 3515, 822, 1727, 3482, 3437, 3284, 1964, 2043,
	822, 240, 1788, 3283, 3278, 241, 3244, 3049, 1942, 1941,
	1940, 1937, 193, 1929, 233, 1927, 2836, 2835, 1264, 2800,
	1264, 3335, 2793, 234, 2759, 1810, 1811, 2636, 1863, 239,
	241, 1882, 1784, 2016, 239, 2000, 1956, 1951, 1792, 1791,
	1950, 2010, 1949, 1065, 1948, 1064, 1947, 1946, 2004, 1945,
	193, 1944, 1943, 1924, 240, 1813, 1923, 1922, 1921, 1938,
	1920, 2022, 1786, 1085, 1919, 1918, 1917, 233, 2071, 1916,
	2073, 4331, 1915, 1914, 1913, 1144, 234, 241, 1912, 240,
	1349, 1911, 241, 1961, 1962, 1805, 1806, 2011, 1910, 239,
	1812, 1909, 233, 1898, 1884, 1863, 1881, 1876, 1364, 1144,
	1288, 234, 1279, 193, 3074, 1985, 3336, 1410, 182, 4580,
	1627, 4579, 3406, 4304, 2088, 2164, 4174, 2090, 2110, 4115,
	3889, 3864, 1232, 2095, 1930, 1931, 240, 2097, 193, 4176,
	2330, 240, 2100, 1261, 2137, 1261, 2106, 241, 3855, 233,
	3266, 2791, 3888, 1897, 233, 3433, 3319, 3320, 234, 3337,
	3338, 3339, 1379, 234, 3319, 3320, 1879, 1996, 2146, 828,
	1391, 2655, 4240, 4783, 2139, 2109, 828, 4910, 2116, 2009,
	4902, 2966, 2005, 3336, 4620, 193, 1389, 4512, 831, 4503,
	193, 2139, 4502, 4335, 4278, 831, 240, 2139, 4277, 1085,
	4239, 1983, 4168, 4082, 1976, 2254, 4081, 4080, 4079, 233,
	4078, 3859, 2017, 3858, 3686, 4856, 4854, 2653, 234, 2066,
	3685, 3668, 1384, 1627, 3667, 2086, 3323, 3324, 3326, 3327,
	2222, 3334, 1986, 2639, 4508, 1390, 1954, 1978, 3734, 1260,
	2637, 1260, 4019, 2944, 2208, 193, 1779, 3518, 1349, 1349,
	239, 3549, 1384, 1995, 1980, 1994, 1993, 1991, 1410, 1990,
	1989, 239, 2037, 4556, 1690, 3329, 3321, 3322, 3323, 3324,
	3326, 3327, 3962, 2624, 1936, 3304, 2112, 3303, 2125, 2023,
	1919, 1935, 2993, 1919, 3226, 3933, 2926, 2303, 1387, 1384,
	4425, 3677, 3615, 2174, 3614, 1044, 1904, 3484, 241, 1907,
	1743, 1699, 4839, 1244, 1512, 2327, 2619, 4499, 4813, 241,
	2040, 2239, 2355, 4794, 4779, 3598, 3132, 1700, 2240, 4023,
	2031, 4006, 2204, 3964, 2212, 3959, 3325, 2217, 3941, 3707,
	3458, 2334, 2108, 3321, 3322, 3323, 3324, 3326, 3327, 4387,
	1045, 3368, 3785, 2250, 2255, 3272, 4788, 240, 2834, 1952,
	1932, 4803, 1512, 3606, 2296, 1349, 1601, 1349, 240, 1349,
	233, 1525, 2115, 4445, 2625, 1360, 4417, 1316, 3342, 234,
	1626, 233, 4800, 2985, 2142, 3651, 2132, 1349, 1349, 3910,
	234, 2982, 2131, 2130, 3434, 4612, 2139, 2141, 2974, 2980,
	1349, 2923, 3341, 4319, 4713, 1385, 193, 2207, 4590, 2180,
	3487, 2182, 1349, 3928, 1349, 1349, 1349, 193, 3113, 3087,
	3158, 2242, 2243, 4789, 886, 3581, 828, 1262, 4857, 1262,
	1678, 4858, 4448, 4444, 2186, 4423, 3728, 3462, 822, 4892,
	2340, 3977, 4472, 4227, 3335, 831, 1576, 2202, 1568, 1042,
	1040, 2354, 2869, 1631, 2292, 1631, 2626, 4968, 2623, 2973,
	1144, 3028, 2922, 1038, 2828, 2413, 1036, 1033, 2297, 2411,
	4626, 1532, 2113, 4465, 4456, 4268, 4267, 4225, 1374, 2887,
	1531, 1024, 1527, 1626, 3975, 4222, 3974, 3966, 2309, 2887,
	3956, 2183, 3955, 3953, 2885, 1144, 1741, 3084, 2201, 2198,
	3952, 3940, 2216, 3905, 2885, 2244, 3904, 3587, 2126, 3976,
	2359, 1083, 3586, 3427, 3277, 2134, 3276, 3275, 1863, 2332,
	3274, 3230, 2256, 2991, 1381, 1740, 1391, 2990, 2987, 1144,
	887, 1144, 2976, 1577, 2960, 2317, 2959, 2954, 1144, 2953,
	2952, 2043, 2043, 1410, 2931, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 2278, 1144, 2277, 1144, 1144, 1144, 1144, 2306, 2319,
	1085, 1390, 1085, 2347, 2341, 4446, 3336, 2444, 4418, 761,
	2187, 1385, 1082, 2930, 828, 2311, 1386, 1385, 2315, 2462,
	1144, 1676, 2449, 2628, 1144, 1144, 1624, 3464, 2314, 2323,
	2314, 2324, 1144, 831, 1365, 3547, 1144, 1739, 1144, 1144,
	1820, 2136, 2891, 4481, 2295, 3484, 1410, 1391, 2815, 2533,
	761, 1785, 1144, 1144, 1144, 1144, 4893, 2384, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 2346, 2600, 2601, 2171,
	2486, 2487, 2240, 2327, 1382, 3517, 2188, 2189, 2669, 2135,
	1722, 2600, 2616, 1383, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 2363, 2374, 2668, 2490, 1144, 2276, 2924,
	4221, 2184, 2924, 2167, 2460, 2437, 3708, 1722, 2664, 1266,
	2842, 1614, 1390, 1613, 2819, 4223, 1410, 1612, 2442, 1611,
	2371, 2351, 1777, 1084, 2425, 1266, 2407, 2710, 2710, 2724,
	1381, 2600, 2172, 2173, 2745, 2747, 1381, 4364, 2473, 2622,
	2751, 1144, 1410, 1093, 2185, 2364, 3331, 3332, 3333, 1671,
	2948, 2460, 1585, 3330, 3328, 3329, 3321, 3322, 3323, 3324,
	3326, 3327, 2168, 4184, 2458, 1264, 1528, 1572, 2876, 3327,
	2805, 2446, 1719, 2454, 2461, 2448, 2447, 2941, 2942, 2424,
	1692, 1264, 2619, 4241, 2801, 2564, 1721, 1065, 2210, 2477,
	1065, 1065, 2478, 2479, 2941, 2942, 3548, 2615, 1302, 2928,
	2941, 2942, 2548, 1030, 2037, 2037, 3138, 710, 2365, 2548,
	2423, 2458, 1386, 1721, 1590, 2900, 1996, 2436, 1386, 2434,
	2666, 3174, 2776, 2914, 2155, 2667, 4183, 2417, 2670, 2156,
	2671, 2672, 2372, 705, 1778, 1720, 760, 2405, 3203, 4605,
	4925, 889, 888, 1752, 1688, 1349, 1349, 1085, 4857, 3241,
	2768, 3218, 2040, 2040, 2560, 2913, 2316, 1085, 1384, 4206,
	2368, 1085, 2031, 2031, 2174, 2190, 1985, 1672, 2362, 2984,
	1382, 2613, 3717, 2818, 1790, 1232, 1382, 760, 3239, 1383,
	1261, 2556, 1700, 1700, 4906, 1383, 1363, 3716, 2554, 1410,
	4482, 3925, 2456, 4199, 2822, 3913, 1261, 1738, 3461, 2864,
	2767, 2983, 4480, 3176, 1756, 1081, 3771, 182, 4478, 2981,
	2858, 3985, 2459, 2850, 3185, 1597, 3534, 2979, 2628, 2854,
	2830, 2736, 2841, 2043, 2749, 2719, 2706, 4224, 4266, 3937,
	2903, 931, 1379, 2865, 2757, 2758, 2773, 2774, 2769, 2886,
	3774, 2191, 2866, 2157, 3526, 3023, 762, 2890, 4200, 2790,
	1085, 3954, 1983, 1938, 1966, 4477, 2861, 1735, 4219, 2459,
	2161, 4682, 4607, 3951, 4871, 3897, 1410, 1595, 3986, 3884,
	4897, 2194, 2775, 3535, 2780, 3593, 1260, 2786, 2787, 1034,
	1034, 1343, 1349, 4479, 1677, 3217, 2457, 762, 3772, 2143,
	2144, 796, 1260, 1034, 2412, 2892, 1035, 1034, 2410, 3585,
	2890, 3527, 3024, 1144, 1144, 3545, 1144, 4363, 2837, 2986,
	3923, 3984, 2860, 884, 2849, 883, 3533, 2951, 2852, 2929,
	2853, 3236, 1930, 1931, 2443, 1018, 3188, 2857, 2195, 2840,
	822, 2844, 1349, 2457, 2158, 2163, 4879, 1970, 1520, 2889,
	2859, 2867, 2934, 4878, 3525, 3022, 2813, 3237, 3711, 1078,
	2544, 3242, 2262, 2261, 1384, 4928, 1675, 4206, 1018, 4846,
	1384, 2949, 4097, 1349, 3210, 3211, 2977, 1334, 4898, 2927,
	4096, 2193, 2933, 3098, 1560, 1274, 2870, 3594, 1349, 2542,
	1349, 4785, 1078, 3648, 3071, 2177, 1973, 2435, 3127, 2433,
	1276, 4199, 3053, 3649, 1574, 4192, 1349, 2628, 3591, 3182,
	1598, 1968, 2370, 794, 2943, 2945, 2946, 2947, 3031, 2905,
	2908, 2895, 4190, 3033, 3938, 2964, 1334, 1271, 2159, 1971,
	2116, 4194, 2958, 2992, 3139, 3140, 4692, 1639, 3020, 3021,
	3067, 2530, 2902, 2223, 4409, 3146, 3147, 3148, 4904, 3472,
	2223, 1019, 2178, 1654, 1144, 2628, 4200, 1334, 1334, 4680,
	1571, 1631, 1753, 4195, 1262, 4613, 2917, 2957, 4196, 4956,
	3187, 1277, 1969, 4217, 828, 2962, 2165, 2888, 4201, 2932,
	1262, 2972, 2967, 3133, 1019, 3648, 2037, 2872, 4220, 4900,
	706, 1301, 2950, 831, 2083, 2176, 3560, 3160, 4193, 3161,
	3029, 3184, 4681, 2219, 2235, 3383, 828, 2956, 2874, 3136,
	4633, 1682, 2955, 3130, 182, 3141, 1144, 3142, 3129, 1532,
	4198, 1597, 1144, 1144, 3156, 831, 3112, 3463, 3034, 3467,
	2218, 273, 2538, 2155, 2040, 1750, 3047, 4202, 2156, 1275,
	4606, 759, 4293, 1966, 2031, 2875, 3162, 3238, 3057, 3058,
	3100, 1501, 1701, 2539, 3153, 3102, 4905, 3240, 2540, 1673,
	1526, 2234, 2545, 2804, 2214, 1286, 2873, 4786, 3232, 3093,
	3164, 707, 3166, 2211, 3168, 2547, 3170, 3171, 1144, 1144,
	3103, 4845, 2406, 1512, 1144, 3114, 3190, 1925, 3192, 2901,
	3499, 1972, 4907, 2172, 2173, 3503, 3134, 1144, 1144, 3180,
	1970, 3431, 1754, 1144, 1144, 3101, 3186, 4360, 4820, 1144,
	3082, 2528, 3155, 1031, 2531, 2209, 1687, 1689, 4821, 1076,
	708, 1018, 709, 2215, 932, 2223, 1970, 3165, 3029, 3167,
	795, 3169, 4218, 2367, 3163, 1751, 3592, 2165, 4753, 3924,
	4754, 2361, 2555, 4093, 1020, 1078, 1789, 3498, 3505, 1973,
	4376, 4868, 2157, 2887, 1144, 1144, 1144, 3473, 1362, 2160,
	1144, 4195, 3233, 4736, 2770, 2527, 4196, 4197, 2906, 2161,
	1144, 4784, 4724, 4251, 728, 1973, 4201, 1020, 3193, 797,
	1875, 3195, 1971, 793, 4899, 3209, 3282, 1144, 4929, 2772,
	1968, 1077, 2610, 2785, 2726, 1084, 1755, 3199, 3260, 3261,
	3200, 3787, 4308, 3264, 3382, 4916, 4207, 4208, 1971, 4303,
	923, 4087, 3504, 2473, 3204, 3219, 4914, 4271, 4198, 3885,
	3999, 1291, 4309, 3999, 909, 2963, 1106, 4098, 3265, 3997,
	3730, 1512, 3997, 3201, 1706, 4202, 924, 1019, 1800, 4640,
	4729, 3256, 1334, 2158, 2163, 3198, 4359, 4659, 2541, 4519,
	914, 1969, 1799, 3699, 4270, 4269, 1272, 4037, 2543, 3636,
	2812, 3699, 4294, 2284, 1963, 1021, 3697, 1289, 1282, 697,
	4014, 4443, 4094, 2476, 3697, 3690, 2175, 3231, 4528, 1144,
	1144, 1144, 1144, 3690, 4844, 3826, 4142, 2127, 1799, 1144,
	1144, 1144, 1022, 1512, 1144, 1512, 3419, 4589, 1021, 4038,
	3970, 1794, 2226, 3957, 1144, 1266, 1410, 2233, 4001, 1273,
	1144, 4001, 1144, 4934, 3909, 3479, 3375, 3376, 39, 2124,
	3637, 1266, 3628, 3475, 3072, 1022, 3066, 2159, 1085, 3877,
	3051, 4957, 2310, 2304, 2298, 2290, 2270, 3358, 2269, 1410,
	3770, 1565, 4641, 4000, 1972, 1023, 4000, 1293, 768, 3841,
	4697, 1266, 3731, 3377, 1410, 3901, 2084, 1798, 2935, 2529,
	2890, 1264, 3271, 4819, 4662, 4197, 2418, 2763, 2120, 4040,
	1972, 3509, 4324, 3048, 3692, 2165, 2043, 1264, 1023, 3399,
	1410, 2466, 3692, 3878, 4099, 4361, 1304, 2344, 4497, 3691,
	4495, 4420, 3490, 1798, 3486, 2122, 1349, 3691, 3485, 3224,
	3202, 3854, 2766, 2352, 4207, 4208, 3380, 1264, 3379, 2335,
	3879, 1799, 3876, 2267, 3412, 1729, 1728, 1723, 1144, 3881,
	2811, 2227, 2810, 2809, 3387, 1800, 2808, 2807, 3507, 4005,
	1020, 3055, 1144, 3426, 3995, 2164, 4306, 1620, 2123, 1618,
	3408, 3413, 1349, 2765, 1606, 3700, 4600, 2043, 2764, 930,
	4492, 3468, 3469, 3700, 4285, 1082, 4432, 3441, 1607, 925,
	926, 1800, 3385, 2911, 2907, 1144, 3916, 3678, 3391, 2164,
	4100, 3508, 3488, 910, 911, 3492, 1261, 3459, 3827, 2308,
	3688, 1349, 3601, 3906, 2116, 4865, 3448, 3828, 4143, 3450,
	3451, 3465, 1261, 1379, 3454, 3432, 3455, 3369, 3456, 3421,
	3422, 3423, 3424, 1349, 3417, 1349, 3405, 3452, 3353, 3354,
	3355, 4637, 3384, 1875, 3998, 3398, 1798, 3998, 4407, 4341,
	2222, 2467, 1261, 4933, 836, 3027, 3444, 1410, 3429, 2222,
	2116, 3481, 3137, 2936, 2937, 3032, 3438, 3439, 1349, 3440,
	3489, 4642, 1349, 3494, 3476, 2010, 3496, 3563, 3386, 3565,
	843, 1021, 3569, 3397, 3902, 3030, 3575, 2339, 2160, 3400,
	3401, 2239, 4433, 1681, 3392, 3550, 3480, 1349, 4428, 2116,
	4703, 4601, 1260, 4427, 4710, 3524, 1075, 4415, 1022, 1707,
	3520, 1349, 4694, 1349, 3543, 4149, 3843, 1410, 1260, 2635,
	3449, 2116, 4340, 2116, 822, 1349, 3453, 3403, 4869, 3404,
	3698, 3693, 3694, 3695, 3696, 1773, 1349, 3460, 3698, 3693,
	3694, 3695, 3696, 3880, 3390, 3396, 3611, 3561, 1260, 3446,
	3466, 1349, 4731, 2409, 4416, 2376, 2116, 4484, 3420, 2037,
	2116, 1023, 3538, 3558, 1775, 1772, 4870, 767, 1266, 4867,
	2230, 1770, 4805, 3620, 3471, 3644, 3907, 3595, 3395, 2429,
	3506, 4629, 4621, 4382, 4141, 927, 928, 3127, 4004, 4704,
	4602, 3350, 3627, 1349, 1349, 3474, 3127, 1747, 3516, 912,
	913, 3530, 1745, 3529, 2325, 3531, 3596, 2040, 3599, 1619,
	3532, 1617, 3642, 1717, 3746, 3522, 3705, 2031, 1349, 3704,
	3442, 929, 1343, 2342, 1264, 3664, 3313, 2228, 3551, 3635,
	2037, 3546, 3243, 3559, 3523, 2345, 3653, 3536, 1102, 3583,
	3351, 1715, 3052, 2975, 1512, 1512, 3572, 2353, 3578, 2356,
	2357, 2358, 2958, 1713, 1711, 2925, 3537, 1709, 3539, 1703,
	1697, 2839, 2438, 2003, 3709, 1410, 1695, 3584, 1410, 1616,
	2229, 1999, 3570, 1776, 1657, 3726, 3576, 2248, 2040, 3725,
	1262, 1794, 3178, 3177, 3144, 2455, 3393, 3394, 2031, 3582,
	828, 3571, 3603, 1734, 2379, 3577, 1262, 2933, 3638, 2289,
	3623, 1144, 2268, 837, 838, 2072, 3645, 1144, 1144, 831,
	3624, 1144, 1144, 1144, 3625, 1144, 1908, 1512, 2155, 1670,
	1589, 2634, 3702, 2156, 1144, 2043, 1262, 182, 182, 4778,
	3719, 4252, 3701, 1144, 2408, 3961, 2375, 3676, 1144, 1261,
	3960, 3680, 2295, 3650, 1410, 1106, 1106, 1106, 4253, 4236,
	1774, 1771, 3659, 1144, 3652, 3588, 3643, 1769, 3562, 4693,
	2431, 1410, 4322, 1493, 3674, 2430, 4258, 1493, 3662, 3663,
	3724, 2043, 2043, 1144, 1144, 4249, 1144, 1144, 1144, 3723,
	3713, 4188, 3714, 1746, 3715, 1032, 4036, 4027, 1744, 3973,
	3958, 3931, 3929, 4317, 1144, 3908, 1085, 3631, 1144, 1716,
	2043, 2043, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 3732, 1144, 3703, 3749, 3799, 1714, 3800, 3759,
	3760, 1144, 1144, 2043, 3720, 1260, 3626, 2157, 1144, 1712,
	1710, 4545, 3616, 1708, 3085, 1702, 1696, 840, 839, 1144,
	3729, 3077, 1694, 3070, 2161, 1615, 3721, 3059, 2247, 3045,
	1266, 1266, 3044, 3025, 1144, 3727, 1334, 2856, 2851, 2266,
	2264, 2241, 2224, 2192, 2179, 2166, 2105, 2102, 2099, 2096,
	2091, 3838, 2089, 2085, 2076, 4842, 3767, 2779, 3641, 4833,
	2486, 3790, 1241, 3754, 4537, 1410, 3573, 3756, 2015, 3222,
	4858, 2233, 4308, 1803, 2128, 3873, 4599, 4538, 3766, 3777,
	3196, 841, 842, 3773, 3775, 3776, 1264, 1264, 1242, 2486,
	3805, 3782, 4309, 3860, 3194, 3789, 2441, 3018, 2158, 2163,
	4741, 4346, 3796, 4339, 4338, 4265, 4180, 3128, 3797, 2147,
	1570, 4539, 3798, 2887, 2887, 1144, 1037, 1039, 1041, 4530,
	2912, 4523, 3834, 3802, 3804, 3830, 2307, 2174, 2885, 2909,
	4048, 1767, 1768, 1144, 1324, 2366, 1325, 2403, 3845, 2398,
	4740, 3839, 2439, 2373, 4228, 3882, 3883, 1512, 2037, 1810,
	1811, 4260, 1693, 4565, 182, 4430, 3831, 1810, 1811, 2915,
	3895, 3896, 4150, 3898, 4128, 3223, 1144, 1144, 3501, 2916,
	2938, 3850, 3851, 1807, 1358, 4541, 1356, 1292, 4861, 3847,
	3848, 4852, 2159, 1262, 1804, 3574, 3899, 1813, 2440, 264,
	3900, 2916, 4024, 3969, 2037, 2037, 2040, 4814, 4540, 1243,
	3043, 1261, 1261, 2291, 1369, 2982, 2031, 2980, 1144, 3942,
	2989, 1325, 2971, 2969, 1812, 3968, 4542, 3862, 2918, 1325,
	2920, 4702, 1812, 2037, 2037, 2970, 2153, 4687, 4653, 3930,
	2165, 3932, 1349, 2919, 4647, 4598, 694, 1349, 3891, 4514,
	2863, 1343, 2040, 2040, 4490, 4408, 4034, 4026, 4013, 3870,
	3630, 3965, 2031, 2031, 3092, 2750, 2037, 1540, 2111, 1547,
	3946, 1553, 2043, 2024, 4901, 4733, 4429, 2961, 3947, 3949,
	4734, 2040, 2040, 1524, 1523, 3430, 4932, 3863, 3963, 3319,
	3320, 2031, 2031, 2151, 3912, 3971, 1810, 1811, 4649, 4733,
	4873, 2879, 2880, 1349, 4734, 2877, 2878, 1260, 1260, 1144,
	3934, 1534, 3972, 1680, 2040, 3939, 4120, 1266, 1144, 1679,
	2630, 3987, 3989, 4050, 2031, 3887, 2879, 2877, 1349, 1349,
	1349, 2665, 3098, 4057, 1749, 2116, 2152, 1748, 4033, 4515,
	1644, 3983, 1649, 4466, 2933, 1349, 1349, 1349, 4262, 4041,
	4257, 4020, 4256, 4116, 3886, 1662, 3778, 1667, 3567, 3127,
	4007, 3564, 1902, 1901, 4918, 1349, 4880, 3991, 4691, 4061,
	4045, 1410, 4690, 1264, 3993, 4689, 4021, 4002, 4628, 4042,
	4627, 4582, 4493, 4003, 4460, 4030, 4405, 3019, 4402, 4400,
	3980, 3480, 4296, 4282, 4044, 4226, 4175, 1410, 4073, 3992,
	1144, 1144, 4072, 4054, 4008, 3927, 1144, 1144, 2043, 3919,
	1493, 1144, 1144, 3634, 1144, 4025, 3633, 3495, 3447, 1144,
	3183, 3175, 1725, 2160, 3152, 3151, 3150, 3149, 3076, 4028,
	1144, 3046, 2910, 2847, 2843, 2832, 2831, 2820, 2559, 2432,
	2404, 2397, 4046, 2396, 2395, 2394, 1144, 2393, 4051, 4056,
	2305, 3981, 2279, 4043, 2275, 4052, 2274, 4114, 2273, 2272,
	4085, 2271, 2079, 2078, 2470, 2077, 4101, 4083, 2075, 2014,
	3982, 4064, 1766, 4067, 4071, 4068, 4543, 1765, 1704, 4062,
	4063, 4084, 4544, 1584, 1583, 1262, 1262, 1582, 1261, 4070,
	1581, 1580, 1579, 1578, 1573, 1569, 1567, 1566, 1517, 1516,
	1515, 3145, 1152, 4102, 1401, 1400, 1399, 1266, 4110, 1398,
	1397, 1361, 4095, 4090, 1311, 1266, 1310, 1309, 1308, 1410,
	1410, 1307, 1410, 1306, 1305, 2037, 1303, 1298, 1297, 1266,
	1106, 1296, 1334, 1295, 1294, 898, 8, 1224, 1493, 2118,
	1349, 1349, 1043, 1029, 4604, 4205, 4204, 4203, 271, 271,
	271, 1410, 700, 701, 2428, 716, 700, 716, 726, 93,
	1575, 766, 860, 1264, 87, 786, 2231, 3926, 4808, 997,
	792, 1264, 4730, 2040, 4632, 1558, 1266, 271, 1266, 868,
	4155, 4181, 4182, 2031, 1260, 1264, 4712, 4022, 3497, 4140,
	2994, 2378, 3412, 1705, 2380, 2295, 3407, 2792, 905, 4679,
	4124, 1349, 3281, 4215, 4572, 271, 4229, 4375, 2633, 1906,
	2727, 1410, 3362, 1349, 89, 1128, 1349, 1174, 4292, 4291,
	4189, 3911, 3117, 4163, 4289, 4158, 4160, 1410, 4152, 4153,
	4147, 4288, 1264, 2028, 1264, 4157, 2030, 4154, 1092, 4212,
	1413, 4212, 4752, 182, 4164, 4185, 4216, 2129, 4151, 4167,
	4261, 1134, 4263, 2145, 2138, 2833, 4156, 2709, 4173, 1151,
	1148, 2037, 2032, 4231, 4232, 1349, 1349, 2034, 4187, 1150,
	1149, 4179, 2033, 1926, 1147, 4230, 2027, 4032, 1261, 1493,
	3096, 3660, 4171, 1625, 1992, 1349, 1261, 1623, 4286, 2116,
	999, 2133, 2553, 2617, 3270, 1899, 4250, 1410, 1108, 1130,
	1261, 2116, 1349, 2614, 2116, 1287, 1119, 4245, 4264, 2040,
	1107, 3388, 4283, 3367, 3647, 3869, 2465, 878, 4280, 2031,
	3316, 2620, 1278, 2733, 2725, 2721, 3457, 1266, 3086, 1780,
	4389, 1877, 3097, 4255, 1395, 4314, 700, 700, 1112, 1349,
	1349, 1349, 1349, 1349, 271, 4248, 2551, 1261, 4325, 1261,
	1890, 3248, 4342, 2475, 1410, 3654, 3410, 2826, 4737, 3786,
	4311, 4281, 1262, 3181, 2283, 4273, 1144, 1144, 1144, 4272,
	1240, 1239, 1285, 2116, 1260, 1238, 4274, 4718, 4326, 4287,
	4715, 4313, 1260, 1264, 1410, 4279, 2221, 4329, 4302, 1144,
	4212, 4065, 1144, 1144, 3609, 2121, 1260, 4345, 2871, 2563,
	4334, 3617, 1144, 4320, 4234, 2043, 1124, 1511, 2422, 3373,
	1144, 1144, 4327, 3679, 1586, 791, 4437, 4243, 1136, 1862,
	4246, 3015, 3014, 4593, 4235, 1380, 1378, 1410, 1377, 1349,
	1376, 4889, 4955, 4367, 3922, 4351, 4244, 3921, 3920, 4247,
	4349, 4348, 238, 1260, 3216, 1260, 1801, 1793, 235, 237,
	4355, 236, 4297, 1410, 3874, 3416, 4812, 3944, 3600, 23,
	22, 1144, 21, 4356, 116, 4362, 42, 4372, 20, 1408,
	155, 133, 152, 1506, 1144, 151, 125, 150, 149, 148,
	147, 154, 146, 1144, 145, 140, 144, 143, 2043, 142,
	141, 139, 137, 138, 132, 136, 135, 1144, 1261, 134,
	1144, 131, 130, 129, 128, 4384, 127, 126, 4310, 124,
	4378, 156, 123, 122, 1144, 121, 4398, 120, 4399, 119,
	4440, 1410, 4395, 4396, 118, 2295, 117, 779, 1349, 780,
	61, 60, 115, 113, 4411, 114, 19, 40, 1349, 1349,
	14, 65, 66, 4412, 18, 1334, 1888, 13, 4410, 4419,
	1893, 35, 1262, 92, 1493, 105, 104, 103, 36, 4459,
	1262, 101, 100, 34, 17, 16, 15, 98, 97, 96,
	4483, 33, 31, 11, 1262, 9, 4451, 4452, 3611, 37,
	1987, 12, 4496, 1410, 5, 4505, 1349, 4462, 187, 186,
	189, 4457, 185, 188, 1260, 91, 184, 4471, 183, 90,
	29, 4461, 10, 179, 1266, 1266, 4467, 4449, 4469, 4506,
	4470, 4468, 4018, 82, 181, 180, 2116, 178, 4513, 177,
	176, 1262, 4475, 1262, 83, 80, 1144, 1144, 4494, 4548,
	4549, 4486, 4524, 4485, 4488, 175, 4533, 4509, 86, 174,
	81, 85, 84, 1144, 2043, 27, 4552, 1493, 6, 4504,
	64, 4527, 7, 4357, 3706, 108, 109, 38, 2037, 4529,
	1264, 1264, 4525, 78, 4489, 77, 76, 4212, 4212, 4561,
	4562, 75, 26, 4526, 63, 25, 4532, 4329, 173, 4531,
	220, 4546, 1144, 219, 1144, 218, 1144, 217, 216, 4521,
	215, 214, 213, 208, 207, 212, 1266, 210, 209, 211,
	206, 230, 4463, 229, 4588, 223, 2040, 222, 228, 1144,
	227, 1266, 226, 225, 224, 221, 2031, 1493, 232, 205,
	204, 203, 201, 197, 196, 4564, 4560, 200, 202, 3206,
	199, 4581, 4473, 198, 4583, 195, 4616, 231, 72, 171,
	172, 2037, 71, 1493, 4570, 4584, 170, 169, 168, 167,
	4587, 4474, 1264, 2164, 166, 165, 164, 2400, 70, 4212,
	24, 4608, 3579, 1144, 1144, 2, 1, 1264, 4609, 0,
	0, 0, 1262, 1144, 4212, 1261, 1261, 0, 1266, 0,
	0, 1266, 4615, 0, 0, 1349, 4636, 0, 0, 2040,
	3604, 4623, 0, 0, 0, 1349, 1349, 0, 0, 2031,
	0, 3621, 0, 4656, 4625, 1280, 4658, 0, 0, 0,
	2727, 2727, 1349, 0, 4630, 0, 3629, 0, 4624, 0,
	4670, 0, 4644, 4645, 0, 0, 1144, 1144, 0, 4651,
	4643, 4655, 4650, 4648, 1264, 0, 1144, 1264, 1300, 0,
	4509, 4212, 0, 0, 4212, 0, 0, 4664, 4668, 4669,
	271, 0, 271, 271, 4667, 1329, 271, 1339, 3670, 3671,
	0, 4663, 0, 0, 0, 4673, 0, 1261, 1359, 4683,
	4674, 1260, 1260, 0, 4666, 0, 786, 0, 0, 786,
	1144, 1144, 1261, 1144, 4675, 4684, 4676, 0, 4688, 0,
	1493, 0, 0, 0, 0, 0, 4705, 2037, 0, 0,
	0, 0, 0, 271, 4709, 271, 271, 1329, 0, 271,
	271, 4717, 4720, 0, 1339, 4739, 4708, 0, 4735, 0,
	0, 4707, 0, 4721, 4732, 0, 4725, 0, 271, 0,
	1536, 4700, 4701, 1512, 4757, 4760, 2002, 0, 0, 0,
	4722, 1144, 1144, 1144, 4761, 2040, 1556, 0, 0, 1261,
	0, 0, 1261, 1563, 4727, 2031, 4742, 4728, 4726, 0,
	0, 0, 0, 1260, 0, 0, 0, 1493, 4748, 0,
	4755, 4756, 1588, 0, 1144, 1339, 0, 0, 1260, 271,
	271, 0, 1329, 0, 0, 4792, 0, 4797, 4777, 4776,
	4774, 4775, 2727, 2727, 2727, 2727, 0, 0, 0, 0,
	0, 0, 0, 786, 0, 271, 271, 0, 0, 0,
	0, 0, 0, 4815, 4826, 0, 4795, 1651, 0, 0,
	4824, 0, 0, 0, 0, 4838, 4837, 1658, 0, 4811,
	0, 1144, 905, 0, 4793, 4822, 0, 0, 0, 4823,
	0, 1334, 0, 0, 0, 1260, 4843, 0, 1260, 1262,
	1262, 0, 4831, 4836, 4832, 0, 0, 4834, 4835, 0,
	4830, 0, 4859, 4840, 2149, 0, 0, 4851, 0, 0,
	4855, 4853, 0, 4807, 0, 4810, 4849, 4850, 0, 0,
	0, 0, 4862, 0, 2164, 0, 1266, 4866, 1266, 4883,
	4863, 4864, 0, 4717, 0, 4739, 4720, 0, 0, 0,
	0, 4882, 4877, 4881, 0, 4872, 0, 4896, 0, 0,
	271, 4884, 0, 4886, 4891, 0, 4894, 4636, 0, 4885,
	0, 0, 0, 0, 0, 0, 0, 0, 4909, 0,
	4895, 0, 271, 0, 0, 0, 4911, 4908, 0, 0,
	0, 1262, 1264, 0, 1264, 0, 0, 0, 0, 4212,
	0, 4212, 0, 0, 0, 0, 1262, 4926, 4890, 0,
	0, 0, 1144, 1144, 4919, 4922, 4924, 0, 0, 0,
	0, 1144, 0, 1144, 1144, 4927, 4920, 4930, 0, 2199,
	0, 4936, 0, 4940, 0, 4946, 0, 0, 4947, 0,
	4951, 0, 0, 4949, 4945, 4950, 4948, 4943, 4915, 0,
	4944, 0, 3098, 0, 4917, 2259, 0, 4959, 4954, 4958,
	4960, 0, 0, 0, 4967, 4961, 4937, 4938, 4964, 4963,
	4965, 0, 0, 1262, 0, 0, 1262, 0, 4970, 0,
	0, 0, 0, 0, 1144, 4975, 0, 4977, 0, 0,
	4962, 4967, 4972, 4981, 4978, 2174, 4980, 0, 0, 0,
	0, 4974, 0, 4971, 2205, 0, 0, 1261, 0, 1261,
	0, 0, 4939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3037, 0, 0, 3040, 2557, 3042, 0, 0, 2200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1888, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3978, 0, 0,
	0, 0, 0, 700, 0, 0, 0, 0, 0, 0,
	0, 3089, 0, 0, 3089, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 271, 1260, 271, 0, 0, 0,
	271, 0, 0, 0, 0, 2732, 0, 0, 0, 0,
	0, 0, 0, 1536, 1329, 2007, 271, 0, 271, 2013,
	0, 0, 0, 0, 0, 271, 1536, 716, 0, 0,
	0, 0, 271, 1536, 0, 1536, 0, 0, 0, 1810,
	1811, 0, 0, 0, 0, 0, 0, 2080, 0, 0,
	0, 0, 0, 4058, 4059, 4060, 0, 0, 0, 271,
	0, 0, 1841, 0, 0, 0, 271, 3172, 0, 1813,
	1343, 4074, 4075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1811, 0, 0,
	0, 3245, 3246, 0, 0, 1866, 0, 0, 0, 0,
	0, 1536, 0, 0, 1812, 786, 0, 0, 0, 1841,
	0, 0, 0, 0, 1832, 0, 1813, 0, 0, 0,
	2489, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2727, 2727, 1493, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 2196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2209, 0, 0,
	1493, 1262, 0, 1262, 0, 0, 0, 0, 3740, 0,
	0, 0, 0, 0, 2211, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 0, 1818,
	0, 1493, 0, 2631, 2206, 0, 0, 0, 0, 2208,
	3010, 0, 0, 0, 0, 2727, 2727, 2727, 2727, 2727,
	2727, 2727, 2727, 2727, 2727, 2727, 2727, 2727, 2727, 2727,
	2727, 2727, 2727, 2727, 2727, 0, 2727, 0, 0, 1106,
	0, 0, 0, 3002, 3000, 0, 1818, 2203, 1840, 1842,
	3004, 3006, 2996, 1106, 0, 4169, 4170, 0, 271, 0,
	0, 0, 271, 3343, 3344, 3345, 3346, 3319, 3320, 0,
	3337, 3338, 3339, 0, 1827, 1828, 0, 0, 0, 2210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4107,
	0, 0, 0, 0, 0, 1840, 1842, 0, 0, 2802,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 3334, 0, 0, 0, 0, 0, 1493, 0,
	271, 0, 271, 0, 1833, 0, 700, 0, 271, 0,
	0, 0, 2207, 3319, 3320, 0, 3337, 3338, 3339, 0,
	786, 0, 0, 0, 905, 0, 0, 0, 0, 0,
	1343, 1863, 0, 0, 0, 4106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 1329, 271, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	786, 0, 0, 0, 0, 0, 0, 271, 1863, 0,
	0, 0, 0, 2998, 0, 2377, 1839, 3325, 3334, 0,
	271, 271, 0, 271, 3012, 271, 2882, 271, 0, 271,
	0, 0, 0, 0, 4350, 0, 4352, 4353, 4354, 1834,
	0, 0, 0, 0, 0, 0, 3011, 3003, 3001, 3005,
	3007, 2997, 2999, 3013, 2414, 0, 0, 2415, 0, 2416,
	0, 0, 3009, 0, 0, 0, 0, 0, 73, 0,
	0, 271, 271, 271, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 3341, 0, 74, 1834, 0, 0, 0,
	0, 0, 0, 0, 2732, 3016, 0, 1865, 766, 0,
	0, 79, 786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4401, 3335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 1493,
	0, 88, 1810, 1811, 1865, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 0, 0, 0, 0, 0, 3510, 3511, 0,
	3512, 3513, 3514, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 2732, 2732, 0, 0, 3341,
	0, 1860, 899, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 2565, 110, 0, 1866, 1863,
	0, 94, 107, 0, 0, 0, 0, 1812, 3552, 3553,
	0, 3554, 3555, 3556, 0, 1493, 0, 1832, 0, 0,
	0, 3335, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 1493, 4487, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 700, 0, 0, 0,
	0, 0, 0, 0, 0, 3017, 0, 3336, 0, 0,
	0, 271, 0, 0, 3008, 0, 0, 0, 0, 0,
	700, 0, 0, 0, 0, 1863, 0, 271, 0, 700,
	0, 0, 1835, 1836, 1837, 1838, 0, 0, 0, 0,
	0, 271, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3742, 3743, 0, 0,
	0, 1851, 0, 0, 1861, 0, 0, 2732, 2732, 2732,
	2732, 1840, 1842, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 3336, 0, 0, 0, 0, 0, 0,
	271, 1339, 0, 0, 0, 716, 0, 1827, 1828, 2846,
	0, 0, 0, 0, 0, 271, 0, 0, 271, 0,
	0, 0, 271, 0, 271, 1849, 0, 0, 99, 1329,
	0, 271, 271, 0, 1339, 1339, 2862, 3331, 3332, 3333,
	1833, 271, 0, 0, 3330, 3328, 3329, 3321, 3322, 3323,
	3324, 3326, 3327, 0, 0, 0, 3806, 3807, 3808, 3809,
	3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819,
	3820, 3821, 3822, 3823, 3824, 3825, 0, 3829, 0, 0,
	0, 0, 0, 190, 102, 0, 0, 106, 2899, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1343, 1343, 271, 239, 1863, 0, 0, 0, 0, 0,
	0, 900, 0, 0, 0, 271, 153, 1343, 0, 0,
	0, 0, 0, 3331, 3332, 3333, 786, 0, 0, 0,
	3330, 3328, 3329, 3321, 3322, 3323, 3324, 3326, 3327, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1099, 0, 0, 0, 157, 0, 0,
	271, 3035, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 1536, 0, 1852,
	271, 0, 271, 233, 0, 0, 0, 0, 0, 271,
	0, 0, 234, 0, 0, 2727, 0, 0, 0, 3081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2899,
	1865, 700, 0, 3374, 0, 0, 0, 0, 0, 193,
	3110, 905, 0, 2899, 2899, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 271, 0, 3402, 0, 0, 0,
	0, 0, 0, 0, 2727, 0, 0, 0, 0, 0,
	0, 3415, 0, 271, 1329, 271, 0, 0, 1493, 0,
	0, 0, 1536, 0, 1536, 1339, 271, 0, 0, 1329,
	0, 1329, 1850, 1329, 0, 0, 0, 3436, 0, 0,
	0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 1810,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 271, 271, 271,
	1329, 0, 1841, 1329, 0, 271, 0, 0, 271, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1811, 0, 0, 0, 0, 1854, 1855, 1856, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 271,
	0, 0, 0, 1841, 1812, 0, 0, 271, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	1493, 1493, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 2727, 0, 0, 0,
	2732, 2732, 0, 0, 0, 0, 0, 0, 0, 4029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2727, 0, 1818,
	0, 0, 1493, 3319, 3320, 0, 3337, 3338, 3339, 0,
	0, 0, 0, 0, 3415, 0, 0, 0, 1493, 0,
	0, 0, 2727, 1536, 0, 3751, 0, 0, 0, 0,
	1835, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 0, 4086, 0, 0, 0, 1840, 1842,
	2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732,
	2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732, 2732,
	0, 2732, 0, 0, 0, 0, 0, 0, 3334, 1851,
	0, 0, 1861, 0, 0, 0, 0, 0, 1493, 1840,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 1408, 0, 271, 0, 0,
	0, 0, 0, 3325, 0, 1493, 0, 0, 0, 0,
	0, 1863, 0, 271, 0, 0, 0, 0, 700, 0,
	0, 0, 0, 700, 0, 0, 700, 0, 0, 700,
	700, 0, 0, 0, 0, 700, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 1493, 0,
	0, 0, 1863, 0, 0, 271, 0, 0, 1536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3341,
	0, 3763, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 1536, 0, 0, 0, 0, 0, 3779, 1834,
	0, 0, 0, 0, 271, 0, 0, 0, 271, 271,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 3335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 0, 0, 0, 2899, 2899, 271,
	1834, 2007, 0, 0, 0, 0, 0, 2899, 0, 0,
	2013, 0, 1493, 0, 0, 0, 0, 1865, 2899, 2013,
	0, 2899, 2013, 0, 0, 2013, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 271, 2007, 0, 271, 73, 0, 0, 0, 0,
	0, 0, 4295, 0, 0, 1863, 4381, 0, 1865, 0,
	0, 0, 74, 73, 2007, 4312, 271, 0, 3542, 3542,
	0, 0, 0, 1329, 1493, 0, 0, 0, 79, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 4333, 0,
	0, 0, 3872, 2899, 0, 2899, 79, 3568, 2899, 2007,
	0, 0, 2899, 2007, 0, 0, 786, 0, 0, 1814,
	1815, 1816, 1817, 1819, 1820, 4422, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 1329, 0, 3336, 0, 0, 88, 0, 271, 0,
	0, 0, 1536, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 271, 0, 3605, 899,
	0, 3607, 2899, 0, 0, 271, 0, 0, 0, 271,
	0, 49, 1339, 110, 0, 0, 0, 899, 94, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 110, 0, 0, 0, 3081, 94, 107, 1329, 0,
	271, 0, 0, 2899, 0, 700, 0, 0, 0, 0,
	0, 0, 2899, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 3081, 0, 0, 3081, 95, 0,
	0, 0, 0, 0, 0, 3319, 3320, 0, 3337, 3338,
	3339, 0, 0, 0, 1106, 1106, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3750, 0, 0,
	0, 0, 3712, 3331, 3332, 3333, 0, 0, 0, 0,
	3330, 3328, 3329, 3321, 3322, 3323, 3324, 3326, 3327, 0,
	0, 0, 3718, 0, 0, 1536, 0, 4569, 1329, 271,
	0, 271, 0, 0, 0, 0, 0, 1329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 4592, 0,
	0, 0, 0, 0, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4614, 0, 0, 0, 1847, 1841, 0,
	0, 0, 1106, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 2823, 1860, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3784, 0, 0, 0, 0,
	0, 1866, 0, 99, 0, 0, 1965, 0, 0, 0,
	1812, 0, 0, 0, 0, 3325, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 102, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 190, 102,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 900, 0,
	0, 3341, 0, 153, 0, 0, 0, 0, 239, 0,
	0, 0, 271, 271, 0, 0, 900, 0, 0, 0,
	0, 153, 0, 0, 0, 1835, 1836, 1837, 1838, 0,
	0, 0, 0, 0, 0, 1818, 700, 700, 241, 0,
	0, 0, 0, 3335, 0, 0, 0, 0, 0, 4634,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 4162,
	1536, 1536, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 4654, 1851, 1536, 1536, 1861, 1536, 194,
	0, 0, 157, 0, 1840, 1842, 0, 240, 4177, 0,
	2732, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	233, 1857, 0, 1858, 0, 240, 0, 0, 0, 234,
	1827, 1828, 0, 0, 0, 0, 0, 1863, 233, 0,
	0, 1091, 0, 0, 0, 0, 0, 234, 1849, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 1810, 1811, 0, 2732,
	786, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 3542, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 3336, 271, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 4743, 0, 0, 0,
	0, 1812, 4745, 0, 0, 0, 0, 1863, 2007, 0,
	271, 0, 0, 0, 716, 716, 1339, 0, 2575, 2576,
	2577, 2594, 2595, 2596, 0, 0, 0, 0, 1846, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 2597, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 271,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 2899, 271,
	0, 1408, 0, 0, 0, 1834, 0, 0, 3110, 3110,
	2587, 0, 0, 0, 905, 905, 2899, 0, 0, 2583,
	3081, 3081, 0, 0, 905, 2899, 1818, 0, 0, 0,
	0, 4373, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 2732, 0, 0, 0, 3331, 3332, 3333, 0, 0,
	0, 271, 3330, 3328, 3329, 3321, 3322, 3323, 3324, 3326,
	3327, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4373, 1840, 1842, 0, 0, 0,
	0, 0, 2732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2588, 2589, 2590, 2591, 0,
	2489, 0, 0, 0, 0, 2582, 0, 2732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4125, 0, 0, 0,
	0, 0, 1846, 0, 1833, 1850, 0, 0, 1846, 0,
	0, 0, 0, 0, 1846, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 0, 0, 0, 0, 0, 2489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2592, 2593, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 1536, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 271, 0, 2585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1339, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	1339, 1846, 0, 0, 0, 0, 0, 2899, 2899, 0,
	3542, 2899, 0, 0, 1846, 0, 0, 0, 4214, 1846,
	4214, 1536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2899, 0, 2013, 0, 0, 0, 1536, 1536,
	271, 2007, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 271, 2007, 0, 271,
	0, 3542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2899, 0, 2899, 271,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	1846, 893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1811, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2899, 0, 0, 0, 73, 4299,
	896, 895, 0, 0, 1841, 2586, 0, 0, 0, 0,
	271, 1813, 0, 0, 0, 74, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 1354, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 4214,
	0, 0, 1536, 0, 0, 0, 1832, 0, 0, 0,
	1091, 1091, 1091, 1865, 0, 1829, 0, 0, 0, 0,
	0, 88, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 0,
	0, 0, 899, 0, 1538, 0, 1544, 0, 1550, 0,
	3739, 1846, 0, 0, 49, 0, 110, 0, 0, 0,
	0, 94, 107, 0, 1846, 0, 0, 0, 0, 0,
	0, 1835, 1836, 1837, 1838, 2572, 2573, 2574, 2598, 2584,
	2578, 1818, 2580, 2581, 2579, 2566, 2567, 2568, 2569, 2570,
	2571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2899, 0, 2013, 0, 0, 4414, 0, 0, 0,
	2731, 0, 0, 0, 0, 271, 0, 1642, 0, 1647,
	0, 95, 0, 1846, 0, 4438, 0, 4438, 0, 1846,
	1840, 1842, 1660, 0, 1665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 786, 0, 0, 0, 0, 1827, 1828, 0, 0,
	0, 0, 3542, 0, 1329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2007,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1730, 0, 0, 1736, 4414, 0, 0, 0,
	0, 0, 0, 0, 2899, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4214, 4214, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 0, 271, 271, 0, 3319,
	3320, 0, 3337, 3338, 3339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3784, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 0,
	0, 0, 0, 0, 0, 0, 1536, 0, 1839, 1536,
	3542, 4586, 0, 190, 102, 0, 0, 106, 4414, 0,
	0, 0, 0, 0, 1887, 0, 0, 0, 0, 0,
	1900, 1834, 1810, 1811, 0, 0, 0, 0, 4214, 0,
	0, 0, 0, 239, 3334, 0, 0, 0, 0, 0,
	0, 900, 0, 4214, 0, 1841, 153, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 1866, 1865,
	0, 241, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 1176, 0, 0, 4299, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 157, 0, 0,
	4214, 0, 271, 4214, 0, 0, 0, 0, 0, 0,
	73, 0, 194, 2013, 0, 1959, 1959, 1959, 0, 3325,
	240, 0, 0, 0, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 1536,
	0, 1536, 234, 79, 0, 0, 0, 0, 0, 0,
	0, 3234, 0, 0, 0, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 894,
	0, 0, 1835, 1836, 1837, 1838, 0, 4698, 0, 0,
	0, 0, 1818, 88, 0, 3341, 0, 0, 0, 0,
	0, 0, 0, 4438, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	0, 0, 1536, 0, 0, 0, 0, 0, 0, 0,
	0, 2899, 0, 0, 899, 0, 0, 3335, 0, 0,
	0, 1840, 1842, 0, 0, 1846, 49, 0, 110, 0,
	0, 0, 271, 94, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	1846, 0, 0, 0, 0, 1091, 0, 0, 0, 3784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	1833, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 1863, 1846, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 271,
	0, 0, 0, 1267, 0, 1846, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
	1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
	1846, 4414, 0, 0, 1863, 0, 1846, 0, 1846, 1846,
	1846, 1846, 0, 0, 0, 0, 0, 0, 0, 3336,
	2731, 2731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 799, 0, 0,
	0, 2899, 0, 0, 0, 0, 0, 0, 4214, 0,
	4214, 0, 0, 1536, 0, 0, 0, 0, 0, 1839,
	0, 0, 810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 1846, 0, 0, 0,
	99, 0, 0, 1536, 0, 0, 0, 0, 0, 1536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 1846,
	0, 0, 1846, 0, 0, 1846, 0, 0, 0, 0,
	0, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 0, 3110,
	1865, 0, 0, 0, 0, 190, 102, 0, 2899, 106,
	0, 0, 0, 0, 0, 804, 0, 0, 0, 3331,
	3332, 3333, 816, 0, 3110, 0, 3330, 3328, 3329, 3321,
	3322, 3323, 3324, 3326, 3327, 239, 809, 0, 0, 0,
	0, 0, 0, 900, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	3340, 0, 2731, 2731, 2731, 2731, 0, 0, 0, 1846,
	0, 1846, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 241, 0, 808, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	0, 0, 761, 0, 0, 0, 2401, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 806, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 2426, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2464, 0, 2468, 0, 0,
	0, 1636, 0, 0, 2482, 0, 815, 0, 0, 0,
	0, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 0, 2532, 0,
	2534, 2535, 2536, 2537, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2561, 0, 0, 0,
	0, 801, 0, 0, 0, 0, 0, 0, 1887, 0,
	0, 0, 2612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 1811, 0, 0, 0, 2642, 2645,
	2648, 2651, 805, 0, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 0, 0, 73, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	74, 0, 2723, 0, 2735, 2737, 2742, 0, 0, 760,
	0, 0, 0, 0, 0, 0, 79, 1267, 0, 1866,
	0, 0, 0, 0, 811, 0, 0, 0, 1812, 0,
	803, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 1846, 1846, 0, 1846, 88, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 1267, 0, 0, 800, 0, 0,
	0, 0, 0, 2702, 2703, 2704, 2705, 2698, 2699, 2700,
	2701, 0, 0, 0, 0, 0, 0, 899, 0, 0,
	0, 0, 3227, 0, 0, 807, 0, 0, 0, 49,
	1267, 110, 0, 0, 0, 0, 94, 107, 0, 762,
	0, 0, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	802, 0, 0, 1818, 0, 0, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 813, 814, 0, 1267, 0, 0, 0,
	0, 0, 0, 1267, 0, 2678, 2679, 2680, 2681, 0,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 1267,
	0, 0, 1840, 1842, 0, 0, 0, 1846, 2690, 2691,
	2692, 2693, 2686, 2687, 2688, 2689, 2694, 2695, 2696, 2697,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1267, 0, 0,
	0, 1833, 1846, 1846, 0, 2731, 2731, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3340,
	3340, 0, 0, 1846, 1846, 2674, 2675, 2676, 2677, 2682,
	2683, 2684, 2685, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 3038,
	3039, 0, 3041, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2731, 2731, 2731, 2731, 2731,
	2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731,
	2731, 2731, 2731, 2731, 2731, 0, 2731, 3340, 3340, 3340,
	3340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 190, 102,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 900, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855,
	1856, 1865, 0, 0, 0, 0, 241, 0, 0, 0,
	3173, 0, 0, 0, 1847, 1841, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 1866, 0,
	0, 0, 0, 0, 0, 240, 0, 1812, 0, 0,
	0, 0, 0, 1267, 1846, 1267, 0, 1832, 233, 0,
	0, 0, 0, 0, 0, 0, 1829, 234, 1867, 1868,
	1267, 0, 0, 0, 0, 0, 0, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	2044, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3228, 3229, 0, 0, 0, 0,
	3235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 1836, 1837, 1838, 0, 0, 0, 3249,
	3250, 0, 1818, 0, 0, 2612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 1861, 0, 0, 0, 1267, 0,
	3259, 1840, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3273, 0, 1857, 0,
	1858, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	0, 0, 0, 3285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 1846, 0, 0, 1846, 3340, 3340, 1846, 0,
	0, 0, 1846, 0, 0, 1859, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 1848, 0, 0, 0, 0, 0, 1267,
	1267, 0, 0, 0, 1863, 2742, 2742, 2742, 0, 1267,
	0, 0, 0, 0, 0, 1846, 1846, 1846, 1846, 1846,
	1959, 0, 0, 0, 0, 1846, 0, 1846, 3378, 0,
	3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340,
	3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340,
	0, 0, 0, 3340, 0, 0, 1846, 1846, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 1267, 1852,
	1267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 1846, 1267, 1267,
	0, 0, 0, 0, 1091, 0, 0, 0, 1846, 0,
	1865, 1267, 0, 0, 0, 729, 0, 0, 1091, 0,
	730, 0, 0, 1267, 0, 1267, 1267, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3500, 0, 0, 0, 0, 0, 0, 0, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 733, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	0, 0, 4133, 752, 0, 0, 4132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 2044, 2044, 1267, 0, 0, 735, 1810, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 1841, 0, 737, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 1846, 0,
	761, 0, 1846, 1846, 0, 0, 1846, 1846, 0, 0,
	0, 1846, 0, 0, 1866, 1846, 0, 0, 0, 0,
	1846, 0, 0, 1812, 0, 751, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 2731, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 270, 270, 0, 0,
	1267, 0, 0, 0, 0, 0, 0, 1267, 1835, 1836,
	1837, 1838, 0, 0, 0, 0, 1267, 0, 1818, 0,
	0, 0, 0, 0, 829, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 758, 0, 739, 2482, 0, 0,
	0, 0, 829, 3737, 3738, 0, 0, 3741, 0, 0,
	0, 3744, 0, 0, 0, 0, 0, 1840, 1842, 0,
	3748, 0, 0, 0, 0, 759, 0, 740, 0, 3755,
	0, 0, 0, 0, 3378, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 0, 3768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 0, 3791,
	3792, 0, 3793, 3794, 3795, 741, 1833, 0, 0, 0,
	756, 757, 754, 0, 0, 0, 1267, 1267, 749, 0,
	3801, 742, 0, 0, 3803, 0, 0, 0, 0, 0,
	0, 0, 1846, 1846, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 1846, 3340, 2731, 0, 0, 0,
	0, 0, 1846, 0, 0, 1846, 0, 3832, 3833, 0,
	1267, 0, 0, 743, 0, 750, 0, 0, 0, 0,
	0, 1263, 0, 0, 744, 3844, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 3340, 2731, 745, 0,
	3853, 0, 0, 753, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 762, 0, 0,
	0, 1846, 2731, 0, 0, 0, 0, 0, 747, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 1839, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3903, 0, 0, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3914,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	730, 0, 0, 1267, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 3943, 0, 0, 0, 1847, 1841, 0,
	0, 0, 0, 3340, 1267, 1813, 0, 0, 0, 731,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 1267,
	732, 1267, 0, 0, 0, 1846, 3340, 0, 0, 1846,
	0, 1866, 0, 0, 0, 0, 0, 1267, 0, 0,
	1812, 733, 0, 0, 0, 0, 0, 0, 3340, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 752, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 734, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	736, 0, 0, 737, 4053, 1835, 1836, 1837, 1838, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 751, 0, 0, 0, 0,
	0, 0, 0, 849, 1851, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 0, 0, 0,
	0, 0, 0, 851, 0, 0, 0, 1846, 852, 0,
	0, 1857, 0, 1858, 0, 0, 4103, 4104, 0, 0,
	1827, 1828, 4108, 4109, 0, 0, 0, 4112, 4113, 0,
	1846, 0, 0, 0, 748, 4117, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 4121, 853, 0, 870,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 4126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 879, 0, 0, 0, 0, 739, 0, 856, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 877, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 759, 0, 740, 0, 0,
	0, 0, 0, 0, 0, 850, 0, 270, 0, 270,
	270, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 857, 1846,
	0, 858, 0, 0, 0, 0, 0, 760, 0, 0,
	0, 0, 1839, 881, 0, 741, 0, 0, 761, 0,
	756, 757, 754, 0, 0, 0, 0, 0, 749, 0,
	270, 742, 270, 270, 0, 1834, 270, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 829, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 1267, 1267, 0, 0,
	0, 0, 0, 743, 0, 750, 0, 0, 0, 0,
	0, 0, 1267, 0, 744, 0, 0, 0, 0, 0,
	0, 0, 880, 1865, 0, 0, 0, 0, 745, 0,
	1267, 0, 875, 753, 0, 0, 270, 270, 1256, 0,
	0, 0, 1267, 0, 0, 1267, 0, 762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	0, 0, 270, 270, 0, 0, 0, 2044, 0, 0,
	0, 1267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 266, 696, 1267, 0, 0,
	0, 0, 0, 859, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 861, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 0, 0, 3294, 0, 0, 0, 3295,
	0, 0, 0, 1267, 0, 862, 0, 0, 2044, 0,
	0, 0, 4368, 4369, 4370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 871, 0, 2482, 0, 270, 4379, 4380,
	0, 0, 1267, 0, 0, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4388, 4391, 848, 270,
	872, 0, 0, 0, 1267, 0, 1267, 0, 0, 863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 0, 0, 869, 0, 0, 0, 0, 1267,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 864, 0, 0, 0, 865, 884, 0, 883, 0,
	4439, 0, 866, 0, 0, 0, 0, 0, 1267, 4447,
	0, 0, 0, 0, 0, 0, 867, 0, 0, 0,
	0, 876, 1267, 4455, 1267, 0, 1091, 885, 1267, 882,
	0, 0, 0, 0, 0, 762, 1267, 0, 0, 0,
	4464, 0, 0, 0, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1267, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 1263, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 0, 1267,
	0, 0, 0, 270, 1981, 270, 0, 0, 0, 0,
	0, 0, 829, 0, 0, 0, 0, 0, 0, 829,
	0, 0, 0, 0, 0, 0, 0, 0, 4591, 0,
	0, 0, 4595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 2044, 0, 0, 0, 0, 0, 1091,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 4652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 2482, 0, 0, 0, 0, 0, 0,
	0, 0, 4391, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1267, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4773, 4773, 4773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 270,
	4796, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 270,
	0, 0, 0, 0, 0, 270, 1315, 0, 1315, 1315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 1267, 0,
	270, 0, 0, 270, 0, 0, 0, 0, 0, 1405,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 2044, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 829, 270, 0,
	270, 0, 270, 0, 270, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	1267, 1267, 1153, 0, 0, 0, 0, 0, 270, 270,
	270, 270, 0, 0, 0, 0, 1267, 1267, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4773, 4931,
	0, 1640, 1641, 0, 0, 0, 1267, 4935, 0, 0,
	0, 0, 1267, 1129, 112, 0, 0, 0, 272, 272,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 0, 0,
	1267, 1267, 0, 1267, 0, 0, 0, 0, 0, 0,
	1267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 1267, 0, 0, 0, 0, 0, 1263, 0,
	0, 0, 1267, 0, 0, 0, 1066, 0, 0, 0,
	0, 0, 0, 0, 1263, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1267, 270, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 1267, 1250, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 270, 1267, 1267, 0, 270,
	0, 270, 0, 0, 0, 0, 0, 0, 270, 270,
	0, 0, 0, 0, 0, 0, 1267, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1997, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 2008, 0, 1510, 0, 0, 0, 0, 0,
	1267, 1267, 1267, 1267, 1267, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 1315, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	1267, 0, 0, 0, 0, 0, 0, 829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 829,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 1267,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 1267,
	1267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1267, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 1267, 0, 0, 0,
	0, 0, 0, 270, 270, 270, 270, 0, 0, 0,
	0, 0, 270, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2281, 2044, 0, 0, 2288, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	2301, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2313, 0, 2313, 0,
	272, 0, 272, 272, 2320, 0, 272, 0, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2288,
	0, 112, 2349, 272, 1352, 272, 272, 0, 1352, 272,
	272, 0, 0, 0, 0, 1352, 0, 0, 0, 0,
	0, 0, 0, 2369, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 2385, 0, 2387,
	0, 2389, 0, 2391, 0, 2392, 0, 0, 0, 1267,
	0, 1352, 1267, 0, 0, 0, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1267, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 272,
	272, 0, 112, 1267, 112, 0, 112, 2419, 2420, 2421,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	0, 0, 0, 0, 1352, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1086, 112,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 112, 0, 0, 0, 0, 0, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1263, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 270, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2799, 0, 0,
	0, 0, 1066, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 0, 0, 0, 1267, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1886, 0, 0, 0, 1892, 0, 270, 270, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 2848, 0, 0, 1315, 0, 0, 0, 1315, 0,
	1315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 1841, 0, 0, 270, 272, 272, 272, 1813,
	0, 0, 0, 0, 0, 272, 0, 0, 1860, 0,
	0, 0, 272, 829, 0, 1979, 0, 1982, 0, 112,
	0, 0, 270, 0, 0, 1866, 270, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 1832, 0, 272, 270, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 1263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 2288, 0, 0, 1818,
	0, 0, 0, 0, 0, 2301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	3143, 0, 0, 0, 0, 1857, 0, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 3154,
	0, 3157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 272, 0,
	1352, 1352, 272, 0, 0, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3189, 1510, 3191, 1510, 0, 0, 0, 0,
	0, 3197, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 272, 0,
	0, 1863, 0, 0, 272, 1315, 0, 0, 0, 0,
	0, 0, 0, 3225, 0, 0, 0, 0, 0, 0,
	272, 0, 272, 0, 0, 0, 0, 0, 272, 1263,
	1263, 0, 0, 0, 0, 0, 0, 1352, 0, 1352,
	0, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 1839, 0, 0, 1352,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1352, 272, 0, 0, 272, 0, 1086, 1834,
	1086, 0, 0, 0, 1352, 0, 1352, 1352, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	272, 272, 0, 272, 0, 272, 0, 272, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	821, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 821, 0,
	0, 272, 272, 272, 272, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 270, 0, 1352, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 1066, 0, 0, 1066,
	1066, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2550, 1263, 0, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1886, 0, 0, 0, 1886,
	0, 3425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1352, 0,
	1315, 0, 0, 0, 1510, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 1250, 0, 0, 3470, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3519, 3521, 0, 0,
	2301, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 272, 0,
	0, 0, 272, 0, 272, 0, 1263, 0, 0, 0,
	0, 272, 272, 0, 1263, 0, 0, 1352, 1352, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 1981, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3618, 272, 0, 0, 3622, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 0, 0, 0, 0, 3675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	272, 0, 272, 0, 1352, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 112, 0, 0, 112, 0,
	112, 0, 0, 0, 0, 3722, 1981, 1510, 0, 0,
	0, 0, 0, 0, 0, 1352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3735, 272, 0, 112, 0, 1352, 112,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 272, 272, 272,
	0, 0, 112, 0, 0, 272, 0, 0, 272, 0,
	0, 0, 270, 0, 0, 0, 0, 1411, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 2550, 1145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 1981, 0, 1886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2301, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1352, 0,
	2301, 0, 0, 0, 0, 4035, 0, 1981, 0, 270,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 0, 0, 0, 0, 0, 0, 1250, 0,
	0, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 1250, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1352, 0, 0, 0, 0, 4088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1352, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 272, 272,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	272, 272, 0, 1352, 272, 0, 0, 0, 821, 0,
	0, 272, 0, 0, 0, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1352, 272, 1352, 0, 0,
	0, 0, 112, 112, 0, 112, 112, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	1352, 0, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 112, 0, 112, 112, 112, 1352,
	0, 0, 0, 0, 0, 1350, 0, 0, 272, 0,
	0, 0, 0, 1352, 0, 1352, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 272, 1352, 0, 0,
	0, 0, 1411, 0, 0, 272, 0, 0, 1352, 272,
	0, 0, 0, 0, 0, 0, 4233, 0, 0, 0,
	0, 0, 0, 1352, 0, 1981, 0, 1981, 0, 0,
	272, 0, 2301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1352, 1352, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 1250, 0, 0, 1086, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 112, 112,
	0, 0, 0, 0, 0, 0, 2301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 1350, 0, 0, 1352, 0, 272,
	1352, 272, 0, 1411, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 1841, 0,
	0, 0, 0, 0, 0, 1813, 0, 272, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	1350, 0, 1350, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 4424, 1351, 0, 0, 0, 0, 1350, 0, 1350,
	1350, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 1836, 1837, 1838, 0,
	0, 0, 0, 821, 0, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 2301, 0, 0,
	0, 0, 0, 0, 1851, 112, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 1352, 0, 0,
	0, 0, 0, 1250, 1250, 1351, 0, 0, 0, 0,
	0, 1857, 0, 1858, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 1351, 0, 1833, 0, 0, 0, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4559, 1510, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 0, 0, 0, 0, 1352,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 272,
	0, 1411, 0, 0, 272, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 1352, 0, 0, 4657, 0,
	0, 0, 1852, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 1352, 1352, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 1352, 1352, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	0, 272, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 4711, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	1350, 1350, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 0, 0, 2608, 0, 0, 4750, 2609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 1352, 0, 1352, 4816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 1352, 1352, 112, 0, 0, 0, 0, 0,
	1250, 0, 0, 1352, 0, 0, 0, 1350, 1250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 1352, 0, 821, 1351, 1350, 0, 0,
	0, 0, 0, 1352, 0, 1352, 272, 0, 1352, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 1412, 0, 0, 0, 0, 1350, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1352, 1352, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	272, 0, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 1352, 1352, 1352, 1352, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 1351, 1351, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 1841, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 1352,
	0, 1352, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 1352, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	1832, 1351, 0, 1351, 0, 1351, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	1351, 1351, 1351, 1352, 0, 0, 0, 0, 0, 0,
	1352, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 1836, 1837, 1838, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1352, 0, 0, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 272, 0, 0,
	0, 1857, 0, 1858, 0, 0, 0, 0, 0, 2550,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 1848, 0, 0, 0,
	0, 0, 1412, 0, 0, 1411, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 1352, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 1352, 1352, 0,
	0, 0, 1839, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 1412, 0, 1352, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	1350, 0, 0, 0, 1810, 1811, 272, 1843, 1844, 1845,
	1854, 1855, 1856, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 1847, 1841, 0, 0,
	0, 0, 0, 1350, 1813, 0, 0, 1350, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 1350, 0, 0, 0, 0, 0, 0, 1812,
	0, 1351, 1351, 0, 0, 0, 1350, 0, 1350, 1832,
	0, 112, 1411, 0, 0, 1850, 0, 112, 1829, 821,
	1350, 0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 1350, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 0, 0, 1412, 1350, 0, 0, 4131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 1350,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 0, 0, 1851, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 0, 0, 0, 0,
	1411, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	1857, 0, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 1810,
	1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 1351,
	0, 1847, 1841, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 1351, 0, 1351, 0, 1860, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 0, 1866, 1411, 1859, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 1848, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 1834, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 1859, 0, 0, 0, 0, 0, 3753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 1350, 1350, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 1852, 0, 0, 0,
	1350, 1350, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 1412, 1411, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 0, 1351, 0,
	0, 0, 0, 3297, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 1841, 0, 1351, 0, 0,
	0, 0, 1813, 0, 1411, 1411, 0, 1411, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 1351, 0, 0, 0, 1350, 1350, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 1411, 1812, 0, 0,
	0, 0, 0, 1412, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 1351, 0, 1829, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 1351, 1350, 1351,
	0, 1350, 0, 1412, 0, 0, 0, 0, 0, 0,
	0, 1351, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 1836, 1837, 1838, 0, 1351, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	1350, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	1351, 1851, 1411, 0, 1861, 0, 0, 1350, 0, 0,
	0, 1840, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 0, 0, 0, 1857, 0,
	1858, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	0, 0, 0, 0, 1350, 1350, 1350, 1350, 1350, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1412, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 1841, 0, 1859, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 1411, 1848, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 1866, 0, 0, 0,
	1412, 0, 0, 0, 0, 1812, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 1832, 0, 1412, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 1350, 0, 0, 0, 0, 1852,
	1835, 1836, 1837, 1838, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 1412, 1861, 0, 0, 0, 0, 0, 0, 1840,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 1858, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 1833, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 3296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	1350, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 1810, 1811,
	1834, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 1841, 0, 0, 0, 0, 0, 1852, 1813, 0,
	0, 0, 0, 0, 1351, 1351, 1351, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 1351, 1351, 1866, 0, 0, 0, 1865, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 1832, 0, 0, 0, 1412, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 1835, 1836,
	1837, 1838, 0, 0, 3293, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	0, 0, 0, 0, 0, 1412, 1412, 0, 1412, 0,
	0, 0, 0, 0, 1857, 0, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 1351, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 969, 0, 1018, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 977, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 1351,
	0, 1859, 1351, 0, 992, 0, 975, 974, 0, 0,
	0, 0, 0, 1412, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 994, 0,
	1863, 0, 0, 0, 976, 0, 0, 0, 0, 979,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1351, 1351, 989, 990, 0, 0, 0, 0, 0,
	0, 0, 1007, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	1019, 981, 0, 1412, 0, 1839, 0, 982, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 983,
	0, 0, 0, 0, 0, 0, 0, 0, 1016, 0,
	0, 0, 0, 0, 0, 1351, 1351, 1351, 1351, 1351,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 985, 1865, 0, 0, 0,
	1412, 0, 0, 973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 986, 987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 995, 993, 1412, 0, 1351, 0, 0, 0, 988,
	0, 0, 0, 1004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 1412,
	0, 1024, 1015, 0, 0, 0, 0, 0, 1824, 1825,
	1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 3292, 1020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 0, 0, 0, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 1351, 0, 980, 0, 0,
	1026, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 978, 0, 0, 0, 1011, 1012, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 1014, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1021, 1009, 0, 0, 0, 0,
	0, 0, 0, 1025, 1005, 0, 0, 998, 996, 0,
	1001, 0, 0, 0, 0, 0, 1002, 0, 0, 971,
	0, 1022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1013, 0, 1003, 0, 0,
	0, 0, 0, 1000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1023, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 0,
	0, 984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 1351, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 1414, 287, 288, 1415, 1416, 1417, 1351, 1418,
	642, 1419, 1420, 1421, 1422, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 1423, 647, 299, 300, 301, 302, 303, 304, 1424,
	1425, 0, 305, 648, 649, 650, 1426, 306, 307, 651,
	1427, 1353, 1428, 308, 309, 310, 311, 312, 313, 314,
	0, 1429, 316, 317, 318, 315, 319, 1430, 320, 0,
	321, 322, 323, 324, 325, 326, 1431, 327, 328, 329,
	1208, 330, 331, 332, 1432, 1433, 1435, 1434, 1436, 1437,
	1438, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 1439, 343, 339, 341, 1440, 344, 342, 345, 1441,
	346, 347, 348, 1442, 1443, 349, 350, 351, 1444, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 1447, 277, 1448, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 1449, 375, 376,
	377, 1450, 1451, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1452, 390,
	660, 1453, 661, 391, 1454, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 1455, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1456, 1210, 407, 665, 666, 1457, 667, 1458, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1459, 421,
	423, 422, 1460, 424, 669, 1215, 425, 426, 1216, 1461,
	427, 428, 429, 430, 431, 432, 435, 1462, 1463, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1464, 279, 1219, 477,
	478, 1465, 670, 479, 671, 481, 482, 1466, 0, 483,
	0, 1467, 1468, 485, 486, 487, 1469, 1470, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 1471, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 1472, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	1473, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 1474, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 1475, 567,
	568, 566, 569, 570, 571, 1476, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 1477, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	1478, 599, 600, 0, 596, 587, 1479, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 1480, 609, 683, 684,
	685, 686, 1481, 618, 1482, 610, 611, 612, 687, 613,
	688, 1483, 614, 615, 616, 617, 0, 619, 620, 1484,
	1485, 621, 622, 623, 625, 626, 624, 627, 1486, 628,
	1487, 0, 629, 630, 631, 689, 690, 691, 1488, 633,
	632, 634, 692, 635, 636, 1489, 1490, 1491, 1492, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 2777, 0, 0, 0, 0, 0, 0, 0,
	2778, 280, 282, 281, 283, 284, 285, 286, 1414, 287,
	288, 1415, 1416, 1417, 0, 1418, 642, 1419, 1420, 1421,
	1422, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 1423, 647, 299,
	300, 301, 302, 303, 304, 1424, 1425, 0, 305, 648,
	649, 650, 1426, 306, 307, 651, 1427, 1353, 1428, 308,
	309, 310, 311, 312, 313, 314, 0, 1429, 316, 317,
	318, 315, 319, 1430, 320, 0, 321, 322, 323, 324,
	325, 326, 1431, 327, 328, 329, 1208, 330, 331, 332,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 1439, 343, 339,
	341, 1440, 344, 342, 345, 1441, 346, 347, 348, 1442,
	1443, 349, 350, 351, 1444, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 1447, 277,
	1448, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1209,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 660, 1453, 661, 391,
	1454, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	1211, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1456, 1210, 407,
	665, 666, 1457, 667, 1458, 409, 410, 1212, 668, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1459, 421, 423, 422, 1460, 424,
	669, 1215, 425, 426, 1216, 1461, 427, 428, 429, 430,
	431, 432, 435, 1462, 1463, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1464, 279, 1219, 477, 478, 1465, 670, 479,
	671, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 672, 1220, 490, 1221,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 1474,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 1475, 567, 568, 566, 569, 570,
	571, 1476, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 1477,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 1478, 599, 600, 0,
	596, 587, 1479, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 1480, 609, 683, 684, 685, 686, 1481, 618,
	1482, 610, 611, 612, 687, 613, 688, 1483, 614, 615,
	616, 617, 0, 619, 620, 1484, 1485, 621, 622, 623,
	625, 626, 624, 627, 1486, 628, 1487, 0, 629, 630,
	631, 689, 690, 691, 1488, 633, 632, 634, 692, 635,
	636, 1489, 1490, 1491, 1492, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 0, 0, 3762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3764, 280, 282, 281, 283, 284,
	285, 286, 1414, 287, 288, 1415, 1416, 1417, 0, 1418,
	642, 1419, 1420, 1421, 1422, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 1423, 647, 299, 300, 301, 302, 303, 304, 1424,
	1425, 0, 305, 648, 649, 650, 1426, 306, 307, 651,
	1427, 1353, 1428, 308, 309, 310, 311, 312, 313, 314,
	0, 1429, 316, 317, 318, 315, 319, 1430, 320, 0,
	321, 322, 323, 324, 325, 326, 1431, 327, 328, 329,
	1208, 330, 331, 332, 1432, 1433, 1435, 1434, 1436, 1437,
	1438, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 1439, 343, 339, 341, 1440, 344, 342, 345, 1441,
	346, 347, 348, 1442, 1443, 349, 350, 351, 1444, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 1447, 277, 1448, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 1449, 375, 376,
	377, 1450, 1451, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1452, 390,
	660, 1453, 661, 391, 1454, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 1455, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1456, 1210, 407, 665, 666, 1457, 667, 1458, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1459, 421,
	423, 422, 1460, 424, 669, 1215, 425, 426, 1216, 1461,
	427, 428, 429, 430, 431, 432, 435, 1462, 1463, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1464, 279, 1219, 477,
	478, 1465, 670, 479, 671, 481, 482, 1466, 0, 483,
	0, 1467, 1468, 485, 486, 487, 1469, 1470, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 1471, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 1472, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	1473, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 1474, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 1475, 567,
	568, 566, 569, 570, 571, 1476, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 1477, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	1478, 599, 600, 0, 596, 587, 1479, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 1480, 609, 683, 684,
	685, 686, 1481, 618, 1482, 610, 611, 612, 687, 613,
	688, 1483, 614, 615, 616, 617, 0, 619, 620, 1484,
	1485, 621, 622, 623, 625, 626, 624, 627, 1486, 628,
	1487, 0, 629, 630, 631, 689, 690, 691, 1488, 633,
	632, 634, 692, 635, 636, 1489, 1490, 1491, 1492, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4161, 280, 282, 281, 283, 284, 285, 286,
	1414, 287, 288, 1415, 1416, 1417, 0, 1418, 642, 1419,
	1420, 1421, 1422, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 1423,
	647, 299, 300, 301, 302, 303, 304, 1424, 1425, 0,
	305, 648, 649, 650, 1426, 306, 307, 651, 1427, 1353,
	1428, 308, 309, 310, 311, 312, 313, 314, 0, 1429,
	316, 317, 318, 315, 319, 1430, 320, 0, 321, 322,
	323, 324, 325, 326, 1431, 327, 328, 329, 1208, 330,
	331, 332, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 1439,
	343, 339, 341, 1440, 344, 342, 345, 1441, 346, 347,
	348, 1442, 1443, 349, 350, 351, 1444, 352, 353, 1445,
	354, 355, 356, 1446, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	1447, 277, 1448, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 1449, 375, 376, 377, 1450,
	1451, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1452, 390, 660, 1453,
	661, 391, 1454, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 1211, 397, 398, 1455, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1456,
	1210, 407, 665, 666, 1457, 667, 1458, 409, 410, 1212,
	668, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1459, 421, 423, 422,
	1460, 424, 669, 1215, 425, 426, 1216, 1461, 427, 428,
	429, 430, 431, 432, 435, 1462, 1463, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1464, 279, 1219, 477, 478, 1465,
	670, 479, 671, 481, 482, 1466, 0, 483, 0, 1467,
	1468, 485, 486, 487, 1469, 1470, 488, 489, 672, 1220,
	490, 1221, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 1471, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 1472, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 1473, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 1474, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 1475, 567, 568, 566,
	569, 570, 571, 1476, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 1477, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 1478, 599,
	600, 0, 596, 587, 1479, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 1480, 609, 683, 684, 685, 686,
	1481, 618, 1482, 610, 611, 612, 687, 613, 688, 1483,
	614, 615, 616, 617, 0, 619, 620, 1484, 1485, 621,
	622, 623, 625, 626, 624, 627, 1486, 628, 1487, 0,
	629, 630, 631, 689, 690, 691, 1488, 633, 632, 634,
	692, 635, 636, 1489, 1490, 1491, 1492, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4159, 280, 282, 281, 283, 284, 285, 286, 1414, 287,
	288, 1415, 1416, 1417, 0, 1418, 642, 1419, 1420, 1421,
	1422, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 1423, 647, 299,
	300, 301, 302, 303, 304, 1424, 1425, 0, 305, 648,
	649, 650, 1426, 306, 307, 651, 1427, 1353, 1428, 308,
	309, 310, 311, 312, 313, 314, 0, 1429, 316, 317,
	318, 315, 319, 1430, 320, 0, 321, 322, 323, 324,
	325, 326, 1431, 327, 328, 329, 1208, 330, 331, 332,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 1439, 343, 339,
	341, 1440, 344, 342, 345, 1441, 346, 347, 348, 1442,
	1443, 349, 350, 351, 1444, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 1447, 277,
	1448, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1209,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 660, 1453, 661, 391,
	1454, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	1211, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1456, 1210, 407,
	665, 666, 1457, 667, 1458, 409, 410, 1212, 668, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1459, 421, 423, 422, 1460, 424,
	669, 1215, 425, 426, 1216, 1461, 427, 428, 429, 430,
	431, 432, 435, 1462, 1463, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1464, 279, 1219, 477, 478, 1465, 670, 479,
	671, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 672, 1220, 490, 1221,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 1474,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 1475, 567, 568, 566, 569, 570,
	571, 1476, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 1477,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 1478, 599, 600, 0,
	596, 587, 1479, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 1480, 609, 683, 684, 685, 686, 1481, 618,
	1482, 610, 611, 612, 687, 613, 688, 1483, 614, 615,
	616, 617, 0, 619, 620, 1484, 1485, 621, 622, 623,
	625, 626, 624, 627, 1486, 628, 1487, 0, 629, 630,
	631, 689, 690, 691, 1488, 633, 632, 634, 692, 635,
	636, 1489, 1490, 1491, 1492, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4374, 280, 282, 281, 283, 284, 285,
	286, 1414, 287, 288, 1415, 1416, 1417, 0, 1418, 642,
	1419, 1420, 1421, 1422, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	1423, 647, 299, 300, 301, 302, 303, 304, 1424, 1425,
	0, 305, 648, 649, 650, 1426, 306, 307, 651, 1427,
	1353, 1428, 308, 309, 310, 311, 312, 313, 314, 0,
	1429, 316, 317, 318, 315, 319, 1430, 320, 0, 321,
	322, 323, 324, 325, 326, 1431, 327, 328, 329, 1208,
	330, 331, 332, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	1439, 343, 339, 341, 1440, 344, 342, 345, 1441, 346,
	347, 348, 1442, 1443, 349, 350, 351, 1444, 352, 353,
	1445, 354, 355, 356, 1446, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 1447, 277, 1448, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 1449, 375, 376, 377,
	1450, 1451, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1452, 390, 660,
	1453, 661, 391, 1454, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 1211, 397, 398, 1455, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1456, 1210, 407, 665, 666, 1457, 667, 1458, 409, 410,
	1212, 668, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1459, 421, 423,
	422, 1460, 424, 669, 1215, 425, 426, 1216, 1461, 427,
	428, 429, 430, 431, 432, 435, 1462, 1463, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1464, 279, 1219, 477, 478,
	1465, 670, 479, 671, 481, 482, 1466, 0, 483, 0,
	1467, 1468, 485, 486, 487, 1469, 1470, 488, 489, 672,
	1220, 490, 1221, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 1471, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 1472, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 1473,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 1474, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 1475, 567, 568,
	566, 569, 570, 571, 1476, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 1477, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 1478,
	599, 600, 0, 596, 587, 1479, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 1480, 609, 683, 684, 685,
	686, 1481, 618, 1482, 610, 611, 612, 687, 613, 688,
	1483, 614, 615, 616, 617, 0, 619, 620, 1484, 1485,
	621, 622, 623, 625, 626, 624, 627, 1486, 628, 1487,
	0, 629, 630, 631, 689, 690, 691, 1488, 633, 632,
	634, 692, 635, 636, 1489, 1490, 1491, 1492, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4242, 280, 282, 281,
	283, 284, 285, 286, 1414, 287, 288, 1415, 1416, 1417,
	0, 1418, 642, 1419, 1420, 1421, 1422, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 1423, 647, 299, 300, 301, 302, 303,
	304, 1424, 1425, 0, 305, 648, 649, 650, 1426, 306,
	307, 651, 1427, 1353, 1428, 308, 309, 310, 311, 312,
	313, 314, 0, 1429, 316, 317, 318, 315, 319, 1430,
	320, 0, 321, 322, 323, 324, 325, 326, 1431, 327,
	328, 329, 1208, 330, 331, 332, 1432, 1433, 1435, 1434,
	1436, 1437, 1438, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 1439, 343, 339, 341, 1440, 344, 342,
	345, 1441, 346, 347, 348, 1442, 1443, 349, 350, 351,
	1444, 352, 353, 1445, 354, 355, 356, 1446, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 1447, 277, 1448, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 1449,
	375, 376, 377, 1450, 1451, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1452, 390, 660, 1453, 661, 391, 1454, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 1211, 397, 398, 1455,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1456, 1210, 407, 665, 666, 1457, 667,
	1458, 409, 410, 1212, 668, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1459, 421, 423, 422, 1460, 424, 669, 1215, 425, 426,
	1216, 1461, 427, 428, 429, 430, 431, 432, 435, 1462,
	1463, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1464, 279,
	1219, 477, 478, 1465, 670, 479, 671, 481, 482, 1466,
	0, 483, 0, 1467, 1468, 485, 486, 487, 1469, 1470,
	488, 489, 672, 1220, 490, 1221, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 1471,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 1472, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 1473, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 1474, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	1475, 567, 568, 566, 569, 570, 571, 1476, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 1477, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 1478, 599, 600, 0, 596, 587, 1479, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 1480, 609,
	683, 684, 685, 686, 1481, 618, 1482, 610, 611, 612,
	687, 613, 688, 1483, 614, 615, 616, 617, 0, 619,
	620, 1484, 1485, 621, 622, 623, 625, 626, 624, 627,
	1486, 628, 1487, 0, 629, 630, 631, 689, 690, 691,
	1488, 633, 632, 634, 692, 635, 636, 1489, 1490, 1491,
	1492, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4089,
	280, 282, 281, 283, 284, 285, 286, 1414, 287, 288,
	1415, 1416, 1417, 0, 1418, 642, 1419, 1420, 1421, 1422,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 1423, 647, 299, 300,
	301, 302, 303, 304, 1424, 1425, 0, 305, 648, 649,
	650, 1426, 306, 307, 651, 1427, 1353, 1428, 308, 309,
	310, 311, 312, 313, 314, 0, 1429, 316, 317, 318,
	315, 319, 1430, 320, 0, 321, 322, 323, 324, 325,
	326, 1431, 327, 328, 329, 1208, 330, 331, 332, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 1439, 343, 339, 341,
	1440, 344, 342, 345, 1441, 346, 347, 348, 1442, 1443,
	349, 350, 351, 1444, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 1447, 277, 1448,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 1449, 375, 376, 377, 1450, 1451, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1452, 390, 660, 1453, 661, 391, 1454,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 1211,
	397, 398, 1455, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1456, 1210, 407, 665,
	666, 1457, 667, 1458, 409, 410, 1212, 668, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1459, 421, 423, 422, 1460, 424, 669,
	1215, 425, 426, 1216, 1461, 427, 428, 429, 430, 431,
	432, 435, 1462, 1463, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1464, 279, 1219, 477, 478, 1465, 670, 479, 671,
	481, 482, 1466, 0, 483, 0, 1467, 1468, 485, 486,
	487, 1469, 1470, 488, 489, 672, 1220, 490, 1221, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 1471, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 1472, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 1473, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 1474, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 1475, 567, 568, 566, 569, 570, 571,
	1476, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 1477, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 1478, 599, 600, 0, 596,
	587, 1479, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 1480, 609, 683, 684, 685, 686, 1481, 618, 1482,
	610, 611, 612, 687, 613, 688, 1483, 614, 615, 616,
	617, 0, 619, 620, 1484, 1485, 621, 622, 623, 625,
	626, 624, 627, 1486, 628, 1487, 0, 629, 630, 631,
	689, 690, 691, 1488, 633, 632, 634, 692, 635, 636,
	1489, 1490, 1491, 1492, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3780, 280, 282, 281, 283, 284, 285, 286,
	1414, 287, 288, 1415, 1416, 1417, 0, 1418, 642, 1419,
	1420, 1421, 1422, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 1423,
	647, 299, 300, 301, 302, 303, 304, 1424, 1425, 0,
	305, 648, 649, 650, 1426, 306, 307, 651, 1427, 1353,
	1428, 308, 309, 310, 311, 312, 313, 314, 0, 1429,
	316, 317, 318, 315, 319, 1430, 320, 0, 321, 322,
	323, 324, 325, 326, 1431, 327, 328, 329, 1208, 330,
	331, 332, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 1439,
	343, 339, 341, 1440, 344, 342, 345, 1441, 346, 347,
	348, 1442, 1443, 349, 350, 351, 1444, 352, 353, 1445,
	354, 355, 356, 1446, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	1447, 277, 1448, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 1449, 375, 376, 377, 1450,
	1451, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1452, 390, 660, 1453,
	661, 391, 1454, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 1211, 397, 398, 1455, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1456,
	1210, 407, 665, 666, 1457, 667, 1458, 409, 410, 1212,
	668, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1459, 421, 423, 422,
	1460, 424, 669, 1215, 425, 426, 1216, 1461, 427, 428,
	429, 430, 431, 432, 435, 1462, 1463, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1464, 279, 1219, 477, 478, 1465,
	670, 479, 671, 481, 482, 1466, 0, 483, 0, 1467,
	1468, 485, 486, 487, 1469, 1470, 488, 489, 672, 1220,
	490, 1221, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 1471, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 1472, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 1473, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 1474, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 1475, 567, 568, 566,
	569, 570, 571, 1476, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 1477, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 1478, 599,
	600, 0, 596, 587, 1479, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 1480, 609, 683, 684, 685, 686,
	1481, 618, 1482, 610, 611, 612, 687, 613, 688, 1483,
	614, 615, 616, 617, 0, 619, 620, 1484, 1485, 621,
	622, 623, 625, 626, 624, 627, 1486, 628, 1487, 0,
	629, 630, 631, 689, 690, 691, 1488, 633, 632, 634,
	692, 635, 636, 1489, 1490, 1491, 1492, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3602, 280, 282, 281, 283,
	284, 285, 286, 1414, 287, 288, 1415, 1416, 1417, 0,
	1418, 642, 1419, 1420, 1421, 1422, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 1423, 647, 299, 300, 301, 302, 303, 304,
	1424, 1425, 0, 305, 648, 649, 650, 1426, 306, 307,
	651, 1427, 1353, 1428, 308, 309, 310, 311, 312, 313,
	314, 0, 1429, 316, 317, 318, 315, 319, 1430, 320,
	0, 321, 322, 323, 324, 325, 326, 1431, 327, 328,
	329, 1208, 330, 331, 332, 1432, 1433, 1435, 1434, 1436,
	1437, 1438, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 1439, 343, 339, 341, 1440, 344, 342, 345,
	1441, 346, 347, 348, 1442, 1443, 349, 350, 351, 1444,
	352, 353, 1445, 354, 355, 356, 1446, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 1447, 277, 1448, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 1449, 375,
	376, 377, 1450, 1451, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1452,
	390, 660, 1453, 661, 391, 1454, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 1455, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 1456, 1210, 407, 665, 666, 1457, 667, 1458,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1459,
	421, 423, 422, 1460, 424, 669, 1215, 425, 426, 1216,
	1461, 427, 428, 429, 430, 431, 432, 435, 1462, 1463,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1464, 279, 1219,
	477, 478, 1465, 670, 479, 671, 481, 482, 1466, 0,
	483, 0, 1467, 1468, 485, 486, 487, 1469, 1470, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1471, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 1472, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 1473, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 1474, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 1475,
	567, 568, 566, 569, 570, 571, 1476, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 1477, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 1478, 599, 600, 0, 596, 587, 1479, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 1480, 609, 683,
	684, 685, 686, 1481, 618, 1482, 610, 611, 612, 687,
	613, 688, 1483, 614, 615, 616, 617, 0, 619, 620,
	1484, 1485, 621, 622, 623, 625, 626, 624, 627, 1486,
	628, 1487, 0, 629, 630, 631, 689, 690, 691, 1488,
	633, 632, 634, 692, 635, 636, 1489, 1490, 1491, 1492,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2632, 280,
	282, 281, 283, 284, 285, 286, 1414, 287, 288, 1415,
	1416, 1417, 0, 1418, 642, 1419, 1420, 1421, 1422, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 1423, 647, 299, 300, 301,
	302, 303, 304, 1424, 1425, 0, 305, 648, 649, 650,
	1426, 306, 307, 651, 1427, 1353, 1428, 308, 309, 310,
	311, 312, 313, 314, 0, 1429, 316, 317, 318, 315,
	319, 1430, 320, 0, 321, 322, 323, 324, 325, 326,
	1431, 327, 328, 329, 1208, 330, 331, 332, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 1439, 343, 339, 341, 1440,
	344, 342, 345, 1441, 346, 347, 348, 1442, 1443, 349,
	350, 351, 1444, 352, 353, 1445, 354, 355, 356, 1446,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 1447, 277, 1448, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 1449, 375, 376, 377, 1450, 1451, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1452, 390, 660, 1453, 661, 391, 1454, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 1455, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1456, 1210, 407, 665, 666,
	1457, 667, 1458, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1459, 421, 423, 422, 1460, 424, 669, 1215,
	425, 426, 1216, 1461, 427, 428, 429, 430, 431, 432,
	435, 1462, 1463, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1464, 279, 1219, 477, 478, 1465, 670, 479, 671, 481,
	482, 1466, 0, 483, 0, 1467, 1468, 485, 486, 487,
	1469, 1470, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 1471, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 1472, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 1473, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 1474, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 1475, 567, 568, 566, 569, 570, 571, 1476,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 1477, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 1478, 599, 600, 0, 596, 587,
	1479, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	1480, 609, 683, 684, 685, 686, 1481, 618, 1482, 610,
	611, 612, 687, 613, 688, 1483, 614, 615, 616, 617,
	0, 619, 620, 1484, 1485, 621, 622, 623, 625, 626,
	624, 627, 1486, 628, 1487, 0, 629, 630, 631, 689,
	690, 691, 1488, 633, 632, 634, 692, 635, 636, 1489,
	1490, 1491, 1492, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 1504, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2260, 280, 282, 281, 283, 284, 285, 286, 1414,
	287, 288, 1415, 1416, 1417, 0, 1418, 642, 1419, 1420,
	1421, 1422, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 1423, 647,
	299, 300, 301, 302, 303, 304, 1424, 1425, 0, 305,
	648, 649, 650, 1426, 306, 307, 651, 1427, 1353, 1428,
	308, 309, 310, 311, 312, 313, 314, 0, 1429, 316,
	317, 318, 315, 319, 1430, 320, 0, 321, 322, 323,
	324, 325, 326, 1431, 327, 328, 329, 1208, 330, 331,
	332, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 1439, 343,
	339, 341, 1440, 344, 342, 345, 1441, 346, 347, 348,
	1442, 1443, 349, 350, 351, 1444, 352, 353, 1445, 354,
	355, 356, 1446, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 1447,
	277, 1448, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 1449, 375, 376, 377, 1450, 1451,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1452, 390, 660, 1453, 661,
	391, 1454, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 1455, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 1456, 1210,
	407, 665, 666, 1457, 667, 1458, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1459, 421, 423, 422, 1460,
	424, 669, 1215, 425, 426, 1216, 1461, 427, 428, 429,
	430, 431, 432, 435, 1462, 1463, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1464, 279, 1219, 477, 478, 1465, 670,
	479, 671, 481, 482, 1466, 0, 483, 0, 1467, 1468,
	485, 486, 487, 1469, 1470, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1471, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	1472, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 1473, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	1474, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 1475, 567, 568, 566, 569,
	570, 571, 1476, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	1477, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 1478, 599, 600,
	0, 596, 587, 1479, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 1480, 609, 683, 684, 685, 686, 1481,
	618, 1482, 610, 611, 612, 687, 613, 688, 1483, 614,
	615, 616, 617, 0, 619, 620, 1484, 1485, 621, 622,
	623, 625, 626, 624, 627, 1486, 628, 1487, 0, 629,
	630, 631, 689, 690, 691, 1488, 633, 632, 634, 692,
	635, 636, 1489, 1490, 1491, 1492, 637, 638, 693, 639,
	640, 641, 1406, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 1414, 287,
	288, 1415, 1416, 1417, 0, 1418, 642, 1419, 1420, 1421,
	1422, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 1423, 647, 299,
	300, 301, 302, 303, 304, 1424, 1425, 0, 305, 648,
	649, 650, 1426, 306, 307, 651, 1427, 1353, 1428, 308,
	309, 310, 311, 312, 313, 314, 0, 1429, 316, 317,
	318, 315, 319, 1430, 320, 0, 321, 322, 323, 324,
	325, 326, 1431, 327, 328, 329, 1208, 330, 331, 332,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 1439, 343, 339,
	341, 1440, 344, 342, 345, 1441, 346, 347, 348, 1442,
	1443, 349, 350, 351, 1444, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 1447, 277,
	1448, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1209,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 660, 1453, 661, 391,
	1454, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	1211, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1456, 1210, 407,
	665, 666, 1457, 667, 1458, 409, 410, 1212, 668, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1459, 421, 423, 422, 1460, 424,
	669, 1215, 425, 426, 1216, 1461, 427, 428, 429, 430,
	431, 432, 435, 1462, 1463, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1464, 279, 1219, 477, 478, 1465, 670, 479,
	671, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 672, 1220, 490, 1221,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 1474,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 1475, 567, 568, 566, 569, 570,
	571, 1476, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 1477,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 1478, 599, 600, 0,
	596, 587, 1479, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 1480, 609, 683, 684, 685, 686, 1481, 618,
	1482, 610, 611, 612, 687, 613, 688, 1483, 614, 615,
	616, 617, 0, 619, 620, 1484, 1485, 621, 622, 623,
	625, 626, 624, 627, 1486, 628, 1487, 0, 629, 630,
	631, 689, 690, 691, 1488, 633, 632, 634, 692, 635,
	636, 1489, 1490, 1491, 1492, 637, 638, 693, 639, 640,
	641, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 1414, 287, 288, 1415, 1416,
	1417, 0, 1418, 642, 1419, 1420, 1421, 1422, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 1423, 647, 299, 300, 301, 302,
	303, 304, 1424, 1425, 0, 305, 648, 649, 650, 1426,
	306, 307, 651, 1427, 1353, 1428, 308, 309, 310, 311,
	312, 313, 314, 0, 1429, 316, 317, 318, 315, 319,
	1430, 320, 0, 321, 322, 323, 324, 325, 326, 1431,
	327, 328, 329, 1208, 330, 331, 332, 1432, 1433, 1435,
	1434, 1436, 1437, 1438, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 1439, 343, 339, 341, 1440, 344,
	342, 345, 1441, 346, 347, 348, 1442, 1443, 349, 350,
	351, 1444, 352, 353, 1445, 354, 355, 356, 1446, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 1447, 277, 1448, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	1449, 375, 376, 377, 1450, 1451, 1209, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1452, 390, 660, 1453, 661, 391, 1454, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 1211, 397, 398,
	1455, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 1456, 1210, 407, 665, 666, 1457,
	667, 1458, 409, 410, 1212, 668, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1459, 421, 423, 422, 1460, 424, 669, 1215, 425,
	426, 1216, 1461, 427, 428, 429, 430, 431, 432, 435,
	1462, 1463, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1464,
	279, 1219, 477, 478, 1465, 670, 479, 671, 481, 482,
	1466, 0, 483, 0, 1467, 1468, 485, 486, 487, 1469,
	1470, 488, 489, 672, 1220, 490, 1221, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	1471, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 1472, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 1473, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 1474, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 1475, 567, 568, 566, 569, 570, 571, 1476, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 1477, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 1478, 599, 600, 0, 596, 587, 1479,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 1480,
	609, 683, 684, 685, 686, 1481, 618, 1482, 610, 611,
	612, 687, 613, 688, 1483, 614, 615, 616, 617, 0,
	619, 620, 1484, 1485, 621, 622, 623, 625, 626, 624,
	627, 1486, 628, 1487, 0, 629, 630, 631, 689, 690,
	691, 1488, 633, 632, 634, 692, 635, 636, 1489, 1490,
	1491, 1492, 637, 638, 693, 639, 640, 641, 2607, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 2604, 287, 288, 0, 0, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 2605, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	2603, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 2606,
	0, 0, 0, 0, 0, 0, 1127, 2602, 0, 1087,
	1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 239, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 241,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 1632, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 233, 637, 638, 693, 639, 640, 641, 1101, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 1891, 1889, 0,
	0, 1125, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	239, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 241, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 1632, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	233, 637, 638, 693, 639, 640, 641, 1101, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 1891, 3247, 0, 0,
	1125, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 239,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 241, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 1632, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 233,
	637, 638, 693, 639, 640, 641, 1101, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 1891, 1889, 0, 0, 1125,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 2738, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 2743, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 2739, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 2740, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 2652, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 0,
	0, 0, 0, 0, 0, 0, 1127, 2650, 0, 2649,
	1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	0, 0, 0, 0, 0, 0, 0, 1127, 2647, 0,
	2646, 1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 0, 0, 0, 0, 0, 0, 0, 1127, 2644,
	0, 2643, 1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 338, 340, 1184, 1183, 1103, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 1097, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 619, 620, 0, 1104, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1096, 0, 0, 0, 0, 0, 0,
	1094, 1095, 0, 0, 0, 0, 0, 0, 0, 1127,
	2641, 0, 1732, 1125, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 1731, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 1090, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 1105,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 0, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 4723, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 1105, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 0, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 2484, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 2483, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	0, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 1105, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	4458, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 1105, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 0, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 4047, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 1960, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 0, 1125, 1143, 1115, 1116,
	1117, 1113, 1114, 1126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 3758, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1101, 0, 0, 0, 0, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 280, 282, 281, 283,
	284, 285, 286, 1127, 287, 288, 0, 1125, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 1960, 0,
	0, 0, 0, 0, 0, 1127, 0, 0, 0, 1125,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 2743, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	0, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 0, 0, 0, 0, 0, 0, 0, 1127, 1889,
	0, 2748, 1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 338, 340, 1184, 1183, 1103, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 1097, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 619, 620, 0, 1104, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1101, 0, 0, 2746, 0, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 1096, 0, 0, 0, 0, 0, 0,
	1094, 1095, 280, 282, 281, 283, 284, 285, 286, 1127,
	287, 288, 0, 1125, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1101, 0, 0, 2734, 0, 1143, 1115, 1116,
	1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 280, 282, 281, 283, 284, 285,
	286, 1127, 287, 288, 0, 1125, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1101, 0, 0, 2722, 0, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 280, 282, 281, 283,
	284, 285, 286, 1127, 287, 288, 0, 1125, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 2720,
	0, 2711, 2718, 1116, 1117, 1113, 1114, 1126, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 280, 282,
	281, 283, 284, 285, 286, 1127, 287, 288, 0, 1125,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	2714, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 2715, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 2716, 445, 2713, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	2717, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 2712, 641, 1101, 0,
	0, 2708, 0, 2711, 2718, 1116, 1117, 1113, 1114, 1126,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	280, 282, 281, 283, 284, 285, 286, 1127, 287, 288,
	0, 1125, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 2714, 340, 1184, 1183, 1103, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 2715, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 2716, 445, 2713, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 2717, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 1097, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 619, 620, 0, 1104, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 2712, 641,
	1101, 0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 1096, 0, 0, 0, 0, 0, 0,
	1094, 1095, 280, 282, 281, 283, 284, 285, 286, 1127,
	287, 288, 0, 1125, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 0, 0, 0, 0, 0, 1897,
	0, 1127, 0, 0, 0, 1125, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	2463, 287, 288, 0, 0, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 2427, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 2402, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	1737, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 1666, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 1661, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 1648, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 1643, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	1552, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1551, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 1546, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1545, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 1539, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 1355, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 0, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	0, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 4772, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 4771, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	4770, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 4772,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 4771, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 0, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	4393, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	4394, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 4392,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 0, 0, 1143, 1115,
	1116, 1117, 3214, 3215, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 0, 0,
	1143, 1115, 1116, 1117, 3212, 3213, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	0, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 2471,
	2472, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 0, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 0, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 2730, 0, 0, 0, 0, 0,
	0, 2728, 2729, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 0,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 3207, 3208, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 0, 0, 0, 0,
	0, 0, 0, 2143, 2144, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 0, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 4772, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 0, 1170, 0, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 0, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 4771, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 1087, 0,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 0, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 1166, 0, 305, 648, 649, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 665, 666, 0, 667,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1251, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 0, 279,
	1219, 477, 478, 0, 1171, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 1257, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 1259, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	239, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 0, 596, 587, 241, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 1632, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	233, 637, 638, 693, 639, 640, 641, 1265, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 1255, 0, 1984, 0, 0, 1167,
	0, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 1166,
	0, 305, 648, 649, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 665, 666, 0, 667, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1251, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 0, 279, 1219, 477, 478,
	0, 1171, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 1257, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 1259, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 239, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 0, 596, 587, 241, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 1632, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 233, 637, 638,
	693, 639, 640, 641, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 3371, 0, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1255, 0, 1984, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1167,
	0, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 1166,
	0, 305, 648, 649, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 665, 666, 0, 667, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1251, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 0, 279, 1219, 477, 478,
	0, 1171, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 1257, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 1259, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 1247, 0, 1265, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1167,
	0, 1255, 0, 1253, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 1166,
	0, 305, 648, 649, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 665, 666, 0, 667, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1251, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 0, 279, 1219, 477, 478,
	0, 1171, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 1257, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 1259, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 1265, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1167,
	0, 1255, 0, 1253, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 1166,
	0, 305, 648, 649, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 665, 666, 0, 667, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1251, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 0, 279, 1219, 477, 478,
	0, 1171, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 1257, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 1259, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 1265, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1167,
	0, 1255, 0, 1253, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 1166,
	0, 305, 648, 649, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 665, 666, 0, 667, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 0, 279, 1219, 477, 478,
	0, 1171, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 1265, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1167,
	0, 0, 0, 4213, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 1166,
	0, 305, 648, 649, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 665, 666, 0, 667, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 0, 279, 1219, 477, 478,
	0, 1171, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 1259, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 274, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 2575, 2576, 2577, 2594, 2595, 2596,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 2597, 0, 642, 0, 0, 0,
	0, 289, 290, 1881, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 1866, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 2587, 0, 316, 317,
	318, 315, 319, 0, 320, 2583, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 2588, 2589, 2590, 2591, 371, 372, 373, 657, 0,
	0, 2582, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 2592, 2593, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 2585,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 2586, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 1865,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 1087, 0,
	1348, 2572, 2573, 2574, 2598, 2584, 2578, 0, 2580, 2581,
	2579, 2566, 2567, 2568, 2569, 2570, 2571, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 1353, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1210, 407, 665, 666, 0, 667,
	0, 409, 410, 1212, 668, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 0, 0,
	1219, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	239, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 241, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 1632, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	233, 637, 638, 693, 639, 640, 641, 0, 0, 234,
	1629, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 193, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 1353, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1210, 407, 665, 666,
	0, 667, 0, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	0, 0, 1219, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 239, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	241, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 1632,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 233, 637, 638, 693, 639, 640, 641, 1348,
	1347, 234, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 193, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 1353, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 0, 1219,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1348, 1347, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 1656, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 1353,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	668, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 0, 1219, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1348, 1347, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 3669, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 1353, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1210, 407, 665,
	666, 0, 667, 0, 409, 410, 1212, 668, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 0, 1219, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 2343, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1348, 2252, 0, 0, 0, 0, 2253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 1656,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 1353, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1210, 407, 665, 666, 0, 667,
	0, 409, 410, 1212, 668, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 2251, 423, 422, 0, 424, 669, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 0, 0,
	1219, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1348, 1347, 0,
	0, 0, 0, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 1656, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	1353, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1210, 407, 665, 666, 0, 667, 0, 409, 410,
	1212, 668, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 0, 0, 1219, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 1087, 0, 274, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 1638, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 239, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 241, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 1632, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 274, 0, 0, 233, 637, 638,
	693, 639, 640, 641, 0, 0, 234, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 193, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 279, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 1265, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1167, 0, 0, 0,
	1998, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 1166, 0, 305, 648,
	649, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	665, 666, 0, 667, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 0, 279, 1219, 477, 478, 0, 1171, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 274, 3111, 0, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	0, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 274, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 4941, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 279, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 0, 274, 0, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 3619, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 274, 0, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	1626, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 274, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	3099, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	0, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 274, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 3783, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 0, 919, 0, 820, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 2331, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 827, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 917, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 279, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 825, 601, 602, 603,
	604, 605, 826, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 820, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 280, 282, 281, 283, 284,
	285, 286, 2069, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 830, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 827, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 279, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 2068, 562, 563, 564, 565, 0, 2070,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 825, 601, 602, 603,
	604, 605, 826, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 2067, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 820, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 280, 282, 281, 283, 284,
	285, 286, 2020, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 830, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 827, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 279, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 2019, 562, 563, 564, 565, 0, 2021,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 825, 601, 602, 603,
	604, 605, 826, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 2018, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 818, 0, 820, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 830, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 827, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 825, 601, 602, 603, 604,
	605, 826, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 2042, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 830, 0, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	0, 2048, 0, 297, 2038, 298, 2054, 0, 2061, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 2064,
	2065, 0, 0, 306, 307, 0, 0, 1353, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 1190, 338, 340, 2052, 2051, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 0, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 2050, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 2059, 2060, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1210, 407,
	2045, 2046, 0, 2041, 0, 409, 410, 1212, 0, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	0, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 0, 0, 1219, 477, 478, 0, 0, 479,
	2053, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 0, 1220, 490, 1221,
	0, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 2035, 504, 505, 506,
	2036, 507, 508, 509, 0, 510, 0, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	2049, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 0,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 2047, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 2063, 590,
	591, 592, 593, 0, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 2055, 2056, 2057, 2058, 0, 618,
	0, 610, 611, 612, 0, 613, 0, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 0, 2039, 2062, 0, 633, 632, 634, 0, 635,
	636, 0, 0, 0, 0, 637, 638, 0, 639, 640,
	641, 820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 2029, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 827, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	279, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 825,
	601, 602, 603, 604, 605, 826, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 820, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	830, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 827, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	279, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 2381, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 2382, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 825,
	601, 602, 603, 604, 605, 826, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 2383, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 274, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	830, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	279, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 0, 1348,
	2117, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	830, 642, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 1353, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 3062, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 0, 1219,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 3063, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1348, 1347, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 1353,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	668, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 0, 1219, 477, 478, 3979,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1348, 1347, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 1353, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1210, 407, 665,
	666, 0, 667, 0, 409, 410, 1212, 668, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 0, 1219, 477, 478, 3580, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1686, 0, 1348, 1347, 0, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 1353, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 1685, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1210, 407, 665, 666,
	0, 667, 0, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	0, 0, 1219, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 1684, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 1683, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1600,
	0, 1348, 1347, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 1353, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 1599, 663, 664, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1210, 407, 665, 666, 0,
	667, 0, 409, 410, 1212, 668, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 0,
	0, 1219, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1559, 0,
	1348, 1347, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 1353, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 1561, 663, 664, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1210, 407, 665, 666, 0, 667,
	0, 409, 410, 1212, 668, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 0, 0,
	1219, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1522, 0, 1348,
	1347, 0, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 1353, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 1521, 663, 664, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 0, 1219,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1342, 0, 1348, 1347,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 1353, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	1341, 663, 664, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1210, 407, 665, 666, 0, 667, 0, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 0, 0, 1219, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1348, 1347, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 1353, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1210,
	407, 665, 666, 0, 667, 0, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 0, 0, 1219, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 1348, 2117, 0, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 1353, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 2114, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1210, 407, 665, 666,
	0, 667, 0, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	0, 0, 1219, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 1348,
	1347, 0, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 1353, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 0, 1219,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 1348,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 1353, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 0, 1219,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 2900, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 2897, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 2904, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 3124, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 2903, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 3121, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 3123, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 3120,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 2902, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 3122, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 2900, 306, 307,
	651, 0, 0, 2894, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 2897, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 2904, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 2903, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 2893, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 2902, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 2901, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 1763, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 1762, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 1761, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 279, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 1764, 554, 561, 562, 563, 564, 565, 0, 1760,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 1758, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 1759,
	632, 634, 692, 635, 636, 1497, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1499,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 1257, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 1494, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1496, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	1257, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 1402, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 1404, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 279, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 1257,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 725, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 724, 285, 286, 714, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 717, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 718, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 719, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 713, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 714, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 717, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 718, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 719, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 274, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	280, 282, 281, 283, 284, 285, 286, 714, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 717, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 718, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 719, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 274, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	280, 282, 281, 283, 284, 285, 286, 714, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 717, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 3990, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 719, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 274, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 279, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 1257, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 274, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 3528, 476,
	465, 0, 279, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	3069, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 3068, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 279, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 2350,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	279, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 274, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	279, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 2287,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 2294, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 2293, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 2280, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 2282, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 2245, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 1257, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 1604, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	1603, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 279, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 1514, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 1507, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1509, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 1332, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 1331, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 279, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 1322, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 1321, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 279, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 1319, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1318, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 279, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	1314, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 1313, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 279, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 695,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	279, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 265, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 717, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	718, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	719, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 2390, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 2388, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 2386, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 2300, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 2093, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 2087, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 904, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 903,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 902, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 3124, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 4290, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 1366, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 1369, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 1367, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 785, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 784, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 783, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 1370, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 781, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 1366, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 1369, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 1367, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 785, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 784, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 783, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 1370, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 781, 684, 685,
	686, 0, 618, 0, 610, 1368, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 704, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	703, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 702,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 274, 3111, 0, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	274, 4300, 0, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 4585, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 4186, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 3945, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	274, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 2783, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 274, 3111, 0,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 3108, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 274, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 2211, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 784, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 783, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 781, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 274, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 280, 282, 281, 283, 284, 285,
	286, 2360, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 2348, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 2107, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 2074, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 1659, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	1652, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 775,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 771, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 776, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	785, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	0, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 784, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 783, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 1637, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 781, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 1610, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 1609, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 1594, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 1592, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 1587, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 1564, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1562,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 1557, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 1519, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 1502, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 1372, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 784, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 783, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 781, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	1337, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 1336, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 1328,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 1327, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	0, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 274, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 280, 282,
	281, 283, 284, 285, 286, 1281, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	0, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 274, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 280, 282,
	281, 283, 284, 285, 286, 790, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	0, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 775, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	771, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	770, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 776, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 785,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	784, 546, 547, 548, 549, 772, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 783, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 773, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	781, 684, 685, 686, 0, 618, 0, 610, 777, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 764, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 765,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 727, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 721, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 699, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 3639, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 784, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 783, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 781, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 3566, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 3544, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 3541, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 3493, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 3491, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 3477, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 3079, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 765, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	2318, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 0, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1299, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 1230, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 0, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 0, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 0,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 0, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 1841, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 1810, 1811, 0, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 1847, 1841, 1812, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 1832, 0,
	0, 0, 0, 1860, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 1851, 0, 1818, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 1858, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 1851, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 1833, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1811, 1834, 1843, 1844, 1845, 1854, 1855, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 1847, 1841, 0, 0, 0, 0, 0,
	1852, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 1810, 1811, 1834, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 1865, 0, 0, 1847, 1841, 1812, 0, 0, 0,
	0, 1852, 1813, 0, 0, 0, 1832, 0, 0, 0,
	0, 1860, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 1865, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 1835, 1836, 1837, 1838, 0, 0, 3291, 0, 0,
	0, 1818, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 1835, 1836, 1837, 1838, 0, 0, 2609, 0,
	1851, 0, 1818, 1861, 0, 0, 0, 0, 0, 0,
	1840, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 1858,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 0,
	0, 1851, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 1840, 1842, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 1833,
	1858, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 1810, 1811, 0,
	1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1847,
	1841, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 1834, 0, 0, 0, 1860, 0, 1810, 1811,
	0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 1865,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 1852,
	1847, 1841, 1812, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 1832, 0, 0, 0, 0, 1860, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 1850, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0,
	0, 4699, 0, 0, 0, 0, 0, 1835, 1836, 1837,
	1838, 0, 1850, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	0, 0, 4695, 0, 0, 0, 0, 0, 1835, 1836,
	1837, 1838, 0, 0, 0, 0, 1851, 0, 1818, 1861,
	0, 0, 0, 0, 0, 0, 1840, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 0, 1851, 0, 0,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 1833, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 1847, 1841, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 1834, 0,
	0, 0, 1860, 0, 1810, 1811, 0, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 0, 1865, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 1852, 1847, 1841, 1812, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 1832, 0,
	0, 0, 0, 1860, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 1850, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 1825, 1831,
	1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 0, 0, 0, 0, 4610, 0, 0,
	0, 0, 0, 1835, 1836, 1837, 1838, 0, 1850, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 1824, 1825,
	1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 0, 0, 4568, 0,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 1851, 0, 1818, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 1858, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 1851, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 1833, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 1810,
	1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 1847, 1841, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 1834, 0, 0, 0, 1860, 0,
	1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	0, 1865, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 1852, 1847, 1841, 1812, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 1832, 0, 0, 0, 0, 1860,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 1850, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 0, 0, 4567, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 1850, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 0, 0, 4377, 0, 0, 0, 0, 0,
	1835, 1836, 1837, 1838, 0, 0, 0, 0, 1851, 0,
	1818, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 1851,
	0, 0, 1861, 0, 0, 0, 0, 0, 0, 1840,
	1842, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 1833, 1858, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 1810, 1811, 0, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 1847, 1841, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	1834, 0, 0, 0, 1860, 0, 1810, 1811, 0, 1843,
	1844, 1845, 1854, 1855, 1856, 0, 0, 1865, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 1852, 1847, 1841,
	1812, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	1832, 0, 0, 0, 0, 1860, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 1850,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0, 4209,
	0, 0, 0, 0, 0, 1835, 1836, 1837, 1838, 0,
	1850, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0,
	4136, 0, 0, 0, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 1851, 0, 1818, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 1858, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 1851, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 1840, 1842, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 1833, 1858, 0, 0, 0, 0, 0,
	0, 1827, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 1847, 1841, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 1834, 0, 0, 0,
	1860, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 0, 1865, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 1852, 1847, 1841, 1812, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 1832, 0, 0, 0,
	0, 1860, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 1850, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 0, 0, 4135, 0, 0, 0, 0,
	0, 1835, 1836, 1837, 1838, 0, 1850, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 1824, 1825, 1831, 1853,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 0, 0, 4134, 0, 0, 0,
	0, 0, 1835, 1836, 1837, 1838, 0, 0, 0, 0,
	1851, 0, 1818, 1861, 0, 0, 0, 0, 0, 0,
	1840, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 1858,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 0,
	0, 1851, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 1840, 1842, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 1833,
	1858, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 1810, 1811, 0,
	1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1847,
	1841, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 1834, 0, 0, 0, 1860, 0, 1810, 1811,
	0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 1865,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 1852,
	1847, 1841, 1812, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 1832, 0, 0, 0, 0, 1860, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 1850, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 0,
	0, 3788, 0, 0, 0, 0, 0, 1835, 1836, 1837,
	1838, 0, 1850, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	0, 0, 3289, 0, 0, 0, 0, 0, 1835, 1836,
	1837, 1838, 0, 0, 0, 0, 1851, 0, 1818, 1861,
	0, 0, 0, 0, 0, 0, 1840, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 0, 1851, 0, 0,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 1833, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 1810, 1811, 0, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 1847, 1841, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 1834, 0,
	0, 0, 1860, 0, 1810, 1811, 0, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 0, 1865, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 1852, 1847, 1841, 1812, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 1832, 0,
	0, 0, 0, 1860, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 1850, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 1825, 1831,
	1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 0, 0, 0, 0, 3288, 0, 0,
	0, 0, 0, 1835, 1836, 1837, 1838, 0, 1850, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 1824, 1825,
	1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 0, 0, 3287, 0,
	0, 0, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 1851, 0, 1818, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 1858, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 1851, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 1833, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 1810,
	1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 1847, 1841, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 1834, 0, 0, 0, 1860, 0,
	1810, 1811, 0, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	0, 1865, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 1852, 1847, 1841, 1812, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 1832, 0, 0, 0, 0, 1860,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 1850, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 0, 0, 3286, 0, 0, 0, 0, 0, 1835,
	1836, 1837, 1838, 0, 1850, 0, 0, 0, 0, 1818,
	4848, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 3251, 0, 0, 0, 0, 0, 0, 0,
	1835, 1836, 1837, 1838, 0, 0, 0, 0, 1851, 0,
	1818, 1861, 3351, 0, 0, 0, 0, 3350, 1840, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 1851,
	0, 0, 1861, 0, 0, 0, 0, 0, 0, 1840,
	1842, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 1833, 1858, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4847, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1811, 1834,
	1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 1847,
	1841, 0, 0, 0, 0, 3222, 1852, 1813, 0, 0,
	0, 2756, 0, 0, 0, 0, 1860, 0, 1810, 1811,
	1834, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 1865, 0, 0,
	1847, 1841, 1812, 0, 0, 2755, 0, 1852, 1813, 0,
	0, 0, 1832, 0, 0, 0, 0, 1860, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 1865, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 3223, 1829, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 1835, 1836, 1837,
	1838, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 1835, 1836,
	1837, 1838, 0, 0, 0, 0, 1851, 0, 1818, 1861,
	0, 0, 0, 0, 0, 0, 1840, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1858, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 0, 0, 1851, 0, 0,
	1861, 0, 0, 0, 0, 0, 0, 1840, 1842, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 1833, 1858, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1811, 1834, 1843, 1844,
	1845, 1854, 1855, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 1847, 1841, 0,
	0, 0, 0, 0, 1852, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 1810, 1811, 1834, 1843,
	1844, 1845, 1854, 1855, 1856, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 1865, 0, 0, 1847, 1841,
	1812, 0, 0, 0, 0, 1852, 1813, 0, 0, 0,
	1832, 0, 0, 0, 0, 1860, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 1865, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 1825, 1831,
	1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816,
	1817, 1819, 1820, 0, 0, 1835, 1836, 1837, 1838, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1825,
	1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814, 1815,
	1816, 1817, 1819, 1820, 0, 0, 1835, 1836, 1837, 1838,
	0, 0, 0, 0, 1851, 0, 1818, 1861, 0, 0,
	0, 0, 0, 0, 1840, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 1858, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 1851, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 1840, 1842, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 1833, 1858, 0, 0, 0, 0, 0,
	0, 1827, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 1811, 1834, 1843, 1844, 1845, 1854,
	1855, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 1847, 1841, 0, 0, 0,
	0, 0, 1852, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 1810, 1811, 1834, 1843, 1844, 1845,
	1854, 1855, 1856, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 1865, 0, 0, 1847, 1841, 1812, 0,
	0, 3352, 0, 1852, 1813, 0, 0, 0, 1832, 0,
	0, 0, 0, 1860, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 1865, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 3769, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830,
	1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819,
	1820, 0, 0, 1835, 1836, 1837, 1838, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 1850, 0, 0, 0,
	3357, 0, 0, 0, 0, 0, 1824, 1825, 1831, 1853,
	1830, 1826, 0, 1823, 1821, 1822, 1814, 1815, 1816, 1817,
	1819, 1820, 0, 0, 1835, 1836, 1837, 1838, 0, 0,
	0, 0, 1851, 0, 1818, 1861, 0, 0, 0, 0,
	0, 0, 1840, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 1858, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 1851, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 1840, 1842, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 1833, 1858, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1811, 1834, 1843, 1844, 1845, 1854, 1855, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 1847, 1841, 0, 0, 0, 0, 0,
	1852, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 1810, 1811, 1834, 1843, 1844, 1845, 1854, 1855,
	1856, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 1865, 0, 0, 1847, 1841, 1812, 0, 0, 3290,
	0, 1852, 1813, 0, 0, 0, 1832, 0, 0, 0,
	0, 1860, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 1865, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0,
	1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0,
	0, 1835, 1836, 1837, 1838, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1831, 1853, 1830, 1826,
	0, 1823, 1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820,
	0, 0, 1835, 1836, 1837, 1838, 0, 0, 0, 0,
	1851, 0, 1818, 1861, 0, 0, 0, 0, 0, 0,
	1840, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 1858,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 0,
	0, 1851, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 1840, 1842, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 1833,
	1858, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3317, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	1811, 1834, 1843, 1844, 1845, 1854, 1855, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 1847, 1841, 0, 0, 0, 0, 0, 1852, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	1810, 1811, 1834, 1843, 1844, 1845, 1854, 1855, 1856, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 1865,
	0, 0, 1847, 1841, 1812, 0, 0, 0, 0, 1852,
	1813, 0, 0, 0, 1832, 0, 0, 0, 0, 1860,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	1865, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821,
	1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0, 1835,
	1836, 1837, 1838, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1825, 1831, 1853, 1830, 1826, 0, 1823,
	1821, 1822, 1814, 1815, 1816, 1817, 1819, 1820, 0, 0,
	1835, 1836, 1837, 1838, 0, 0, 0, 0, 1851, 0,
	1818, 1861, 0, 0, 0, 0, 0, 0, 1840, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1858, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 0, 0, 1851,
	0, 0, 1861, 0, 0, 0, 0, 0, 0, 1840,
	1842, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 1833, 1858, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2333, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822, 1814,
	1815, 1816, 1817, 1819, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1831, 1853, 1830, 1826, 0, 1823, 1821, 1822,
	1814, 1815, 1816, 1817, 1819, 1820,
}

var sqlPact = [...]int{
	296, -1000, -1000, -1000, -1000, 265, -1000, -1000, 263, 262,
	258, 256, 255, 229, 228, 225, 223, 222, 220, -1000,
	-1000, -1000, -1000, -1000, -1000, 219, -1000, -1000, 214, -1000,
	213, 212, 209, -1000, -1000, 207, -1000, 205, -1000, -1000,
	-1000, -1000, 204, 202, 198, 94666, 94107, 95216, 2372, 119662,
	101852, 2065, 84099, 119103, 83540, 118544, 2263, 9993, 117985, 2796,
	196, -1000, 117426, 191, 190, 188, -1000, 116867, -1000, 2131,
	-1000, 187, -1000, 8655, 70653, 186, 185, 180, 179, 2972,
	178, -1000, 177, 174, -1000, -1000, 172, -1000, 10841, 1561,
	-1000, 171, 170, -1000, 7829, 99625, 169, 168, 167, 2672,
	165, 164, 68994, 162, 161, 152, 2658, 2897, -1000, -1000,
	2123, -1000, -1000, 149, 148, 146, 145, 140, 138, 134,
	133, 132, 131, 127, 126, 123, -1000, 122, 119, 114,
	112, 111, -1000, 109, 108, 107, -1000, 105, -1000, 104,
	102, 98, 96, 94, 90, 89, 88, 87, 86, 85,
	83, 82, 81, 18500, -1000, -1000, 79, 2061, 1735, 1734,
	1731, 1718, 1717, 1053, 70, 69, 68, 60, 57, 53,
	51, 47, 43, 41, 39, 38, 36, 35, 34, 33,
	32, 31, 176, 30, 29, 25, 21, 20, 18, 17,
	2567, -1000, 1630, 1087, 33062, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 127362, 120212, 16, -46, 14, -1000, 3410,
	983, 57193, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 526, 2257, 792, -1000,
	-1000, -1000, 116317, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2371, 26, -1000, 2124, -1000, -1000, -1000, -1000, -1000,
	790, -1000, 2370, 336, 2321, -1000, -1000, -1000, 3467, 2502,
	3872, 3871, 3869, 3866, 3865, 126812, 1939, 3864, 2574, 3862,
	3861, 3859, 3856, 3855, 3854, 3852, -1000, 93548, 1092, 92989,
	92430, 3482, 115767, 91871, 115208, 77414, 49194, 1076, 3464, -1000,
	-1000, -1000, -1000, -1000, -1000, 120212, -1000, 1090, -1000, -1000,
	3849, 2144, 788, 101293, -1000, -1000, 114649, 1746, -1000, -1000,
	-1000, 998, 1278, 34778, 34778, 34778, 335, -1000, -1000, -1000,
	-1000, -1000, -1000, 3848, 3847, 3844, 3843, 3842, -1000, -1000,
	82981, 26010, 82422, 81863, 114090, 25441, 91312, 90753, 3838, 3837,
	3836, 113531, 76845, 3596, 3595, 1086, 2119, 1508, -1000, -1000,
	-1000, -1000, -1000, -1000, -7, 72877, 3643, 120212, -1000, 333,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48622, 865, 48050,
	793, 47478, 740, 112972, -1000, -1000, -1000, -1000, 76276, -1000,
	112413, 2496, 3835, 3834, 1193, 3833, 3362, 1908, 3832, 1933,
	1274, 3831, 3830, 3829, 3828, 3825, 3822, 3821, 1510, 111854,
	3057, 1588, 111295, 1772, 75707, 1081, 90194, 95216, 2662, 110736,
	1472, 1466, -1000, -1000, -1000, -1000, 3187, 2887, 2885, 1155,
	-1000, -1000, -1000, -1000, 60578, 9034, 8341, -1000, -1000, 10603,
	110177, 63413, 95216, 95216, -1000, -1000, -1000, -1000, -1000, -1000,
	46906, 818, 46334, 925, 109618, -1000, -1000, 61145, 3006, -1000,
	-1000, -1000, -1000, -1000, 109059, 45762, 380, 45190, 870, 120212,
	-1000, 3056, 2007, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2314, 1698, 3651, 2790, 75138, 2102, 1470, 3428, 3184,
	3178, 1579, 2111, 3177, 3816, 2682, 3175, 3172, 3171, 3159,
	3131, 1572, 2615, 379, 2614, 32490, 3030, 1769, 44618, 1636,
	1578, 3120, 3115, 3672, 2089, 2101, 2162, 81304, 3815, 3810,
	3393, 3089, 3083, 2852, 3082, -1000, 3005, 1480, -1000, -1000,
	-1000, -1000, -1000, 1524, -1000, -1000, -1000, -1000, -1000, 85749,
	-1000, -1000, 1544, -1000, -1000, 1544, -1000, -1000, -1000, -1000,
	-1000, 1393, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1630, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2281, -1000, 2132, -1000, -1000,
	2568, 3395, 3395, 3395, 3463, 503, 492, -1000, 176, -1000,
	-1000, 134569, -1000, -1000, 49766, 49766, 49766, 49766, 49766, 49766,
	49766, 49766, 2271, -1000, 787, -1000, -1000, 848, -1000, 786,
	721, 657, -1000, -1000, -1000, -1000, -1000, -1000, 784, -1000,
	-1000, -1000, -1000, -1000, -1000, 3643, -1000, 28925, -1000, -1000,
	-1000, 507, 783, 49766, -1000, -1000, 3698, 3697, 976, -1000,
	332, 1014, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3053, 781, 778, -1000, 771, 768,
	764, 763, 762, -1000, 759, -1000, 756, 755, 754, 750,
	748, 747, 746, 743, -1000, 2151, -1000, -1000, -1000, -1000,
	-1000, -1000, 705, 703, 703, 703, -1000, 1074, -1000, -1000,
	-1000, 402, 701, 384, 700, 699, 698, -1000, 742, 741,
	739, 737, 736, 734, 732, 730, 727, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1073, -1000, -1000, -1000, -1000, -8,
	120212, -1000, 526, -8, -1000, -1000, 726, -1000, 37095, 37095,
	37095, -1000, -1000, 2367, 49766, -1000, 2387, -1000, 0, 0,
	944, 58873, -1000, 56053, 944, 312, 854, 64530, -1000, 3003,
	-1000, -1000, 725, 331, -1000, -1000, -1000, -1000, 26577, 2995,
	120212, 120212, 120212, 95216, 95216, 95216, 120212, 3807, 3280, 49766,
	-1000, -1000, 70094, 120212, 95766, -1000, -1000, 3575, 71210, 69544,
	120212, 3042, 108500, 3806, -1000, -1000, -1000, -1000, -1000, 3250,
	3803, 3801, 3800, -1000, 120212, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 243, 3249, -1000, -1000, 99066, 243, 3248, -1000,
	243, 3246, -1000, 98516, -1000, -1000, 2380, 3245, -1000, -1000,
	250, 3244, -1000, -1000, -1000, 249, 3243, -1000, -1000, 330,
	-38, 3242, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 134569, -1000, -1000, -1000, 107941, -1000,
	3399, -1000, 120212, -1000, 49766, -1000, -1000, 3570, 1740, 78538,
	3511, -1000, -1000, -15, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2545, 2557, 1210, 2396, -1000, 3293, 1658, 34778, 3350,
	-1000, -1000, -1000, -1000, -1000, 315, 26577, -1000, -1000, -1000,
	-1000, -1000, -1000, 3214, 3241, 1483, -1000, 2385, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1983, 3240, -1000, 1643, 3239,
	1869, -1000, -1000, 4895, -1000, 3387, -1000, -1000, 2034, 3238,
	1, -1000, -1000, 2728, -1000, -1000, -1000, -1000, 2092, -1000,
	1368, 3237, -1000, 2788, 2788, 89635, 3195, 62846, 61145, 72877,
	-11, -1000, -1000, -1000, -1000, -225, -1000, 24868, 134569, -1000,
	-1000, -1000, -1000, 1865, 134569, 963, -1000, -1000, 3236, -1000,
	134569, 960, -1000, -1000, 3235, -1000, 2611, -1000, 3039, -1000,
	-1000, 2456, 2454, -1000, -1000, 3799, -1000, -1000, 3797, -1000,
	3796, 3794, 3792, -1000, 1768, 2099, 3790, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 89085, 2366, -1000, -1000, 87967,
	3036, -1000, 2453, 3510, -1000, 88526, 1079, -1000, 1034, 2452,
	-1000, 97966, 967, 2451, -1000, 3788, 3474, 2697, 1034, 2450,
	-1000, -1000, -1000, -1000, -1000, 1052, -1000, 66762, -1000, 66762,
	-1000, 1654, -1000, 126262, 0, 95216, 3643, -1000, -52, -1000,
	-1000, -1000, 983, -1000, 60006, -1000, 60006, 100734, 77981, 1021,
	820, 68434, 134528, -1000, 1047, -1000, -1000, 134569, -1000, -1000,
	-1000, 2607, -1000, -151, 2784, -1000, 77981, 62279, 2585, -1000,
	134569, -1000, -1000, -1000, -1000, 134569, -1000, -1000, -1000, 77981,
	87967, -1000, 107382, 87417, -1000, -1000, 1479, 2599, -1000, -1000,
	-1000, 77981, 1369, 77981, 77981, 77981, -1000, 106823, -1000, -1000,
	2126, 1545, 3396, 2118, 95216, -1000, 1860, -1000, -1000, -1000,
	3413, 3073, 120212, -1000, -1000, 3031, -1000, 72327, 97416, -1000,
	96866, -1000, 96316, -1000, 95216, -1000, 95216, -1000, 3785, 3783,
	3782, -1000, -1000, 3781, -1000, 3779, 3404, -1000, 702, 44046,
	134569, 3402, -1000, 3778, 2051, 3030, 134569, -1000, 3071, 1737,
	1733, 120212, -1000, -1000, 120212, -1000, 120212, -1000, -1000, -1000,
	1604, -1000, -1000, 2543, -1000, -1000, -1000, -1000, 95216, 95216,
	95216, 95216, 1536, -1000, 43474, -1000, -1000, 3097, 3777, 1847,
	-1000, 1845, -1000, 2994, 3418, -1000, 1476, 1839, -1000, -1000,
	251, -1000, -1000, -15, -1000, 125712, -1000, 2568, -1000, 120212,
	-1000, 2532, 3018, 3022, 1753, 2345, 2691, -1000, 42902, 2654,
	53198, 2382, 176, -1000, -1000, 176, 176, 34206, -1000, -1000,
	71210, 71210, 26577, 1442, 49766, 49766, 49766, 49766, 49766, 49766,
	49766, 49766, 49766, 49766, 49766, 49766, 49766, 49766, 49766, 49766,
	49766, 49766, 49766, 49766, 49766, 49766, 49766, 49766, 49766, 49766,
	49766, 49766, 49766, 49766, 49766, 49766, 49766, 49766, 49766, 49766,
	2341, 49766, 1391, 49766, 49766, 49766, 49766, 2171, -1000, -1000,
	2029, 587, 2113, 721, -1000, -1000, -1000, 3625, 3625, 3625,
	472, 472, 472, 13248, 13248, 674, 3776, 848, -1000, 49766,
	-1000, 106, 59430, 49766, 27146, -1000, 492, 15194, 2604, -1000,
	491, 27747, -1000, -1000, -1000, 28925, 657, 42301, 49766, 1025,
	134569, -1000, -1000, 1430, 3652, 24295, 3065, 2832, 717, 919,
	912, 31889, 31288, 30687, 30086, 896, 850, 49766, 49766, 49766,
	49766, 49766, 49766, 49766, 49766, -1000, -1000, 3663, -1000, 3652,
	-1000, -1000, -1000, -1000, 3652, 1441, 1424, 3652, -1000, 3652,
	3652, 8969, 8969, 41729, 41157, 40585, 53770, 40013, 49766, 29514,
	39441, 38869, -1000, 120212, -8, 3567, 49766, 259, -1000, 132857,
	-1000, 259, 259, 714, -55, 134569, 2606, 2606, 57753, 2361,
	2282, 2282, 2282, -1000, 944, 19104, 944, 105166, 2289, 944,
	944, 314, 346, 490, 55486, 2387, 105166, 832, 712, 13,
	12, 10, -1000, -1000, 9, 8, -1000, -1000, 95216, 709,
	27146, 26577, 313, 2028, -58, 2630, 2629, -1000, 2626, 2625,
	-1000, 2623, 2363, -1000, -1000, 1866, -60, 1390, 95216, 120212,
	1471, 3775, -53, -1000, 6764, -63, -1000, 1136, 308, 3652,
	-1000, -1000, -1000, -1000, -1000, 3774, 3773, -1000, 1072, 707,
	706, 404, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	705, 703, 703, 703, -1000, 402, 701, 384, 700, 699,
	698, -1000, -1000, -1000, -1000, -1000, 2993, 95216, 120212, 1467,
	3772, -225, 95766, -24, -1000, -1000, 120212, -1000, -1000, -1000,
	3771, -1000, 95216, -1000, -1000, 95216, 243, 3234, -1000, 95216,
	-1000, 95216, 236, 3233, -1000, -1000, 120212, -1000, 95216, 95216,
	-1000, 120212, 120212, 120212, 77981, 77981, 232, -1000, 95216, 932,
	-66, 1200, -15, -1000, -1000, -1000, -1000, -1000, 1544, -1000,
	2038, -1000, -1000, -1000, -1000, -1000, -1000, 1530, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 976, -1000, -1000, -1000,
	-1000, -1000, -1000, 3637, 3633, -9, -1000, -1000, 26577, -1000,
	-19, 1681, 1978, 1384, -1000, 80745, 2525, 3386, 3770, 2679,
	3377, 1653, -1000, 1600, -1000, 3481, 85749, 3527, 3542, 1402,
	-1000, 2987, -1000, -1000, 996, 1827, 1830, 1355, 1296, 85749,
	1643, -1000, 71210, -1000, 2690, 3460, 1469, 1463, 1469, 1469,
	1446, -1000, 85749, 1828, 1292, 1291, 1289, -1000, -1000, 2053,
	2048, -1000, -1000, 106273, -1000, 1288, 1286, 3589, 2281, 2248,
	878, 2023, -1000, -22, 3522, 3534, 1399, -1000, 2975, 1284,
	-1000, -1000, -1000, 3459, 95216, 26577, 1627, 1619, 1611, 1820,
	1280, -10, -1000, 3518, 1279, 1275, -1000, 1100, 5257, 3327,
	-1000, 77981, 1100, 1100, 1843, 3229, 2752, 1703, -1000, 2782,
	928, 2762, -1000, -1000, -1000, 928, -11, 72877, 120212, 307,
	-1000, 106, 49766, 49766, 106, 49766, 106, -1000, 3504, 3228,
	3225, -1000, -1000, -1000, -1000, -1000, 3769, 2068, 2561, -1000,
	-1000, 697, 2448, 2974, 120212, 2637, -12, 95216, -1000, 71777,
	3223, 73435, 1643, 2444, -1000, -1000, 86858, -1000, 3219, 526,
	2442, -1000, 794, 3766, 3217, -1000, 125162, -1000, 3399, 1261,
	3210, 1143, 673, 3566, -1000, 673, 67320, -1000, 120212, -1000,
	0, 6746, 79645, -68, -69, 489, -1000, 105723, 120212, 1142,
	80195, 120212, 3338, 2067, 2062, -1000, 1032, 61145, -1000, 61145,
	-71, -151, 2759, 1580, -1000, 1021, 1021, 928, -1000, 928,
	-1000, 95216, 3021, -1000, -1000, 77981, 1021, 1021, 1021, -1000,
	-1000, -1000, -1000, 3765, 3764, 3763, 3762, -1000, -1000, 1033,
	95216, 120212, 95216, -1000, -1000, 1662, -1000, 305, -1000, 120212,
	-1000, 120212, 120212, 95216, -1000, 1033, 120212, 1033, 120212, 1033,
	120212, 1033, 1033, -1000, -1000, -1000, -1000, -1000, 106, -1000,
	-1000, 134569, -1000, 49766, -1000, -1000, 1598, 3759, 1704, -1000,
	3020, -1000, 3019, -1000, 45, -1000, -1000, 1930, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3758, 134569, -1000, 2054, -1000,
	-1000, -1000, -1000, 95216, 95216, 95216, 95216, 120212, 3324, -1000,
	120212, 3309, 95216, -1000, -1000, 85749, -1000, 2532, 3018, -1000,
	-1000, -1000, -1000, -1000, -1000, 1706, 2335, -1000, 2592, -1000,
	1632, -1000, -1000, -1000, 134569, 54342, -1000, -1000, 134569, 1885,
	-1000, 52626, 52054, -1000, -1000, 1775, 95216, 2663, -1000, 2663,
	-137, -1000, 132816, 2591, 95216, -1000, -1000, -1000, -1000, -1000,
	994, 655, 655, 1304, 1304, 1304, 1304, 3496, 464, 6248,
	5175, 6289, 6289, 588, 588, 588, 588, 588, 6289, 7345,
	472, 472, 7345, 7345, 7345, 7345, 7345, 472, 472, 472,
	6289, 6289, 6289, 472, 13248, 7064, 9032, 49766, 49766, 1273,
	2022, 587, 8261, 49766, 10147, 10147, 10147, 10147, -1000, 1970,
	-1000, -1000, -1000, -1000, 2964, 696, 53770, 53770, -1000, -1000,
	-1000, -1000, 28336, 49766, -1000, -1000, -1000, -1000, 38268, -1000,
	-1000, 131993, -314, 487, -1000, 304, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 485,
	-54, -17, -1000, 49766, 49766, 49766, 484, -1000, 301, 49766,
	120212, -1000, 128513, 831, -150, -1000, -79, 1481, -1000, 49766,
	-1000, -1000, 1272, -1000, 1269, 1268, 1266, -1000, 694, 483,
	-1000, 295, -1000, 2278, 693, 687, 49766, -1000, -1000, -1000,
	-1000, -1000, 131952, -1000, -1000, 131557, -1000, -1000, 131516, -1000,
	-1000, 131121, -1000, -1000, -1000, -1000, -1000, 134141, 128472, 18207,
	17779, 10624, 17481, 16878, -80, 482, -82, 481, 987, 985,
	475, 474, 473, -89, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -91, 470, -1000, 2958,
	-54, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 468,
	-1000, 460, -1000, 134100, -54, 450, 1425, -1000, 53770, 53770,
	53770, 53770, -1000, 448, -1000, 132429, -1000, 133713, 37696, 37696,
	37696, 446, 133672, 49766, -54, -97, -1000, -98, -1000, -1000,
	613, -99, 1059, 37095, 56633, 26577, -1000, 1059, 1059, 49766,
	-1000, 49766, 2605, -1000, -1000, -1000, -1000, 2603, 2108, 2606,
	57753, -1000, -1000, -1000, -1000, 105166, -1000, 3643, 2879, -1000,
	105166, -1000, -1000, 120212, 526, -1000, 105166, 105166, 26577, 944,
	-1000, 944, 105166, 801, -1000, -1000, -1000, -1000, -1000, 444,
	65090, -17, 278, 26577, 1034, -1000, -1000, 2741, 2741, 2741,
	2741, 2741, 95216, -1000, -1000, 120212, 1265, -13, -88, 2755,
	-1000, 3600, -1000, 2177, -1000, 71210, -1000, 837, 1065, 26577,
	-1000, -1000, -1000, 686, -1000, 3652, 3652, -1000, 3652, 120212,
	2952, 248, 2753, -1000, 206, 73435, 3756, -1000, -1000, 243,
	-1000, 95216, 243, 243, -1000, 95216, 95216, 2380, -1000, 250,
	-1000, 249, -1000, -1000, -38, -1000, 1046, 34778, -1000, 1544,
	-1000, -1000, 1624, -1000, 2078, -1000, 1373, -1000, -1000, -1000,
	-1000, 34778, -1000, 2060, 120212, 120212, 95216, -1000, 120212, -1000,
	2197, 73435, -1000, 2441, 124612, 2433, 71210, 120212, -1000, -1000,
	685, 1011, 2590, 2586, 1134, 120212, 120212, 2584, 124062, 123512,
	-1000, 3755, 120212, 2198, 49766, 3458, 2265, 2459, 106, 106,
	-1000, 106, 106, 106, -1000, 682, 1389, 95216, 95216, 120212,
	73435, 95216, 1842, -1000, -1000, -1000, -1000, -1000, 86299, -1000,
	-1000, 3659, 3658, -1000, 1469, -1000, -1000, -1000, 1469, 1643,
	1814, 120212, 73435, 95216, 73435, 122962, 122412, -1000, -1000, 1816,
	120212, -1000, -1000, -1000, -1000, 1486, -1000, 878, 2209, 106,
	106, -1000, 106, 106, 106, 678, 26577, 2027, -1000, 3062,
	120212, 3696, 121862, 3693, 120212, 120212, 120212, 73435, 3392, 120212,
	120212, 73435, -1000, 121312, 5257, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 74569, 1153, 120212, 1368,
	-1000, -1000, 1810, 1264, 1259, 85749, 2154, 1786, 1902, 120212,
	61145, 1031, 61145, 2704, -1000, -1000, 23722, -1000, 134569, 134569,
	-1000, 134569, -1000, 71777, 77981, 120212, -1000, 1078, 120212, 80195,
	1008, 3208, 66204, -225, 1021, 77981, 95216, -12, 2637, 120212,
	-1000, -1000, -1000, -1000, -1000, 1643, 3202, 526, 2440, -1000,
	77981, 3562, 3163, 676, 3754, 3751, -1000, 95216, 2362, 2438,
	-1000, -1000, 120762, 3263, 878, 120212, 1059, 57753, 2006, -1000,
	63973, 1104, 120212, 1914, 182, -1000, -1000, -1000, 23, 120212,
	-1000, 662, -1000, -1000, 6746, 6746, 1021, -284, 670, -1000,
	921, 918, 61712, 77981, -104, -1000, -1000, -1000, -1000, 2433,
	95216, 120212, 1339, 2685, 120212, -106, -1000, 276, 668, 917,
	911, -1000, 2579, -1000, -151, -1000, 1032, 61145, 2951, 2948,
	-1000, -1000, 1045, -1000, 1464, 1021, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1, 1873, 120212,
	-225, -225, -28, -13, -1000, 1033, -1000, 1033, -1000, 1033,
	-1000, -1000, -1000, 134569, -1000, -1000, -1000, 1688, 1673, 120212,
	-1000, -1000, 120212, -1000, 26577, 120212, 95216, 26577, 95216, 3016,
	3012, -1000, -1000, -1000, 120212, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1166, -1000, 1885, 2332, -1000, 657, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2517, -1000, -14,
	34206, 946, -1000, -1000, 95216, -2, 49766, 49766, 7830, 5128,
	49766, 53770, 53770, -1000, 49766, 573, -1000, -1000, -1000, -1000,
	-1000, 2946, 656, 49766, 71210, 6964, 6422, -1000, 443, 16613,
	7345, -1000, 49766, -1000, 7424, -1000, 441, 36523, -1000, 133244,
	-49, -112, -1000, 19690, -54, -113, -1000, -1000, 835, -1000,
	3259, -1000, 49766, 133285, 2492, 1952, 1904, 1725, 3652, 3691,
	23149, -1000, 67877, 1060, 2298, 131080, -1000, -1000, -1000, -1000,
	71210, 71210, 49766, 49766, -1000, 49766, 49766, 49766, -1000, -1000,
	-1000, 3652, 988, -1000, -1000, -1000, 988, -1000, -1000, 1469,
	-1000, 1469, -1000, 49766, -1000, -1000, 2923, 49766, -1000, 71210,
	71210, 53770, 53770, 53770, 53770, 53770, 53770, 53770, 53770, 53770,
	53770, 53770, 53770, 53770, 53770, 53770, 53770, 53770, 53770, 53770,
	53770, 2596, 53770, 3618, 3618, 3618, 615, -1000, 2977, 2923,
	49766, 49766, 71210, 440, 439, 435, -1000, 49766, -54, -1000,
	-1000, 5569, 643, -1000, 2508, -1000, 2829, -1000, 49766, -1000,
	-109, -1000, 2387, -1000, -1000, 2829, 2829, -114, 134569, 57753,
	57753, -1000, 638, 49766, 2598, -1000, -1000, 829, -312, -1000,
	910, -1000, -1000, -1000, -1000, -1000, 908, -1000, 526, -1000,
	-1000, -1000, 272, 105166, 105166, 812, -1000, -115, -1000, -1000,
	-120, -1000, 3561, 434, 26577, -1000, 1059, 2726, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2622, -225, 120212, 120212, 1780,
	2319, 3689, -1000, 3657, 834, 811, 271, 3652, 430, 427,
	426, -225, 120212, 120212, 1776, 120212, -1000, -1000, -1000, 243,
	-1000, -1000, -1000, 236, -1000, -1000, -1000, -1000, 2686, -1000,
	-15, -1000, -1000, -1000, 49766, -1000, -1000, 3385, 1258, 1255,
	-1000, -1000, -1000, 2873, -1000, 3161, -1000, 2432, -1000, 1111,
	-1000, 2003, 49766, 627, 2684, 626, 625, 3747, 2127, 3743,
	1137, 3158, 2380, 3157, 2380, -1000, -1000, -1000, 997, -1000,
	134569, 2265, -1000, 623, 621, -1000, -19, 1671, 1925, 1253,
	1044, -1000, -1000, -1000, -1000, 49766, 49766, 104616, -1000, 499,
	3387, -3, -1000, -1000, -1000, 1774, 1252, 1245, -1000, -1000,
	-1000, -1000, 1643, 1762, 1244, 1242, -1000, -1000, -1000, -1000,
	-1000, 2421, -1000, -1000, 3156, 1041, -1000, 3093, 3088, 982,
	120212, -1000, 1039, -1000, -1000, -1000, -1000, 49766, -1000, -22,
	1239, 3517, 2418, 95216, -1000, 2380, 3155, 1238, -1000, 1236,
	-1000, -1000, -1000, 3515, 3513, 1249, -1000, -1000, -1000, -1000,
	-1000, 74002, -1000, -1000, 1100, 120212, 73435, 95216, 1809, -1000,
	-1000, 84649, 85199, 120212, 2752, -225, 928, -1000, 2533, 928,
	1031, 2920, -1000, 2635, -1000, 1037, 95216, 3742, 425, -123,
	-23, 71210, 3560, -1000, 2375, 671, 95216, 958, -1000, 3643,
	-1000, -1000, -1000, 1035, -1000, 3499, 95216, 3559, 3153, 1034,
	106, 95216, 3673, -1000, -1000, 3558, 95216, 3152, 2360, 2417,
	2552, 878, 79095, 1034, 2292, -35, -1000, 1914, 35922, 3389,
	-128, -1000, -1000, -1000, 1059, 67320, 57753, 49766, 3741, -138,
	-1000, -1000, -1000, -1000, -1000, 102409, 102409, 77981, 77981, 77981,
	1021, 120212, 120212, 80195, -1000, -1000, 620, 120212, 120212, 619,
	-1000, 120212, 120212, 3740, 77981, 77981, 77981, -25, 618, -1000,
	907, 905, 904, -1000, -1000, -1000, -1000, -1000, -1000, 903,
	900, 1032, -1000, -151, 61145, 106, -1000, 2310, 95216, -1000,
	22576, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1033, -225,
	-1000, -1000, 2227, 2381, 2227, 1891, 1883, -1000, -1000, 2329,
	-1000, -1000, -1000, -1000, 2657, 3380, 26577, 3488, 10147, 49766,
	49766, 298, 5462, 5366, 10147, 49766, 49766, 71210, 5661, -139,
	49766, 49766, -1000, 49766, 810, 134569, -1000, 3688, 49766, 414,
	412, -1000, -1000, -1000, 3648, -1000, -1000, -1000, 134569, 49766,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 411, -1000, 269,
	-1000, -1000, -1000, 127912, -1000, 49766, 409, 3454, -1000, 406,
	399, 16134, 9511, 130685, 130644, 130249, 396, -1000, -1000, 393,
	392, 134569, 2977, 134569, -1000, -1000, 913, 913, 1433, 1433,
	1433, 1433, 3618, 955, 1022, 669, 429, 429, 429, 640,
	615, 615, 429, 429, 429, 615, 2916, 2597, 616, 8198,
	-1000, -1000, 134569, 134569, 389, -1000, -1000, -1000, -54, 388,
	5569, -1000, 2825, 3452, 134569, -1000, 57753, 2825, 2825, -1000,
	-1000, 2108, 120212, 134569, 57753, -1000, 2879, -1000, 20852, 20274,
	-1000, 26577, -1000, -1000, -1000, -1000, 3643, -1000, 65090, -1000,
	614, -1000, 46, -1000, 2726, -1000, 899, -1000, -1000, 77981,
	77981, 2741, -225, -161, 120212, -1000, -1000, 807, 3734, 821,
	26577, 387, -1000, -1000, -1000, -225, -225, 120212, -225, -1000,
	-1000, -1000, 3337, 134569, 120212, 120212, 1584, 104066, 120212, 3147,
	-1000, 2279, -1000, 1134, 130208, 58313, -1000, 58313, 120212, -1000,
	-1000, -1000, -1000, 2091, 1628, 3733, 1183, -1000, 3415, 120212,
	-1000, 120212, -1000, -1000, -1000, 120212, 120212, 95216, 120212, -1000,
	73435, 3108, -141, 134569, -26, -1000, 897, -1000, 1450, -1000,
	22003, 120212, 73435, 95216, 120212, 73435, 95216, 3141, 120212, 2259,
	-1000, -1000, 3084, -1000, 3107, -144, 26577, -1000, 3687, 3685,
	3132, 3425, -1000, 120212, 3683, 120212, 95216, 3336, -1000, -1000,
	-1000, -1000, -1000, -1000, 1739, 1228, 1227, 2358, -27, 2357,
	2317, -28, 2154, 1031, -29, 612, -1000, 895, -1000, -1000,
	891, -1000, 1031, -1000, 77981, 61145, 3731, 526, -1000, 2670,
	-1000, 100175, 2323, 106, -1000, 3730, 102966, 605, -1000, 2308,
	-1000, 804, -1000, 2535, 73435, 1643, 106, 95216, -1000, -1000,
	526, 386, -30, -1000, 3165, 1127, 26577, 95216, 3128, 2556,
	878, 79095, -1000, 1261, 2691, -1000, -31, -1000, 761, 106,
	2292, -1000, -35, 134569, -1000, 890, -1000, -149, -1000, -1000,
	385, -1000, 3335, 3334, -1000, 2816, 58313, 601, 600, 120212,
	3332, -1000, -1000, -155, -1000, -1000, 2587, 2587, 77981, 61145,
	77981, 77981, 77981, -1000, 1032, 928, -1000, 2464, -1000, -1000,
	-1000, -1000, -1000, 26577, 1765, -1000, 599, 598, -1000, -1000,
	-1000, -1000, 3380, 10147, 10147, 49766, 49766, 49766, 10147, 5661,
	-163, -1000, 10147, 10147, -54, -1000, -1000, 133244, -1000, -1000,
	-1000, 134569, -1000, 21430, 2234, -1000, 129813, -1000, 34206, -1000,
	-1000, 49766, 49766, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 53770, 2915, 597, 71210, -1000, -1000, 376, 1056, 49766,
	51482, 2387, 1056, 1056, -1000, -168, -1000, -1000, -1000, 3643,
	-1000, 3643, 46, -1000, -1000, 3727, 26577, -1000, 77981, -1000,
	-1000, -1000, 3726, -194, 617, -1000, 3724, -1000, -1000, 128,
	-1000, -1000, -1000, 2745, 3557, -1000, 1985, -1000, 120212, -1000,
	120212, -1000, 26577, 120212, 2858, 1309, -1000, 1011, 2583, 596,
	53770, 1165, 95216, 970, 2808, 2803, -1000, 3586, 3445, 2775,
	-170, -1000, 120212, 49766, 120212, -173, -181, 2384, -1000, -1000,
	1163, 1306, 49766, 1162, -1000, -1000, -1000, 71210, 595, 2380,
	2380, -183, -184, -1000, -1000, -1000, 49766, 1226, 120212, 35350,
	-1000, 3722, 3387, -1000, -1000, -1000, -1000, -1000, -1000, 120212,
	-1000, 120212, -1000, 49766, 1225, -1000, -1000, -1000, 3678, 2380,
	26577, 2380, -1000, 2380, 3425, 1182, 120212, 73435, 95216, 1712,
	1712, 2894, -1000, -1000, -1000, 2536, 2536, 77981, 61145, -1000,
	-38, 1031, -1000, 3556, 2664, 3720, -1000, -1000, -1000, -1000,
	2582, -1000, -1000, 120212, 2580, 1023, -1000, -191, -1000, 889,
	886, 80195, 1008, 995, -1000, -39, 593, -1000, 884, -1000,
	-1000, -1000, -1000, 526, 3551, -1000, 3674, 592, 590, 120212,
	2352, 589, 26577, 3379, 878, 79095, -1000, 3263, 1914, -1000,
	2395, 120212, 3376, -1000, 2691, 587, -1000, 1021, 574, 572,
	3333, 3333, -193, 58313, 58313, -196, 571, 1021, -1000, -199,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -40, -1000, 943,
	681, -1000, -1000, 95216, 95216, 49766, 49766, -1000, 10147, 10147,
	10147, -1000, 369, -1000, -1000, 2292, 3443, -1000, -41, 129772,
	129377, 557, 53770, 71210, -201, -1000, -1000, 120212, 134569, -44,
	-1000, 134569, 570, 555, 511, -1000, -1000, -1000, 802, 800,
	-1000, -1000, -1000, 120212, 3719, -1000, 120212, 103516, 120212, -1000,
	-1000, 2081, -1000, -1000, -1000, 120212, 2415, -1000, -1000, -1000,
	1132, 49766, 8198, 53770, 544, 49766, -1000, 543, 542, 3547,
	3299, -1000, 2659, 2889, 1998, 58313, -1000, 3380, -1000, 129336,
	-1000, 1119, 2009, -1000, -1000, -1000, -1000, 134569, 53770, 3425,
	58313, -1000, -1000, 541, 537, 134569, 533, 881, 2914, -1000,
	-1000, -1000, -1000, -1000, 134569, 532, 3517, -1000, -1000, -1000,
	-1000, 2380, 95216, -1000, -1000, -1000, 1222, -1000, -1000, -1000,
	-1000, 3718, 3716, 2913, 84649, -1000, -204, -1000, -1000, 2056,
	106, 2221, 2738, -1000, 2323, 531, -1000, -1000, 2342, 2673,
	-1000, 102966, 34778, 34778, 368, 3546, 995, -1000, 3629, -1000,
	3305, 3305, 49766, 3540, 106, -1000, 3673, 58313, -1000, 95216,
	58313, 2350, 2134, 2539, 79095, -1000, 2552, -1000, -1000, -206,
	120212, 1914, -1000, -1000, 77981, 77981, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1119, -213, -214,
	-1000, 77981, -1000, -1000, 2464, -1000, 120212, -1000, 120212, -1000,
	-1000, -215, -216, -1000, 2012, 49766, 34206, -1000, -1000, 557,
	-226, -1000, -47, -1000, 3539, 51482, 3713, 3710, 3706, -1000,
	-1000, -225, -1000, -225, -1000, 1977, -1000, -1000, -1000, 3125,
	2821, 128941, 8198, 2510, 120212, 128900, 1643, 1643, -1000, 3533,
	2888, -1000, -1000, 2664, 530, -1000, -1000, -1000, -1000, 946,
	120212, 2664, 2813, 95216, 8198, 1128, -228, 2227, 2227, 49766,
	33634, 2258, 49766, -1000, -1000, 3425, 120212, -1000, -1000, 120212,
	2343, -1000, 2883, 3634, -1000, 1008, -1000, 2249, 120212, -1000,
	3408, -1000, 3331, -1000, -1000, -1000, 2670, 106, -1000, -1000,
	-1000, -233, 134569, 106, -1000, 363, -234, 1127, -239, 95216,
	2179, -1000, 878, -1000, 2556, 1059, -1000, -1000, -241, -242,
	1998, 1119, 2209, -244, -1000, -249, -250, -1000, -1000, 361,
	50910, 50910, 50910, -54, -137, -1000, 120212, 529, -1000, -1000,
	-1000, -1000, -1000, 3080, 1030, -1000, 873, 2152, 360, 1135,
	359, 299, -1000, -1000, -1000, 2209, 120212, -1000, -1000, -1000,
	1029, 526, -1000, 49766, 1119, -251, -1000, 1101, -252, -1000,
	1080, -257, -1000, 2904, -1000, -258, 2380, -259, 232, 1712,
	1024, 3501, -1000, -1000, -1000, 2342, 95216, -264, -1000, -1000,
	2425, -1000, 2664, 1023, -1000, -1000, -1000, 1119, 525, 1998,
	524, 1554, 878, -1000, -1000, 1469, 3379, 3269, 1021, 1021,
	2664, 1998, 1018, -1000, 1021, -1000, -1000, -1000, 3253, -1000,
	54914, 2349, 1880, 132388, 3253, 3253, -1000, -1000, 120212, 3476,
	-1000, 916, 915, 1568, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2775, -267, 3473, 2510, 134569, 2664, -1000, 2227,
	2712, -1000, 2227, 2901, -1000, 2237, -1000, -1000, -1000, 2844,
	-1000, 2898, -1000, 1777, 3610, 2528, 523, -1000, 120212, 1863,
	1856, 3704, 2221, 2342, 1998, 58313, 2664, 58313, 2193, -1000,
	120212, -1000, 2134, 1376, -1000, -1000, 2209, 2664, 1059, 522,
	-1000, -1000, 2121, 3581, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 877, -1000, 3287, -1000, 1158, 2080, 2080, 1059,
	-1000, 874, 873, -1000, -1000, 521, -1000, 519, -1000, 2316,
	120212, 2304, -1000, -1000, -1000, -1000, 120212, -1000, -1000, 3702,
	-1000, 1008, -1000, 2664, -270, 2209, -272, -1000, -1000, -1000,
	-225, 2179, -1000, 1638, 1018, 2209, -1000, 1876, -1000, -1000,
	2283, 50338, 49766, -1000, 3603, -1000, -1000, 2636, -1000, -1000,
	49766, 2775, 49766, 49766, -1000, 232, 65647, -275, -1000, 2342,
	2209, 1119, 1018, 1998, 1554, 67320, 1059, 1018, -1000, -1000,
	-1000, 134569, -1000, -1000, -1000, 134569, -1000, -282, -283, -1000,
	-284, 102409, 2355, 2528, 1018, 1998, 1059, 2664, 2193, -265,
	-1000, 1059, 2209, 1209, -299, -1000, -1000, -1000, -1000, 1059,
	2664, -1000, 2209, -1000, -1000, -1000, -1000, -1000, 518, -1000,
	-1000, 2209, 1018, 49766, 1018, 1059, -302, 1059, -1000, 2209,
	-1000, -1000,
}

var sqlPgo = [...]int{
	0, 4506, 4505, 4500, 4498, 4496, 4495, 4494, 4489, 4488,
	4487, 4486, 4482, 145, 4480, 4479, 4478, 4477, 4475, 4473,
	4470, 4468, 4467, 4464, 4463, 4462, 4461, 4460, 4459, 4458,
	4455, 4454, 4453, 4452, 4450, 4448, 4447, 4445, 4443, 4441,
	4440, 4439, 4438, 4437, 4435, 4434, 4433, 4432, 4431, 4430,
	4428, 4427, 4425, 4423, 4420, 4418, 4415, 4414, 4412, 4411,
	4406, 4405, 4403, 4397, 4396, 4395, 4394, 4393, 55, 4392,
	4390, 4388, 4385, 4382, 4381, 4380, 4379, 4378, 4375, 4365,
	4364, 4360, 4359, 4357, 4355, 4354, 4353, 4352, 4349, 66,
	4343, 284, 4342, 4340, 4339, 4338, 4336, 4335, 4333, 4332,
	4330, 4329, 4328, 4324, 283, 4321, 129, 183, 4320, 4319,
	3875, 4315, 4313, 281, 4312, 4311, 4309, 4308, 4307, 290,
	4306, 4305, 4304, 4303, 4302, 4301, 4298, 4297, 4296, 4295,
	4293, 4291, 95, 206, 4287, 4284, 2768, 4282, 4281, 4280,
	4277, 4276, 4275, 4273, 4272, 4271, 4270, 4269, 256, 178,
	4267, 280, 4266, 4264, 4259, 4257, 4255, 4253, 4252, 4251,
	4249, 4247, 4246, 4244, 4243, 4242, 4241, 4239, 4236, 4235,
	4234, 4233, 4232, 4231, 4230, 4229, 4227, 4226, 4225, 4224,
	4222, 4221, 4220, 4219, 4218, 4217, 4216, 4215, 4212, 4211,
	4210, 261, 216, 140, 4208, 4206, 279, 277, 4204, 4202,
	4200, 4199, 4198, 123, 6, 38, 4197, 4196, 122, 97,
	94, 105, 104, 102, 4195, 114, 4194, 147, 68, 4192,
	22, 2, 225, 246, 12053, 244, 4191, 4189, 4188, 248,
	201, 4187, 239, 4186, 4184, 4182, 4178, 4177, 4174, 70,
	51, 186, 182, 179, 175, 86, 4172, 164, 108, 85,
	60, 46, 14, 77, 213, 21, 10, 265, 4171, 264,
	11, 146, 5, 37, 4170, 4168, 4166, 4165, 3842, 136,
	4163, 274, 245, 173, 4162, 4161, 4159, 445, 4158, 4156,
	72, 4155, 190, 106, 135, 16, 131, 4154, 158, 167,
	28, 4153, 181, 83, 4149, 169, 111, 90, 10259, 11138,
	4148, 4147, 128, 71, 93, 308, 185, 166, 200, 205,
	170, 174, 113, 220, 211, 184, 56, 4146, 258, 4141,
	3539, 101, 189, 162, 6093, 4139, 4138, 4135, 87, 204,
	110, 4134, 4131, 79, 17, 32, 3, 1, 148, 20,
	34, 19, 4126, 33, 127, 49, 31, 4120, 24, 4117,
	4115, 4112, 4111, 4110, 44, 172, 4104, 4103, 287, 4099,
	89, 58, 25, 4098, 67, 218, 4097, 232, 138, 4096,
	4095, 262, 210, 188, 4093, 43, 233, 4091, 4090, 4086,
	4078, 4074, 133, 7, 132, 4072, 4071, 153, 4070, 52,
	247, 199, 4069, 62, 4068, 4066, 180, 74, 151, 292,
	134, 224, 125, 228, 192, 240, 4065, 4064, 4063, 219,
	4062, 4061, 226, 157, 4060, 4057, 251, 289, 91, 50,
	82, 238, 84, 198, 165, 4056, 203, 4055, 4054, 286,
	187, 217, 12, 4, 99, 137, 4053, 8, 236, 160,
	234, 118, 4051, 7136, 2644, 2003, 4050, 4046, 156, 126,
	80, 120, 159, 268, 100, 4045, 4043, 3158, 4039, 4038,
	4035, 4034, 194, 4033, 4032, 4031, 163, 222, 257, 4030,
	121, 65, 45, 23, 141, 270, 282, 115, 227, 249,
	259, 4027, 4023, 4021, 193, 4020, 73, 117, 161, 207,
	254, 54, 4017, 119, 4016, 154, 311, 64, 155, 4014,
	229, 4013, 4012, 4010, 4009, 4007, 4002, 4000, 301, 243,
	3999, 3997, 3995, 36, 197, 3994, 266, 150, 176, 96,
	59, 3993, 92, 3407, 3991, 253, 88, 76, 272, 223,
	3987, 1485, 53, 3982, 0, 14586, 8341, 12012, 13665, 3980,
	2481, 3978, 3976, 3973, 215, 152, 3971, 3964, 3962, 107,
	3961, 81, 3960, 3959, 78, 3958, 26, 13, 18, 29,
	27, 267, 171, 3957, 3955, 63, 149, 142, 3954, 285,
	230, 3952, 3949, 3948, 3947, 109, 3944, 42, 3942, 40,
	3940, 3939, 48, 15, 41, 3937, 3936, 209, 3934, 221,
	255, 3933, 168, 3931, 69, 139, 3930, 3928, 3927, 61,
	57, 263, 98, 3926, 278, 3919, 202, 3915, 3914, 3914,
	30, 3912, 3909, 250, 116, 112, 3908, 252, 144, 39,
	214, 191, 212, 3907, 3906, 177, 3904, 3902, 3900, 275,
	3899, 3894, 35, 3887, 3886, 3885, 9, 3884, 3883, 208,
	3305, 3882, 3879, 47, 3877, 196,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	601, 601, 620, 620, 23, 23, 45, 45, 24, 46,
	17, 602, 602, 602, 602, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	597, 597, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 603, 603, 245, 245, 245, 247, 247, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 497, 497,
	497, 529, 529, 529, 528, 528, 624, 624, 625, 625,
	625, 625, 625, 135, 135, 395, 395, 395, 56, 56,
	56, 56, 56, 592, 592, 208, 208, 208, 210, 210,
	209, 209, 209, 209, 209, 80, 80, 609, 609, 610,
	610, 608, 607, 607, 607, 611, 611, 611, 207, 207,
	207, 131, 131, 131, 131, 131, 131, 132, 132, 133,
	133, 211, 211, 211, 213, 213, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 217, 16, 16,
	16, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	109, 109, 531, 531, 532, 532, 202, 202, 203, 203,
	203, 203, 204, 204, 205, 205, 205, 71, 71, 214,
	214, 216, 216, 215, 215, 215, 215, 215, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 59, 59, 59,
	59, 59, 60, 60, 60, 60, 60, 60, 61, 61,
	61, 61, 61, 61, 62, 62, 69, 69, 69, 69,
	69, 69, 69, 193, 193, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 72, 77, 77,
	77, 77, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 627, 627, 628, 628, 629, 629, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 86, 86, 356, 356, 319, 319, 87,
	87, 87, 88, 88, 89, 89, 73, 73, 590, 590,
	372, 372, 488, 488, 74, 598, 598, 598, 600, 600,
	599, 599, 91, 91, 394, 394, 92, 92, 92, 92,
	92, 92, 93, 93, 93, 93, 93, 93, 93, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 101, 101, 101, 101, 101, 102, 102,
	102, 99, 99, 99, 96, 96, 96, 95, 95, 95,
	100, 100, 100, 589, 308, 308, 98, 98, 98, 97,
	97, 97, 373, 373, 103, 103, 103, 103, 320, 104,
	104, 104, 104, 104, 104, 104, 104, 107, 107, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 490, 490, 105, 105, 105, 455, 455, 110,
	110, 110, 410, 410, 111, 111, 111, 111, 111, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 134, 134,
	134, 134, 134, 134, 134, 134, 594, 594, 365, 365,
	271, 271, 271, 271, 123, 123, 123, 123, 124, 124,
	124, 125, 125, 198, 198, 141, 141, 141, 141, 140,
	140, 140, 140, 140, 140, 140, 140, 63, 63, 63,
	64, 64, 65, 65, 66, 66, 67, 67, 68, 68,
	68, 68, 68, 144, 144, 621, 621, 146, 143, 143,
	143, 143, 143, 142, 142, 145, 145, 145, 145, 147,
	149, 149, 149, 149, 149, 148, 148, 148, 148, 150,
	150, 522, 522, 381, 381, 520, 520, 541, 541, 521,
	521, 326, 326, 326, 326, 326, 327, 327, 327, 530,
	530, 530, 530, 530, 530, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 199, 199,
	200, 201, 201, 201, 201, 201, 176, 176, 176, 192,
	192, 192, 192, 192, 192, 192, 192, 179, 179, 179,
	163, 163, 152, 152, 152, 152, 152, 152, 152, 157,
	157, 157, 157, 157, 157, 157, 157, 153, 153, 165,
	165, 165, 165, 165, 158, 158, 159, 159, 159, 160,
	160, 160, 160, 186, 186, 162, 162, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 154, 154, 154, 154,
	167, 167, 167, 167, 417, 417, 417, 191, 191, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 189, 189, 189, 189, 189,
	189, 612, 612, 613, 613, 613, 183, 183, 183, 183,
	183, 183, 469, 469, 177, 177, 177, 177, 182, 182,
	182, 182, 185, 185, 185, 185, 400, 400, 174, 174,
	174, 175, 175, 175, 180, 180, 181, 357, 357, 178,
	178, 184, 184, 184, 184, 155, 155, 155, 155, 155,
	155, 155, 156, 156, 156, 156, 187, 187, 173, 173,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 631, 631, 169, 169, 169, 168, 168, 168, 168,
	171, 171, 172, 172, 172, 172, 172, 172, 170, 161,
	190, 591, 591, 587, 587, 587, 587, 587, 587, 587,
	587, 588, 588, 588, 588, 593, 593, 115, 115, 115,
	115, 115, 115, 115, 126, 126, 126, 126, 126, 126,
	126, 129, 129, 116, 116, 116, 116, 116, 116, 116,
	119, 119, 117, 117, 117, 117, 118, 118, 81, 81,
	81, 81, 81, 15, 15, 15, 82, 82, 262, 262,
	220, 220, 220, 345, 345, 221, 221, 334, 334, 334,
	334, 218, 218, 219, 219, 83, 83, 632, 632, 632,
	604, 604, 604, 605, 605, 605, 605, 605, 605, 328,
	328, 329, 329, 435, 435, 435, 435, 435, 332, 332,
	332, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	335, 335, 246, 246, 246, 343, 344, 344, 336, 336,
	342, 341, 341, 340, 340, 339, 339, 337, 338, 338,
	338, 347, 347, 346, 349, 349, 348, 434, 550, 550,
	552, 552, 552, 552, 552, 552, 552, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 418, 418, 633, 633, 634, 635,
	548, 548, 548, 549, 544, 544, 545, 545, 545, 545,
	545, 330, 330, 331, 331, 331, 331, 546, 547, 363,
	363, 473, 551, 551, 553, 553, 555, 636, 636, 636,
	636, 636, 636, 637, 637, 637, 433, 433, 432, 432,
	354, 354, 556, 556, 556, 556, 557, 557, 557, 557,
	557, 560, 559, 558, 558, 558, 558, 558, 85, 85,
	85, 397, 397, 396, 396, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	195, 195, 274, 274, 79, 79, 79, 12, 12, 12,
	12, 12, 12, 12, 289, 289, 13, 13, 13, 606,
	606, 606, 84, 84, 84, 84, 84, 84, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 596, 596,
	595, 595, 275, 275, 639, 639, 90, 90, 90, 90,
	90, 90, 90, 90, 491, 491, 492, 492, 78, 78,
	78, 78, 78, 419, 419, 416, 416, 415, 415, 362,
	362, 471, 471, 471, 472, 279, 279, 280, 280, 239,
	239, 239, 31, 30, 21, 21, 26, 26, 27, 27,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 28,
	28, 49, 49, 49, 49, 50, 50, 50, 50, 53,
	53, 54, 54, 48, 48, 48, 48, 51, 51, 44,
	44, 55, 55, 55, 55, 55, 614, 616, 616, 615,
	615, 619, 619, 619, 619, 619, 619, 617, 617, 618,
	618, 622, 622, 623, 623, 122, 122, 127, 127, 127,
	127, 127, 128, 128, 128, 128, 130, 130, 130, 130,
	139, 139, 194, 194, 194, 194, 194, 194, 194, 57,
	57, 57, 57, 70, 70, 70, 70, 137, 641, 641,
	641, 138, 138, 138, 640, 640, 272, 272, 429, 429,
	430, 430, 642, 642, 431, 431, 431, 431, 431, 265,
	264, 266, 266, 267, 267, 76, 76, 76, 255, 255,
	254, 256, 256, 257, 257, 252, 252, 533, 533, 259,
	259, 259, 260, 260, 248, 248, 249, 249, 250, 250,
	251, 251, 263, 263, 643, 643, 113, 113, 113, 197,
	197, 318, 318, 318, 426, 426, 426, 355, 355, 286,
	286, 428, 428, 428, 428, 393, 393, 393, 196, 196,
	370, 370, 383, 383, 384, 384, 485, 485, 385, 120,
	120, 121, 121, 136, 136, 224, 224, 222, 222, 222,
	222, 222, 222, 222, 222, 229, 229, 230, 230, 231,
	231, 232, 233, 233, 233, 233, 374, 374, 234, 234,
	234, 223, 223, 223, 225, 225, 225, 225, 225, 225,
	225, 228, 228, 228, 228, 235, 235, 235, 227, 227,
	567, 567, 567, 569, 569, 571, 571, 570, 570, 566,
	566, 568, 568, 638, 638, 399, 399, 399, 352, 353,
	350, 350, 351, 351, 360, 360, 358, 359, 359, 361,
	361, 470, 470, 470, 240, 240, 240, 390, 390, 390,
	390, 391, 391, 422, 422, 420, 420, 420, 420, 421,
	421, 423, 423, 423, 424, 424, 425, 425, 387, 387,
	388, 388, 389, 389, 389, 389, 451, 451, 226, 226,
	226, 367, 367, 367, 368, 368, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 442, 442, 440, 440,
	440, 440, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 475, 476, 476, 369, 369, 477, 427, 427, 585,
	585, 585, 586, 586, 468, 468, 478, 478, 478, 478,
	478, 478, 466, 466, 467, 467, 486, 487, 487, 403,
	403, 403, 403, 401, 401, 404, 404, 404, 404, 404,
	402, 402, 479, 479, 479, 479, 392, 392, 480, 480,
	480, 480, 481, 482, 482, 483, 483, 436, 437, 437,
	493, 493, 493, 493, 495, 366, 366, 366, 366, 366,
	543, 542, 542, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 510, 510, 510, 510, 510, 510,
	510, 496, 496, 496, 496, 496, 500, 500, 500, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	501, 501, 506, 506, 507, 507, 507, 502, 503, 508,
	508, 508, 508, 644, 644, 512, 512, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 498, 498, 498, 505,
	505, 505, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 411, 411, 413, 413, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	445, 445, 445, 445, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 561,
	561, 561, 561, 561, 561, 561, 561, 447, 447, 564,
	564, 565, 565, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 572, 572, 573, 573, 575, 575,
	576, 576, 577, 578, 578, 578, 579, 580, 580, 574,
	574, 581, 581, 581, 581, 582, 582, 583, 583, 583,
	583, 583, 584, 584, 584, 584, 584, 457, 457, 458,
	458, 464, 464, 464, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 325,
	325, 324, 276, 276, 276, 276, 276, 276, 379, 379,
	377, 377, 377, 380, 380, 378, 378, 376, 376, 375,
	375, 454, 454, 452, 452, 456, 456, 405, 405, 511,
	511, 511, 511, 511, 511, 511, 511, 406, 406, 406,
	414, 407, 407, 408, 408, 408, 408, 408, 448, 449,
	409, 409, 409, 450, 450, 459, 463, 463, 462, 461,
	461, 460, 460, 438, 438, 439, 439, 386, 386, 645,
	645, 382, 382, 484, 484, 484, 484, 322, 322, 371,
	371, 321, 321, 313, 313, 314, 314, 314, 314, 364,
	364, 465, 465, 513, 513, 514, 514, 515, 515, 516,
	516, 517, 518, 519, 453, 453, 297, 296, 283, 284,
	295, 294, 293, 282, 285, 290, 291, 292, 287, 288,
	304, 303, 302, 253, 258, 309, 310, 310, 312, 312,
	311, 311, 299, 300, 301, 489, 281, 315, 315, 316,
	316, 316, 317, 317, 317, 317, 277, 277, 278, 278,
	305, 305, 306, 307, 307, 298, 298, 298, 268, 268,
	268, 269, 269, 270, 270, 527, 527, 524, 524, 524,
	525, 525, 525, 526, 526, 526, 526, 523, 523, 523,
	523, 523, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 535, 535, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 537, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 540, 540,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 4, 3, 6, 6, 6, 6,
	6, 8, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 6, 3,
	8, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 9, 10, 5, 2, 6, 4,
	7, 7, 7, 10, 5, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 3,
	2, 2, 6, 3, 3, 3, 3, 4, 4, 3,
	1, 3, 3, 2, 2, 1, 3, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 6, 4, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 5, 3, 5, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 3, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 5, 2, 0, 3,
	3, 4, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 3, 4, 5, 4, 4, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 4, 3, 4, 4,
	5, 1, 1, 10, 10, 3, 5, 5, 5, 3,
	5, 6, 4, 4, 5, 5, 2, 3, 2, 5,
	4, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 7, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 13, 16, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	11, 12, 9, 5, 3, 1, 5, 10, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 7, 10, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 6, 8, 8, 4, 7, 3, 0, 7,
	10, 1, 1, 1, 1, 2, 2, 3, 0, 3,
	0, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 13, 16, 3, 1, 0,
	4, 1, 0, 2, 2, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 603, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 204, 387, 432, 444, 402, 143, 423, 407,
	-145, -146, 462, -57, -70, -138, -137, 73, 130, 417,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -626, 102, -568,
	-94, -97, -130, -630, 162, 222, -116, -117, -118, 369,
	-124, -125, 425, -127, -128, -129, 428, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 467, -181, -190, -159, 528, 49, 482,
	82, 147, 436, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -567, -95, -96, -99, -101, -102, -98, -100,
	424, -225, -223, 600, 543, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 564, 573, -228, -226, -227, -235, 454,
	551, 502, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, -320, 2, -299, -305, -306, -307,
	-298, -268, -537, -540, 4, -534, -538, 169, 232, 333,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 510, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 186, 190, 191,
	192, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	205, 209, 211, 212, 213, 214, 215, 221, 222, 224,
	225, 226, 227, 228, 233, 234, 235, 239, 236, 245,
	246, 250, 251, 252, 254, 258, 259, 260, 261, 262,
	263, 265, 267, 266, 269, 272, 273, 276, 277, 278,
	279, 280, 281, 285, 286, 282, 287, 288, 290, 291,
	294, 292, 295, 296, 293, 297, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 298, 313,
	311, 315, 316, 317, 318, 331, 327, 328, 322, 323,
	319, 324, 320, 321, 325, 326, 330, 335, 336, 339,
	219, 341, 342, 345, 363, 349, 350, 351, 354, 355,
	358, 361, 362, 364, 365, 366, 367, 368, 369, 370,
	371, 372, 374, 375, 377, 378, 379, 381, 382, 383,
	385, 387, 388, 390, 391, 393, 394, 395, 396, 397,
	398, 399, 401, 402, 404, 403, 405, 407, 409, 410,
	411, 417, 423, 419, 420, 421, 422, 424, 425, 426,
	427, 428, 430, 431, 432, 434, 435, 436, 437, 438,
	440, 442, 443, 447, 448, 464, 465, 484, 444, 445,
	446, 449, 450, 451, 452, 453, 457, 455, 456, 458,
	459, 460, 462, 463, 466, 467, 469, 470, 471, 472,
	473, 474, 475, 478, 480, 481, 482, 501, 483, 485,
	489, 490, 491, 492, 486, 487, 500, 494, 495, 497,
	498, 503, 504, 505, 506, 507, 508, 509, 511, 513,
	521, 522, 523, 525, 528, 529, 530, 531, 519, 533,
	534, 537, 538, 539, 542, 540, 541, 543, 545, 548,
	549, 550, 556, 555, 557, 559, 560, 565, 566, 568,
	569, 570, 36, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 125, 126, 154, 165, 166, 178, 193, 194,
	206, 208, 216, 217, 218, 240, 241, 243, 248, 270,
	338, 340, 356, 360, 376, 380, 384, 386, 400, 439,
	476, 488, 493, 514, 515, 516, 517, 524, 526, 551,
	552, 553, 558, 567, -320, 2, -299, 347, -292, 2,
	-268, -268, 387, 28, 2, 28, 375, 456, 505, 507,
	2, -594, -365, 2, 28, -271, -268, 102, 204, 454,
	-292, 2, -594, -365, 25, 2, -268, 2, 361, 22,
	27, 66, 77, 98, 141, 164, 187, 190, -629, 363,
	394, 442, 458, 500, 511, 525, 2, 555, 291, 455,
	502, 232, 120, 530, 449, -606, 447, 448, 361, 392,
	434, 207, 544, -272, 2, 444, -268, 291, 2, 603,
	94, 74, 439, 459, -148, 2, 281, 522, -149, -150,
	-147, 514, -522, 449, 434, 313, -268, 603, 603, 603,
	28, -281, -268, 502, 232, 449, 120, 498, 603, 2,
	502, 366, 555, 455, 120, 397, 232, 530, 190, 141,
	27, 449, -606, 578, 579, 291, 127, -592, 2, -587,
	4, -538, -534, -314, -313, 502, 508, 120, -307, -298,
	593, -306, 603, 603, 603, 603, 2, 251, 252, 396,
	395, 459, 460, 28, 603, 603, 603, 603, 447, 2,
	164, 22, 27, 66, 93, 98, 127, 187, 190, 352,
	-627, 363, 394, 458, 500, 504, 511, 525, -605, 483,
	68, 422, 449, -604, -606, 291, 530, 141, -415, 120,
	281, 202, 538, 507, 505, 536, 133, 239, 541, 540,
	603, 603, -107, 2, 600, 32, 31, -106, -110, 143,
	462, -217, 502, 244, 2, -268, 603, 603, 603, 2,
	251, 252, 447, 448, 28, 603, 603, 188, -587, 2,
	603, 603, 603, 2, 28, 251, 252, 447, 448, 244,
	2, 68, 451, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 2,
	-192, 459, 483, 213, 47, 46, 74, 28, 393, 79,
	367, 121, 127, 149, 531, 205, 232, 233, 259, 93,
	94, -417, 44, 252, 68, 251, 448, -612, 447, -469,
	503, 450, 456, 497, 263, 444, 522, 102, 545, 435,
	570, 397, 398, 495, 411, 282, 158, 189, 4, 120,
	313, 434, 461, 514, 281, 443, 370, 84, 603, -638,
	2, 502, -640, 2, 522, 522, 2, -640, 2, -640,
	2, -640, 2, -641, 522, 567, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, -223, -225, -224, 603, 603, 603,
	603, 603, 603, 603, -192, 459, 2, 74, 28, -358,
	-360, 535, 242, 151, 353, -222, -224, 2, -567, -520,
	2, -443, -541, -445, 591, 592, 584, 499, 67, -324,
	332, 571, -457, 127, 536, 347, -540, -446, -459, 154,
	363, 439, -380, 8, 9, 5, 6, 7, -277, -447,
	-453, 527, 168, 337, -317, 604, 10, 600, -564, -224,
	-458, 37, 208, 65, -524, -316, -278, -496, 243, -315,
	-298, -561, -562, 4, -534, -535, -525, -499, -507, -503,
	-504, -510, -268, -537, 77, 111, 112, 110, 115, 114,
	284, 283, 116, 113, 461, 544, 66, 36, 216, 217,
	248, 338, 218, 75, -563, 142, -536, 240, 241, 476,
	51, 400, 178, 126, 125, 340, 56, 54, 552, -508,
	122, 514, 515, 516, 517, 193, 194, 58, 165, 166,
	360, 384, 493, 524, 526, 206, 270, 43, 106, 189,
	238, 220, 247, 249, 253, 271, 274, 314, 329, 334,
	357, 359, 433, 468, -644, 553, 488, 69, 70, -569,
	403, -570, -292, -569, 603, 603, 605, 603, -350, -352,
	-353, 2, 28, 139, 600, 2, -474, 2, -475, -479,
	-224, 264, -478, 600, -476, 598, -299, 348, -565, 440,
	-561, -562, -277, -298, -316, 4, -534, -536, 602, -354,
	600, 120, 449, 502, 78, 232, 93, 164, -410, 600,
	-268, 28, 347, 518, 605, -351, 391, -455, 600, 347,
	188, 350, 60, 295, 2, 2, 2, 2, 2, 216,
	-268, 502, 119, 2, 262, 2, 2, 2, 2, 2,
	2, 2, -373, 216, 2, -299, 555, -373, 216, 2,
	-373, 216, 2, -416, 2, 87, -282, 216, 2, -268,
	-308, 216, 2, -303, -305, -312, 216, 2, -310, -268,
	-532, 216, 2, -531, -527, 10, -526, 5, 4, -534,
	-538, -535, -537, 77, -443, 2, -136, 2, 60, -268,
	555, 2, 464, 2, 600, -148, 2, 71, 522, 43,
	459, -149, 2, -430, 2, -431, -264, -265, -266, -486,
	-267, 250, 390, 399, 574, 131, 332, 570, -621, 188,
	583, 518, -520, -520, -520, -381, 602, 2, 2, 2,
	2, 2, 2, -479, 216, -299, 2, -296, -523, 4,
	-534, -538, -535, -539, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 127,
	131, 135, 139, 140, 144, 147, 151, 168, 170, 183,
	187, 188, 204, 207, 210, 223, 237, 242, 244, 264,
	268, 275, 283, 284, 332, 337, 343, 347, 348, 352,
	353, 373, 389, 406, 429, 454, 461, 479, 496, 502,
	512, 518, 520, 527, 535, 536, 544, 546, 554, 561,
	562, 563, 564, -540, 2, -479, 216, 2, -302, 216,
	-479, -305, 2, -282, 2, -295, -523, 2, -321, 216,
	-299, -301, -305, -303, 2, 2, 2, 2, -310, 2,
	-531, 216, 2, 28, 28, 555, 391, 244, 518, 605,
	-371, -313, -314, -519, 8, -364, -268, 602, -443, 2,
	-136, -119, 2, 183, -443, 216, 2, -136, 216, 2,
	-443, 216, 2, -136, 216, 2, -268, 2, -607, 2,
	-531, 216, 216, -268, 2, 295, 2, 2, 525, 2,
	98, 502, 119, 2, 421, -628, 442, 529, 2, 2,
	2, 2, 2, 2, 2, 502, -287, 2, -268, 183,
	486, -310, 216, -311, 2, 455, -639, 403, -531, 216,
	2, 555, -303, 216, 2, -303, 232, 246, -282, 216,
	2, 507, 505, 507, 505, 188, 2, 244, 2, 244,
	2, -480, 2, -481, -475, -482, 598, 348, -490, 2,
	-489, -526, 551, -107, 600, -107, 600, 459, 600, -531,
	-299, -299, -443, 2, -136, -119, 2, -443, 2, -136,
	2, -268, 2, -133, -531, -132, 600, 188, -268, 2,
	-443, 2, -136, -119, 2, -443, 2, -136, 2, -217,
	183, 2, 120, 502, -192, 2, 183, 546, 2, 8,
	2, 223, -531, 450, 398, 175, 2, 464, 2, 465,
	74, -417, 570, 74, 188, 2, 188, 2, -400, 2,
	564, 391, 188, 2, 2, -591, 2, 347, 188, 2,
	188, 2, 188, 2, 188, 2, 188, 2, -191, 460,
	523, 501, 395, 252, 2, -136, 561, -119, 252, 251,
	-443, 561, 2, -613, 183, 448, -443, 2, 521, 261,
	159, 188, -400, 2, 188, 2, 188, 2, 5, 2,
	396, 484, 2, 250, 390, 484, 2, -299, 502, 555,
	455, 120, 28, 2, 447, 2, 2, 88, 89, 188,
	2, 188, 2, 203, 188, 2, 188, 502, 570, 2,
	-392, -479, -429, -430, -429, 518, -358, -360, -192, 464,
	2, -229, -390, -231, 183, -420, -421, -232, 275, 170,
	343, -233, -399, 28, 139, -399, -399, 60, 601, 601,
	11, 12, 76, 41, 591, 592, 593, 594, 181, 595,
	596, 589, 590, 588, 581, 582, 586, 256, 257, 95,
	585, 583, 86, 289, 441, 171, 172, 173, 174, 418,
	230, 34, 231, 14, 15, 16, -324, 33, 352, 274,
	571, 220, 468, 584, 17, 18, 19, 247, 249, 334,
	50, 223, -276, 363, -323, 499, 67, -443, -443, -443,
	-443, -443, -443, -443, -443, 359, 600, -386, -438, 598,
	-224, 600, 600, 600, 600, -519, -224, -443, -457, 601,
	-378, 600, -224, -457, -452, 600, 439, 598, 600, -460,
	-443, 5, 5, 5, 600, 602, -572, 565, 183, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 386, -501, 600, -500, 600,
	-500, -500, 556, -498, 600, 573, 566, 600, -498, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 556, 605, -569, -354, 600, -382, -484, -443,
	593, -382, -382, 347, -375, -443, 106, -403, 253, 314,
	189, 271, 433, 238, -440, 604, -440, -468, 573, -224,
	-476, -298, -224, -478, 600, -474, -468, -108, -519, -91,
	-104, -113, -136, -151, -196, -197, 593, -299, 600, 188,
	600, 602, -523, 188, -364, -282, -309, -268, -299, -315,
	-316, -321, -293, -268, 2, 138, -375, -587, 530, 449,
	28, 455, -364, -271, 38, -454, -493, -494, -543, 604,
	-542, -496, -506, -502, -505, 376, 380, -525, 54, 552,
	-508, 243, 4, -534, -536, 240, 241, 476, 51, 400,
	178, 126, 125, 340, 56, 514, 515, 516, 517, 193,
	194, 58, 553, 488, 69, 70, -587, 530, 449, 28,
	455, -364, 183, -364, 2, 2, 154, 2, 2, 2,
	-268, -245, 605, 64, 426, 154, -373, 216, -245, 154,
	-245, 154, -322, 216, -321, -245, 154, -245, 605, 154,
	-245, 605, 154, 602, 605, 154, -364, 2, -416, -522,
	-375, 38, -430, 2, 127, -528, -526, 5, -642, 605,
	273, -327, 288, 331, 212, 348, 568, 341, 131, -530,
	5, 4, -453, -465, 127, 281, 243, -513, -515, 8,
	-514, 9, -516, 591, 592, -521, -520, 109, 602, -523,
	-242, 419, 462, 362, -241, 24, 29, 143, 234, 318,
	549, 160, -340, 235, -337, 366, 154, 480, 539, -601,
	-602, 446, 509, 510, 90, 341, 462, 362, 419, 154,
	-396, -398, 38, 118, 318, 361, 61, 227, 293, 294,
	482, 558, 154, 462, 362, 419, 362, -13, -257, 24,
	143, -259, -254, 462, -602, 99, 419, 577, 424, 372,
	494, 389, -602, -244, 480, 539, -601, -602, 446, 419,
	-243, -342, -337, 366, 154, 604, 24, 143, 419, 462,
	362, -624, -625, 29, 419, 362, -595, -289, -566, 223,
	564, 154, -289, -289, -479, 216, -617, 183, 2, -610,
	-132, 265, 5, 10, -531, -132, -371, 605, 605, -523,
	593, 448, 447, 154, 154, 154, 154, 252, 183, 332,
	332, 2, 2, 2, 2, 2, 190, -604, -629, 2,
	2, -299, 216, -356, 347, -590, -372, 502, -299, 183,
	332, 43, -302, 216, 2, -305, 555, -595, 332, -304,
	216, -299, 38, 600, 332, 2, -416, 2, 232, -566,
	332, -480, -318, -299, -475, -318, 462, -292, 38, -440,
	-299, 601, 605, -490, -490, -531, -205, 564, 188, 102,
	600, 600, -217, 564, 564, 252, -487, 605, -486, 223,
	-532, -133, -531, 422, 252, -531, -590, -282, 2, -299,
	2, 502, 254, -531, -205, 223, -531, -531, -531, -522,
	28, 465, 2, -191, 460, 523, 89, 465, 2, -299,
	502, 120, 232, 80, -617, 183, 2, -268, -593, 183,
	-588, 434, 449, 530, -587, -299, 120, -299, 120, -299,
	120, -299, -299, 2, 2, 2, 2, 2, 85, 2,
	-136, -443, 2, 85, 2, 46, 481, -613, 183, 2,
	521, 2, 521, 2, -268, -268, -268, 483, 273, -299,
	-299, -299, -300, -305, 503, 448, -443, 2, -631, 2,
	188, 183, 2, 502, 232, 502, 232, 120, 188, 74,
	120, 28, 502, 445, -245, 605, -272, -229, -390, -522,
	-391, -390, -230, -229, -232, 183, 399, 540, 318, 466,
	258, -421, -420, 28, -443, -425, 177, 317, -443, -423,
	-445, 591, 592, -514, -516, -374, 341, -223, -223, -223,
	-361, -470, -443, 389, 232, -495, -493, -493, -297, -523,
	514, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, 274, 220, 468,
	50, 223, -443, 518, -443, -443, -443, -443, 311, 332,
	337, 527, 168, 537, 139, 341, -645, 496, 40, -450,
	-224, -379, 600, -464, 35, 479, 28, -457, 600, 2,
	-438, -443, -439, -325, -323, -268, 591, 592, 593, 594,
	595, 596, 581, 582, 583, 14, 15, 16, 586, 590,
	588, 589, 181, 95, 585, 289, 441, 86, 171, 172,
	173, 174, 256, 257, 17, 18, 19, 34, 584, -376,
	-375, -375, 601, 554, 28, 139, 593, 2, 601, 605,
	38, 601, -443, -376, -456, -452, -375, -463, -462, 561,
	-411, -412, 569, 298, 123, 214, 296, -413, 453, -517,
	8, -523, 593, -573, 176, 207, 600, 601, 2, 601,
	2, 601, -443, 2, 601, -443, 2, 601, -443, 2,
	601, -443, 2, 601, 2, 601, 2, -443, -443, -443,
	-443, -443, -443, -443, -375, 8, -517, -517, 514, 514,
	-517, -517, -517, -509, 376, 377, 378, 379, 276, 277,
	278, 279, 380, 381, 382, 383, 303, 304, 305, 306,
	299, 300, 301, 302, 307, 308, 309, 310, 198, 199,
	200, 201, 194, 195, 196, 197, -509, -405, 2, -511,
	-375, 4, 569, 298, 123, 214, 296, 453, 5, -405,
	2, -406, 2, -443, -375, -407, -444, -445, 591, 592,
	584, -324, -457, -408, 2, -443, -376, -443, 57, 268,
	520, -409, -443, 188, -375, -375, 2, -375, 2, -570,
	38, -375, -367, 605, 188, 38, 4, -367, -367, 600,
	601, 605, -404, 211, 292, 287, 246, -404, -474, -403,
	253, -401, 357, -401, -401, -468, -283, 598, 606, -523,
	-468, -467, -466, 38, -292, 354, -468, -468, 602, 601,
	-467, 599, -585, 600, 603, 603, 603, 603, 603, -299,
	600, -375, -523, 602, 485, 2, 601, 247, 247, 247,
	247, 247, 347, 440, 601, 518, -589, -308, -312, 503,
	2, 564, -106, 349, 601, 605, -366, 37, 598, 602,
	-517, 2, 2, -512, 556, 600, 600, -412, 600, 188,
	-589, -312, 503, 2, -365, 518, -268, 2, -299, -373,
	-245, 154, -373, -373, -245, 605, 154, -282, -303, -308,
	-310, -312, -268, -531, -532, -245, -304, -621, 601, 522,
	-431, -326, 399, 478, 420, 457, 498, 8, 9, 8,
	9, 605, -523, 605, -622, 93, 518, 78, 449, -261,
	282, 518, -434, 216, 78, -544, -285, 93, -545, -268,
	72, 536, 389, 187, 152, -622, 93, 389, -622, 93,
	2, 234, 93, 462, 483, 28, 60, -479, 41, 41,
	28, -620, 330, 269, 560, 188, 570, 502, 232, 449,
	518, 518, -479, -398, -493, 118, 293, 294, 60, -518,
	-513, 591, 592, -518, 60, -518, -518, -518, 564, -302,
	-479, 449, 518, 518, 518, 409, 409, -254, -149, 518,
	518, 28, -192, 427, 127, -643, 583, 409, 605, 41,
	41, 28, -620, 330, 269, 188, 518, -321, -283, 550,
	42, 550, 42, 550, 518, 42, 449, 518, 605, 42,
	518, 518, -13, 462, -596, -273, 105, 324, 286, 325,
	97, 321, 96, 320, 103, 322, 104, 323, 557, 335,
	63, 319, 297, 326, -274, -275, 368, 548, 120, -531,
	-13, -13, 462, 362, 419, 154, -618, 223, 28, -606,
	223, -487, 223, -487, -313, -268, 602, -136, -443, -443,
	-136, -443, -136, 46, 154, 154, 2, -639, 262, 600,
	-330, 332, 188, -364, -488, 244, 605, -372, -587, 154,
	-529, -528, 116, 461, -397, -396, 332, -304, 216, 2,
	154, -354, 332, 148, 600, 397, 2, 154, -284, 216,
	-269, -268, -416, -248, 506, 154, -394, 546, -426, -136,
	600, 127, 38, -426, -383, -384, -485, -385, -285, 600,
	-292, -440, -107, -489, 601, 601, 601, -204, 351, -203,
	-268, 5, -217, 546, -329, -435, -434, -548, -549, -544,
	274, 232, 536, 246, 169, -355, -286, -285, 119, 401,
	401, -211, 564, -132, -133, 601, -487, 223, 486, -205,
	-205, -487, -487, -299, 183, -531, -205, -205, -205, 2,
	2, 2, 2, -400, -299, -282, -321, -299, 28, 602,
	-364, -364, -312, -308, -400, -282, -400, -282, -400, -282,
	-400, -400, -136, -443, 483, 2, 459, 183, 183, 602,
	-400, -357, 429, 2, 397, 120, 502, 366, 232, -299,
	-321, -299, -321, -282, 120, -282, 121, -299, -479, -391,
	-230, 348, 258, 466, -423, -424, -445, 439, 440, -424,
	439, 440, 8, 9, 8, 9, -234, 470, 336, -373,
	605, -239, 39, 135, 258, -299, 570, 150, -443, -443,
	518, -645, 496, -450, 150, -443, 311, 337, 527, 168,
	537, 139, 341, 188, 600, -444, -444, 601, -377, -443,
	-443, 599, 608, 601, 602, 601, -360, 605, -358, -443,
	-375, -375, 601, 602, -375, -364, 599, 599, 605, 601,
	-461, -462, 144, -443, 518, 518, 518, 518, 600, 601,
	602, -578, 358, 600, 600, -443, 601, 601, 601, 601,
	38, 605, 605, 605, 601, 605, 605, 605, 601, 601,
	601, 605, 601, 570, 570, 601, 601, 601, 601, 605,
	601, 605, 601, 188, 601, 601, -414, 373, 601, 11,
	12, 591, 592, 593, 594, 181, 595, 596, 589, 590,
	588, 581, 582, 583, 86, 289, 441, 14, 15, 16,
	-324, 247, 223, -444, -444, -444, -444, 601, -448, -449,
	188, 183, 38, -409, -409, -409, 601, 188, -375, 601,
	601, 600, -571, 291, 332, 601, -437, -436, 562, -484,
	-368, 2, -474, -294, -523, -437, -437, -375, -443, 253,
	253, -402, 546, 347, -404, -474, -467, -519, -442, -441,
	185, 39, 135, 327, 328, 219, 186, -467, -292, -354,
	-467, -467, -523, -468, -468, -466, 601, -586, -519, 601,
	-369, -477, -565, -360, 602, -523, -214, -566, -193, 5,
	337, -193, -193, -193, -193, -299, -364, 518, 518, 223,
	25, 374, -493, 598, 599, 8, -523, 600, -517, -517,
	-517, -364, 188, 188, 223, 188, -529, 2, -245, -373,
	-245, -245, -321, -322, -245, -245, -245, -395, 564, -520,
	-430, 534, 83, 399, 514, -520, -241, 419, -285, -285,
	-299, -309, 202, 410, -529, 332, -434, 216, -247, 332,
	-493, -293, 600, -418, 566, 258, 258, 546, -285, -293,
	258, 216, -285, 216, -293, 2, -293, -597, 399, 342,
	-443, 60, -338, 280, 397, 333, -242, 419, 462, 362,
	-136, -136, -136, -136, -136, 600, -621, 546, 138, -299,
	-321, -299, -309, -529, -304, 462, 362, 419, 329, -315,
	-518, -518, -396, 462, 362, 419, -309, -529, -302, -529,
	-253, 216, -268, -253, 216, 449, -282, 409, 570, 45,
	-643, -243, -136, -136, -136, -136, -136, 600, -283, -244,
	419, 5, 216, -285, 5, -285, 216, 5, -268, -285,
	-309, -529, -625, 24, 143, -285, -309, -529, -273, -531,
	337, 542, -282, -595, -289, 449, 518, 518, -479, -614,
	-615, 204, 432, 449, 435, -364, -132, -208, 564, -132,
	-202, 228, 593, -592, -531, -268, 555, -268, -328, -331,
	-329, -285, -220, -221, 566, 564, 154, -319, -299, 598,
	-205, -531, -299, -488, -310, -311, 154, -354, 332, -531,
	38, 154, 600, 2, 2, -303, 347, 332, -284, 216,
	-249, 145, -643, -282, -437, -368, -393, -428, 429, 347,
	-355, 551, -292, -393, -370, 605, 188, 583, 602, -355,
	-483, 593, -107, -107, -205, 605, 600, 583, 583, 600,
	-531, -531, 601, 605, -247, -299, -284, 232, 232, -291,
	-269, 601, 605, 602, 600, 583, 583, -213, 351, -212,
	146, 260, 245, 472, 473, 474, 475, 137, 471, 124,
	316, -487, -211, -133, 188, 188, -66, 564, 502, -205,
	604, 435, -268, -400, -400, -400, 459, 459, -268, -364,
	-295, -282, -299, -296, -321, 183, 183, -282, 540, -424,
	348, 285, -470, -240, 572, -299, 604, -443, -443, 150,
	150, -443, -444, -444, -443, 150, 188, 600, -443, -454,
	33, 33, 601, 605, -439, -443, -323, 601, 554, -360,
	-360, 601, 593, -523, 604, 601, -452, 147, -443, 512,
	298, 214, 296, -413, 296, -413, -413, -517, 5, -523,
	593, -579, -288, 600, -268, 562, -359, 353, 601, -495,
	-493, -443, -443, -443, -443, -443, -517, -498, -498, -513,
	-513, -443, -448, -443, -495, -493, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, 139, 332, 341, -444,
	-449, -448, -443, -443, -493, 601, 601, 601, -375, -106,
	600, 291, -387, 207, -443, -487, 605, -387, -387, 601,
	-474, -474, 600, -443, 253, 599, 605, 607, 583, 583,
	-354, 602, -466, -467, 599, 601, 605, 601, 605, -427,
	38, 601, -523, -437, -216, -215, 136, 53, 107, 134,
	337, 247, -364, -364, 449, 350, 5, 8, 598, 599,
	602, -517, 601, 601, 601, -364, -364, 449, -364, -245,
	-245, 119, 318, -443, 518, 518, 60, 223, 154, 332,
	548, -550, -545, 152, -443, 600, 232, 600, 600, 2,
	-236, -237, -238, 143, 462, 24, -623, 2, 546, 154,
	-245, 154, -245, 568, -338, 600, 600, 518, 449, -261,
	518, 564, -375, -443, -206, 127, -522, -602, 604, -602,
	604, 449, 518, 518, 449, 518, 518, 332, 154, 564,
	167, 167, 570, -253, 564, -375, 518, -497, 48, 26,
	332, -303, -245, 154, 518, 518, 530, 462, -531, 337,
	-13, -309, -529, -304, 462, 362, 419, -594, -365, -594,
	204, -312, -618, -487, -210, 351, -209, 146, 431, 137,
	260, 225, -487, -208, 188, 244, 564, -304, 2, 601,
	601, 605, -551, 38, 345, 345, 600, -299, -87, 564,
	-486, -519, -598, 564, 43, -302, 38, 154, -595, -136,
	-304, -491, -492, 5, 38, -299, 154, 347, 332, -250,
	267, -643, -527, -566, -360, -393, -382, 333, 91, 601,
	-437, -384, -368, -443, 2, 601, -203, -204, -531, -531,
	-531, -205, -217, -217, -435, -332, 600, -284, -269, 600,
	-217, -286, 2, -532, -531, -531, 605, 600, 583, 583,
	583, 583, 583, -211, -487, -132, -136, 351, -299, 593,
	-400, -344, -343, 366, 341, -344, 439, 439, 348, 177,
	263, -239, -283, -443, -443, 150, 33, 33, -443, -443,
	-454, 601, -443, -443, -375, 599, 5, -443, 601, 601,
	8, -443, 601, 602, -580, -268, -443, 601, 60, 601,
	601, 605, 605, 601, 601, 601, 601, 601, 601, 601,
	-449, 188, 139, 341, 600, 601, 601, -106, -451, 210,
	60, -474, -451, -451, -402, -364, -474, -441, -283, 598,
	-283, 598, -523, -519, -477, 600, 602, -215, 583, -531,
	-531, -193, 564, -312, 599, 2, 598, -523, 601, -312,
	119, -285, -285, 502, 439, -253, 389, -434, 154, -552,
	93, -554, 76, 169, 102, 332, 337, 536, 389, 72,
	127, 347, 406, -633, -634, -635, 38, 575, 576, 601,
	-362, -471, -565, 600, -268, -362, -364, 332, 491, 127,
	347, 332, 127, 347, 559, 119, 2, 530, 79, -285,
	-293, -364, -364, -299, -309, -529, 161, 601, 605, 583,
	2, 593, 593, -309, -529, -304, -309, -529, -302, 154,
	-253, 364, 167, 161, 601, -283, 5, 5, 154, -280,
	76, -285, 5, -285, -303, 119, 449, 518, 518, 347,
	347, 350, -614, -615, -208, 605, 600, 583, 583, -208,
	-532, -132, 2, -354, -345, 234, -285, -549, -546, -547,
	389, -553, -555, 169, 389, -136, 2, -219, -218, -268,
	5, 600, -330, 351, 599, -600, 351, -599, 117, 137,
	-529, -397, -136, -304, -354, 601, 605, 148, -419, 546,
	-283, -299, 154, -251, 266, -643, -527, -248, -422, -420,
	140, 600, 347, -136, -360, 583, 601, 601, 119, 119,
	226, 153, -362, 600, 600, -364, 119, 601, -212, -213,
	-531, -132, -531, -531, -531, -211, -487, -67, -68, 232,
	93, 371, -296, 502, 232, 600, 600, -239, -443, -443,
	-443, 601, -360, -523, 593, -574, 366, 601, -470, -443,
	-443, -444, 188, 600, -454, 601, -575, 563, -443, -388,
	-389, -443, 437, 108, 208, -575, -575, 601, -519, -519,
	2, -531, 2, 518, 598, 2, 188, 223, 38, 409,
	-434, -293, -297, -290, -268, 169, 216, 337, 559, -418,
	258, 600, -444, 540, -299, 600, 2, 215, 215, 30,
	60, -636, 131, 237, 601, 605, -472, -279, -268, -443,
	-472, 601, 601, 337, 540, 337, 559, -443, 540, -493,
	600, -245, -245, 601, 601, -443, 518, -522, 100, -520,
	2, -602, -253, -282, -443, 518, 5, -245, -297, -245,
	-245, -280, 530, -309, -529, -304, -619, 503, 456, 531,
	450, 191, 438, -619, 183, -209, -210, -531, -132, -208,
	38, -335, 236, 2, -551, 258, -290, 258, -632, 564,
	601, 605, 583, 583, -328, -220, -88, -89, 519, -486,
	605, 600, 583, -354, 38, 5, 600, 600, -268, 347,
	600, -283, -263, 92, -643, -527, -249, -393, 333, -364,
	93, -422, -450, -205, 600, 600, -333, 81, 94, 128,
	215, 192, 233, 483, 489, 28, -333, 601, -362, -362,
	601, 600, -205, 601, 605, 28, 600, 28, 600, -299,
	-321, -375, -375, 601, -360, 60, 605, 601, 601, -444,
	-454, 601, -576, -577, -288, 605, 600, 600, 463, 599,
	599, -364, 2, -364, -253, 389, -268, -554, -290, 332,
	546, -443, -444, -270, 600, -443, 600, 600, 38, 127,
	237, 132, 221, -433, -637, 101, 492, 224, -471, -239,
	601, -432, 546, 406, -444, -280, -362, 600, 600, 600,
	583, 188, 600, -497, -245, -303, 518, 2, 2, 188,
	-594, 601, -608, 404, -136, -339, -340, 223, 600, -334,
	347, 119, 318, -218, -520, -520, 601, 38, -89, 9,
	-599, -600, -443, 38, -136, -491, -362, -299, -362, 347,
	-255, -254, 275, -527, -250, 601, -293, -393, -532, -532,
	-432, 601, 601, -532, -68, -364, -364, 601, 601, -581,
	397, 440, 209, -375, -361, 601, 605, 38, -389, 2,
	2, 2, 409, 154, 211, 601, -556, 290, -268, 601,
	-397, -397, 38, 132, 221, -335, 600, -240, -472, -335,
	211, -299, -603, 546, 601, -347, -346, -343, -349, -348,
	-343, -375, -520, 100, 364, -375, -280, -364, -364, 347,
	-611, 189, -610, 5, 10, -220, 364, -363, -473, -285,
	82, 119, -345, -136, 601, -136, 601, 601, -419, 601,
	-299, -252, -533, 409, 411, -643, -251, -437, 601, 601,
	-433, -432, -341, -337, 601, 601, 601, 601, -582, -583,
	50, 533, 109, -443, -582, -582, -577, -579, 169, 564,
	-557, -560, -559, 580, 469, 189, 365, 601, 491, 558,
	601, 601, -341, -364, 564, -354, -443, -432, 601, 605,
	551, 601, 605, 551, 601, 188, 601, -245, -616, 564,
	-245, -619, -207, 564, 46, -334, -299, 601, 605, 388,
	133, 143, -335, -632, -432, 600, -433, 600, -260, -259,
	-643, -513, -263, 140, -205, -205, -335, -433, -221, 564,
	-205, -584, 152, -583, 385, 182, 439, 385, 182, -584,
	-584, -290, 55, -559, 580, -560, 580, 540, 133, -636,
	601, 55, -556, -335, -346, 223, -348, 188, 364, 204,
	188, 447, -610, 30, -262, -261, 600, -473, 440, 440,
	2, -339, -334, -433, -362, -335, -362, -256, -257, -258,
	-364, -255, 333, 540, -341, -335, -437, 109, 207, 513,
	318, 33, 583, -558, 318, 426, 64, 462, -558, -437,
	583, -557, 600, 600, 350, -364, 351, -364, 2, -220,
	-335, 601, -341, 601, -252, 462, -221, -341, 439, 355,
	-583, -443, 23, 337, 127, -443, -636, -375, -375, -245,
	-204, 600, 601, -334, -341, -432, -221, -433, -260, -383,
	-437, -221, 601, 601, -204, -246, 64, 426, -262, -221,
	-433, -437, -335, -256, -437, -437, -336, -337, 518, 601,
	-437, -335, -341, 600, -341, -221, -375, -221, -437, 601,
	-437, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 559, 560, 562, 563, 564, 566,
	567, 569, 571, 573, 574, 575, 577, 578, 580, 581,
	582, 583, 584, 586, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	655, 657, 0, 1422, 1424, 1426, 1428, 0, 810, 0,
	36, 37, 39, 0, -2, 338, 340, 342, 344, 0,
	375, 377, 378, 380, 382, 383, 384, 386, -2, 0,
	492, 493, 495, 497, -2, 0, 1017, 1019, 1021, 0,
	644, 646, 0, 1024, 1026, 1028, 0, 0, 667, 668,
	0, 1533, -2, 659, 661, 663, 665, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 753, 754, 756, 758,
	760, 762, 764, 765, 767, 769, 771, 772, 774, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	797, 799, 801, -2, 804, 805, 806, -2, -2, 0,
	-2, -2, -2, 1440, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 436, 438, 440, 442, 444, 447,
	449, 451, 1591, 499, 501, 503, 505, 507, 509, 511,
	0, -2, 1605, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1564, 1566, 1568, 1570, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 561, 565, 568, 570, 572, 576,
	579, 585, 587, 589, 544, 545, 548, 2302, 2320, 2321,
	2322, 2325, 2326, 2327, 2328, 2329, 2330, 2786, 2867, 2868,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 546, 547, 1211, 0, 613, 611,
	2287, 614, 2583, 616, 618, 486, 487, 488, 489, 490,
	491, 0, 637, 627, 1603, 638, 640, 641, 642, 643,
	608, 606, 0, 637, 2356, 635, 1420, 1421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 498, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 415,
	1269, 1270, 1271, 1405, 1406, 2630, 1447, 0, 234, 656,
	-2, -2, 2751, -2, 690, 691, -2, -2, 705, 708,
	700, 2755, 0, 2633, 2617, -2, 711, 1423, 1425, 1427,
	808, 809, 2306, 0, 0, 0, 0, 0, 38, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 244,
	-2, -2, -2, -2, 0, 0, 2678, 2408, 2255, 2322,
	2258, 2253, 339, 341, 343, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 376, 379, 381, 385, -2, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 1088, 1080, 1081, 1327, 0, 0, 0, -2,
	494, 496, 549, 550, 0, 1592, 1592, 557, 558, -2,
	0, 0, 0, 0, 309, 297, 1018, 1020, 1022, 1023,
	0, 0, 0, 0, 0, 645, 647, 0, 0, 276,
	1025, 1027, 1029, 1030, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 660, 662, 664, 666, 736, 738, 740,
	742, 744, 746, 748, 750, 752, 755, 757, 759, 761,
	763, 766, 768, 770, 773, 776, 778, 780, 782, 784,
	786, 788, 790, 792, 794, 796, 798, 800, 802, 803,
	816, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 913, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 998, 0, 0, 819, 821,
	822, 823, 824, 0, 886, 911, 912, 922, 807, 0,
	1251, 1593, 1449, 1430, 1444, 1449, 1432, 1433, 1434, 1435,
	1436, 1441, 1443, 1437, 1438, 1439, 42, 44, 46, 48,
	50, 52, 54, 56, 58, 60, 437, 439, 441, 443,
	445, 448, 450, 452, -2, 1562, 1563, 500, 502, 504,
	506, 508, 510, 512, 648, 0, 650, 0, 820, -2,
	0, 1597, 1597, 1597, 0, 0, 1563, 1561, 0, 653,
	654, 715, 716, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 2129, 1957, 0, 717, -2, 1990, 1992, 2726,
	2556, 2751, 2128, 1994, 1995, 1996, 1997, 1998, 0, 2000,
	2001, 2002, 2003, 2004, 2005, 0, 2007, 0, 2012, 2013,
	2014, 0, 2733, 2232, 2316, -2, 0, 0, 2739, 2312,
	0, 2095, 2030, -2, -2, 2339, 2318, 1801, 1802, 1803,
	1804, 1805, -2, -2, 2769, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 0, 2714, 2734, 2735,
	2740, 2742, 2736, 2723, 2055, 2422, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1828,
	1837, -2, -2, -2, -2, -2, -2, -2, 2727, 2728,
	2745, 2748, 2754, 2759, 2760, 2732, 2741, 2768, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
	2782, 2783, 2784, 2785, 1829, -2, -2, -2, -2, 1580,
	2597, 1583, 1211, 1581, 1565, 1567, 0, 1569, 0, 0,
	0, 1574, 1600, 1598, 0, 1649, 1578, 1579, 1671, 1671,
	1695, 0, 1676, 0, 1695, 1592, 1722, 0, 1682, 2622,
	2031, 2032, 0, 2322, 2317, -2, -2, 2766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	615, 617, 0, 0, 0, 636, 1602, 0, 0, 0,
	0, 0, 0, 0, 418, 419, 420, 421, 422, 2734,
	0, 0, 0, 427, 0, 429, 430, 431, 432, 433,
	434, 435, 205, 2734, 517, 542, 0, 205, 2734, 520,
	205, 2734, 523, 0, 526, 1325, 205, 2734, 529, 2283,
	205, 2734, 532, 534, 2291, 205, 2734, 538, 2298, 2296,
	539, 2734, 541, 314, 312, 313, 2335, 2336, 2343, 2344,
	2345, 2346, 2767, 2769, 1416, 1417, 1418, 1419, 0, 1446,
	1326, 658, 0, 684, 0, 688, 689, 2722, -2, 0,
	2642, 693, 694, -2, 696, 1450, 1454, 1455, 1456, 1457,
	1458, 0, 0, 0, 0, 1463, 0, 0, 0, 0,
	685, 686, 703, 704, 709, 712, 0, 811, 812, 813,
	814, 815, 72, 0, 2734, 1722, 74, 0, 2277, 2347,
	2348, 2349, 2350, 2351, 2787, 2788, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812,
	2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822,
	2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832,
	2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842,
	2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852,
	2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862,
	2863, 2864, 2865, 2866, 78, 0, 2734, 83, 0, 2734,
	0, -2, 96, 0, 108, 0, 2280, 117, 0, 2734,
	0, 2252, -2, 0, 217, 298, 299, 300, 0, 1055,
	-2, 2734, 1263, 1265, 1265, 0, -2, 0, 0, 0,
	1008, 2249, 2254, 1009, 2273, 1010, 2259, 0, 347, 348,
	349, 350, 351, 0, 352, 2734, 354, 355, 0, 357,
	358, 2734, 360, 361, 0, 363, 0, 365, 0, 256,
	262, 2734, 2734, 389, 391, 0, 393, 394, 0, 396,
	0, 0, 0, 400, -2, 416, 0, 413, 403, 404,
	406, 407, 408, 409, 410, 0, 456, 454, 2288, 0,
	0, -2, 2734, 0, 1052, 0, 0, 1305, -2, 2734,
	1256, 0, 1312, 2734, 1308, 0, -2, 0, 1590, 2734,
	1467, 1084, 1085, 1086, 1087, 1734, 483, 0, 1498, 0,
	1500, 0, 1519, 1728, 1671, 0, 0, 1733, 0, -2,
	602, 2305, -2, 552, 0, 553, 0, -2, 0, 326,
	0, 0, 1033, 1035, 1036, 1038, 1039, 1042, 1043, 1044,
	1045, 0, 1047, 1708, 277, 279, 0, 0, 0, 1032,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 0,
	0, 669, 0, 0, 817, 818, 0, 0, 829, 830,
	831, 0, 326, 2634, 2592, 2443, 838, 0, 841, 844,
	-2, 0, 0, 0, 0, 848, 0, 853, 854, 855,
	0, -2, 0, 862, 864, 1016, 866, 0, 0, 868,
	0, 872, 0, 875, 0, 877, 0, 879, -2, -2,
	-2, 887, 888, -2, 893, -2, 0, 897, -2, 0,
	900, 0, 903, -2, 0, 913, 909, 910, 0, 0,
	0, 0, 930, 931, 0, 940, 0, 943, 944, 945,
	0, 949, 950, 0, 952, 953, 954, 955, 0, 2705,
	2639, 2408, 0, 961, -2, 967, 969, 0, -2, 0,
	985, 0, 989, 0, 0, 997, 0, 0, 825, 826,
	205, 1726, 1429, -2, 1431, 0, -2, 0, 649, 0,
	652, 1622, 1548, 1545, 0, 1619, 1620, 1549, 0, 0,
	0, 1556, 0, 1595, 1596, 0, 0, 0, 1535, 1536,
	0, 0, 0, 0, 2134, 2135, 2136, 2137, 2150, 2138,
	2139, 2149, 2147, 2148, 2140, 2141, 2146, 2160, 2161, 2151,
	2152, 2142, 2155, 2153, 2154, 2156, 2157, 2158, 2159, 0,
	0, 2165, 0, 2143, 2144, 2145, 2173, 0, 0, 2174,
	0, 2176, 0, 2166, 2162, 2163, 2164, 0, 1936, 1938,
	2240, 0, 0, 0, 2172, 2167, 2168, 1874, 1875, 1876,
	1877, 1878, 1911, 1915, 1916, 0, 0, 1991, 2237, 2236,
	1993, 0, 0, 2188, 0, 2006, -2, 0, 2129, 2183,
	0, 0, 2015, 2016, 2017, 0, 0, 2188, 0, 0,
	2231, 2027, 2028, 1866, 0, 0, 2097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 1814, 0, 1816, 0,
	1817, 1818, 1825, 1838, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 2212, -2, 0, 0,
	0, 0, 1830, 0, 1582, 0, 0, 1653, 2241, 2245,
	2246, 1653, 1653, 0, 0, 2189, 1719, 1719, 0, 0,
	1714, 1714, 1714, 1712, 1695, 0, 1695, 1705, 0, 1695,
	1695, 0, -2, 1676, 0, 0, 1705, 0, 1689, 590,
	592, 594, 596, 597, 598, 600, 1723, 1724, 0, 0,
	0, 0, 2323, 0, 0, 0, 0, 2295, 0, 0,
	2308, 0, 0, 2282, 372, 0, 0, 0, 2688, 2633,
	0, -2, 620, 639, 1592, 0, 2191, 1749, 1753, 0,
	1755, 1756, 1757, 1758, 1759, 0, 0, 1750, -2, 1826,
	1828, 1849, 2340, 2341, 2342, 1809, 1810, 1811, 1812, 1813,
	1821, 1808, 1808, 1808, 1819, 1848, 1840, 1848, 1844, 1794,
	1795, 1796, 1831, 1832, 1833, 1834, 0, 2688, 2633, 0,
	-2, 629, 0, 0, 1530, 417, 0, 424, 425, 426,
	0, 513, 0, 203, 204, 0, 205, 2734, 518, 0,
	521, 0, 205, 2734, 2247, 527, 0, 530, 0, 0,
	536, 0, 0, 0, 0, 0, 205, 1532, 0, 0,
	0, 0, -2, 698, 706, 707, 224, 225, 0, 1452,
	0, 1459, 726, 727, 728, 1461, 1462, 0, 1464, 701,
	729, 730, 731, 732, 733, 734, 0, 2261, 2262, 2263,
	2264, 2267, 2268, 0, 0, 699, 719, 702, 0, 713,
	118, 1402, 0, 0, 161, 0, 1402, 1402, 0, 0,
	0, 0, 188, 0, 1123, 0, 0, 0, 0, 133,
	146, 157, 130, 131, 0, 0, 0, 0, 0, 0,
	84, 1233, 0, 1236, 0, 0, 0, 0, 0, 0,
	0, 1249, 0, 0, 0, 0, 0, 98, 99, 0,
	0, 104, 105, 0, 145, 0, 0, 0, 0, 0,
	1495, 0, 140, 120, 0, 0, 133, 147, 159, 0,
	192, 194, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 226, 0, 0, 0, 1257, 0, 0, 0,
	1589, 0, 0, 0, 0, 2734, 1400, 0, 1385, 0,
	1708, 2493, -2, -2, 277, 1708, 1007, 0, 0, 2323,
	2257, 0, 0, 0, 0, 0, 0, 364, 0, 0,
	0, 392, 395, 397, 398, 399, 0, 1304, 0, 405,
	446, 1182, 2734, 0, 0, 473, 468, 0, 470, 0,
	0, 0, 1232, 2734, 1230, 2292, 0, 1254, 0, 1211,
	2734, 2290, 0, 0, 0, 1313, 2332, 1322, 1326, 1485,
	0, 485, 0, 1501, 1503, 0, 0, 1729, 0, 1731,
	1671, 1592, 0, 0, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 1046, 283, 0, 1707, 0,
	0, 1708, 277, 2608, 1031, 326, 326, 1708, 671, 1708,
	673, 0, 0, 832, 833, 0, 326, 326, 326, 839,
	840, 842, 843, -2, -2, -2, -2, 845, 846, 937,
	0, 0, 0, 936, 856, 0, 858, 861, 865, 0,
	1001, 2617, 2633, 2688, 1014, 937, 2408, 937, 2408, 937,
	2408, 937, 937, 881, 925, 933, 892, 899, 0, 894,
	898, 901, 904, 0, 906, 914, 0, -2, 0, 917,
	0, 919, 0, 921, 937, 938, 941, 948, 951, 956,
	957, 958, 959, 2303, 960, -2, 964, 965, 0, 976,
	981, 982, 978, 0, 0, 0, 0, 0, 0, 992,
	993, 0, 0, 1000, 1250, 0, 1442, 1622, 1548, 651,
	1539, 1621, 1540, 1547, 1550, 0, 0, 1552, 0, 1554,
	0, 1617, 1618, 1625, 1626, 0, 1636, 1637, 1629, 0,
	-2, 0, 0, 1632, 1633, 1558, 0, 1575, 1576, 1577,
	1606, 1609, 1341, 0, 2867, 1870, 1744, 1871, 1872, 2276,
	0, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, -2, -2, -2, -2, -2, -2, -2, -2, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	-2, -2, -2, 1912, 1913, 1914, -2, 2175, 2177, 0,
	2240, 0, -2, 0, -2, -2, -2, -2, 1933, 0,
	1935, 1940, 1942, 1944, 0, 0, 0, 0, 2239, 1954,
	2223, 2224, 0, 0, 2131, 2132, 2133, 1939, 0, 1958,
	2238, 2235, 0, 0, 2169, 0, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 0,
	2187, 1605, 2019, 0, 0, 0, 0, 2026, 2011, 2185,
	0, 2184, 0, 0, 0, 2195, 0, 2230, 2226, 0,
	2274, 1865, 1852, 1853, 1854, 1855, 1856, 1857, 1867, 0,
	2271, 2309, 2315, 2105, 0, 0, 0, 2056, 2057, 2058,
	2059, 2060, 0, 2062, 2063, 0, 2065, 2066, 0, 2068,
	2069, 0, 2071, 2072, 2073, 2074, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 0, 0, 2077, 0,
	2198, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	2079, 0, 2081, 2189, 2209, 0, 0, 1959, 0, 0,
	0, 0, 2129, 0, 2084, 2189, 2217, 0, 0, 0,
	0, 0, 2189, 0, 2222, 0, 2091, 0, 2093, 1584,
	0, 0, 1739, 0, 0, 0, 2244, 1739, 1739, 0,
	1648, 0, 0, 1715, 1716, 1717, 1718, 0, 0, 1719,
	0, 1709, 1713, 1710, 1711, 1705, 1668, 0, 0, 2278,
	1705, 1674, 1704, 0, 1211, 1694, 1705, 1705, 0, -2,
	1678, 1695, 0, 0, 591, 593, 595, 599, 601, 0,
	0, 1605, -2, 0, -2, 328, 1210, 0, 0, 0,
	0, 0, 0, 610, 612, 0, 0, 533, 0, 0,
	626, 0, 604, 0, 607, 0, 1740, 1743, 0, 0,
	1754, 1760, 1761, 0, -2, 0, 0, 1850, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 428, 543, 205,
	515, 0, 205, 205, 524, 0, 0, 205, 535, 205,
	2299, 205, 2297, 315, 540, 1531, 237, 0, 687, 0,
	1451, 1460, 0, 723, 0, 725, 0, 2265, 2269, 2266,
	2270, 0, 714, 0, 0, 0, 0, 1401, 0, 1348,
	0, 0, 165, 2734, 0, 207, 0, 0, 1175, 2284,
	0, 1165, 0, 0, 2429, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 1234, 1235, 1237, 1244, 1246, 0, 1240,
	2272, 0, 0, 1241, 0, 1243, 1245, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 1266, 0,
	0, 1267, 1268, 1473, 1474, 0, 1494, 1495, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 2251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1259, 0, 1300, 1298, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 0, 0, 0, -2,
	1261, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 317, 2250, 2260, 0, 1040, 1041, 353,
	356, 359, 362, 243, 0, 0, 401, 0, 0, 1090,
	1065, 0, 0, 455, 326, 0, 0, 469, 473, 2301,
	1050, 221, 222, 223, 1228, 1231, 0, 1211, 2734, 1277,
	0, 0, 0, 0, 0, 0, 1311, 0, 0, 2734,
	2279, 2331, 2332, 1487, 1495, 0, 1739, 0, 1517, 1504,
	0, 0, 0, 1517, 1521, 1522, 1524, 1525, 0, 0,
	1730, 1736, 551, 603, 1592, 1592, 326, 324, 2559, 322,
	319, 321, 0, 0, 0, 1091, 1093, 1094, 1095, 207,
	0, 2332, 1165, 2482, 2332, 0, 1507, 1509, 0, 0,
	0, 271, 0, 280, 1708, 278, 283, 0, 0, 0,
	467, 670, 675, 827, 0, 326, 835, 836, 837, 883,
	927, 935, 980, 847, 849, 850, 851, 0, 0, 0,
	1015, 1011, 1012, 1013, 867, 937, 870, 937, 873, 937,
	876, 878, 896, 902, 915, 908, 916, 0, 0, 0,
	929, 946, 0, 963, 0, 0, 0, 0, 0, 0,
	0, 986, 987, 988, 990, 995, 994, 999, 1727, 1543,
	1544, 1546, 0, 1555, 0, 0, 1631, -2, -2, 1630,
	1634, 1635, -2, -2, -2, -2, 1551, 0, 1560, 1557,
	0, 1616, 1339, 1340, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1955, 0, -2, 1934, 1937, 1941, 1943,
	1945, 0, 0, 0, 0, 0, 0, 2178, 0, 2180,
	1956, 2233, 2236, 2171, 0, 2127, 0, 0, 1604, 1605,
	1605, 0, 2025, 0, 2186, 0, 2193, 2194, 0, 2018,
	0, 2227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 0, 0, 0, 0, 2061, 2064, 2067, 2070,
	0, 0, 0, 0, 2050, 0, 0, 0, 2054, 1820,
	1806, 0, 1848, 1846, 1847, 1841, 1848, 1845, 1798, 0,
	1797, 0, 2076, 0, 2078, 2080, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1962, 1963, 1964, 1984, 2083, 2215, 2216,
	0, 0, 0, 0, 0, 0, 2089, 0, 2221, 2090,
	2092, 1592, 0, 1585, 0, 1650, 1639, 1738, 0, 2242,
	1708, 1652, 1654, 2243, 2281, 1639, 1639, 0, 2190, 0,
	0, 1699, 0, 0, 0, 1701, 1672, 0, 0, 1666,
	0, 1658, 1659, 1660, 1661, 1662, 1663, 1673, 1211, 1703,
	1675, 1679, 2309, 0, 1705, 0, 1690, 0, 1692, 1725,
	0, 1684, 1687, 0, 0, 2324, 1739, 0, 366, 373,
	374, 367, 368, 369, 370, 0, 619, 0, 0, 0,
	0, 0, 2192, 0, 1745, 0, 1751, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 1529, 423, 514, 205,
	519, 522, 2248, 205, 528, 531, 537, 233, 0, 683,
	-2, 721, 722, 724, 0, 720, 162, 1402, 0, 0,
	1344, 1346, 1350, 1356, 1359, 0, 167, 2734, 179, 0,
	1139, 0, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 2734, 205, 2734, 205, 182, 184, 187, 0, 191,
	189, 0, 1127, 0, 0, 1130, 119, 1402, 0, 0,
	122, 126, 134, 135, 138, 0, 0, 0, 144, 0,
	0, 0, 1361, 1365, 1373, 0, 0, 0, 1238, 1239,
	1242, 1248, 85, 0, 0, 0, 1369, 1371, 1377, 97,
	100, 2734, 2293, 102, 2734, 0, 1343, 0, 0, 0,
	0, 193, 124, 128, 136, 137, 139, 0, 1379, 121,
	0, 220, 0, 0, 210, 205, 2734, 0, 212, 0,
	213, 214, 227, 0, 0, 0, 1053, 1054, 1299, 1252,
	1253, 0, 1264, 1258, 0, 0, 0, 0, 0, 1381,
	1382, 0, 0, 0, 1400, 1397, 1708, 239, 0, 1708,
	247, 0, 2256, 0, 263, 388, 0, 0, 0, 0,
	1089, 1193, 0, 1060, 0, 0, 0, 461, 457, 0,
	466, 472, 471, 477, -2, 0, 0, 0, 0, -2,
	0, 0, 1315, 1309, 1310, 0, 0, 0, 0, 2734,
	1489, 1495, 0, 1590, 1605, 484, 1496, 1517, 0, 0,
	0, 1506, 1502, 1499, 1739, 0, 0, 0, 0, 0,
	1732, 1735, 554, 555, 301, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 1096, 1100, 0, 2332, 2332, 0,
	2286, 0, 0, 0, 0, 0, 0, 281, 0, 284,
	0, 0, 0, 289, 290, 291, 292, 293, 294, 0,
	0, 283, 273, 1708, 0, 0, 672, 0, 0, 834,
	0, 857, 860, 869, 871, 874, 918, 920, 937, 947,
	970, 971, 1117, 0, 1117, 0, 0, 991, 1553, 0,
	1628, 1559, 1610, 1611, 0, 1341, 0, 1873, 1918, 0,
	0, -2, 0, 0, 1922, 0, 0, 0, -2, 0,
	0, 0, 2179, 2181, 0, 2235, 2170, 2020, 0, 0,
	0, 2024, 2008, 2009, 0, 2130, 2196, 2225, 2229, 0,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 0, 2275, 2310,
	2314, 2103, 2104, 2108, 2289, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 1843, 0,
	0, 2197, 2208, 2210, 1960, 1961, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, -2, -2, -2, 1978,
	1979, 1980, -2, -2, -2, 1985, 0, 0, 0, 2211,
	2213, 2214, 2218, 2219, 0, 2086, 2087, 2088, 2220, 0,
	1592, 1586, 1647, 0, 1737, 1651, 0, 1647, 1647, 1599,
	1697, 0, 0, 1721, 0, 1669, 0, 1670, 0, 0,
	1702, 0, 1677, 1680, 1681, 1691, 0, 1683, 0, 1686,
	0, 2020, -2, 327, 329, 331, 0, 334, 335, 0,
	0, 0, 622, 623, 0, 621, 605, 0, 0, 1747,
	0, 0, 1823, 1827, 1851, 631, 632, 0, 630, 516,
	525, 235, 0, 1706, 0, 0, 0, 0, 0, 0,
	206, 1137, 1174, 0, 0, 0, 1164, 0, 0, 1180,
	169, 170, 171, 0, 0, 0, 0, 180, 0, 0,
	177, 0, 186, 190, 1124, 0, 0, 0, 0, 1349,
	0, 0, 0, 141, 142, 143, 0, 148, 0, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1479, 1480, 0, 1470, 0, 0, 0, 208, 0, 0,
	0, 1338, 229, 0, 0, 0, 0, 0, 1302, 1303,
	1260, 1362, 1366, 1374, 0, 0, 0, 0, 637, 0,
	642, 1399, 0, 247, 245, 0, 248, 0, 251, 252,
	0, 254, 247, 241, 0, 0, 0, 1211, 402, 1063,
	1181, 0, 1183, 0, 1061, 0, 0, 1182, 453, 0,
	460, 0, 474, 0, 0, 1232, 0, 0, 1255, 1275,
	1211, 0, 1314, 1316, 0, 1324, 0, 0, 0, 1491,
	1495, 0, 1484, 1485, 1624, 1497, 1515, -2, 0, 0,
	1605, 1523, 1520, 1526, 1527, 0, 323, 0, 318, 320,
	0, 304, 0, 0, 1092, 1097, 0, 0, 0, 0,
	0, 1508, 1510, 0, 1034, 1037, 0, 0, 0, 0,
	0, 0, 0, 272, 283, 1708, 310, 0, 828, 852,
	928, 972, 1116, 0, 0, 974, 0, 0, 1627, 1614,
	1615, 1612, 1341, 1920, 1924, 0, 0, 0, 1926, -2,
	0, 1948, -2, -2, 2182, 2234, 1999, 1605, 2021, 2023,
	2010, 2228, 1868, 0, 2110, 2107, 0, 2094, 0, 2045,
	2046, 0, 0, 2049, 2051, 2052, 2053, 1807, 1800, 1799,
	2207, 0, 0, 0, 0, 2085, 1587, 0, 2099, 0,
	0, 1655, 2099, 2099, 1698, 0, 1700, 1667, 1656, 0,
	1664, 0, 2310, 1693, 1685, 0, 0, 332, 0, 336,
	337, 371, 0, 0, 1741, 1746, 0, 1752, 1822, 0,
	236, 163, 164, 1353, 1357, 1354, 0, 166, 0, 1138,
	0, 1141, 0, 0, 0, 0, 1148, 1165, 0, 0,
	0, 0, 0, 0, 1167, 0, 1166, 0, 0, 1197,
	0, 1329, 1336, 0, -2, 0, 0, 0, 173, 196,
	0, 0, 0, 0, 199, 1403, 175, 0, 0, 205,
	205, 0, 0, 1345, 1347, 1360, 0, 0, 0, 0,
	151, 0, 0, 1363, 1367, 1375, 1370, 1372, 1378, 0,
	103, 0, 1481, 0, 0, 1380, 218, 219, 0, 205,
	0, 205, 211, 205, 1338, 0, 0, 0, 0, 0,
	0, 0, 1383, 1384, 238, 0, 0, 0, 0, 240,
	316, 247, 390, 0, 1111, 0, 1193, 1185, 1186, 1187,
	0, 1192, 1194, 0, 0, 1077, 1062, 0, 1073, 0,
	0, 1090, 1065, 0, 458, 475, 0, 478, 0, 481,
	1051, 1229, 1272, 1211, 0, 1306, 0, 0, 0, 0,
	0, 0, 0, 1493, 1495, 0, 1486, 1487, 1517, 1623,
	0, 0, 0, 1505, 1624, 0, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 285, 0,
	286, 287, 288, 295, 296, 274, 275, 674, 676, 0,
	0, 682, 1115, 0, 0, 0, 0, 1613, 1928, -2,
	-2, 1949, 0, 2311, 2313, 1605, 0, 2096, 1607, 0,
	0, -2, 0, 0, 0, 1588, 1571, 0, 1646, 1638,
	1640, 1642, 2620, 2403, 2733, 1572, 1573, 1720, 0, 0,
	1688, 333, 624, 0, 0, 1748, 0, 0, 0, 1355,
	168, 0, 1142, 1143, 2285, 1145, 0, 1147, 1149, 1150,
	1151, 0, 1154, 0, 2334, 0, 1159, 1162, 1163, 0,
	0, 1176, 1198, 0, 1207, 0, 1331, 1341, 1335, 0,
	1333, 1209, 0, 172, 198, 174, 200, 195, 0, 1338,
	0, 176, 185, 0, 0, 123, 0, 0, 2397, 154,
	152, 150, 101, 1342, 125, 0, 220, 228, 1337, 230,
	215, 205, 0, 1364, 1368, 1376, 0, 1391, 1392, 1393,
	1394, 0, 0, 0, 0, 249, 0, 250, 253, 0,
	0, 1126, 0, 1064, 1184, 0, 1195, 1196, 1067, 0,
	1066, 0, 0, 0, 0, 0, 459, 462, 0, 465,
	0, 0, 0, 0, 0, 1317, 1315, 0, 1323, 0,
	0, 0, 1469, 0, 0, 1488, 1489, 482, 1511, 0,
	0, 1517, 1528, 303, 0, 0, 1098, 1101, 1102, 1103,
	1104, 1105, 1106, 1107, 1108, 1109, 1099, 1209, 0, 0,
	1173, 0, 308, 282, 0, 678, 0, 680, 0, 973,
	975, 0, 0, 2022, 2114, 0, 0, 2047, 2048, -2,
	0, 1988, 2098, 2100, 0, 0, 0, 0, 0, 1657,
	1665, 625, 1742, 633, 1351, 0, 1358, 1140, 1144, 0,
	0, 0, 1155, 1215, 0, 0, 1232, 1232, 1168, 0,
	0, 1201, 1202, 1111, 0, 1203, 1204, 1205, 1330, 1616,
	1336, 1111, 0, 0, 197, 202, 0, 0, 0, 0,
	0, 0, 0, 209, 231, 1338, 0, 1395, 1396, 0,
	0, 246, 267, 0, 1273, 1065, 1125, 0, 0, 1075,
	0, 1078, 0, 1074, 1071, 1072, 1063, 0, 463, 464,
	479, 0, 480, 0, 1276, 0, 0, 1324, 0, 0,
	1476, 1468, 1495, 1490, 1491, 1739, 1514, 1518, 0, 0,
	1207, 1209, 1122, 0, 677, 0, 0, 983, 984, 0,
	0, 0, 0, 2109, 1608, 1989, 0, 0, 1641, 1643,
	1644, 1645, 1352, 0, 0, 1153, 1220, 0, 0, 0,
	0, 0, 1169, 1199, 1200, 1122, 0, 1334, 1332, 1178,
	0, 1211, 178, 0, 1209, 0, 1131, 0, 0, 1134,
	0, 0, 155, 2397, 153, 0, 205, 1388, 205, 0,
	270, 0, 261, 259, 260, 1067, 0, 0, 1189, 1191,
	0, 1079, 1111, 1077, 476, 1274, 1307, 1209, 0, 1207,
	0, 1483, 1495, 1477, 1478, 0, 1493, 0, 326, 326,
	1111, 1207, 1065, 1121, 326, 679, 681, 2106, 2126, 2115,
	-2, 2691, 2404, 0, 2126, 2126, 2101, 2102, 0, 0,
	1156, 1216, 1217, 0, 1212, 1213, 1214, 2333, 1157, 1158,
	1160, 1161, 1197, 0, 0, 1215, 201, 1111, 1128, 0,
	0, 1129, 0, 0, 158, 0, 160, 232, 1386, 0,
	1389, 0, 255, 0, 0, 1059, 0, 1188, 0, 0,
	0, 0, 1126, 1067, 1207, 0, 1111, 0, 1472, 1482,
	0, 1492, 1469, 0, 305, 306, 1122, 1111, 1739, 0,
	307, 2111, 0, 0, 2117, 2118, 2119, 2120, 2121, 2112,
	2113, 1146, 0, 1218, 0, 1219, 0, 0, 0, 1739,
	1206, 0, 1220, 183, 1132, 0, 1135, 0, 156, 0,
	0, 0, 265, 266, 1056, 1058, 0, 1190, 1068, 0,
	1070, 1065, 1076, 1111, 0, 1122, 0, 1465, 1471, 1475,
	2294, 1476, 1512, 0, 1065, 1122, 1172, 0, 2123, 2124,
	0, 0, 0, 1221, 0, 1224, 1225, 0, 1222, 1177,
	0, 1197, 0, 0, 1387, 205, 0, 0, 1069, 1067,
	1122, 1209, 1065, 1207, 1483, 0, 1739, 1065, 2122, 2125,
	2116, 1152, 1223, 1226, 1227, 1208, 1179, 0, 0, 1390,
	268, 0, 1114, 1059, 1065, 1207, 1739, 1111, 1472, 1739,
	1170, 1739, 1119, 0, 0, 1110, 1112, 1113, 1057, 1739,
	1111, 1320, 1122, 1466, 1513, 1171, 1133, 1118, 0, 269,
	1318, 1122, 1065, 0, 1065, 1739, 0, 1739, 1321, 1119,
	1319, 1136,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 589, 3, 595, 590, 3,
	600, 601, 593, 591, 605, 592, 602, 594, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 608, 3,
	581, 583, 582, 586, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 598, 3, 599, 596, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 606, 588, 607, 584,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 585, 57924, 587,
	57925, 597, 57926, 603, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1504
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1627
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1694
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1790
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1822
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1855
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1884
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1912
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1921
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1933
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1957
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1992
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2000
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2011
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2021
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2031
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2040
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2051
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2057
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2083
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2088
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2179
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2215
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2222
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2225
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2231
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2283
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2466
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2470
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2473
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2498
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2510
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2641
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2803
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2937
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			return unimplemented(sqllex, "alter function")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3087
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3096
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3102
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3107
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3112
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3117
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3122
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3145
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3153
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = nil
		}
	case 327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3229
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3296
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3297
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3298
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3425
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3443
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3450
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3455
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3474
		{
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "CREATE")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "create access method")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			return unimplemented(sqllex, "create cast")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3495
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3497
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplemented(sqllex, "create publication")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplemented(sqllex, "create rule")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "create server")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3514
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3517
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3518
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3521
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3522
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3525
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3526
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3535
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3538
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			return unimplemented(sqllex, "drop server")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3542
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3623
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3669
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3704
		{

			sqlVAL.union.val = nil
		}
	case 474:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3751
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			return helpWith(sqllex, "DELETE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3791
		{
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3817
		{
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "DROP")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3890
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4013
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4017
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4040
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4083
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4107
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4115
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "DELETE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "INSERT")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "DELETE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "INSERT")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4196
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4229
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4319
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4334
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "GRANT")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4397
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4409
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "RESET")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "RESET")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "USE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4484
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4490
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4491
		{
			return helpWith(sqllex, "USE")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4681
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4686
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{
			return unimplemented(sqllex, "set from current")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4717
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4722
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4731
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4736
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4753
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = tree.Low
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = tree.Normal
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = tree.High
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4929
		{
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4933
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4969
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.str = "client_encoding"
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.str = "timezone"
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5003
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5018
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5066
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5075
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5100
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5205
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5228
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = true
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = true
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = false
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5407
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5451
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5456
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5458
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5462
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = true
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = false
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5477
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5513
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5523
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = true
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = false
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5560
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5575
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5586
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5600
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5608
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5618
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5622
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5636
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5641
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5646
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5651
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5669
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5673
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5675
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5679
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5690
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5701
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5719
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5727
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5748
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5762
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5771
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5794
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5806
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5865
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5875
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5882
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5889
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6022
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6065
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6125
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6136
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6137
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6138
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6139
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6150
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6178
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6191
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6223
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6231
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6242
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6306
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6345
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6361
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6390
		{

			sqlVAL.union.val = nil
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.str = ""
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6406
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = nil
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6429
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6433
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6459
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6473
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6488
		{
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6489
		{
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6490
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6545
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6582
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6588
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6589
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6595
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6616
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.str = ""
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6759
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6863
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{

			sqlVAL.union.val = true
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = false
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6918
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6922
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6925
		{
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7025
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7036
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7063
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7078
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7143
		{
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7145
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7146
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7147
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7148
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7220
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7304
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7313
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7321
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7332
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7351
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7356
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7361
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7374
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7399
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7433
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.str = ""
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = true
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7467
		{

			sqlVAL.union.val = true
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = false
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7482
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7496
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7508
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7520
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7530
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7540
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = nil
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7650
		{
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7651
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7678
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7680
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7682
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7684
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7686
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7724
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7742
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7761
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7778
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7795
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7799
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = false
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = true
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = false
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = true
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = false
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7859
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7865
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7873
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.str = ""
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.str = ""
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7932
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7938
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8163
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8169
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8181
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8187
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8201
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8207
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8266
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = true
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = false
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = tree.Types
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8326
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8330
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8354
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8355
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8358
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8359
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8388
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8397
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8418
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8426
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8447
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8455
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8470
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8471
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8472
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8496
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8523
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8524
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8525
		{
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8545
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8546
		{
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8587
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8589
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8593
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8682
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.str = ""
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8705
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8710
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8727
		{

		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8742
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.str = ""
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.str = ""
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.str = ""
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.str = ""
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8797
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8810
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8811
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8840
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8858
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8871
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8920
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8947
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8951
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8989
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9021
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9042
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9057
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9201
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9236
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9238
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9299
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = true
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = false
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9412
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9413
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = nil
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9427
		{
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = true
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = false
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = false
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = true
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9456
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9457
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9460
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9461
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9502
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9523
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9528
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9554
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9587
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9643
		{
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9647
		{
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9681
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9713
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9715
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9730
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9752
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9778
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9794
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9806
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9825
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9866
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9876
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9911
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9922
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9952
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9985
		{
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9987
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = nil
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = true
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = false
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.str = tree.AstFull
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.str = tree.AstRight
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.str = tree.AstInner
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10105
		{
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.str = tree.AstHash
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.str = ""
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10179
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10197
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10203
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10209
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10219
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = true
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = false
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = true
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = false
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10268
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10281
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10289
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10290
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10308
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10318
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10338
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10387
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10399
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10400
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = types.Geography
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10449
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10457
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10491
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = nil
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = types.Int2
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = types.Int
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = types.Float4
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = types.Float
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10534
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10542
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10550
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = types.Bool
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10564
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = types.Float
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10583
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10589
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10611
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = types.String
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = true
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = false
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = types.Date
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10660
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10668
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10682
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10691
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10699
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10716
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = true
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = false
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = false
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = types.Interval
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10740
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10824
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = nil
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10869
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10929
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11078
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11086
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11199
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11265
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11287
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11395
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11504
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11530
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11539
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11554
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11584
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11595
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11596
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11611
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11620
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11686
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11834
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11843
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11862
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11867
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11877
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11886
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11887
		{
			return unimplemented(sqllex, "treat")
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11913
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11960
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.str = ""
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12049
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12062
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12130
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12159
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12235
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12526
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12576
		{
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12603
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12648
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12656
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12679
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12729
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12741
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12745
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12754
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12765
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12774
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12782
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12799
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12892
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12896
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12902
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12974
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12978
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13018
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13031
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13038
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.str = ""
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
